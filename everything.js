/*! For license information please see everything.js.LICENSE.txt */
(()=>{var __webpack_modules__={2190:e=>{e.exports=function(e,n,r){if(e.filter)return e.filter(n,r);if(null==e)throw new TypeError;if("function"!=typeof n)throw new TypeError;for(var o=[],a=0;a<e.length;a++)if(t.call(e,a)){var i=e[a];n.call(r,i,a,e)&&o.push(i)}return o};var t=Object.prototype.hasOwnProperty},16314:(e,t,n)=>{"use strict";var r=n(2190);e.exports=function(){return r(["BigInt64Array","BigUint64Array","Float32Array","Float64Array","Int16Array","Int32Array","Int8Array","Uint16Array","Uint32Array","Uint8Array","Uint8ClampedArray"],(function(e){return"function"==typeof n.g[e]}))}},85184:function(e,t,n){function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function i(e,t){return(i=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function s(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function c(e){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var u,l,d,p,h,f,g=n(17187);u=g.EventEmitter,d=n(16313),h=n(24356),l=function(){var e=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&i(e,t)}(f,e);var t,r,u,l,p=(u=f,l=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=c(u);if(l){var n=c(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return s(this,e)});function f(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return o(this,f),(e=p.call(this)).setMaxListeners(0),e.name=t,e.properties={},e.nodes=[],e.edges=[],e.initializers=[],e.inports={},e.outports={},e.groups=[],e.transaction={id:null,depth:0},e.caseSensitive=n.caseSensitive||!1,e}return t=f,(r=[{key:"getPortName",value:function(e){return this.caseSensitive?e:e.toLowerCase()}},{key:"startTransaction",value:function(e,t){if(this.transaction.id)throw Error("Nested transactions not supported");return this.transaction.id=e,this.transaction.depth=1,this.emit("startTransaction",e,t)}},{key:"endTransaction",value:function(e,t){if(!this.transaction.id)throw Error("Attempted to end non-existing transaction");return this.transaction.id=null,this.transaction.depth=0,this.emit("endTransaction",e,t)}},{key:"checkTransactionStart",value:function(){return this.transaction.id?"implicit"===this.transaction.id?this.transaction.depth+=1:void 0:this.startTransaction("implicit")}},{key:"checkTransactionEnd",value:function(){if("implicit"===this.transaction.id&&(this.transaction.depth-=1),0===this.transaction.depth)return this.endTransaction("implicit")}},{key:"setProperties",value:function(e){var t,n,r;for(n in this.checkTransactionStart(),t=d(this.properties),e)r=e[n],this.properties[n]=r;return this.emit("changeProperties",this.properties,t),this.checkTransactionEnd()}},{key:"addInport",value:function(e,t,n,r){if(this.getNode(t))return e=this.getPortName(e),this.checkTransactionStart(),this.inports[e]={process:t,port:this.getPortName(n),metadata:r},this.emit("addInport",e,this.inports[e]),this.checkTransactionEnd()}},{key:"removeInport",value:function(e){var t;if(e=this.getPortName(e),this.inports[e])return this.checkTransactionStart(),t=this.inports[e],this.setInportMetadata(e,{}),delete this.inports[e],this.emit("removeInport",e,t),this.checkTransactionEnd()}},{key:"renameInport",value:function(e,t){if(e=this.getPortName(e),t=this.getPortName(t),this.inports[e]&&t!==e)return this.checkTransactionStart(),this.inports[t]=this.inports[e],delete this.inports[e],this.emit("renameInport",e,t),this.checkTransactionEnd()}},{key:"setInportMetadata",value:function(e,t){var n,r,o;if(e=this.getPortName(e),this.inports[e]){for(r in this.checkTransactionStart(),n=d(this.inports[e].metadata),this.inports[e].metadata||(this.inports[e].metadata={}),t)null!=(o=t[r])?this.inports[e].metadata[r]=o:delete this.inports[e].metadata[r];return this.emit("changeInport",e,this.inports[e],n,t),this.checkTransactionEnd()}}},{key:"addOutport",value:function(e,t,n,r){if(this.getNode(t))return e=this.getPortName(e),this.checkTransactionStart(),this.outports[e]={process:t,port:this.getPortName(n),metadata:r},this.emit("addOutport",e,this.outports[e]),this.checkTransactionEnd()}},{key:"removeOutport",value:function(e){var t;if(e=this.getPortName(e),this.outports[e])return this.checkTransactionStart(),t=this.outports[e],this.setOutportMetadata(e,{}),delete this.outports[e],this.emit("removeOutport",e,t),this.checkTransactionEnd()}},{key:"renameOutport",value:function(e,t){if(e=this.getPortName(e),t=this.getPortName(t),this.outports[e])return this.checkTransactionStart(),this.outports[t]=this.outports[e],delete this.outports[e],this.emit("renameOutport",e,t),this.checkTransactionEnd()}},{key:"setOutportMetadata",value:function(e,t){var n,r,o;if(e=this.getPortName(e),this.outports[e]){for(r in this.checkTransactionStart(),n=d(this.outports[e].metadata),this.outports[e].metadata||(this.outports[e].metadata={}),t)null!=(o=t[r])?this.outports[e].metadata[r]=o:delete this.outports[e].metadata[r];return this.emit("changeOutport",e,this.outports[e],n,t),this.checkTransactionEnd()}}},{key:"addGroup",value:function(e,t,n){var r;return this.checkTransactionStart(),r={name:e,nodes:t,metadata:n},this.groups.push(r),this.emit("addGroup",r),this.checkTransactionEnd()}},{key:"renameGroup",value:function(e,t){var n,r,o,a;for(this.checkTransactionStart(),r=0,o=(a=this.groups).length;r<o;r++)(n=a[r])&&n.name===e&&(n.name=t,this.emit("renameGroup",e,t));return this.checkTransactionEnd()}},{key:"removeGroup",value:function(e){var t,n,r,o;for(this.checkTransactionStart(),n=0,r=(o=this.groups).length;n<r;n++)(t=o[n])&&t.name===e&&(this.setGroupMetadata(t.name,{}),this.groups.splice(this.groups.indexOf(t),1),this.emit("removeGroup",t));return this.checkTransactionEnd()}},{key:"setGroupMetadata",value:function(e,t){var n,r,o,a,i,s,c;for(this.checkTransactionStart(),o=0,i=(s=this.groups).length;o<i;o++)if((r=s[o])&&r.name===e){for(a in n=d(r.metadata),t)null!=(c=t[a])?r.metadata[a]=c:delete r.metadata[a];this.emit("changeGroup",r,n,t)}return this.checkTransactionEnd()}},{key:"addNode",value:function(e,t,n){var r;return this.checkTransactionStart(),n||(n={}),r={id:e,component:t,metadata:n},this.nodes.push(r),this.emit("addNode",r),this.checkTransactionEnd(),r}},{key:"removeNode",value:function(e){var t,n,r,o,a,i,s,c,u,l,d,p,h,f,g,m,v,y,b,w,_,x,k,P,S,C;if(y=this.getNode(e)){for(this.checkTransactionStart(),C=[],r=0,u=(_=this.edges).length;r<u;r++)(t=_[r]).from.node!==y.id&&t.to.node!==y.id||C.push(t);for(i=0,l=C.length;i<l;i++)t=C[i],this.removeEdge(t.from.node,t.from.port,t.to.node,t.to.port);for(C=[],s=0,d=(x=this.initializers).length;s<d;s++)(a=x[s]).to.node===y.id&&C.push(a);for(c=0,p=C.length;c<p;c++)a=C[c],this.removeInitial(a.to.node,a.to.port);for(w in C=[],k=this.inports)k[w].process===e&&C.push(w);for(m=0,h=C.length;m<h;m++)w=C[m],this.removeInport(w);for(w in C=[],P=this.outports)P[w].process===e&&C.push(w);for(v=0,f=C.length;v<f;v++)w=C[v],this.removeOutport(w);for(b=0,g=(S=this.groups).length;b<g;b++)(n=S[b])&&-1!==(o=n.nodes.indexOf(e))&&n.nodes.splice(o,1);return this.setNodeMetadata(e,{}),-1!==this.nodes.indexOf(y)&&this.nodes.splice(this.nodes.indexOf(y),1),this.emit("removeNode",y),this.checkTransactionEnd()}}},{key:"getNode",value:function(e){var t,n,r,o;for(t=0,n=(o=this.nodes).length;t<n;t++)if((r=o[t])&&r.id===e)return r;return null}},{key:"renameNode",value:function(e,t){var n,r,o,a,i,s,c,u,l,d,p,h,f,g,m,v,y,b;if(this.checkTransactionStart(),p=this.getNode(e)){for(p.id=t,o=0,u=(g=this.edges).length;o<u;o++)(n=g[o])&&(n.from.node===e&&(n.from.node=t),n.to.node===e&&(n.to.node=t));for(s=0,l=(m=this.initializers).length;s<l;s++)(a=m[s])&&a.to.node===e&&(a.to.node=t);for(f in v=this.inports)(h=v[f]).process===e&&(h.process=t);for(f in y=this.outports)(h=y[f]).process===e&&(h.process=t);for(c=0,d=(b=this.groups).length;c<d;c++)(r=b[c])&&-1!==(i=r.nodes.indexOf(e))&&(r.nodes[i]=t);return this.emit("renameNode",e,t),this.checkTransactionEnd()}}},{key:"setNodeMetadata",value:function(e,t){var n,r,o,a;if(o=this.getNode(e)){for(r in this.checkTransactionStart(),n=d(o.metadata),o.metadata||(o.metadata={}),t)null!=(a=t[r])?o.metadata[r]=a:delete o.metadata[r];return this.emit("changeNode",o,n,t),this.checkTransactionEnd()}}},{key:"addEdge",value:function(e,t,n,r){var o,a,i,s,c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};for(t=this.getPortName(t),r=this.getPortName(r),a=0,i=(s=this.edges).length;a<i;a++)if((o=s[a]).from.node===e&&o.from.port===t&&o.to.node===n&&o.to.port===r)return;if(this.getNode(e)&&this.getNode(n))return this.checkTransactionStart(),o={from:{node:e,port:t},to:{node:n,port:r},metadata:c},this.edges.push(o),this.emit("addEdge",o),this.checkTransactionEnd(),o}},{key:"addEdgeIndex",value:function(e,t,n,r,o,a){var i,s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:{};if(this.getNode(e)&&this.getNode(r))return t=this.getPortName(t),o=this.getPortName(o),null===a&&(a=void 0),null===n&&(n=void 0),s||(s={}),this.checkTransactionStart(),i={from:{node:e,port:t,index:n},to:{node:r,port:o,index:a},metadata:s},this.edges.push(i),this.emit("addEdge",i),this.checkTransactionEnd(),i}},{key:"removeEdge",value:function(e,t,n,r){var o,a,i,s,c,u,l,d,p,h,f,g;if(this.checkTransactionStart(),t=this.getPortName(t),r=this.getPortName(r),g=[],f=[],n&&r)for(i=a=0,u=(p=this.edges).length;a<u;i=++a)(o=p[i]).from.node===e&&o.from.port===t&&o.to.node===n&&o.to.port===r?(this.setEdgeMetadata(o.from.node,o.from.port,o.to.node,o.to.port,{}),g.push(o)):f.push(o);else for(i=s=0,l=(h=this.edges).length;s<l;i=++s)(o=h[i]).from.node===e&&o.from.port===t||o.to.node===e&&o.to.port===t?(this.setEdgeMetadata(o.from.node,o.from.port,o.to.node,o.to.port,{}),g.push(o)):f.push(o);for(this.edges=f,c=0,d=g.length;c<d;c++)o=g[c],this.emit("removeEdge",o);return this.checkTransactionEnd()}},{key:"getEdge",value:function(e,t,n,r){var o,a,i,s,c;for(t=this.getPortName(t),r=this.getPortName(r),i=a=0,s=(c=this.edges).length;a<s;i=++a)if((o=c[i])&&o.from.node===e&&o.from.port===t&&o.to.node===n&&o.to.port===r)return o;return null}},{key:"setEdgeMetadata",value:function(e,t,n,r,o){var a,i,s,c;if(i=this.getEdge(e,t,n,r)){for(s in this.checkTransactionStart(),a=d(i.metadata),i.metadata||(i.metadata={}),o)null!=(c=o[s])?i.metadata[s]=c:delete i.metadata[s];return this.emit("changeEdge",i,a,o),this.checkTransactionEnd()}}},{key:"addInitial",value:function(e,t,n,r){var o;if(this.getNode(t))return n=this.getPortName(n),this.checkTransactionStart(),o={from:{data:e},to:{node:t,port:n},metadata:r},this.initializers.push(o),this.emit("addInitial",o),this.checkTransactionEnd(),o}},{key:"addInitialIndex",value:function(e,t,n,r,o){var a;if(this.getNode(t))return null===r&&(r=void 0),n=this.getPortName(n),this.checkTransactionStart(),a={from:{data:e},to:{node:t,port:n,index:r},metadata:o},this.initializers.push(a),this.emit("addInitial",a),this.checkTransactionEnd(),a}},{key:"addGraphInitial",value:function(e,t,n){var r;if(r=this.inports[t])return this.addInitial(e,r.process,r.port,n)}},{key:"addGraphInitialIndex",value:function(e,t,n,r){var o;if(o=this.inports[t])return this.addInitialIndex(e,o.process,o.port,n,r)}},{key:"removeInitial",value:function(e,t){var n,r,o,a,i,s,c,u,l;for(t=this.getPortName(t),this.checkTransactionStart(),l=[],u=[],o=r=0,i=(c=this.initializers).length;r<i;o=++r)(n=c[o]).to.node===e&&n.to.port===t?l.push(n):u.push(n);for(this.initializers=u,a=0,s=l.length;a<s;a++)n=l[a],this.emit("removeInitial",n);return this.checkTransactionEnd()}},{key:"removeGraphInitial",value:function(e){var t;if(t=this.inports[e])return this.removeInitial(t.process,t.port)}},{key:"toDOT",value:function(){var e,t,n,r,o,a,i,s,c,u,l,d,p,h,f,g,m;for(e=function(e){return e.replace(/\s*/g,"")},t=function(e){return e.replace(/\./g,"")},r="digraph {\n",a=0,l=(f=this.nodes).length;a<l;a++)h=f[a],r+="    ".concat(e(h.id)," [label=").concat(h.id," shape=box]\n");for(i=c=0,d=(g=this.initializers).length;c<d;i=++c)n="function"==typeof(s=g[i]).from.data?"Function":s.from.data,r+="    data".concat(i," [label=\"'").concat(n,"'\" shape=plaintext]\n"),r+="    data".concat(i," -> ").concat(e(s.to.node),"[headlabel=").concat(t(s.to.port)," labelfontcolor=blue labelfontsize=8.0]\n");for(u=0,p=(m=this.edges).length;u<p;u++)o=m[u],r+="    ".concat(e(o.from.node)," -> ").concat(e(o.to.node),"[taillabel=").concat(t(o.from.port)," headlabel=").concat(t(o.to.port)," labelfontcolor=blue labelfontsize=8.0]\n");return r+"}"}},{key:"toYUML",value:function(){var e,t,n,r,o,a,i,s,c;for(c=[],t=0,o=(i=this.initializers).length;t<o;t++)n=i[t],c.push("(start)[".concat(n.to.port,"]->(").concat(n.to.node,")"));for(r=0,a=(s=this.edges).length;r<a;r++)e=s[r],c.push("(".concat(e.from.node,")[").concat(e.from.port,"]->(").concat(e.to.node,")"));return c.join(",")}},{key:"toJSON",value:function(){var e,t,n,r,o,a,i,s,c,u,l,d,p,h,f,g,m,v,y,b,w,_,x,k,P,S;for(m in s={caseSensitive:this.caseSensitive,properties:{},inports:{},outports:{},groups:[],processes:{},connections:[]},this.name&&(s.properties.name=this.name),y=this.properties)S=y[m],s.properties[m]=S;for(v in b=this.inports)g=b[v],s.inports[v]=g;for(v in w=this.outports)g=w[v],s.outports[v]=g;for(o=0,l=(_=this.groups).length;o<l;o++)r={name:(n=_[o]).name,nodes:n.nodes},Object.keys(n.metadata).length&&(r.metadata=n.metadata),s.groups.push(r);for(i=0,d=(x=this.nodes).length;i<d;i++)f=x[i],s.processes[f.id]={component:f.component},f.metadata&&(s.processes[f.id].metadata=f.metadata);for(c=0,p=(k=this.edges).length;c<p;c++)e={src:{process:(t=k[c]).from.node,port:t.from.port,index:t.from.index},tgt:{process:t.to.node,port:t.to.port,index:t.to.index}},Object.keys(t.metadata).length&&(e.metadata=t.metadata),s.connections.push(e);for(u=0,h=(P=this.initializers).length;u<h;u++)a=P[u],s.connections.push({data:a.from.data,tgt:{process:a.to.node,port:a.to.port,index:a.to.index}});return s}},{key:"save",value:function(e,t){var r;return h.isBrowser()?t(new Error("Saving graphs not supported on browser")):(r=JSON.stringify(this.toJSON(),null,4),e.match(/\.json$/)||(e="".concat(e,".json")),n(12993).writeFile(e,r,"utf-8",(function(n,r){return n?t(n):t(null,e)})))}}])&&a(t.prototype,r),f}(u);return e.prototype.name="",e.prototype.caseSensitive=!1,e.prototype.properties={},e.prototype.nodes=[],e.prototype.edges=[],e.prototype.initializers=[],e.prototype.inports={},e.prototype.outports={},e.prototype.groups=[],e}.call(this),t.Graph=l,t.createGraph=function(e,t){return new l(e,t)},t.loadJSON=function(e,t){var n,r,o,a,i,s,c,u,d,p,h,f,g,m,v,y,b,w,_,x,k,P=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};for(g in"string"==typeof e&&(e=JSON.parse(e)),e.properties||(e.properties={}),e.processes||(e.processes={}),e.connections||(e.connections=[]),n=e.caseSensitive||!1,(a=new l(e.properties.name,{caseSensitive:n})).startTransaction("loadJSON",P),f={},v=e.properties)k=v[g],"name"!==g&&(f[g]=k);for(c in a.setProperties(f),y=e.processes)(o=y[c]).metadata||(o.metadata={}),a.addNode(c,o.component,o.metadata);for(s=0,d=(b=e.connections).length;s<d;s++)P=(r=b[s]).metadata?r.metadata:{},void 0===r.data?"number"!=typeof r.src.index&&"number"!=typeof r.tgt.index?a.addEdge(r.src.process,a.getPortName(r.src.port),r.tgt.process,a.getPortName(r.tgt.port),P):a.addEdgeIndex(r.src.process,a.getPortName(r.src.port),r.src.index,r.tgt.process,a.getPortName(r.tgt.port),r.tgt.index,P):"number"==typeof r.tgt.index?a.addInitialIndex(r.data,r.tgt.process,a.getPortName(r.tgt.port),r.tgt.index,P):a.addInitial(r.data,r.tgt.process,a.getPortName(r.tgt.port),P);if(e.inports)for(m in w=e.inports)h=w[m],a.addInport(m,h.process,a.getPortName(h.port),h.metadata);if(e.outports)for(m in _=e.outports)h=_[m],a.addOutport(m,h.process,a.getPortName(h.port),h.metadata);if(e.groups)for(u=0,p=(x=e.groups).length;u<p;u++)i=x[u],a.addGroup(i.name,i.nodes,i.metadata||{});return a.endTransaction("loadJSON"),t(null,a)},t.loadFBP=function(e,r){var o,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];try{o=n(96741).parse(e,{caseSensitive:i})}catch(e){return r(e)}return t.loadJSON(o,r,a)},t.loadHTTP=function(e,t){var n;return(n=new XMLHttpRequest).onreadystatechange=function(){if(4===n.readyState)return 200!==n.status?t(new Error("Failed to load ".concat(e,": HTTP ").concat(n.status))):t(null,n.responseText)},n.open("GET",e,!0),n.send()},t.loadFile=function(e,r){var o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(!h.isBrowser())return n(12993).readFile(e,"utf-8",(function(n,o){var i;return n?r(n):"fbp"===e.split(".").pop()?t.loadFBP(o,r,{},a):(i=JSON.parse(o),t.loadJSON(i,r,{}))}));t.loadHTTP(e,(function(n,a){var i;return n?r(n):"fbp"===e.split(".").pop()?t.loadFBP(a,r,o):(i=JSON.parse(a),t.loadJSON(i,r,o))}))},f=function(e){var t,n,r,o,a,i,s,c,u,l,p,h,f,g,m,v,y,b,w,_;for(r=0,c=(g=d(e.groups).reverse()).length;r<c;r++)null!=(n=g[r])&&e.removeGroup(n.name);for(f in m=d(e.outports))m[f],e.removeOutport(f);for(f in v=d(e.inports))v[f],e.removeInport(f);for(e.setProperties({}),a=0,u=(y=d(e.initializers).reverse()).length;a<u;a++)o=y[a],e.removeInitial(o.to.node,o.to.port);for(i=0,l=(b=d(e.edges).reverse()).length;i<l;i++)t=b[i],e.removeEdge(t.from.node,t.from.port,t.to.node,t.to.port);for(_=[],s=0,p=(w=d(e.nodes).reverse()).length;s<p;s++)h=w[s],_.push(e.removeNode(h.id));return _},p=function(e,t){var n,r,o,a,i,s,c,u,l,d,p,h,g,m,v,y,b,w,_,x,k;for(f(e),o=0,u=(v=t.nodes).length;o<u;o++)h=v[o],e.addNode(h.id,h.component,h.metadata);for(i=0,l=(y=t.edges).length;i<l;i++)n=y[i],e.addEdge(n.from.node,n.from.port,n.to.node,n.to.port,n.metadata);for(s=0,d=(b=t.initializers).length;s<d;s++)a=b[s],e.addInitial(a.from.data,a.to.node,a.to.port,a.metadata);for(m in e.setProperties(t.properties),w=t.inports)g=w[m],e.addInport(m,g.process,g.port,g.metadata);for(m in _=t.outports)g=_[m],e.addOutport(m,g.process,g.port,g.metadata);for(k=[],c=0,p=(x=t.groups).length;c<p;c++)r=x[c],k.push(e.addGroup(r.name,r.nodes,r.metadata));return k},t.equivalent=function(e,t){return JSON.stringify(e)===JSON.stringify(t)},t.mergeResolveTheirs=p},19671:function(e,t,n){function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t,n){return(o="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=h(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function s(e,t,n){return t&&i(e.prototype,t),n&&i(e,n),e}function c(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&u(e,t)}function u(e,t){return(u=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function l(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=h(e);if(t){var o=h(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return d(this,n)}}function d(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?p(e):t}function p(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function h(e){return(h=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var f,g,m,v,y,b,w,_=function(e,t){if(!(e instanceof t))throw new Error("Bound instance method accessed before binding")},x=n(17187);f=x.EventEmitter,b=n(16313),w=function(e){var t;switch(t=e.args,e.cmd){case"addNode":return"".concat(t.id,"(").concat(t.component,")");case"removeNode":return"DEL ".concat(t.id,"(").concat(t.component,")");case"renameNode":return"RENAME ".concat(t.oldId," ").concat(t.newId);case"changeNode":return"META ".concat(t.id);case"addEdge":return"".concat(t.from.node," ").concat(t.from.port," -> ").concat(t.to.port," ").concat(t.to.node);case"removeEdge":return"".concat(t.from.node," ").concat(t.from.port," -X> ").concat(t.to.port," ").concat(t.to.node);case"changeEdge":return"META ".concat(t.from.node," ").concat(t.from.port," -> ").concat(t.to.port," ").concat(t.to.node);case"addInitial":return"'".concat(t.from.data,"' -> ").concat(t.to.port," ").concat(t.to.node);case"removeInitial":return"'".concat(t.from.data,"' -X> ").concat(t.to.port," ").concat(t.to.node);case"startTransaction":return">>> ".concat(e.rev,": ").concat(t.id);case"endTransaction":return"<<< ".concat(e.rev,": ").concat(t.id);case"changeProperties":return"PROPERTIES";case"addGroup":return"GROUP ".concat(t.name);case"renameGroup":return"RENAME GROUP ".concat(t.oldName," ").concat(t.newName);case"removeGroup":return"DEL GROUP ".concat(t.name);case"changeGroup":return"META GROUP ".concat(t.name);case"addInport":return"INPORT ".concat(t.name);case"removeInport":return"DEL INPORT ".concat(t.name);case"renameInport":return"RENAME INPORT ".concat(t.oldId," ").concat(t.newId);case"changeInport":return"META INPORT ".concat(t.name);case"addOutport":return"OUTPORT ".concat(t.name);case"removeOutport":return"DEL OUTPORT ".concat(t.name);case"renameOutport":return"RENAME OUTPORT ".concat(t.oldId," ").concat(t.newId);case"changeOutport":return"META OUTPORT ".concat(t.name);default:throw new Error("Unknown journal entry: ".concat(e.cmd))}},y=function(e,t){var n,r,o;for(n in r={},e)o=e[n],r[n]=null;for(n in t)o=t[n],r[n]=o;return r},m=function(){var e=function(e){c(n,e);var t=l(n);function n(e){var r;return a(this,n),(r=t.call(this)).graph=e,r.lastRevision=0,r}return s(n,[{key:"putTransaction",value:function(e,t){return e>this.lastRevision&&(this.lastRevision=e),this.emit("transaction",e)}},{key:"fetchTransaction",value:function(e,t){}}]),n}(f);return e.prototype.lastRevision=0,e}.call(this),v=function(e){c(n,e);var t=l(n);function n(e){var r;return a(this,n),(r=t.call(this,e)).transactions=[],r}return s(n,[{key:"putTransaction",value:function(e,t){return o(h(n.prototype),"putTransaction",this).call(this,e,t),this.transactions[e]=t}},{key:"fetchTransaction",value:function(e){return this.transactions[e]}}]),n}(m),g=function(){var e=function(e){c(r,e);var t=l(r);function r(e,n,o){var i,s,c,u,l,d,h,f,g,m,y,b,w,_,x,k,P,S,C,D,E;if(a(this,r),(i=t.call(this)).startTransaction=i.startTransaction.bind(p(i)),i.endTransaction=i.endTransaction.bind(p(i)),i.graph=e,i.entries=[],i.subscribed=!0,i.store=o||new v(i.graph),0===i.store.transactions.length){for(i.currentRevision=-1,i.startTransaction("initial",n),l=0,f=(x=i.graph.nodes).length;l<f;l++)_=x[l],i.appendCommand("addNode",_);for(h=0,g=(k=i.graph.edges).length;h<g;h++)s=k[h],i.appendCommand("addEdge",s);for(b=0,m=(P=i.graph.initializers).length;b<m;b++)u=P[b],i.appendCommand("addInitial",u);for(d in Object.keys(i.graph.properties).length>0&&i.appendCommand("changeProperties",i.graph.properties,{}),S=i.graph.inports)E=S[d],i.appendCommand("addInport",{name:d,port:E});for(d in C=i.graph.outports)E=C[d],i.appendCommand("addOutport",{name:d,port:E});for(w=0,y=(D=i.graph.groups).length;w<y;w++)c=D[w],i.appendCommand("addGroup",c);i.endTransaction("initial",n)}else i.currentRevision=i.store.lastRevision;return i.graph.on("addNode",(function(e){return i.appendCommand("addNode",e)})),i.graph.on("removeNode",(function(e){return i.appendCommand("removeNode",e)})),i.graph.on("renameNode",(function(e,t){var n;return n={oldId:e,newId:t},i.appendCommand("renameNode",n)})),i.graph.on("changeNode",(function(e,t){return i.appendCommand("changeNode",{id:e.id,new:e.metadata,old:t})})),i.graph.on("addEdge",(function(e){return i.appendCommand("addEdge",e)})),i.graph.on("removeEdge",(function(e){return i.appendCommand("removeEdge",e)})),i.graph.on("changeEdge",(function(e,t){return i.appendCommand("changeEdge",{from:e.from,to:e.to,new:e.metadata,old:t})})),i.graph.on("addInitial",(function(e){return i.appendCommand("addInitial",e)})),i.graph.on("removeInitial",(function(e){return i.appendCommand("removeInitial",e)})),i.graph.on("changeProperties",(function(e,t){return i.appendCommand("changeProperties",{new:e,old:t})})),i.graph.on("addGroup",(function(e){return i.appendCommand("addGroup",e)})),i.graph.on("renameGroup",(function(e,t){return i.appendCommand("renameGroup",{oldName:e,newName:t})})),i.graph.on("removeGroup",(function(e){return i.appendCommand("removeGroup",e)})),i.graph.on("changeGroup",(function(e,t){return i.appendCommand("changeGroup",{name:e.name,new:e.metadata,old:t})})),i.graph.on("addExport",(function(e){return i.appendCommand("addExport",e)})),i.graph.on("removeExport",(function(e){return i.appendCommand("removeExport",e)})),i.graph.on("addInport",(function(e,t){return i.appendCommand("addInport",{name:e,port:t})})),i.graph.on("removeInport",(function(e,t){return i.appendCommand("removeInport",{name:e,port:t})})),i.graph.on("renameInport",(function(e,t){return i.appendCommand("renameInport",{oldId:e,newId:t})})),i.graph.on("changeInport",(function(e,t,n){return i.appendCommand("changeInport",{name:e,new:t.metadata,old:n})})),i.graph.on("addOutport",(function(e,t){return i.appendCommand("addOutport",{name:e,port:t})})),i.graph.on("removeOutport",(function(e,t){return i.appendCommand("removeOutport",{name:e,port:t})})),i.graph.on("renameOutport",(function(e,t){return i.appendCommand("renameOutport",{oldId:e,newId:t})})),i.graph.on("changeOutport",(function(e,t,n){return i.appendCommand("changeOutport",{name:e,new:t.metadata,old:n})})),i.graph.on("startTransaction",(function(e,t){return i.startTransaction(e,t)})),i.graph.on("endTransaction",(function(e,t){return i.endTransaction(e,t)})),i}return s(r,[{key:"startTransaction",value:function(e,t){if(_(this,r),this.subscribed){if(this.entries.length>0)throw Error("Inconsistent @entries");return this.currentRevision++,this.appendCommand("startTransaction",{id:e,metadata:t},this.currentRevision)}}},{key:"endTransaction",value:function(e,t){if(_(this,r),this.subscribed)return this.appendCommand("endTransaction",{id:e,metadata:t},this.currentRevision),this.store.putTransaction(this.currentRevision,this.entries),this.entries=[]}},{key:"appendCommand",value:function(e,t,n){var r;if(this.subscribed)return r={cmd:e,args:b(t)},null!=n&&(r.rev=n),this.entries.push(r)}},{key:"executeEntry",value:function(e){var t;switch(t=e.args,e.cmd){case"addNode":return this.graph.addNode(t.id,t.component);case"removeNode":return this.graph.removeNode(t.id);case"renameNode":return this.graph.renameNode(t.oldId,t.newId);case"changeNode":return this.graph.setNodeMetadata(t.id,y(t.old,t.new));case"addEdge":return this.graph.addEdge(t.from.node,t.from.port,t.to.node,t.to.port);case"removeEdge":return this.graph.removeEdge(t.from.node,t.from.port,t.to.node,t.to.port);case"changeEdge":return this.graph.setEdgeMetadata(t.from.node,t.from.port,t.to.node,t.to.port,y(t.old,t.new));case"addInitial":return this.graph.addInitial(t.from.data,t.to.node,t.to.port);case"removeInitial":return this.graph.removeInitial(t.to.node,t.to.port);case"startTransaction":case"endTransaction":return null;case"changeProperties":return this.graph.setProperties(t.new);case"addGroup":return this.graph.addGroup(t.name,t.nodes,t.metadata);case"renameGroup":return this.graph.renameGroup(t.oldName,t.newName);case"removeGroup":return this.graph.removeGroup(t.name);case"changeGroup":return this.graph.setGroupMetadata(t.name,y(t.old,t.new));case"addInport":return this.graph.addInport(t.name,t.port.process,t.port.port,t.port.metadata);case"removeInport":return this.graph.removeInport(t.name);case"renameInport":return this.graph.renameInport(t.oldId,t.newId);case"changeInport":return this.graph.setInportMetadata(t.name,y(t.old,t.new));case"addOutport":return this.graph.addOutport(t.name,t.port.process,t.port.port,t.port.metadata(t.name));case"removeOutport":return this.graph.removeOutport;case"renameOutport":return this.graph.renameOutport(t.oldId,t.newId);case"changeOutport":return this.graph.setOutportMetadata(t.name,y(t.old,t.new));default:throw new Error("Unknown journal entry: ".concat(e.cmd))}}},{key:"executeEntryInversed",value:function(e){var t;switch(t=e.args,e.cmd){case"addNode":return this.graph.removeNode(t.id);case"removeNode":return this.graph.addNode(t.id,t.component);case"renameNode":return this.graph.renameNode(t.newId,t.oldId);case"changeNode":return this.graph.setNodeMetadata(t.id,y(t.new,t.old));case"addEdge":return this.graph.removeEdge(t.from.node,t.from.port,t.to.node,t.to.port);case"removeEdge":return this.graph.addEdge(t.from.node,t.from.port,t.to.node,t.to.port);case"changeEdge":return this.graph.setEdgeMetadata(t.from.node,t.from.port,t.to.node,t.to.port,y(t.new,t.old));case"addInitial":return this.graph.removeInitial(t.to.node,t.to.port);case"removeInitial":return this.graph.addInitial(t.from.data,t.to.node,t.to.port);case"startTransaction":case"endTransaction":return null;case"changeProperties":return this.graph.setProperties(t.old);case"addGroup":return this.graph.removeGroup(t.name);case"renameGroup":return this.graph.renameGroup(t.newName,t.oldName);case"removeGroup":return this.graph.addGroup(t.name,t.nodes,t.metadata);case"changeGroup":return this.graph.setGroupMetadata(t.name,y(t.new,t.old));case"addInport":return this.graph.removeInport(t.name);case"removeInport":return this.graph.addInport(t.name,t.port.process,t.port.port,t.port.metadata);case"renameInport":return this.graph.renameInport(t.newId,t.oldId);case"changeInport":return this.graph.setInportMetadata(t.name,y(t.new,t.old));case"addOutport":return this.graph.removeOutport(t.name);case"removeOutport":return this.graph.addOutport(t.name,t.port.process,t.port.port,t.port.metadata);case"renameOutport":return this.graph.renameOutport(t.newId,t.oldId);case"changeOutport":return this.graph.setOutportMetadata(t.name,y(t.new,t.old));default:throw new Error("Unknown journal entry: ".concat(e.cmd))}}},{key:"moveToRevision",value:function(e){var t,n,r,o,a,i,s,c,u,l,d,p,h;if(e!==this.currentRevision){if(this.subscribed=!1,e>this.currentRevision)for(u=o=l=this.currentRevision+1,d=e;l<=d?o<=d:o>=d;u=l<=d?++o:--o)for(a=0,i=(p=this.store.fetchTransaction(u)).length;a<i;a++)n=p[a],this.executeEntry(n);else for(u=s=this.currentRevision,h=e+1;s>=h;u=s+=-1)for(r=c=(t=this.store.fetchTransaction(u)).length-1;c>=0;r=c+=-1)this.executeEntryInversed(t[r]);return this.currentRevision=e,this.subscribed=!0}}},{key:"undo",value:function(){if(this.canUndo())return this.moveToRevision(this.currentRevision-1)}},{key:"canUndo",value:function(){return this.currentRevision>0}},{key:"redo",value:function(){if(this.canRedo())return this.moveToRevision(this.currentRevision+1)}},{key:"canRedo",value:function(){return this.currentRevision<this.store.lastRevision}},{key:"toPrettyString",value:function(e,t){var n,r,o,a,i,s,c,u,l;for(s=[],c=o=u=e|=0,l=t|=this.store.lastRevision;u<=l?o<l:o>l;c=u<=l?++o:--o)for(a=0,i=(n=this.store.fetchTransaction(c)).length;a<i;a++)r=n[a],s.push(w(r));return s.join("\n")}},{key:"toJSON",value:function(e,t){var n,r,o,a,i,s,c,u;for(n=[],s=o=e|=0,c=t|=this.store.lastRevision;o<c;s=o+=1)for(a=0,i=(u=this.store.fetchTransaction(s)).length;a<i;a++)r=u[a],n.push(w(r));return n}},{key:"save",value:function(e,t){var r;return r=JSON.stringify(this.toJSON(),null,4),n(12993).writeFile("".concat(e,".json"),r,"utf-8",(function(n,r){if(n)throw n;return t(e)}))}}]),r}(f);return e.prototype.graph=null,e.prototype.entries=[],e.prototype.subscribed=!0,e}.call(this),t.Journal=g,t.JournalStore=m,t.MemoryJournalStore=v},24356:(e,t,n)=>{var r=n(34155);t.isBrowser=function(){return void 0===r||!r.execPath||!r.execPath.match(/node|iojs/)},t.deprecated=function(e){if(!t.isBrowser()){if(r.env.NOFLO_FATAL_DEPRECATED)throw new Error(e);return console.warn(e)}if(window.NOFLO_FATAL_DEPRECATED)throw new Error(e);console.warn(e)}},50021:(e,t,n)=>{function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var o,a,i,s,c,u,l=[].indexOf;u={Runtime:n(23566),Graph:n(95670),Network:n(29009),Component:n(50326)},a=n(11227)("noflo-runtime-base:messaging:receive"),i=n(11227)("noflo-runtime-base:messaging:receive:payload"),s=n(11227)("noflo-runtime-base:messaging:send"),c=n(11227)("noflo-runtime-base:messaging:send:payload"),o=function(){function e(t){var n;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.options=t,this.options||(this.options={}),this.version="0.7",this.component=new u.Component(this),this.graph=new u.Graph(this),this.network=new u.Network(this),this.runtime=new u.Runtime(this),this.context=null,null!=this.options.defaultGraph&&(this.options.defaultGraph.baseDir=this.options.baseDir,n=this._getGraphName(this.options.defaultGraph),this.context="none",this.graph.registerGraph(n,this.options.defaultGraph),this.runtime.setMainGraph(n,this.options.defaultGraph),this.network._startNetwork(this.options.defaultGraph,n,this.context,(function(e){if(e)throw e}))),null!=this.options.captureOutput&&this.options.captureOutput&&this.startCapture(),this.options.capabilities||(this.options.capabilities=["protocol:graph","protocol:component","protocol:network","protocol:runtime","component:setsource","component:getsource","graph:readonly","network:data","network:control","network:status"]),this.options.defaultPermissions||(this.options.defaultPermissions=[]),this.options.permissions||(this.options.permissions={})}var t,n;return t=e,(n=[{key:"_getGraphName",value:function(e){var t,n;return n=this.options.namespace||"default",t=e.name||"main","".concat(n,"/").concat(t)}},{key:"canDo",value:function(e,t){var n,r;return n="string"==typeof e?[e]:e,r=this.getPermitted(t),n.filter((function(e){return l.call(r,e)>=0})).length>0}},{key:"canInput",value:function(e,t,n){if("graph"===e)return this.canDo(["protocol:graph"],n);switch("".concat(e,":").concat(t)){case"component:list":return this.canDo(["protocol:component"],n);case"component:getsource":return this.canDo(["component:getsource"],n);case"component:source":return this.canDo(["component:setsource"],n);case"network:edges":return this.canDo(["network:data","protocol:network"],n);case"network:start":case"network:stop":case"network:debug":return this.canDo(["network:control","protocol:network"],n);case"network:getstatus":return this.canDo(["network:status","network:control","protocol:network"],n);case"runtime:getruntime":return!0;case"runtime:packet":return this.canDo(["protocol:runtime"],n)}return!1}},{key:"getPermitted",value:function(e){return e?this.options.permissions[e]?this.options.permissions[e]:[]:this.options.defaultPermissions}},{key:"send",value:function(e,t,n,r){return s("".concat(e," ").concat(t)),c(n)}},{key:"sendAll",value:function(e,t,n,r){}},{key:"receive",value:function(e,t,n,r){if(n||(n={}),a("".concat(e," ").concat(t)),i(n),this.canInput(e,t,n.secret))switch(this.context=r,e){case"runtime":return this.runtime.receive(t,n,r);case"graph":return this.graph.receive(t,n,r);case"network":return this.network.receive(t,n,r);case"component":return this.component.receive(t,n,r);default:return this.send(e,"error",new Error("Protocol ".concat(e," is not supported")),r)}else this.send(e,"error",new Error("".concat(e,":").concat(t," is not permitted")),r)}}])&&r(t.prototype,n),e}(),e.exports=o,e.exports.trace=n(53828),e.exports.direct=n(55733)},55733:(e,t,n)=>{var r,o,a,i;n(34155);function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function c(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function l(e,t,n){return t&&u(e.prototype,t),n&&u(e,n),e}function d(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&p(e,t)}function p(e,t){return(p=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function h(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=g(e);if(t){var o=g(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return f(this,n)}}function f(e,t){return!t||"object"!==s(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function g(e){return(g=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}r=n(50021),i=n(17187).EventEmitter,a=function(e){d(n,e);var t=h(n);function n(e){var r;return c(this,n),(r=t.call(this,e)).clients=[],r}return l(n,[{key:"_connect",value:function(e){var t=this;return this.clients.push(e),e.on("send",(function(n){return t._receive(n,{client:e})}))}},{key:"_disconnect",value:function(e){if(-1!==this.clients.indexOf(e))return this.clients.splice(this.clients.indexOf(e),1),e.removeAllListeners("send")}},{key:"_receive",value:function(e,t){return this.receive(e.protocol,e.command,e.payload,t)}},{key:"send",value:function(e,t,n,r){var o;if(r.client)return o={protocol:e,command:t,payload:n},r.client._receive(o)}},{key:"sendAll",value:function(e,t,n){var r,o,a,i,s,c;for(i={protocol:e,command:t,payload:n},c=[],o=0,a=(s=this.clients).length;o<a;o++)r=s[o],c.push(r._receive(i));return c}}]),n}(r),o=function(e){d(n,e);var t=h(n);function n(e,r){var o;return c(this,n),(o=t.call(this)).name=r,o.runtime=e,o.name||(o.name="Unnamed client"),o}return l(n,[{key:"connect",value:function(){return this.runtime._connect(this)}},{key:"disconnect",value:function(){return this.runtime._disconnect(this)}},{key:"send",value:function(e,t,n){var r;return r={protocol:e,command:t,payload:n},this.emit("send",r)}},{key:"_receive",value:function(e){var t=this;return setTimeout((function(){return t.emit("message",e)}),1)}}]),n}(i),t.Client=o,t.Runtime=a},50326:function(e,t,n){function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function a(e,t){return(a=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function i(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var c,u,l,d,p;d=n(76445),l=n(20296),u=n(17187).EventEmitter,p=n(62438),c=function(){var e=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&a(e,t)}(h,e);var t,n,r,c,u=(r=h,c=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=s(r);if(c){var n=s(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return i(this,e)});function h(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,h),(t=u.call(this)).transport=e,t}return t=h,(n=[{key:"send",value:function(e,t,n){return this.transport.send("component",e,t,n)}},{key:"receive",value:function(e,t,n){switch(e){case"list":return this.listComponents(t,n);case"getsource":return this.getSource(t,n);case"source":return this.setSource(t,n);default:return this.send("error",new Error("component:".concat(e," not supported")),n)}}},{key:"getLoader",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return this.loaders[e]||(this.loaders[e]=new d.ComponentLoader(e,t)),this.loaders[e]}},{key:"listComponents",value:function(e,t){var n,r,o=this;return n=this.transport.options.baseDir,(r=this.getLoader(n,this.transport.options)).listComponents((function(e,n){var a,i;if(!e)return a=Object.keys(n),i=0,a.forEach((function(e){return o.processComponent(r,e,t,(function(e){if(!(++i<a.length))return o.send("componentsready",i,t)}))}));o.send("error",e,t)}))}},{key:"getSource",value:function(e,t){var n,r=this;return n=this.transport.options.baseDir,this.getLoader(n,this.transport.options).getSource(e.name,(function(n,o){var a,i;return n?null==(a=r.transport.graph.graphs[e.name])?void r.send("error",n,t):(i=p.parseName(e.name),r.send("source",{name:i.name,library:i.library,code:JSON.stringify(a.toJSON()),language:"json"},t)):r.send("source",o,t)}))}},{key:"setSource",value:function(e,t){var n,r,o=this;return n=this.transport.options.baseDir,(r=this.getLoader(n,this.transport.options)).setSource(e.library,e.name,e.code,e.language,(function(n){if(!n)return o.emit("updated",{name:e.name,library:e.library,code:e.code,language:e.language}),o.processComponent(r,r.normalizeName(e.library,e.name),t);o.send("error",n,t)}))}},{key:"processComponent",value:function(e,t,n,r){var o=this;return r||(r=function(){}),e.load(t,(function(e,a){if(!a){if(e instanceof Error)return o.send("error",e,n),r(e);a=e}if(a.isReady())return o.sendComponent(t,a,n),r(null);a.once("ready",(function(){return o.sendComponent(t,a,n),r(null)}))}),!0)}},{key:"processPort",value:function(e,t){var n,r;return n={id:e,type:t.getDataType?t.getDataType():"all"},("function"==typeof t.getSchema?t.getSchema():void 0)&&(n.schema=t.getSchema()),t.isRequired&&(n.required=t.isRequired()),t.isAddressable&&(n.addressable=t.isAddressable()),t.getDescription&&(n.description=t.getDescription()),(null!=(r=t.options)?r.values:void 0)&&(n.values=t.options.values),("function"==typeof t.hasDefault?t.hasDefault():void 0)&&(n.default=t.options.default),n}},{key:"sendComponent",value:function(e,t,n){var r,o,a,i,s,c,u;for(s in o=[],a=[],c=t.inPorts)(i=c[s])&&"function"!=typeof i&&i.canAttach&&o.push(this.processPort(s,i));for(s in u=t.outPorts)(i=u[s])&&"function"!=typeof i&&i.canAttach&&a.push(this.processPort(s,i));return r=t.getIcon?t.getIcon():"gear",this.send("component",{name:e,description:t.description,subgraph:t.isSubgraph(),icon:r,inPorts:o,outPorts:a},n)}},{key:"registerGraph",value:function(e,t,n){var r,o,a=this;return o=l((function(){return a.processComponent(r,e,n)}),10),(r=this.getLoader(t.baseDir,this.transport.options)).listComponents((function(i,s){if(!i)return r.registerComponent("",e,t),o();a.send("error",i,n)})),t.on("addNode",o),t.on("removeNode",o),t.on("renameNode",o),t.on("addEdge",o),t.on("removeEdge",o),t.on("addInitial",o),t.on("removeInitial",o),t.on("addInport",o),t.on("removeInport",o),t.on("renameInport",o),t.on("addOutport",o),t.on("removeOutport",o),t.on("renameOutport",o)}}])&&o(t.prototype,n),h}(u);return e.prototype.loaders={},e}.call(this),e.exports=c},95670:(e,t,n)=>{function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function a(e,t){return(a=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function i(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var c,u;u=n(76445),c=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&a(e,t)}(d,e);var t,n,r,c,l=(r=d,c=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=s(r);if(c){var n=s(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return i(this,e)});function d(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,d),(t=l.call(this)).transport=e,t.graphs={},t}return t=d,(n=[{key:"send",value:function(e,t,n){return this.transport.send("graph",e,t,n)}},{key:"sendAll",value:function(e,t){return this.transport.sendAll("graph",e,t)}},{key:"receive",value:function(e,t,n){var r;if("clear"===e||(r=this.resolveGraph(t,n)))switch(e){case"clear":return this.initGraph(t,n);case"addnode":return this.addNode(r,t,n);case"removenode":return this.removeNode(r,t,n);case"renamenode":return this.renameNode(r,t,n);case"changenode":return this.changeNode(r,t,n);case"addedge":return this.addEdge(r,t,n);case"removeedge":return this.removeEdge(r,t,n);case"changeedge":return this.changeEdge(r,t,n);case"addinitial":return this.addInitial(r,t,n);case"removeinitial":return this.removeInitial(r,t,n);case"addinport":return this.addInport(r,t,n);case"removeinport":return this.removeInport(r,t,n);case"renameinport":return this.renameInport(r,t,n);case"addoutport":return this.addOutport(r,t,n);case"removeoutport":return this.removeOutport(r,t,n);case"renameoutport":return this.renameOutport(r,t,n);case"addgroup":return this.addGroup(r,t,n);case"removegroup":return this.removeGroup(r,t,n);case"renamegroup":return this.renameGroup(r,t,n);case"changegroup":return this.changeGroup(r,t,n);default:return this.send("error",new Error("graph:".concat(e," not supported")),n)}}},{key:"resolveGraph",value:function(e,t){if(e.graph){if(this.graphs[e.graph])return this.graphs[e.graph];this.send("error",new Error("Requested graph not found"),t)}else this.send("error",new Error("No graph specified"),t)}},{key:"getLoader",value:function(e){return this.transport.component.getLoader(e,this.transport.options)}},{key:"sendGraph",value:function(e,t,n){var r;return r={graph:e,description:t.toJSON()},this.send("graph",r,n)}},{key:"initGraph",value:function(e,t){var n,r;if(e.id)return e.name||(e.name="NoFlo runtime"),r=new u.Graph(e.name),n=e.id,e.library&&(e.library=e.library.replace("noflo-",""),r.properties.library=e.library,n="".concat(e.library,"/").concat(n)),e.icon&&(r.properties.icon=e.icon),e.description&&(r.properties.description=e.description),r.baseDir=this.transport.options.baseDir,this.subscribeGraph(e.id,r,t),e.main?this.transport.runtime.setMainGraph(n,r,t):this.transport.component.registerGraph(n,r,t),this.graphs[e.id]=r,this.sendAll("clear",{id:e.id,name:e.name,library:e.library,main:e.main,icon:e.icon,description:e.description},t);this.send("error",new Error("No graph ID provided"),t)}},{key:"registerGraph",value:function(e,t){return"default/main"===e&&this.transport.runtime.setMainGraph(e,t),this.subscribeGraph(e,t,""),this.graphs[e]=t}},{key:"subscribeGraph",value:function(e,t,n){var r=this;return t.on("addNode",(function(t){return t.graph=e,r.sendAll("addnode",t,n)})),t.on("removeNode",(function(t){var o;return o={id:t.id,graph:e},r.sendAll("removenode",o,n)})),t.on("renameNode",(function(t,o){return r.sendAll("renamenode",{from:t,to:o,graph:e},n)})),t.on("changeNode",(function(t,o){return r.sendAll("changenode",{id:t.id,metadata:t.metadata,graph:e},n)})),t.on("addEdge",(function(t){var o;return"number"!=typeof t.from.index&&delete t.from.index,"number"!=typeof t.to.index&&delete t.to.index,o={src:t.from,tgt:t.to,metadata:t.metadata,graph:e},r.sendAll("addedge",o,n)})),t.on("removeEdge",(function(t){var o;return o={src:t.from,tgt:t.to,graph:e},r.sendAll("removeedge",o,n)})),t.on("changeEdge",(function(t){var o;return o={src:t.from,tgt:t.to,metadata:t.metadata,graph:e},r.sendAll("changeedge",o,n)})),t.on("addInitial",(function(t){var o;return o={src:t.from,tgt:t.to,metadata:t.metadata,graph:e},r.sendAll("addinitial",o,n)})),t.on("removeInitial",(function(t){var o;return o={src:t.from,tgt:t.to,graph:e},r.sendAll("removeinitial",o,n)})),t.on("addGroup",(function(t){var o;return o={name:t.name,nodes:t.nodes,metadata:t.metadata,graph:e},r.sendAll("addgroup",o,n)})),t.on("removeGroup",(function(t){var o;return o={name:t.name,graph:e},r.sendAll("removegroup",o,n)})),t.on("renameGroup",(function(t,o){var a;return a={from:t,to:o,graph:e},r.sendAll("renamegroup",a,n)})),t.on("changeGroup",(function(t){var o;return o={name:t.name,metadata:t.metadata,graph:e},r.sendAll("changegroup",o,n)})),t.on("addInport",(function(t,o){var a;return a={public:t,node:o.process,port:o.port,metadata:o.metadata,graph:e},r.sendAll("addinport",a,n)})),t.on("addOutport",(function(t,o){var a;return a={public:t,node:o.process,port:o.port,metadata:o.metadata,graph:e},r.sendAll("addoutport",a,n)})),t.on("removeInport",(function(t,o){var a;return a={public:t,graph:e},r.sendAll("removeinport",a,n)})),t.on("removeOutport",(function(t,o){var a;return a={public:t,graph:e},r.sendAll("removeoutport",a,n)})),t.on("renameInport",(function(t,o){var a;return a={from:t,to:o,graph:e},r.sendAll("renameinport",a,n)})),t.on("renameOutport",(function(t,o){var a;return a={from:t,to:o,graph:e},r.sendAll("renameoutport",a,n)})),t.on("endTransaction",(function(){return r.emit("updated",{name:e,graph:t})}))}},{key:"addNode",value:function(e,t,n){if(t.id||t.component)return e.addNode(t.id,t.component,t.metadata);this.send("error",new Error("No ID or component supplied"),n)}},{key:"removeNode",value:function(e,t,n){if(t.id)return e.removeNode(t.id);this.send("error",new Error("No ID supplied"),n)}},{key:"renameNode",value:function(e,t,n){if(t.from||t.to)return e.renameNode(t.from,t.to);this.send("error",new Error("No from or to supplied"),n)}},{key:"changeNode",value:function(e,t,n){if(t.id||t.metadata)return e.setNodeMetadata(t.id,t.metadata);this.send("error",new Error("No id or metadata supplied"),n)}},{key:"addEdge",value:function(e,t,n){if(t.src||t.tgt){if("number"!=typeof t.src.index&&"number"!=typeof t.tgt.index||!e.addEdgeIndex)return e.addEdge(t.src.node,t.src.port,t.tgt.node,t.tgt.port,t.metadata);e.addEdgeIndex(t.src.node,t.src.port,t.src.index,t.tgt.node,t.tgt.port,t.tgt.index,t.metadata)}else this.send("error",new Error("No src or tgt supplied"),n)}},{key:"removeEdge",value:function(e,t,n){if(t.src||t.tgt)return e.removeEdge(t.src.node,t.src.port,t.tgt.node,t.tgt.port);this.send("error",new Error("No src or tgt supplied"),n)}},{key:"changeEdge",value:function(e,t,n){if(t.src||t.tgt)return e.setEdgeMetadata(t.src.node,t.src.port,t.tgt.node,t.tgt.port,t.metadata);this.send("error",new Error("No src or tgt supplied"),n)}},{key:"addInitial",value:function(e,t,n){if(t.src||t.tgt){if(!e.addInitialIndex||"number"!=typeof t.tgt.index)return e.addInitial(t.src.data,t.tgt.node,t.tgt.port,t.metadata);e.addInitialIndex(t.src.data,t.tgt.node,t.tgt.port,t.tgt.index,t.metadata)}else this.send("error",new Error("No src or tgt supplied"),n)}},{key:"removeInitial",value:function(e,t,n){if(t.tgt)return e.removeInitial(t.tgt.node,t.tgt.port);this.send("error",new Error("No tgt supplied"),n)}},{key:"addInport",value:function(e,t,n){if(t.public||t.node||t.port)return e.addInport(t.public,t.node,t.port,t.metadata);this.send("error",new Error("Missing exported inport information"),n)}},{key:"removeInport",value:function(e,t,n){if(t.public)return e.removeInport(t.public);this.send("error",new Error("Missing exported inport name"),n)}},{key:"renameInport",value:function(e,t,n){if(t.from||t.to)return e.renameInport(t.from,t.to);this.send("error",new Error("No from or to supplied"),n)}},{key:"addOutport",value:function(e,t,n){if(t.public||t.node||t.port)return e.addOutport(t.public,t.node,t.port,t.metadata);this.send("error",new Error("Missing exported outport information"),n)}},{key:"removeOutport",value:function(e,t,n){if(t.public)return e.removeOutport(t.public);this.send("error",new Error("Missing exported outport name"),n)}},{key:"renameOutport",value:function(e,t,n){if(t.from||t.to)return e.renameOutport(t.from,t.to);this.send("error",new Error("No from or to supplied"),n)}},{key:"addGroup",value:function(e,t,n){if(t.name||t.nodes||t.metadata)return e.addGroup(t.name,t.nodes,t.metadata);this.send("error",new Error("No name or nodes or metadata supplied"),n)}},{key:"removeGroup",value:function(e,t,n){if(t.name)return e.removeGroup(t.name);this.send("error",new Error("No name supplied"),n)}},{key:"renameGroup",value:function(e,t,n){if(t.from||t.to)return e.renameGroup(t.from,t.to);this.send("error",new Error("No from or to supplied"),n)}},{key:"changeGroup",value:function(e,t,n){if(t.name||t.metadata)return e.setEdgeMetadata(t.name,t.metadata);this.send("error",new Error("No name or metadata supplied"),n)}}])&&o(t.prototype,n),d}(n(17187).EventEmitter),e.exports=c},29009:(e,t,n)=>{function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function a(e,t){return(a=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function i(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var c,u,l,d,p,h,f,g;f=n(76445),c=n(17187).EventEmitter,g=function(e,t){var n,r,o,a;if(n={id:e.id,graph:t},e.socket.from&&(n.src={node:e.socket.from.process.id,port:e.socket.from.port}),e.socket.to&&(n.tgt={node:e.socket.to.process.id,port:e.socket.to.port}),e.subgraph&&(n.subgraph=e.subgraph),void 0!==e.group&&(n.group=e.group),e.datatype&&(n.type=e.datatype),e.schema&&(n.schema=e.schema),void 0!==e.data){if(f.isBrowser()||Buffer.isBuffer(e.data)&&(e.data=e.data.slice(0,20)),(null!=(r=e.data)?r.toJSON:void 0)&&(n.data=e.data.toJSON()),null!=(o=e.data)?o.toString:void 0){if(n.data=e.data.toString(),"[object Object]"===n.data)try{n.data=JSON.parse(JSON.stringify(e.data))}catch(e){}}else n.data=e.data;(null!=(a=e.metadata)?a.secure:void 0)&&(n.data="DATA")}return n},p=function(e){return e?e.process+"("+e.port+")":""},d=function(e){return p(e.src)+" -> "+p(e.tgt)},l=function(e){return e?e.process.id+"("+e.port+")":""},h=function(e){return l(e.from)+" -> "+l(e.to)},u=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&a(e,t)}(l,e);var t,n,r,c,u=(r=l,c=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=s(r);if(c){var n=s(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return i(this,e)});function l(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),(t=u.call(this)).transport=e,t.networks={},t}return t=l,(n=[{key:"send",value:function(e,t,n){return this.transport.send("network",e,t,n)}},{key:"sendAll",value:function(e,t){return this.transport.sendAll("network",e,t)}},{key:"receive",value:function(e,t,n){var r;if(r=this.resolveGraph(t,n))switch(e){case"start":return this.startNetwork(r,t,n);case"stop":return this.stopNetwork(r,t,n);case"edges":return this.updateEdgesFilter(r,t,n);case"debug":return this.debugNetwork(r,t,n);case"getstatus":return this.getStatus(r,t,n);default:return this.send("error",new Error("network:".concat(e," not supported")),n)}}},{key:"resolveGraph",value:function(e,t){if(e.graph){if(this.transport.graph.graphs[e.graph])return this.transport.graph.graphs[e.graph];this.send("error",new Error("Requested graph not found"),t)}else this.send("error",new Error("No graph specified"),t)}},{key:"updateEdgesFilter",value:function(e,t,n){var r,o,a,i,s,c;for((i=this.networks[t.graph])?i.filters={}:(i={network:null,filters:{}},this.networks[t.graph]=i),o=0,a=(s=t.edges).length;o<a;o++)r=s[o],c=d(r),i.filters[c]=!0;return this.send("edges",{graph:t.graph,edges:t.edges},n)}},{key:"eventFiltered",value:function(e,t){var n;return!this.transport.options.filterData||(n=h(t.socket),this.networks[e].filters[n])}},{key:"initNetwork",value:function(e,t,n,r){var o,a,i=this;if(!this.networks[t]||!this.networks[t].network)return e.componentLoader=this.transport.component.getLoader(e.baseDir,this.transport.options),(a=JSON.parse(JSON.stringify(this.transport.options))).delay=!0,f.createNetwork(e,(function(e,o){return e?r(e):(i.networks[t]&&i.networks[t].network?i.networks[t].network=o:i.networks[t]={network:o,filters:{}},i.emit("addnetwork",o,t,i.networks),i.subscribeNetwork(o,t,n),o.connect(r))}),a);(o=this.networks[t].network).stop((function(a){return a?r(a):(delete i.networks[t],i.emit("removenetwork",o,t,i.networks),i.initNetwork(e,t,n,r))}))}},{key:"subscribeNetwork",value:function(e,t,n){var r=this;return e.on("start",(function(o){return r.sendAll("started",{time:o.start,graph:t,running:e.isRunning(),started:e.isStarted()},n)})),e.on("end",(function(o){return r.sendAll("stopped",{time:new Date,uptime:o.uptime,graph:t,running:e.isRunning(),started:e.isStarted()},n)})),e.on("icon",(function(e){return e.graph=t,r.sendAll("icon",e,n)})),e.on("ip",(function(e){var o;if(r.eventFiltered(t,e)){switch(o={id:e.id,socket:e.socket,subgraph:e.subgraph,metadata:e.metadata},e.type){case"openBracket":o.type="begingroup",o.group=e.data||"";break;case"data":o.type="data",o.data=e.data,o.datatype=e.datatype,o.schema=e.schema;break;case"closeBracket":o.type="endgroup",o.group=e.data||""}return r.sendAll(o.type,g(o,t),n)}})),e.on("process-error",(function(e){var o,a,i,s,c;if(a=e.error.message,e.error.stack)for(o=e.error.stack.split("\n"),i=s=0,c=Math.min(o.length,3);0<=c?s<=c:s>=c;i=0<=c?++s:--s)a+="\n".concat(o[i]);return r.sendAll("processerror",{id:e.id,error:a,graph:t},n)}))}},{key:"_startNetwork",value:function(e,t,n,r){var o,a,i=this;return o=function(e){return e.start((function(e){return r(e)}))},(a=this.networks[t])&&a.network?o(a.network):this.initNetwork(e,t,n,(function(e){return e?r(e):(a=i.networks[t],o(a.network))}))}},{key:"startNetwork",value:function(e,t,n){var r=this;return this.networks[t.graph],this._startNetwork(e,t.graph,n,(function(e){e&&r.send("error",e,n)}))}},{key:"stopNetwork",value:function(e,t,n){var r,o=this;if(this.networks[t.graph])if(r=this.networks[t.graph].network){if(!r.isStarted())return this.send("stopped",{time:new Date,graph:t.graph,running:r.isRunning(),started:r.isStarted()},n);this.networks[t.graph].network.stop((function(e){e?o.send("error",e,n):o.send("stopped",{time:new Date,graph:t.graph,running:r.isRunning(),started:r.isStarted()},n)}))}else this.send("error",new Error("Network ".concat(t.graph," not found")),n);else this.send("error",new Error("Network ".concat(t.graph," not found")),n)}},{key:"debugNetwork",value:function(e,t,n){var r;this.networks[t.graph]&&(r=this.networks[t.graph].network)?(r.setDebug(t.enable),this.send("setdebug",{enable:t.enable})):this.send("error",new Error("Network ".concat(t.graph," not found")),n)}},{key:"getStatus",value:function(e,t,n){var r;if(this.networks[t.graph]){if(r=this.networks[t.graph].network)return this.send("status",{graph:t.graph,running:r.isRunning(),started:r.isStarted()},n);this.send("error",new Error("Network ".concat(t.graph," not found")),n)}else this.send("error",new Error("Network ".concat(t.graph," not found")),n)}}])&&o(t.prototype,n),l}(c),e.exports=u},23566:(e,t,n)=>{function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function a(e,t){return(a=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function i(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var c,u,l,d,p,h,f;d=n(76445),c=n(17187).EventEmitter,f=function(e,t,n){var r;switch(r=d.internalSocket.createSocket(),e.attach(r),t){case"begingroup":r.beginGroup(n);break;case"endgroup":r.endGroup(n);break;case"data":r.send(n)}return e.detach(r)},l=function(e,t,n){var r,o,a;if(e.graph&&(null!=(o=n?e.graph.inports[t]:e.graph.outports[t])?o.process:void 0)&&(r=null!=(a=e.getNode(o.process))?a.component:void 0))return n?r.inPorts[o.port]:r.outPorts[o.port]},p=function(e,t,n,r){var o,a,i,s;return o={id:e,type:"all",description:null!=(i=t.metadata)?i.description:void 0,addressable:!1,required:!1},(a=l(n,e,r))?(o.type=a.getDataType()||"all",("function"==typeof a.getSchema?a.getSchema():void 0)&&(o.schema=a.getSchema()),o.description=(null!=(s=t.metadata)?s.description:void 0)||a.getDescription()||"",o.addressable=a.isAddressable(),o.required=a.isRequired(),o):o},h=function(e,t){var n,r,o,a,i;if(r={graph:e,inPorts:[],outPorts:[]},!(null!=t?t.graph:void 0))return r;for(o in a=t.graph.inports)n=a[o],r.inPorts.push(p(o,n,t,!0));for(o in i=t.graph.outports)n=i[o],r.outPorts.push(p(o,n,t,!1));return r},u=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&a(e,t)}(p,e);var t,n,r,c,u=(r=p,c=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=s(r);if(c){var n=s(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return i(this,e)});function p(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,p),(t=u.call(this)).transport=e,t.outputSockets={},t.mainGraph=null,t.transport.network.on("addnetwork",(function(e,n){return t.subscribeExportedPorts(n,e,!0),t.subscribeOutPorts(n,e),t.sendPorts(n,e),e.isStarted()&&t.subscribeOutdata(n,e,!0),e.on("start",(function(){return t.subscribeOutdata(n,e,!0)}))})),t.transport.network.on("removenetwork",(function(e,n){return t.subscribeOutdata(n,e,!1),t.subscribeOutPorts(n,e),t.subscribeExportedPorts(n,e.graph,!1),t.sendPorts(n,null)})),t}return t=p,(n=[{key:"send",value:function(e,t,n){return this.transport.send("runtime",e,t,n)}},{key:"sendAll",value:function(e,t){return this.transport.sendAll("runtime",e,t)}},{key:"sendError",value:function(e,t){return this.send("error",new Error(e),t)}},{key:"receive",value:function(e,t,n){var r=this;switch(e){case"getruntime":return this.getRuntime(t,n);case"packet":return this.sendPacket(t,(function(e){e?r.sendError(e.message,n):r.send("packetsent",{port:t.port,event:t.event,graph:t.graph,payload:t.payload},n)}));default:return this.send("error",new Error("runtime:".concat(e," not supported")),n)}}},{key:"getRuntime",value:function(e,t){var n,r,o,a,i,s,c,u=this;for(r in(c=this.transport.options.type)||(c=d.isBrowser()?"noflo-browser":"noflo-nodejs"),a=(n=this.transport.options.capabilities).filter((function(t){return u.transport.canDo(t,e.secret)})),e={type:c,version:this.transport.version,capabilities:a,allCapabilities:n},this.mainGraph&&(e.graph=this.mainGraph),this.transport.options.id&&(e.id=this.transport.options.id),this.transport.options.label&&(e.label=this.transport.options.label),this.transport.options.namespace&&(e.namespace=this.transport.options.namespace),this.transport.options.repository&&(e.repository=this.transport.options.repository),this.transport.options.repositoryVersion&&(e.repositoryVersion=this.transport.options.repositoryVersion),this.send("runtime",e,t),s=[],i=this.transport.network.networks)o=i[r],s.push(this.sendPorts(r,o,t));return s}},{key:"sendPorts",value:function(e,t,n){var r;return r=h(e,t),this.emit("ports",r),n?this.send("ports",r,n):this.sendAll("ports",r)}},{key:"setMainGraph",value:function(e){return this.mainGraph=e}},{key:"subscribeExportedPorts",value:function(e,t,n){var r,o,a,i,s,c,u,l,d=this;for(l=function(){return d.sendPorts(e,t)},a=0,s=(o=["addInport","addOutport","removeInport","removeOutport"]).length;a<s;a++)r=o[a],t.graph.removeListener(r,l);if(n){for(u=[],i=0,c=o.length;i<c;i++)r=o[i],u.push(t.graph.on(r,l));return u}}},{key:"subscribeOutPorts",value:function(e,t,n){var r,o,a,i=this;if(a=function(){return i.subscribeOutdata(e,t,!1)},o=function(){return i.subscribeOutdata(e,t,!0)},(r=t.graph).removeListener("addOutport",o),r.removeListener("removeOutport",a),n)return r.on("addOutport",o),r.on("removeOutport",a)}},{key:"subscribeOutdata",value:function(e,t,n){var r,o,a,i,s,c,u=this;for(s in this.outputSockets[e]||(this.outputSockets[e]={}),o=this.outputSockets[e])for(c=o[s],a=0,i=events.length;a<i;a++)r=events[a],c.removeAllListeners(r);if(o={},n)return Object.keys(t.graph.outports).forEach((function(n){var a,i;if(i=t.graph.outports[n],c=d.internalSocket.createSocket(),o[n]=c,!(null!=(a=t.processes[i.process].component)?a.outPorts[i.port]:void 0))throw new Error("Exported outport ".concat(i.port," in node ").concat(i.process," not found"));return a.outPorts[i.port].attach(c),c.on("ip",(function(t){switch(t.type){case"openBracket":r="begingroup";break;case"closeBracket":r="endgroup";break;default:r=t.type}return u.emit("packet",{port:n,event:r,graph:e,payload:t.data}),u.sendAll("packet",{port:n,event:r,graph:e,payload:t.data})}))}))}},{key:"sendPacket",value:function(e,t){var n,r;return(n=this.transport.network.networks[e.graph])?(r=l(n.network,e.port,!0))?(f(r,e.event,e.payload),t()):t(new Error("Cannot find internal port for ".concat(e.port))):t(new Error("Cannot find network for graph ".concat(e.graph)))}}])&&o(t.prototype,n),p}(c),e.exports=u},53828:(e,t,n)=>{function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function a(e,t,n){return t&&o(e.prototype,t),n&&o(e,n),e}var i,s,c,u,l,d,p,h,f;h=n(76445),u=n(11227)("noflo-runtime-base:trace"),d=JSON.stringify;try{d=n(64530)}catch(e){l=e,console.log("WARN: failed to load json-stringify-safe, circular objects may cause fail.\n".concat(l.message))}c=function(e){var t;return t=d(e),JSON.parse(t)},i=function(){function e(){r(this,e),this.events=[]}return a(e,[{key:"add",value:function(e){return this.events.push(e)}},{key:"getAll",value:function(e,t){var n,r,o;for(n=0,r=(o=this.events).length;n<r;n++)e(l=o[n]);return t(null)}}]),e}(),f=function(e,t,n,r){var o,a,i,s,c,u,l,d,p;for(u in a={},l=e.graph.outports)for(s=l[u],p=h.internalSocket.createSocket(),a[u]=p,e.processes[s.process].component.outPorts[s.port].attach(p),d=function(e){return function(n){var o;return o={id:"EXPORT: ".concat(t," ").concat(u.toUpperCase()," ->"),payload:n,socket:{to:{process:{id:t},port:u}}},r(e,o)}},i=0,c=n.length;i<c;i++)o=n[i],p.on(o,d(o));return a},p=function(e,t,n){var r,o,a,i,s,d,p,h;switch(u("event",e,t,"'".concat(n.id,"'")),h=n.socket,p=function(e){try{return e.group=n.group.toString()}catch(t){return u("group serialization error",l=t),e.error=l.message}},o=(r={protocol:"network",command:t,payload:{time:(new Date).toISOString(),graph:e,error:null,src:{node:null!=(a=h.from)?a.process.id:void 0,port:null!=(i=h.from)?i.port:void 0},tgt:{node:null!=(s=h.to)?s.process.id:void 0,port:null!=(d=h.to)?d.port:void 0},id:void 0,subgraph:void 0}}).payload,t){case"connect":case"disconnect":break;case"begingroup":case"endgroup":p(r.payload);break;case"data":try{o.data=c(n.data)}catch(e){u("data serialization error",l=e),o.error=l.message}break;default:throw new Error("trace: Unknown event type ".concat(t))}return u("event done",e,t,"'".concat(n.id,"'")),r},s=function(){function e(t){r(this,e),this.options=t,this.buffer=new i,this.header={graphs:{}}}return a(e,[{key:"attach",value:function(e){var t,n,r=this;return n=e.graph.name||e.graph.properties.name||"default",u("attach",n),(t=["connect","begingroup","data","endgroup","disconnect"]).forEach((function(t){return e.on(t,(function(e){var o;return o=p(n,t,e),r.buffer.add(o)}))})),f(e,n,t,(function(e,t){var o;return o=p(n,e,t),r.buffer.add(o)})),this.header.graphs[n]=e.graph.toJSON()}},{key:"detach",value:function(e){}},{key:"dumpString",value:function(e){var t,n,r=this;return n=[],t=function(e){return n.push(e)},this.buffer.getAll(t,(function(t){var o;return o={header:r.header,events:n},e(t,JSON.stringify(o,null,2))}))}},{key:"dumpFile",value:function(e,t){var r,o,a,i=this;return r=n(12993),a=n(39453),o=function(t){return r.open(e,"w",(function(n,r){return t(n,{path:e,fd:r})}))},e||(o=function(e){return a.open({suffix:".json"},e)}),o((function(e,n){var o,a,s,c;return e?t(e):(o=0,s=function(e,t){return r.write(n.fd,e,{encoding:"utf-8"},t)},c=function(e){var t;return t=o?",":"",o+=1,t+=JSON.stringify(e,null,2),s(t,(function(e){}))},u("streaming to file",n.path),a=JSON.stringify(i.header,null,2),s('{\n "header": '.concat(a,'\n, "events":\n['),(function(e){return i.buffer.getAll(c,(function(e){return e?t(e):(u("streamed ".concat(o," events")),s("]\n }",(function(e){return u("completed stream",n.path),t(e,n.path)})))}))})))}))}}]),e}(),e.exports.Tracer=s},62438:(e,t)=>{t.parseName=function(e){var t;return-1===e.indexOf("/")?{library:null,name:e}:{library:(t=e.split("/"))[0],name:t[1]}}},31405:(e,t,n)=>{e.exports={postMessage:n(93109),iframe:n(73608),opener:n(58562)}},73608:(e,t,n)=>{function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){return(o=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function a(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function i(e){return(i=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var s=n(93109),c=n(76617),u=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&o(e,t)}(s,e);var t,n,r=(t=s,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=i(t);if(n){var o=i(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return a(this,e)});function s(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,s),(t=r.call(this,e)).setClient(window.parent),t}return s}(s);e.exports=function(e){var t=c.normalizeOptions(e),n=new u(t);return c.subscribe(window,(function(e,t){"iframe"!==e.protocol||"setcontent"!==e.command?n.receive(e.protocol,e.command,e.payload,{href:t.origin}):document.body.innerHTML=e.payload})),n}},58562:(e,t,n)=>{function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function a(e,t){return(a=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function i(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var c=n(93109),u=n(76617),l=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&a(e,t)}(l,e);var t,n,r,c,u=(r=l,c=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=s(r);if(c){var n=s(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return i(this,e)});function l(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),n=u.call(this,e),t&&t.addEventListener("click",(function(e){e.preventDefault(),e.stopPropagation(),n.openClient(t.getAttribute("href"))})),n}return t=l,(n=[{key:"openClient",value:function(e){var t=this,n=window.open(e,"_blank");if(!n)throw new Error("Unable to open client window at '".concat(e,"'"));this.context={href:"*"};var r=function(e){var t=e.data;"string"==typeof e.data&&(t=JSON.parse(e.data)),t.protocol&&t.command&&this.receive(t.protocol,t.command,t.payload,this.context)}.bind(this),o=setInterval((function(){n&&!n.closed||(t.setClient(null),window.removeEventListener("message",r),clearInterval(o))}),1e3);this.setClient(n),window.addEventListener("message",r)}}])&&o(t.prototype,n),l}(c);e.exports=function(e,t){var n=u.normalizeOptions(e);return new l(n,t)}},93109:(e,t,n)=>{function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function i(e,t,n){return(i="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=l(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function s(e,t){return(s=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function c(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?u(e):t}function u(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function l(e){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var d=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&s(e,t)}(h,e);var t,n,r,d,p=(r=h,d=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=l(r);if(d){var n=l(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return c(this,e)});function h(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};o(this,h);var n=t;return e=p.call(this,n),n.catchExceptions&&(window.onerror=function(e){return this.client&&this.send("network","error",e,{href:this.context?this.context.href:this.client.location.href}),console.error(e),!0}.bind(u(e))),n.defaultPermissions.length||(n.defaultPermissions=["protocol:graph","protocol:component","protocol:network","protocol:runtime","component:setsource","component:getsource","network:data","network:control","network:status"]),e.client=null,e}return t=h,(n=[{key:"setClient",value:function(e){this.client=e}},{key:"send",value:function(e,t,n,r){if(this.client){var o=n;n instanceof Error&&(o={message:n.message,stack:n.stack});var a=this.context;a||(a=r),this.client.postMessage(JSON.stringify({protocol:e,command:t,payload:o}),a.href),i(l(h.prototype),"send",this).call(this,e,t,n,a)}}},{key:"sendAll",value:function(e,t,n){this.send(e,t,n,this.context)}}])&&a(t.prototype,n),h}(n(50021));e.exports=d},76617:(e,t)=>{t.normalizeOptions=function(e){var t=e;return void 0===e.catchExceptions&&(t.catchExceptions=!0,window.location.search&&"debug"===window.location.search.substring(1)&&(t.catchExceptions=!1)),t},t.subscribe=function(e,t){e.addEventListener("message",(function(e){var n=e.data;"string"==typeof e.data&&(n=JSON.parse(e.data)),n.protocol&&n.command&&t(n,e)}))}},67921:(e,t,n)=>{var r,o,a=n(34155);function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function c(e,t){return(c=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function u(e,t){return!t||"object"!==i(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function l(e){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}o=n(76445),r=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&c(e,t)}(h,e);var t,n,r,d,p=(r=h,d=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=l(r);if(d){var n=l(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return u(this,e)});function h(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,h),(t=p.call(this)).metadata=e,t.network=null,t.ready=!0,t.started=!1,t.starting=!1,t.baseDir=null,t.loader=null,t.load=0,t.inPorts=new o.InPorts({graph:{datatype:"all",description:"NoFlo graph definition to be used with the subgraph component",required:!0}}),t.outPorts=new o.OutPorts,t.inPorts.graph.on("ip",(function(e){if("data"===e.type)return t.setGraph(e.data,(function(e){if(e)return t.error(e)}))})),t}return t=h,(n=[{key:"setGraph",value:function(e,t){var n=this;return this.ready=!1,"object"===i(e)?"function"==typeof e.addNode?void this.createNetwork(e,t):void o.graph.loadJSON(e,(function(e,r){return e?t(e):(r.baseDir=n.baseDir,n.createNetwork(r,t))})):("/"!==e.substr(0,1)&&":"!==e.substr(1,1)&&a&&a.cwd&&(e="".concat(a.cwd(),"/").concat(e)),o.graph.loadFile(e,(function(e,r){return e?t(e):(r.baseDir=n.baseDir,n.createNetwork(r,t))})))}},{key:"createNetwork",value:function(e,t){var n=this;return this.description=e.properties.description||"",this.icon=e.properties.icon||this.icon,e.name||(e.name=this.nodeId),e.componentLoader=this.loader,o.createNetwork(e,(function(e,r){return n.network=r,e?t(e):(n.emit("network",n.network),n.subscribeNetwork(n.network),n.network.connect((function(e){var r,o,a;if(e)return t(e);for(r in a=n.network.processes)o=a[r],n.findEdgePorts(r,o);return n.setToReady(),t()})))}),!0)}},{key:"subscribeNetwork",value:function(e){var t,n=this;return t=[],this.network.on("start",(function(){var e;return e={},t.push(e),n.activate(e)})),this.network.on("end",(function(){var e;if(e=t.pop())return n.deactivate(e)}))}},{key:"isExportedInport",value:function(e,t,n){var r,o,a;for(o in a=this.network.graph.inports)if((r=a[o]).process===t&&r.port===n)return o;return!1}},{key:"isExportedOutport",value:function(e,t,n){var r,o,a;for(o in a=this.network.graph.outports)if((r=a[o]).process===t&&r.port===n)return o;return!1}},{key:"setToReady",value:function(){var e=this;return void 0!==a&&a.execPath&&-1!==a.execPath.indexOf("node")?a.nextTick((function(){return e.ready=!0,e.emit("ready")})):setTimeout((function(){return e.ready=!0,e.emit("ready")}),0)}},{key:"findEdgePorts",value:function(e,t){var n,r,o,a,i,s=this;for(a in n=t.component.inPorts.ports,r=t.component.outPorts.ports,n)o=n[a],!1!==(i=this.isExportedInport(o,e,a))&&(this.inPorts.add(i,o),this.inPorts[i].on("connect",(function(){if(!s.starting&&!s.network.isStarted()){if(!s.network.startupDate)return s.setUp((function(){}));s.network.setStarted(!0)}})));for(a in r)o=r[a],!1!==(i=this.isExportedOutport(o,e,a))&&this.outPorts.add(i,o);return!0}},{key:"isReady",value:function(){return this.ready}},{key:"isSubgraph",value:function(){return!0}},{key:"isLegacy",value:function(){return!1}},{key:"setUp",value:function(e){var t=this;if(this.starting=!0,this.isReady())return this.network?this.network.start((function(n){return n?e(n):(t.starting=!1,e())})):e(null);this.once("ready",(function(){return t.setUp(e)}))}},{key:"tearDown",value:function(e){return this.starting=!1,this.network?this.network.stop((function(t){return t?e(t):e()})):e(null)}}])&&s(t.prototype,n),h}(o.Component),t.getComponent=function(e){return new r(e)}},8097:(e,t,n)=>{var r,o,a,i,s,c,u,l,d,p,h,f,g=n(34155);function m(e){return(m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}r=n(56570).ComponentLoader,i=n(25887).Network,a=n(14203),c=n(75631),o=n(79472).Graph,u=function(e,t){return e||(e={}),e.name||(e.name=t),e.loader&&(e.baseDir=e.loader.baseDir),!e.baseDir&&g&&g.cwd&&(e.baseDir=g.cwd()),e.loader||(e.loader=new r(e.baseDir)),e.raw||(e.raw=!1),e},p=function(e,t,n){var r;return"object"===m(e)?(e.componentLoader=t.loader,void(r=new i(e,t)).connect((function(e){return e?n(e):n(null,r)}))):t.loader.load(e,(function(a,s){var c,u,l,d,p;if(a)return n(a);for(p in c=new o(t.name),l=t.name,c.addNode(l,e),u=s.inPorts.ports,d=s.outPorts.ports,u)u[p],c.addInport(p,l,p);for(p in d)d[p],c.addOutport(p,l,p);return c.componentLoader=t.loader,(r=new i(c,t)).connect((function(e){return e?n(e):n(null,r)}))}))},h=function(e,t,n,r){var o,i,s,u;return Object.keys(e.graph.inports),o={},u=[],i=Object.keys(e.graph.outports),s={},i.forEach((function(t){var n,r;return n=e.graph.outports[t],r=e.getNode(n.process),s[t]=c.createSocket(),r.component.outPorts[n.port].attach(s[t]),s[t].from={process:r,port:n.port},s[t].on("ip",(function(e){var n;return(n={})[t]=e,u.push(n)}))})),e.once("end",(function(){var e,t;for(e in s)(t=s[e]).from.process.component.outPorts[t.from.port].detach(t);return s={},o={},r(null,u)})),e.start((function(n){var i,s,u,l,d,p,h,f;if(n)return r(n);for(h=[],i=0,u=t.length;i<u;i++)s=t[i],h.push(function(){var t;for(l in t=[],s)f=s[l],o[l]||(d=e.graph.inports[l],p=e.getNode(d.process),o[l]=c.createSocket(),p.component.inPorts[d.port].attach(o[l])),a.isIP(f)?o[l].post(f):t.push(o[l].post(new a("data",f)));return t}());return h}))},s=function(e,t){var n;if("object"!==m(e))return"simple";if(Array.isArray(e))return e.filter((function(e){return"map"===s(e,t)})).length===e.length?"sequence":"simple";if(!Object.keys(e).length)return"simple";for(n in e)if(e[n],!t.graph.inports[n])return"simple";return"map"},d=function(e,t,n){var r,o;return"sequence"===t?e:"map"===t?[e]:(r=Object.keys(n.graph.inports)[0],n.graph.inports.in&&(r="in"),(o={})[r]=e,[o])},l=function(e,t){var n,r,o,a,i,s;if(t.raw)return e;for(i=null,n=s=[],r=0,o=e.length;r<o;r++)"openBracket"===(a=e[r]).type&&(i=n,n=[],i.push(n)),"data"===a.type&&n.push(a.data),"closeBracket"===a.type&&(n=i);return 1===s.length?s[0]:s},f=function(e,t,n,r){var o,a,i,s,c,u,d,p,h,f,g;if((o=e.filter((function(e){return null!=e.error})).map((function(e){return e.error}))).length)return r(l(o,n));if("sequence"===t)return r(null,e.map((function(e){var t,r,o;for(t in r={},e)o=e[t],n.raw?r[t]=o:r[t]=l([o],n);return r})));for(u={},a=0,s=e.length;a<s;a++)for(i in c=e[a])f=c[i],u[i]||(u[i]=[]),u[i].push(f);if(0===(g=Object.keys(u).filter((function(e){return u[e].length>0}))).length)return r(null);if(1===g.length&&"simple"===t)return r(null,l(u[g[0]],n));for(p in h={},u)d=u[p],h[p]=l(d,n);return r(null,h)},t.asCallback=function(e,t){return t=u(t,e),function(n,r){return p(e,t,(function(e,o){var a,i;return e?r(e):(i=s(n,o),a=d(n,i,o),h(o,a,0,(function(e,n){return e?r(e):f(n,i,t,r)})))}))}}},95080:(e,t,n)=>{function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var o,a;a=n(13702);var i=n(91680);o=i.Component,t.asComponent=function(e,t){var n,i,s,c,u,l,d;for(i=!1,l=a(e).filter((function(e){return"callback"!==e.param||(i=!0,!1)})),n=new o(t),s=0,c=l.length;s<c;s++)d={required:!0},void 0!==(u=l[s]).default&&(d.default=u.default,d.required=!1),n.inPorts.add(u.param,d),n.forwardBrackets[u.param]=["out","error"];return l.length||n.inPorts.add("in",{datatype:"bang"}),n.outPorts.add("out"),n.outPorts.add("error"),n.process((function(t,n){var o,a,s,c;if(l.length){for(o=0,a=l.length;o<a;o++)if(u=l[o],!t.hasData(u.param))return;c=l.map((function(e){return t.getData(e.param)}))}else{if(!t.hasData("in"))return;t.getData("in"),c=[]}return i?(c.push((function(e,t){return e?n.done(e):n.sendDone(t)})),void(s=e.apply(null,c))):(s=e.apply(null,c))&&"object"===r(s)&&"function"==typeof s.then?void s.then((function(e){return n.sendDone(e)}),(function(e){return n.done(e)})):n.sendDone(s)})),n}},29628:(e,t,n)=>{function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function a(e,t){return(a=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function i(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var c,u,l;u=n(17187).EventEmitter,l=["all","string","number","int","object","array","boolean","color","date","bang","function","buffer","stream"],c=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&a(e,t)}(d,e);var t,n,r,c,u=(r=d,c=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=s(r);if(c){var n=s(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return i(this,e)});function d(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,d),(t=u.call(this)).options=t.handleOptions(e),t.sockets=[],t.node=null,t.name=null,t}return t=d,(n=[{key:"handleOptions",value:function(e){if(e||(e={}),e.datatype||(e.datatype="all"),void 0===e.required&&(e.required=!1),"integer"===e.datatype&&(e.datatype="int"),-1===l.indexOf(e.datatype))throw new Error("Invalid port datatype '".concat(e.datatype,"' specified, valid are ").concat(l.join(", ")));if(e.type&&!e.schema&&(e.schema=e.type,delete e.type),e.schema&&-1===e.schema.indexOf("/"))throw new Error("Invalid port schema '".concat(e.schema,"' specified. Should be URL or MIME type"));return e}},{key:"getId",value:function(){return this.node&&this.name?"".concat(this.node," ").concat(this.name.toUpperCase()):"Port"}},{key:"getDataType",value:function(){return this.options.datatype}},{key:"getSchema",value:function(){return this.options.schema||null}},{key:"getDescription",value:function(){return this.options.description}},{key:"attach",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(this.isAddressable()&&null!==t||(t=this.sockets.length),this.sockets[t]=e,this.attachSocket(e,t),!this.isAddressable())return this.emit("attach",e);this.emit("attach",e,t)}},{key:"attachSocket",value:function(){}},{key:"detach",value:function(e){var t;if(-1!==(t=this.sockets.indexOf(e))){if(this.sockets[t]=void 0,!this.isAddressable())return this.emit("detach",e);this.emit("detach",e,t)}}},{key:"isAddressable",value:function(){return!!this.options.addressable}},{key:"isBuffered",value:function(){return!!this.options.buffered}},{key:"isRequired",value:function(){return!!this.options.required}},{key:"isAttached",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;return this.isAddressable()&&null!==e?!!this.sockets[e]:!!this.sockets.length}},{key:"listAttached",value:function(){var e,t,n,r,o;for(e=[],n=t=0,r=(o=this.sockets).length;t<r;n=++t)o[n]&&e.push(n);return e}},{key:"isConnected",value:function(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(this.isAddressable()){if(null===t)throw new Error("".concat(this.getId(),": Socket ID required"));if(!this.sockets[t])throw new Error("".concat(this.getId(),": Socket ").concat(t," not available"));return this.sockets[t].isConnected()}return e=!1,this.sockets.forEach((function(t){if(t)return t.isConnected()?e=!0:void 0})),e}},{key:"canAttach",value:function(){return!0}}])&&o(t.prototype,n),d}(u),e.exports=c},91680:function(e,t,n){function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(e,t)||function(e,t){if(e){if("string"==typeof e)return a(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?a(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function a(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function c(e,t,n){return t&&s(e.prototype,t),n&&s(e,n),e}function u(e,t){return(u=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function l(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?d(e):t}function d(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function p(e){return(p=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var h,f,g,m,v,y,b,w,_,x,k=function(e,t){if(!(e instanceof t))throw new Error("Bound instance method accessed before binding")},P=n(17187);f=P.EventEmitter,x=n(66199),g=n(14203),b=n(26903)("noflo:component"),w=n(26903)("noflo:component:brackets"),_=n(26903)("noflo:component:send"),h=function(){var e=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&u(e,t)}(o,e);var t,n,r=(t=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=p(t);if(n){var o=p(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return l(this,e)});function o(e){var t,n,a,s;return i(this,o),(t=r.call(this)).error=t.error.bind(d(t)),e||(e={}),e.inPorts||(e.inPorts={}),e.inPorts instanceof x.InPorts?t.inPorts=e.inPorts:t.inPorts=new x.InPorts(e.inPorts),e.outPorts||(e.outPorts={}),e.outPorts instanceof x.OutPorts?t.outPorts=e.outPorts:t.outPorts=new x.OutPorts(e.outPorts),e.icon&&(t.icon=e.icon),e.description&&(t.description=e.description),t.started=!1,t.load=0,t.ordered=null!=(n=e.ordered)&&n,t.autoOrdering=null!=(a=e.autoOrdering)?a:null,t.outputQ=[],t.bracketContext={in:{},out:{}},t.activateOnInput=null==(s=e.activateOnInput)||s,t.forwardBrackets={in:["out","error"]},"forwardBrackets"in e&&(t.forwardBrackets=e.forwardBrackets),"function"==typeof e.process&&t.process(e.process),t}return c(o,[{key:"getDescription",value:function(){return this.description}},{key:"isReady",value:function(){return!0}},{key:"isSubgraph",value:function(){return!1}},{key:"setIcon",value:function(e){return this.icon=e,this.emit("icon",this.icon)}},{key:"getIcon",value:function(){return this.icon}},{key:"error",value:function(e){var t,n,r,a,i,s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],c=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"error",u=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;if(k(this,o),!this.outPorts[c]||!this.outPorts[c].isAttached()&&this.outPorts[c].isRequired())throw e;for(n=0,a=s.length;n<a;n++)t=s[n],this.outPorts[c].openBracket(t,{scope:u});for(this.outPorts[c].data(e,{scope:u}),r=0,i=s.length;r<i;r++)t=s[r],this.outPorts[c].closeBracket(t,{scope:u})}},{key:"setUp",value:function(e){e()}},{key:"tearDown",value:function(e){e()}},{key:"start",value:function(e){var t=this;if(this.isStarted())return e();this.setUp((function(n){if(n)return e(n);t.started=!0,t.emit("start"),e(null)}))}},{key:"shutdown",value:function(e){var t,n=this;t=function(){var t,r,o;for(o in r=n.inPorts.ports||n.inPorts)"function"==typeof(t=r[o]).clear&&t.clear();if(n.bracketContext={in:{},out:{}},!n.isStarted())return e();n.started=!1,n.emit("end"),e()},this.tearDown((function(r){var o;return r?e(r):n.load>0?(o=function(e){e>0||(this.removeListener("deactivate",o),t())},void n.on("deactivate",o)):void t()}))}},{key:"isStarted",value:function(){return this.started}},{key:"prepareForwarding",value:function(){var e,t,n,r,o,a,i,s;for(t in i=[],a=this.forwardBrackets)if(o=a[t],t in this.inPorts.ports){for(s=[],e=0,n=o.length;e<n;e++)(r=o[e])in this.outPorts.ports&&s.push(r);0===s.length?i.push(delete this.forwardBrackets[t]):i.push(this.forwardBrackets[t]=s)}else delete this.forwardBrackets[t];return i}},{key:"isLegacy",value:function(){return!this.handle}},{key:"process",value:function(e){var t,n,r=this;if("function"!=typeof e)throw new Error("Process handler must be a function");if(!this.inPorts)throw new Error("Component ports must be defined before process function");for(t in this.prepareForwarding(),this.handle=e,n=this.inPorts.ports)!function(e,t){t.name||(t.name=e),t.on("ip",(function(e){return r.handleIP(e,t)}))}(t,n[t]);return this}},{key:"isForwardingInport",value:function(e){return("string"==typeof e?e:e.name)in this.forwardBrackets}},{key:"isForwardingOutport",value:function(e,t){var n,r;return n="string"==typeof e?e:e.name,r="string"==typeof t?t:t.name,!!this.forwardBrackets[n]&&-1!==this.forwardBrackets[n].indexOf(r)}},{key:"isOrdered",value:function(){return!!this.ordered||!!this.autoOrdering}},{key:"handleIP",value:function(e,t){var n,r,o,a,i,s,c;if(t.options.triggering){if("openBracket"!==e.type||null!==this.autoOrdering||this.ordered||(b("".concat(this.nodeId," port '").concat(t.name,"' entered auto-ordering mode")),this.autoOrdering=!0),c={},this.isForwardingInport(t)){if("openBracket"===e.type)return;if("closeBracket"===e.type){if(o=(n=t.getBuffer(e.scope,e.index)).filter((function(e){return"data"===e.type})),this.outputQ.length>=this.load&&0===o.length){if(n[0]!==e)return;t.get(e.scope,e.index),(r=this.getBracketContext("in",t.name,e.scope,e.index).pop()).closeIp=e,w("".concat(this.nodeId," closeBracket-C from '").concat(r.source,"' to ").concat(r.ports,": '").concat(e.data,"'")),c={__resolved:!0,__bracketClosingAfter:[r]},this.outputQ.push(c),this.processOutputQueue()}if(!o.length)return}}r=new m(e,this,t,c),i=new v(this.inPorts,r),s=new y(this.outPorts,r);try{this.handle(i,s,r)}catch(e){a=e,this.deactivate(r),s.sendDone(a)}r.activated||(t.isAddressable()?b("".concat(this.nodeId," packet on '").concat(t.name,"[").concat(e.index,"]' didn't match preconditions: ").concat(e.type)):b("".concat(this.nodeId," packet on '").concat(t.name,"' didn't match preconditions: ").concat(e.type)))}}},{key:"getBracketContext",value:function(e,t,n,r){var o,a,i=x.normalizePortName(t);return a=i.name,o=i.index,null!=r&&(o=r),("in"===e?this.inPorts:this.outPorts)[a].isAddressable()&&(t="".concat(a,"[").concat(o,"]")),this.bracketContext[e][t]||(this.bracketContext[e][t]={}),this.bracketContext[e][t][n]||(this.bracketContext[e][t][n]=[]),this.bracketContext[e][t][n]}},{key:"addToResult",value:function(e,t,n){var r,o,a,i,s=arguments.length>3&&void 0!==arguments[3]&&arguments[3],c=x.normalizePortName(t);return i=c.name,o=c.index,a=s?"unshift":"push",this.outPorts[i].isAddressable()?(r=o?parseInt(o):n.index,e[i]||(e[i]={}),e[i][r]||(e[i][r]=[]),n.index=r,void e[i][r][a](n)):(e[i]||(e[i]=[]),e[i][a](n))}},{key:"getForwardableContexts",value:function(e,t,n){var r,o,a,i=this,s=x.normalizePortName(t);return a=s.name,o=s.index,r=[],n.forEach((function(n,s){var c;if(i.isForwardingOutport(e,a)&&-1===n.ports.indexOf(t)&&(!(c=i.getBracketContext("out",a,n.ip.scope,o)[s])||c.ip.data!==n.ip.data||-1===c.ports.indexOf(t)))return r.push(n)})),r}},{key:"addBracketForwards",value:function(e){var t,n,r,o,a,i,s,c,u,l,d,p,h,f,g,m,v,y=this;if(null!=(p=e.__bracketClosingBefore)?p.length:void 0)for(n=0,s=(h=e.__bracketClosingBefore).length;n<s;n++)if(t=h[n],w("".concat(this.nodeId," closeBracket-A from '").concat(t.source,"' to ").concat(t.ports,": '").concat(t.closeIp.data,"'")),t.ports.length)for(o=0,c=(f=t.ports).length;o<c;o++)d=f[o],r=t.closeIp.clone(),this.addToResult(e,d,r,!0),this.getBracketContext("out",d,r.scope).pop();if(e.__bracketContext&&Object.keys(e.__bracketContext).reverse().forEach((function(n){var o,a,i,s,c,u,l,d,p,h,f,g,m,v,b;if((t=e.__bracketContext[n]).length){for(g in v=[],e)if(c=e[g],0!==g.indexOf("__"))if(y.outPorts[g].isAddressable()){for(i in c)if(c[i].filter((function(e){return"data"===e.type})).length&&(m="".concat(g,"[").concat(i,"]"),(b=y.getForwardableContexts(n,m,t)).length)){for(a=[],u=0,d=b.length;u<d;u++)o=b[u],w("".concat(y.nodeId," openBracket from '").concat(n,"' to '").concat(m,"': '").concat(o.ip.data,"'")),(r=o.ip.clone()).index=parseInt(i),a.push(r),o.ports.push(m),y.getBracketContext("out",g,o.ip.scope,i).push(o);for(a.reverse(),l=0,p=a.length;l<p;l++)s=a[l],y.addToResult(e,g,s,!0)}}else if(c.filter((function(e){return"data"===e.type})).length&&(b=y.getForwardableContexts(n,g,t)).length){for(a=[],f=0,h=b.length;f<h;f++)o=b[f],w("".concat(y.nodeId," openBracket from '").concat(n,"' to '").concat(g,"': '").concat(o.ip.data,"'")),a.push(o.ip.clone()),o.ports.push(g),y.getBracketContext("out",g,o.ip.scope).push(o);a.reverse(),v.push(function(){var t,n,r;for(r=[],n=0,t=a.length;n<t;n++)s=a[n],r.push(this.addToResult(e,g,s,!0));return r}.call(y))}return v}})),null!=(g=e.__bracketClosingAfter)?g.length:void 0)for(a=0,u=(m=e.__bracketClosingAfter).length;a<u;a++)if(t=m[a],w("".concat(this.nodeId," closeBracket-B from '").concat(t.source,"' to ").concat(t.ports,": '").concat(t.closeIp.data,"'")),t.ports.length)for(i=0,l=(v=t.ports).length;i<l;i++)d=v[i],r=t.closeIp.clone(),this.addToResult(e,d,r,!1),this.getBracketContext("out",d,r.scope).pop();return delete e.__bracketClosingBefore,delete e.__bracketContext,delete e.__bracketClosingAfter}},{key:"processOutputQueue",value:function(){var e,t,n,r,o,a,i,s;for(s=[];this.outputQ.length>0&&this.outputQ[0].__resolved;)i=this.outputQ.shift(),this.addBracketForwards(i),s.push(function(){var s,c,u;for(o in u=[],i)if(r=i[o],0!==o.indexOf("__"))if(this.outPorts.ports[o].isAddressable()){for(e in r)if(t=r[e],e=parseInt(e),this.outPorts.ports[o].isAttached(e))for(s=0,c=t.length;s<c;s++)n=t[s],a="".concat(o,"[").concat(n.index,"]"),"openBracket"===n.type?_("".concat(this.nodeId," sending ").concat(a," < '").concat(n.data,"'")):"closeBracket"===n.type?_("".concat(this.nodeId," sending ").concat(a," > '").concat(n.data,"'")):_("".concat(this.nodeId," sending ").concat(a," DATA")),this.outPorts[o].options.scoped||(n.scope=null),this.outPorts[o].sendIP(n)}else this.outPorts.ports[o].isAttached()&&u.push(function(){var e,t,i;for(i=[],e=0,t=r.length;e<t;e++)n=r[e],a=o,"openBracket"===n.type?_("".concat(this.nodeId," sending ").concat(a," < '").concat(n.data,"'")):"closeBracket"===n.type?_("".concat(this.nodeId," sending ").concat(a," > '").concat(n.data,"'")):_("".concat(this.nodeId," sending ").concat(a," DATA")),this.outPorts[o].options.scoped||(n.scope=null),i.push(this.outPorts[o].sendIP(n));return i}.call(this));return u}.call(this));return s}},{key:"activate",value:function(e){if(!e.activated)return e.activated=!0,e.deactivated=!1,this.load++,this.emit("activate",this.load),this.ordered||this.autoOrdering?this.outputQ.push(e.result):void 0}},{key:"deactivate",value:function(e){if(!e.deactivated)return e.deactivated=!0,e.activated=!1,this.isOrdered()&&this.processOutputQueue(),this.load--,this.emit("deactivate",this.load)}}]),o}(f);return e.prototype.description="",e.prototype.icon=null,e}.call(this),m=function(){function e(t,n,r,o){i(this,e),this.ip=t,this.nodeInstance=n,this.port=r,this.result=o,this.scope=this.ip.scope,this.activated=!1,this.deactivated=!1}return c(e,[{key:"activate",value:function(){return(this.result.__resolved||-1===this.nodeInstance.outputQ.indexOf(this.result))&&(this.result={}),this.nodeInstance.activate(this)}},{key:"deactivate",value:function(){return this.result.__resolved||(this.result.__resolved=!0),this.nodeInstance.deactivate(this)}}]),e}(),v=function(){function e(t,n){i(this,e),this.ports=t,this.context=n,this.nodeInstance=this.context.nodeInstance,this.ip=this.context.ip,this.port=this.context.port,this.result=this.context.result,this.scope=this.context.scope}return c(e,[{key:"activate",value:function(){if(!this.context.activated)return this.nodeInstance.isOrdered()&&(this.result.__resolved=!1),this.nodeInstance.activate(this.context),this.port.isAddressable()?b("".concat(this.nodeInstance.nodeId," packet on '").concat(this.port.name,"[").concat(this.ip.index,"]' caused activation ").concat(this.nodeInstance.load,": ").concat(this.ip.type)):b("".concat(this.nodeInstance.nodeId," packet on '").concat(this.port.name,"' caused activation ").concat(this.nodeInstance.load,": ").concat(this.ip.type))}},{key:"attached",value:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var r,o,a,i;for(t.length||(t=["in"]),i=[],r=0,o=t.length;r<o;r++){if(a=t[r],!this.ports[a])throw new Error("Node ".concat(this.nodeInstance.nodeId," has no port '").concat(a,"'"));i.push(this.ports[a].listAttached())}return 1===t.length?i.pop():i}},{key:"has",value:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var r,o,a,i;for(t.length||(t=["in"]),i="function"==typeof t[t.length-1]?t.pop():function(){return!0},r=0,o=t.length;r<o;r++)if(a=t[r],Array.isArray(a)){if(!this.ports[a[0]])throw new Error("Node ".concat(this.nodeInstance.nodeId," has no port '").concat(a[0],"'"));if(!this.ports[a[0]].isAddressable())throw new Error("Non-addressable ports, access must be with string ".concat(a[0]));if(!this.ports[a[0]].has(this.scope,a[1],i))return!1}else{if(!this.ports[a])throw new Error("Node ".concat(this.nodeInstance.nodeId," has no port '").concat(a,"'"));if(this.ports[a].isAddressable())throw new Error("For addressable ports, access must be with array [".concat(a,", idx]"));if(!this.ports[a].has(this.scope,i))return!1}return!0}},{key:"hasData",value:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.length||(t=["in"]),t.push((function(e){return"data"===e.type})),this.has.apply(this,t)}},{key:"hasStream",value:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var r,o,a,i,s,c,u;for(t.length||(t=["in"]),u="function"==typeof t[t.length-1]?t.pop():function(){return!0},o=0,a=t.length;o<a;o++)if(i=t[o],s=[],r=!1,c=function(e){return"openBracket"===e.type?(s.push(e.data),!1):"data"===e.type?(r=u(e,s),!s.length&&r):"closeBracket"===e.type?(s.pop(),!s.length&&!!r):void 0},!this.has(i,c))return!1;return!0}},{key:"get",value:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var r,a,i,s,c,u,l;for(this.activate(),t.length||(t=["in"]),l=[],r=0,s=t.length;r<s;r++){if(c=t[r],Array.isArray(c)){var d=c,p=o(d,2);if(u=p[0],a=p[1],!this.ports[u].isAddressable())throw new Error("Non-addressable ports, access must be with string portname")}else if(u=c,this.ports[u].isAddressable())throw new Error("For addressable ports, access must be with array [portname, idx]");this.nodeInstance.isForwardingInport(u)?(i=this.__getForForwarding(u,a),l.push(i)):(i=this.ports[u].get(this.scope,a),l.push(i))}return 1===t.length?l[0]:l}},{key:"__getForForwarding",value:function(e,t){var n,r,o,a,i,s;for(s=[],r=null;a=this.ports[e].get(this.scope,t);){if("data"===a.type){r=a;break}s.push(a)}for(o=0,i=s.length;o<i;o++)"closeBracket"!==(a=s[o]).type?"openBracket"!==a.type||this.nodeInstance.getBracketContext("in",e,this.scope,t).push({ip:a,ports:[],source:e}):(this.result.__bracketClosingBefore||(this.result.__bracketClosingBefore=[]),(n=this.nodeInstance.getBracketContext("in",e,this.scope,t).pop()).closeIp=a,this.result.__bracketClosingBefore.push(n));return this.result.__bracketContext||(this.result.__bracketContext={}),this.result.__bracketContext[e]=this.nodeInstance.getBracketContext("in",e,this.scope,t).slice(0),r}},{key:"getData",value:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var r,o,a,i,s;for(t.length||(t=["in"]),r=[],o=0,a=t.length;o<a;o++)if(s=t[o],null!=(i=this.get(s))){for(;"data"!==i.type&&(i=this.get(s)););r.push(i.data)}else r.push(i);return 1===t.length?r.pop():r}},{key:"getStream",value:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var r,o,a,i,s,c,u,l;for(t.length||(t=["in"]),r=[],a=0,s=t.length;a<s;a++){for(c=t[a],u=[],l=[],o=!1,(i=this.get(c))||r.push(void 0);i&&("openBracket"===i.type&&(u.length||(l=[],o=!1),u.push(i.data),l.push(i)),"data"!==i.type||(l.push(i),o=!0,u.length))&&("closeBracket"!==i.type||(l.push(i),u.pop(),!o||u.length));)i=this.get(c);r.push(l)}return 1===t.length?r.pop():r}}]),e}(),y=function(){function e(t,n){i(this,e),this.ports=t,this.context=n,this.nodeInstance=this.context.nodeInstance,this.ip=this.context.ip,this.result=this.context.result,this.scope=this.context.scope}return c(e,[{key:"isError",value:function(e){return e instanceof Error||Array.isArray(e)&&e.length>0&&e[0]instanceof Error}},{key:"error",value:function(e){var t,n,r,o,a,i,s;if((i=Array.isArray(e))||(e=[e]),!("error"in this.ports)||!this.ports.error.isAttached()&&this.ports.error.isRequired()){for(s=[],r=0,a=e.length;r<a;r++)throw e[r];return s}for(i&&this.sendIP("error",new g("openBracket")),n=0,o=e.length;n<o;n++)t=e[n],this.sendIP("error",t);if(i)return this.sendIP("error",new g("closeBracket"))}},{key:"sendIP",value:function(e,t){var n;if(n=g.isIP(t)?t:new g("data",t),null!==this.scope&&null===n.scope&&(n.scope=this.scope),this.nodeInstance.outPorts[e].isAddressable()&&null===n.index)throw new Error("Sending packets to addressable ports requires specifying index");if(!this.nodeInstance.isOrdered())return this.nodeInstance.outPorts[e].options.scoped||(n.scope=null),this.nodeInstance.outPorts[e].sendIP(n);this.nodeInstance.addToResult(this.result,e,n)}},{key:"send",value:function(e){var t,n,o,a,i,s,c,u;if(this.isError(e))return this.error(e);for(t=[],a=!1,n=0,o=(c=Object.keys(this.ports.ports)).length;n<o;n++)"error"!==(s=c[n])&&"ports"!==s&&"_callbacks"!==s&&t.push(s),a||null==e||"object"!==r(e)||-1===Object.keys(e).indexOf(s)||(a=!0);if(1!==t.length||a){if(t.length>1&&!a)throw new Error("Port must be specified for sending output");for(s in u=[],e)i=e[s],u.push(this.sendIP(s,i));return u}this.sendIP(t[0],e)}},{key:"sendDone",value:function(e){return this.send(e),this.done()}},{key:"pass",value:function(e){var t,n,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!("out"in this.ports))throw new Error('output.pass() requires port "out" to be present');for(t in r)n=r[t],this.ip[t]=n;return this.ip.data=e,this.sendIP("out",this.ip),this.done()}},{key:"done",value:function(e){var t,n,r,o,a,i,s,c,u,l=this;if(this.result.__resolved=!0,this.nodeInstance.activate(this.context),e&&this.error(e),i=function(){var e,t,n,r;return n=(r=l.nodeInstance.outputQ.filter((function(e){return!e.__resolved||2!==Object.keys(e).length||!e.__bracketClosingAfter}))).indexOf(l.result),e=r.length,t=l.nodeInstance.load,n===e-1||-1===n&&t===e+1||e<=1&&1===t},this.nodeInstance.isOrdered()&&i())for(c in u=this.nodeInstance.bracketContext.in)if((r=u[c])[this.scope]&&(s=r[this.scope]).length)for(n=s[s.length-1],t=this.nodeInstance.inPorts[n.source].getBuffer(n.ip.scope,n.ip.index);t.length&&"closeBracket"===t[0].type;)a=this.nodeInstance.inPorts[n.source].get(n.ip.scope,n.ip.index),(o=s.pop()).closeIp=a,this.result.__bracketClosingAfter||(this.result.__bracketClosingAfter=[]),this.result.__bracketClosingAfter.push(o);return b("".concat(this.nodeInstance.nodeId," finished processing ").concat(this.nodeInstance.load)),this.nodeInstance.deactivate(this.context)}}]),e}(),t.Component=h},56570:(e,t,n)=>{var r,o,a,i,s,c=n(34155);function u(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function l(e){return(l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function d(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function h(e,t){return(h=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function f(e,t){return!t||"object"!==l(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function g(e){return(g=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}a=n(79472),o=n(17187).EventEmitter,s=n(74279),i=n(14902),r=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&h(e,t)}(v,e);var t,n,r,o,m=(r=v,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=g(r);if(o){var n=g(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return f(this,e)});function v(e){var t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return d(this,v),(t=m.call(this)).baseDir=e,t.options=n,t.components=null,t.libraryIcons={},t.processing=!1,t.ready=!1,t.setMaxListeners(0),t}return t=v,(n=[{key:"getModulePrefix",value:function(e){return e?"noflo"===e?"":("@"===e[0]&&(e=e.replace(/\@[a-z\-]+\//,"")),e.replace(/^noflo-/,"")):""}},{key:"listComponents",value:function(e){var t=this;if(this.processing)this.once("ready",(function(){return e(null,t.components)}));else{if(this.components)return e(null,this.components);this.ready=!1,this.processing=!0,this.components={},s.register(this,(function(n){if(n){if(e)return e(n);throw n}if(t.processing=!1,t.ready=!0,t.emit("ready",!0),e)return e(null,t.components)}))}}},{key:"load",value:function(e,t,n){var r,o,a=this;if(this.ready){if(!(r=this.components[e])){for(o in this.components)if(o.split("/")[1]===e){r=this.components[o];break}if(!r)return void t(new Error("Component ".concat(e," not available with base ").concat(this.baseDir)))}if(!this.isGraph(r))return this.createComponent(e,r,n,(function(n,r){return n?t(n):r?("Graph"===e&&(r.baseDir=a.baseDir),"string"==typeof e&&(r.componentName=e),r.isLegacy()&&i.deprecated("Component ".concat(e," uses legacy NoFlo APIs. Please port to Process API")),a.setIcon(e,r),t(null,r)):void t(new Error("Component ".concat(e," could not be loaded.")))}));i.isBrowser()?setTimeout((function(){return a.loadGraph(e,r,t,n)}),0):c.nextTick((function(){return a.loadGraph(e,r,t,n)}))}else this.listComponents((function(r){return r?t(r):a.load(e,t,n)}))}},{key:"createComponent",value:function(e,t,n,r){var o,a;if(!(o=t))return r(new Error("Component ".concat(e," not available")));if("string"==typeof o)return"function"==typeof s.dynamicLoad?void s.dynamicLoad(e,o,n,r):r(Error("Dynamic loading of ".concat(o," for component ").concat(e," not available on this platform.")));if("function"==typeof o.getComponent)try{a=o.getComponent(n)}catch(e){return r(e)}else{if("function"!=typeof o)return void r(new Error("Invalid type ".concat(l(o)," for component ").concat(e,".")));try{a=o(n)}catch(e){return r(e)}}return r(null,a)}},{key:"isGraph",value:function(e){return"object"===l(e)&&e instanceof a.Graph||!("object"!==l(e)||!e.processes||!e.connections)||"string"==typeof e&&(-1!==e.indexOf(".fbp")||-1!==e.indexOf(".json"))}},{key:"loadGraph",value:function(e,t,n,r){var o=this;this.createComponent(e,this.components.Graph,r,(function(r,a){if(r)return n(r);a.loader=o,a.baseDir=o.baseDir,a.inPorts.remove("graph"),a.setGraph(t,(function(t){return t?n(t):(o.setIcon(e,a),n(null,a))}))}))}},{key:"setIcon",value:function(e,t){var n,r,o;if(t.getIcon&&!t.getIcon()){var a=(r=e.split("/"),o=2,function(e){if(Array.isArray(e))return e}(r)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(r,o)||function(e,t){if(e){if("string"==typeof e)return u(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?u(e,t):void 0}}(r,o)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());n=a[0],a[1]&&this.getLibraryIcon(n)?t.setIcon(this.getLibraryIcon(n)):t.isSubgraph()?t.setIcon("sitemap"):t.setIcon("gear")}}},{key:"getLibraryIcon",value:function(e){return this.libraryIcons[e]?this.libraryIcons[e]:null}},{key:"setLibraryIcon",value:function(e,t){return this.libraryIcons[e]=t}},{key:"normalizeName",value:function(e,t){var n,r;return r=this.getModulePrefix(e),n="".concat(r,"/").concat(t),e||(n=t),n}},{key:"registerComponent",value:function(e,t,n,r){var o;if(o=this.normalizeName(e,t),this.components[o]=n,r)return r()}},{key:"registerGraph",value:function(e,t,n,r){return this.registerComponent(e,t,n,r)}},{key:"registerLoader",value:function(e,t){return e(this,t)}},{key:"setSource",value:function(e,t,n,r,o){var a=this;return s.setSource?this.ready?s.setSource(this,e,t,n,r,o):void this.listComponents((function(i){return i?o(i):a.setSource(e,t,n,r,o)})):o(new Error("setSource not allowed"))}},{key:"getSource",value:function(e,t){var n=this;return s.getSource?this.ready?s.getSource(this,e,t):void this.listComponents((function(r){return r?t(r):n.getSource(e,t)})):t(new Error("getSource not allowed"))}},{key:"clear",value:function(){return this.components=null,this.ready=!1,this.processing=!1}}])&&p(t.prototype,n),v}(o),t.ComponentLoader=r},5416:(e,t,n)=>{var r,o,a,i,s,c,u,l,d,p,h,f,g,m,v,y,b,w,_,x,k=n(34155),P={}.hasOwnProperty;o=n(75631),r=n(14203),f=n(14902),x=n(61731),u=n(26903)("noflo:helpers"),t.WirePattern=function(e,t,n){var r,o,i;if(r="in"in t?t.in:"in",x.isArray(r)||(r=[r]),o="out"in t?t.out:"out",x.isArray(o)||(o=[o]),"error"in t||(t.error="error"),"async"in t||(t.async=!1),"ordered"in t||(t.ordered=!0),"group"in t||(t.group=!1),"field"in t||(t.field=null),"forwardGroups"in t||(t.forwardGroups=!1),t.forwardGroups&&("string"==typeof t.forwardGroups&&(t.forwardGroups=[t.forwardGroups]),"boolean"==typeof t.forwardGroups&&(t.forwardGroups=r)),"receiveStreams"in t||(t.receiveStreams=!1),t.receiveStreams)throw new Error("WirePattern receiveStreams is deprecated");if("sendStreams"in t||(t.sendStreams=!1),t.sendStreams)throw new Error("WirePattern sendStreams is deprecated");return t.async&&(t.sendStreams=o),"params"in t||(t.params=[]),"string"==typeof t.params&&(t.params=[t.params]),"name"in t||(t.name=""),"dropInput"in t||(t.dropInput=!1),"arrayPolicy"in t||(t.arrayPolicy={in:"any",params:"all"}),t.inPorts=r,t.outPorts=o,a(t,n),(t.legacy||(null!=k&&null!=(i=k.env)?i.NOFLO_WIREPATTERN_LEGACY:void 0))&&f.deprecated("noflo.helpers.WirePattern legacy mode is deprecated"),m(e,t,n)},m=function(e,t,n){return b(e,t),_(e),y(e,t),e.ordered=t.ordered,e.process((function(r,o,a){var s,c,h,f,m,v;if(i(t,r,o))return e.params=g(t,r),s=d(t,r),h=l(e,t.inPorts[0],r),f=p(t.outPorts,o),u("WirePattern Process API call with",s,h,e.params,a.scope),m=function(){throw new Error("noflo.helpers.WirePattern postpone is deprecated")},v=function(){throw new Error("noflo.helpers.WirePattern resume is deprecated")},c=w(e,t,o),n.call(e,s,h,f,(function(e){return c(),o.done(e)}),m,v,r.scope)}))},a=function(e,t){if(e.group&&f.deprecated("noflo.helpers.WirePattern group option is deprecated. Please port to Process API"),e.field&&f.deprecated("noflo.helpers.WirePattern field option is deprecated. Please port to Process API"),t.length>4&&f.deprecated("noflo.helpers.WirePattern postpone and resume are deprecated. Please port to Process API"),!e.async)throw new Error("noflo.helpers.WirePattern synchronous is deprecated. Please use async: true");if(t.length<4)throw new Error("noflo.helpers.WirePattern callback doesn't use callback argument");"error"!==e.error&&f.deprecated('noflo.helpers.WirePattern custom error port name is deprecated. Please switch to "error" or port to WirePattern')},b=function(e,t){var n,r,o,a,i;for(i=[],n=0,r=(a=t.params).length;n<r;n++)o=a[n],i.push(e.inPorts[o].options.control=!0);return i},y=function(e,t){var n,r,o,a,i,s,c,u;if(e.forwardBrackets={},t.forwardGroups)for(o=t.inPorts,x.isArray(t.forwardGroups)&&(o=t.forwardGroups),n=0,i=o.length;n<i;n++){for(r=o[n],e.forwardBrackets[r]=[],a=0,s=(u=t.outPorts).length;a<s;a++)c=u[a],e.forwardBrackets[r].push(c);e.outPorts.error&&e.forwardBrackets[r].push("error")}},w=function(e,t,n){var o,a,i,s;return a=[],o=function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];return f.deprecated("noflo.helpers.WirePattern error method is deprecated. Please send error to callback instead"),a.push({err:t,groups:n}),e.hasErrors=!0},i=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];return f.deprecated("noflo.helpers.WirePattern fail method is deprecated. Please send error to callback instead"),e&&o(e,t),s(),n.done()},s=function(){if(a.length)return t.name&&n.sendIP("error",new r("openBracket",t.name)),a.forEach((function(e){var t,o,a,i,s,c,u,l;for(o=0,i=(c=e.groups).length;o<i;o++)t=c[o],n.sendIP("error",new r("openBracket",t));for(n.sendIP("error",new r("data",e.err)),l=[],a=0,s=(u=e.groups).length;a<s;a++)t=u[a],l.push(n.sendIP("error",new r("closeBracket",t)));return l})),t.name&&n.sendIP("error",new r("closeBracket",t.name)),e.hasErrors=!1,a=[]},e.hasErrors=!1,e.error=o,e.fail=i,s},_=function(e){var t;return t=Object.keys(e.inPorts.ports).filter((function(t){return!!e.inPorts[t].options.control&&!!e.inPorts[t].hasDefault()})),e.sendDefaults=function(){return f.deprecated("noflo.helpers.WirePattern sendDefaults method is deprecated. Please start with a Network"),t.forEach((function(t){var n;return n=o.createSocket(),e.inPorts[t].attach(n),n.send(),n.disconnect(),e.inPorts[t].detach(n)}))}},g=function(e,t){var n,r,o,a,i,s,c,u,l;if(!e.params.length)return{};for(c={},n=0,a=(u=e.params).length;n<a;n++)if(s=u[n],t.ports[s].isAddressable())for(c[s]={},o=0,i=(l=t.attached(s)).length;o<i;o++)r=l[o],t.hasData([s,r])&&(c[s][r]=t.getData([s,r]));else c[s]=t.getData(s);return c},v=function(e,t){var n,r,o,a,i,s,c,u,l,d,p;for(l=null,n=[],d=[],o=r=0,s=e.length;r<s;o=++r)if("openBracket"!==(a=e[o]).type){if("closeBracket"!==a.type)t(a,n)?(l=d.slice(0)).push(a):d=[];else if(n.pop(),l&&l.push(a),d.length&&d.pop(),l&&!d.length)break}else n.push(a.data),d.push(a);if(0!==(p=e.indexOf(l[0]))){for(e.splice(p,l.length),l.reverse(),u=[],i=0,c=l.length;i<c;i++)a=l[i],u.push(e.unshift(a));return u}},h=function(e,t,n,r,o){var a;if(t.group||t.field)return t.group&&(a=n.ports[r].getBuffer(n.scope,o),v(a,(function(e,t){var r,a,i,s;for(s=n.collatedBy.brackets,o=a=0,i=s.length;a<i;o=++a)if(r=s[o],t[o]!==r)return!1;return!0}))),t.field?(e[t.field]=n.collatedBy.field,a=n.ports[r].getBuffer(n.scope,o),v(a,(function(n){return n.data[t.field]===e[t.field]}))):void 0},d=function(e,t){var n,r,o,a,i,s,c,u,l;for(n={},r=0,i=(u=e.inPorts).length;r<i;r++)if(c=u[r],t.ports[c].isAddressable())for(n[c]={},a=0,s=(l=t.attached(c)).length;a<s;a++)o=l[a],t.hasData([c,o])&&(h(n,e,t,c,o),n[c][o]=t.getData([c,o]));else t.hasData(c)&&(h(n,e,t,c),n[c]=t.getData(c));return 1===e.inPorts.length?n[e.inPorts[0]]:n},l=function(e,t,n){var r,o;return null==(null!=(r=n.result.__bracketContext)?r[t]:void 0)?[]:(null!=(o=n.collatedBy)?o.brackets:void 0)?n.collatedBy.brackets:n.result.__bracketContext[t].filter((function(e){return e.source===t})).map((function(e){return e.ip.data}))},p=function(e,t){var n;return n={},e.forEach((function(e){return n[e]={connect:function(){},beginGroup:function(n,o){var a;return(a=new r("openBracket",n)).index=o,t.sendIP(e,a)},send:function(n,o){var a;return(a=new r("data",n)).index=o,t.sendIP(e,a)},endGroup:function(n,o){var a;return(a=new r("closeBracket",n)).index=o,t.sendIP(e,a)},disconnect:function(){}}})),1===e.length?n[e[0]]:n},i=function(e,t,n){var r,o,a,i,u,l,d,p,h,f,g;if(h=c(e,t),i=s(e,t),e.dropInput&&!h){for(p=!1,o=0,l=(g=e.inPorts).length;o<l;o++)if(f=g[o],t.ports[f].isAddressable()){if(!(r=t.attached(f)).length)continue;for(u=0,d=r.length;u<d;u++)for(a=r[u];t.has([f,a]);)p=!0,t.get([f,a]).drop()}else for(;t.has(f);)p=!0,t.get(f).drop();p&&n.done()}return i&&h},c=function(e,t){var n,r,o,a,i,s;for(r=0,o=(i=e.params).length;r<o;r++)if(a=i[r],t.ports[a].isRequired())if(t.ports[a].isAddressable()){if(!(n=t.attached(a)).length)return!1;if(s=n.filter((function(e){return t.hasData([a,e])})),"all"===e.arrayPolicy.params){if(s.length!==n.length)return!1;continue}if(!s.length)return!1}else if(!t.hasData(a))return!1;return!0},s=function(e,t){var n,r,o,a,i,s,c,u,l,d;for(e.group&&(r={},t.collatedBy={brackets:[],ready:!1},o=function(e,t){var n,r,o,a;for(o=r=0,a=e.length;r<a;o=++r)if(n=e[o],t[o]!==n)return!1;return!0},a=function(n,a){var i,s;if(s=a.slice(0),e.group instanceof RegExp){if(!(s=s.slice(0,1)).length)return!1;if(!e.group.test(s[0]))return!1}return t.collatedBy.ready?o(t.collatedBy.brackets,s):(i=s.join(":"),r[i]||(r[i]=[]),-1===r[i].indexOf(u)&&r[i].push(u),e.inPorts.indexOf(u)!==e.inPorts.length-1||r[i].length===e.inPorts.length&&!t.collatedBy.ready&&(t.collatedBy.ready=!0,t.collatedBy.brackets=s,!0))}),e.field&&(t.collatedBy={field:void 0,ready:!1}),i=function(n){var r,o,i,s,c,u,l;if(!e.group&&!e.field)return t.hasData(n);if(e.group){for(l=[],i=!1,s=0,u=(r=t.ports[n].getBuffer(t.scope)).length;s<u;s++)if("openBracket"!==(c=r[s]).type)if("closeBracket"!==c.type)o=a(c,l);else{if(l.pop(),l.length)continue;if(!o)continue;i=!0}else l.push(c.data);return i}return e.field?t.hasStream(n,(function(n){return t.collatedBy.ready?n.data[e.field]===t.collatedBy.field:(t.collatedBy.field=n.data[e.field],t.collatedBy.ready=!0,!0)})):void 0},s=0,c=(l=e.inPorts).length;s<c;s++)if(u=l[s],t.ports[u].isAddressable()){if(!(n=t.attached(u)).length)return!1;if(d=n.filter((function(e){return i([u,e])})),"all"===e.arrayPolicy.in){if(d.length!==n.length)return!1;continue}if(!d.length)return!1}else if(!i(u))return!1;return!0},t.CustomError=function(e,n){var r;return r=new Error(e),t.CustomizeError(r,n)},t.CustomizeError=function(e,t){var n,r;for(n in t)P.call(t,n)&&(r=t[n],e[n]=r);return e}},14203:function(e){function t(e){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}e.exports=function(){var e=function(){function e(){var t,r,o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"data",a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};for(t in n(this,e),this.type=o,this.data=a,this._isIP=!0,this.scope=null,this.owner=null,this.clonable=!1,this.index=null,this.schema=null,this.datatype="all",i)r=i[t],this[t]=r}var o,a,i;return o=e,i=[{key:"isIP",value:function(e){return e&&"object"===t(e)&&!0===e._isIP}}],(a=[{key:"clone",value:function(){var n,r,o;for(r in n=new e(this.type),this)o=this[r],-1===["owner"].indexOf(r)&&null!==o&&("object"===t(o)?n[r]=JSON.parse(JSON.stringify(o)):n[r]=o);return n}},{key:"move",value:function(e){this.owner=e}},{key:"drop",value:function(){var e,t;for(e in t=[],this)this[e],t.push(delete this[e]);return t}}])&&r(o.prototype,a),i&&r(o,i),e}();return e.types=["data","openBracket","closeBracket"],e}.call(this)},67411:(e,t,n)=>{function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function i(e,t){return(i=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function s(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function c(e){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var u,l;u=n(29628),n(14203),l=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&i(e,t)}(d,e);var t,n,r,u,l=(r=d,u=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=c(r);if(u){var n=c(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return s(this,e)});function d(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(o(this,d),null==t.control&&(t.control=!1),null==t.scoped&&(t.scoped=!0),null==t.triggering&&(t.triggering=!0),t.process)throw new Error("InPort process callback is deprecated. Please use Process API");if(t.handle)throw new Error("InPort handle callback is deprecated. Please use Process API");return(e=l.call(this,t)).prepareBuffer(),e}return t=d,(n=[{key:"attachSocket",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return this.hasDefault()&&e.setDataDelegate((function(){return t.options.default})),e.on("connect",(function(){return t.handleSocketEvent("connect",e,n)})),e.on("begingroup",(function(e){return t.handleSocketEvent("begingroup",e,n)})),e.on("data",(function(e){return t.validateData(e),t.handleSocketEvent("data",e,n)})),e.on("endgroup",(function(e){return t.handleSocketEvent("endgroup",e,n)})),e.on("disconnect",(function(){return t.handleSocketEvent("disconnect",e,n)})),e.on("ip",(function(e){return t.handleIP(e,n)}))}},{key:"handleIP",value:function(e,t){var n;if(!this.options.control||"data"===e.type)return e.owner=this.nodeInstance,this.isAddressable()&&(e.index=t),"all"===e.datatype&&(e.datatype=this.getDataType()),this.getSchema()&&!e.schema&&(e.schema=this.getSchema()),(n=this.prepareBufferForIP(e)).push(e),this.options.control&&n.length>1&&n.shift(),this.emit("ip",e,t)}},{key:"handleSocketEvent",value:function(e,t,n){return this.isAddressable()?this.emit(e,t,n):this.emit(e,t)}},{key:"hasDefault",value:function(){return void 0!==this.options.default}},{key:"prepareBuffer",value:function(){if(this.isAddressable())return this.options.scoped&&(this.scopedBuffer={}),this.indexedBuffer={},void(this.iipBuffer={});this.options.scoped&&(this.scopedBuffer={}),this.iipBuffer=[],this.buffer=[]}},{key:"prepareBufferForIP",value:function(e){return this.isAddressable()?null!=e.scope&&this.options.scoped?(e.scope in this.scopedBuffer||(this.scopedBuffer[e.scope]=[]),e.index in this.scopedBuffer[e.scope]||(this.scopedBuffer[e.scope][e.index]=[]),this.scopedBuffer[e.scope][e.index]):e.initial?(e.index in this.iipBuffer||(this.iipBuffer[e.index]=[]),this.iipBuffer[e.index]):(e.index in this.indexedBuffer||(this.indexedBuffer[e.index]=[]),this.indexedBuffer[e.index]):null!=e.scope&&this.options.scoped?(e.scope in this.scopedBuffer||(this.scopedBuffer[e.scope]=[]),this.scopedBuffer[e.scope]):e.initial?this.iipBuffer:this.buffer}},{key:"validateData",value:function(e){if(this.options.values&&-1===this.options.values.indexOf(e))throw new Error("Invalid data='".concat(e,"' received, not in [").concat(this.options.values,"]"))}},{key:"getBuffer",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(this.isAddressable()){if(null!=e&&this.options.scoped){if(!(e in this.scopedBuffer))return;if(!(t in this.scopedBuffer[e]))return;return this.scopedBuffer[e][t]}if(n){if(!(t in this.iipBuffer))return;return this.iipBuffer[t]}if(!(t in this.indexedBuffer))return;return this.indexedBuffer[t]}if(null!=e&&this.options.scoped){if(!(e in this.scopedBuffer))return;return this.scopedBuffer[e]}return n?this.iipBuffer:this.buffer}},{key:"getFromBuffer",value:function(e,t){var n,r=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null!=(n=this.getBuffer(e,t,r))?n.length:void 0)return this.options.control?n[n.length-1]:n.shift()}},{key:"get",value:function(e,t){var n;return void 0!==(n=this.getFromBuffer(e,t))?n:this.getFromBuffer(null,t,!0)}},{key:"hasIPinBuffer",value:function(e,t,n){var r,o,a,i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(!(null!=(r=this.getBuffer(e,t,i))?r.length:void 0))return!1;for(o=0,a=r.length;o<a;o++)if(n(r[o]))return!0;return!1}},{key:"hasIIP",value:function(e,t){return this.hasIPinBuffer(null,e,t,!0)}},{key:"has",value:function(e,t,n){return this.isAddressable()||(n=t,t=null),!!this.hasIPinBuffer(e,t,n)||!!this.hasIIP(t,n)}},{key:"length",value:function(e,t){var n;return(n=this.getBuffer(e,t))?n.length:0}},{key:"ready",value:function(e,t){return this.length(e)>0}},{key:"clear",value:function(){return this.prepareBuffer()}}])&&a(t.prototype,n),d}(u),e.exports=l},75631:(e,t,n)=>{function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function i(e,t){return(i=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function s(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function c(e){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var u,l,d;u=n(17187).EventEmitter,l=n(14203),d=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&i(e,t)}(p,e);var t,n,r,u,d=(r=p,u=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=c(r);if(u){var n=c(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return s(this,e)});function p(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return o(this,p),(e=d.call(this)).metadata=t,e.brackets=[],e.connected=!1,e.dataDelegate=null,e.debug=!1,e.emitEvent=e.regularEmitEvent,e}return t=p,(n=[{key:"regularEmitEvent",value:function(e,t){return this.emit(e,t)}},{key:"debugEmitEvent",value:function(e,t){var n;try{return this.emit(e,t)}catch(e){if((n=e).id&&n.metadata&&n.error){if(0===this.listeners("error").length)throw n.error;return void this.emit("error",n)}if(0===this.listeners("error").length)throw n;return this.emit("error",{id:this.to.process.id,error:n,metadata:this.metadata})}}},{key:"connect",value:function(){if(!this.connected)return this.connected=!0,this.emitEvent("connect",null)}},{key:"disconnect",value:function(){if(this.connected)return this.connected=!1,this.emitEvent("disconnect",null)}},{key:"isConnected",value:function(){return this.connected}},{key:"send",value:function(e){return void 0===e&&"function"==typeof this.dataDelegate&&(e=this.dataDelegate()),this.handleSocketEvent("data",e)}},{key:"post",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(void 0===e&&"function"==typeof this.dataDelegate&&(e=this.dataDelegate()),this.isConnected()||0!==this.brackets.length||this.connect(),this.handleSocketEvent("ip",e,!1),t&&this.isConnected()&&0===this.brackets.length)return this.disconnect()}},{key:"beginGroup",value:function(e){return this.handleSocketEvent("begingroup",e)}},{key:"endGroup",value:function(){return this.handleSocketEvent("endgroup")}},{key:"setDataDelegate",value:function(e){if("function"!=typeof e)throw Error("A data delegate must be a function.");return this.dataDelegate=e}},{key:"setDebug",value:function(e){return this.debug=e,this.emitEvent=this.debug?this.debugEmitEvent:this.regularEmitEvent}},{key:"getId",value:function(){var e,t;return e=function(e){return"".concat(e.process.id,"() ").concat(e.port.toUpperCase())},t=function(e){return"".concat(e.port.toUpperCase()," ").concat(e.process.id,"()")},this.from||this.to?this.from&&!this.to?"".concat(e(this.from)," -> ANON"):this.from?"".concat(e(this.from)," -> ").concat(t(this.to)):"DATA -> ".concat(t(this.to)):"UNDEFINED"}},{key:"legacyToIp",value:function(e,t){if(l.isIP(t))return t;switch(e){case"begingroup":return new l("openBracket",t);case"endgroup":return new l("closeBracket");case"data":return new l("data",t);default:return null}}},{key:"ipToLegacy",value:function(e){switch(e.type){case"openBracket":return{event:"begingroup",payload:e.data};case"data":return{event:"data",payload:e.data};case"closeBracket":return{event:"endgroup",payload:e.data}}}},{key:"handleSocketEvent",value:function(e,t){var n,r,o,a=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(n=(r="ip"===e&&l.isIP(t))?t:this.legacyToIp(e,t)){if(!this.isConnected()&&a&&0===this.brackets.length&&this.connect(),"begingroup"===e&&this.brackets.push(t),r&&"openBracket"===n.type&&this.brackets.push(n.data),"endgroup"===e){if(0===this.brackets.length)return;n.data=this.brackets.pop(),t=n.data}if(r&&"closeBracket"===t.type){if(0===this.brackets.length)return;this.brackets.pop()}if(this.emitEvent("ip",n),n&&n.type)return r&&(e=(o=this.ipToLegacy(n)).event,t=o.payload),"connect"===e&&(this.connected=!0),"disconnect"===e&&(this.connected=!1),this.emitEvent(e,t)}}}])&&a(t.prototype,n),p}(u),t.InternalSocket=d,t.createSocket=function(){return new d}},25887:function(e,t,n){var r,o,a,i,s,c,u,l=n(34155);function d(e){return(d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function p(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function h(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function f(e,t){return(f=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function g(e,t){return!t||"object"!==d(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function m(e){return(m=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}s=n(75631),n(79472);var v=n(17187);r=v.EventEmitter,c=n(14902),i=n(56570),u=n(61731),o=n(14203),a=function(){var e=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&f(e,t)}(v,e);var t,n,r,a,d=(r=v,a=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=m(r);if(a){var n=m(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return g(this,e)});function v(e){var t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return p(this,v),(t=d.call(this)).options=n,t.processes={},t.connections=[],t.initials=[],t.nextInitials=[],t.defaults=[],t.graph=e,t.started=!1,t.stopped=!0,t.debug=!0,t.eventBuffer=[],c.isBrowser()?t.baseDir=e.baseDir||"/":t.baseDir=e.baseDir||l.cwd(),t.startupDate=null,e.componentLoader?t.loader=e.componentLoader:t.loader=new i.ComponentLoader(t.baseDir,t.options),t}return t=v,(n=[{key:"uptime",value:function(){return this.startupDate?new Date-this.startupDate:0}},{key:"getActiveProcesses",value:function(){var e,t,n,r;if(e=[],!this.started)return e;for(t in r=this.processes)(n=r[t]).component.load>0&&e.push(t),n.component.__openConnections>0&&e.push(t);return e}},{key:"bufferedEmit",value:function(e,t){var n,r,o,a;if("icon"!==e&&"error"!==e&&"process-error"!==e&&"end"!==e)if(this.isStarted()||"end"===e){if(this.emit(e,t),"start"===e){for(r=0,o=(a=this.eventBuffer).length;r<o;r++)n=a[r],this.emit(n.type,n.payload);this.eventBuffer=[]}if("ip"===e)switch(t.type){case"openBracket":this.bufferedEmit("begingroup",t);break;case"closeBracket":this.bufferedEmit("endgroup",t);break;case"data":this.bufferedEmit("data",t)}}else this.eventBuffer.push({type:e,payload:t});else this.emit(e,t)}},{key:"load",value:function(e,t,n){return this.loader.load(e,n,t)}},{key:"addNode",value:function(e,t){var n,r=this;if(!this.processes[e.id])return n={id:e.id},e.component?this.load(e.component,e.metadata,(function(o,a){var i,s,c,u;if(o)return t(o);for(s in a.nodeId=e.id,n.component=a,n.componentName=e.component,i=n.component.inPorts.ports,c=n.component.outPorts.ports,i)(u=i[s]).node=e.id,u.nodeInstance=a,u.name=s;for(s in c)(u=c[s]).node=e.id,u.nodeInstance=a,u.name=s;return a.isSubgraph()&&r.subscribeSubgraph(n),r.subscribeNode(n),r.processes[n.id]=n,t(null,n)})):(this.processes[n.id]=n,void t(null,n));t(null,this.processes[e.id])}},{key:"removeNode",value:function(e,t){var n,r=this;return(n=this.getNode(e.id))?n.component.shutdown((function(n){return n?t(n):(delete r.processes[e.id],t(null))})):t(new Error("Node ".concat(e.id," not found")))}},{key:"renameNode",value:function(e,t,n){var r,o,a,i,s;if(!(s=this.getNode(e)))return n(new Error("Process ".concat(e," not found")));for(o in s.id=t,r=s.component.inPorts.ports,a=s.component.outPorts.ports,r)(i=r[o])&&(i.node=t);for(o in a)(i=a[o])&&(i.node=t);return this.processes[t]=s,delete this.processes[e],n(null)}},{key:"getNode",value:function(e){return this.processes[e]}},{key:"connect",value:function(){var e,t,n,r,o,a,i=this,s=arguments.length>0&&void 0!==arguments[0]?arguments[0]:function(){};return e=0,r=function(t,n){return function(r){return i["add".concat(r)](n,(function(n){return n?s(n):++e%100!=0?t(r):void setTimeout((function(){return t(r)}),0)}))}},a=function(){return i.subscribeGraph(),s()},o=u.reduceRight(this.graph.nodes,r,a),n=u.reduceRight(this.graph.initializers,r,(function(){return o("Defaults")})),t=u.reduceRight(this.graph.edges,r,(function(){return n("Initial")})),u.reduceRight(this.graph.nodes,r,(function(){return t("Edge")}))("Node")}},{key:"connectPort",value:function(e,t,n,r,o,a){if(o)return e.to={process:t,port:n,index:r},t.component.inPorts&&t.component.inPorts[n]?t.component.inPorts[n].isAddressable()?(t.component.inPorts[n].attach(e,r),void a()):(t.component.inPorts[n].attach(e),void a()):void a(new Error("No inport '".concat(n,"' defined in process ").concat(t.id," (").concat(e.getId(),")")));if(e.from={process:t,port:n,index:r},t.component.outPorts&&t.component.outPorts[n]){if(t.component.outPorts[n].isAddressable())return t.component.outPorts[n].attach(e,r),void a();t.component.outPorts[n].attach(e),a()}else a(new Error("No outport '".concat(n,"' defined in process ").concat(t.id," (").concat(e.getId(),")")))}},{key:"subscribeGraph",value:function(){var e,t,n,r,o=this;return e=[],n=!1,r=function(t,n){return e.push({op:t,details:n})},t=function(r){var a,i;if(r){if(0===o.listeners("process-error").length)throw r;o.bufferedEmit("process-error",r)}if(e.length)switch(n=!0,i=e.shift(),a=t,i.op){case"renameNode":return o.renameNode(i.details.from,i.details.to,a);default:return o[i.op](i.details,a)}else n=!1},this.graph.on("addNode",(function(e){if(r("addNode",e),!n)return t()})),this.graph.on("removeNode",(function(e){if(r("removeNode",e),!n)return t()})),this.graph.on("renameNode",(function(e,o){if(r("renameNode",{from:e,to:o}),!n)return t()})),this.graph.on("addEdge",(function(e){if(r("addEdge",e),!n)return t()})),this.graph.on("removeEdge",(function(e){if(r("removeEdge",e),!n)return t()})),this.graph.on("addInitial",(function(e){if(r("addInitial",e),!n)return t()})),this.graph.on("removeInitial",(function(e){if(r("removeInitial",e),!n)return t()}))}},{key:"subscribeSubgraph",value:function(e){var t,n=this;if(e.component.isReady()){if(e.component.network)return e.component.network.setDebug(this.debug),t=function(t,r){if("process-error"===t&&0===n.listeners("process-error").length){if(r.id&&r.metadata&&r.error)throw r.error;throw r}return r||(r={}),r.subgraph?(r.subgraph.unshift||(r.subgraph=[r.subgraph]),r.subgraph.unshift(e.id)):r.subgraph=[e.id],n.bufferedEmit(t,r)},e.component.network.on("ip",(function(e){return t("ip",e)})),e.component.network.on("process-error",(function(e){return t("process-error",e)}))}else e.component.once("ready",(function(){return n.subscribeSubgraph(e)}))}},{key:"subscribeSocket",value:function(e,t){var n,r=this;if(e.on("ip",(function(t){return r.bufferedEmit("ip",{id:e.getId(),type:t.type,socket:e,data:t.data,metadata:e.metadata})})),e.on("error",(function(e){if(0===r.listeners("process-error").length){if(e.id&&e.metadata&&e.error)throw e.error;throw e}return r.bufferedEmit("process-error",e)})),null!=t&&null!=(n=t.component)?n.isLegacy():void 0)return e.on("connect",(function(){return t.component.__openConnections||(t.component.__openConnections=0),t.component.__openConnections++})),e.on("disconnect",(function(){if(t.component.__openConnections--,t.component.__openConnections<0&&(t.component.__openConnections=0),0===t.component.__openConnections)return r.checkIfFinished()}))}},{key:"subscribeNode",value:function(e){var t=this;if(e.component.on("activate",(function(e){if(t.debouncedEnd)return t.abortDebounce=!0})),e.component.on("deactivate",(function(e){if(!(e>0))return t.checkIfFinished()})),e.component.getIcon)return e.component.on("icon",(function(){return t.bufferedEmit("icon",{id:e.id,icon:e.component.getIcon()})}))}},{key:"addEdge",value:function(e,t){var n,r,o,a=this;if((r=s.createSocket(e.metadata)).setDebug(this.debug),!(n=this.getNode(e.from.node)))return t(new Error("No process defined for outbound node ".concat(e.from.node)));if(!n.component)return t(new Error("No component defined for outbound node ".concat(e.from.node)));if(n.component.isReady()){if(!(o=this.getNode(e.to.node)))return t(new Error("No process defined for inbound node ".concat(e.to.node)));if(!o.component)return t(new Error("No component defined for inbound node ".concat(e.to.node)));if(o.component.isReady())return this.subscribeSocket(r,n),this.connectPort(r,o,e.to.port,e.to.index,!0,(function(o){return o?t(o):a.connectPort(r,n,e.from.port,e.from.index,!1,(function(e){return e?t(e):(a.connections.push(r),t())}))}));o.component.once("ready",(function(){return a.addEdge(e,t)}))}else n.component.once("ready",(function(){return a.addEdge(e,t)}))}},{key:"removeEdge",value:function(e,t){var n,r,o,a,i;for(i=[],r=0,o=(a=this.connections).length;r<o;r++)(n=a[r])&&e.to.node===n.to.process.id&&e.to.port===n.to.port&&(n.to.process.component.inPorts[n.to.port].detach(n),e.from.node&&n.from&&e.from.node===n.from.process.id&&e.from.port===n.from.port&&n.from.process.component.outPorts[n.from.port].detach(n),this.connections.splice(this.connections.indexOf(n),1),i.push(t()));return i}},{key:"addDefaults",value:function(e,t){var n,r,o,a,i,c=this;if(!(o=this.getNode(e.id)))return t(new Error("Process ".concat(e.id," not defined")));if(!o.component)return t(new Error("No component defined for node ".concat(e.id)));if(!o.component.isReady())return o.component.setMaxListeners(0),void o.component.once("ready",(function(){return c.addDefaults(o,t)}));for(n in a=o.component.inPorts.ports)(r=a[n]).hasDefault()&&!r.isAttached()&&((i=s.createSocket()).setDebug(this.debug),this.subscribeSocket(i),this.connectPort(i,o,n,void 0,!0,(function(){})),this.connections.push(i),this.defaults.push(i));return t()}},{key:"addInitial",value:function(e,t){var n,r,o=this;return(n=s.createSocket(e.metadata)).setDebug(this.debug),this.subscribeSocket(n),(r=this.getNode(e.to.node))?r.component?r.component.isReady()||r.component.inPorts[e.to.port]?this.connectPort(n,r,e.to.port,e.to.index,!0,(function(r){var a;return r?t(r):(o.connections.push(n),a={socket:n,data:e.from.data},o.initials.push(a),o.nextInitials.push(a),o.isRunning()?o.sendInitials():o.isStopped()||(o.setStarted(!0),o.sendInitials()),t())})):(r.component.setMaxListeners(0),void r.component.once("ready",(function(){return o.addInitial(e,t)}))):t(new Error("No component defined for inbound node ".concat(e.to.node))):t(new Error("No process defined for inbound node ".concat(e.to.node)))}},{key:"removeInitial",value:function(e,t){var n,r,o,a,i,s,c,u,l,d,p;for(r=0,s=(l=this.connections).length;r<s;r++)if((n=l[r])&&e.to.node===n.to.process.id&&e.to.port===n.to.port){for(n.to.process.component.inPorts[n.to.port].detach(n),this.connections.splice(this.connections.indexOf(n),1),a=0,c=(d=this.initials).length;a<c;a++)(o=d[a])&&o.socket===n&&this.initials.splice(this.initials.indexOf(o),1);for(i=0,u=(p=this.nextInitials).length;i<u;i++)(o=p[i])&&o.socket===n&&this.nextInitials.splice(this.nextInitials.indexOf(o),1)}return t()}},{key:"sendInitial",value:function(e){return e.socket.post(new o("data",e.data,{initial:!0}))}},{key:"sendInitials",value:function(e){var t,n=this;return e||(e=function(){}),t=function(){var t,r,o,a;for(t=0,o=(a=n.initials).length;t<o;t++)r=a[t],n.sendInitial(r);return n.initials=[],e()},void 0!==l&&l.execPath&&-1!==l.execPath.indexOf("node")?l.nextTick(t):setTimeout(t,0)}},{key:"isStarted",value:function(){return this.started}},{key:"isStopped",value:function(){return this.stopped}},{key:"isRunning",value:function(){return this.getActiveProcesses().length>0}},{key:"startComponents",value:function(e){var t,n,r,o,a,i,s;if(e||(e=function(){}),t=0,r=this.processes?Object.keys(this.processes).length:0,o=function(n){return n?e(n):++t===r?e():void 0},!this.processes||!Object.keys(this.processes).length)return e();for(n in s=[],i=this.processes)(a=i[n]).component.isStarted()?o():0!==a.component.start.length?s.push(a.component.start(o)):(c.deprecated("component.start method without callback is deprecated"),a.component.start(),o());return s}},{key:"sendDefaults",value:function(e){var t,n,r,o;if(e||(e=function(){}),!this.defaults.length)return e();for(t=0,n=(r=this.defaults).length;t<n;t++)1===(o=r[t]).to.process.component.inPorts[o.to.port].sockets.length&&(o.connect(),o.send(),o.disconnect());return e()}},{key:"start",value:function(e){var t=this;e||(c.deprecated("Calling network.start() without callback is deprecated"),e=function(){}),this.debouncedEnd&&(this.abortDebounce=!0),this.started?this.stop((function(n){return n?e(n):t.start(e)})):(this.initials=this.nextInitials.slice(0),this.eventBuffer=[],this.startComponents((function(n){if(n)return e(n);t.sendInitials((function(n){if(n)return e(n);t.sendDefaults((function(n){if(n)return e(n);t.setStarted(!0),e(null)}))}))})))}},{key:"stop",value:function(e){var t,n,r,o,a,i,s,u,l,d,p,h=this;if(e||(c.deprecated("Calling network.stop() without callback is deprecated"),e=function(){}),this.debouncedEnd&&(this.abortDebounce=!0),!this.started)return this.stopped=!0,e(null);for(r=0,a=(l=this.connections).length;r<a;r++)(t=l[r]).isConnected()&&t.disconnect();if(n=0,i=this.processes?Object.keys(this.processes).length:0,s=function(t){return t?e(t):++n===i?(h.setStarted(!1),h.stopped=!0,e()):void 0},!this.processes||!Object.keys(this.processes).length)return this.setStarted(!1),this.stopped=!0,e();for(o in p=[],d=this.processes)(u=d[o]).component.isStarted()?0!==u.component.shutdown.length?p.push(u.component.shutdown(s)):(c.deprecated("component.shutdown method without callback is deprecated"),u.component.shutdown(),s()):s();return p}},{key:"setStarted",value:function(e){if(this.started!==e)return e?(this.startupDate||(this.startupDate=new Date),this.started=!0,this.stopped=!1,this.bufferedEmit("start",{start:this.startupDate})):(this.started=!1,void this.bufferedEmit("end",{start:this.startupDate,end:new Date,uptime:this.uptime()}))}},{key:"checkIfFinished",value:function(){var e=this;if(!this.isRunning())return delete this.abortDebounce,this.debouncedEnd||(this.debouncedEnd=u.debounce((function(){if(!e.abortDebounce&&!e.isRunning())return e.setStarted(!1)}),50)),this.debouncedEnd()}},{key:"getDebug",value:function(){return this.debug}},{key:"setDebug",value:function(e){var t,n,r,o,a,i,s;if(e!==this.debug){for(this.debug=e,t=0,r=(a=this.connections).length;t<r;t++)a[t].setDebug(e);for(o in s=[],i=this.processes)(n=i[o].component).isSubgraph()?s.push(n.network.setDebug(e)):s.push(void 0);return s}}}])&&h(t.prototype,n),v}(r);return e.prototype.processes={},e.prototype.connections=[],e.prototype.initials=[],e.prototype.defaults=[],e.prototype.graph=null,e.prototype.startupDate=null,e}.call(this),t.Network=a},76445:(e,t,n)=>{function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var o,a;o=n(79472),t.graph=o.graph,t.Graph=o.Graph,t.journal=o.journal,t.Journal=o.Journal,t.Network=n(25887).Network,t.isBrowser=n(14902).isBrowser,t.ComponentLoader=n(56570).ComponentLoader,t.Component=n(91680).Component,t.helpers=n(5416),a=n(66199),t.InPorts=a.InPorts,t.OutPorts=a.OutPorts,t.InPort=n(67411),t.OutPort=n(28606),t.internalSocket=n(75631),t.IP=n(14203),t.createNetwork=function(e,n,o){var a,i;return"object"!==r(o)&&(o={delay:o}),"function"!=typeof n&&(n=function(e){if(e)throw e}),a=new t.Network(e,o),i=function(e){return e.start((function(t){return t?n(t):n(null,e)}))},a.loader.listComponents((function(t){return t?n(t):0===e.nodes.length?i(a):o.delay?void n(null,a):a.connect((function(e){return e?n(e):i(a)}))})),a},t.loadFile=function(e,n,o){return o||(o=n),o&&"object"!==r(n)&&(n={baseDir:n}),t.graph.loadFile(e,(function(e,r){return e?o(e):(n.baseDir&&(r.baseDir=n.baseDir),t.createNetwork(r,o,n))}))},t.saveFile=function(e,t,n){return e.save(t,n)},t.asCallback=n(8097).asCallback,t.asComponent=n(95080).asComponent},28606:(e,t,n)=>{function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function i(e,t,n){return(i="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=u(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function s(e,t){return(s=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function c(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function u(e){return(u=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var l,d,p;l=n(29628),d=n(14203),p=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&s(e,t)}(h,e);var t,n,r,l,p=(r=h,l=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=u(r);if(l){var n=u(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return c(this,e)});function h(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return o(this,h),null==t.scoped&&(t.scoped=!0),(e=p.call(this,t)).cache={},e}return t=h,(n=[{key:"attach",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(i(u(h.prototype),"attach",this).call(this,e,t),this.isCaching()&&null!=this.cache[t])return this.send(this.cache[t],t)}},{key:"connect",value:function(){var e,t,n,r,o,a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;for(o=this.getSockets(a),this.checkRequired(o),n=[],e=0,t=o.length;e<t;e++)(r=o[e])&&n.push(r.connect());return n}},{key:"beginGroup",value:function(e){var t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return t=this.getSockets(n),this.checkRequired(t),t.forEach((function(t){if(t)return t.beginGroup(e)}))}},{key:"send",value:function(e){var t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return t=this.getSockets(n),this.checkRequired(t),this.isCaching()&&e!==this.cache[n]&&(this.cache[n]=e),t.forEach((function(t){if(t)return t.send(e)}))}},{key:"endGroup",value:function(){var e,t,n,r,o,a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;for(o=this.getSockets(a),this.checkRequired(o),n=[],e=0,t=o.length;e<t;e++)(r=o[e])&&n.push(r.endGroup());return n}},{key:"disconnect",value:function(){var e,t,n,r,o,a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;for(o=this.getSockets(a),this.checkRequired(o),n=[],e=0,t=o.length;e<t;e++)(r=o[e])&&n.push(r.disconnect());return n}},{key:"sendIP",value:function(e,t,n,r){var o,a,i,s,c,u,l,p=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];for(d.isIP(e)?r=(a=e).index:a=new d(e,t,n),l=this.getSockets(r),this.checkRequired(l),"all"===a.datatype&&(a.datatype=this.getDataType()),this.getSchema()&&!a.schema&&(a.schema=this.getSchema()),this.isCaching()&&t!==(null!=(c=this.cache[r])?c.data:void 0)&&(this.cache[r]=a),s=!0,o=0,i=l.length;o<i;o++)(u=l[o])&&(s?(u.post(a,p),s=!1):(a.clonable&&(a=a.clone()),u.post(a,p)));return this}},{key:"openBracket",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;return this.sendIP("openBracket",e,t,n)}},{key:"data",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;return this.sendIP("data",e,t,n)}},{key:"closeBracket",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;return this.sendIP("closeBracket",e,t,n)}},{key:"checkRequired",value:function(e){if(0===e.length&&this.isRequired())throw new Error("".concat(this.getId(),": No connections available"))}},{key:"getSockets",value:function(e){if(this.isAddressable()){if(null===e)throw new Error("".concat(this.getId()," Socket ID required"));return this.sockets[e]?[this.sockets[e]]:[]}return this.sockets}},{key:"isCaching",value:function(){return!!this.options.caching}}])&&a(t.prototype,n),h}(l),e.exports=p},14902:(e,t,n)=>{var r=n(34155);t.isBrowser=function(){return void 0===r||!r.execPath||!r.execPath.match(/node|iojs/)},t.deprecated=function(e){if(!t.isBrowser()){if(r.env.NOFLO_FATAL_DEPRECATED)throw new Error(e);return console.warn(e)}if(window.NOFLO_FATAL_DEPRECATED)throw new Error(e);console.warn(e)}},66199:function(e,t,n){function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function i(e,t,n){return t&&a(e.prototype,t),n&&a(e,n),e}function s(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&c(e,t)}function c(e,t){return(c=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function u(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=d(e);if(t){var o=d(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return l(this,n)}}function l(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function d(e){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var p,h,f,g,m=n(17187);p=m.EventEmitter,h=n(67411),f=n(28606),g=function(){var e=function(e){s(n,e);var t=u(n);function n(e){var r,a,i;if(o(this,n),(r=t.call(this)).ports={},!e)return l(r);for(a in e)i=e[a],r.add(a,i);return r}return i(n,[{key:"add",value:function(e,t,n){if("add"===e||"remove"===e)throw new Error("Add and remove are restricted port names");if(!e.match(/^[a-z0-9_\.\/]+$/))throw new Error("Port names can only contain lowercase alphanumeric characters and underscores. '".concat(e,"' not allowed"));return this.ports[e]&&this.remove(e),"object"===r(t)&&t.canAttach?this.ports[e]=t:this.ports[e]=new this.model(t,n),this[e]=this.ports[e],this.emit("add",e),this}},{key:"remove",value:function(e){if(!this.ports[e])throw new Error("Port ".concat(e," not defined"));return delete this.ports[e],delete this[e],this.emit("remove",e),this}}]),n}(p);return e.prototype.model=h,e}.call(this),t.InPorts=function(e){s(n,e);var t=u(n);function n(){return o(this,n),t.apply(this,arguments)}return i(n,[{key:"on",value:function(e,t,n){if(!this.ports[e])throw new Error("Port ".concat(e," not available"));return this.ports[e].on(t,n)}},{key:"once",value:function(e,t,n){if(!this.ports[e])throw new Error("Port ".concat(e," not available"));return this.ports[e].once(t,n)}}]),n}(g),t.OutPorts=function(){var e=function(e){s(n,e);var t=u(n);function n(){return o(this,n),t.apply(this,arguments)}return i(n,[{key:"connect",value:function(e,t){if(!this.ports[e])throw new Error("Port ".concat(e," not available"));return this.ports[e].connect(t)}},{key:"beginGroup",value:function(e,t,n){if(!this.ports[e])throw new Error("Port ".concat(e," not available"));return this.ports[e].beginGroup(t,n)}},{key:"send",value:function(e,t,n){if(!this.ports[e])throw new Error("Port ".concat(e," not available"));return this.ports[e].send(t,n)}},{key:"endGroup",value:function(e,t){if(!this.ports[e])throw new Error("Port ".concat(e," not available"));return this.ports[e].endGroup(t)}},{key:"disconnect",value:function(e,t){if(!this.ports[e])throw new Error("Port ".concat(e," not available"));return this.ports[e].disconnect(t)}}]),n}(g);return e.prototype.model=f,e}.call(this),t.normalizePortName=function(e){var t,n;return n={name:e},-1===e.indexOf("[")?n:(null!=(t=e.match(/(.*)\[([0-9]+)\]/))?t.length:void 0)?(n.name=t[1],n.index=t[2],n):e}},61731:(e,t)=>{var n,r,o,a,i,s;r=function(e){return/.*\.coffee$/.test(e)?"coffeescript":"javascript"},o=function(e){return Array.isArray?Array.isArray(e):"[object Array]"===Object.prototype.toString.call(arg)},a=function(e,t,n){if(void 0===t)return e;switch(null===n?3:n){case 1:return function(n){return e.call(t,n)};case 2:return function(n,r){return e.call(t,n,r)};case 3:return function(n,r,o){return e.call(t,n,r,o)};case 4:return function(n,r,o,a){return e.call(t,n,r,o,a)}}return function(){return e.apply(t,arguments)}},s=function(e,t,n,r,o,a){for(var i;o>=0&&o<a;)n=t(n,e[i=r?r[o]:o],i,e),o+=-1;return n},i=function(e,t,n,r){var o,i,c;return t=a(t,r,4),o=(c=((i=Object.keys(e))||e).length)-1,arguments.length<3&&(n=e[i?i[o]:o],o+=-1),s(e,t,n,i,o,c)},n=function(e,t,n){var r,o,a,i,s,c;return s=void 0,r=void 0,o=void 0,c=void 0,i=void 0,a=function(){var u;(u=Date.now-c)<t&&u>=0?s=setTimeout(a,t-u):(s=null,n||(i=e.apply(o,r),s||(o=r=null)))},function(){var u;return o=this,r=arguments,c=Date.now,u=n&&!s,s||(s=setTimeout(a,t)),u&&(i=e.apply(o,r),o=r=null),i}},t.guessLanguageFromFilename=r,t.reduceRight=i,t.debounce=n,t.isArray=o},5623:e=>{"use strict";function t(e,t,o){e instanceof RegExp&&(e=n(e,o)),t instanceof RegExp&&(t=n(t,o));var a=r(e,t,o);return a&&{start:a[0],end:a[1],pre:o.slice(0,a[0]),body:o.slice(a[0]+e.length,a[1]),post:o.slice(a[1]+t.length)}}function n(e,t){var n=t.match(e);return n?n[0]:null}function r(e,t,n){var r,o,a,i,s,c=n.indexOf(e),u=n.indexOf(t,c+1),l=c;if(c>=0&&u>0){for(r=[],a=n.length;l>=0&&!s;)l==c?(r.push(l),c=n.indexOf(e,l+1)):1==r.length?s=[r.pop(),u]:((o=r.pop())<a&&(a=o,i=u),u=n.indexOf(t,l+1)),l=c<u&&c>=0?c:u;r.length&&(s=[a,i])}return s}e.exports=t,t.range=r},79742:(e,t)=>{"use strict";t.byteLength=function(e){var t=c(e),n=t[0],r=t[1];return 3*(n+r)/4-r},t.toByteArray=function(e){var t,n,a=c(e),i=a[0],s=a[1],u=new o(function(e,t,n){return 3*(t+n)/4-n}(0,i,s)),l=0,d=s>0?i-4:i;for(n=0;n<d;n+=4)t=r[e.charCodeAt(n)]<<18|r[e.charCodeAt(n+1)]<<12|r[e.charCodeAt(n+2)]<<6|r[e.charCodeAt(n+3)],u[l++]=t>>16&255,u[l++]=t>>8&255,u[l++]=255&t;return 2===s&&(t=r[e.charCodeAt(n)]<<2|r[e.charCodeAt(n+1)]>>4,u[l++]=255&t),1===s&&(t=r[e.charCodeAt(n)]<<10|r[e.charCodeAt(n+1)]<<4|r[e.charCodeAt(n+2)]>>2,u[l++]=t>>8&255,u[l++]=255&t),u},t.fromByteArray=function(e){for(var t,r=e.length,o=r%3,a=[],i=16383,s=0,c=r-o;s<c;s+=i)a.push(u(e,s,s+i>c?c:s+i));return 1===o?(t=e[r-1],a.push(n[t>>2]+n[t<<4&63]+"==")):2===o&&(t=(e[r-2]<<8)+e[r-1],a.push(n[t>>10]+n[t>>4&63]+n[t<<2&63]+"=")),a.join("")};for(var n=[],r=[],o="undefined"!=typeof Uint8Array?Uint8Array:Array,a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",i=0,s=a.length;i<s;++i)n[i]=a[i],r[a.charCodeAt(i)]=i;function c(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=e.indexOf("=");return-1===n&&(n=t),[n,n===t?0:4-n%4]}function u(e,t,r){for(var o,a,i=[],s=t;s<r;s+=3)o=(e[s]<<16&16711680)+(e[s+1]<<8&65280)+(255&e[s+2]),i.push(n[(a=o)>>18&63]+n[a>>12&63]+n[a>>6&63]+n[63&a]);return i.join("")}r["-".charCodeAt(0)]=62,r["_".charCodeAt(0)]=63},3644:(e,t,n)=>{var r=n(11048),o=n(5623);e.exports=function(e){return e?("{}"===e.substr(0,2)&&(e="\\{\\}"+e.substr(2)),v(function(e){return e.split("\\\\").join(a).split("\\{").join(i).split("\\}").join(s).split("\\,").join(c).split("\\.").join(u)}(e),!0).map(d)):[]};var a="\0SLASH"+Math.random()+"\0",i="\0OPEN"+Math.random()+"\0",s="\0CLOSE"+Math.random()+"\0",c="\0COMMA"+Math.random()+"\0",u="\0PERIOD"+Math.random()+"\0";function l(e){return parseInt(e,10)==e?parseInt(e,10):e.charCodeAt(0)}function d(e){return e.split(a).join("\\").split(i).join("{").split(s).join("}").split(c).join(",").split(u).join(".")}function p(e){if(!e)return[""];var t=[],n=o("{","}",e);if(!n)return e.split(",");var r=n.pre,a=n.body,i=n.post,s=r.split(",");s[s.length-1]+="{"+a+"}";var c=p(i);return i.length&&(s[s.length-1]+=c.shift(),s.push.apply(s,c)),t.push.apply(t,s),t}function h(e){return"{"+e+"}"}function f(e){return/^-?0\d/.test(e)}function g(e,t){return e<=t}function m(e,t){return e>=t}function v(e,t){var n=[],a=o("{","}",e);if(!a||/\$$/.test(a.pre))return[e];var i,c=/^-?\d+\.\.-?\d+(?:\.\.-?\d+)?$/.test(a.body),u=/^[a-zA-Z]\.\.[a-zA-Z](?:\.\.-?\d+)?$/.test(a.body),d=c||u,y=a.body.indexOf(",")>=0;if(!d&&!y)return a.post.match(/,.*\}/)?v(e=a.pre+"{"+a.body+s+a.post):[e];if(d)i=a.body.split(/\.\./);else if(1===(i=p(a.body)).length&&1===(i=v(i[0],!1).map(h)).length)return(_=a.post.length?v(a.post,!1):[""]).map((function(e){return a.pre+i[0]+e}));var b,w=a.pre,_=a.post.length?v(a.post,!1):[""];if(d){var x=l(i[0]),k=l(i[1]),P=Math.max(i[0].length,i[1].length),S=3==i.length?Math.abs(l(i[2])):1,C=g;k<x&&(S*=-1,C=m);var D=i.some(f);b=[];for(var E=x;C(E,k);E+=S){var j;if(u)"\\"===(j=String.fromCharCode(E))&&(j="");else if(j=String(E),D){var A=P-j.length;if(A>0){var I=new Array(A+1).join("0");j=E<0?"-"+I+j.slice(1):I+j}}b.push(j)}}else b=r(i,(function(e){return v(e,!1)}));for(var O=0;O<b.length;O++)for(var q=0;q<_.length;q++){var R=w+b[O]+_[q];(!t||d||R)&&n.push(R)}return n}},50706:e=>{!function(){"use strict";e.exports=function(e){return(e instanceof Buffer?e:Buffer.from(e.toString(),"binary")).toString("base64")}}()},48764:(e,t,n)=>{"use strict";const r=n(79742),o=n(80645),a="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;t.Buffer=c,t.SlowBuffer=function(e){return+e!=e&&(e=0),c.alloc(+e)},t.INSPECT_MAX_BYTES=50;const i=2147483647;function s(e){if(e>i)throw new RangeError('The value "'+e+'" is invalid for option "size"');const t=new Uint8Array(e);return Object.setPrototypeOf(t,c.prototype),t}function c(e,t,n){if("number"==typeof e){if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return d(e)}return u(e,t,n)}function u(e,t,n){if("string"==typeof e)return function(e,t){if("string"==typeof t&&""!==t||(t="utf8"),!c.isEncoding(t))throw new TypeError("Unknown encoding: "+t);const n=0|g(e,t);let r=s(n);const o=r.write(e,t);return o!==n&&(r=r.slice(0,o)),r}(e,t);if(ArrayBuffer.isView(e))return function(e){if(Q(e,Uint8Array)){const t=new Uint8Array(e);return h(t.buffer,t.byteOffset,t.byteLength)}return p(e)}(e);if(null==e)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(Q(e,ArrayBuffer)||e&&Q(e.buffer,ArrayBuffer))return h(e,t,n);if("undefined"!=typeof SharedArrayBuffer&&(Q(e,SharedArrayBuffer)||e&&Q(e.buffer,SharedArrayBuffer)))return h(e,t,n);if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');const r=e.valueOf&&e.valueOf();if(null!=r&&r!==e)return c.from(r,t,n);const o=function(e){if(c.isBuffer(e)){const t=0|f(e.length),n=s(t);return 0===n.length||e.copy(n,0,0,t),n}return void 0!==e.length?"number"!=typeof e.length||X(e.length)?s(0):p(e):"Buffer"===e.type&&Array.isArray(e.data)?p(e.data):void 0}(e);if(o)return o;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return c.from(e[Symbol.toPrimitive]("string"),t,n);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function l(e){if("number"!=typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function d(e){return l(e),s(e<0?0:0|f(e))}function p(e){const t=e.length<0?0:0|f(e.length),n=s(t);for(let r=0;r<t;r+=1)n[r]=255&e[r];return n}function h(e,t,n){if(t<0||e.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(n||0))throw new RangeError('"length" is outside of buffer bounds');let r;return r=void 0===t&&void 0===n?new Uint8Array(e):void 0===n?new Uint8Array(e,t):new Uint8Array(e,t,n),Object.setPrototypeOf(r,c.prototype),r}function f(e){if(e>=i)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+i.toString(16)+" bytes");return 0|e}function g(e,t){if(c.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||Q(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);const n=e.length,r=arguments.length>2&&!0===arguments[2];if(!r&&0===n)return 0;let o=!1;for(;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":return V(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return H(e).length;default:if(o)return r?-1:V(e).length;t=(""+t).toLowerCase(),o=!0}}function m(e,t,n){let r=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return A(this,t,n);case"utf8":case"utf-8":return C(this,t,n);case"ascii":return E(this,t,n);case"latin1":case"binary":return j(this,t,n);case"base64":return S(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return I(this,t,n);default:if(r)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),r=!0}}function v(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function y(e,t,n,r,o){if(0===e.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),X(n=+n)&&(n=o?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(o)return-1;n=e.length-1}else if(n<0){if(!o)return-1;n=0}if("string"==typeof t&&(t=c.from(t,r)),c.isBuffer(t))return 0===t.length?-1:b(e,t,n,r,o);if("number"==typeof t)return t&=255,"function"==typeof Uint8Array.prototype.indexOf?o?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):b(e,[t],n,r,o);throw new TypeError("val must be string, number or Buffer")}function b(e,t,n,r,o){let a,i=1,s=e.length,c=t.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(e.length<2||t.length<2)return-1;i=2,s/=2,c/=2,n/=2}function u(e,t){return 1===i?e[t]:e.readUInt16BE(t*i)}if(o){let r=-1;for(a=n;a<s;a++)if(u(e,a)===u(t,-1===r?0:a-r)){if(-1===r&&(r=a),a-r+1===c)return r*i}else-1!==r&&(a-=a-r),r=-1}else for(n+c>s&&(n=s-c),a=n;a>=0;a--){let n=!0;for(let r=0;r<c;r++)if(u(e,a+r)!==u(t,r)){n=!1;break}if(n)return a}return-1}function w(e,t,n,r){n=Number(n)||0;const o=e.length-n;r?(r=Number(r))>o&&(r=o):r=o;const a=t.length;let i;for(r>a/2&&(r=a/2),i=0;i<r;++i){const r=parseInt(t.substr(2*i,2),16);if(X(r))return i;e[n+i]=r}return i}function _(e,t,n,r){return J(V(t,e.length-n),e,n,r)}function x(e,t,n,r){return J(function(e){const t=[];for(let n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}(t),e,n,r)}function k(e,t,n,r){return J(H(t),e,n,r)}function P(e,t,n,r){return J(function(e,t){let n,r,o;const a=[];for(let i=0;i<e.length&&!((t-=2)<0);++i)n=e.charCodeAt(i),r=n>>8,o=n%256,a.push(o),a.push(r);return a}(t,e.length-n),e,n,r)}function S(e,t,n){return 0===t&&n===e.length?r.fromByteArray(e):r.fromByteArray(e.slice(t,n))}function C(e,t,n){n=Math.min(e.length,n);const r=[];let o=t;for(;o<n;){const t=e[o];let a=null,i=t>239?4:t>223?3:t>191?2:1;if(o+i<=n){let n,r,s,c;switch(i){case 1:t<128&&(a=t);break;case 2:n=e[o+1],128==(192&n)&&(c=(31&t)<<6|63&n,c>127&&(a=c));break;case 3:n=e[o+1],r=e[o+2],128==(192&n)&&128==(192&r)&&(c=(15&t)<<12|(63&n)<<6|63&r,c>2047&&(c<55296||c>57343)&&(a=c));break;case 4:n=e[o+1],r=e[o+2],s=e[o+3],128==(192&n)&&128==(192&r)&&128==(192&s)&&(c=(15&t)<<18|(63&n)<<12|(63&r)<<6|63&s,c>65535&&c<1114112&&(a=c))}}null===a?(a=65533,i=1):a>65535&&(a-=65536,r.push(a>>>10&1023|55296),a=56320|1023&a),r.push(a),o+=i}return function(e){const t=e.length;if(t<=D)return String.fromCharCode.apply(String,e);let n="",r=0;for(;r<t;)n+=String.fromCharCode.apply(String,e.slice(r,r+=D));return n}(r)}t.kMaxLength=i,c.TYPED_ARRAY_SUPPORT=function(){try{const e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),c.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(c.prototype,"parent",{enumerable:!0,get:function(){if(c.isBuffer(this))return this.buffer}}),Object.defineProperty(c.prototype,"offset",{enumerable:!0,get:function(){if(c.isBuffer(this))return this.byteOffset}}),c.poolSize=8192,c.from=function(e,t,n){return u(e,t,n)},Object.setPrototypeOf(c.prototype,Uint8Array.prototype),Object.setPrototypeOf(c,Uint8Array),c.alloc=function(e,t,n){return function(e,t,n){return l(e),e<=0?s(e):void 0!==t?"string"==typeof n?s(e).fill(t,n):s(e).fill(t):s(e)}(e,t,n)},c.allocUnsafe=function(e){return d(e)},c.allocUnsafeSlow=function(e){return d(e)},c.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==c.prototype},c.compare=function(e,t){if(Q(e,Uint8Array)&&(e=c.from(e,e.offset,e.byteLength)),Q(t,Uint8Array)&&(t=c.from(t,t.offset,t.byteLength)),!c.isBuffer(e)||!c.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;let n=e.length,r=t.length;for(let o=0,a=Math.min(n,r);o<a;++o)if(e[o]!==t[o]){n=e[o],r=t[o];break}return n<r?-1:r<n?1:0},c.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},c.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return c.alloc(0);let n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;const r=c.allocUnsafe(t);let o=0;for(n=0;n<e.length;++n){let t=e[n];if(Q(t,Uint8Array))o+t.length>r.length?(c.isBuffer(t)||(t=c.from(t)),t.copy(r,o)):Uint8Array.prototype.set.call(r,t,o);else{if(!c.isBuffer(t))throw new TypeError('"list" argument must be an Array of Buffers');t.copy(r,o)}o+=t.length}return r},c.byteLength=g,c.prototype._isBuffer=!0,c.prototype.swap16=function(){const e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let t=0;t<e;t+=2)v(this,t,t+1);return this},c.prototype.swap32=function(){const e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let t=0;t<e;t+=4)v(this,t,t+3),v(this,t+1,t+2);return this},c.prototype.swap64=function(){const e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let t=0;t<e;t+=8)v(this,t,t+7),v(this,t+1,t+6),v(this,t+2,t+5),v(this,t+3,t+4);return this},c.prototype.toString=function(){const e=this.length;return 0===e?"":0===arguments.length?C(this,0,e):m.apply(this,arguments)},c.prototype.toLocaleString=c.prototype.toString,c.prototype.equals=function(e){if(!c.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===c.compare(this,e)},c.prototype.inspect=function(){let e="";const n=t.INSPECT_MAX_BYTES;return e=this.toString("hex",0,n).replace(/(.{2})/g,"$1 ").trim(),this.length>n&&(e+=" ... "),"<Buffer "+e+">"},a&&(c.prototype[a]=c.prototype.inspect),c.prototype.compare=function(e,t,n,r,o){if(Q(e,Uint8Array)&&(e=c.from(e,e.offset,e.byteLength)),!c.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===o&&(o=this.length),t<0||n>e.length||r<0||o>this.length)throw new RangeError("out of range index");if(r>=o&&t>=n)return 0;if(r>=o)return-1;if(t>=n)return 1;if(this===e)return 0;let a=(o>>>=0)-(r>>>=0),i=(n>>>=0)-(t>>>=0);const s=Math.min(a,i),u=this.slice(r,o),l=e.slice(t,n);for(let e=0;e<s;++e)if(u[e]!==l[e]){a=u[e],i=l[e];break}return a<i?-1:i<a?1:0},c.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},c.prototype.indexOf=function(e,t,n){return y(this,e,t,n,!0)},c.prototype.lastIndexOf=function(e,t,n){return y(this,e,t,n,!1)},c.prototype.write=function(e,t,n,r){if(void 0===t)r="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)r=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(n)?(n>>>=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}const o=this.length-t;if((void 0===n||n>o)&&(n=o),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");let a=!1;for(;;)switch(r){case"hex":return w(this,e,t,n);case"utf8":case"utf-8":return _(this,e,t,n);case"ascii":case"latin1":case"binary":return x(this,e,t,n);case"base64":return k(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return P(this,e,t,n);default:if(a)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),a=!0}},c.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};const D=4096;function E(e,t,n){let r="";n=Math.min(e.length,n);for(let o=t;o<n;++o)r+=String.fromCharCode(127&e[o]);return r}function j(e,t,n){let r="";n=Math.min(e.length,n);for(let o=t;o<n;++o)r+=String.fromCharCode(e[o]);return r}function A(e,t,n){const r=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>r)&&(n=r);let o="";for(let r=t;r<n;++r)o+=Y[e[r]];return o}function I(e,t,n){const r=e.slice(t,n);let o="";for(let e=0;e<r.length-1;e+=2)o+=String.fromCharCode(r[e]+256*r[e+1]);return o}function O(e,t,n){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function q(e,t,n,r,o,a){if(!c.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>o||t<a)throw new RangeError('"value" argument is out of bounds');if(n+r>e.length)throw new RangeError("Index out of range")}function R(e,t,n,r,o){U(t,r,o,e,n,7);let a=Number(t&BigInt(4294967295));e[n++]=a,a>>=8,e[n++]=a,a>>=8,e[n++]=a,a>>=8,e[n++]=a;let i=Number(t>>BigInt(32)&BigInt(4294967295));return e[n++]=i,i>>=8,e[n++]=i,i>>=8,e[n++]=i,i>>=8,e[n++]=i,n}function T(e,t,n,r,o){U(t,r,o,e,n,7);let a=Number(t&BigInt(4294967295));e[n+7]=a,a>>=8,e[n+6]=a,a>>=8,e[n+5]=a,a>>=8,e[n+4]=a;let i=Number(t>>BigInt(32)&BigInt(4294967295));return e[n+3]=i,i>>=8,e[n+2]=i,i>>=8,e[n+1]=i,i>>=8,e[n]=i,n+8}function B(e,t,n,r,o,a){if(n+r>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function M(e,t,n,r,a){return t=+t,n>>>=0,a||B(e,0,n,4),o.write(e,t,n,r,23,4),n+4}function N(e,t,n,r,a){return t=+t,n>>>=0,a||B(e,0,n,8),o.write(e,t,n,r,52,8),n+8}c.prototype.slice=function(e,t){const n=this.length;(e=~~e)<0?(e+=n)<0&&(e=0):e>n&&(e=n),(t=void 0===t?n:~~t)<0?(t+=n)<0&&(t=0):t>n&&(t=n),t<e&&(t=e);const r=this.subarray(e,t);return Object.setPrototypeOf(r,c.prototype),r},c.prototype.readUintLE=c.prototype.readUIntLE=function(e,t,n){e>>>=0,t>>>=0,n||O(e,t,this.length);let r=this[e],o=1,a=0;for(;++a<t&&(o*=256);)r+=this[e+a]*o;return r},c.prototype.readUintBE=c.prototype.readUIntBE=function(e,t,n){e>>>=0,t>>>=0,n||O(e,t,this.length);let r=this[e+--t],o=1;for(;t>0&&(o*=256);)r+=this[e+--t]*o;return r},c.prototype.readUint8=c.prototype.readUInt8=function(e,t){return e>>>=0,t||O(e,1,this.length),this[e]},c.prototype.readUint16LE=c.prototype.readUInt16LE=function(e,t){return e>>>=0,t||O(e,2,this.length),this[e]|this[e+1]<<8},c.prototype.readUint16BE=c.prototype.readUInt16BE=function(e,t){return e>>>=0,t||O(e,2,this.length),this[e]<<8|this[e+1]},c.prototype.readUint32LE=c.prototype.readUInt32LE=function(e,t){return e>>>=0,t||O(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},c.prototype.readUint32BE=c.prototype.readUInt32BE=function(e,t){return e>>>=0,t||O(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},c.prototype.readBigUInt64LE=K((function(e){z(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||W(e,this.length-8);const r=t+256*this[++e]+65536*this[++e]+this[++e]*2**24,o=this[++e]+256*this[++e]+65536*this[++e]+n*2**24;return BigInt(r)+(BigInt(o)<<BigInt(32))})),c.prototype.readBigUInt64BE=K((function(e){z(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||W(e,this.length-8);const r=t*2**24+65536*this[++e]+256*this[++e]+this[++e],o=this[++e]*2**24+65536*this[++e]+256*this[++e]+n;return(BigInt(r)<<BigInt(32))+BigInt(o)})),c.prototype.readIntLE=function(e,t,n){e>>>=0,t>>>=0,n||O(e,t,this.length);let r=this[e],o=1,a=0;for(;++a<t&&(o*=256);)r+=this[e+a]*o;return o*=128,r>=o&&(r-=Math.pow(2,8*t)),r},c.prototype.readIntBE=function(e,t,n){e>>>=0,t>>>=0,n||O(e,t,this.length);let r=t,o=1,a=this[e+--r];for(;r>0&&(o*=256);)a+=this[e+--r]*o;return o*=128,a>=o&&(a-=Math.pow(2,8*t)),a},c.prototype.readInt8=function(e,t){return e>>>=0,t||O(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},c.prototype.readInt16LE=function(e,t){e>>>=0,t||O(e,2,this.length);const n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},c.prototype.readInt16BE=function(e,t){e>>>=0,t||O(e,2,this.length);const n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},c.prototype.readInt32LE=function(e,t){return e>>>=0,t||O(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},c.prototype.readInt32BE=function(e,t){return e>>>=0,t||O(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},c.prototype.readBigInt64LE=K((function(e){z(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||W(e,this.length-8);const r=this[e+4]+256*this[e+5]+65536*this[e+6]+(n<<24);return(BigInt(r)<<BigInt(32))+BigInt(t+256*this[++e]+65536*this[++e]+this[++e]*2**24)})),c.prototype.readBigInt64BE=K((function(e){z(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||W(e,this.length-8);const r=(t<<24)+65536*this[++e]+256*this[++e]+this[++e];return(BigInt(r)<<BigInt(32))+BigInt(this[++e]*2**24+65536*this[++e]+256*this[++e]+n)})),c.prototype.readFloatLE=function(e,t){return e>>>=0,t||O(e,4,this.length),o.read(this,e,!0,23,4)},c.prototype.readFloatBE=function(e,t){return e>>>=0,t||O(e,4,this.length),o.read(this,e,!1,23,4)},c.prototype.readDoubleLE=function(e,t){return e>>>=0,t||O(e,8,this.length),o.read(this,e,!0,52,8)},c.prototype.readDoubleBE=function(e,t){return e>>>=0,t||O(e,8,this.length),o.read(this,e,!1,52,8)},c.prototype.writeUintLE=c.prototype.writeUIntLE=function(e,t,n,r){e=+e,t>>>=0,n>>>=0,r||q(this,e,t,n,Math.pow(2,8*n)-1,0);let o=1,a=0;for(this[t]=255&e;++a<n&&(o*=256);)this[t+a]=e/o&255;return t+n},c.prototype.writeUintBE=c.prototype.writeUIntBE=function(e,t,n,r){e=+e,t>>>=0,n>>>=0,r||q(this,e,t,n,Math.pow(2,8*n)-1,0);let o=n-1,a=1;for(this[t+o]=255&e;--o>=0&&(a*=256);)this[t+o]=e/a&255;return t+n},c.prototype.writeUint8=c.prototype.writeUInt8=function(e,t,n){return e=+e,t>>>=0,n||q(this,e,t,1,255,0),this[t]=255&e,t+1},c.prototype.writeUint16LE=c.prototype.writeUInt16LE=function(e,t,n){return e=+e,t>>>=0,n||q(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},c.prototype.writeUint16BE=c.prototype.writeUInt16BE=function(e,t,n){return e=+e,t>>>=0,n||q(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},c.prototype.writeUint32LE=c.prototype.writeUInt32LE=function(e,t,n){return e=+e,t>>>=0,n||q(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},c.prototype.writeUint32BE=c.prototype.writeUInt32BE=function(e,t,n){return e=+e,t>>>=0,n||q(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},c.prototype.writeBigUInt64LE=K((function(e,t=0){return R(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),c.prototype.writeBigUInt64BE=K((function(e,t=0){return T(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),c.prototype.writeIntLE=function(e,t,n,r){if(e=+e,t>>>=0,!r){const r=Math.pow(2,8*n-1);q(this,e,t,n,r-1,-r)}let o=0,a=1,i=0;for(this[t]=255&e;++o<n&&(a*=256);)e<0&&0===i&&0!==this[t+o-1]&&(i=1),this[t+o]=(e/a>>0)-i&255;return t+n},c.prototype.writeIntBE=function(e,t,n,r){if(e=+e,t>>>=0,!r){const r=Math.pow(2,8*n-1);q(this,e,t,n,r-1,-r)}let o=n-1,a=1,i=0;for(this[t+o]=255&e;--o>=0&&(a*=256);)e<0&&0===i&&0!==this[t+o+1]&&(i=1),this[t+o]=(e/a>>0)-i&255;return t+n},c.prototype.writeInt8=function(e,t,n){return e=+e,t>>>=0,n||q(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},c.prototype.writeInt16LE=function(e,t,n){return e=+e,t>>>=0,n||q(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},c.prototype.writeInt16BE=function(e,t,n){return e=+e,t>>>=0,n||q(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},c.prototype.writeInt32LE=function(e,t,n){return e=+e,t>>>=0,n||q(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},c.prototype.writeInt32BE=function(e,t,n){return e=+e,t>>>=0,n||q(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},c.prototype.writeBigInt64LE=K((function(e,t=0){return R(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),c.prototype.writeBigInt64BE=K((function(e,t=0){return T(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),c.prototype.writeFloatLE=function(e,t,n){return M(this,e,t,!0,n)},c.prototype.writeFloatBE=function(e,t,n){return M(this,e,t,!1,n)},c.prototype.writeDoubleLE=function(e,t,n){return N(this,e,t,!0,n)},c.prototype.writeDoubleBE=function(e,t,n){return N(this,e,t,!1,n)},c.prototype.copy=function(e,t,n,r){if(!c.isBuffer(e))throw new TypeError("argument should be a Buffer");if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);const o=r-n;return this===e&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,n,r):Uint8Array.prototype.set.call(e,this.subarray(n,r),t),o},c.prototype.fill=function(e,t,n,r){if("string"==typeof e){if("string"==typeof t?(r=t,t=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!c.isEncoding(r))throw new TypeError("Unknown encoding: "+r);if(1===e.length){const t=e.charCodeAt(0);("utf8"===r&&t<128||"latin1"===r)&&(e=t)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;let o;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(o=t;o<n;++o)this[o]=e;else{const a=c.isBuffer(e)?e:c.from(e,r),i=a.length;if(0===i)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(o=0;o<n-t;++o)this[o+t]=a[o%i]}return this};const L={};function F(e,t,n){L[e]=class extends n{constructor(){super(),Object.defineProperty(this,"message",{value:t.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${e}]`,this.stack,delete this.name}get code(){return e}set code(e){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:e,writable:!0})}toString(){return`${this.name} [${e}]: ${this.message}`}}}function G(e){let t="",n=e.length;const r="-"===e[0]?1:0;for(;n>=r+4;n-=3)t=`_${e.slice(n-3,n)}${t}`;return`${e.slice(0,n)}${t}`}function U(e,t,n,r,o,a){if(e>n||e<t){const r="bigint"==typeof t?"n":"";let o;throw o=a>3?0===t||t===BigInt(0)?`>= 0${r} and < 2${r} ** ${8*(a+1)}${r}`:`>= -(2${r} ** ${8*(a+1)-1}${r}) and < 2 ** ${8*(a+1)-1}${r}`:`>= ${t}${r} and <= ${n}${r}`,new L.ERR_OUT_OF_RANGE("value",o,e)}!function(e,t,n){z(t,"offset"),void 0!==e[t]&&void 0!==e[t+n]||W(t,e.length-(n+1))}(r,o,a)}function z(e,t){if("number"!=typeof e)throw new L.ERR_INVALID_ARG_TYPE(t,"number",e)}function W(e,t,n){if(Math.floor(e)!==e)throw z(e,n),new L.ERR_OUT_OF_RANGE(n||"offset","an integer",e);if(t<0)throw new L.ERR_BUFFER_OUT_OF_BOUNDS;throw new L.ERR_OUT_OF_RANGE(n||"offset",`>= ${n?1:0} and <= ${t}`,e)}F("ERR_BUFFER_OUT_OF_BOUNDS",(function(e){return e?`${e} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"}),RangeError),F("ERR_INVALID_ARG_TYPE",(function(e,t){return`The "${e}" argument must be of type number. Received type ${typeof t}`}),TypeError),F("ERR_OUT_OF_RANGE",(function(e,t,n){let r=`The value of "${e}" is out of range.`,o=n;return Number.isInteger(n)&&Math.abs(n)>2**32?o=G(String(n)):"bigint"==typeof n&&(o=String(n),(n>BigInt(2)**BigInt(32)||n<-(BigInt(2)**BigInt(32)))&&(o=G(o)),o+="n"),r+=` It must be ${t}. Received ${o}`,r}),RangeError);const $=/[^+/0-9A-Za-z-_]/g;function V(e,t){let n;t=t||1/0;const r=e.length;let o=null;const a=[];for(let i=0;i<r;++i){if(n=e.charCodeAt(i),n>55295&&n<57344){if(!o){if(n>56319){(t-=3)>-1&&a.push(239,191,189);continue}if(i+1===r){(t-=3)>-1&&a.push(239,191,189);continue}o=n;continue}if(n<56320){(t-=3)>-1&&a.push(239,191,189),o=n;continue}n=65536+(o-55296<<10|n-56320)}else o&&(t-=3)>-1&&a.push(239,191,189);if(o=null,n<128){if((t-=1)<0)break;a.push(n)}else if(n<2048){if((t-=2)<0)break;a.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;a.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;a.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return a}function H(e){return r.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace($,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function J(e,t,n,r){let o;for(o=0;o<r&&!(o+n>=t.length||o>=e.length);++o)t[o+n]=e[o];return o}function Q(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function X(e){return e!=e}const Y=function(){const e="0123456789abcdef",t=new Array(256);for(let n=0;n<16;++n){const r=16*n;for(let o=0;o<16;++o)t[r+o]=e[n]+e[o]}return t}();function K(e){return"undefined"==typeof BigInt?Z:e}function Z(){throw new Error("BigInt not supported")}},21924:(e,t,n)=>{"use strict";var r=n(40210),o=n(55559),a=o(r("String.prototype.indexOf"));e.exports=function(e,t){var n=r(e,!!t);return"function"==typeof n&&a(e,".prototype.")>-1?o(n):n}},55559:(e,t,n)=>{"use strict";var r=n(58612),o=n(40210),a=o("%Function.prototype.apply%"),i=o("%Function.prototype.call%"),s=o("%Reflect.apply%",!0)||r.call(i,a),c=o("%Object.getOwnPropertyDescriptor%",!0),u=o("%Object.defineProperty%",!0),l=o("%Math.max%");if(u)try{u({},"a",{value:1})}catch(e){u=null}e.exports=function(e){var t=s(r,i,arguments);if(c&&u){var n=c(t,"length");n.configurable&&u(t,"length",{value:1+l(0,e.length-(arguments.length-1))})}return t};var d=function(){return s(r,a,arguments)};u?u(e.exports,"apply",{value:d}):e.exports.apply=d},16313:e=>{var t=function(){"use strict";function e(e,t){return null!=t&&e instanceof t}var t,n,r;try{t=Map}catch(e){t=function(){}}try{n=Set}catch(e){n=function(){}}try{r=Promise}catch(e){r=function(){}}function o(a,s,c,u,l){"object"==typeof s&&(c=s.depth,u=s.prototype,l=s.includeNonEnumerable,s=s.circular);var d=[],p=[],h="undefined"!=typeof Buffer;return void 0===s&&(s=!0),void 0===c&&(c=1/0),function a(c,f){if(null===c)return null;if(0===f)return c;var g,m;if("object"!=typeof c)return c;if(e(c,t))g=new t;else if(e(c,n))g=new n;else if(e(c,r))g=new r((function(e,t){c.then((function(t){e(a(t,f-1))}),(function(e){t(a(e,f-1))}))}));else if(o.__isArray(c))g=[];else if(o.__isRegExp(c))g=new RegExp(c.source,i(c)),c.lastIndex&&(g.lastIndex=c.lastIndex);else if(o.__isDate(c))g=new Date(c.getTime());else{if(h&&Buffer.isBuffer(c))return g=Buffer.allocUnsafe?Buffer.allocUnsafe(c.length):new Buffer(c.length),c.copy(g),g;e(c,Error)?g=Object.create(c):void 0===u?(m=Object.getPrototypeOf(c),g=Object.create(m)):(g=Object.create(u),m=u)}if(s){var v=d.indexOf(c);if(-1!=v)return p[v];d.push(c),p.push(g)}for(var y in e(c,t)&&c.forEach((function(e,t){var n=a(t,f-1),r=a(e,f-1);g.set(n,r)})),e(c,n)&&c.forEach((function(e){var t=a(e,f-1);g.add(t)})),c){var b;m&&(b=Object.getOwnPropertyDescriptor(m,y)),b&&null==b.set||(g[y]=a(c[y],f-1))}if(Object.getOwnPropertySymbols){var w=Object.getOwnPropertySymbols(c);for(y=0;y<w.length;y++){var _=w[y];(!(k=Object.getOwnPropertyDescriptor(c,_))||k.enumerable||l)&&(g[_]=a(c[_],f-1),k.enumerable||Object.defineProperty(g,_,{enumerable:!1}))}}if(l){var x=Object.getOwnPropertyNames(c);for(y=0;y<x.length;y++){var k,P=x[y];(k=Object.getOwnPropertyDescriptor(c,P))&&k.enumerable||(g[P]=a(c[P],f-1),Object.defineProperty(g,P,{enumerable:!1}))}}return g}(a,c)}function a(e){return Object.prototype.toString.call(e)}function i(e){var t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),t}return o.clonePrototype=function(e){if(null===e)return null;var t=function(){};return t.prototype=e,new t},o.__objToStr=a,o.__isDate=function(e){return"object"==typeof e&&"[object Date]"===a(e)},o.__isArray=function(e){return"object"==typeof e&&"[object Array]"===a(e)},o.__isRegExp=function(e){return"object"==typeof e&&"[object RegExp]"===a(e)},o.__getRegExpFlags=i,o}();e.exports&&(e.exports=t)},61923:(e,t,n)=>{"use strict";var r,o,a,i;r=n(13469),a=n(76445),i=n(76414),o=function(e,t,n){var i,s,c,u,l,d,p;if(r.isArray(e)){for(s=c=0,l=e.length;c<l;s=++c)i=e[s],n.send({out:i}),delete e[s];e=r.compact(e)}if(!(t<=0)){for(u in d=[],e)p=e[u],n.send({out:new a.IP("openBracket",u)}),r.isObject(p)?o(p,t-1,n):n.send({out:p}),d.push(n.send({out:new a.IP("closeBracket",u)}));return d}r.isEmpty(e)||n.send({out:e})},t.getComponent=function(){var e;return(e=new a.Component).description="Convert each incoming object into a stream",e.icon="expand",e.inPorts.add("in",{datatype:"all",description:"Array/Object packets to convert"}),e.inPorts.add("depth",{datatype:"int",description:"Maximum level of recursion when conversion incoming object packet",control:!0}),e.outPorts.add("out",{datatype:"all",description:"Inner items from incoming array/objects with associated keys as groups"}),e.outPorts.add("empty",{datatype:"bang",description:"Sends when an empty object or array was received"}),e.process((function(e,t){var n,s,c;if(e.hasData("in")&&(!e.attached("depth").length||e.hasData("depth")))if(s=e.hasData("depth")?e.getData("depth"):Infinity,n=e.getData("in"),r.isArray(n)||r.isObject(n))if(r.isArray(n)&&0===n.length)t.sendDone({empty:null});else{if(!r.isObject(n)||0!==Object.keys(n).length)return c=i.deepCopy(n),t.send({out:new a.IP("openBracket",null)}),o(c,s,t),t.send({out:new a.IP("closeBracket",null)}),t.done();t.sendDone({empty:null})}else t.sendDone({out:n})}))}},93196:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).icon="font",e.description="stringifies a simple object with configurable associator and delimiter",e.inPorts.add("in",{datatype:"object",description:"Object to convert"}),e.inPorts.add("assoc",{datatype:"string",description:"Associating string for key/value pairs",control:!0,default:":"}),e.inPorts.add("delim",{datatype:"string",description:"Delimiter string between object properties",control:!0,default:","}),e.outPorts.add("out",{datatype:"string"}),e.process((function(e,t){var n,r,o,a,i,s;if(e.hasData("in")&&(!e.attached("assoc").length||e.hasData("assoc"))&&(!e.attached("delim").length||e.hasData("delim"))){for(a in n=e.hasData("assoc")?e.getData("assoc"):":",o=e.hasData("delim")?e.getData("delim"):",",i=[],r=e.getData("in"))s=r[a],"[object String]"!==Object.prototype.toString.apply(s)&&(s=JSON.stringify(s)),i.push("".concat(a).concat(n).concat(s));return t.sendDone({out:i.join(o)})}}))}},2045:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).icon="compress",e.description="Merges incoming IPs stream into one array",e.inPorts.add("in",{datatype:"all"}),e.outPorts.add("out",{datatype:"array"}),e.forwardBrackets={},e.process((function(e,t){var n,r,o,a,i,s;if(e.hasStream("in")){for(n=r=[],o=0,a=(s=e.getStream("in")).length;o<a;o++)"openBracket"===(i=s[o]).type&&(n=[]),"data"!==i.type?"closeBracket"===i.type&&r.push(n):n.push(i.data);return 1===r.length&&Array.isArray(r[0])?t.send(r[0]):t.send(r),t.done()}}))}},74137:(e,t,n)=>{"use strict";var r,o,a,i,s={}.hasOwnProperty;a=n(76445),r=n(13469),o=function(e,t){var n,r,o;for(n=e,r=0,o=t.length;r<o;r++)n=n[t[r]];return n},i=function(e){var t,n,o,a;if(!r.isObject(e))return e;if(o={},n=e.length,r.keys(e).length>n)for(t in e)s.call(e,t)&&(a=e[t],r.isNumber(t)||(o[t]=i(a)));else o=e.slice();return o},t.getComponent=function(){return new PacketsToObject},t.getComponent=function(){var e;return(e=new a.Component).icon="compress",e.description="Convert the structure of a packet stream into an object",e.inPorts.add("in",{datatype:"all"}),e.outPorts.add("out",{datatype:"object"}),e.forwardBrackets={},e.process((function(e,t){var n,r,a,s,c,u,l;if(e.hasStream("in")){for(n=[],s=[],"openBracket"===(l=e.getStream("in"))[0].type&&(l.shift(),l.pop()),r=0,a=l.length;r<a;r++)"openBracket"!==(c=l[r]).type?("data"===c.type&&o(s,n).push(c.data),"closeBracket"===c.type&&n.pop()):(o(s,n)[c.data]=[],n.push(c.data));return u=i(s),t.sendDone(u)}}))}},59627:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="Assume packets at odd numbers to be keys and those at even numbers to be values",e.icon="link",e.inPorts.add("in",{datatype:"all",description:"Stream of IPs representing key(odd packets) and value(even packets)"}),e.outPorts.add("out",{datatype:"object"}),e.forwardBrackets={},e.process((function(e,t){var n,r,o,a,i,s,c;if(e.hasStream("in")){for(n=0,i={},o=null,r=0,a=(c=e.getStream("in").filter((function(e){return"data"===e.type}))).length;r<a;r++)s=c[r],++n%2!=0?"string"!=typeof s.data||(o=s.data):null!=o&&(i[o]=s.data,o=null);return t.sendDone({out:i})}}))}},48667:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).inPorts.add("in",{datatype:"object"}),e.outPorts.add("out",{datatype:"object"}),e.process((function(e,t){var n,r,o,a,i,s;if(e.hasData("in")){for(i in n={},o=e.getData("in"))for(r in a=o[i])s=a[r],n[r]||(n[r]={}),n[r][i]=s;return t.sendDone({out:n})}}))}},84933:(e,t,n)=>{"use strict";var r,o;o=n(76445),r=function(e){return 0!==e.indexOf("data:")&&location.href.replace("http://","").replace("https://","").split("/")[0]!==e.replace("http://","").replace("https://","").split("/")[0]},t.getComponent=function(){var e;return(e=new o.Component).description="Converts a URL to use a CORS-enabling proxy",e.icon="arrow-circle-o-right",e.service="http://crossorigin.me/",e.inPorts.add("in",{datatype:"string"}),e.outPorts.add("out",{datatype:"string"}),e.process((function(t,n){var a,i,s,c;if(t.hasData("in"))return"string"!=typeof(c=t.getData("in"))?n.done(new Error("String required")):(i=c,o.isBrowser()&&r(c)&&(a=/^(https?):\/\//,s=c.replace(a,""),i=e.service+s),n.sendDone({out:i}))}))}},26174:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).icon="globe",e.description="HTTP GET a URL",e.inPorts.add("url",{datatype:"string"}),e.outPorts.add("out",{datatype:"string"}),e.outPorts.add("error",{datatype:"object"}),e.forwardBrackets={url:["out","error"]},e.process((function(e,t){var n,r;if(e.hasData("url"))return r=e.getData("url"),(n=new XMLHttpRequest).onreadystatechange=function(){if(4===n.readyState){if(200!==n.status)return t.done(new Error("Error loading ".concat(r)));t.sendDone({out:n.responseText})}},n.open("GET",r,!0),n.send(null)}))}},51444:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).icon="globe",e.description="Get contents via JSONP from a URL",e.inPorts.add("url",{datatype:"string"}),e.outPorts.add("out",{datatype:"string"}),e.outPorts.add("error",{datatype:"object"}),e.forwardBrackets={url:["out","error"]},e.process((function(e,t){var n,r,o,a;if(e.hasData("url"))return a=e.getData("url"),r="noflo"+(100*Math.random()).toString().replace(/\./g,""),n=document.querySelector("body"),(o=document.createElement("script")).onerror=function(e){return delete window[r],n.removeChild(o),t.done(e)},window[r]=function(e){return delete window[r],n.removeChild(o),e&&e.meta&&404===e.meta.status?t.done(new Error("".concat(a," not found}"))):t.sendDone({out:e})},o.type="application/javascript",-1===a.indexOf("?")&&(a="".concat(a,"?callback=?")),o.src=a.replace("callback=?","callback=".concat(r)),n.appendChild(o)}))}},55152:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).icon="dot-circle-o",e.description="Configure Require.js",e.inPorts.add("config",{datatype:"object",description:"Require.js configuration object"}),e.outPorts.add("ready",{datatype:"bang",required:!1}),e.outPorts.add("error",{datatype:"object",required:!1}),r.helpers.WirePattern(e,{in:"config",out:"ready",forwardGroups:!0,async:!0},(function(e,t,n,r){return window.requirejs?(window.requirejs.config(e),n.send(!0),r()):r(new Error("Require.js not available"))}))}},31685:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).icon="dot-circle-o",e.description="Load an AMD module",e.inPorts.add("path",{datatype:"string",description:"Path of the module to load"}),e.outPorts.add("module",{datatype:"object"}),e.outPorts.add("error",{datatype:"object",required:!1}),r.helpers.WirePattern(e,{in:"path",out:"module",forwardGroups:!0,async:!0},(function(e,t,n,r){return window.requirejs?window.requirejs([e],(function(t){return n.beginGroup(e),n.send(t),n.endGroup(e),r()}),(function(e){return r(e)})):r(new Error("Require.js not available"))}))}},32163:(e,t,n)=>{"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){return(o=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function a(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?i(e):t}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var c,u,l;l=n(76445),c=n(81919),u=function(){var e=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&o(e,t)}(u,e);var t,n,r=(t=u,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=s(t);if(n){var o=s(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return a(this,e)});function u(){var e,t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),e=r.call(this),t={point:{datatype:"object",description:"top left point",required:!0},width:{datatype:"number",required:!0},height:{datatype:"number",required:!0}},c(i(e),"clearrect",t),e}return u}(l.Component);return e.prototype.description="Clear rectangle",e.prototype.icon="eraser",e}.call(void 0),t.getComponent=function(){return new u}},95783:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e,t;return(e=new r.Component).description="Convert a RGB array to a hex value",e.inPorts.add("in",{datatype:"array"}),e.outPorts.add("out",{datatype:"string"}),t=function(e){var t;return 1===(t=e.toString(16)).length&&(t="0"+t),t},e.process((function(e,n){var r,o;e.hasData("in")&&(o=e.getData("in"),r="#"+t(o[0])+t(o[1])+t(o[2]),n.sendDone({out:r}))}))}},94160:(e,t,n)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var o;o=n(76445),t.getComponent=function(){var e;return(e=new o.Component).description="Makes a Canvas with given dimensions",e.icon="pencil-square",e.inPorts.add("width",{datatype:"int"}),e.inPorts.add("height",{datatype:"int"}),e.outPorts.add("canvas",{datatype:"object"}),e.process((function(e,t){var n,o,a,i,s;if(e.hasData("width","height")){var c=(i=e.getData("width","height"),s=2,function(e){if(Array.isArray(e))return e}(i)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(i,s)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(i,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());a=c[0],o=c[1],(n=document.createElement("canvas")).width=a,n.height=o,t.sendDone({canvas:n})}}))}},8877:(e,t,n)=>{"use strict";function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var o,a,i;i=n(76445),a=2*Math.PI,o=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.parseThing=this.parseThing.bind(this),this.clearRect=this.clearRect.bind(this),this.strokeStyle=this.strokeStyle.bind(this),this.lineWidth=this.lineWidth.bind(this),this.fillStyle=this.fillStyle.bind(this),this.stroke=this.stroke.bind(this),this.fill=this.fill.bind(this),this.bezierCurve=this.bezierCurve.bind(this),this.pathItem=this.pathItem.bind(this),this.path=this.path.bind(this),this.group=this.group.bind(this),this.transform=this.transform.bind(this),this.recurse=this.recurse.bind(this),this.rectangle=this.rectangle.bind(this),this.fillRect=this.fillRect.bind(this),this.strokeRect=this.strokeRect.bind(this),this.arc=this.arc.bind(this),this.circle=this.circle.bind(this),this.drawimage=this.drawimage.bind(this),this.context=t,this.canvas=n}var t,n;return t=e,(n=[{key:"parse",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return t&&this.context.clearRect(0,0,this.canvas.width,this.canvas.height),this.parseThing(e)}},{key:"parseThing",value:function(e,t,n){var r,o,a,i;if(null!=e&&null!=e.type&&null!=this[e.type]){if(null!=t&&t(),this[e.type](e),null!=n)return n()}else if(e instanceof Array){for(i=[],o=0,a=e.length;o<a;o++)null!=(r=e[o])&&i.push(this.parseThing(r,t,n));return i}}},{key:"clearRect",value:function(e){var t,n,r,o;return r=e.point.x,o=e.point.y,n=e.width,t=e.height,this.context.clearRect(r,o,n,t)}},{key:"strokeStyle",value:function(e){return this.context.strokeStyle=e.value}},{key:"lineWidth",value:function(e){return this.context.lineWidth=e.value}},{key:"fillStyle",value:function(e){return this.context.fillStyle=e.value}},{key:"stroke",value:function(e){var t,n,r,o;if(null!=e.strokestyle&&(r=this.context.strokeStyle,this.context.strokeStyle=e.strokestyle),null!=e.linewidth&&(o=this.context.linewidth,this.context.lineWidth=e.linewidth),n=function(){return this.context.beginPath()},t=function(){return e.closepath&&this.context.closePath(),this.context.stroke()},this.parseThing(e.items,n.bind(this),t.bind(this)),null!=r&&(this.context.strokeStyle=r),null!=o)return this.context.lineWidth=o}},{key:"fill",value:function(e){var t,n,r;if(null!=e.fillstyle&&(r=this.context.fillStyle,this.context.fillStyle=e.fillstyle),n=function(){return this.context.beginPath()},t=function(){return this.context.closePath(),this.context.fill()},this.parseThing(e.items,n.bind(this),t.bind(this)),null!=r)return this.context.fillStyle=r}},{key:"bezierCurve",value:function(e){return this.context.bezierCurveTo(e.control1.x,e.control1.y,e.control2.x,e.control2.y,e.end.x,e.end.y)}},{key:"pathItem",value:function(e,t){var n,r,o,a;if(e instanceof Array)for(r=o=0,a=e.length;o<a;r=++o)n=e[r],this.pathItem(n,r);else if(null!=e.type)switch(e.type){case"point":return 0===t?this.context.moveTo(e.x,e.y):this.context.lineTo(e.x,e.y);case"beziercurve":return this.bezierCurve(e);case"arc":return this.arc(e)}}},{key:"path",value:function(e){var t,n,r,o,a,i;for(a=[],t=n=0,r=(o=e.items).length;n<r;t=++n)null!=(i=o[t])&&a.push(this.pathItem(i,t));return a}},{key:"group",value:function(e){var t,n,r,o,a;for(o=[],t=0,n=(r=e.groupables).length;t<n;t++)null!=(a=r[t])&&null!=a.type&&null!=this[a.type]&&o.push(this[a.type].call(this,a));return o}},{key:"transform",value:function(e,t){if(null!=e.translate&&this.context.translate(e.translate.x,e.translate.y),null!=e.rotate&&this.context.rotate(e.rotate),e.scaleboth?this.context.scale(e.scaleboth,e.scaleboth):null!=e.scale&&e.scale.x&&e.scale.y&&this.context.scale(e.scale.x,e.scale.y),this.parseThing(e.items),null!=t&&t>0&&this.transform(e,t-1),e.scaleboth?this.context.scale(1/e.scaleboth,1/e.scaleboth):null!=e.scale&&e.scale.x&&e.scale.y&&this.context.scale(1/e.scale.x,1/e.scale.y),null!=e.rotate&&this.context.rotate(0-e.rotate),null!=e.translate)return this.context.translate(0-e.translate.x,0-e.translate.y)}},{key:"recurse",value:function(e){var t,n,r,o,a;for(o=[],t=0,n=(r=e.recursables).length;t<n;t++)null!=(a=r[t])&&("transform"===a.type?o.push(this.transform(a,e.count)):o.push(void 0));return o}},{key:"rectangle",value:function(e){var t,n,r,o;return r=e.point.x,o=e.point.y,n=e.width,t=e.height,this.context.moveTo(r,o),this.context.lineTo(r+n,o),this.context.lineTo(r+n,o+t),this.context.lineTo(r,o+t),this.context.lineTo(r,o)}},{key:"fillRect",value:function(e){var t,n,r,o;return r=e.point.x,o=e.point.y,n=e.width,t=e.height,this.context.fillRect(r,o,n,t)}},{key:"strokeRect",value:function(e){var t,n,r,o;return r=e.point.x,o=e.point.y,n=e.width,t=e.height,this.context.strokeRect(r,o,n,t)}},{key:"arc",value:function(e){return this.context.arc(e.center.x,e.center.y,e.radius,e.start,e.end,e.reverse)}},{key:"circle",value:function(e){return this.context.arc(e.center.x,e.center.y,e.radius,0,a)}},{key:"drawimage",value:function(e){var t,n,r;if(null!=e.image)return null!=e.sourcerect&&null!=e.destrect?(t=e.destrect,r=e.sourcerect,void this.context.drawImage(e.image,t.point.x,t.point.y,t.width,t.height,r.point.x,r.point.y,r.width,r.height)):null!=e.destrect?(t=e.destrect,void this.context.drawImage(e.image,t.point.x,t.point.y,t.width,t.height)):null!=e.destpoint?(n=e.destpoint,void this.context.drawImage(e.image,n.x,n.y)):this.context.drawImage(e.image,0,0)}}])&&r(t.prototype,n),e}(),t.getComponent=function(){return new Draw},t.getComponent=function(){var e,t;return(e=new i.Component).description="Draws received drawing commands",e.icon="pencil",e.inPorts.add("canvas",{datatype:"object",control:!0}),e.inPorts.add("commands",{datatype:"object",addressable:!0}),e.inPorts.add("tick",{datatype:"bang"}),e.inPorts.add("drawevery",{datatype:"boolean",default:!1,control:!0}),e.inPorts.add("clearevery",{datatype:"boolean",default:!1,control:!0}),e.outPorts.add("canvas",{datatype:"object"}),e.outPorts.add("error",{datatype:"object"}),e.scopes={},e.tearDown=function(t){return e.scopes={},t()},t=function(t,n){return e.scopes[t]?(e.scopes[t].canvas!==n&&(e.scopes[t].canvas=n,e.scopes[t].context=n.getContext("2d")),e.scopes[t]):(e.scopes[t]={commands:[],context:n.getContext("2d"),canvas:n},e.scopes[t])},e.forwardBrackets={tick:["canvas","error"]},e.process((function(e,n){var r,a,i,s,c;if(e.hasData("canvas")&&(!e.attached("drawevery").length||e.hasData("drawevery"))&&(!e.attached("clearevery").length||e.hasData("clearevery"))){if(e.hasData("tick"))return e.getData("tick"),a=!1,e.hasData("clearevery")&&(a=e.getData("clearevery")),r=e.getData("canvas"),c=t(e.scope,r),new o(c.context,r).parse(c.commands,a),void n.sendDone({canvas:r});(s=e.attached("commands").filter((function(t){return e.hasData(["commands",t])}))).length&&(i=!1,e.hasData("drawevery")&&(i=e.getData("drawevery")),a=!1,e.hasData("clearevery")&&(a=e.getData("clearevery")),r=e.getData("canvas"),c=t(e.scope,r),s.forEach((function(t){return c.commands[t]=e.getData(["commands",t])})),i?(new o(c.context,r).parse(c.commands,a),n.sendDone({canvas:r})):n.done())}}))}},95422:(e,t,n)=>{"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){return(o=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function a(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?i(e):t}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var c,u,l;l=n(76445),c=n(81919),u=function(){var e=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&o(e,t)}(u,e);var t,n,r=(t=u,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=s(t);if(n){var o=s(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return a(this,e)});function u(){var e,t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),e=r.call(this),t={image:{description:"canvas, img, or video to draw",datatype:"object",required:!0},destpoint:{description:"destination point (full size)",datatype:"object",default:{x:0,y:0},required:!1},destrect:{description:"destination rect, to scale",datatype:"object",required:!1},sourcerect:{description:"source rect, to scale",datatype:"object",required:!1}},c(i(e),"drawimage",t),e}return u}(l.Component);return e.prototype.description="Draws the specified image",e.prototype.icon="pencil-square",e}.call(void 0),t.getComponent=function(){return new u}},82851:(e,t,n)=>{"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){return(o=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function a(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?i(e):t}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var c,u,l;l=n(76445),c=n(81919),u=function(){var e=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&o(e,t)}(u,e);var t,n,r=(t=u,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=s(t);if(n){var o=s(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return a(this,e)});function u(){var e,t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),e=r.call(this),t={items:{datatype:"object",description:"shapes (paths, circles, and rectangles) to fill",addressable:!0,required:!0},fillstyle:{datatype:"string",description:"css color string",required:!1}},c(i(e),"fill",t),e}return u}(l.Component);return e.prototype.description="Fills the received paths, rectangles, circles, and arcs",e.prototype.icon="square",e}.call(void 0),t.getComponent=function(){return new u}},94911:(e,t,n)=>{"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){return(o=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function a(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?i(e):t}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var c,u;u=n(76445),c=n(81919),function(){var e=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&o(e,t)}(u,e);var t,n,r=(t=u,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=s(t);if(n){var o=s(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return a(this,e)});function u(){var e,t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),e=r.call(this),t={point:{datatype:"object",description:"top left point",required:!0},width:{datatype:"number",required:!0},height:{datatype:"number",required:!0}},c(i(e),"fillrect",t),e}return u}(u.Component);return e.prototype.description="Fills a rectangle",e.prototype.icon="pencil-square",t.getComponent=function(){return new e},e}.call(void 0)},89046:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="Sets the global fill style",e.icon="pencil-square-o",e.inPorts.add("style",{datatype:"string"}),e.outPorts.add("fillstyle",{datatype:"object"}),e.process((function(e,t){var n;e.hasData("style")&&(n={type:"fillStyle",value:e.getData("style")},t.sendDone({out:new r.IP("data",n)}))}))}},30208:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="Group drawing commands or primatives into a flattened array.",e.icon="folder-o",e.inPorts.add("items",{datatype:"object",addressable:!0}),e.outPorts.add("group",{datatype:"array"}),e.process((function(e,t){var n,r;if((r=e.attached("items").filter((function(t){return e.hasData(["items",t])}))).length===e.attached("items").length)return n=[],r.forEach((function(t){var r;if(r=e.getData(["items",t]),!Array.isArray(r))return n.push(r);n=n.concat(r)})),t.sendDone({group:n})}))}},75813:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="Sets the line width",e.icon="pencil-square",e.inPorts.add("width",{datatype:"number"}),e.outPorts.add("linewidth",{datatype:"object"}),e.process((function(e,t){var n;e.hasData("width")&&(n={type:"lineWidth",value:e.getData("width")},t.sendDone({out:new r.IP("data",n)}))}))}},92417:(e,t,n)=>{"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){return(o=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function a(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?i(e):t}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var c,u,l;l=n(76445),c=n(81919),u=function(){var e=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&o(e,t)}(u,e);var t,n,r=(t=u,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=s(t);if(n){var o=s(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return a(this,e)});function u(){var e,t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),e=r.call(this),t={center:{datatype:"object",description:"point for center",required:!0},radius:{datatype:"number",required:!0},start:{datatype:"number",description:"start angle in radians",required:!0},end:{datatype:"number",description:"end angle in radians",required:!0},reverse:{datatype:"boolean",required:!0,default:!1}},c(i(e),"arc",t),e}return u}(l.Component);return e.prototype.description="Creates an arc or arcs",e.prototype.icon="power-off",e}.call(void 0),t.getComponent=function(){return new u}},64868:(e,t,n)=>{"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){return(o=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function a(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?i(e):t}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var c,u,l;l=n(76445),c=n(81919),u=function(){var e=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&o(e,t)}(u,e);var t,n,r=(t=u,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=s(t);if(n){var o=s(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return a(this,e)});function u(){var e,t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),e=r.call(this),t={control1:{datatype:"object",type:"https://noflojs.org/#noflo-canvas/point",description:"control point 1",required:!0},control2:{datatype:"object",type:"https://noflojs.org/#noflo-canvas/point",description:"control point 2",required:!0},end:{datatype:"object",type:"https://noflojs.org/#noflo-canvas/point",description:"end point",required:!0}},c(i(e),"beziercurve",t),e}return u}(l.Component);return e.prototype.description="Creates a Bezier curve",e.prototype.icon="pencil-square",e}.call(void 0),t.getComponent=function(){return new u}},97252:(e,t,n)=>{"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){return(o=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function a(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?i(e):t}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var c,u,l;l=n(76445),c=n(81919),u=function(){var e=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&o(e,t)}(u,e);var t,n,r=(t=u,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=s(t);if(n){var o=s(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return a(this,e)});function u(){var e,t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),e=r.call(this),t={center:{datatype:"object",type:"https://noflojs.org/#noflo-canvas/point",description:"center point",required:!0},radius:{datatype:"number",required:!0}},c(i(e),"circle",t),e}return u}(l.Component);return e.prototype.description="Creates a circle or circles",e.prototype.icon="circle-o",e}.call(void 0),t.getComponent=function(){return new u}},30759:(e,t,n)=>{"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){return(o=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function a(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?i(e):t}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var c,u,l,d;d=n(76445),c=n(81919),l=function(e){return null!=e.alpha?"hsla(".concat(e.hue,", ").concat(e.saturation,"%, ").concat(e.lightness,"%, ").concat(e.alpha,")"):"hsl(".concat(e.hue,", ").concat(e.saturation,"%, ").concat(e.lightness,"%)")},u=function(){var e=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&o(e,t)}(u,e);var t,n,r=(t=u,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=s(t);if(n){var o=s(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return a(this,e)});function u(){var e,t,n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),e=r.call(this),n={hue:{datatype:"number",description:"from 0 to 360",required:!0},saturation:{datatype:"number",description:"from 0 to 100",required:!0},lightness:{datatype:"number",description:"from 0 to 100",required:!0},alpha:{datatype:"number",description:"from 0 to 1.0",required:!1}},t=function(t){if(null!=t.hue&&null!=t.saturation&&null!=t.lightness)return t.hue instanceof Array||t.saturation instanceof Array||t.lightness instanceof Array||t.alpha instanceof Array?e.expandToArray(t).map(l):l(t)},c(i(e),"color",n,{compute:t}),e}return u}(d.Component);return e.prototype.description="Creates HSL or HSLA color or colors",e.prototype.icon="tint",e}.call(void 0),t.getComponent=function(){return new u}},52502:(e,t,n)=>{"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){return(o=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function a(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?i(e):t}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var c,u,l,d;d=n(76445),c=n(81919),u=function(){var e=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&o(e,t)}(u,e);var t,n,r=(t=u,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=s(t);if(n){var o=s(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return a(this,e)});function u(){var e,t,n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),e=r.call(this),n={x:{datatype:"number",required:!0},y:{datatype:"number",required:!0}},t=function(e){if(null!=e.x&&null!=e.y)return(e.x instanceof Array||e.y instanceof Array)&&(e=l(e)),e},c(i(e),"point",n,{compute:t}),e}return u}(d.Component);return e.prototype.description="Creates a grid or line of points",e.prototype.icon="crosshairs",e}.call(void 0),l=function(e){var t,n,r,o,a,i,s,c,u,l;for(c=1,l=1,e.x instanceof Array&&(c=e.x.length),e.y instanceof Array&&(l=e.y.length),t=[],u=n=0,a=l-1;0<=a?n<=a:n>=a;u=0<=a?++n:--n)for(s=r=0,i=c-1;0<=i?r<=i:r>=i;s=0<=i?++r:--r)(o={}).type="point",e.x instanceof Array?o.x=null!=e.x[s]?e.x[s]:e.x[c-1]:o.x=e.x,e.y instanceof Array?o.y=null!=e.y[u]?e.y[u]:e.y[l-1]:o.y=e.y,null!=o.x&&null!=o.y&&t.push(o);return t},t.getComponent=function(){return new u}},41421:(e,t,n)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var o;o=n(76445),t.getComponent=function(){var e;return(e=new o.Component).description="Make an array of numbers by increment",e.icon="folder-o",e.inPorts.add("from",{datatype:"number"}),e.inPorts.add("to",{datatype:"number"}),e.inPorts.add("increment",{datatype:"int",default:1,control:!0}),e.outPorts.add("range",{datatype:"array"}),e.process((function(e,t){var n,o,a,i,s,c,u;if(e.hasData("from","to")&&(!e.attached("increment").length||e.hasData("increment"))){var l=(c=e.getData("from","to"),u=2,function(e){if(Array.isArray(e))return e}(c)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(c,u)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(c,u)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());if(o=l[0],s=l[1],a=e.hasData("increment")?e.getData("increment"):1,i=[],n=o,o<=s)for(;n<=s;)i.push(n),n+=a;else for(;n>=s;)i.push(n),n-=a;return t.sendDone({range:i})}}))}},30018:(e,t,n)=>{"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){return(o=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function a(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?i(e):t}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var c,u,l,d;l=n(76445),c=n(81919),d=Array.isArray||function(e){return"[object Array]"===Object.toString.call(e)},u=function(){var e=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&o(e,t)}(u,e);var t,n,r=(t=u,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=s(t);if(n){var o=s(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return a(this,e)});function u(){var e,t,n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),e=r.call(this),n={items:{datatype:"object",description:"points, arcs, and curves to combine to make path",addressable:!0,required:!0}},t=function(t){var n,r,o,a,i,s;for(i={type:"path",items:[]},n=0,r=0,a=(s=t.items).length;r<a;r++){if(null==(o=s[r]))return;d(o)&&n++}return 0===n?i.items=t.items:1===t.items.length&&1===n?i.items=t.items[0]:(i.items=e.expandToArray(t.items),i=e.expandToArray(i)),i},c(i(e),"path",n,{compute:t}),e}return u}(l.Component);return e.prototype.description="Makes a path given a number of points, curves, etc",e.prototype.icon="star-o",e}.call(void 0),t.getComponent=function(){return new u}},50048:(e,t,n)=>{"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){return(o=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function a(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?i(e):t}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var c,u,l;l=n(76445),c=n(81919),u=function(){var e=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&o(e,t)}(u,e);var t,n,r=(t=u,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=s(t);if(n){var o=s(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return a(this,e)});function u(){var e,t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),e=r.call(this),t={x:{datatype:"number",required:!0},y:{datatype:"number",required:!0}},c(i(e),"point",t),e}return u}(l.Component);return e.prototype.description="Creates a point or points",e.prototype.icon="crosshairs",e}.call(void 0),t.getComponent=function(){return new u}},67346:(e,t,n)=>{"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){return(o=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function a(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?i(e):t}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var c,u,l,d;d=n(76445),c=n(81919),l=function(e){var t,n,r,o;return o=Math.round(e.red),r=Math.round(e.green),n=Math.round(e.blue),null!=e.alpha?(t=e.alpha,"rgba(".concat(o,", ").concat(r,", ").concat(n,", ").concat(t,")")):"rgb(".concat(o,", ").concat(r,", ").concat(n,")")},u=function(){var e=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&o(e,t)}(u,e);var t,n,r=(t=u,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=s(t);if(n){var o=s(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return a(this,e)});function u(){var e,t,n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),e=r.call(this),n={red:{datatype:"int",description:"from 0 to 255",required:!0},green:{datatype:"int",description:"from 0 to 255",required:!0},blue:{datatype:"int",description:"from 0 to 255",required:!0},alpha:{datatype:"number",description:"optional, from 0 to 1.0",required:!1}},t=function(t){if(null!=t.red&&null!=t.green&&null!=t.blue)return t.red instanceof Array||t.green instanceof Array||t.blue instanceof Array||t.alpha instanceof Array?e.expandToArray(t).map(l):l(t)},c(i(e),"color",n,{compute:t}),e}return u}(d.Component);return e.prototype.description="Creates RGA or RGBA color or colors",e.prototype.icon="tint",e}.call(void 0),t.getComponent=function(){return new u}},43745:(e,t,n)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var o;o=n(76445),t.getComponent=function(){var e;return(e=new o.Component).description="Make an array of random numbers",e.icon="random",e.inPorts.add("min",{datatype:"number"}),e.inPorts.add("max",{datatype:"number"}),e.inPorts.add("count",{datatype:"int"}),e.outPorts.add("numbers",{datatype:"array"}),e.process((function(e,t){var n,o,a,i,s,c,u,l;if(e.hasData("min","max","count")){var d=function(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(e,t)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e.getData("min","max","count"),3);if(i=d[0],l=d[1]-i,1===(n=d[2]))return s=i+Math.random()*l,void t.sendDone({numbers:[s]});for(c=[],o=a=0,u=n-1;0<=u?a<=u:a>=u;o=0<=u?++a:--a)c[o]=i+Math.random()*l;return t.sendDone({numbers:c})}}))}},43269:(e,t,n)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var o;o=n(76445),t.getComponent=function(){var e;return(e=new o.Component).description="Make an array of evenly-spaced numbers",e.icon="folder-o",e.inPorts.add("from",{datatype:"number"}),e.inPorts.add("to",{datatype:"number"}),e.inPorts.add("count",{datatype:"int"}),e.outPorts.add("range",{datatype:"array"}),e.process((function(e,t){var n,o,a,i,s,c,u,l;if(e.hasData("from","to","count")){var d=function(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(e,t)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e.getData("from","to","count"),3);if(o=d[0],l=d[1],1!==(n=d[2])){for(c=[],i=(l-o)/(n-1),a=s=0,u=n-1;0<=u?s<=u:s>=u;a=0<=u?++s:--s)c[a]=o+i*a;return t.sendDone({range:c})}t.sendDone({range:[o]})}}))}},60507:(e,t,n)=>{"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){return(o=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function a(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?i(e):t}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var c,u,l;l=n(76445),c=n(81919),u=function(){var e=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&o(e,t)}(u,e);var t,n,r=(t=u,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=s(t);if(n){var o=s(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return a(this,e)});function u(){var e,t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),e=r.call(this),t={point:{datatype:"object",description:"top left point",required:!0},width:{datatype:"number",required:!0},height:{datatype:"number",required:!0}},c(i(e),"rectangle",t),e}return u}(l.Component);return e.prototype.description="Creates a rectangle or rectangles",e.prototype.icon="square-o",e}.call(void 0),t.getComponent=function(){return new u}},14269:(e,t,n)=>{"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function a(e,t){return(a=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function i(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?s(e):t}function s(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function c(e){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var u,l,d;d=n(76445),u=n(81919),l=function(){var e=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&a(e,t)}(p,e);var t,n,r,l,d=(r=p,l=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=c(r);if(l){var n=c(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return i(this,e)});function p(){var e,t,n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,p),e=d.call(this),n={width:{datatype:"number",description:"<0 for dont-care",required:!0},height:{datatype:"number",description:"<0 for dont-care",required:!0},origwidth:{datatype:"number",description:"from 0 to 100",required:!0},origheight:{datatype:"number",description:"from 0 to 1.0",required:!1}},t=function(t){var n,r;if(e.hasAllProps(t))return n=t,(r=e.computeRectangle(n)).type="rectangle",r.point={type:"point",x:0,y:0},r},u(s(e),"rectangle",n,{compute:t}),e}return t=p,(n=[{key:"hasAllProps",value:function(e){return null!=e.width&&null!=e.height&&null!=e.origwidth&&null!=e.origheight}},{key:"computeRectangle",value:function(e){var t,n,r;return t=e.origheight/e.origwidth,r=e.width,n=e.height,r<0&&n<0?(r=e.origwidth,n=e.origheight):e.width<0?r=n/t:e.height<0&&(n=r*t),{height:n,width:r}}}])&&o(t.prototype,n),p}(d.Component);return e.prototype.description="Creates a rectangle, maintaining original aspect ratio",e.prototype.icon="square-o",e}.call(void 0),t.getComponent=function(){return new l}},73998:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="Makes a translation recursive.",e.icon="retweet",e.inPorts.add("recursables",{datatype:"object",description:"Only translate is recursable"}),e.inPorts.add("count",{datatype:"number"}),e.outPorts.add("recurse",{datatype:"object"}),e.recurses={},e.tearDown=function(t){return e.recurses={},t()},e.process((function(t,n){var r;if(e.recurses[t.scope]||(e.recurses[t.scope]={type:"recurse",recursables:[],count:null}),t.hasData("count"))return e.recurses[t.scope].count=t.getData("count"),e.recurses[t.scope].recursables.length?void n.sendDone({recurse:e.recurses[t.scope]}):void n.done();(r=t.attached("recursables").filter((function(e){return t.hasData(["recursables",e])}))).length&&(r.forEach((function(n){var r;return r=t.getData(["recursables",n]),e.recurses[t.scope].recursables[n]=r})),n.sendDone({recurse:e.recurses[t.scope]}))}))}},70924:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="Exports a canvas to JPEG",e.icon="file-image-o",e.inPorts.add("canvas",{datatype:"object"}),e.outPorts.add("jpeg",{datatype:"string"}),e.process((function(e,t){var n;e.hasData("canvas")&&(n=e.getData("canvas").toDataURL("image/jpeg"),t.sendDone({jpeg:n}))}))}},90022:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="Exports a canvas to PNG",e.icon="file-image-o",e.inPorts.add("canvas",{datatype:"object"}),e.outPorts.add("png",{datatype:"string"}),e.process((function(e,t){var n;e.hasData("canvas")&&(n=e.getData("canvas").toDataURL("image/png"),t.sendDone({png:n}))}))}},63063:(e,t,n)=>{"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){return(o=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function a(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?i(e):t}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var c,u,l;l=n(76445),c=n(81919),u=function(){var e=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&o(e,t)}(u,e);var t,n,r=(t=u,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=s(t);if(n){var o=s(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return a(this,e)});function u(){var e,t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),e=r.call(this),t={items:{datatype:"object",description:"shapes (paths, circles, and rectangles) to stroke",addressable:!0,required:!0},strokestyle:{datatype:"string",description:"css color string or canvas style",required:!1},linewidth:{datatype:"number",description:"stroke width in pixels",required:!1},closepath:{datatype:"boolean",description:"draw line back to start point",value:!1}},c(i(e),"stroke",t),e}return u}(l.Component);return e.prototype.description="Strokes lines for paths, rectangles, circles, and arcs",e.prototype.icon="square-o",e}.call(void 0),t.getComponent=function(){return new u}},42230:(e,t,n)=>{"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){return(o=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function a(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?i(e):t}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var c,u;u=n(76445),c=n(81919),function(){var e=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&o(e,t)}(u,e);var t,n,r=(t=u,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=s(t);if(n){var o=s(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return a(this,e)});function u(){var e,t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),e=r.call(this),t={point:{datatype:"object",description:"top left point",required:!0},width:{datatype:"number",required:!0},height:{datatype:"number",required:!0}},c(i(e),"strokerect",t),e}return u}(u.Component);return e.prototype.description="Strokes a rectangle",e.prototype.icon="pencil-square-o",t.getComponent=function(){return new e},e}.call(void 0)},7961:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="Sets the global stroke style",e.icon="pencil-square-o",e.inPorts.add("style",{datatype:"string"}),e.outPorts.add("strokestyle",{datatype:"object"}),e.process((function(e,t){var n;e.hasData("style")&&(n={type:"strokeStyle",value:e.getData("style")},t.sendDone({out:new r.IP("data",n)}))}))}},1649:(e,t,n)=>{"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){return(o=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function a(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?i(e):t}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var c,u,l;l=n(76445),c=n(81919),u=function(){var e=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&o(e,t)}(u,e);var t,n,r=(t=u,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=s(t);if(n){var o=s(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return a(this,e)});function u(){var e,t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),e=r.call(this),t={items:{datatype:"object",description:"fill and stroke commands to transform",addressable:!0,required:!0},translate:{datatype:"object",type:"https://noflojs.org/#noflo-canvas/point",description:"translate by this vector",required:!1},scale:{datatype:"object",type:"https://noflojs.org/#noflo-canvas/point",description:"stretch or mirror",required:!1},scaleboth:{datatype:"number",description:"scale both x and y",required:!1},rotate:{datatype:"number",type:"https://noflojs.org/#noflo-canvas/angle",description:"angle in radians",required:!1}},c(i(e),"transform",t),e}return u}(l.Component);return e.prototype.description="Translate, rotate, and/or scale passed drawing commands.",e.prototype.icon="arrows",e}.call(void 0),t.getComponent=function(){return new u}},42205:(e,t,n)=>{"use strict";var r,o,a;o=n(76445),r=n(32312),a=n(27804),t.getComponent=function(){var e,t,n,i,s;return(e=new o.Component).icon="meh-o",e.description="track features in face",s=null,n=null,t=null,i=function(){if(s&&(s.stop(),s=null),n&&(cancelAnimationFrame(n),n=null),t)return t.deactivate(),t=null},e.tearDown=function(e){return i(),e()},e.inPorts.add("image",{datatype:"object",description:"img, video, or canvas element"}),e.outPorts.add("points",{datatype:"array"}),e.outPorts.add("error",{datatype:"object"}),e.process((function(e,o,c){var u,l,d;if(e.hasData("image")){if(null==(l=e.getData("image")).tagName)return o.done();if("IMG"===l.tagName&&((u=document.createElement("canvas")).width=l.width,u.height=l.height,u.getContext("2d").drawImage(l,0,0),l=u),"CANVAS"===l.tagName||"VIDEO"===l.tagName)return i(),(s=new r.tracker).init(a),s.start(l),t=c,d=function(){var e;if(n=requestAnimationFrame(d),s&&(e=s.getCurrentPosition()))return e=e.map((function(e){return{type:"point",x:e[0],y:e[1]}})),o.send({points:e})},n=requestAnimationFrame(d);o.done(new Error("Image to track must be a canvas or video element"))}}))}},76257:(e,t,n)=>{"use strict";var r,o;r=n(76445),o=[[28,70,13],[39,12,13],[70,39,13],[14,28,13],[50,11,12],[39,50,12],[15,28,14],[50,10,11],[31,39,70],[67,28,15],[16,67,15],[51,9,10],[50,51,10],[39,38,50],[38,49,50],[40,39,31],[29,67,16],[67,70,28],[51,52,9],[17,29,16],[69,40,31],[32,70,67],[52,8,9],[32,31,70],[29,32,67],[68,32,29],[17,68,29],[32,69,31],[68,69,32],[52,53,8],[53,7,8],[30,40,69],[18,68,17],[49,59,50],[58,51,50],[59,58,50],[41,40,30],[68,30,69],[38,48,49],[18,30,68],[58,52,51],[43,38,39],[40,43,39],[37,48,38],[18,33,30],[33,41,30],[48,59,49],[57,52,58],[62,43,40],[43,37,38],[53,6,7],[59,60,58],[60,57,58],[41,62,40],[48,60,59],[22,33,18],[57,53,52],[54,6,53],[62,37,43],[37,47,48],[47,60,48],[33,25,41],[41,34,62],[62,42,37],[37,46,47],[57,54,53],[47,46,60],[61,56,60],[60,56,57],[56,54,57],[36,46,37],[46,61,60],[34,42,62],[42,36,37],[25,34,41],[5,6,54],[22,25,33],[25,65,34],[55,5,54],[45,61,46],[36,45,46],[64,25,22],[34,35,42],[56,55,54],[35,36,42],[45,44,61],[61,44,56],[44,55,56],[44,45,36],[35,44,36],[26,35,34],[65,26,34],[4,5,55],[21,64,22],[26,66,35],[2,44,35],[44,4,55],[2,3,44],[66,1,35],[64,65,25],[21,24,64],[1,2,35],[27,65,64],[3,4,44],[24,27,64],[27,26,65],[20,24,21],[23,1,66],[20,63,24],[24,63,27],[66,26,27],[63,66,27],[20,19,63],[19,23,63],[63,23,66],[0,1,23],[19,0,23]],t.getComponent=function(){var e;return(e=new r.Component).icon="meh-o",e.description="Points from TrackFace to wireframe (array of triangle paths)",e.inPorts.add("points",{datatype:"array",description:"points from TrackFace"}),e.outPorts.add("paths",{datatype:"array"}),e.process((function(e,t){var n,r,a,i,s,c;if(e.hasData("points")){for(s=e.getData("points"),i=[],n=0,r=o.length;n<r;n++)a={type:"path",items:[s[(c=o[n])[0]],s[c[1]],s[c[2]]]},i.push(a);return t.sendDone({paths:i})}}))}},29676:(e,t,n)=>{"use strict";function r(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(e,t)||function(e,t){if(e){if("string"==typeof e)return o(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?o(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var a,i;a=n(76445),i=function(e,t,n){return"top"!==t&&"left"!==t||(n="".concat(n,"px")),e.style.position="absolute",e.style[t]=n},t.getComponent=function(){var e;return(e=new a.Component).description="Change the coordinates of a DOM element",e.icon="arrows",e.inPorts.add("element",{datatype:"object",control:!0}),e.inPorts.add("point",{datatype:"object"}),e.inPorts.add("x",{datatype:"number"}),e.inPorts.add("y",{datatype:"number"}),e.inPorts.add("z",{datatype:"number"}),e.outPorts.add("out",{datatype:"bang"}),e.process((function(e,t){var n,o,a,s,c;if(e.hasData("element")){if(e.hasData("point")){var u=r(e.getData("element","point"),2);return n=u[0],o=u[1],i(n,"left",o.x),i(n,"top",o.y),void t.sendDone({out:!0})}if(e.hasData("x")){var l=r(e.getData("element","x"),2);return n=l[0],a=l[1],i(n,"left",a),void t.sendDone({out:!0})}if(e.hasData("y")){var d=r(e.getData("element","y"),2);return n=d[0],s=d[1],i(n,"top",s),void t.sendDone({out:!0})}if(e.hasData("z")){var p=r(e.getData("element","z"),2);n=p[0],c=p[1],i(n,"zIndex",c),t.sendDone({out:!0})}}}))}},38776:(e,t,n)=>{"use strict";function r(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(e,t)||function(e,t){if(e){if("string"==typeof e)return o(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?o(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var a,i;a=n(76445),i=function(e,t,n){return e.style.position="absolute",e.style[t]="".concat(n,"px")},t.getComponent=function(){var e;return(e=new a.Component).description="Change the size of a DOM element",e.icon="arrows",e.inPorts.add("element",{datatype:"object",control:!0}),e.inPorts.add("size",{datatype:"object"}),e.inPorts.add("width",{datatype:"number"}),e.inPorts.add("height",{datatype:"number"}),e.outPorts.add("out",{datatype:"bang"}),e.process((function(e,t){var n,o,a,s;if(e.hasData("element")){if(e.hasData("size")){var c=r(e.getData("element","size"),2);return n=c[0],a=c[1],i(n,"width",a.width),i(n,"height",a.height),void t.sendDone({out:!0})}if(e.hasData("width")){var u=r(e.getData("element","width"),2);return n=u[0],s=u[1],i(n,"width",s),void t.sendDone({out:!0})}if(e.hasData("height")){var l=r(e.getData("element","height"),2);n=l[0],o=l[1],i(n,"height",o),t.sendDone({out:!0})}}}))}},74848:(e,t,n)=>{"use strict";function r(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(e,t)||function(e,t){if(e){if("string"==typeof e)return o(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?o(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var a,i;a=n(76445),i=function(e,t,n){var r;return r="rotate(".concat(t,"deg)"),n&&(r="".concat(r," translateZ(0px) translate3d(0px, 0px, 0px)")),e.style.transform=r},t.getComponent=function(){var e;return(e=new a.Component).description="Change the coordinates of a DOM element",e.icon="rotate-right",e.inPorts.add("element",{datatype:"object",control:!0}),e.inPorts.add("percent",{datatype:"number"}),e.inPorts.add("degrees",{datatype:"number"}),e.inPorts.add("gpu",{datatype:"boolean",control:!0,default:!0,description:"Whether to GPU-accelerate the rotation"}),e.outPorts.add("out",{datatype:"bang"}),e.process((function(e,t){var n,o,a,s;if(e.hasData("element")){if(e.hasData("percent")){var c=r(e.getData("element","percent"),2);return o=c[0],s=c[1],a=!e.hasData("gpu")||e.getData("gpu"),i(o,n=360*s%360,a),void t.sendDone({out:!0})}if(e.hasData("degrees")){var u=r(e.getData("element","degrees"),2);o=u[0],n=u[1],a=!e.hasData("gpu")||e.getData("gpu"),i(o,n,a),t.sendDone({out:!0})}}}))}},43150:(e,t,n)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var o;o=n(76445),t.getComponent=function(){var e;return(e=new o.Component).description="Set element's CSS background image",e.icon="picture",e.inPorts.add("element",{datatype:"object",control:!0}),e.inPorts.add("imagedata",{datatype:"string"}),e.outPorts.add("out",{datatype:"bang"}),e.process((function(e,t){var n,o,a,i;if(e.hasData("element","imagedata")){var s=(a=e.getData("element","imagedata"),i=2,function(e){if(Array.isArray(e))return e}(a)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(a,i)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(a,i)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());return n=s[0],o=s[1],n.style.background="url("+o+") no-repeat center",t.sendDone({out:!0})}}))}},89322:(e,t,n)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var o;o=n(76445),t.getComponent=function(){var e;return(e=new o.Component).description="Set element's CSS top",e.icon="arrows-v",e.inPorts.add("element",{datatype:"object"}),e.inPorts.add("top",{datatype:"number"}),e.outPorts.add("out",{datatype:"bang"}),e.process((function(e,t){var n,o,a,i;if(e.hasData("element","top")){var s=(a=e.getData("element","top"),i=2,function(e){if(Array.isArray(e))return e}(a)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(a,i)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(a,i)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());return n=s[0],o=s[1],n.style.position="absolute",n.style.top="".concat(o,"px"),t.sendDone({out:!0})}}))}},91858:(e,t,n)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var o;o=n(76445),t.getComponent=function(){var e;return(e=new o.Component).description="Add a class to an element",e.inPorts.add("element",{datatype:"object"}),e.inPorts.add("class",{datatype:"string"}),e.process((function(e,t){var n,o,a,i;if(e.has("element","class")){var s=(a=e.getData("element","class"),i=2,function(e){if(Array.isArray(e))return e}(a)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(a,i)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(a,i)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());return o=s[0],n=s[1],o.classList.add(n),t.done()}}))}},57208:(e,t,n)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var o;o=n(76445),t.getComponent=function(){var e;return(e=new o.Component).description="Append elements as children of a parent element",e.inPorts.add("parent",{datatype:"object"}),e.inPorts.add("child",{datatype:"object"}),e.process((function(e,t){var n,o,a,i;if(e.hasData("parent","child")){var s=(a=e.getData("parent","child"),i=2,function(e){if(Array.isArray(e))return e}(a)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(a,i)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(a,i)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());return o=s[0],n=s[1],o.appendChild(n),t.done()}}))}},79697:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="Create a new DOM Element",e.inPorts.add("tagname",{datatype:"string"}),e.inPorts.add("container",{datatype:"object"}),e.outPorts.add("element",{datatype:"object"}),e.forwardBrackets={tagname:["element"]},e.process((function(t,n){var r,o;if(t.hasData("tagname")&&(!e.inPorts.container.isAttached()||t.hasData("container")))return o=t.getData("tagname"),r=document.createElement(o),t.hasData("container")&&t.getData("container").appendChild(r),n.sendDone({element:r})}))}},98561:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="Create a new DOM DocumentFragment",e.inPorts.add("in",{datatype:"bang"}),e.outPorts.add("fragment",{datatype:"object"}),e.forwardBrackets={in:["fragment"]},e.process((function(e,t){var n;if(e.hasData("in"))return e.getData("in"),n=document.createDocumentFragment(),t.sendDone({fragment:n})}))}},2655:(e,t,n)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var o;o=n(76445),t.getComponent=function(){var e;return(e=new o.Component).description="Reads the given attribute from the DOM element on the in port.",e.inPorts.add("element",{datatype:"object",description:"The element from which to read the attribute from.",required:!0}),e.inPorts.add("attribute",{datatype:"string",description:"The attribute which is read from the DOM element.",required:!0,control:!0}),e.outPorts.add("out",{datatype:"string",description:"Value of the attribute being read."}),e.forwardBrackets={element:["out"]},e.process((function(e,t){var n,o,a,i,s;if(e.hasData("element","attribute")){var c=(i=e.getData("element","attribute"),s=2,function(e){if(Array.isArray(e))return e}(i)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(i,s)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(i,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());return o=c[0],n=c[1],a=o.getAttribute(n),t.sendDone({out:a})}}))}},31231:(e,t,n)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var o;o=n(76445),t.getComponent=function(){var e;return(e=new o.Component).description="Get a DOM element matching a query",e.inPorts.add("in",{datatype:"object",description:"DOM element to constrain the query to"}),e.inPorts.add("selector",{datatype:"string",description:"CSS selector"}),e.outPorts.add("element",{datatype:"object"}),e.outPorts.add("error",{datatype:"object"}),e.forwardBrackets={selector:["element","error"]},e.process((function(e,t){var n,o,a,i,s,c,u,l;if(e.hasData("selector")&&(!(e.attached("in").length>0)||e.hasData("in")))if(e.hasData("in")){var d=function(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(e,t)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e.getData("in","selector"),2);if(n=d[0],l=d[1],"function"!=typeof n.querySelector)return void t.done(new Error("Given container doesn't support querySelectors"));if(!(o=n.querySelectorAll(l)).length)return void t.done(new Error("No element matching '".concat(l,"' found under container")));for(i=0,c=o.length;i<c;i++)a=o[i],t.send({element:a});t.done()}else{if(l=e.getData("selector"),(o=document.querySelectorAll(l)).length){for(s=0,u=o.length;s<u;s++)a=o[s],t.send({element:a});return t.done()}t.done(new Error("No element matching '".concat(l,"' found under document")))}}))}},8695:(e,t,n)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var o;o=n(76445),t.getComponent=function(){var e;return(e=new o.Component).description="Check if an element has a given class",e.inPorts.add("element",{datatype:"object"}),e.inPorts.add("class",{datatype:"string"}),e.outPorts.add("element",{datatype:"object"}),e.outPorts.add("missed",{datatype:"object"}),e.process((function(e,t){var n,o,a,i;if(e.hasData("element","class")){var s=(a=e.getData("element","class"),i=2,function(e){if(Array.isArray(e))return e}(a)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(a,i)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(a,i)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());if(n=s[0],o=s[1],!n.classList.contains(o))return t.sendDone({missed:n});t.sendDone({element:n})}}))}},1131:(e,t,n)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var o;o=n(76445),t.getComponent=function(){var e,t;return(e=new o.Component).description="addEventListener for specified event type",e.icon="stethoscope",e.inPorts.add("element",{datatype:"object"}),e.inPorts.add("type",{datatype:"string"}),e.inPorts.add("preventdefault",{datatype:"boolean",control:!0,default:!1}),e.outPorts.add("element",{datatype:"object"}),e.outPorts.add("event",{datatype:"object"}),e.elements={},t=function(t){var n,r,o;if(e.elements[t]){var a=e.elements[t];return n=a.element,r=a.event,o=a.listener,n.removeEventListener(r,o),e.elements[t].deactivate(),delete e.elements[t]}},e.tearDown=function(n){var r,o;for(o in r=e.elements)r[o],t(o);return e.elements={},n()},e.forwardBrackets={},e.process((function(n,o,a){var i,s,c,u,l;if(n.hasData("element","type")){var d=(u=n.getData("element","type"),l=2,function(e){if(Array.isArray(e))return e}(u)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(u,l)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(u,l)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());return i=d[0],c=d[1],s=!1,n.hasData("preventdefault")&&(s=n.getData("preventdefault")),t(null),a.element=i,a.event=c,a.listener=function(e){return s&&e.preventDefault(),o.send({element:a.element,event:e})},e.elements[a]=a,i.addEventListener(c,a.listener)}}))}},82895:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="Read HTML from an existing element",e.inPorts.add("container",{datatype:"object"}),e.outPorts.add("html",{datatype:"string"}),e.forwardBrackets={container:["html"]},e.process((function(e,t){var n;if(e.hasData("container"))return n=e.getData("container"),t.sendDone({html:n.innerHTML})}))}},61450:(e,t,n)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var o;o=n(76445),t.getComponent=function(){var e;return(e=new o.Component).description="Remove a class from an element",e.inPorts.add("element",{datatype:"object"}),e.inPorts.add("class",{datatype:"string"}),e.process((function(e,t){var n,o,a,i;if(e.has("element","class")){var s=(a=e.getData("element","class"),i=2,function(e){if(Array.isArray(e))return e}(a)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(a,i)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(a,i)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());return o=s[0],n=s[1],o.classList.remove(n),t.done()}}))}},85329:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="Remove an element from DOM",e.inPorts.add("element",{datatype:"object"}),e.process((function(e,t){var n;if(e.hasData("element")&&(n=e.getData("element")).parentNode)return n.parentNode.removeChild(n),t.done()}))}},80659:(e,t,n)=>{"use strict";var r,o;r=n(76445),o=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(e,t){return window.setTimeout((function(){return e(+new Date)}),1e3/60)},t.getComponent=function(){var e,t;return(e=new r.Component).description="Sends bangs that correspond with screen refresh rate.",e.icon="film",e.inPorts.add("start",{datatype:"bang"}),e.inPorts.add("stop",{datatype:"bang"}),e.outPorts.add("out",{datatype:"bang"}),e.running={},t=function(t){if(e.running[t])return e.running[t].deactivate(),delete e.running[t]},e.tearDown=function(n){var r,o;for(o in r=e.running)r[o],t(o);return e.running={},n()},e.animate=function(t,n){if(e.running[t])return n.send(!0),o(e.animate.bind(e,t,n))},e.forwardBrackets={},e.process((function(n,r,a){var i,s;if(n.hasData("start")){if("data"!==(i=n.get("start")).type)return;return t(i.scope),e.running[i.scope]=a,void o(e.animate.bind(e,i.scope,r))}if(n.hasData("stop")){if("data"!==(s=n.get("stop")).type)return;t(s.scope)}}))}},72627:(e,t,n)=>{"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var a;a=n(76445),t.getComponent=function(){var e;return(e=new a.Component).description="Set the given attribute on the DOM element to the received value.",e.inPorts.add("element",{datatype:"object",description:"The element on which to set the attribute."}),e.inPorts.add("attribute",{datatype:"string",description:"The attribute which is set on the DOM element."}),e.inPorts.add("value",{datatype:"string",description:"Value of the attribute being set."}),e.outPorts.add("element",{datatype:"object",description:"The element that was updated."}),e.forwardBrackets={element:["element"],value:["element"]},e.process((function(e,t){var n,a,i,s,c,u,l,d;if(e.hasData("element","attribute","value")){var p=(l=e.getData("element","attribute","value"),d=3,function(e){if(Array.isArray(e))return e}(l)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(l,d)||function(e,t){if(e){if("string"==typeof e)return o(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?o(e,t):void 0}}(l,d)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());if(a=p[0],n=p[1],"object"===r(u=p[2]))if("[object Array]"===toString.call(u))u=u.join(" ");else{for(i in s=[],u)c=u[i],s.push(c);u=s.join(" ")}return"value"===n?a.value=u:a.setAttribute(n,u),t.sendDone({element:a})}}))}},36076:(e,t,n)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var o;o=n(76445),t.getComponent=function(){var e;return(e=new o.Component).description="Write HTML inside an existing element",e.inPorts.add("container",{datatype:"object"}),e.inPorts.add("html",{datatype:"string"}),e.outPorts.add("container",{datatype:"object"}),e.process((function(e,t){var n,o,a,i;if(e.hasData("container","html")){var s=(a=e.getData("container","html"),i=2,function(e){if(Array.isArray(e))return e}(a)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(a,i)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(a,i)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());return n=s[0],o=s[1],n.innerHTML=o,t.sendDone({container:n})}}))}},70973:(e,t,n)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var o,a;o=n(76445),a=n(36696),t.getComponent=function(){var e;return(e=new o.Component).icon="toggle-up",e.description="Calculates de constrained Delaunay triangulation of given points",e.inPorts.add("x",{datatype:"array"}),e.inPorts.add("y",{datatype:"array"}),e.outPorts.add("paths",{datatype:"array"}),e.outPorts.add("error",{datatype:"object"}),e.process((function(e,t){var n,o,i,s,c,u,l,d,p,h,f,g,m,v;if(e.hasData("x","y")){var y=function(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(e,t)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e.getData("x","y"),2);if(m=y[0],v=y[1],m.length>2){try{n=function(){var e,t,n;for(n=[],i=e=0,t=m.length;0<=t?e<t:e>t;i=0<=t?++e:--e)n.push(new a.Point(m[i],v[i]));return n}(),(h=new a.SweepContext(n)).triangulate()}catch(e){return o=e,void t.done(o)}for(d=[],s=0,c=(g=h.getTriangles()).length;s<c;s++)f=g[s],p=f.getPoints(),l={type:"path",items:function(){var e,t,n;for(n=[],e=0,t=p.length;e<t;e++)u=p[e],n.push({type:"point",x:u.x,y:u.y});return n}()},d.push(l);return t.sendDone({paths:d})}t.done(new Error("x must contain more than 2 elements"))}}))}},63765:(e,t,n)=>{"use strict";var r,o;o=n(76445),r=n(67154),t.getComponent=function(){var e;return(e=new o.Component).icon="toggle-up",e.description="Calculates Delaunay Triangulation for given points",e.inPorts.add("points",{datatype:"array"}),e.outPorts.add("paths",{datatype:"array"}),e.outPorts.add("error",{datatype:"object"}),e.process((function(e,t){var n,o,a,i,s,c,u,l,d,p,h;if(e.hasData("points")){if((l=e.getData("points")).length>2){for(h=function(){var e,t,n;for(n=[],e=0,t=l.length;e<t;e++)u=l[e],n.push([u.x,u.y]);return n}(),o=r.triangulate(h),p=function(){var e,t,r;for(r=[],e=0,t=o.length;e<t;e++)n=o[e],r.push(h[n]);return r}(),c=[],n=i=0,d=p.length;i<d;n=i+=3)s={type:"path",items:function(){var e,t;for(t=[],a=e=0;e<3;a=++e)t.push({type:"point",x:p[n+a][0],y:p[n+a][1]});return t}()},c.push(s);return t.sendDone({paths:c})}t.done(new Error("points must contain more than 2 elements"))}}))}},31270:(e,t,n)=>{"use strict";var r,o;o=n(76445),r=n(41342),t.getComponent=function(){var e;return(e=new o.Component).icon="location-arrow",e.description="Calculates Voronoi Diagram for given points",e.inPorts.add("points",{datatype:"array"}),e.inPorts.add("bbox",{datatype:"object",description:"bounding box as a rectangle (default: 200x200)",control:!0}),e.outPorts.add("paths",{datatype:"array"}),e.outPorts.add("error",{datatype:"object"}),e.process((function(e,t){var n,o,a,i,s,c,u,l,d,p,h,f;if(e.hasData("points")){if((f=e.getData("points")).length>2){for(n=e.hasData("bbox")?{xl:(o=e.getData("bbox")).point.x,xr:o.width,yt:o.point.y,yb:o.height}:{xl:0,xr:200,yt:0,yb:200},l=[],i=0,c=(p=(new r).compute(f,n).cells).length;i<c;i++){for(d=[],s=0,u=(h=p[i].halfedges).length;s<u;s++)a=h[s].getEndpoint(),d.push({type:"point",x:a.x,y:a.y});d.length>0&&l.push({type:"path",items:d})}return t.sendDone({paths:l})}t.done(new Error("points must contain more than 2 elements"))}}))}},85749:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="Collect a stream of packets into object keyed by its groups",e.inPorts.add("in",{datatype:"all",description:"IPs to collect"}),e.outPorts.add("out",{datatype:"object",description:"An object containing input IPs sorted by their group names"}),e.outPorts.add("error",{datatype:"object"}),e.forwardBrackets={},e.process((function(e,t){var n,r,o,a,i,s,c,u,l;if(e.hasStream("in")){for("openBracket"===(l=e.getStream("in"))[0].type&&null===l[0].data&&(l.shift(),l.pop()),r={},o=[],u=[],a=0,i=l.length;a<i;a++)if("openBracket"!==(c=l[a]).type)if("data"!==c.type){if("closeBracket"===c.type){if(s=r,r=u.pop(),!((n=o.pop())in r)){n in r||(r[n]=s);continue}if(Array.isArray(r[n])){r[n].push(s);continue}r[n]=[r[n],s]}}else null==r.$data&&(r.$data=[]),r.$data.push(c.data);else{if("$data"===c.data)return void t.done(new Error("groups cannot be named '$data'"));u.push(r),o.push(c.data),r={}}return t.sendDone({out:r})}}))}},504:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e,t;return(e=new r.Component).description="Collect packets to an object identified by keys organized by connection",e.inPorts.add("keys",{datatype:"string",description:"Comma-separated property names to be used for data based on connection index"}),e.inPorts.add("allpackets",{datatype:"string",description:"Comma-separated property names to collect all packets for in an array"}),e.inPorts.add("collect",{datatype:"all",addressable:!0,description:"Data IPs to collect"}),e.inPorts.add("release",{datatype:"bang",description:"Release all collected packets as an object"}),e.inPorts.add("clear",{datatype:"bang",description:"Clear all collected data"}),e.outPorts.add("out",{datatype:"object"}),e.context={},e.forwardBrackets={},t=function(t){return e.context[t]||(e.context[t]={data:{},groups:{},keys:[],allpackets:[]}),e.context[t]},e.tearDown=function(t){return e.context={},t()},e.process((function(n,r){var o,a,i;return o=t(n.scope),n.hasData("keys")?((i=n.getData("keys").split(",")).length>1&&(o.keys=[]),o.keys=o.keys.concat(i),void r.done()):n.hasData("allpackets")?((i=n.getData("allpackets").split(",")).length>1&&(o.allpackets=[]),o.allpackets=o.allpackets.concat(i),void r.done()):n.hasData("release")?(n.getData("release"),r.send({out:o.data}),o.data={},void r.done()):n.hasData("clear")?(n.getData("clear"),delete e.context[n.scope],void r.done()):!(a=n.attached("collect").filter((function(e){return n.has(["collect",e])}))).length||n.attached("keys").length&&!o.keys.length||n.attached("allpackets").length&&!o.allpackets.length?void 0:(a.forEach((function(e){var t,r,a,i;if(i=n.get(["collect",e]),o.keys[e]){if(o.groups[e]||(o.groups[e]=[]),"openBracket"!==i.type)return"data"===i.type?(a=o.keys[e],o.groups[e].length?(r=o.groups[e][0],o.data[r]||(o.data[r]={}),t=o.data[r]):t=o.data,o.allpackets[e]?(t[a]||(t[a]=[]),void t[a].push(i.data)):void(t[a]=i.data)):void("closeBracket"===i.type&&o.groups[e].pop());o.groups[e].push(i.data)}})),r.done())}))}},88545:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="Collect a stream of packets into a simple tree structure",e.inPorts.add("in",{datatype:"all"}),e.inPorts.add("level",{datatype:"integer",default:0,description:"Number of groups (from outermost) to skip collection of",control:!0}),e.outPorts.add("out",{datatype:"object"}),e.outPorts.add("error",{datatype:"object"}),e.forwardBrackets={},e.process((function(e,t){var n,o,a,i,s,c,u,l,d,p,h,f,g,m,v,y,b,w,_;if(e.hasStream("in")&&(!e.attached("level").length||e.hasData("level"))){for(b=e.hasData("level")?e.getData("level"):0,"openBracket"===(_=e.getStream("in"))[0].type&&null===_[0].data&&(_.shift(),_.pop()),i={},o=0,n=[],s=[],l=0,g=_.length;l<g;l++)if("openBracket"!==(w=_[l]).type)if("data"!==w.type)"closeBracket"!==w.type||(o<b||n.pop(),o-=1);else{if(!n.length)continue;for(a=i,d=p=0,m=n.length;p<m;d=++p)c=n[d],d<n.length-1&&(a[c]||(a[c]={}),a=a[c]);if(!a[c]){a[c]=w.data;continue}Array.isArray(a[c])||(a[c]=[a[c]]),a[c].push(w.data)}else o<b?s.push(w.data):n.push(w.data),o+=1;if(Object.keys(i).length){for(h=0,v=s.length;h<v;h++)u=s[h],t.send({out:new r.IP("openBracket",u)});for(t.send({out:i}),s.reverse(),f=0,y=s.length;f<y;f++)u=s[f],t.send({out:new r.IP("closeBracket",u)});t.done()}else t.done(new Error("No tree information was collected"))}}))}},27859:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e,t;return(e=new r.Component).description="Given a RegExp string, filter out groups that do not match and their children data packets/groups. Forward only the content of the matching group.",e.inPorts.add("in",{datatype:"all",description:"IPs to filter groups from",addressable:!0}),e.inPorts.add("regexp",{datatype:"string",description:"Regexp use as a filter for IPs",control:!0}),e.outPorts.add("out",{datatype:"all"}),e.outPorts.add("group",{datatype:"string"}),e.outPorts.add("empty",{datatype:"bang"}),e.scopes={},e.tearDown=function(t){return e.scopes={},t()},t=function(t,n){return e.scopes[t]||(e.scopes[t]={}),e.scopes[t][n]||(e.scopes[t][n]={level:0,hasContent:!1,matchedLevel:null}),e.scopes[t][n]},e.forwardBrackets={},e.process((function(e,n){var o,a;if((o=e.attached("in").filter((function(t){return e.has(["in",t])}))).length&&e.hasData("regexp"))return a=new RegExp(e.getData("regexp")),o.forEach((function(o){var i,s;if(s=t(e.scope,o),"openBracket"===(i=e.get(["in",o])).type)return null!=s.matchedLevel&&n.send({out:new r.IP("openBracket",i.data)}),s.level++,void(null==s.matchedLevel&&null!=i.data.match(a)&&(s.matchedLevel=s.level,n.send({group:i.data})));if("data"===i.type){if(null==s.matchedLevel)return;return s.hasContent=!0,void n.send({out:i})}if("closeBracket"===i.type){if(s.matchedLevel===s.level&&(s.matchedLevel=null),null!=s.matchedLevel&&n.send({out:new r.IP("closeBracket",i.data)}),s.level--,s.level)return;if(!s.hasContent)return n.send({empty:null})}})),n.done()}))}},90278:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e,t;return(e=new r.Component).description="Forward incoming IPs and filter groups except the first one",e.inPorts.add("in",{datatype:"all",description:"IPs to forward",addressable:!0}),e.outPorts.add("out",{datatype:"all"}),e.depth={},e.tearDown=function(t){return e.depth={},t()},t=function(t,n){return e.depth[t]||(e.depth[t]={}),e.depth[t][n]||(e.depth[t][n]=0),e.depth[t][n]},e.forwardBrackets={},e.process((function(n,o){var a;if((a=n.attached("in").filter((function(e){return n.has(["in",e])}))).length)return a.forEach((function(a){var i,s;if(i=t(n.scope,a),"openBracket"===(s=n.get(["in",a])).type)return 0===i&&o.send({out:new r.IP("openBracket",s.data)}),void e.depth[n.scope][a]++;"data"!==s.type?"closeBracket"===s.type&&(e.depth[n.scope][a]--,0===e.depth[n.scope][a]&&o.send({out:new r.IP("closeBracket",s.data)})):o.send({out:s})})),o.done()}))}},27319:(e,t,n)=>{"use strict";var r,o;r=n(76445),o=n(83221),t.getComponent=function(){var e;return(e=new r.Component).description="Wrap IPs into a random UUID generated group",e.inPorts.add("in",{datatype:"all",description:"IPs to forward"}),e.outPorts.add("out",{datatype:"all"}),e.process((function(e,t){var n,a;if(e.hasData("in"))return n=e.getData("in"),a=o.v4(),t.send({out:new r.IP("openBracket",a)}),t.send({out:n}),t.send({out:new r.IP("closeBracket",a)}),t.done()}))}},5893:(e,t,n)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var o;o=n(76445),t.getComponent=function(){var e;return(e=new o.Component).description="Surround data IPs brackets",e.inPorts.add("in",{datatype:"all",description:"IPs to forward"}),e.inPorts.add("group",{datatype:"string",description:"Groups to encapsulate incoming packets into",control:!0}),e.outPorts.add("out",{datatype:"all",description:"Forwarded IPs with encapsulating groups"}),e.forwardBrackets={},e.process((function(e,t){var n,a,i,s,c,u,l,d;if(e.hasData("in","group")){var p=function(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(e,t)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e.getData("in","group"),2);for(i=p[0],s=p[1],c=0,l=(a=Array.isArray(s)?s.slice(0):s.split(":")).length;c<l;c++)n=a[c],t.send({out:new o.IP("openBracket",n)});for(t.send({out:i}),a.reverse(),u=0,d=a.length;u<d;u++)n=a[u],t.send({out:new o.IP("closeBracket",n)});return t.done()}}))}},57045:(e,t,n)=>{"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var a;a=n(76445),t.getComponent=function(){var e;return(e=new a.Component).description="Group IPs by a key in their payload",e.inPorts.add("in",{datatype:"object"}),e.inPorts.add("key",{datatype:"string",control:!0}),e.outPorts.add("out",{datatype:"object"}),e.outPorts.add("error",{datatype:"object"}),e.forwardBrackets={},e.process((function(e,t){var n,i,s,c,u;if(e.hasData("in","key")){var l=(c=e.getData("in","key"),u=2,function(e){if(Array.isArray(e))return e}(c)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(c,u)||function(e,t){if(e){if("string"==typeof e)return o(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?o(e,t):void 0}}(c,u)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());if(n=l[0],s=l[1],"object"===r(n))return i=n[s],"string"!=typeof n[s]&&(i="undefined"),"boolean"==typeof n[s]&&n[s]&&(i=s),t.send({out:new a.IP("openBracket",i)}),t.send({out:n}),t.send({out:new a.IP("closeBracket",i)}),t.done();t.done(new Error("Data is not an object"))}}))}},90778:(e,t,n)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var o;o=n(76445),t.getComponent=function(){var e;return(e=new o.Component).description="Group packets by a group in order received",e.inPorts.add("in",{datatype:"all"}),e.inPorts.add("group",{datatype:"string"}),e.outPorts.add("out",{datatype:"all"}),e.forwardBrackets={},e.process((function(e,t){var n,a,i,s;if(e.hasData("in","group")){var c=(i=e.getData("in","group"),s=2,function(e){if(Array.isArray(e))return e}(i)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(i,s)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(i,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());return n=c[0],a=c[1],t.send({out:new o.IP("openBracket",a)}),t.send({out:n}),t.send({out:new o.IP("closeBracket",a)}),t.done()}}))}},5076:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e,t;return(e=new r.Component).description="Forward incoming IPs and filter groups except the last one",e.inPorts.add("in",{datatype:"all",description:"IPs to forward",addressable:!0}),e.outPorts.add("out",{datatype:"all"}),e.depth={},e.tearDown=function(t){return e.depth={},t()},t=function(t,n){return e.depth[t]||(e.depth[t]={}),e.depth[t][n]||(e.depth[t][n]=[]),e.depth[t][n]},e.forwardBrackets={},e.process((function(e,n){var o;if((o=e.attached("in").filter((function(t){return e.has(["in",t])}))).length)return o.forEach((function(o){var a,i,s;if(a=t(e.scope,o),"openBracket"!==(s=e.get(["in",o])).type){if("data"===s.type)return a.length&&((i=a[a.length-1]).hasData||(n.send({out:new r.IP("openBracket",i.group)}),i.hasData=!0)),void n.send({out:s});if("closeBracket"===s.type){if(!(i=a.pop()).hasData)return;n.send({out:new r.IP("closeBracket",i.group)})}}else a.push({group:s.data,hasData:!1})})),n.done()}))}},5331:(e,t,n)=>{"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var o;o=n(76445),t.getComponent=function(){var e;return(e=new o.Component).description="Replace groups based on static or regexp map",e.inPorts.add("map",{datatype:"all",control:!0}),e.inPorts.add("regexp",{datatype:"all",control:!0}),e.inPorts.add("in",{datatype:"all"}),e.outPorts.add("out",{datatype:"all"}),e.forwardBrackets={},e.process((function(e,t){var n,a,i,s,c,u,l,d,p,h,f,g;if(e.has("in")&&(!e.attached("map").length||e.hasData("map"))&&(!e.attached("regexp").length||e.hasData("regexp")))if(s={},p={},e.hasData("map")&&("object"===r(c=e.getData("map"))?s=c:s[(u=c.split("="))[0]]=u[1]),e.hasData("regexp")&&("object"===r(h=e.getData("regexp"))?p=h:p[(f=h.split("="))[0]]=f[1]),"data"!==(l=e.get("in")).type){if("openBracket"!==(d=l.type)&&"closeBracket"!==d)return t.done();if("string"!=typeof l.data)return void t.sendDone({out:l});if(s[l.data])return void t.sendDone({out:new o.IP(l.type,s[l.data])});for(a in i=l.data,p)g=p[a],(n=new RegExp(a)).exec(i)&&(i=i.replace(n,g));t.sendDone({out:new o.IP(l.type,i)})}else t.sendDone({out:l})}))}},2635:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e,t;return(e=new r.Component).description="Flatten group tree to a single level",e.inPorts.add("in",{datatype:"all",description:"IPs to forward",addressable:!0}),e.outPorts.add("out",{datatype:"all"}),e.depth={},e.tearDown=function(t){return e.depth={},t()},t=function(t,n){return e.depth[t]||(e.depth[t]={}),e.depth[t][n]||(e.depth[t][n]={groups:[],dataGroups:[]}),e.depth[t][n]},e.forwardBrackets={},e.process((function(e,n){var o;if((o=e.attached("in").filter((function(t){return e.has(["in",t])}))).length)return o.forEach((function(o){var a,i;if(a=t(e.scope,o),"openBracket"!==(i=e.get(["in",o])).type)return"data"===i.type?(a.groups.length&&!a.dataGroups.length&&(a.dataGroups=a.groups.slice(0),n.send({out:new r.IP("openBracket",a.dataGroups.join(":"))})),void n.send({out:i})):void("closeBracket"===i.type&&(a.groups.join(":")===a.dataGroups.join(":")&&(n.send({out:new r.IP("closeBracket",a.dataGroups.join(":"))}),a.dataGroups=[]),a.groups.pop()));a.groups.push(i.data)})),n.done()}))}},39911:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e,t;return(e=new r.Component).description="specify a regexp string, use the first match as the key of an object containing the data",e.inPorts.add("in",{datatype:"all",addressable:!0}),e.inPorts.add("regexp",{datatype:"string",control:!0}),e.outPorts.add("out",{datatype:"all"}),e.forwardBrackets={},e.matches={},e.tearDown=function(t){return e.matches={},t()},t=function(t,n){return e.matches[t]||(e.matches[t]={}),e.matches[t][n]||(e.matches[t][n]=null),e.matches[t][n]},e.forwardBrackets={},e.process((function(n,r){var o,a;if(n.hasData("regexp")&&(o=n.attached("in").filter((function(e){return n.has(["in",e])}))).length)return a=new RegExp(n.getData("regexp")),o.forEach((function(o){var i,s,c,u;return c=t(n.scope,o),"openBracket"===(u=n.get(["in",o])).type?("string"==typeof u.data&&u.data.match(a)&&(e.matches[n.scope][o]=u.data.match(a)[0]),void r.send({out:u})):"data"===u.type?null!=c?(i=u.data,(s={})[c]=i,void r.send({out:s})):void r.send({out:u}):void("closeBracket"===u.type&&(e.matches[n.scope][o]=null,r.send({out:u})))})),r.done()}))}},25501:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e,t;return(e=new r.Component).description="Send the groups surrounding a packet",e.inPorts.add("in",{datatype:"all",addressable:!0}),e.outPorts.add("out",{datatype:"all"}),e.outPorts.add("group",{datatype:"string"}),e.groups={},t=function(t,n){return e.groups[t]||(e.groups[t]={}),e.groups[t][n]||(e.groups[t][n]=[]),e.groups[t][n]},e.tearDown=function(t){return e.groups={},t()},e.forwardBrackets={},e.process((function(e,n){var r;if((r=e.attached("in").filter((function(t){return e.has(["in",t])}))).length)return r.forEach((function(r){var o,a;return o=t(e.scope,r),"openBracket"===(a=e.get(["in",r])).type?(o.push(a.data),void n.send({out:a,group:a.clone()})):"data"===a.type?(n.send({group:o.join(":")}),void n.send({out:a})):void("closeBracket"===a.type&&(o.pop(),n.send({out:a,group:a.clone()})))})),n.done()}))}},97223:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e,t;return(e=new r.Component).description="Send the groups surrounding a packet",e.inPorts.add("in",{datatype:"all",addressable:!0}),e.inPorts.add("strip",{datatype:"boolean",control:!0,default:!1}),e.inPorts.add("threshold",{datatype:"int",control:!0,default:Infinity}),e.outPorts.add("out",{datatype:"all"}),e.outPorts.add("group",{datatype:"string"}),e.groups={},t=function(t,n){return e.groups[t]||(e.groups[t]={}),e.groups[t][n]||(e.groups[t][n]=[]),e.groups[t][n]},e.tearDown=function(t){return e.groups={},t()},e.forwardBrackets={},e.process((function(e,n){var r,o,a;if((r=e.attached("in").filter((function(t){return e.has(["in",t])}))).length&&(!e.attached("strip").length||e.hasData("strip"))&&(!e.attached("threshold").length||e.hasData("threshold")))return o=!!e.hasData("strip")&&"true"===String(e.getData("strip")),a=e.hasData("threshold")?parseInt(e.getData("threshold")):Infinity,r.forEach((function(r){var i,s;if(i=t(e.scope,r),"openBracket"!==(s=e.get(["in",r])).type)"data"!==s.type?"closeBracket"===s.type&&((i.length>a||!o)&&n.send({out:s}),i.pop()):n.send({out:s});else{if(i.push(s.data),i.length>a)return void n.send({out:s});if(n.send({group:s.data}),o)return;n.send({out:s})}})),n.done()}))}},4876:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="Forward all the data IPs, strip all groups, and replace them with groups from another connection",e.inPorts.add("in",{datatype:"all"}),e.inPorts.add("group",{datatype:"string"}),e.outPorts.add("out",{datatype:"all"}),e.groups={},e.tearDown=function(t){return e.groups={},t()},e.forwardBrackets={},e.process((function(t,n){var o,a,i,s,c,u,l,d;if(t.hasData("group"))return e.groups[t.scope]||(e.groups[t.scope]=[]),e.groups[t.scope].push(t.getData("group")),void n.done();if(t.hasData("in")){for(i=[],(null!=(d=e.groups[t.scope])?d.length:void 0)&&(i=e.groups[t.scope].slice(0)),o=t.getData("in"),s=0,u=i.length;s<u;s++)a=i[s],n.send({out:new r.IP("openBracket",a)});for(n.send({out:o}),i.reverse(),c=0,l=i.length;c<l;c++)a=i[c],n.send({out:new r.IP("closeBracket",a)});return n.done()}}))}},37074:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="Remove groups matching a string or a regex string, or all if no regexp given",e.inPorts.add("in",{datatype:"all",description:"IPs to forward"}),e.inPorts.add("regexp",{datatype:"string",description:"Regexp used to remove groups",control:!0}),e.outPorts.add("out",{datatype:"all"}),e.forwardBrackets={},e.process((function(e,t){var n,r,o;if(e.has("in")&&(!e.attached("regexp").length||e.hasData("regexp"))){if(o=null,e.hasData("regexp")&&(o=new RegExp(e.getData("regexp"))),"openBracket"===(r=(n=e.get("in")).type)||"closeBracket"===r)return o?"string"==typeof n.data&&n.data.match(o)?void t.done():void t.sendDone({out:n}):void t.done();"data"===n.type&&t.sendDone({out:n})}}))}},80585:(e,t,n)=>{"use strict";var r,o;o=n(76445),r=function(e){return e.length?e.join(":"):"ungrouped"},t.getComponent=function(){var e;return(e=new o.Component).description='Send packet held in "data" when receiving matching set of groups in "in"',e.icon="share-square",e.inPorts.add("in",{datatype:"bang",description:"Signal to release IPs associated with the emitted group"}),e.inPorts.add("data",{datatype:"all",description:"IP to store by group",addressable:!0}),e.outPorts.add("out",{datatype:"all",description:"IP associated with a group received on the in port"}),e.stored={},e.released={},e.groups=[],e.tearDown=function(t){return e.stored={},e.released={},e.groups=[],t()},e.forwardBrackets={},e.process((function(t,n){var a,i,s,c,u,l,d;if(l=function(a){var i,s,c,u,l,d,p;if(u=r(a),e.released[t.scope]||(e.released[t.scope]={}),e.released[t.scope][u]=!0,e.stored[t.scope]&&e.stored[t.scope][u]){for(c=0,d=a.length;c<d;c++)s=a[c],n.send({out:new o.IP("openBracket",s)});for(n.send({out:e.stored[t.scope][u]}),(i=a.slice(0)).reverse(),l=0,p=i.length;l<p;l++)s=i[l],n.send({out:new o.IP("closeBracket",s)});e.released[t.scope][u]=!1}},t.hasStream("in")){for(a=[],i=0,c=(d=t.getStream("in")).length;i<c;i++)"openBracket"!==(u=d[i]).type?"data"!==u.type?"closeBracket"!==u.type||a.pop():l(a):a.push(u.data);n.done()}else if((s=t.attached("data").filter((function(e){return t.has(["data",e])}))).length)return s.forEach((function(n){var o,a;if(e.groups[t.scope]||(e.groups[t.scope]={}),e.groups[t.scope][n]||(e.groups[t.scope][n]=[]),"openBracket"!==(u=t.get(["data",n])).type)return"data"===u.type?(o=r(e.groups[t.scope][n]),e.stored[t.scope]||(e.stored[t.scope]={}),e.stored[t.scope][o]=u,void((null!=(a=e.released[t.scope])?a[o]:void 0)&&l(e.groups[t.scope][n]))):void("closeBracket"===u.type&&e.groups[t.scope][n].pop());e.groups[t.scope][n].push(u.data)})),n.done()}))}},39640:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="Adjust brightness level of a given image.",e.icon="file-image-o",e.inPorts.add("canvas",{datatype:"object"}),e.inPorts.add("level",{datatype:"number",control:!0,default:10}),e.outPorts.add("canvas",{datatype:"object"}),e.forwardBrackets={canvas:["canvas"]},e.process((function(e,t){var n,r,o,a,i,s,c,u,l,d;if(e.hasData("canvas")&&(!e.attached("level").length||e.hasData("level"))){for(u=10,e.hasData("level")&&(u=e.getData("level")),r=(n=e.getData("canvas")).getContext("2d"),d=n.width,a=n.height,o=(s=r.getImageData(0,0,d,a)).data,u=Math.floor(u/100*255),i=c=0,l=o.length;c<l;i=c+=4)o[i]+=u,o[i+1]+=u,o[i+2]+=u;r.putImageData(s,0,0),t.sendDone({canvas:n})}}))}},13886:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="Adjust contrast level of a given image.",e.icon="file-image-o",e.inPorts.add("canvas",{datatype:"object"}),e.inPorts.add("level",{datatype:"number",control:!0,default:1}),e.outPorts.add("canvas",{datatype:"object"}),e.forwardBrackets={canvas:["canvas"]},e.process((function(e,t){var n,r,o,a,i,s,c,u,l,d;if(e.hasData("canvas")&&(!e.attached("level").length||e.hasData("level"))){for(u=1,e.hasData("level")&&(u=e.getData("level")),r=(n=e.getData("canvas")).getContext("2d"),d=n.width,a=n.height,o=(s=r.getImageData(0,0,d,a)).data,u=(parseFloat(u)||0)+1,i=c=0,l=o.length;c<l;i=c+=4)o[i]=255*((o[i]/255-.5)*u+.5),o[i+1]=255*((o[i+1]/255-.5)*u+.5),o[i+2]=255*((o[i+2]/255-.5)*u+.5);r.putImageData(s,0,0),t.sendDone({canvas:n})}}))}},36593:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="Adjust saturation level of a given image.",e.icon="file-image-o",e.inPorts.add("canvas",{datatype:"object"}),e.inPorts.add("level",{datatype:"number",control:!0,default:100}),e.outPorts.add("canvas",{datatype:"object"}),e.forwardBrackets={canvas:["canvas"]},e.process((function(e,t){var n,r,o,a,i,s,c,u,l,d,p;if(e.hasData("canvas")&&(!e.attached("level").length||e.hasData("level"))){for(u=100,e.hasData("level")&&(u=e.getData("level")),r=(n=e.getData("canvas")).getContext("2d"),p=n.width,a=n.height,u*=-.01,i=c=0,d=(o=(s=r.getImageData(0,0,p,a)).data).length;c<d;i=c+=4)l=Math.max(o[i],o[i+1],o[i+2]),o[i]!==l&&(o[i]+=(l-o[i])*u),o[i+1]!==l&&(o[i+1]+=(l-o[i+1])*u),o[i+2]!==l&&(o[i+2]+=(l-o[i+2])*u);r.putImageData(s,0,0),t.sendDone({canvas:n})}}))}},35102:(e,t,n)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var o;o=n(76445),t.getComponent=function(){var e;return(e=new o.Component).description="Apply a RGBA adjustment curve to a given image.",e.icon="file-image-o",e.inPorts.add("canvas",{datatype:"object"}),e.inPorts.add("curve",{datatype:"object"}),e.outPorts.add("canvas",{datatype:"object"}),e.forwardBrackets={canvas:["canvas"]},e.process((function(e,t){var n,o,a,i,s,c,u,l,d,p;if(e.hasData("canvas","curve")){var h=function(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(e,t)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e.getData("canvas","curve"),2);for(n=h[0],a=h[1],p=n.width,s=n.height,c=l=0,d=(i=(u=(o=n.getContext("2d")).getImageData(0,0,p,s)).data).length;l<d;c=l+=4)i[c]=a.r[i[c]],i[c+1]=a.g[i[c+1]],i[c+2]=a.b[i[c+2]],i[c]=a.a[i[c]],i[c+1]=a.a[i[c+1]],i[c+2]=a.a[i[c+2]];o.putImageData(u,0,0),t.sendDone({canvas:n})}}))}},41165:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="Apply a vignette effect to a given image.",e.icon="file-image-o",e.inPorts.add("canvas",{datatype:"object"}),e.outPorts.add("canvas",{datatype:"object"}),e.forwardBrackets={canvas:["canvas"]},e.process((function(e,t){var n,r,o,a,i,s;e.hasData("canvas")&&(r=(n=e.getData("canvas")).getContext("2d"),s=n.width,a=n.height,r.getImageData(0,0,s,a).data,i=Math.sqrt(Math.pow(s/2,2)+Math.pow(a/2,2)),r.globalCompositeOperation="source-over",(o=r.createRadialGradient(s/2,a/2,0,s/2,a/2,i)).addColorStop(0,"rgba(0, 0, 0, 0)"),o.addColorStop(.65,"rgba(0, 0, 0, 0)"),o.addColorStop(1,"rgba(0, 0, 0, 0.9)"),r.fillStyle=o,r.fillRect(0,0,s,a),r.globalCompositeOperation="lighter",(o=r.createRadialGradient(s/2,a/2,0,s/2,a/2,i)).addColorStop(0,"rgba(255, 255, 255, 0.1)"),o.addColorStop(.65,"rgba(255, 255, 255, 0)"),o.addColorStop(1,"rgba(0, 0, 0, 0)"),r.fillStyle=o,r.fillRect(0,0,s,a),t.sendDone({canvas:n}))}))}},67343:(e,t,n)=>{"use strict";var r,o;o=n(76445),r=function(e,t){return 0===t?e:r(t,e%t)},t.getComponent=function(){var e;return(e=new o.Component).icon="file-image-o",e.description="Calculate aspect ratio from image dimensions",e.inPorts.add("dimensions",{datatype:"object"}),e.outPorts.add("ratio",{datatype:"object"}),e.outPorts.add("error",{datatype:"object"}),o.helpers.WirePattern(e,{in:"dimensions",out:"ratio",forwardGroups:!0,async:!0},(function(e,t,n,o){var a,i,s;return(null!=e?e.width:void 0)>0?(null!=e?e.height:void 0)>0?(i=r(e.width,e.height),s=e.width/i,a=e.height/i,n.send({ratio:"".concat(s,":").concat(a),aspect:s/a}),o()):o(new Error("Dimension is missing height")):o(new Error("Dimension is missing width"))}))}},16754:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="Loads an image from given url, sends the element",e.icon="picture-o",e.inPorts.add("url",{datatype:"string",description:"Image URL"}),e.inPorts.add("crossorigin",{datatype:"string",description:"crossorigin Anonymous for CORS-enabled server",required:!1}),e.outPorts.add("image",{datatype:"object",description:"Loaded image"}),e.outPorts.add("error",{datatype:"object"}),r.helpers.WirePattern(e,{in:"url",params:"crossorigin",out:"image",forwardGroups:!0,async:!0},(function(t,n,r,o){var a;a=new Image,e.params.crossorigin&&(a.crossOrigin=e.params.crossorigin),a.onload=function(){r.beginGroup(t),r.send(a),r.endGroup(),o()},a.onerror=function(e){return e.url=t,o(e)},a.src=t}))}},43093:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="Crop the rectangle out of a given canvas",e.icon="file-image-o",e.inPorts=new r.InPorts({canvas:{datatype:"object",required:!0},rectangle:{datatype:"object",description:"A rectangle to crop out",required:!0}}),e.outPorts=new r.OutPorts({canvas:{datatype:"object"},error:{datatype:"object"}}),r.helpers.WirePattern(e,{in:["canvas","rectangle"],out:"canvas",forwardGroups:!0,async:!0},(function(e,t,o,a){var i,s,c,u,l,d;if(null==e.rectangle)return a(new Error("Error when trying to crop the canvas given a rectangle. The rectangle is missing."));if(null==e.canvas)return a(new Error("Error when trying to crop the canvas given a rectangle. The canvas is missing."));if(null==e.rectangle.x||null==e.rectangle.y||null==e.rectangle.width||null==e.rectangle.height)return a(new Error("Error when trying to crop the canvas given a rectangle. Rectangle is missing x, y, width or height"));if(!(e.rectangle.width>0&&e.rectangle.height>0))return a(new Error("Error when trying to crop the canvas given a rectangle. Rectangle width or height is not a positive value"));if(!(e.canvas.width>0&&e.canvas.height>0))return a(new Error("Error when trying to crop the canvas given a rectangle. Canvas is missing width or height"));c=e.canvas;var p=e.rectangle;l=p.x,d=p.y,u=p.width,i=p.height,u>c.width&&(u=Math.abs(c.width-l)),i>c.height&&(i=Math.abs(c.height-d)),l<0&&(l=0),d<0&&(d=0),r.isBrowser()?((s=document.createElement("canvas")).width=u,s.height=i):s=new(0,n(45801).canvas)(u,i),s.getContext("2d").drawImage(c,l,d,u,i,0,0,u,i),null!=c.originalWidth&&(s.originalWidth=c.originalWidth),null!=c.originalHeight&&(s.originalHeight=c.originalHeight),o.send(s),a()}))}},39319:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).icon="file-image-o",e.description="Extract global lightness of a given image. Light images will return values greater than zero.",e.outPorts.add("lightness",{datatype:"number"}),e.inPorts.add("canvas",{datatype:"object"}),r.helpers.WirePattern(e,{in:["canvas"],out:["lightness"],forwardGroups:!0,async:!0},(function(e,t,n,r){var o,a,i,s,c,u,l,d,p,h,f;for(d=0,i=0,u=l=0,f=(s=(a=e).getContext("2d").getImageData(0,0,a.width,a.height).data).length;l<f;u=l+=4)h=s[u],c=s[u+1],o=s[u+2],Math.max(Math.max(h,c),o)>=127?d+=1:i+=1;p=(d-i)/(a.width*a.height),n.send(p),r()}))}},76081:(e,t,n)=>{"use strict";var r,o,a,i,s,c;s=n(76445),r=function(e,t){var n,r,o,a,i,s,c,u,l;for(o=[],s=n=1,a=t.x;1<=a?n<=a:n>=a;s=1<=a?++n:--n)for(c=r=1,i=t.y;1<=i?r<=i:r>=i;c=1<=i?++r:--r)u=e.w*(s/(t.x+1)),l=e.h*(c/(t.y+1)),o.push({x:u,y:l});return o},c=function(e){var t,n,r;return n=function(t,n){return e[t].x>e[n].x?1:e[t].x<e[n].x?-1:0},r=function(t,n){return e[t].y>e[n].y?1:e[t].y<e[n].y?-1:0},(t={x:function(){for(var t=[],n=0,r=e.length;0<=r?n<r:n>r;0<=r?n++:n--)t.push(n);return t}.apply(this),y:function(){for(var t=[],n=0,r=e.length;0<=r?n<r:n>r;0<=r?n++:n--)t.push(n);return t}.apply(this)}).x.sort(n),t.y.sort(r),t},o=function(e,t,n){var r;return{x:(r=function(r){var o,a,i,s,c;if(s=t[r].length,n[r]>e[t[r][s-1]][r])return s;for(o=i=0,c=s;0<=c?i<c:i>c;o=0<=c?++i:--i)if(a=t[r][o],e[a][r]>n[r])return o-1;return-1})("x"),y:r("y")}},i=function(e,t,n,r,a){var i,s,c,u,l,d,p,h;if(n.x>r.w||n.y>n.h)throw new Error("Initial point is outside bounds");for(l=o(e,t,n),i=function(n,o){var a;return o<0?{x:0,y:0}:o>=t[n].length?{x:r.w,y:r.h}:(a=t[n][o],e[a])},u=function(e,t){var n,r;return n=e.x>=t.x0&&e.x<=t.x1,r=e.y>=t.y0&&e.y<=t.y1,n&&r},d={x0:n.x,x1:n.x,y0:n.y,y1:n.y},c={x:l.x,y:l.y};c.x=c.x+1,c.y=c.y+1,p=i("x",c.x),h=i("y",c.y),s=!1,u(p,d)||(d.x1=p.x,s=!0),u(h,d)||(d.y1=h.y,s=!0),s&&!(c.x>t.x.length)&&!(c.y>t.y.length););return{x:d.x0,y:d.y0,width:d.x1-d.x0,height:d.y1-d.y0}},a=function(e,t,n){var o,a,s,u,l,d,p,h,f;for(h=t.w>t.h?{x:n,y:Math.floor(n*(t.w/t.h))}:{x:Math.floor(n*(t.h/t.w)),y:n},o=c(e),p=[],a=0,s=(l=r(t,h)).length;a<s;a++)u=l[a],d=i(e,o,u,t),p.push(d);return f=function(e,t){var n,r;return(n=e.width*e.height)>(r=t.width*t.height)?1:n<r?-1:0},p.sort(f),p},t.getComponent=function(){var e;return(e=new s.Component).description="Extract feature corners of image (method: YAPE)",e.icon="file-image-o",e.inPorts.add("corners",{datatype:"array"}),e.inPorts.add("width",{datatype:"int",control:!0,default:0}),e.inPorts.add("height",{datatype:"int",control:!0,default:0}),e.inPorts.add("segments",{datatype:"int",control:!0,default:4}),e.outPorts.add("areas",{datatype:"array"}),e.outPorts.add("corners",{datatype:"array"}),e.forwardBrackets={corners:["areas","corners"]},e.process((function(e,t){var n,r,o,i,s;e.hasData("corners")&&(e.attached("width").length&&!e.hasData("width")||e.attached("height").length&&!e.hasData("height")||e.attached("segments").length&&!e.hasData("segments")||(s=0,e.hasData("width")&&(s=parseInt(e.getData("width"))),r=0,e.hasData("height")&&(r=parseInt(e.getData("height"))),i=4,e.hasData("segments")&&(i=parseInt(e.getData("segments"))),n=e.getData("corners"),o=a(n,{w:s,h:r},i),t.send({areas:o,corners:n}),t.done()))}))},t.calculateStartingPoints=r,t.spatialSortedIndices=c,t.findIndexForPoint=o,t.growRectangle=i},94017:(e,t,n)=>{"use strict";var r,o,a,i,s,c,u,l;s=n(76445),l=[],i={large:1280,medium:384,small:228},o=function(e,t,n,r){return(n-e)*(r-t)},r=function(e,t,n,r){var o,a,i,s,c,u,d,p;for(o=i=c=e,u=n;c<=u?i<u:i>u;o=c<=u?++i:--i)for(a=s=d=t,p=r;d<=p?s<p:s>p;a=d<=p?++s:--s)if(0===l[o][a])return!1;return!0},c=function(e,t){var n,r,o,a,i,s,c,u,l;for(a=e[0],c=e[1],n=!1,r=0,o=t.length-1;r<t.length;)i=t[r][0],u=t[r][1],s=t[o][0],u>c!=(l=t[o][1])>c&&a<(s-i)*(c-u)/(l-u)+i&&(n=!n),o=r++;return n},u=function(e,t){var n,r,o,a,i,s,u,l;for(n=r=0,a=(o=[[u=e[0],l=e[1]],[u+(i=e[2]),l],[u,l+(s=e[3])],[u+i,l+s]]).length;0<=a?r<a:r>a;n=0<=a?++r:--r)if(!0===c(o[n],t))return!0;return!1},a=function(e,t,n,a){var s,c,d,p,h,f,g,m,v,y,b,w,_,x,k,P,S,C,D,E;for(E=e.width,s=e.height,g=30,k=Math.ceil(E/g),P=Math.ceil(s/g),c=p=0;p<30;c=++p)for(l[c]=[],d=h=0;h<30;d=++h)l[c][d]=0;for(c=f=0;f<30;c=++f)for(d=m=0;m<30;d=++m)!1===u([c*k,d*P,k,P],t)&&(l[c][d]=1);for(D=[],v=0;v<g;){for(b=0;b<g;){for(c=(y=[v,b])[0];c<g;){for(d=y[1];d<g;)_=o(y[0]*k,y[1]*P,c*k,d*P),!0===r(y[0],y[1],c,d)&&_>n&&D.push({x:y[0],y:y[1],width:c-y[0],height:d-y[1],area:_}),d+=1;c+=1}b+=1}v+=1}if(0===D.length)return[];for(D.sort((function(e,t){var n,r;return(n=e.area)>(r=t.area)?-1:n<r?1:0})),x=[],c=0;c<a&&c<D.length;)S=(C=D[c]).area,w={x:C.x*k,y:C.y*P,width:C.width*k,height:C.height*P,text:{large:Math.round(S/i.large),medium:Math.round(S/i.medium),small:Math.round(S/i.small)}},x.push(w),c+=1;return x},t.getComponent=function(){var e;return(e=new s.Component).icon="file-image-o",e.description="Find bounding rectangles of regions outside of the given polygon.",e.outPorts.add("out",{datatype:"array"}),e.inPorts.add("canvas",{datatype:"object"}),e.inPorts.add("polygon",{datatype:"array"}),e.inPorts.add("threshold",{datatype:"number",required:!0}),e.inPorts.add("max",{datatype:"number",required:!0}),s.helpers.WirePattern(e,{in:["canvas","polygon"],params:["threshold","max"],out:"out",forwardGroups:!0,async:!0},(function(t,n,r,o){var i,s,c,u,l;i=t.canvas,c=t.polygon;var d=e.params;u=d.threshold,s=d.max,l=a(i,c,u,s),r.send(l),o()}))}},49373:(e,t,n)=>{"use strict";var r,o,a,i,s;s=n(76445),o=function(e){var t,n,r,o,a,i,s;for(t=0,i=0,s=e[0],o=0,a=e.length;o<a;o++)r=e[o],t+=n=Math.abs(r-s),s=r,n>i&&(i=n);return{mean:t/e.length,max:i}},r=function(e){return 0===e.length?0:e.reduce((function(e,t){return e+t}))/e.length},i=function(e,t){var n;return(n=o(e)).mean<=t.mean&&n.max<=t.max},a=function(e,t,n){return Math.abs(r(e)-r(t))>n.avg},t.getComponent=function(){var e;return(e=new s.Component).description="Extract a bounding box with top and bottom borders removed (according to a certain threshold)",e.icon="file-image-o",e.inPorts=new s.InPorts({canvas:{datatype:"object"},mean:{datatype:"number",description:"Mean difference between neighbours at same row"},max:{datatype:"number",description:"Maximal difference between neighbours at same row"},avg:{datatype:"number",description:"Average difference between columns' neighbours"}}),e.outPorts=new s.OutPorts({rectangle:{datatype:"object"},error:{datatype:"object"}}),s.helpers.WirePattern(e,{in:"canvas",params:["mean","max","avg"],out:"rectangle",forwardGroups:!0,async:!0},(function(t,n,r,o){var s,c,u,l,d,p,h,f,g,m,v,y,b,w,_,x,k,P,S,C,D,E,j,A,I,O,q,R,T,B,M,N,L,F,G,U;if(!((null!=t?t.width:void 0)>0&&(null!=t?t.height:void 0)>0))return o(new Error("Error when trying to extract a bounding box. The canvas is missing."));for(p=t.getContext("2d").getImageData(0,0,t.width,t.height).data,e.params.mean||(e.params.mean=.1),e.params.max||(e.params.max=10),e.params.avg||(e.params.avg=10),G=e.params,h=[],g=m=0,E=p.length;m<E;g=m+=4){var z=[p[g],p[g+1],p[g+2]];l=.2126*z[0]+.7152*z[1]+.0722*z[2],h.push(l)}for(s={x:0,y:0,width:t.width,height:t.height},C=h.slice(0,t.width),b=v=t.width,R=h.length,T=t.width;0!==T&&(T>0?v<R:v>R)&&(x=h.slice(b,b+t.width),i(C,G))&&(s.y+=1,!a(C,x,G));b=v+=T)C=x;for(C=h.slice(h.length-t.width,h.length),b=y=h.length-t.width,B=-t.width;0!==B&&(B>0?y<0:y>0)&&(x=h.slice(b-t.width,b),i(C,G))&&(s.height-=1,!a(C,x,G));b=y+=B)C=x;for(C=[],c=w=0,M=h.length,N=t.width;0!==N&&(N>0?w<M:w>M);c=w+=N)C.push(h[c]);for(u=_=1,L=t.width;1<=L?_<L:_>L;u=1<=L?++_:--_){for(x=[],S=k=u,j=h.length,A=t.width;0!==A&&(A>0?k<j:k>j);S=k+=A)x.push(h[S]);if(!i(C,G))break;if(s.x+=1,a(C,x,G))break;C=x}for(C=[],c=P=h.length-1,I=-t.width;0!==I&&(I>0?P<=0:P>=0);c=P+=I)C.push(h[c]);for(u=D=1,O=t.width;1<=O?D<O:D>O;u=1<=O?++D:--D){for(x=[],S=F=h.length-1-u,q=-t.width;0!==q&&(q>0?F<=0:F>=0);S=F+=q)x.push(h[S]);if(!i(C,G))break;if(s.width-=1,a(C,x,G))break;C=x}return d={x:0,y:0,width:t.width,height:t.height},Math.abs(s.y-(t.height-s.height))<.25*Math.max(s.y,t.height-s.height)&&(d.y=s.y,d.height=s.height-d.y),Math.abs(s.x-(t.width-s.width))<.25*Math.max(s.x,t.width-s.width)&&(d.x=s.x,d.width=s.width-d.x),U=Math.max(s.y,t.height-d.height),f=Math.max(s.x,t.width-d.width),((d.height-d.y)*(d.width-d.x)<.25*h.length||U>.05*t.height&&f>.05*t.width||d.width<0||d.height<0)&&(d={x:0,y:0,width:t.width,height:t.height}),r.send(d),o()})),e}},24513:(e,t,n)=>{"use strict";var r,o;o=n(76445),r=n(36521),t.getComponent=function(){var e;return(e=new o.Component).description="Canny edge detector.",e.icon="file-image-o",e.inPorts.add("canvas",{datatype:"object"}),e.inPorts.add("low",{datatype:"number",control:!0,default:20}),e.inPorts.add("high",{datatype:"number",control:!0,default:50}),e.inPorts.add("kernel",{datatype:"number",control:!0,default:6}),e.outPorts.add("canvas",{datatype:"object"}),e.forwardBrackets={canvas:["canvas"]},e.process((function(e,t){var n,o,a,i,s,c,u;if(e.hasData("canvas")&&(!e.attached("low").length||e.hasData("low"))&&(!e.attached("high").length||e.hasData("high"))&&(!e.attached("kernel").length||e.hasData("kernel"))){for(e.hasData("low")&&e.getData("low"),e.hasData("high")&&e.getData("high"),e.hasData("kernel")&&e.getData("kernel"),i=(o=(n=e.getData("canvas")).getContext("2d")).getImageData(0,0,n.width,n.height),c=new r.matrix_t(n.width,n.height,r.U8_t|r.C1_t),r.imgproc.grayscale(i.data,c.data),r.imgproc.gaussian_blur(c,c,this.kernel,0),r.imgproc.canny(c,c,this.low,this.high),s=new Uint32Array(i.data.buffer),a=c.cols*c.rows,u=0;--a>=0;)u=c.data[a],s[a]=-16777216|u<<16|u<<8|u;o.putImageData(i,0,0),t.sendDone({canvas:n})}}))}},42787:(e,t,n)=>{"use strict";var r,o;o=n(76445),r=n(97271),t.getComponent=function(){var e;return(e=new o.Component).description="Extract the dominant colors of an image",e.icon="file-image-o",e.inPorts=new o.InPorts({canvas:{datatype:"object"},css:{datatype:"boolean",default:!1},colors:{datatype:"number",default:10},method:{datatype:"int",default:1,values:[1,2]}}),e.outPorts=new o.OutPorts({colors:{datatype:"array"},canvas:{datatype:"array"},error:{datatype:"object"}}),o.helpers.WirePattern(e,{in:"canvas",out:["colors","canvas"],params:["css","colors","method"],forwardGroups:!0,async:!0},(function(t,n,o,a){var i,s,c;if(!((null!=(null!=t?t.height:void 0))>0&&(null!=(null!=t?t.width:void 0))>0))return a(new Error("Error when trying to get colors: canvas is undefined."));null==e.params.colors&&(e.params.colors=10),null==e.params.method&&(e.params.method=1);try{(c=new r({colors:e.params.colors,method:e.params.method,initColors:4096})).sample(t),i=c.palette(!0,!0),e.params.css&&(i=i.map((function(e){return"rgb(".concat(e[0],", ").concat(e[1],", ").concat(e[2],")")})))}catch(e){return s=e,o.canvas.send(t),o.colors.send([]),console.warn("Error when trying to get colors: ".concat(s," Sending an empty array.")),void a()}o.canvas.send(t),o.colors.send(i),a()}))}},47148:(e,t,n)=>{"use strict";var r,o;o=n(76445),r=function(e,t,n){var r,o,a,i,s,c,u,l,d,p,h,f;for(h=0,f=0,c=(l=n.items).length,i=0,s=l.length;i<s;i++)h+=(d=l[i]).x,f+=d.y;return u=4*((o={x:Math.floor(h/c),y:Math.floor(f/c)}).x+o.y*t),p=e.data[u],a=e.data[u+1],r=e.data[u+2],"rgb(".concat(p,", ").concat(a,", ").concat(r,")")},t.getComponent=function(){var e;return(e=new o.Component).icon="file-image-o",e.description="Extract color of path's centroid.",e.outPorts.add("colors",{datatype:"array"}),e.inPorts.add("canvas",{datatype:"object"}),e.inPorts.add("paths",{datatype:"array"}),o.helpers.WirePattern(e,{in:["canvas","paths"],out:["colors"],forwardGroups:!0,async:!0},(function(e,t,n,o){var a,i,s,c,u,l,d;for(a=e.canvas,d=e.paths,c=a.getContext("2d").getImageData(0,0,a.width,a.height),i=[],s=0,u=d.length;s<u;s++)l=d[s],i.push(r(c,a.width,l));n.send(i),o()}))}},46705:(e,t,n)=>{"use strict";var r,o;o=n(76445),r=n(97271),t.getComponent=function(){var e;return(e=new o.Component).icon="file-image-o",e.description="Extract colors from rectangle regions of a canvas.",e.outPorts.add("out",{datatype:"array"}),e.outPorts.add("error",{datatype:"object"}),e.inPorts.add("canvas",{datatype:"object"}),e.inPorts.add("rect",{datatype:"array"}),e.inPorts.add("css",{datatype:"boolean",required:!0}),e.inPorts.add("colors",{datatype:"number",required:!0}),o.helpers.WirePattern(e,{in:["canvas","rect"],params:["css","colors"],out:"out",forwardGroups:!0,async:!0},(function(t,a,i,s){var c,u,l,d,p,h,f,g,m,v,y,b,w,_,x;c=t.canvas,x=t.rect;var k=e.params;for(l=k.css,u=k.colors,o.isBrowser()?((v=document.createElement("canvas")).width=200,v.height=200):v=new(0,n(45801).canvas)(200,200),d=v.getContext("2d"),y=[],h=0,g=x.length;h<g;h++)_=x[h],d.drawImage(c,_.x,_.y,_.width,_.height,0,0,200,200),y.push(v);try{for(b=[],f=0,m=y.length;f<m;f++)v=y[f],(w=new r({colors:u,method:1,initColors:4096})).sample(v),p=w.palette(!0,!0),l&&(p=p.map((function(e){return"rgb(".concat(e[0],", ").concat(e[1],", ").concat(e[2],")")}))),b.push(p)}catch(e){return void s(e)}i.send(b),s()}))}},61649:(e,t,n)=>{"use strict";var r,o;o=n(76445),r=n(36521),t.getComponent=function(){var e;return(e=new o.Component).description="Extract feature corners of image (method: YAPE)",e.icon="file-image-o",e.inPorts.add("canvas",{datatype:"object"}),e.outPorts.add("corners",{datatype:"array"}),e.outPorts.add("canvas",{datatype:"object"}),e.forwardBrackets={canvas:["canvas","corners"]},e.process((function(e,t){var n,o,a,i,s,c,u;if(e.hasData("canvas")){for(i=(n=e.getData("canvas")).getContext("2d").getImageData(0,0,n.width,n.height),r.yape06.laplacian_threshold=30,r.yape06.min_eigen_value_threshold=25,s=new r.matrix_t(n.width,n.height,r.U8_t|r.C1_t),r.imgproc.grayscale(i.data,n.width,n.height,s),r.imgproc.box_blur_gray(s,s,2,0),o=[],c=0,u=n.width*n.height;0<=u?c<u:c>u;0<=u?++c:--c)o.push(new r.keypoint_t(0,0,0));a=r.yape06.detect(s,o),t.sendDone({corners:o.slice(0,a),canvas:n})}}))}},18881:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).icon="file-image-o",e.description="Get orientation from image dimensions",e.inPorts.add("dimensions",{datatype:"object"}),e.outPorts.add("orientation",{datatype:"object"}),e.outPorts.add("error",{datatype:"object"}),r.helpers.WirePattern(e,{in:"dimensions",out:"orientation",forwardGroups:!0,async:!0},(function(e,t,n,r){var o;return(null!=e?e.width:void 0)>0?(null!=e?e.height:void 0)>0?(o="square",e.width>e.height&&(o="landscape"),e.width<e.height&&(o="portrait"),n.send({orientation:o}),void r()):r(new Error("Dimension is missing height")):r(new Error("Dimension is missing width"))}))}},67971:(e,t,n)=>{"use strict";var r,o;r=n(76445),o={1977:{a:[0,1,3,4,6,7,9,10,12,13,14,16,17,19,20,22,23,25,26,28,29,31,32,34,35,37,38,39,41,42,44,45,46,48,49,50,52,53,54,55,57,58,59,60,61,62,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,125,126,127,128,129,130,131,132,133,134,135,136,137,137,138,139,140,141,142,143,144,145,146,146,147,148,149,150,151,152,153,153,154,155,156,157,158,159,160,160,161,162,163,164,165,166,166,167,168,169,170,171,172,172,173,174,175,176,177,178,178,179,180,181,182,183,183,184,185,186,187,188,188,189,190,191,192,193,193,194,195,196,197,198,199,199,200,201,202,203,204,204,205,206,207,208,209,209,210,211,212,213,214,215,215,216,217,218,219,220,221,221,222,223,224,225,226,227,227,228,229,230,231,232,233,233,234,235,236,237,238,239,240,241,241,242,243,244,245,246,247,248,249,250,250,251,252,253,254,255,255],r:[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,59,60,60,61,62,62,63,63,64,64,65,66,66,67,67,68,69,69,70,70,71,72,72,73,74,74,75,76,77,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,102,103,104,105,106,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,125,126,127,128,129,130,131,133,134,135,136,137,138,140,141,142,143,144,146,147,148,149,151,152,153,154,156,157,158,160,161,162,164,165,166,168,169,170,172,173,175,176,177,179,180,182,183,185,186,188,189,191,192,193,194,196,197,198,199,200,201,202,203,204,204,205,206,206,207,208,208,209,209,210,210,211,211,212,212,212,213,213,213,213,213,214,214,214,214,214,214,214,214,214,214,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,214,214,214,214,214,214,214,214,214,214,213,213,213,213,213,213,213,212,212,212,212,212],g:[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,41,41,42,42,42,42,43,43,43,43,44,44,44,44,45,45,45,45,46,46,46,47,47,48,48,48,49,49,50,50,51,52,52,53,54,54,55,56,57,58,59,60,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,155,156,157,158,160,161,162,163,164,166,167,168,169,171,172,173,174,175,176,178,179,180,181,182,183,185,186,187,188,189,190,191,192,193,195,196,197,198,199,200,201,202,203,205,206,207,208,209,210,211,212,214,215,216,217,218,220,221,222,223,225,226,227,228,230,231,232,233,235,236,237,239,240,241,242,244,245,246,247,249,250,251,252,254,255,255],b:[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,46,46,47,47,47,48,48,48,48,49,49,49,50,50,50,51,51,51,52,52,53,53,54,54,55,56,56,57,58,59,60,61,62,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,96,97,98,99,100,102,103,104,105,107,108,109,110,112,113,114,115,117,118,119,120,122,123,124,126,127,128,130,131,133,134,135,137,138,140,141,143,144,145,147,148,149,151,152,153,155,156,157,159,160,161,162,164,165,166,167,168,170,171,172,173,174,175,176,177,178,179,180,181,182,184,185,186,187,188,188,189,190,191,192,193,193,194,195,195,196,196,196,197,197,197,197,198,198,198,198,198,198,198,198,198,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,198,198,198,198,198,198,197,197,197,197,197,197,197,197,197,197,197,197,197,197,198,198,198,198,198,198,198]},brannan:{a:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,255],r:[50,50,50,50,50,50,50,50,50,50,50,50,50,51,51,51,51,51,52,53,54,55,56,57,59,60,62,63,64,66,67,68,69,70,71,71,72,73,73,74,75,75,76,76,77,77,78,78,79,79,80,80,81,81,82,83,83,84,85,86,87,88,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,118,119,120,121,122,124,125,126,128,129,130,132,133,134,136,137,139,140,141,143,144,146,147,149,150,152,153,154,156,157,159,160,162,163,164,166,167,169,170,171,173,174,175,177,178,179,181,182,183,185,186,187,189,190,192,193,195,196,198,199,201,203,204,206,207,209,210,212,213,215,216,217,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,236,237,238,239,239,240,241,241,242,243,243,244,244,245,246,246,247,247,248,248,249,249,249,250,250,251,251,251,252,252,252,253,253,253,254,254,254,254,254,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,254,254,254,254,254,254],g:[0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,2,2,2,3,4,4,5,6,7,8,10,11,12,13,14,16,17,18,19,20,21,23,24,25,26,27,28,29,30,32,33,34,35,36,38,39,40,41,43,44,45,47,48,50,51,53,54,56,57,59,61,62,64,66,68,70,72,74,76,78,80,82,84,87,89,91,93,95,97,100,102,104,106,108,110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,161,163,165,167,168,170,172,173,175,176,178,179,181,182,183,184,186,187,188,189,190,191,192,193,193,194,195,196,196,197,198,198,199,200,200,201,202,202,203,203,204,204,205,205,206,207,207,208,208,209,210,210,211,212,212,213,214,214,215,216,217,217,218,219,219,220,221,221,222,222,223,224,224,225,225,226,226,227,228,228,229,229,229,230,230,231,231,232,232,233,233,233,234,234,234,235,235,236,236,236,237,237,237,238,238,239,239,239,240,240,240,241,241,241,242,242,242,243,243,243,244,244,244,245,245,245,246,246,247,247,247,248,248,249,249,250,250,251,251,252,252,252],b:[48,48,48,48,48,48,48,48,49,49,49,49,49,49,49,50,50,50,51,51,51,52,52,53,53,54,54,54,55,55,56,56,57,57,58,58,59,60,60,61,61,62,62,63,64,64,65,66,66,67,68,68,69,70,71,71,72,73,74,75,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,132,133,134,135,136,137,138,139,140,141,141,142,143,144,145,146,146,147,148,148,149,150,151,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,178,179,180,181,181,182,183,183,184,184,185,185,185,186,186,187,187,187,188,188,188,189,189,190,190,191,191,192,193,193,194,195,195,196,197,198,199,200,200,201,202,203,204,205,206,206,207,208,209,210,211,211,212,213,214,214,215,216,216,217,218,218,219,219,220,220,221,222,222,222,223,223,224,224,224,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225]},gotham:{a:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,255],r:[50,50,50,50,50,50,50,50,50,50,50,50,50,51,51,51,51,51,52,53,54,55,56,57,59,60,62,63,64,66,67,68,69,70,71,71,72,73,73,74,75,75,76,76,77,77,78,78,79,79,80,80,81,81,82,83,83,84,85,86,87,88,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,118,119,120,121,122,124,125,126,128,129,130,132,133,134,136,137,139,140,141,143,144,146,147,149,150,152,153,154,156,157,159,160,162,163,164,166,167,169,170,171,173,174,175,177,178,179,181,182,183,185,186,187,189,190,192,193,195,196,198,199,201,203,204,206,207,209,210,212,213,215,216,217,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,236,237,238,239,239,240,241,241,242,243,243,244,244,245,246,246,247,247,248,248,249,249,249,250,250,251,251,251,252,252,252,253,253,253,254,254,254,254,254,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,254,254,254,254,254,254],g:[0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,2,2,2,3,4,4,5,6,7,8,10,11,12,13,14,16,17,18,19,20,21,23,24,25,26,27,28,29,30,32,33,34,35,36,38,39,40,41,43,44,45,47,48,50,51,53,54,56,57,59,61,62,64,66,68,70,72,74,76,78,80,82,84,87,89,91,93,95,97,100,102,104,106,108,110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,161,163,165,167,168,170,172,173,175,176,178,179,181,182,183,184,186,187,188,189,190,191,192,193,193,194,195,196,196,197,198,198,199,200,200,201,202,202,203,203,204,204,205,205,206,207,207,208,208,209,210,210,211,212,212,213,214,214,215,216,217,217,218,219,219,220,221,221,222,222,223,224,224,225,225,226,226,227,228,228,229,229,229,230,230,231,231,232,232,233,233,233,234,234,234,235,235,236,236,236,237,237,237,238,238,239,239,239,240,240,240,241,241,241,242,242,242,243,243,243,244,244,244,245,245,245,246,246,247,247,247,248,248,249,249,250,250,251,251,252,252,252],b:[48,48,48,48,48,48,48,48,49,49,49,49,49,49,49,50,50,50,51,51,51,52,52,53,53,54,54,54,55,55,56,56,57,57,58,58,59,60,60,61,61,62,62,63,64,64,65,66,66,67,68,68,69,70,71,71,72,73,74,75,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,132,133,134,135,136,137,138,139,140,141,141,142,143,144,145,146,146,147,148,148,149,150,151,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,178,179,180,181,181,182,183,183,184,184,185,185,185,186,186,187,187,187,188,188,188,189,189,190,190,191,191,192,193,193,194,195,195,196,197,198,199,200,200,201,202,203,204,205,206,206,207,208,209,210,211,211,212,213,214,214,215,216,216,217,218,218,219,219,220,220,221,222,222,222,223,223,224,224,224,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225]},hefe:{a:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,255],r:[32,32,32,32,32,32,32,32,32,32,32,32,32,33,33,33,33,33,34,35,36,38,39,41,43,45,48,50,52,54,56,58,60,62,64,65,67,69,71,73,75,77,79,81,83,85,87,89,91,93,95,96,98,100,102,104,106,108,110,112,114,116,117,119,121,123,125,126,128,130,132,133,135,137,139,140,142,144,146,147,149,151,152,154,155,157,158,160,161,163,164,166,167,168,170,171,172,173,175,176,177,178,179,180,181,182,184,185,186,187,188,189,190,190,191,192,193,194,195,196,197,197,198,199,200,201,201,202,203,204,204,205,205,206,206,207,207,208,208,209,209,210,210,211,211,212,212,213,213,214,214,215,215,216,216,217,217,218,218,219,219,220,220,221,221,221,222,222,223,223,224,224,225,225,225,226,226,227,227,228,228,228,229,229,230,230,231,231,231,232,232,233,233,233,234,234,235,235,235,236,236,236,237,237,238,238,238,239,239,239,240,240,240,241,241,242,242,242,243,243,243,244,244,245,245,245,246,246,247,248,248,249,249,250,250,251,251,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252],g:[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,19,20,21,23,24,25,27,28,30,31,33,34,36,37,39,40,42,44,45,47,49,50,52,54,56,57,59,61,63,65,67,69,71,73,75,78,80,82,85,87,89,92,94,97,99,102,104,106,109,111,114,116,118,121,123,125,127,129,131,133,135,137,139,141,143,145,146,148,150,152,154,156,157,159,161,163,164,166,168,169,171,173,174,176,178,179,181,182,184,185,187,188,190,191,192,194,195,196,197,198,199,200,201,202,203,204,205,205,206,207,207,208,209,209,210,210,211,211,211,212,212,213,213,213,214,214,215,215,216,216,216,217,217,218,218,219,219,220,220,220,221,221,222,222,222,223,223,224,224,225,225,225,226,226,227,227,228,228,228,229,229,230,230,231,231,232,232,232,233,233,234,234,235,235,236,236,237,237,238,238,239,239,239,240,240,241,241,242,242,243,244,244,245,246,246,247,248,249,249,250,250,251,251,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252],b:[2,2,3,3,3,3,3,4,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,8,8,9,9,9,10,10,11,12,12,13,13,14,15,15,16,17,17,18,19,19,20,21,22,23,24,24,25,26,27,28,29,30,32,33,34,35,36,38,39,40,42,43,45,47,48,50,52,54,56,58,60,62,64,66,68,70,72,74,76,78,80,82,84,86,87,89,91,93,95,96,98,100,101,103,105,107,108,110,112,113,115,117,118,120,122,123,125,127,128,130,131,133,135,136,138,140,141,143,145,146,148,149,151,153,154,156,158,159,161,163,164,166,167,169,170,171,173,174,175,177,178,179,180,182,183,184,185,186,187,189,190,191,192,193,194,195,195,196,197,198,198,199,200,200,201,201,202,202,203,203,204,204,204,205,205,205,206,206,206,207,207,207,207,208,208,209,209,209,210,210,211,211,211,212,212,213,213,214,214,214,215,215,216,216,216,217,217,218,218,218,219,219,220,220,220,221,221,222,222,222,223,223,224,224,225,225,226,226,227,227,227,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228]},lordkelvin:{a:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,255],r:[43,44,46,47,49,50,52,53,55,56,58,59,61,62,64,65,67,69,70,72,73,75,77,78,80,81,83,85,86,88,90,91,93,95,96,98,100,102,103,105,107,109,111,112,114,116,118,120,121,123,125,127,129,130,132,134,136,137,139,141,142,144,146,147,149,151,152,154,155,157,158,160,162,163,165,166,168,169,171,172,174,175,176,178,179,180,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,201,202,203,204,204,205,206,207,207,208,209,210,210,211,212,212,213,214,214,215,216,217,217,218,219,219,220,221,222,222,223,224,224,225,225,226,227,227,228,228,229,229,229,230,230,231,231,232,232,232,233,233,233,234,234,235,235,235,236,236,236,237,237,237,238,238,239,239,239,240,240,240,241,241,241,242,242,242,243,243,243,243,244,244,244,245,245,245,245,245,246,246,246,246,246,247,247,247,247,247,248,248,248,248,248,248,249,249,249,249,249,249,249,250,250,250,250,250,250,250,250,251,251,251,251,251,251,251,251,251,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,253,253,254,254,254,254,254],g:[36,36,36,36,36,36,36,36,36,36,36,36,36,37,37,37,37,37,37,38,38,38,39,39,40,40,41,41,42,43,43,44,45,46,47,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,155,156,157,158,158,159,160,160,161,161,162,163,163,164,164,165,165,166,166,167,167,168,168,168,169,169,170,171,171,172,172,173,173,174,174,175,175,176,177,177,178,178,179,179,180,180,181,181,182,182,182,183,183,184,184,184,185,185,185,186,186,186,186,187,187,187,187,188,188,188,188,188,189,189,189,189,189,190,190,190,190,190,190,190,191,191,191,191,191,191,191,191,192,192,192,192,192,192,192,192,193,193,193,193,193,193,193,193,194,194,194,194,194,194,194,195,195,195,195],b:[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,70,70,70,70,70,70,70,70,70,70,71,71,71,72,72,73,73,73,74,74,75,75,76,76,77,78,78,79,79,80,80,81,81,82,82,82,83,83,84,84,84,85,85,86,86,86,87,87,87,88,88,88,89,89,90,90,90,91,91,91,92,92,93,93,93,94,94,95,95,96,96,96,97,97,98,99,99,100,100,101,101,102,102,102,103,103,103,104,104,104,105,105,105,106,106,106,106,107,107,107,107,108,108,108,108,109,109,109,110,110,110,111,111,111,111,112,112,112,113,113,113,114,114,114,115,115,115,115,116,116,116,116,117,117,117,117,117,118,118,118,118,118,118,119,119,119,119,119,119,119,120,120,120,120,120,120,120,120,120,121,121,121,121,121,121,121,121,121,121,121,122,122,122,122,122,122,122,122,122,122,122,122,123,123,123,123,123,123,123,123,123,123,123,124,124,124,124,124,124]},nashville:{a:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,255],r:[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,57,57,58,58,59,59,60,61,62,63,64,65,66,67,68,69,71,72,73,75,76,78,79,81,82,84,85,87,88,90,91,93,95,96,98,100,102,104,106,108,110,113,115,117,120,122,124,127,129,131,133,136,138,140,142,144,146,148,150,152,154,155,157,159,160,162,164,165,167,168,170,171,173,174,175,177,178,179,181,182,183,185,186,187,189,190,191,192,194,195,196,197,198,200,201,202,203,204,205,206,208,209,209,210,211,212,213,214,215,216,217,217,218,219,220,220,221,222,223,223,224,225,226,226,227,228,228,229,230,230,231,231,232,233,233,234,234,235,235,236,237,237,238,238,239,239,240,240,240,241,241,242,242,243,243,243,244,244,245,245,245,246,246,246,247,247,247,248,248,248,248,249,249,249,249,250,250,250,250,251,251,251,251,251,252,252,252,252,252,253,253,253,253,253,254,254,254,254,254,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255],g:[38,39,39,40,41,41,42,42,43,44,44,45,46,46,47,48,49,50,51,52,53,55,56,57,59,60,61,63,64,65,67,68,69,71,72,73,74,76,77,78,80,81,82,84,85,86,87,89,90,91,93,94,95,97,98,99,101,102,103,104,106,107,108,110,111,112,114,115,116,118,119,121,122,123,125,126,128,129,130,132,133,134,136,137,138,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,158,159,160,161,162,163,163,164,165,166,166,167,168,169,169,170,171,172,172,173,174,175,176,176,177,178,179,180,181,181,182,183,184,185,186,187,187,188,189,189,190,191,191,192,193,193,194,194,195,195,196,197,197,198,198,199,199,200,200,201,201,202,202,202,203,203,204,204,205,205,205,206,206,207,207,207,208,208,208,209,209,209,210,210,210,211,211,211,212,212,212,213,213,213,213,214,214,214,214,215,215,215,215,216,216,216,216,216,217,217,217,217,217,218,218,218,218,218,218,219,219,219,219,219,220,220,220,220,220,220,220,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221],b:[97,98,98,99,99,100,100,101,101,102,102,103,104,104,105,105,106,107,107,108,109,110,110,111,112,113,114,114,115,116,116,117,118,118,119,119,120,120,121,121,122,122,123,123,124,124,124,125,125,126,126,127,127,127,128,128,129,129,129,130,130,131,131,132,132,132,133,133,134,134,135,135,136,136,136,137,137,138,138,139,139,139,140,140,141,141,142,142,142,143,143,144,144,144,145,145,146,146,147,147,147,148,148,149,149,150,150,151,151,151,152,152,153,153,154,154,154,155,155,155,156,156,156,157,157,157,158,158,158,158,158,158,159,159,159,159,159,159,159,159,159,159,159,160,160,160,160,160,161,161,161,162,162,162,162,163,163,163,163,164,164,164,164,165,165,165,165,165,165,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,167,167,167,167,167,167,167,167,167,168,168,168,168,168,168,169,169,169,169,169,170,170,170,170,171,171,171,171,171,172,172,172,172,172,173,173,173,173,173,173,173,174,174,174,174,174,174,174,174,175,175,175,175,175,175,175,175,175,175,175,176,176,176,176,176,176,176,176,176,176]},xproii:{a:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,255],r:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,3,3,4,4,5,5,5,6,7,7,8,8,9,9,10,11,11,12,13,14,14,15,16,17,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,37,38,39,41,42,43,45,46,48,49,51,52,54,55,57,58,60,62,63,65,67,68,70,72,74,76,77,79,81,83,85,87,89,91,93,95,97,99,101,103,105,106,108,110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,141,143,145,147,149,151,153,155,157,159,161,163,165,167,169,171,172,174,176,178,180,182,184,186,188,189,191,193,194,196,198,199,201,202,204,205,207,208,209,211,212,214,215,216,217,219,220,221,222,223,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,239,240,241,242,243,243,244,245,246,246,247,248,248,249,249,250,250,251,251,252,252,252,253,253,253,253,253,253,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,255,255,255,255,255,255,255,255],g:[0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,3,3,3,4,4,4,5,5,5,6,6,7,7,8,8,9,10,10,11,12,12,13,14,14,15,16,17,18,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,39,40,41,43,44,45,47,48,50,51,53,54,56,57,59,61,62,64,66,67,69,71,73,75,76,78,80,82,84,86,88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,161,163,165,167,169,171,173,175,176,178,180,182,183,185,187,189,190,192,193,195,197,198,200,201,203,204,206,207,209,210,211,213,214,216,217,218,219,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,237,237,238,239,240,240,241,242,243,243,244,244,245,246,246,247,247,248,248,249,249,250,250,250,251,251,252,252,252,253,253,253,253,253,253,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,255,255,255,255,255,255,255,255,255,255],b:[24,25,26,27,28,28,29,30,31,32,33,34,35,35,36,37,38,39,40,41,41,42,43,44,45,45,46,47,48,49,49,50,51,52,53,53,54,55,56,56,57,58,59,59,60,61,62,62,63,64,64,65,66,67,67,68,69,70,70,71,72,73,73,74,75,76,77,77,78,79,80,81,81,82,83,84,85,86,86,87,88,89,90,91,91,92,93,94,95,96,96,97,98,99,100,101,101,102,103,104,105,106,107,107,108,109,110,111,112,113,114,114,115,116,117,118,119,119,120,121,122,123,124,124,125,126,127,127,128,129,129,130,130,131,131,132,132,133,134,134,135,136,137,138,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,162,163,164,165,165,166,167,168,168,169,170,171,171,172,173,173,174,175,176,176,177,178,178,179,180,181,182,182,183,184,185,185,186,187,188,189,189,190,191,192,193,193,194,195,196,197,197,198,199,200,200,201,202,203,204,204,205,206,206,207,208,208,209,210,210,211,212,212,213,214,215,215,216,217,218,218,219,220,221,221,222,223,224,225,226,226,227,228,229]},newkelvin:{a:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],b:[0,1,1,2,2,3,3,4,5,5,6,6,7,7,8,9,9,10,10,11,11,12,13,13,14,14,15,15,16,17,17,18,18,19,20,20,21,21,22,23,23,24,24,25,26,26,27,27,28,29,29,30,30,31,32,32,33,34,34,35,36,36,37,37,38,39,39,40,41,41,42,43,43,44,45,45,46,47,47,48,49,50,50,51,52,52,53,54,55,55,56,57,57,58,59,60,60,61,62,63,63,64,65,66,67,67,68,69,70,71,71,72,73,74,75,75,76,77,78,79,80,81,81,82,83,84,85,86,87,88,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,127,128,129,130,131,133,134,135,136,138,139,140,142,143,144,146,147,148,150,151,152,154,155,156,158,159,160,162,163,165,166,168,169,170,172,173,175,176,178,179,181,182,183,185,186,188,189,191,192,194,195,197,199,200,202,203,205,206,208,209,211,212,214,215,217,219,220,222,223,225,226,228,230,231,233,234,236,237,239,241,242,244,245,247,249,250,252,253,255],g:[0,1,2,3,4,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,184,185,186,187,188,189,190,191,192,193,194,195,196,197,197,198,199,200,201,202,203,204,205,206,207,208,209,209,210,211,212,213,214,215,216,217,218,219,220,220,221,222,223,224,225,226,227,228,229,230,230,231,232,233,234,235,236,237,238,239,240,240,241,242,243,244,245,246,247,248,249,250,250,251,252,253,254,255],r:[0,2,3,5,6,8,9,11,12,14,15,17,18,20,21,23,24,26,27,29,30,32,33,35,36,38,40,41,43,44,46,47,49,50,52,53,55,56,58,59,61,62,64,65,67,68,70,71,73,74,75,77,78,80,81,83,84,86,87,89,90,92,93,95,96,97,99,100,102,103,105,106,108,109,110,112,113,115,116,118,119,120,122,123,125,126,127,129,130,132,133,134,136,137,139,140,141,143,144,145,147,148,149,151,152,153,155,156,157,159,160,161,163,164,165,167,168,169,171,172,173,174,176,177,178,179,181,182,183,185,186,187,188,189,191,192,193,194,196,197,198,199,200,201,203,204,205,206,207,208,210,211,212,213,214,215,216,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,238,239,240,241,242,243,244,244,245,246,247,247,248,249,249,250,250,251,252,252,253,253,253,254,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255]}},t.getComponent=function(){var e;return(e=new r.Component).description="Get a preset for a RGBA adjustment curve.",e.icon="file-image-o",e.inPorts.add("presetname",{datatype:"string"}),e.outPorts.add("curve",{datatype:"object"}),e.outPorts.add("error",{datatype:"object"}),e.forwardBrackets={presetname:["curve"]},e.process((function(e,t){var n;e.hasData("presetname")&&(n=e.getData("presetname"),o[n]?t.sendDone({curve:o[n]}):t.done(new Error("Preset '".concat(n,"' not available"))))}))}},93863:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="Convert image to canvas.",e.icon="file-image-o",e.inPorts.add("image",{datatype:"object"}),e.outPorts.add("canvas",{datatype:"object"}),e.forwardBrackets={image:["canvas"]},e.process((function(e,t){var o,a;e.hasData("image")&&(a=e.getData("image"),r.isBrowser()?((o=document.createElement("canvas")).width=a.width,o.height=a.height):o=new(0,n(45801).canvas)(a.width,a.height),o.getContext("2d").drawImage(a,0,0),t.sendDone({canvas:o}))}))}},48971:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="Load image from URL and get dimensions",e.icon="picture-o",e.inPorts.add("url",{datatype:"string",description:"URL to load image"}),e.outPorts.add("dimensions",{datatype:"object",description:"Image dimensions"}),e.outPorts.add("error",{datatype:"object"}),r.helpers.WirePattern(e,{in:"url",out:"dimensions",forwardGroups:!0,async:!0},(function(e,t,n,r){var o;(o=new Image).onload=function(){var t;if((null==o.naturalWidth||0!==o.naturalWidth)&&0!==o.width)return t={width:o.width,height:o.height},n.beginGroup(e),n.send(t),n.endGroup(),r();o.onerror(new Error("".concat(e," didn't come back as a valid image.")))},o.onerror=function(t){return t.url=e,r(t)},o.src=e}))}},79709:(e,t,n)=>{"use strict";var r,o,a,i,s,c,u,l,d,p;u=n(76445),l=n(80569),r=n(54998),o=function(e){var t;return(t=e.match(/_(.)\.(gif|png|jpg)/))?"d"===t[1]?e.replace(/_(.)\.(gif|png|jpg)/,".$2"):"o"===t[1]?e:e.replace(/_(.)\.(gif|png|jpg)/,"_b.$2"):e.replace(/\.(gif|png|jpg)/,"_b.$1")},c=function(e){return e.replace(/\?w=[\d]+/,"")},s=function(e){return e.match(/\/commons\/thumb\//)?e.replace(/\/commons\/(thumb)\/([0-9])\/([0-9][a-z])\/(.*)[\\\/][^\\\/]*/,"/commons/$2/$3/$4"):e},i=function(e){var t;return e.match(/\/graph\//)&&(null!=(t=r(e).search(!0))?t.input:void 0)?t.input:e},a=function(e){var t,n,o;return e.match(/\/avatar\//)?(t="512",n=r.parse(e),null!=(o=r.parseQuery(n.query)).s&&(o.s=t),null!=o.size&&(o.size=t),null==(null!=o.s||o.size)&&(o.size=t),n.query=r.buildQuery(o),r.build(n)):e},d=function(e){return e.replace(/[-_](small|thumbnail|thumb|tm)/,"")},p=function(e,t){return-1!==e.indexOf("staticflickr.com")&&-1!==t.indexOf("photo_unavailable")?e:t},t.getComponent=function(){var e;return(e=new u.Component).description="Convert an image URL to potential URL of full-scale image",e.inPorts.add("url",{datatype:"string"}),e.outPorts.add("url",{datatype:"string"}),e.outPorts.add("error",{datatype:"object"}),u.helpers.WirePattern(e,{in:"url",out:"url",async:!0,forwardGroups:!0},(function(e,t,n,r){var u;return u=e,e?"string"!=typeof e?r(new Error("URL is not a string")):(-1!==e.indexOf("staticflickr.com")&&(u=o(e)),-1!==e.indexOf("wordpress.com")&&(u=c(e)),-1!==e.indexOf("wikimedia.org")&&(u=s(e)),-1!==e.indexOf("imgflo")&&(u=i(e)),-1!==e.indexOf("gravatar.com")&&(u=a(e)),e.match(/[-_](small|thumb)/)&&(u=d(e)),void(u!==e?l.head(u).redirects(1).timeout(15e3).end((function(t,o){var a;return o&&200===o.statusCode?((null!=(a=o.redirects)?a.length:void 0)>0&&(u=p(e,o.redirects[0])),n.send(u),r()):(n.send(e),void r())})):(n.send(e),r()))):r(new Error("No image source provided"))}))}},14001:(e,t,n)=>{"use strict";var r,o;(r=n(76445)).isBrowser()&&(o=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(e,t){return window.setTimeout((function(){return e(+new Date)}),1e3/60)}),t.getComponent=function(){var e;return(e=new r.Component).description="Convert video to canvas.",e.icon="file-image-o",e.inPorts.add("video",{description:"video element to draw to canvas",datatype:"object",required:!0}),e.inPorts.add("canvas",{description:"(optional) if not hit, component will create canvas",datatype:"object",required:!1}),e.outPorts.add("canvas",{description:"will send canvas with each video frame drawn",datatype:"object"}),e.outPorts.add("error",{datatype:"object"}),e.forwardBrackets={video:["canvas"]},e.process((function(e,t){var a,i,s,c,u,l;if(e.hasData("video")&&(!e.attached("canvas").length||e.hasData("canvas")))if("VIDEO"===(null!=(l=e.getData("video"))?l.tagName:void 0)){if(e.hasData("canvas"))i=e.getData("canvas");else{if(!l.videoWidth)return void t.done("Video width not available");r.isBrowser()?((i=document.createElement("canvas")).width=l.videoWidth,i.height=l.videoHeight):(a=n(45801).canvas,i=new a(l.videoWidth,l.videoHeight))}s=i.getContext("2d"),u=-1,(c=function(){if(u!==l.currentTime)if(l.currentTime<u)t.done();else{if(l.currentTime!==l.duration)return u=l.currentTime,s.drawImage(l,0,0),t.send({canvas:i}),o(c);t.done()}else o(c)})()}else t.done(new Error("Video must be a VIDEO DOM element"))}))}},39221:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="Abort an IndexedDB transaction",e.inPorts.add("transaction",{datatype:"object"}),e.outPorts.add("transaction",{datatype:"object"}),e.outPorts.add("error",{datatype:"object"}),e.forwardBrackets={transaction:["transaction","error"]},e.process((function(e,t){var n;if(e.hasData("transaction"))return(n=e.getData("transaction")).onerror=function(e){return t.done(e)},n.onabort=function(e){return t.sendDone({transaction:n})},n.abort()}))}},24269:(e,t,n)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var o;o=n(76445),t.getComponent=function(){var e;return(e=new o.Component).description="Start an IndexedDB transaction",e.inPorts.add("stores",{datatype:"string"}),e.inPorts.add("db",{datatype:"object"}),e.inPorts.add("mode",{datatype:"string",default:"readwrite",control:!0}),e.outPorts.add("transaction",{datatype:"object"}),e.outPorts.add("db",{datatype:"object"}),e.outPorts.add("error",{datatype:"object"}),e.outPorts.add("complete",{datatype:"bang"}),e.forwardBrackets={stores:["transaction","db","error","complete"]},e.process((function(e,t){var n,o,a,i,s,c,u;if(e.hasData("db","stores")){a=e.hasData("mode")?e.getData("mode"):"readwrite";var l=(c=e.getData("db","stores"),u=2,function(e){if(Array.isArray(e))return e}(c)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(c,u)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(c,u)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());n=l[0],"string"==typeof(i=l[1])&&(i=i.split(","));try{s=n.transaction(i,a)}catch(e){return o=e,t.done(o)}return s.oncomplete=function(){return t.send({complete:!0}),s.onerror=null,s.oncomplete=null,t.done()},s.onerror=function(e){return t.done(e)},t.send({transaction:s}),t.send({db:n})}}))}},2347:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="Close an IndexedDB database",e.inPorts.add("db",{datatype:"object"}),e.outPorts.add("closed",{datatype:"bang"}),e.forwardBrackets={db:["closed"]},e.process((function(e,t){var n;if(e.hasData("db"))return(n=e.getData("db")).onclose=function(){return t.sendDone({closed:!0})},n.close()}))}},91094:(e,t,n)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var o;o=n(76445),t.getComponent=function(){var e;return(e=new o.Component).description="Add an index to an IndexedDB database",e.inPorts.add("store",{datatype:"object"}),e.inPorts.add("name",{datatype:"string"}),e.inPorts.add("keypath",{datatype:"string"}),e.inPorts.add("unique",{datatype:"boolean",control:!0,default:!1}),e.inPorts.add("multientry",{datatype:"boolean",control:!0,default:!1}),e.outPorts.add("index",{datatype:"object"}),e.outPorts.add("store",{datatype:"object"}),e.outPorts.add("error",{datatype:"object"}),e.forwardBrackets={name:["index","store","error"]},e.process((function(e,t){var n,o,a,i,s,c,u,l;if(e.hasData("store","name","keypath")){c=!!e.hasData("unique")&&e.getData("unique"),a=!!e.hasData("multientry")&&e.getData("multientry");var d=(u=e.getData("store","name","keypath"),l=3,function(e){if(Array.isArray(e))return e}(u)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(u,l)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(u,l)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());return s=d[0],i=d[1],o=d[2],s.onerror=function(e){return t.done(e)},n=s.createIndex(i,o,{unique:c,multiEntry:a}),s.onerror=null,t.sendDone({index:n,store:s})}}))}},966:(e,t,n)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var o;o=n(76445),t.getComponent=function(){var e;return(e=new o.Component).description="Add an object store to an IndexedDB database",e.inPorts.add("name",{datatype:"string"}),e.inPorts.add("db",{datatype:"object"}),e.inPorts.add("keypath",{datatype:"string",control:!0}),e.inPorts.add("autoincrement",{datatype:"boolean",control:!0,default:!1}),e.outPorts.add("store",{datatype:"object"}),e.outPorts.add("db",{datatype:"object"}),e.outPorts.add("error",{datatype:"object"}),e.forwardBrackets={name:["store","error"]},e.process((function(e,t){var n,o,a,i,s,c,u;if(e.hasData("name","db")){a=e.hasData("keypath")?e.getData("keypath"):"",n=!!e.hasData("autoincrement")&&e.getData("autoincrement");var l=(c=e.getData("name","db"),u=2,function(e){if(Array.isArray(e))return e}(c)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(c,u)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(c,u)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());return i=l[0],(o=l[1]).transaction.onerror=function(e){return t.done(e)},s=o.createObjectStore(i,{keyPath:a,autoIncrement:n}),o.transaction.onerror=null,t.send({store:s,db:o}),t.done()}}))}},63985:(e,t,n)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var o;o=n(76445),t.getComponent=function(){var e;return(e=new o.Component).description="Remove an item from an IndexedDB database",e.icon="trash",e.inPorts.add("store",{datatype:"object"}),e.inPorts.add("key",{datatype:"string"}),e.outPorts.add("store",{datatype:"object"}),e.outPorts.add("key",{datatype:"string"}),e.outPorts.add("error",{datatype:"object"}),e.forwardBrackets={key:["key","error"]},e.process((function(e,t){var n,o,a,i,s;if(e.hasData("store","key")){var c=(i=e.getData("store","key"),s=2,function(e){if(Array.isArray(e))return e}(i)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(i,s)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(i,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());return a=c[0],n=c[1],(o=a.delete(n)).onerror=function(e){return t.done(e)},o.onsuccess=function(e){return t.send({store:a,key:n}),t.done()}}}))}},20998:(e,t,n)=>{"use strict";var r,o;o=n(76445),r=n(52775),t.getComponent=function(){var e;return(e=new o.Component).description="Delete an IndexedDB database",e.icon="trash",e.inPorts.add("name",{datatype:"string"}),e.outPorts.add("deleted",{datatype:"bang"}),e.outPorts.add("error",{datatype:"object"}),e.forwardBrackets={name:["deleted","error"]},e.process((function(e,t){var n,o;if(e.hasData("name"))return n=e.getData("name"),(o=r.deleteDatabase(n)).onerror=function(e){return t.done(e)},o.onsuccess=function(){return t.sendDone({deleted:!0})}}))}},67573:(e,t,n)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var o;o=n(76445),t.getComponent=function(){var e;return(e=new o.Component).description="Delete an object store from an IndexedDB database",e.icon="trash",e.inPorts.add("name",{datatype:"string"}),e.inPorts.add("db",{datatype:"object"}),e.outPorts.add("deleted",{datatype:"string"}),e.outPorts.add("db",{datatype:"object"}),e.outPorts.add("error",{datatype:"object"}),e.forwardBrackets={name:["deleted","error"]},e.process((function(e,t){var n,o,a,i;if(e.hasData("name","db")){var s=(a=e.getData("name","db"),i=2,function(e){if(Array.isArray(e))return e}(a)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(a,i)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(a,i)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());return o=s[0],(n=s[1]).transaction.onerror=function(e){return t.done(e)},n.deleteObjectStore(o),n.transaction.onerror=null,t.sendDone({deleted:o,db:n})}}))}},2156:(e,t,n)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var o;o=n(76445),t.getComponent=function(){var e;return(e=new o.Component).description="Get an entry from an IndexedDB database",e.inPorts.add("store",{datatype:"object"}),e.inPorts.add("key",{datatype:"string"}),e.outPorts.add("store",{datatype:"object"}),e.outPorts.add("item",{datatype:"all"}),e.outPorts.add("error",{datatype:"object"}),e.forwardBrackets={key:["item","error"]},e.process((function(e,t){var n,o,a,i,s;if(e.hasData("store","key")){var c=(i=e.getData("store","key"),s=2,function(e){if(Array.isArray(e))return e}(i)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(i,s)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(i,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());return a=c[0],n=c[1],o=a.get(n),t.send({store:a}),o.onerror=function(e){return t.done(e)},o.onsuccess=function(e){return t.sendDone({item:e.target.result})}}}))}},76538:(e,t,n)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var o;o=n(76445),t.getComponent=function(){var e;return(e=new o.Component).description="Get an index from an IndexedDB database",e.inPorts.add("store",{datatype:"object"}),e.inPorts.add("name",{datatype:"string"}),e.outPorts.add("index",{datatype:"object"}),e.outPorts.add("error",{datatype:"object"}),e.forwardBrackets={name:["index","error"]},e.process((function(e,t){var n,o,a,i,s;if(e.hasData("store","name")){var c=(i=e.getData("store","name"),s=2,function(e){if(Array.isArray(e))return e}(i)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(i,s)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(i,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());return a=c[0],o=c[1],a.onerror=function(e){return t.done(e)},n=a.index(o),a.onerror=null,t.sendDone({index:n})}}))}},68071:(e,t,n)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var o;o=n(76445),t.getComponent=function(){var e;return(e=new o.Component).description="Get an object store from an IndexedDB database",e.inPorts.add("name",{datatype:"string"}),e.inPorts.add("transaction",{datatype:"object"}),e.outPorts.add("store",{datatype:"object"}),e.outPorts.add("transaction",{datatype:"object"}),e.outPorts.add("error",{datatype:"object"}),e.forwardBrackets={name:["store","error"]},e.process((function(e,t){var n,o,a,i,s;if(e.hasData("name","transaction")){var c=(i=e.getData("name","transaction"),s=2,function(e){if(Array.isArray(e))return e}(i)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(i,s)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(i,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());return n=c[0],(a=c[1]).onerror=function(e){return t.done(e)},o=a.objectStore(n),a.onerror=null,t.sendDone({store:o,transaction:a})}}))}},64848:(e,t,n)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var o,a;a=n(76445),o=n(52775),t.getComponent=function(){var e;return(e=new a.Component).description="Open an IndexedDB database",e.inPorts.add("name",{datatype:"string"}),e.inPorts.add("version",{datatype:"integer"}),e.outPorts.add("upgrade",{datatype:"object"}),e.outPorts.add("db",{datatype:"object"}),e.outPorts.add("error",{datatype:"object"}),e.forwardBrackets={name:["db","error"]},e.process((function(e,t){var n,a,i,s,c;if(e.hasData("name","version")){var u=(s=e.getData("name","version"),c=2,function(e){if(Array.isArray(e))return e}(s)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(s,c)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(s,c)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());return n=u[0],i=u[1],(a=o.open(n,parseInt(i))).onerror=function(e){return t.done(e)},a.onupgradeneeded=function(e){return t.send({upgrade:{oldVersion:e.oldVersion,newVersion:parseInt(i),db:e.target.result}})},a.onsuccess=function(e){return t.sendDone({db:e.target.result})}}}))}},6405:(e,t,n)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var o;o=n(76445),t.getComponent=function(){var e;return(e=new o.Component).description="Store an object into an IndexedDB store",e.inPorts.add("store",{datatype:"object"}),e.inPorts.add("value",{datatype:"all"}),e.outPorts.add("store",{datatype:"object"}),e.outPorts.add("key",{datatype:"string"}),e.outPorts.add("value",{datatype:"all"}),e.outPorts.add("error",{datatype:"object"}),e.forwardBrackets={value:["key","value","error"]},e.process((function(e,t){var n,o,a,i,s;if(e.hasData("store","value")){var c=(i=e.getData("store","value"),s=2,function(e){if(Array.isArray(e))return e}(i)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(i,s)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(i,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());return o=c[0],a=c[1],n=o.put(a),t.send({store:o}),n.onerror=function(e){return t.done(e)},n.onsuccess=function(e){return t.sendDone({key:e.target.result,value:a})}}}))}},6109:(e,t,n)=>{"use strict";function r(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(e,t)||function(e,t){if(e){if("string"==typeof e)return o(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?o(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var a;a=n(76445),t.getComponent=function(){var e;return(e=new a.Component).icon="search",e.description="Query a store in an IndexedDB database",e.inPorts.add("store",{datatype:"object"}),e.inPorts.add("range",{datatype:"object"}),e.inPorts.add("all",{datatype:"bang"}),e.outPorts.add("item",{datatype:"all"}),e.outPorts.add("range",{datatype:"object"}),e.outPorts.add("empty",{datatype:"object"}),e.outPorts.add("error",{datatype:"object"}),e.forwardBrackets={all:["item","error"],range:["item","error"]},e.process((function(e,t){var n,o,i,s,c;if(e.hasData("store")){if(n=!1,s=function(e){var r;return(r=e.target.result)?(n||(t.send({item:new a.IP("openBracket")}),n=!0),t.send({item:r.value}),r.continue()):(n?t.send({item:new a.IP("closeBracket")}):t.send({empty:!0}),void t.done())},e.hasData("all")){var u=r(e.getData("store","all"),2);return c=u[0],u[1],(i=c.openCursor()).onerror=function(e){return t.done(e)},void(i.onsuccess=s)}if(e.hasData("range")){var l=r(e.getData("store","range"),2);return c=l[0],o=l[1],t.send({range:o}),(i=c.openCursor(o)).onerror=function(e){return t.done(e)},i.onsuccess=s}}}))}},56112:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).icon="search",e.description="Query starting from a key in store in an IndexedDB database",e.inPorts.add("value",{datatype:"all"}),e.inPorts.add("including",{datatype:"boolean",control:!0,default:!1}),e.outPorts.add("range",{datatype:"object"}),e.forwardBrackets={value:["range"]},e.process((function(e,t){var n,r,o;if(e.hasData("value"))return o=e.getData("value"),n=!!e.hasData("including")&&e.getData("including"),r=IDBKeyRange.lowerBound(o,n),t.sendDone({range:r})}))}},86996:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).icon="search",e.description="Query only a key in store in an IndexedDB database",e.inPorts.add("value",{datatype:"all"}),e.outPorts.add("range",{datatype:"object"}),e.forwardBrackets={value:["range"]},e.process((function(e,t){var n,r;if(e.hasData("value"))return r=e.getData("value"),n=IDBKeyRange.only(r),t.sendDone({range:n})}))}},20208:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).icon="search",e.description="Query up to a key in store in an IndexedDB database",e.inPorts.add("value",{datatype:"all"}),e.inPorts.add("including",{datatype:"boolean",control:!0,default:!1}),e.outPorts.add("range",{datatype:"object"}),e.forwardBrackets={value:["range"]},e.process((function(e,t){var n,r,o;if(e.hasData("value"))return o=e.getData("value"),n=!!e.hasData("including")&&e.getData("including"),r=IDBKeyRange.upperBound(o,n),t.sendDone({range:r})}))}},96063:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).icon="code-fork",e.description="Route upgrades between IndexeDB database versions",e.inPorts.add("upgrade",{datatype:"object"}),e.outPorts.add("versions",{datatype:"object",addressable:!0}),e.outPorts.add("missed",{datatype:"object"}),e.forwardBrackets={upgrade:["versions","missed"]},e.process((function(t,n){var o,a,i;if(t.hasData("upgrade")){for(i=t.getData("upgrade"),a=!1,o=0;o<i.newVersion;)o<i.oldVersion?o++:e.outPorts.versions.isAttached(o)?(n.send({versions:new r.IP("data",i.db,{index:o})}),o++):(o++,a=!0);return a?n.sendDone({missed:i.db}):n.done()}}))}},46562:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).icon="i-cursor",e.description="focus element",e.inPorts.add("element",{datatype:"object",description:"element to be focused",control:!0}),e.inPorts.add("trigger",{datatype:"bang",description:"trigger focus"}),e.outPorts.add("out",{datatype:"bang"}),e.process((function(e,t){var n;if(e.hasData("element","trigger"))return n=e.getData("element"),e.getData("trigger"),window.setTimeout((function(){return n.focus(),t.sendDone({out:!0})}),0)}))}},40525:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="Listen to changes on an input element",e.icon="hourglass",e.inPorts.add("element",{datatype:"object"}),e.outPorts.add("value",{datatype:"object"}),e.elements=[],e.tearDown=function(t){var n,r,o,a;for(r=0,o=(a=e.elements).length;r<o;r++)(n=a[r]).el.removeEventListener("change",n.listener,!1),n.ctx.deactivate();return e.elements=[],t()},e.forwardBrackets={},e.process((function(t,n,r){var o;t.hasData("element")&&((o={el:t.getData("element"),listener:function(e){return e.preventDefault(),e.stopPropagation(),n.send({value:e.target.value})},ctx:r}).el.addEventListener("change",o.listener,!1),e.elements.push(o))}))}},53892:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="Listen to drag events on a DOM element",e.icon="arrows",e.inPorts.add("element",{datatype:"object"}),e.outPorts.add("start",{datatype:"object"}),e.outPorts.add("movey",{datatype:"number"}),e.outPorts.add("movex",{datatype:"number"}),e.outPorts.add("end",{datatype:"object"}),e.elements=[],e.tearDown=function(t){var n,r,o,a;for(r=0,o=(a=e.elements).length;r<o;r++)(n=a[r]).el.removeEventListener("dragstart",n.dragstart,!1),n.el.removeEventListener("drag",n.dragmove,!1),n.el.removeEventListener("dragend",n.dragend,!1),n.ctx.deactivate();return e.elements=[],t()},e.forwardBrackets={},e.process((function(t,n,r){var o;t.hasData("element")&&((o={el:t.getData("element"),dragstart:function(e){return e.stopPropagation(),n.send({start:e})},dragmove:function(e){return e.preventDefault(),e.stopPropagation(),n.send({movex:e.clientX,movey:e.clientY})},dragend:function(e){return e.preventDefault(),e.stopPropagation(),n.send({end:e})},ctx:r}).el.addEventListener("dragstart",o.dragstart,!1),o.el.addEventListener("drag",o.dragmove,!1),o.el.addEventListener("dragend",o.dragend,!1),e.elements.push(o))}))}},31823:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).icon="rss",e.description="Listen to custom events on a DOM element",e.inPorts.add("element",{datatype:"object"}),e.inPorts.add("event",{datatype:"string"}),e.outPorts.add("out",{datatype:"object"}),e.elements=[],e.tearDown=function(t){var n,r,o,a;for(r=0,o=(a=e.elements).length;r<o;r++)(n=a[r]).el.removeEventListener(n.eventName,n.onEvent,!1),n.ctx.deactivate();return e.elements=[],t()},e.forwardBrackets={},e.process((function(t,n,r){var o,a;t.hasData("element","event")&&((o={el:t.getData("element"),eventName:a=t.getData("event"),onEvent:function(e){return e.preventDefault(),e.stopPropagation(),e.eventName=a,n.send({out:e})},ctx:r}).el.addEventListener(a,o.onEvent,!1),e.elements.push(o))}))}},82871:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e,t;return(e=new r.Component).description="Listen for hash changes in browser's URL bar",e.icon="slack",e.inPorts.add("start",{datatype:"bang",description:"Start listening for hash changes"}),e.inPorts.add("stop",{datatype:"bang",description:"Stop listening for hash changes"}),e.outPorts.add("initial",{datatype:"string"}),e.outPorts.add("change",{datatype:"string"}),e.current=null,e.subscriber=null,t=function(){if(e.subscriber)return window.removeEventListener("hashchange",e.subscriber.callback,!1),e.subscriber.ctx.deactivate(),e.subscriber=null},e.tearDown=function(n){return e.current=null,t(),n()},e.forwardBrackets={},e.process((function(n,o,a){var i;if(n.hasData("start"))return n.getData("start"),t(),i=function(t){var n,a;if(n=e.current,e.current=window.location.href.split("#")[1]||"",n&&o.send({change:new r.IP("openBracket",n)}),(a={})[t]=e.current,o.send(a),n)return o.send({change:new r.IP("closeBracket",n)})},e.subscriber={callback:function(e){return i("change")},ctx:a},i("initial"),void window.addEventListener("hashchange",e.subscriber.callback,!1);n.hasData("stop")&&(n.getData("stop"),t(),o.done())}))}},96322:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="Listen for key presses on a given DOM element",e.icon="keyboard-o",e.inPorts.add("element",{datatype:"object"}),e.inPorts.add("stop",{datatype:"object"}),e.outPorts.add("keypress",{datatype:"integer"}),e.elements=[],e.tearDown=function(t){var n,r,o,a;for(r=0,o=(a=e.elements).length;r<o;r++)n=a[r],unsubscribe(n);return e.elements=[],t()},e.forwardBrackets={},e.process((function(t,n,r){var o,a,i,s,c,u,l;if(t.hasData("element"))return(a={el:t.getData("element"),listener:function(e){return n.send({keypress:e.keyCode})},ctx:r}).el.addEventListener("keypress",a.listener,!1),void e.elements.push(a);if(t.hasData("stop")){for(s=t.getData("stop"),o=null,c=0,u=(l=e.elements).length;c<u;c++)(i=l[c]).el===s&&(o=i);if(!o)return;return unsubscribe(o),n.done()}}))}},69333:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e,t;return(e=new r.Component).description="Listen for keyboard shortcuts and route them",e.icon="keyboard-o",e.inPorts.add("keys",{datatype:"array"}),e.inPorts.add("ignoreinput",{datatype:"boolean",default:!0,control:!0}),e.inPorts.add("stop",{datatype:"bang"}),e.outPorts.add("shortcut",{datatype:"bang",addressable:!0}),e.outPorts.add("missed",{datatype:"integer"}),e.subscriber=null,t=function(){if(e.subscriber)return document.removeEventListener("keydown",e.subscriber.callback,!1),e.subscriber.ctx.deactivate(),e.subscriber=null},e.tearDown=function(e){return t(),e()},e.forwardBrackets={},e.process((function(n,o,a){var i,s,c,u,l;if(n.hasData("keys")){for(u=n.getData("keys"),t(),"string"==typeof u&&(u=u.split(",")),c=i=0,l=u.length;i<l;c=++i)switch(u[c]){case"-":u[c]=189;break;case"=":u[c]=187;break;case"0":u[c]=48;break;case"a":u[c]=65;break;case"x":u[c]=88;break;case"c":u[c]=67;break;case"v":u[c]=86;break;case"z":u[c]=90;break;case"r":u[c]=82}return s=!n.hasData("ignoreinput")||n.getData("ignoreinput"),e.subscriber={callback:function(e){var t;if((e.ctrlKey||e.metaKey)&&!("TEXTAREA"===e.target.tagName&&s||"INPUT"===e.target.tagName&&s||"true"===String(e.target.contentEditable)&&s)){if(-1!==(t=u.indexOf(e.keyCode)))return e.preventDefault(),e.stopPropagation(),o.send({shortcut:new r.IP("data",e.keyCode,{index:t})});o.send({missed:e.keyCode})}},ctx:a},void document.addEventListener("keydown",e.subscriber.callback,!1)}n.hasData("stop")&&(n.getData("stop"),t(),o.done())}))}},75075:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).icon="mouse-pointer",e.description="Listen to mouse events on a DOM element",e.inPorts.add("element",{datatype:"object"}),e.outPorts.add("click",{datatype:"object"}),e.outPorts.add("dblclick",{datatype:"object"}),e.elements=[],e.tearDown=function(t){var n,r,o,a;for(r=0,o=(a=e.elements).length;r<o;r++)(n=a[r]).el.removeEventListener("click",n.click,!1),n.el.removeEventListener("dblclick",n.dblclick,!1),n.ctx.deactivate();return e.elements=[],t()},e.forwardBrackets={},e.process((function(t,n,r){var o;t.hasData("element")&&((o={el:t.getData("element"),click:function(e){return e.preventDefault(),e.stopPropagation(),n.send({click:e})},dblclick:function(e){return e.preventDefault(),e.stopPropagation(),n.send({dblclick:e})},ctx:r}).el.addEventListener("click",o.click,!1),o.el.addEventListener("dblclick",o.dblclick,!1),e.elements.push(o))}))}},39109:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e,t,n,o,a;for((e=new r.Component).description="Listen to pointer events on a DOM element",e.icon="pencil-square-o",e.inPorts.add("element",{datatype:"object"}),e.inPorts.add("action",{datatype:"string",default:"none",control:!0}),o=0,a=(n=["down","up","cancel","move","over","out","enter","leave"]).length;o<a;o++)t=n[o],e.outPorts.add(t,{datatype:"object",description:"Sends event on pointer".concat(t)});return e.elements=[],e.tearDown=function(r){var o,a,i,s,c,u;for(a=0,s=(u=e.elements).length;a<s;a++){for((o=u[a]).el.removeAttribute&&o.el.removeAttribute("touch-action"),i=0,c=n.length;i<c;i++)t=n[i],o.el.removeEventListener("pointer".concat(t),o["pointer".concat(t)],!1);o.ctx.deactivate()}return e.elements=[],r()},e.forwardBrackets={},e.process((function(t,r,o){var a,i;t.hasData("element")&&(a=t.hasData("action")?t.getData("action"):"none",(i={el:t.getData("element"),ctx:o}).el.setAttribute("touch-action",a),n.forEach((function(e){return i["pointer".concat(e)]=function(t){var n;return t.preventDefault(),t.stopPropagation(),(n={})[e]=t.target.value,r.send(n)},i.el.addEventListener("pointer".concat(e),i["pointer".concat(e)],!1)})),e.elements.push(i))}))}},89324:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e,t;return(e=new r.Component).description="Listen to window resize events",e.icon="desktop",e.inPorts.add("start",{datatype:"bang",description:"Start listening for screen resizes"}),e.inPorts.add("stop",{datatype:"bang",description:"Stop listening for screen resizes"}),e.outPorts.add("width",{datatype:"number"}),e.outPorts.add("height",{datatype:"number"}),e.subscriber=null,t=function(){if(e.subscriber)return window.removeEventListener("resize",e.subscriber.callback,!1),e.subscriber.ctx.deactivate(),e.subscriber=null},e.tearDown=function(e){return t(),e()},e.forwardBrackets={},e.process((function(n,r,o){if(n.hasData("start"))return n.getData("start"),t(),e.subscriber={callback:function(e){return r.send({width:window.innerWidth,height:window.innerHeight})},ctx:o},r.send({width:window.innerWidth,height:window.innerHeight}),void window.addEventListener("resize",e.subscriber.callback,!1);n.hasData("stop")&&(n.getData("stop"),t(),r.done())}))}},409:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e,t;return(e=new r.Component).description="Listen to scroll events on the browser window",e.icon="arrows-v",e.inPorts.add("start",{datatype:"bang",description:"Start listening for hash changes"}),e.inPorts.add("stop",{datatype:"bang",description:"Stop listening for hash changes"}),e.outPorts.add("top",{datatype:"number"}),e.outPorts.add("bottom",{datatype:"number"}),e.outPorts.add("left",{datatype:"number"}),e.outPorts.add("right",{datatype:"number"}),e.subscriber=null,t=function(){if(e.subscriber)return window.removeEventListener("scroll",e.subscriber.callback,!1),e.subscriber.ctx.deactivate(),e.subscriber=null},e.tearDown=function(e){return t(),e()},e.forwardBrackets={},e.process((function(n,r,o){if(n.hasData("start"))return n.getData("start"),t(),e.subscriber={callback:function(e){var t,n;return n=window.scrollY,t=window.scrollX,r.send({top:n,bottom:n+window.innerHeight,left:t,right:t.window.innerWidth})},ctx:o},void window.addEventListener("scroll",e.subscriber.callback,!1);n.hasData("stop")&&(n.getData("stop"),t(),r.done())}))}},65776:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e,t;return(e=new r.Component).description="Listen for user's microphone and recognize phrases",e.icon="microphone",e.inPorts.add("start",{datatype:"bang",description:"Start listening for hash changes"}),e.inPorts.add("stop",{datatype:"bang",description:"Stop listening for hash changes"}),e.outPorts.add("result",{datatype:"string"}),e.outPorts.add("error",{datatype:"object"}),e.subscriber=null,t=function(){if(e.subscriber)return e.subscriber.recognition.stop(),e.subscriber.ctx.deactivate(),e.subscriber=null},e.tearDown=function(e){return t(),e()},e.forwardBrackets={},e.process((function(n,r,o){if(n.hasData("start"))return n.getData("start"),t(),window.webkitSpeechRecognition?(e.subscriber={sent:[],callback:function(t){var n,o,a,i,s,c;for(c=[],o=n=0,a=(i=t.results).length;n<a;o=++n)(s=i[o]).isFinal&&-1===e.subscriber.sent.indexOf(o)&&(r.send({result:s[0].transcript}),c.push(e.subscriber.sent.push(o)));return c},error:function(e){return r.send({error:e})},ctx:o},e.subscriber.recognition=new window.webkitSpeechRecognition,e.subscriber.recognition.continuous=!0,e.subscriber.recognition.start(),e.subscriber.recognition.onresult=e.subscriber.callback,void(e.subscriber.recognition.onerror=e.subscriber.error)):void r.done(new Error("Speech recognition support not available"));n.hasData("stop")&&(n.getData("stop"),t(),r.done())}))}},93724:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="Listen to touch events on a DOM element",e.icon="hand-o-up",e.inPorts.add("element",{datatype:"object"}),e.outPorts.add("start",{datatype:"object"}),e.outPorts.add("movex",{datatype:"number"}),e.outPorts.add("movey",{datatype:"number"}),e.outPorts.add("end",{datatype:"object"}),e.elements=[],e.tearDown=function(t){var n,r,o,a;for(r=0,o=(a=e.elements).length;r<o;r++)(n=a[r]).el.removeEventListener("touchstart",n.touchstart,!1),n.el.removeEventListener("touchmove",n.touchmove,!1),n.el.removeEventListener("touchend",n.touchend,!1),n.ctx.deactivate();return e.elements=[],t()},e.forwardBrackets={},e.process((function(t,n,o){var a;t.hasData("element")&&((a={el:t.getData("element"),touchstart:function(e){var t,o,a,i,s;if(e.preventDefault(),e.stopPropagation(),e.changedTouches&&e.changedTouches.length){for(s=[],o=t=0,a=(i=e.changedTouches).length;t<a;o=++t)i[o],s.push(n.send({start:new r.IP("data",e,{touch:o})}));return s}},touchmove:function(e){var t,o,a,i,s,c;if(e.preventDefault(),e.stopPropagation(),e.changedTouches&&e.changedTouches.length){for(s=[],o=t=0,a=(i=e.changedTouches).length;t<a;o=++t)c=i[o],s.push(n.send({movex:new r.IP("data",c.pageX,{touch:o}),movey:new r.IP("data",c.pageY,{touch:o})}));return s}},touchend:function(e){var t,o,a,i,s;if(e.preventDefault(),e.stopPropagation(),e.changedTouches&&e.changedTouches.length){for(s=[],o=t=0,a=(i=e.changedTouches).length;t<a;o=++t)i[o],s.push(n.send({end:new r.IP("data",e,{touch:o})}));return s}},ctx:o}).el.addEventListener("touchstart",a.touchstart,!1),a.el.addEventListener("touchmove",a.touchmove,!1),a.el.addEventListener("touchend",a.touchend,!1),e.elements.push(a))}))}},39075:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="Read the coordinates from a DOM event",e.icon="map-marker",e.inPorts.add("event",{datatype:"object"}),e.outPorts.add("screen",{datatype:"object"}),e.outPorts.add("client",{datatype:"object"}),e.outPorts.add("page",{datatype:"object"}),e.forwardBrackets={event:["screen","client","page"]},e.process((function(e,t){var n;if(e.hasData("event"))return n=e.getData("event"),t.sendDone({screen:{x:n.screenX,y:n.screenY},client:{x:n.clientX,y:n.clientY},page:{x:n.pageX,y:n.pageY}})}))}},9597:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="Read the state of a gamepad",e.icon="gamepad",e.inPorts.add("gamepad",{datatype:"integer"}),e.outPorts.add("out",{datatype:"object"}),e.outPorts.add("error",{datatype:"object"}),e.lastTimestamps={},e.tearDown=function(t){return e.lastTimestamps={},t()},e.process((function(t,n){var r,o;if(t.hasData("gamepad"))if(r=t.getData("gamepad"),navigator.webkitGetGamepads){if((o=navigator.webkitGetGamepads()[r])||n.done(new Error("Gamepad '".concat(r,"' not available"))),!(e.lastTimestamps[r]=o.timestamp))return e.lastTimestamps[r]=o.timestamp,n.sendDone({out:o});n.done()}else n.done(new Error("No WebKit Gamepad API available"))}))}},92175:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="Set the hash in browser's URL bar",e.icon="slack",e.inPorts.add("hash",{datatype:"string"}),e.outPorts.add("out",{datatype:"string"}),e.process((function(e,t){var n;if(e.hasData("hash"))return n=e.getData("hash"),window.location.hash="#".concat(n),t.sendDone({out:n})}))}},54421:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="Get an item from LocalStorage",e.inPorts.add("key",{datatype:"string"}),e.outPorts.add("item",{datatype:"string"}),e.outPorts.add("error",{datatype:"object"}),e.forwardBrackets={key:["item","error"]},e.process((function(e,t){var n,r;e.hasData("key")&&(n=e.getData("key"),(r=localStorage.getItem(n))?t.sendDone({item:r}):t.done(new Error("".concat(n," not found"))))}))}},48292:(e,t,n)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var o;o=n(76445),t.getComponent=function(){var e;return(e=new o.Component).description="Add an item to a list",e.inPorts.add("list",{datatype:"string",control:!0}),e.inPorts.add("key",{datatype:"string"}),e.outPorts.add("key",{datatype:"string"}),e.forwardBrackets={key:["key"]},e.process((function(e,t){var n,o,a,i,s,c;if(e.hasData("list","key")){var u=(s=e.getData("list","key"),c=2,function(e){if(Array.isArray(e))return e}(s)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(s,c)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(s,c)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());i=u[0],o=u[1],-1===(n=(a=localStorage.getItem(i))?a.split(","):[]).indexOf(o)&&(n.push(o),localStorage.setItem(i,n.join(","))),t.sendDone({key:o})}}))}},56673:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="Get an item from a list",e.inPorts.add("key",{datatype:"string"}),e.outPorts.add("items",{datatype:"string"}),e.outPorts.add("error",{datatype:"object"}),e.forwardBrackets={key:["items","error"]},e.process((function(e,t){var n,o,a,i,s,c;if(e.hasData("key"))if(a=e.getData("key"),c=localStorage.getItem(a)){for(s=c.split(","),t.send({items:new r.IP("openBracket",a)}),n=0,i=s.length;n<i;n++)o=s[n],t.send({items:o});t.send({items:new r.IP("closeBracket",a)}),t.done()}else t.done(new Error("".concat(a," not found")))}))}},78513:(e,t,n)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var o;o=n(76445),t.getComponent=function(){var e;return(e=new o.Component).description="Remove an item from a list",e.icon="trash",e.inPorts.add("list",{datatype:"string",control:!0}),e.inPorts.add("key",{datatype:"string"}),e.outPorts.add("key",{datatype:"string"}),e.forwardBrackets={key:["key"]},e.process((function(e,t){var n,o,a,i,s,c;if(e.hasData("list","key")){var u=(s=e.getData("list","key"),c=2,function(e){if(Array.isArray(e))return e}(s)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(s,c)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(s,c)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());i=u[0],o=u[1],-1!==(n=(a=localStorage.getItem(i))?a.split(","):[]).indexOf(o)&&(n.splice(n.indexOf(o),1),localStorage.setItem(i,n.join(","))),t.sendDone({key:o})}}))}},69222:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e,t;return(e=new r.Component).description="Listen for changes in localStorage",e.icon="hourglass",e.inPorts.add("start",{datatype:"bang"}),e.inPorts.add("stop",{datatype:"bang"}),e.outPorts.add("changed",{datatype:"object"}),e.outPorts.add("removed",{datatype:"object"}),e.listeners={},t=function(t){if(e.listeners[t])return window.removeEventListener("storage",e.listeners[t].callback,!1),e.listeners[t].ctx.deactivate()},e.tearDown=function(n){var r,o;for(o in r=e.listeners)r[o],t(o);return e.listeners={},n()},e.process((function(n,r,o){var a;if(n.hasData("stop"))return n.getData("stop"),t(n.scope),void r.done();n.hasData("start")&&(n.getData("start"),t(n.scope),a={ctx:o,callback:function(e){null!==e.newValue?r.send({changed:{key:e.key,value:e.newValue}}):r.send({removed:{key:e.key,value:null}})}},window.addEventListener("storage",a.callback,!1),e.listeners[n.scope]=a)}))}},3006:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="Remove an item from LocalStorage",e.icon="trash",e.inPorts.add("key",{datatype:"string"}),e.outPorts.add("item",{datatype:"string"}),e.forwardBrackets={key:["item"]},e.process((function(e,t){var n;e.hasData("key")&&(n=e.getData("key"),localStorage.removeItem(n),t.sendDone({item:null}))}))}},83673:(e,t,n)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var o;o=n(76445),t.getComponent=function(){var e;return(e=new o.Component).description="Save an item into LocalStorage",e.inPorts.add("key",{datatype:"string"}),e.inPorts.add("value",{datatype:"string"}),e.outPorts.add("item",{datatype:"string"}),e.forwardBrackets={key:["item"]},e.process((function(e,t){var n,o,a,i;if(e.hasData("key","value")){var s=(a=e.getData("key","value"),i=2,function(e){if(Array.isArray(e))return e}(a)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(a,i)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(a,i)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());n=s[0],o=s[1],localStorage.setItem(n,o),t.sendDone({item:o})}}))}},90677:(e,t,n)=>{"use strict";var r,o;o=n(76445),r=n(13469),t.getComponent=function(){var e;return(e=new o.Component).description="Remove null",e.inPorts.add("in",{datatype:"all"}),e.outPorts.add("out",{datatype:"all"}),e.process((function(e,t){var n;if(e.hasData("in"))return null==(n=e.getData("in"))||0===n.length||r.isObject(n)&&r.isEmpty(n)?t.done():t.sendDone({out:n})}))}},91199:(e,t,n)=>{"use strict";var r,o;o=n(76445),r=n(13469),t.getComponent=function(){var e;return(e=new o.Component).description="Count number of data IPs inside each stream",e.icon="sort-numeric-asc",e.inPorts.add("in",{datatype:"all"}),e.outPorts.add("out",{datatype:"all"}),e.outPorts.add("count",{datatype:"int"}),e.counts=[0],e.tearDown=function(t){return e.counts=[0],t()},e.forwardBrackets={},e.process((function(t,n){var o,a;if(t.has("in"))return"openBracket"===(a=t.get("in")).type?(e.counts.push(0),void n.sendDone({out:a,count:a})):"closeBracket"===a.type?(o=r.last(e.counts),e.counts.pop(),n.send({count:o}),void n.sendDone({out:a,count:a})):(e.counts[e.counts.length-1]++,n.send({out:a}),1===e.counts.length&&(n.send({count:r.last(e.counts)}),e.counts[e.counts.length-1]=0),n.done())}))}},6330:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="send a number of packets received in a stream",e.icon="sort-numeric-asc",e.count=0,e.brackets=[],e.tearDown=function(t){return e.count=0,e.brackets=[],t()},e.inPorts.add("in",{datatype:"all"}),e.inPorts.add("immediate",{datatype:"boolean",control:!0,default:!1}),e.inPorts.add("reset",{datatype:"bang"}),e.outPorts.add("count",{datatype:"int"}),e.outPorts.add("out",{datatype:"all"}),e.forwardBrackets={},e.process((function(t,n){var r,o;return t.hasData("reset")?(t.getData("reset"),e.count=0,n.done()):t.has("in")?"openBracket"===(o=t.get("in")).type?(e.brackets.push(o.data),n.sendDone({out:o})):"closeBracket"===o.type?(e.brackets.pop(),n.send({out:o}),e.brackets.length||(n.send({count:e.count}),e.count=0),n.done()):(e.count++,n.send({out:o}),r=!1,t.hasData("immediate")&&(r=t.getData("immediate")),(r||0===e.brackets.length)&&(n.send({count:e.count}),0===e.brackets.length&&(e.count=0)),n.done()):void 0}))}},24945:(e,t,n)=>{"use strict";var r;r=n(76445),n(13469),t.getComponent=function(){var e;return(e=new r.Component).description="if incoming is short of the length of the default packets, send the default packets.",e.inPorts.add("in",{datatype:"all"}),e.inPorts.add("default",{datatype:"all"}),e.outPorts.add("out",{datatype:"all"}),e.defaults=[],e.brackets=[],e.tearDown=function(t){return e.defaults=[],e.brackets=[],t()},e.forwardBrackets={},e.process((function(t,n){var r,o,a,i,s,c,u;if(t.hasData("default")&&(o=t.getData("default"),e.defaults.push(o),n.done()),t.has("in")){if("openBracket"===(s=t.get("in")).type)return e.brackets.push([]),void n.sendDone({out:s});if("closeBracket"!==s.type)return e.brackets.length?(e.brackets[e.brackets.length-1].push(s.data),n.done()):(r=null!=s.data?s.data:e.defaults[0],void n.sendDone({out:r}));for(u=e.brackets.pop(),i=0,c=(a=e.defaults.map((function(e,t){return null!=u[t]?u[t]:e}))).length;i<c;i++)o=a[i],n.send({out:o});n.sendDone({out:s})}}))}},86887:(e,t,n)=>{"use strict";var r;r=n(76445),n(13469),t.getComponent=function(){var e;return(e=new r.Component).description="Filter packets based on their positions",e.icon="filter",e.inPorts.add("in",{datatype:"all"}),e.inPorts.add("filter",{datatype:"boolean"}),e.outPorts.add("out",{datatype:"all"}),e.filters=[],e.tearDown=function(t){return e.filters=[],t()},e.forwardBrackets={},e.process((function(t,n){var r,o,a,i,s,c;if(t.hasData("filter")&&(r=t.getData("filter"),e.filters.push(r),n.done()),t.hasStream("in")){for(c=0,o=0,i=(s=t.getStream("in")).length;o<i;o++)"openBracket"!==(a=s[o]).type&&"closeBracket"!==a.type?e.filters[c]?(n.send({out:a}),c++):c++:(c=0,n.send({out:a}));return n.done()}}))}},89396:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="Filter packets based on their value",e.icon="filter",e.inPorts.add("in",{datatype:"number"}),e.inPorts.add("filtervalue",{datatype:"number",control:!0,required:!0}),e.outPorts.add("lower",{datatype:"number"}),e.outPorts.add("higher",{datatype:"number"}),e.outPorts.add("equal",{datatype:"number"}),e.forwardBrackets={in:["lower","higher","equal"]},e.process((function(e,t){var n,r;if(e.hasData("in","filtervalue"))if(r=e.getData("filtervalue"),(n=e.getData("in"))<r)t.sendDone({lower:n});else if(n>r)t.sendDone({higher:n});else{if(n!==r)return t.done();t.sendDone({equal:n})}}))}},17190:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="Filter packets with regular expression",e.icon="filter",e.inPorts.add("in",{datatype:"string"}),e.inPorts.add("regexp",{datatype:"string",control:!0}),e.outPorts.add("out",{datatype:"string"}),e.outPorts.add("missed",{datatype:"string"}),e.forwardBrackets={in:["out","missed"]},e.process((function(e,t){var n,r;if(e.hasData("in"))if(n=e.getData("in"),e.hasData("regexp")){if("string"==typeof(r=e.getData("regexp"))&&(r=new RegExp(r)),!r.exec(n))return t.sendDone({missed:n});t.sendDone({out:n})}else t.sendDone({out:n})}))}},26515:(e,t,n)=>{"use strict";var r,o;o=n(76445),r=n(13469),t.getComponent=function(){var e;return(e=new o.Component).description="Filter packets matching some RegExp strings",e.icon="filter",e.inPorts.add("in",{datatype:"string"}),e.inPorts.add("regexp",{datatype:"string"}),e.outPorts.add("out",{datatype:"string"}),e.outPorts.add("missed",{datatype:"string"}),e.outPorts.add("passthru",{datatype:"string"}),e.forwardBrackets={in:["out","missed","passthru"]},e.regexps=[],e.tearDown=function(t){return e.regexps=[]},e.process((function(t,n){var o,a;if(t.hasData("regexp"))return"string"==typeof(a=t.getData("regexp"))&&(a=new RegExp(a)),e.regexps.push(a),void n.done();if(t.hasData("in")){if(o=t.getData("in"),!r.any(e.regexps,(function(e){return o.match(e)})))return n.sendDone({missed:o,passthru:o});n.sendDone({out:o,passthru:o})}}))}},47877:(e,t,n)=>{"use strict";var r;r=n(76445),n(13469),t.getComponent=function(){var e;return(e=new r.Component).description="Flatten the IP structure but preserve all groups (i.e. all groups are at the top level)",e.icon="list",e.inPorts.add("in",{datatype:"all"}),e.outPorts.add("out",{datatype:"all"}),e.forwardBrackets={},e.lastBracket={},e.tearDown=function(t){return e.lastBracket={},t()},e.process((function(t,n){var o;if(t.has("in"))return"openBracket"===(o=t.get("in")).type?(e.lastBracket[t.scope]&&n.send({out:new r.IP("closeBracket",e.lastBracket[t.scope].data)}),n.send({out:o}),e.lastBracket[t.scope]=o,n.done()):"closeBracket"===o.type?e.lastBracket[t.scope]?(n.send({out:o}),delete e.lastBracket[t.scope],n.done()):n.done():(n.send({out:o}),n.done())}))}},21860:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).icon="outdent",e.description="Get scope of the IP packet",e.inPorts.add("in",{datatype:"object"}),e.outPorts.add("out",{datatype:"object"}),e.outPorts.add("scope",{datatype:"string"}),e.process((function(e,t){var n;if(e.hasData("in"))return n=e.getData("in"),t.sendDone({scope:e.scope,out:n})}))}},299:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="Surround each data packet by a bracket",e.icon="indent",e.inPorts.add("in",{datatype:"all"}),e.outPorts.add("out",{datatype:"all"}),e.forwardBrackets={},e.process((function(e,t){var n,o,a,i,s;if(e.hasStream("in")){for(n=0,o=0,i=(s=e.getStream("in")).length;o<i;o++)"openBracket"!==(a=s[o]).type?"closeBracket"!==a.type?(t.send({out:new r.IP("openBracket",n)}),t.send({out:a}),t.send({out:new r.IP("closeBracket",n)}),n++):t.send({out:a}):(n=0,t.send({out:a}));return t.done()}}))}},58511:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="Send only the last packet of a stream",e.icon="caret-square-o-down",e.inPorts.add("in",{datatype:"all"}),e.outPorts.add("out",{datatype:"all"}),e.forwardBrackets={},e.process((function(e,t){var n;if(e.hasStream("in"))return n=e.getStream("in").filter((function(e){return"data"===e.type})),t.sendDone({out:n.pop()})}))}},2151:(e,t,n)=>{"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var o,a;o=n(76445),a=function(e){var t,n,o,a,i;if("object"===r(e))return e;for(o={},t=0,n=(i=e.split(",")).length;t<n;t++)(a=i[t].split(":"))[0]&&a[1]&&(o[a[0].trim()]=a[1].trim());return o},t.getComponent=function(){var e;return(e=new o.Component).icon="table",e.description="Replace packets through a map. Data that is not in the map is replace with the default.",e.inPorts.add("data",{datatype:"all",description:"Data to be used as a key."}),e.inPorts.add("map",{datatype:"all",description:"A map with replacement values",control:!0,required:!0}),e.inPorts.add("def",{datatype:"all",description:"A default value to return if the key is not in the map. If unset return the input.",control:!0}),e.outPorts.add("data",{datatype:"all",description:"The content of map[data]."}),e.forwardBrackets={data:["data"]},e.process((function(e,t){var n,r,o;if(e.hasData("map","data")){if(o=a(e.getData("map")),!((n=e.getData("data"))in o))return e.hasData("def")?(r=e.getData("def"),void t.sendDone({data:r})):t.sendDone({data:n});t.sendDone({data:o[n]})}}))}},77048:(e,t,n)=>{"use strict";var r;r=n(76445),n(13469),t.getComponent=function(){var e;return(e=new r.Component).icon="filter",e.description="only forward a specified number of packets in a stream",e.inPorts.add("in",{datatype:"all"}),e.inPorts.add("start",{datatype:"int",control:!0}),e.inPorts.add("end",{datatype:"int",control:!0}),e.inPorts.add("length",{datatype:"int",control:!0}),e.outPorts.add("out",{datatype:"all"}),e.forwardBrackets={},e.process((function(e,t){var n,r,o,a,i,s,c,u,l,d;if(e.hasStream("in")){for(s=e.getStream("in"),l=-Infinity,e.hasData("start")&&(l=parseInt(e.getData("start"))),n=1/0,e.hasData("end")&&(n=parseInt(e.getData("end"))),i=1/0,e.hasData("length")&&(i=parseInt(e.getData("length"))),u=0,d=0,r=0,a=s.length;r<a;r++)"openBracket"!==(c=(o=s[r]).type)&&"closeBracket"!==c?++d>l&&d<n&&u<i&&(t.send({out:o}),u++):(u=0,d=0,t.send({out:o}));return t.done()}}))}},98429:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).icon="clipboard",e.description="Replace incoming packets with something else if they match certain packets",e.inPorts.add("in",{datatype:"all"}),e.inPorts.add("match",{datatype:"all"}),e.inPorts.add("replace",{datatype:"all"}),e.outPorts.add("out",{datatype:"all"}),e.matches={},e.replacements={},e.tearDown=function(t){return e.matches={},e.replacements={}},e.process((function(t,n){var r,o;return t.hasData("match")?(e.matches[t.scope]||(e.matches[t.scope]=[]),e.matches[t.scope].push(t.getData("match")),n.done()):t.hasData("replace")?(e.replacements[t.scope]||(e.replacements[t.scope]=[]),e.replacements[t.scope].push(t.getData("replace")),n.done()):t.hasData("in")?(r=t.getData("in"),e.matches[t.scope]&&e.replacements[t.scope]&&-1!==(o=e.matches[t.scope].indexOf(r))&&(r=e.replacements[t.scope][o]),n.sendDone({out:r})):void 0}))}},94310:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).icon="outdent",e.description="Read the scope from received packet and set to IP scope",e.inPorts.add("in",{datatype:"object",scoped:!0}),e.inPorts.add("property",{datatype:"string",control:!0,default:"scope",scoped:!1}),e.outPorts.add("out",{datatype:"object",scoped:!0}),e.process((function(e,t){var n,o,a;if(e.hasData("in")&&(!e.attached("property").length||e.hasData("property")))return o="scope",e.hasData("property")&&(o=e.getData("property")),a=(n=e.getData("in"))[o],delete n[o],t.sendDone({out:new r.IP("data",n,{scope:a})})}))}},44808:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).icon="indent",e.description="Set the scope of the received packet into a property inside the payload",e.inPorts.add("in",{datatype:"object",scoped:!0}),e.inPorts.add("property",{datatype:"string",control:!0,default:"scope",scoped:!1}),e.outPorts.add("out",{datatype:"object",scoped:!1}),e.process((function(e,t){var n,o;if(e.hasData("in")&&(!e.attached("property").length||e.hasData("property")))return o="scope",e.hasData("property")&&(o=e.getData("property")),(n=e.getData("in"))[o]=e.scope,t.sendDone({out:new r.IP("data",n)})}))}},42878:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="Always send the specified packets with incoming packets.",e.inPorts.add("in",{datatype:"all"}),e.inPorts.add("with",{datatype:"all"}),e.outPorts.add("out",{datatype:"all"}),e.with={},e.tearDown=function(t){return e.with={},t()},e.forwardBrackets={},e.process((function(t,n){var r,o,a,i,s,c,u,l,d,p;if(t.hasData("with"))return e.with[t.scope]||(e.with[t.scope]=[]),e.with[t.scope].push(t.getData("with")),n.done();if(t.hasStream("in")){for(r=(d=t.getStream("in")).filter((function(e){return"data"===e.type})),a=o=0,c=d.length;o<c;a=++o)if(i=d[a],n.send({out:i}),i===r[r.length-1]&&e.with[t.scope])for(s=0,u=(p=e.with[t.scope]).length;s<u;s++)l=p[s],n.send({out:l});return n.done()}}))}},56200:(e,t,n)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var o;o=n(76445),t.getComponent=function(){var e;return(e=new o.Component).icon="indent",e.description="Set scope for the IP packet",e.inPorts.add("in",{datatype:"object"}),e.inPorts.add("scope",{datatype:"string",control:!0}),e.outPorts.add("out",{datatype:"object",scoped:!0}),e.process((function(e,t){var n,a,i,s;if(e.hasData("in","scope")){var c=(i=e.getData("in","scope"),s=2,function(e){if(Array.isArray(e))return e}(i)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(i,s)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(i,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());return n=c[0],a=c[1],t.sendDone({out:new o.IP("data",n,{scope:a})})}}))}},27975:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="A timestamp-value pattern sequencer",e.icon="bar-chart",e.inPorts.add("pattern",{datatype:"string",description:"Comma separated timestamp-value pairs. Timestamps are in ms."}),e.outPorts.add("value",{datatype:"string",description:"Current value"}),e.forwardBrackets={},e.timers={},e.tearDown=function(t){var n,r,o;for(o in r=e.timers)(n=r[o]).timeout&&clearTimeout(n.timeout),n.deactivate();return e.timers={}},e.process((function(t,n,r){var o,a,i,s,c;if(t.hasData("pattern"))return e.timers[t.scope]&&(e.timers[t.scope].timeout&&clearTimeout(e.timers[t.scope].timeout),e.timers[t.scope].deactivate()),"string"==typeof(s=t.getData("pattern"))&&(s=s.split(",")),s.length>1?(o=0,i=0,a=0,c=function(){return a=s[o],i=s[o+1],n.send({value:i}),(o+=2)<s.length?r.timeout=setTimeout(c,s[o]-a):r.deactivate()},r.timeout=setTimeout(c,s[o]),e.timers[t.scope]=r):n.done()}))}},74125:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).icon="filter",e.description="Send only packets that are unique",e.inPorts.add("in",{datatype:"all"}),e.inPorts.add("clear",{datatype:"bang"}),e.outPorts.add("out",{datatype:"all"}),e.outPorts.add("duplicate",{datatype:"all"}),e.seen={},e.tearDown=function(t){return e.seen={},t()},e.forwardBrackets={in:["out","duplicate"]},e.process((function(t,n){var r;return t.hasData("clear")?(t.getData("clear"),e.seen={},n.done()):t.hasData("in")?(r=t.getData("in"),e.seen[t.scope]||(e.seen[t.scope]=[]),-1===e.seen[t.scope].indexOf(r)?(n.send({out:r}),e.seen[t.scope].push(r),n.done()):n.sendDone({duplicate:r})):void 0}))}},27964:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="Send packets whose position upon receipt is even to the EVEN port, otherwise the ODD port.",e.icon="code-fork",e.inPorts.add("in",{datatype:"all"}),e.outPorts.add("odd",{datatype:"all"}),e.outPorts.add("even",{datatype:"all"}),e.count={},e.tearDown=function(t){return e.count={},t()},e.forwardBrackets={in:["odd","even"]},e.process((function(t,n){var r;if(t.hasData("in")){if(r=t.getData("in"),e.count[t.scope]||(e.count[t.scope]=0),e.count[t.scope]++,e.count[t.scope]%2!=0)return n.sendDone({odd:r});n.sendDone({even:r})}}))}},69493:(e,t,n)=>{"use strict";var r,o;o=n(76445),r=n(13469),t.getComponent=function(){var e;return(e=new o.Component).description="zip through multiple IPs and output a series of zipped IPs just like how _.zip() works in Underscore.js",e.icon="file-archive-o",e.inPorts.add("in",{datatype:"array"}),e.outPorts.add("out",{datatype:"array"}),e.forwardBrackets={},e.process((function(e,t){var n;if(e.hasStream("in")){if(n=e.getStream("in").filter((function(e){return"data"===e.type&&!!r.isArray(e.data)})).map((function(e){return e.data})),!r.isEmpty(n))return t.sendDone({out:r.zip.apply(r,n)});t.sendDone({out:[]})}}))}},57238:(e,t,n)=>{"use strict";var r,o,a,i=n(34155);r=n(76445),o=r.isBrowser()?window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||function(e){return setTimeout(e,1)}:i.nextTick,a=function(e,t,n){var r,i,s,c;if(e.moving){if(s=e.massPosition-e.anchorPosition,i=-e.friction*e.speed,r=(-e.stiffness*s+i)/e.mass,e.speed+=r,c=e.massPosition,e.massPosition+=e.speed/100,Math.round(e.massPosition)!==Math.round(c)&&t.send(Math.round(e.massPosition)),Math.round(e.massPosition)===e.anchorPosition&&Math.abs(e.speed)<.2)return n();if(0!==e.massPosition)return o((function(){return a(e,t,n)}))}},t.getComponent=function(){var e;return(e=new r.Component).description="Animates a directional spring",e.inPorts.add("in",{description:"Initial position for the moving mass",datatype:"number"}),e.inPorts.add("anchor",{description:"Position of the fixed point in the other end of the spring",datatype:"number",default:0,control:!0}),e.inPorts.add("mass",{datatype:"int",default:10,control:!0}),e.inPorts.add("stiffness",{datatype:"int",default:120,control:!0}),e.inPorts.add("friction",{datatype:"int",default:3,control:!0}),e.outPorts.add("out",{datatype:"number"}),e.forwardBrackets={},e.scopes={},e.tearDown=function(t){var n,r,o;for(r in n=e.scopes)(o=n[r]).moving=!1,o.context.deactivate();return e.scopes={},t()},e.process((function(t,n,r){t.has("in")&&(t.attached("anchor").length&&!t.hasData("anchor")||t.attached("mass").length&&!t.hasData("mass")||t.attached("stiffness").length&&!t.hasData("stiffness")||t.attached("friction").length&&!t.hasData("friction")||(e.scopes[t.scope]&&(e.scopes[t.scope].moving=!1,e.scopes[t.scope].context.deactivate()),e.scopes[t.scope]={moving:!0,context:r,massPosition:t.getData("in"),anchorPosition:0,mass:10,stiffness:120,friction:3,speed:0},t.hasData("anchor")&&(e.scopes[t.scope].anchorPosition=t.getData("anchor")),t.hasData("mass")&&(e.scopes[t.scope].mass=t.getData("mass")),t.hasData("stiffness")&&(e.scopes[t.scope].stiffness=t.getData("stiffness")),t.hasData("friction")&&(e.scopes[t.scope].friction=t.getData("friction")),a(e.scopes[t.scope],n,(function(){if(e.scopes[t.scope])return n.done(),delete e.scopes[t.scope]}))))}))}},10266:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).description="Listen for events emitted by React components using the emitEvent property",e.inPorts.add("instance",{datatype:"object",description:"React component instance"}),e.outPorts.add("event",{datatype:"object"}),e.subscribed={},e.tearDown=function(t){var n,r;for(r in n=e.subscribed)n[r].deactivate();return e.subscribed={},t()},e.process((function(t,n,o){if(t.hasData("instance"))return t.getData("instance").setProps({emitEvent:function(e,t,o){var a,i,s,c,u,l,d;for("string"==typeof e&&(e=[e]),s=0,u=e.length;s<u;s++)i=e[s],n.send({event:new r.IP("openBracket",i)});for(n.send({event:t}),(a=e.slice(0)).reverse(),d=[],c=0,l=a.length;c<l;c++)i=a[c],d.push(n.send({event:new r.IP("closeBracket",i)}));return d}}),e.subscribed[t.scope]=o}))}},37733:(e,t,n)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var o,a;a=n(76445),o=n(81875),t.getComponent=function(){var e;return(e=new a.Component).description="Render a React component in the given mountpoint",e.inPorts.add("component",{datatype:"function",description:"The React component to mount"}),e.inPorts.add("container",{datatype:"object",description:"DOM element to use for mounting the component"}),e.outPorts.add("instance",{datatype:"object"}),e.outPorts.add("error",{datatype:"object",required:!1}),e.process((function(e,t){var n,a,i,s;if(e.hasData("component","container")){var c=(i=e.getData("component","container"),s=2,function(e){if(Array.isArray(e))return e}(i)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(i,s)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(i,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());n=c[0],a=c[1],o.getReact((function(e,r){var o,i;if(!e){try{i=r.renderComponent(n(),a)}catch(e){return o=e,void t.done(o)}return t.sendDone({instance:i})}t.done(e)}))}}))}},79180:(e,t,n)=>{"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var o;o=n(76445),t.getComponent=function(){var e;return(e=new o.Component).description="Set properties of a React component",e.inPorts.add("instance",{datatype:"object",description:"React component instance",control:!0}),e.inPorts.add("props",{datatype:"object",description:"Properties to set"}),e.process((function(e,t){var n,o;e.hasData("instance","props")&&((n=e.getData("instance")).isMounted()&&"object"===r(o=e.getData("props"))?(n.setProps(o),t.done()):t.done())}))}},48755:(e,t,n)=>{"use strict";var r,o;o=n(76445),r=n(81875),t.getComponent=function(){var e;return(e=new o.Component).description="Unmount a React component from a given mountpoint",e.inPorts.add("container",{datatype:"object",description:"DOM element where a React component is mounted"}),e.outPorts.add("unmounted",{datatype:"boolean",required:!1}),e.outPorts.add("error",{datatype:"object",required:!1}),e.process((function(e,t){var n;e.hasData("container")&&(n=e.getData("container"),r.getReact((function(e,r){if(!e)return t.sendDone({unmontainer:r.unmountComponentAtNode(n)});t.done(e)})))}))}},81875:(e,t)=>{"use strict";var n;n=null,t.getReact=function(e){return n?e(null,n):window.React?(n=window.React,e(null,n)):"function"!=typeof window.requirejs?e(new Error("React not found")):void window.requirejs(["React"],(function(t){return n=t,e(null,t)}),(function(t){return e(t)}))}},91934:(e,t,n)=>{"use strict";var r,o;o=n(76445),r=n(81132),t.getComponent=function(){var e;return(e=new o.Component).inPorts.add("definition",{datatype:"object",description:"Runtime definition object",required:!0}),e.inPorts.add("element",{datatype:"object",description:"DOM element to be set as Runtime parent element",required:!1}),e.inPorts.add("timeout",{datatype:"number",description:"How long to try connecting, in milliseconds",default:1e3,required:!1,control:!0}),e.outPorts.add("runtime",{datatype:"object",description:"FBP Runtime instance",required:!1}),e.outPorts.add("connected",{datatype:"object",description:"Connected FBP Runtime instance",required:!1}),e.outPorts.add("unavailable",{datatype:"object",description:"Unavailable FBP Runtime instance",required:!1}),e.outPorts.add("error",{datatype:"object",description:"Runtime connection error",required:!1}),e.process((function(t,n){var o,a,i,s,c,u,l,d;if(t.hasData("definition"))if((a=t.getData("definition")).protocol){if(a.address){d=t.hasData("timeout")?t.getData("timeout"):1e3,i=t.hasData("element")?t.getData("element"):null;try{o=r.getTransport(a.protocol)}catch(e){return void n.done(new Error("Protocol ".concat(a.protocol," is not supported")))}return c=function(t){d&&clearTimeout(d),l.removeListener("capabilities",s),l&&e.outPorts.unavailable.isAttached()?n.send({unavailable:l}):n.done(t)},u=function(){return n.sendDone({unavailable:l}),l.removeListener("error",c),l.removeListener("capabilities",s),l.disconnect()},s=function(){return d&&clearTimeout(d),l.removeListener("error",c),n.sendDone({connected:l})},l=new o(a),i&&l.setParentElement(i),d=setTimeout(u,d),l.once("capabilities",s),l.once("error",c),n.send({runtime:l}),l.connect()}n.done(new Error("Address definition required"))}else n.done(new Error("Protocol definition required"))}))}},78713:(e,t,n)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var o;o=n(76445),t.getComponent=function(){var e;return(e=new o.Component).description="Switch a network's debug mode on or off",e.inPorts.add("runtime",{datatype:"object",description:"FBP runtime instance"}),e.inPorts.add("graph",{datatype:"object",description:"Graph to debug"}),e.inPorts.add("enable",{datatype:"boolean",description:"Whether to debug the graph"}),e.outPorts.add("sent",{datatype:"bang",description:"Command sent to the runtime"}),e.process((function(e,t){var n,o,a,i,s;if(e.hasData("runtime","graph","enable")){var c=(i=e.getData("runtime","graph","enable"),s=3,function(e){if(Array.isArray(e))return e}(i)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(i,s)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(i,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());return a=c[0],o=c[1],n=c[2],a.sendNetwork("debug",{graph:o.name||o.properties.id,enable:n}),t.sendDone({sent:!0})}}))}},40402:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e,t;return(e=new r.Component).icon="code",e.inPorts.add("name",{datatype:"string",description:"Name of the component to get"}),e.inPorts.add("runtime",{datatype:"object",description:"Runtime to communicate with"}),e.outPorts.add("source",{datatype:"object"}),e.outPorts.add("error",{datatype:"object"}),e.runtime=null,e.tearDown=function(e){return unsubscribe(),e()},t=function(t){var n;if(e.runtime&&"source"===t.command)return n=[t.payload.library,t.payload.name].join("/"),e.runtime.sources[n]=t.payload},e.process((function(n,r){var o,a,i,s;if(n.hasData("runtime")){if(s=n.getData("runtime"),e.runtime){if(e.runtime.rt===s)return r.done();unsubscribe()}return s.isConnected()&&!s.canDo("component:getsource")?void r.done(new Error("Runtime ".concat(s.definition.id," cannot get sources"))):(e.runtime={rt:s,sources:{}},s.on("component",t),void r.done())}if(n.hasData("name")&&e.runtime){if(o=n.getData("name"),!e.runtime.sources[o])return e.runtime.rt.sendComponent("getsource",{name:o}),i=10,a=function(){if(i--,!e.runtime.sources[o])return i||r.done(new Error("Runtime didn't provide source for ".concat(o," in time"))),setTimeout(a,100);r.sendDone({source:e.runtime.sources[o]})},setTimeout(a,100);r.sendDone({source:e.runtime.sources[o]})}}))}},22854:(e,t,n)=>{"use strict";var r,o,a,i,s;r=n(76445),a=null,o=null,i=function(e,t){var n;if(n=function(){if(e.canDo("protocol:component"))return e.sendComponent("list")},a=function(){return n()},o=function(n){var r,o,a;if("component"===n.command&&"Graph"!==(o=n.payload.name)&&"ReadDocument"!==o)return r={name:n.payload.name,description:n.payload.description,icon:n.payload.icon,subgraph:n.payload.subgraph||!1,runtime:n.payload.runtime||(null!=(a=e.definition)?a.id:void 0),inports:n.payload.inPorts.slice(0).map((function(e){return e.name=e.id,delete e.id,e})),outports:n.payload.outPorts.slice(0).map((function(e){return e.name=e.id,delete e.id,e}))},t.send({out:{componentDefinition:r}})},e.on("capabilities",a),e.on("component",o),e.isConnected())return n()},s=function(e,t){return a&&e.removeListener("capabilities",a),o&&e.removeListener("component",o),a=null,o=null,t.deactivate()},t.getComponent=function(){var e;return(e=new r.Component).description="List components available on a runtime",e.inPorts.add("runtime",{datatype:"object"}),e.outPorts.add("out",{datatype:"object"}),e.outPorts.add("error",{datatype:"object"}),e.runtime=null,e.tearDown=function(t){return e.runtime&&unsubcribe(e.runtime.rt,e.runtime.ctx),e.runtime=null,t()},e.forwardBrackets={},e.process((function(t,n,r){var o;if(t.hasData("runtime"))return o=t.getData("runtime"),e.runtime&&s(e.runtime.rt,e.runtime.ctx),e.runtime={rt:o,ctx:r},i(e.runtime.rt,n)}))}},6233:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e,t;return(e=new r.Component).description="Listen to a network on a runtime",e.inPorts.add("runtime",{datatype:"object",description:"Runtime to listen from"}),e.inPorts.add("graph",{datatype:"object",description:"Graph to listen to"}),e.outPorts.add("started",{datatype:"object"}),e.outPorts.add("stopped",{datatype:"object"}),e.outPorts.add("status",{datatype:"object"}),e.outPorts.add("output",{datatype:"object"}),e.outPorts.add("error",{datatype:"object"}),e.outPorts.add("processerror",{datatype:"object"}),e.outPorts.add("icon",{datatype:"object"}),e.outPorts.add("packet",{datatype:"object"}),t=function(e){if(e)return e.rt.removeListener("network",e.listener),e.ctx.deactivate()},e.tearDown=function(n){return e.runtime&&t(e.runtime),e.runtime=null,e.graph=null,n()},e.forwardBrackets={},e.process((function(n,o,a){if(n.hasData("graph"))return e.graph=n.getData("graph"),void o.done();n.hasData("runtime")&&(e.runtime&&t(e.runtime),e.runtime={rt:n.getData("runtime"),ctx:a,listener:function(t){var n,a,i,s,c=t.command,u=t.payload;"error"!==c?u.graph!==(null!=(n=e.graph)?n.name:void 0)&&u.graph!==(null!=(a=e.graph)&&null!=(i=a.properties)?i.id:void 0)||("connect"!==c&&"begingroup"!==c&&"data"!==c&&"endgroup"!==c&&"disconnect"!==c?"started"!==c&&"stopped"!==c&&"status"!==c&&"output"!==c&&"processerror"!==c&&"icon"!==c||((s={})[c]=u,o.send(s)):o.send({packet:new r.IP("data",{edge:u.id,src:u.src,tgt:u.tgt,type:c,group:null!=u.group?u.group:"",data:null!=u.data?u.data:"",subgraph:null!=u.subgraph?u.subgraph:"",runtime:e.runtime.rt.definition.id})})):o.send({error:u})}},e.runtime.rt.on("network",e.runtime.listener))}))}},62193:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e,t;return(e=new r.Component).inPorts.add("runtime",{datatype:"object",description:"FBP Runtime instance"}),e.outPorts.add("connected",{datatype:"object",description:"FBP Runtime instance"}),e.outPorts.add("disconnected",{datatype:"object",description:"Runtime connection error"}),e.outPorts.add("graph",{datatype:"object",description:"Changes to runtime graph"}),e.runtime=null,t=function(){if(e.runtime)return e.runtime.rt.removeListener("connected",e.runtime.onConnected),e.runtime.rt.removeListener("disconnected",e.runtime.onDisconnected),e.runtime.rt.removeListener("graph",e.runtime.onGraph),e.runtime.ctx.deactivate(),e.runtime=null},e.tearDown=function(e){return t(),e()},e.forwardBrackets={},e.process((function(t,n,r){if(t.hasData("runtime"))return e.runtime={rt:t.getData("runtime"),onConnected:function(){return n.send({connected:e.runtime.rt})},onDisconnected:function(){return n.send({disconnected:e.runtime.rt})},onGraph:function(e){return n.send({graph:e})},ctx:r},e.runtime.rt.on("connected",e.runtime.onConnected),e.runtime.rt.on("disconnected",e.runtime.onDisconnected),e.runtime.rt.on("graph",e.runtime.onGraph)}))}},48896:(e,t,n)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var o,a;o=n(76445),a=function(e,t,n){var r,o;return e.code?(o=e.code.match(/@runtime ([a-z\-]+)/))&&"all"!==(r=o[1])&&r!==t.definition.type?n(new Error("Component type ".concat(o," doesn't match runtime type ").concat(t.definition.type))):t.canDo("component:setsource")?(t.sendComponent("source",{name:e.name,language:e.language,library:e.project||e.library,code:e.code,tests:e.tests}),n()):n(new Error("Runtime doesn't support setsource")):n(new Error("No code available for component ".concat(e.name)))},t.getComponent=function(){var e;return(e=new o.Component).inPorts.add("component",{datatype:"object"}),e.inPorts.add("runtime",{datatype:"object",control:!0}),e.outPorts.add("out",{datatype:"object"}),e.outPorts.add("error",{datatype:"object"}),e.process((function(e,t){var n,o,i,s;if(e.hasData("component","runtime")){var c=(i=e.getData("component","runtime"),s=2,function(e){if(Array.isArray(e))return e}(i)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(i,s)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(i,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());if(n=c[0],(o=c[1]).canDo){if(!o.isConnected())return o.once("capabilities",(function(){return a(n,o,(function(e){if(!e)return t.sendDone({out:n});t.done(e)}))}));a(n,o,(function(e){if(!e)return t.sendDone({out:n});t.done(e)}))}else t.done(new Error("Incorrect runtime instance"))}}))}},81971:(e,t,n)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var o;o=n(76445),t.getComponent=function(){var e;return(e=new o.Component).description="Send edges selected by user to runtime",e.inPorts.add("edges",{datatype:"array"}),e.inPorts.add("runtime",{datatype:"object"}),e.inPorts.add("graph",{datatype:"object"}),e.outPorts.add("out",{datatype:"array"}),e.outPorts.add("error",{datatype:"object"}),e.process((function(e,t){var n,o,a,i,s,c;if(e.hasData("edges","runtime","graph")){var u=(s=e.getData("edges","runtime","graph"),c=3,function(e){if(Array.isArray(e))return e}(s)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(s,c)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(s,c)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());if(n=u[0],i=u[1],o=u[2],null!=i?i.canDo:void 0){if(i.isConnected())return i.sendNetwork("edges",{edges:n.map((function(e){return{src:e.src||e.from,tgt:e.tgt||e.to}})),graph:o.name||(null!=(a=o.properties)?a.id:void 0)}),t.sendDone({out:n});t.sendDone({out:n})}else t.sendDone({out:n})}}))}},16322:(e,t,n)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var o,a;a=n(76445),o=n(94044),t.getComponent=function(){var e;return(e=new a.Component).inPorts.add("graph",{datatype:"object"}),e.inPorts.add("runtime",{datatype:"object",control:!0}),e.outPorts.add("out",{datatype:"object"}),e.outPorts.add("error",{datatype:"object"}),e.process((function(e,t){var n,a,i,s;if(e.hasData("graph","runtime")){var c=(i=e.getData("graph","runtime"),s=2,function(e){if(Array.isArray(e))return e}(i)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(i,s)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(i,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());if(n=c[0],(a=c[1]).canDo){if(!a.isConnected())return a.once("capabilities",(function(){return o.sendGraph(n,a,(function(e){if(!e)return t.sendDone({out:n});t.done(e)}))}));o.sendGraph(n,a,(function(e){if(!e)return t.sendDone({out:n});t.done(e)}))}else t.done(new Error("Incorrect runtime instance"))}}))}},28790:(e,t,n)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var o,a;a=n(76445),o=function(e,t,n){var r,o;switch(r={command:t.toLowerCase(),payload:{}},t){case"renameNode":case"renameInport":case"renameOutport":case"renameGroup":r.payload={from:n[0],to:n[1]};break;case"addEdge":case"removeEdge":case"changeEdge":case"addInitial":r.payload={src:n[0].from,tgt:n[0].to,metadata:n[0].metadata};break;case"removeInitial":r.payload={tgt:n[0].to};break;case"addInport":case"addOutport":r.payload={public:n[0],node:n[1].process,port:n[1].port,metadata:n[1].metadata};break;case"removeInport":case"removeOutport":r.payload={public:n[0]};break;default:r.payload=n[0]}return r.payload.graph=e.name||(null!=(o=e.properties)?o.id:void 0),r},t.getComponent=function(){var e,t,n;return(e=new a.Component).inPorts.add("runtime",{datatype:"object",description:"FBP Runtime instance"}),e.inPorts.add("graph",{datatype:"object",description:"Graph to listen to"}),e.outPorts.add("queued",{datatype:"int",description:"Number of changes in queue"}),e.outPorts.add("sent",{datatype:"bang",description:"Notification that changes have been transmitted"}),e.outPorts.add("error",{datatype:"object"}),t=["addNode","removeNode","renameNode","changeNode","addEdge","removeEdge","changeEdge","addInitial","removeInitial","addInport","removeInport","renameInport","addOutport","removeOutport","renameOutport","addGroup","removeGroup","renameGroup","changeGroup"],e.current=null,n=function(){var n,r,o;if(e.current){for(r=0,o=t.length;r<o;r++)n=t[r],e.current.graph.removeListener(n,e.current[n]);return e.current.graph.removeListener("endTransaction",e.current.endTransaction),e.current.ctx.deactivate(),e.current=null}},e.tearDown=function(e){return n(),e()},e.process((function(a,i,s){var c,u,l,d;if(a.hasData("runtime","graph")){var p=(l=a.getData("runtime","graph"),d=2,function(e){if(Array.isArray(e))return e}(l)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(l,d)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(l,d)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());u=p[0],c=p[1],n(),u.canDo("protocol:graph")?(e.current={graph:c,rt:u,ctx:s,changes:[]},t.forEach((function(t){return e.current[t]=function(){if(e.current.graph===c){for(var n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];return e.current.changes.push(o(c,t,r)),i.send({queued:e.current.changes.length})}},c.on(t,e.current[t])})),e.current.endTransaction=function(){var t;if(e.current.graph===c){for(;e.current.changes.length;)t=e.current.changes.shift(),e.current.rt.sendGraph(t.command,t.payload);return i.send({queued:e.current.changes.length}),i.send({sent:!0})}},c.on("endTransaction",e.current.endTransaction)):i.done(new Error("Runtime ".concat(this.runtime.definition.id," cannot update graphs")))}}))}},51763:(e,t,n)=>{"use strict";var r,o,a,i,s,c,u,l;c=n(76445),r=n(17381),c.isBrowser()||(u=n(26470),o=n(12993)),l=function(e,t,n){var o,a;return o=r.getComponentForRuntime(n,e.baseDir),a=n.id,e.registerComponent(t,a,o)},i=function(e,t){var n;return n=u.resolve(e,"package.json"),o.readFile(n,"utf-8",(function(e,n){var r,o,a;if(e)return t(e);try{r=JSON.parse(n)}catch(e){return t(e)}return a=[],null!=(null!=(o=r.noflo)?o.runtimes:void 0)&&(a=r.noflo.runtimes),t(null,a)}))},s=function(e,t){var r;r="".concat(e,"/component.json");try{return t(null,n(38961)(r))}catch(e){return t(e)}},a=function(e,t){return s(e,(function(e,n){var r,o;return e?t(null,[]):(o=[],null!=(null!=(r=n.noflo)?r.runtimes:void 0)&&(o=n.noflo.runtimes),t(null,o))}))},e.exports=function(e,t){return(c.isBrowser()?a:i)(e.baseDir,(function(n,r){var o,a,i,s;if(n)return t(n);for(i=e.getModulePrefix("runtime"),o=0,a=r.length;o<a;o++)s=r[o],l(e,i,s);return t(null)}))}},17381:(e,t,n)=>{"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function a(e,t){return(a=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function i(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var c,u,l,d,p,h=[].indexOf;p=n(76445),u=n(94044),d=n(81132),l=n(27848)("noflo-runtime:remotesubgraph"),c=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&a(e,t)}(g,e);var t,n,r,c,f=(r=g,c=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=s(r);if(c){var n=s(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return i(this,e)});function g(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,g),e||(e={}),(t=f.call(this)).runtime=null,t.ready=!1,t.graph=null,t.graphName=null,t}return t=g,(n=[{key:"isReady",value:function(){return this.ready}},{key:"setReady",value:function(e){if(l("".concat(this.nodeId," setting ready to ").concat(e)),this.ready=e,e)return this.emit("ready")}},{key:"setUp",value:function(e){return this.runtime.start(),e()}},{key:"tearDown",value:function(e){return this.runtime.stop(),this.runtime.disconnect(),e()}},{key:"setDefinition",value:function(e){var t,n,r,o=this;this.definition=e;try{t=d.getTransport(this.definition.protocol)}catch(e){throw n=e,new Error("'".concat(this.definition.protocol,"' protocol not supported: ")+n.message)}return this.runtime=new t(this.definition),this.description=e.description||"",e.icon&&this.setIcon(e.icon),this.runtime.on("runtime",(function(t){return"runtime"===t.command&&o.handleRuntime(e,t.payload),"ports"===t.command?o.setupPorts(t.payload):"packet"===t.command?o.onPacketReceived(t.payload):void 0})),r=!1,this.runtime.on("error",(function(e){if(!r)throw e;return console.error(e)})),this.runtime.once("capabilities",(function(){return r=!0})),this.runtime.connect()}},{key:"handleRuntime",value:function(e,t){var n=this;if(h.call(t.capabilities,"protocol:runtime")<0)throw new Error("runtime ".concat(e.id," does not allow protocol:runtime"));if(t.graph&&t.graph===e.graph)return l("".concat(this.nodeId," runtime is already running desired graph ").concat(t.graph)),this.graphName=t.graph,this.graph=new p.Graph(t.graph),void this.runtime.setMain(this.graph);if(e.graph){if(h.call(t.capabilities,"protocol:graph")<0)throw new Error("runtime ".concat(e.id," does not allow protocol:graph"));return l("".concat(this.nodeId," sending graph ").concat(e.graph," to runtime (had ").concat(t.graph,")")),p.graph.loadFile(e.graph,(function(t,r){if(t)throw t;return r.properties.id||(r.properties.id=e.graph),n.setGraph(r,(function(e){if(e)throw e}))}))}}},{key:"setGraph",value:function(e,t){return this.graph=e,this.graphName=e.name||e.properties.id,this.runtime.setMain(e),u.sendGraph(e,this.runtime,t,!0)}},{key:"setupPorts",value:function(e){var t,n,r,o,a,i,s,c,u,d,p,h,f;if(!(null!=(u=this.definition)?u.graph:void 0)||this.graph){if(this.graph){for(t in d=this.graph.inports)if(d[t],!e.inPorts.filter((function(e){return e.id===t})).length)return;for(t in p=this.graph.outports)if(p[t],!e.outPorts.filter((function(e){return e.id===t})).length)return}for(r=e.inPorts.map((function(e){return e.id})),s=e.outPorts.map((function(e){return e.id})),l("".concat(this.nodeId," received inports ").concat(r.join(", "))),l("".concat(this.nodeId," received outports ").concat(s.join(", "))),this.setReady(!1),n=0,a=(h=e.inPorts).length;n<a;n++)c=h[n],this.prepareInport(c);for(o=0,i=(f=e.outPorts).length;o<i;o++)c=f[o],this.prepareOutport(c);return this.setReady(!0)}}},{key:"normalizePort",value:function(e){var t;return"any"===(t=e.type||"all")&&(t="all"),{datatype:t,required:e.required||!1,addressable:e.addressable||!1}}},{key:"prepareInport",value:function(e){var t,n=this;if(t=e.id,!this.inPorts.ports[t])return this.inPorts.add(t,this.normalizePort(e)),this.inPorts.ports[t].on("ip",(function(e){var r;switch(e.type){case"data":r="data";break;case"openBracket":r="begingroup";break;case"closeBracket":r="endgroup"}return n.runtime.sendRuntime("packet",{port:t,event:r,payload:e.data,graph:n.graphName})}))}},{key:"prepareOutport",value:function(e){var t;return t=e.id,this.outPorts.add(t,this.normalizePort(e))}},{key:"onPacketReceived",value:function(e){var t,n;switch(t=e.port,n=this.outPorts[t],e.event){case"connect":return n.connect();case"begingroup":return n.beginGroup(e.payload);case"data":return n.send(e.payload);case"endgroup":return n.endGroup(e.payload);case"disconnect":return n.disconnect()}}}])&&o(t.prototype,n),g}(p.Component),t.RemoteSubGraph=c,t.getComponent=function(e){return new c(e)},t.getComponentForRuntime=function(e,n){return function(r){var o;return(o=t.getComponent(r)).baseDir=n,o.setDefinition(e),o}}},94044:(e,t)=>{"use strict";t.sendGraph=function(e,t,n,r){var o,a,i,s,c,u,l,d,p,h,f,g,m,v,y,b,w,_,x;if((null!=(m=e.properties.environment)?m.type:void 0)&&"all"!==(v=e.properties.environment.type)&&v!==t.definition.type)return n(new Error("Graph type ".concat(e.properties.environment.type," doesn't match runtime type ").concat(t.definition.type)));if(!t.canDo("protocol:graph"))return n(new Error("Runtime doesn't support graph protocol"));for(a=e.name||e.properties.id,t.sendGraph("clear",{id:a,name:e.name,main:r,library:e.properties.project,icon:e.properties.icon||"",description:e.properties.description||""}),i=0,l=(y=e.nodes).length;i<l;i++)h=y[i],t.sendGraph("addnode",{id:h.id,component:h.component,metadata:h.metadata,graph:a});for(c=0,d=(b=e.edges).length;c<d;c++)o=b[c],t.sendGraph("addedge",{src:{node:o.from.node,port:o.from.port},tgt:{node:o.to.node,port:o.to.port},metadata:o.metadata,graph:a});for(u=0,p=(w=e.initializers).length;u<p;u++)s=w[u],t.sendGraph("addinitial",{src:{data:s.from.data},tgt:{node:s.to.node,port:s.to.port},metadata:s.metadata,graph:a});if(e.inports)for(g in _=e.inports)f=_[g],t.sendGraph("addinport",{public:g,node:f.process,port:f.port,graph:a});if(e.outports)for(g in x=e.outports)f=x[g],t.sendGraph("addoutport",{public:g,node:f.process,port:f.port,graph:a});return n()}},48948:(e,t,n)=>{"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){return(o=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function a(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?i(e):t}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var c,u,l;l=n(76445),c=n(63759),u=function(){var e=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&o(e,t)}(u,e);var t,n,r=(t=u,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=s(t);if(n){var o=s(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return a(this,e)});function u(){var e,t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),e=r.call(this),t={file:{datatype:"string",description:"URL of file to load",required:!0},play:{datatype:"bang",description:"plays the file right now"},start:{datatype:"object",description:"schedules to playback {time, offset, duration}"},stop:{datatype:"number",description:"schedules to stop at an exact time"}},c(i(e),"audiofile",t),e}return u}(l.Component);return e.prototype.description="Create an audio source loading a sound file",e.prototype.icon="file-audio-o",e}.call(void 0),t.getComponent=function(){return new u}},47583:(e,t,n)=>{"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){return(o=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function a(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?i(e):t}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var c,u,l;l=n(76445),c=n(63759),u=function(){var e=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&o(e,t)}(u,e);var t,n,r=(t=u,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=s(t);if(n){var o=s(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return a(this,e)});function u(){var e,t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),e=r.call(this),t={audionodes:{datatype:"object",description:"audio nodes (oscillators, buffer sources, ...)",addressable:!0,required:!0},rate:{datatyle:"number",description:"(0.01...8+)",required:!0},feedback:{datatyle:"number",description:"(0...1+)",required:!0},delay:{datatyle:"number",description:"(0...1)",required:!0},bypass:{datatyle:"number",description:"(0 or 1)",required:!0}},c(i(e),"chorus",t),e}return u}(l.Component);return e.prototype.description="Basic chorus effect (TUNA)",e.prototype.icon="group",e}.call(void 0),t.getComponent=function(){return new u}},65144:(e,t,n)=>{"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){return(o=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function a(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?i(e):t}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var c,u,l;l=n(76445),c=n(63759),u=function(){var e=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&o(e,t)}(u,e);var t,n,r=(t=u,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=s(t);if(n){var o=s(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return a(this,e)});function u(){var e,t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),e=r.call(this),t={audionodes:{datatype:"object",description:"audio nodes (oscillators, buffer sources, ...)",addressable:!0,required:!0},impulse:{datatyle:"string",description:"impulse response filepath",required:!0}},c(i(e),"convolver",t),e}return u}(l.Component);return e.prototype.description="Applies impulse response data to a given audio signal",e.prototype.icon="share-alt",e}.call(void 0),t.getComponent=function(){return new u}},96604:(e,t,n)=>{"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){return(o=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function a(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?i(e):t}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var c,u,l;l=n(76445),c=n(63759),u=function(){var e=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&o(e,t)}(u,e);var t,n,r=(t=u,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=s(t);if(n){var o=s(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return a(this,e)});function u(){var e,t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),e=r.call(this),t={audionodes:{datatype:"object",description:"audio nodes (oscillators, buffer sources, ...)",addressable:!0,required:!0},gain:{datatyle:"number",description:"amount of gain to apply (0...1)",required:!0}},c(i(e),"gain",t),e}return u}(l.Component);return e.prototype.description="Multiplies the input audio signal by the given gain value, changing its amplitude.",e.prototype.icon="filter",e}.call(void 0),t.getComponent=function(){return new u}},65580:(e,t,n)=>{"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){return(o=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function a(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?i(e):t}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var c,u,l;l=n(76445),c=n(63759),u=function(){var e=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&o(e,t)}(u,e);var t,n,r=(t=u,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=s(t);if(n){var o=s(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return a(this,e)});function u(){var e,t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),e=r.call(this),t={time:{datatype:"number",description:"when in future (ms)"},offset:{datatype:"number",description:"distance from start (ms)"},duration:{datatype:"number",description:"how long (ms)"}},c(i(e),"time",t),e}return u}(l.Component);return e.prototype.description="Creates one or more time events",e.prototype.icon="clock-o",e}.call(void 0),t.getComponent=function(){return new u}},54568:(e,t,n)=>{"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){return(o=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function a(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?i(e):t}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var c,u,l;l=n(76445),c=n(63759),u=function(){var e=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&o(e,t)}(u,e);var t,n,r=(t=u,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=s(t);if(n){var o=s(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return a(this,e)});function u(){var e,t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),e=r.call(this),t={waveform:{datatype:"string",description:"sine, square, sawtooth, triangle, custom",required:!0},frequency:{datatype:"number",description:"frequency of signal",required:!0},start:{datatype:"number",description:"schedules to playback at an exact time"},stop:{datatype:"number",description:"schedules to stop at an exact time"}},c(i(e),"oscillator",t),e}return u}(l.Component);return e.prototype.description="Create an audio source with a periodic waveform (sine, square, sawtooth, triangle, custom)",e.prototype.icon="volume-up",e}.call(void 0),t.getComponent=function(){return new u}},54744:(e,t,n)=>{"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){return(o=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function a(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?i(e):t}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var c,u,l;l=n(76445),c=n(63759),u=function(){var e=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&o(e,t)}(u,e);var t,n,r=(t=u,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=s(t);if(n){var o=s(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return a(this,e)});function u(){var e,t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),e=r.call(this),t={audionodes:{datatype:"object",description:"audio nodes (oscillators, buffer sources, ...)",addressable:!0,required:!0},position:{datatyle:"object",description:"a 2D or 3D point",required:!0}},c(i(e),"panner",t),e}return u}(l.Component);return e.prototype.description="Changes the location of a given audio source",e.prototype.icon="compass",e}.call(void 0),t.getComponent=function(){return new u}},64115:(e,t,n)=>{"use strict";function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var o,a;a=n(76445),o=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.parse=this.parse.bind(this),this.walk=this.walk.bind(this),this.create=this.create.bind(this),this.parseCommand=this.parseCommand.bind(this),this.parseThing=this.parseThing.bind(this),this.gain=this.gain.bind(this),this.oscillator=this.oscillator.bind(this),this.panner=this.panner.bind(this),this.audiofile=this.audiofile.bind(this),this.updateBuffer=this.updateBuffer.bind(this),this.audionodes=t.audionodes,this.table_audionodes=t.table_audionodes,this.buffer_data=t.buffer_data,this.context=t.context}var t,n;return t=e,(n=[{key:"parse",value:function(e){return this.walk(e,0)}},{key:"walk",value:function(e,t){var n,r,o,a,i;for(a=0,i=e.length;a<i;a++){if(n=e[a],o=this.create(n),0===t&&o.connect(this.context.destination),null==n.audionodes)return o;(r=n.audionodes)instanceof Array?this.walk(r,t+1).connect(o):this.walk([r],t+1).connect(o)}}},{key:"create",value:function(e){return this.parseCommand(e)}},{key:"parseCommand",value:function(e){if(this.context)return this.parseThing(e)}},{key:"parseThing",value:function(e,t,n){var r,o,a,i;if(null!=e&&null!=e.type&&null!=this[e.type])return null!=t&&t(),this[e.type](e);if(e instanceof Array){for(i=[],r=0,a=e.length;r<a;r++)null!=(o=e[r])&&i.push(this.parseThing(o,t,n));return i}}},{key:"gain",value:function(e){var t;return e.id in this.table_audionodes?t=this.table_audionodes[e.id]:(t=this.context.createGain(),this.table_audionodes[e.id]=t),t.gain.value=e.gain,t}},{key:"oscillator",value:function(e){var t;return e.id in this.table_audionodes?t=this.table_audionodes[e.id]:((t=this.context.createOscillator()).start(e.start),this.table_audionodes[e.id]=t),t.type=e.waveform,t.frequency.value=e.frequency,t}},{key:"panner",value:function(e){var t;return e.id in this.table_audionodes?t=this.table_audionodes[e.id]:(t=this.context.createPanner(),this.table_audionodes[e.id]=t),t.setPosition(e.position.x,e.position.y,0),t}},{key:"audiofile",value:function(e){var t,n,r,o,a,i=this;if(e.id in this.table_audionodes){if(t=this.context.createBufferSource(),this.table_audionodes[e.id]=t,null!=this.buffer_data[e.id]){this.updateBuffer(t,e.id);var s=e.start;a=s.time,r=s.offset,n=s.duration,t.start(a,r,n)}}else t=this.context.createBufferSource(),this.table_audionodes[e.id]=t,(o=new XMLHttpRequest).open("GET",e.file,!0),o.responseType="arraybuffer",o.onload=function(){return i.context.decodeAudioData(o.response,(function(n){return i.buffer_data[e.id]=n,i.updateBuffer(t,e.id)}))},o.send();return t}},{key:"updateBuffer",value:function(e,t){return e.buffer=this.buffer_data[t]}}])&&r(t.prototype,n),e}(),t.getComponent=function(){var e,t;return(e=new a.Component).description="Plays given chains and patterns",e.icon="play",e.inPorts.add("audionodes",{datatype:"object",addressable:!0}),e.scopes={},e.tearDown=function(t){var n,r,o;if((o=Object.keys(e.scopes)).length){if(r=o[0],!(null!=(n=e.scopes[r])?n.context:void 0))return delete e.scopes[r],void e.tearDown(t);e.scopes[r].context.close().then((function(){return delete e.scopes[r],e.tearDown(t)}),(function(e){return t(e)}))}else t()},t=function(t){var n;return e.scopes[t]||(n=new AudioContext,e.scopes[t]={audionodes:[],table_audionodes:{},buffer_data:{},context:n}),e.scopes[t]},e.process((function(e,n){var r,a,i;i=t(e.scope),(r=e.attached("audionodes").filter((function(t){return e.hasData(["audionodes",t])}))).length&&(a=new o(i),r.forEach((function(t){return i.audionodes[t]=e.getData(["audionodes",t]),i.audionodes[t]instanceof Array?a.parse(i.audionodes[t]):a.parse([i.audionodes[t]])})),n.done())}))}},63759:(e,t,n)=>{"use strict";var r,o,a={}.hasOwnProperty;r=n(76445),o=function(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:8;for(e="";e.length<t;)e+=Math.random().toString(36).substr(2);return e.substr(0,t)},e.exports=function(e,t,n){var i,s,c,u,l,d,p=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return(i=e).inPorts=new r.InPorts(n),i.outPorts=new r.OutPorts,i.outPorts.add(t,{datatype:"object"}),i.props={},i.tearDown=function(e){return e()},i.forwardBrackets={},u=function(){var e,r,i;for(e in(i={type:t}).id=o(),n)a.call(n,e)&&(!0!==(r=n[e]).addressable?null==r.value&&!1===r.required||(i[e]=r.value):i[e]=[]);return i},l=function(t,n,r,o){var a;if(t[n]=r,a=s.bind(e)(t))return o.send(a)},d=function(t,n,r,o,a){var i;if(t[n][o]=r,i=s.bind(e)(t))return a.send(i)},s=p.compute||e.compute||function(e){var t,n,r;for(t in n={},e)a.call(e,t)&&(r=e[t],null!=i.inPorts[t]&&i.inPorts[t].options.addressable?n[t]=c(r):n[t]=r);return c(n)},c=p.expandToArray||function(e){var t,n,r,o,a,i,s,c,u,l,d,p,h;for(u=0,r=0,s=(a=Object.keys(e)).length;r<s;r++){if(null==(p=e[l=a[r]]))return null;if(p instanceof Array){if(!(p.length>0))return null;u<p.length&&(u=p.length)}}if(0===u)return e;if(u>0){for(t=[],n=o=0,h=u;0<=h?o<h:o>h;n=0<=h?++o:--o){for(e instanceof Array?d=[]:((d={}).type=e.type,d.id=e.id),i=0,c=(a=Object.keys(e)).length;i<c;i++)p=e[l=a[i]],d[l]=p instanceof Array?null!=p[n]?p[n]:p[n%p.length]:p;t.push(d)}return t}},i.expandToArray=c,i.process((function(e,t){var r;i.props[e.scope]||(i.props[e.scope]=u()),r=i.props[e.scope],Object.keys(n).forEach((function(o){var a,i,s,c,u;if(!0!==n[o].addressable)e.hasData(o)&&(a=e.getData(o),l(r,o,a,t));else{if(!(s=e.attached(o).filter((function(t){return e.hasData([o,t])}))).length)return;for(c=0,u=s.length;c<u;c++)i=s[c],a=e.getData([o,i]),d(r,o,a,i,t)}})),t.done()}))}},70813:(e,t,n)=>{"use strict";var r,o;o=n(76445),r=WebSocket,t.getComponent=function(){var e;return(e=new o.Component).inPorts.add("url",{datatype:"string"}),e.inPorts.add("protocol",{datatype:"string",default:"",control:!0}),e.outPorts.add("connection",{datatype:"object"}),e.outPorts.add("error",{datatype:"object"}),e.process((function(e,t){var n,o,a;e.hasData("url")&&(e.attached("protocol").length&&!e.hasData("protocol")||(o="",e.hasData("protocol")&&(o=e.getData("protocol")),a=e.getData("url"),(n=new r(a,o)).onerror=function(e){return t.done(e)},n.onopen=function(){return t.sendDone({connection:n})}))}))}},14813:(e,t,n)=>{"use strict";var r;r=n(76445),t.getComponent=function(){var e;return(e=new r.Component).inPorts.add("connection",{datatype:"object"}),e.outPorts.add("string",{datatype:"string"}),e.outPorts.add("binary",{datatype:"buffer"}),e.forwardBrackets={},e.autoOrdering=!1,e.process((function(e,t){var n;if(e.hasData("connection"))return n=e.getData("connection"),r.isBrowser()?(n.addEventListener("message",(function(e){return t.send({string:e.data})}),!1),void n.addEventListener("close",(function(e){return t.done()}),!1)):(n.on("message",(function(e){"utf8"!==e.type?"binary"===e.type&&t.send({binary:e.binaryData}):t.send({string:e.utf8Data})})),n.on("close",(function(){return t.done()})))}))}},80794:(e,t,n)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var o;o=n(76445),t.getComponent=function(){var e;return(e=new o.Component).inPorts.add("connection",{datatype:"object",control:!0}),e.inPorts.add("string",{datatype:"string"}),e.process((function(e,t){var n,a,i,s;if(e.hasData("connection","string")){var c=(i=e.getData("connection","string"),s=2,function(e){if(Array.isArray(e))return e}(i)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return n}}(i,s)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(i,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());return n=c[0],a=c[1],o.isBrowser()?n.send(a):n.sendUTF(a),t.done()}}))}},98767:e=>{function t(e){if(e)return function(e){for(var n in t.prototype)e[n]=t.prototype[n];return e}(e)}e.exports=t,t.prototype.on=t.prototype.addEventListener=function(e,t){return this._callbacks=this._callbacks||{},(this._callbacks["$"+e]=this._callbacks["$"+e]||[]).push(t),this},t.prototype.once=function(e,t){function n(){this.off(e,n),t.apply(this,arguments)}return n.fn=t,this.on(e,n),this},t.prototype.off=t.prototype.removeListener=t.prototype.removeAllListeners=t.prototype.removeEventListener=function(e,t){if(this._callbacks=this._callbacks||{},0==arguments.length)return this._callbacks={},this;var n,r=this._callbacks["$"+e];if(!r)return this;if(1==arguments.length)return delete this._callbacks["$"+e],this;for(var o=0;o<r.length;o++)if((n=r[o])===t||n.fn===t){r.splice(o,1);break}return 0===r.length&&delete this._callbacks["$"+e],this},t.prototype.emit=function(e){this._callbacks=this._callbacks||{};for(var t=new Array(arguments.length-1),n=this._callbacks["$"+e],r=1;r<arguments.length;r++)t[r-1]=arguments[r];if(n){r=0;for(var o=(n=n.slice(0)).length;r<o;++r)n[r].apply(this,t)}return this},t.prototype.listeners=function(e){return this._callbacks=this._callbacks||{},this._callbacks["$"+e]||[]},t.prototype.hasListeners=function(e){return!!this.listeners(e).length}},11048:e=>{e.exports=function(e,n){for(var r=[],o=0;o<e.length;o++){var a=n(e[o],o);t(a)?r.push.apply(r,a):r.push(a)}return r};var t=Array.isArray||function(e){return"[object Array]"===Object.prototype.toString.call(e)}},20296:e=>{function t(e,t,n){var r,o,a,i,s;function c(){var u=Date.now()-i;u<t&&u>=0?r=setTimeout(c,t-u):(r=null,n||(s=e.apply(a,o),a=o=null))}null==t&&(t=100);var u=function(){a=this,o=arguments,i=Date.now();var u=n&&!r;return r||(r=setTimeout(c,t)),u&&(s=e.apply(a,o),a=o=null),s};return u.clear=function(){r&&(clearTimeout(r),r=null)},u.flush=function(){r&&(s=e.apply(a,o),a=o=null,clearTimeout(r),r=null)},u}t.debounce=t,e.exports=t},11227:(e,t,n)=>{var r=n(34155);t.formatArgs=function(t){if(t[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+t[0]+(this.useColors?"%c ":" ")+"+"+e.exports.humanize(this.diff),!this.useColors)return;const n="color: "+this.color;t.splice(1,0,n,"color: inherit");let r=0,o=0;t[0].replace(/%[a-zA-Z%]/g,(e=>{"%%"!==e&&(r++,"%c"===e&&(o=r))})),t.splice(o,0,n)},t.save=function(e){try{e?t.storage.setItem("debug",e):t.storage.removeItem("debug")}catch(e){}},t.load=function(){let e;try{e=t.storage.getItem("debug")}catch(e){}return!e&&void 0!==r&&"env"in r&&(e=r.env.DEBUG),e},t.useColors=function(){return!("undefined"==typeof window||!window.process||"renderer"!==window.process.type&&!window.process.__nwjs)||("undefined"==typeof navigator||!navigator.userAgent||!navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))&&("undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/))},t.storage=function(){try{return localStorage}catch(e){}}(),t.destroy=(()=>{let e=!1;return()=>{e||(e=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})(),t.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],t.log=console.debug||console.log||(()=>{}),e.exports=n(82447)(t);const{formatters:o}=e.exports;o.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}}},82447:(e,t,n)=>{e.exports=function(e){function t(e){let n,o=null;function a(...e){if(!a.enabled)return;const r=a,o=Number(new Date),i=o-(n||o);r.diff=i,r.prev=n,r.curr=o,n=o,e[0]=t.coerce(e[0]),"string"!=typeof e[0]&&e.unshift("%O");let s=0;e[0]=e[0].replace(/%([a-zA-Z%])/g,((n,o)=>{if("%%"===n)return"%";s++;const a=t.formatters[o];if("function"==typeof a){const t=e[s];n=a.call(r,t),e.splice(s,1),s--}return n})),t.formatArgs.call(r,e),(r.log||t.log).apply(r,e)}return a.namespace=e,a.useColors=t.useColors(),a.color=t.selectColor(e),a.extend=r,a.destroy=t.destroy,Object.defineProperty(a,"enabled",{enumerable:!0,configurable:!1,get:()=>null===o?t.enabled(e):o,set:e=>{o=e}}),"function"==typeof t.init&&t.init(a),a}function r(e,n){const r=t(this.namespace+(void 0===n?":":n)+e);return r.log=this.log,r}function o(e){return e.toString().substring(2,e.toString().length-2).replace(/\.\*\?$/,"*")}return t.debug=t,t.default=t,t.coerce=function(e){return e instanceof Error?e.stack||e.message:e},t.disable=function(){const e=[...t.names.map(o),...t.skips.map(o).map((e=>"-"+e))].join(",");return t.enable(""),e},t.enable=function(e){let n;t.save(e),t.names=[],t.skips=[];const r=("string"==typeof e?e:"").split(/[\s,]+/),o=r.length;for(n=0;n<o;n++)r[n]&&("-"===(e=r[n].replace(/\*/g,".*?"))[0]?t.skips.push(new RegExp("^"+e.substr(1)+"$")):t.names.push(new RegExp("^"+e+"$")))},t.enabled=function(e){if("*"===e[e.length-1])return!0;let n,r;for(n=0,r=t.skips.length;n<r;n++)if(t.skips[n].test(e))return!1;for(n=0,r=t.names.length;n<r;n++)if(t.names[n].test(e))return!0;return!1},t.humanize=n(57824),t.destroy=function(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")},Object.keys(e).forEach((n=>{t[n]=e[n]})),t.names=[],t.skips=[],t.formatters={},t.selectColor=function(e){let n=0;for(let t=0;t<e.length;t++)n=(n<<5)-n+e.charCodeAt(t),n|=0;return t.colors[Math.abs(n)%t.colors.length]},t.enable(t.load()),t}},40372:(e,t)=>{t.linear=function(e){return e},t.inQuad=function(e){return e*e},t.outQuad=function(e){return e*(2-e)},t.inOutQuad=function(e){return(e*=2)<1?.5*e*e:-.5*(--e*(e-2)-1)},t.inCube=function(e){return e*e*e},t.outCube=function(e){return--e*e*e+1},t.inOutCube=function(e){return(e*=2)<1?.5*e*e*e:.5*((e-=2)*e*e+2)},t.inQuart=function(e){return e*e*e*e},t.outQuart=function(e){return 1- --e*e*e*e},t.inOutQuart=function(e){return(e*=2)<1?.5*e*e*e*e:-.5*((e-=2)*e*e*e-2)},t.inQuint=function(e){return e*e*e*e*e},t.outQuint=function(e){return--e*e*e*e*e+1},t.inOutQuint=function(e){return(e*=2)<1?.5*e*e*e*e*e:.5*((e-=2)*e*e*e*e+2)},t.inSine=function(e){return 1-Math.cos(e*Math.PI/2)},t.outSine=function(e){return Math.sin(e*Math.PI/2)},t.inOutSine=function(e){return.5*(1-Math.cos(Math.PI*e))},t.inExpo=function(e){return 0==e?0:Math.pow(1024,e-1)},t.outExpo=function(e){return 1==e?e:1-Math.pow(2,-10*e)},t.inOutExpo=function(e){return 0==e?0:1==e?1:(e*=2)<1?.5*Math.pow(1024,e-1):.5*(2-Math.pow(2,-10*(e-1)))},t.inCirc=function(e){return 1-Math.sqrt(1-e*e)},t.outCirc=function(e){return Math.sqrt(1- --e*e)},t.inOutCirc=function(e){return(e*=2)<1?-.5*(Math.sqrt(1-e*e)-1):.5*(Math.sqrt(1-(e-=2)*e)+1)},t.inBack=function(e){var t=1.70158;return e*e*((t+1)*e-t)},t.outBack=function(e){var t=1.70158;return--e*e*((t+1)*e+t)+1},t.inOutBack=function(e){var t=2.5949095;return(e*=2)<1?e*e*((t+1)*e-t)*.5:.5*((e-=2)*e*((t+1)*e+t)+2)},t.inBounce=function(e){return 1-t.outBounce(1-e)},t.outBounce=function(e){return e<1/2.75?7.5625*e*e:e<2/2.75?7.5625*(e-=1.5/2.75)*e+.75:e<2.5/2.75?7.5625*(e-=2.25/2.75)*e+.9375:7.5625*(e-=2.625/2.75)*e+.984375},t.inOutBounce=function(e){return e<.5?.5*t.inBounce(2*e):.5*t.outBounce(2*e-1)+.5},t["in-quad"]=t.inQuad,t["out-quad"]=t.outQuad,t["in-out-quad"]=t.inOutQuad,t["in-cube"]=t.inCube,t["out-cube"]=t.outCube,t["in-out-cube"]=t.inOutCube,t["in-quart"]=t.inQuart,t["out-quart"]=t.outQuart,t["in-out-quart"]=t.inOutQuart,t["in-quint"]=t.inQuint,t["out-quint"]=t.outQuint,t["in-out-quint"]=t.inOutQuint,t["in-sine"]=t.inSine,t["out-sine"]=t.outSine,t["in-out-sine"]=t.inOutSine,t["in-expo"]=t.inExpo,t["out-expo"]=t.outExpo,t["in-out-expo"]=t.inOutExpo,t["in-circ"]=t.inCirc,t["out-circ"]=t.outCirc,t["in-out-circ"]=t.inOutCirc,t["in-back"]=t.inBack,t["out-back"]=t.outBack,t["in-out-back"]=t.inOutBack,t["in-bounce"]=t.inBounce,t["out-bounce"]=t.outBounce,t["in-out-bounce"]=t.inOutBounce},32114:e=>{"use strict";function t(e,t){for(const n in t)Object.defineProperty(e,n,{value:t[n],enumerable:!0,configurable:!0});return e}e.exports=function(e,n,r){if(!e||"string"==typeof e)throw new TypeError("Please pass an Error to err-code");r||(r={}),"object"==typeof n&&(r=n,n=void 0),null!=n&&(r.code=n);try{return t(e,r)}catch(n){r.message=e.message,r.stack=e.stack;const o=function(){};return o.prototype=Object.create(Object.getPrototypeOf(e)),t(new o,r)}}},94079:(e,t,n)=>{"use strict";var r=n(40210)("%Object.getOwnPropertyDescriptor%");if(r)try{r([],"length")}catch(e){r=null}e.exports=r},284:e=>{var t=function(){if("object"==typeof self&&self)return self;if("object"==typeof window&&window)return window;throw new Error("Unable to resolve global `this`")};e.exports=function(){if(this)return this;if("object"==typeof globalThis&&globalThis)return globalThis;try{Object.defineProperty(Object.prototype,"__global__",{get:function(){return this},configurable:!0})}catch(e){return t()}try{return __global__||t()}finally{delete Object.prototype.__global__}}()},17187:e=>{"use strict";var t,n="object"==typeof Reflect?Reflect:null,r=n&&"function"==typeof n.apply?n.apply:function(e,t,n){return Function.prototype.apply.call(e,t,n)};t=n&&"function"==typeof n.ownKeys?n.ownKeys:Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:function(e){return Object.getOwnPropertyNames(e)};var o=Number.isNaN||function(e){return e!=e};function a(){a.init.call(this)}e.exports=a,e.exports.once=function(e,t){return new Promise((function(n,r){function o(){void 0!==a&&e.removeListener("error",a),n([].slice.call(arguments))}var a;"error"!==t&&(a=function(n){e.removeListener(t,o),r(n)},e.once("error",a)),e.once(t,o)}))},a.EventEmitter=a,a.prototype._events=void 0,a.prototype._eventsCount=0,a.prototype._maxListeners=void 0;var i=10;function s(e){if("function"!=typeof e)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof e)}function c(e){return void 0===e._maxListeners?a.defaultMaxListeners:e._maxListeners}function u(e,t,n,r){var o,a,i,u;if(s(n),void 0===(a=e._events)?(a=e._events=Object.create(null),e._eventsCount=0):(void 0!==a.newListener&&(e.emit("newListener",t,n.listener?n.listener:n),a=e._events),i=a[t]),void 0===i)i=a[t]=n,++e._eventsCount;else if("function"==typeof i?i=a[t]=r?[n,i]:[i,n]:r?i.unshift(n):i.push(n),(o=c(e))>0&&i.length>o&&!i.warned){i.warned=!0;var l=new Error("Possible EventEmitter memory leak detected. "+i.length+" "+String(t)+" listeners added. Use emitter.setMaxListeners() to increase limit");l.name="MaxListenersExceededWarning",l.emitter=e,l.type=t,l.count=i.length,u=l,console&&console.warn&&console.warn(u)}return e}function l(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function d(e,t,n){var r={fired:!1,wrapFn:void 0,target:e,type:t,listener:n},o=l.bind(r);return o.listener=n,r.wrapFn=o,o}function p(e,t,n){var r=e._events;if(void 0===r)return[];var o=r[t];return void 0===o?[]:"function"==typeof o?n?[o.listener||o]:[o]:n?function(e){for(var t=new Array(e.length),n=0;n<t.length;++n)t[n]=e[n].listener||e[n];return t}(o):f(o,o.length)}function h(e){var t=this._events;if(void 0!==t){var n=t[e];if("function"==typeof n)return 1;if(void 0!==n)return n.length}return 0}function f(e,t){for(var n=new Array(t),r=0;r<t;++r)n[r]=e[r];return n}Object.defineProperty(a,"defaultMaxListeners",{enumerable:!0,get:function(){return i},set:function(e){if("number"!=typeof e||e<0||o(e))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+e+".");i=e}}),a.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},a.prototype.setMaxListeners=function(e){if("number"!=typeof e||e<0||o(e))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+e+".");return this._maxListeners=e,this},a.prototype.getMaxListeners=function(){return c(this)},a.prototype.emit=function(e){for(var t=[],n=1;n<arguments.length;n++)t.push(arguments[n]);var o="error"===e,a=this._events;if(void 0!==a)o=o&&void 0===a.error;else if(!o)return!1;if(o){var i;if(t.length>0&&(i=t[0]),i instanceof Error)throw i;var s=new Error("Unhandled error."+(i?" ("+i.message+")":""));throw s.context=i,s}var c=a[e];if(void 0===c)return!1;if("function"==typeof c)r(c,this,t);else{var u=c.length,l=f(c,u);for(n=0;n<u;++n)r(l[n],this,t)}return!0},a.prototype.addListener=function(e,t){return u(this,e,t,!1)},a.prototype.on=a.prototype.addListener,a.prototype.prependListener=function(e,t){return u(this,e,t,!0)},a.prototype.once=function(e,t){return s(t),this.on(e,d(this,e,t)),this},a.prototype.prependOnceListener=function(e,t){return s(t),this.prependListener(e,d(this,e,t)),this},a.prototype.removeListener=function(e,t){var n,r,o,a,i;if(s(t),void 0===(r=this._events))return this;if(void 0===(n=r[e]))return this;if(n===t||n.listener===t)0==--this._eventsCount?this._events=Object.create(null):(delete r[e],r.removeListener&&this.emit("removeListener",e,n.listener||t));else if("function"!=typeof n){for(o=-1,a=n.length-1;a>=0;a--)if(n[a]===t||n[a].listener===t){i=n[a].listener,o=a;break}if(o<0)return this;0===o?n.shift():function(e,t){for(;t+1<e.length;t++)e[t]=e[t+1];e.pop()}(n,o),1===n.length&&(r[e]=n[0]),void 0!==r.removeListener&&this.emit("removeListener",e,i||t)}return this},a.prototype.off=a.prototype.removeListener,a.prototype.removeAllListeners=function(e){var t,n,r;if(void 0===(n=this._events))return this;if(void 0===n.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==n[e]&&(0==--this._eventsCount?this._events=Object.create(null):delete n[e]),this;if(0===arguments.length){var o,a=Object.keys(n);for(r=0;r<a.length;++r)"removeListener"!==(o=a[r])&&this.removeAllListeners(o);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"==typeof(t=n[e]))this.removeListener(e,t);else if(void 0!==t)for(r=t.length-1;r>=0;r--)this.removeListener(e,t[r]);return this},a.prototype.listeners=function(e){return p(this,e,!0)},a.prototype.rawListeners=function(e){return p(this,e,!1)},a.listenerCount=function(e,t){return"function"==typeof e.listenerCount?e.listenerCount(t):h.call(e,t)},a.prototype.listenerCount=h,a.prototype.eventNames=function(){return this._eventsCount>0?t(this._events):[]}},79472:(e,t,n)=>{t.graph=n(85184),t.Graph=t.graph.Graph,t.journal=n(19671),t.Journal=t.journal.Journal},69867:e=>{e.exports={inports:{in:{process:"Objectify",port:"in"},regexp:{process:"Regexp",port:"in"}},outports:{out:{process:"Remove",port:"out"}},groups:[],processes:{Regexp:{component:"core/Split"},Objectify:{component:"groups/Objectify"},Remove:{component:"groups/RemoveGroups"}},connections:[{src:{process:"Regexp",port:"out"},tgt:{process:"Objectify",port:"regexp"}},{src:{process:"Objectify",port:"out"},tgt:{process:"Remove",port:"in"}},{src:{process:"Regexp",port:"out"},tgt:{process:"Remove",port:"regexp"}}],caseSensitive:!1}},89159:e=>{e.exports={inports:{in:{process:"Range",port:"in"}},outports:{out:{process:"Range",port:"out"}},groups:[],processes:{Range:{component:"packets/Range"}},connections:[{data:"1",tgt:{process:"Range",port:"length"}}],caseSensitive:!1}},27788:e=>{e.exports={inports:{in:{process:"Merge",port:"in"}},outports:{out:{process:"Flatten",port:"out"}},groups:[],processes:{Merge:{component:"Merge"},Flatten:{component:"packets/Flatten"}},connections:[{src:{process:"Merge",port:"out"},tgt:{process:"Flatten",port:"in"}}],caseSensitive:!1}},26638:e=>{e.exports={inports:{module:{process:"Load",port:"path"},container:{process:"Mount",port:"container"},props:{process:"Props",port:"props"}},outports:{event:{process:"Listen",port:"event"},error:{process:"Errors",port:"out"}},groups:[],processes:{Load:{component:"amd/Require"},Mount:{component:"react/Mount"},Listen:{component:"react/ListenEvents"},Props:{component:"react/SetProps"},Errors:{component:"core/Merge"}},connections:[{src:{process:"Load",port:"module"},tgt:{process:"Mount",port:"component"}},{src:{process:"Mount",port:"instance"},tgt:{process:"Listen",port:"instance"}},{src:{process:"Mount",port:"instance"},tgt:{process:"Props",port:"instance"}},{src:{process:"Load",port:"error"},tgt:{process:"Errors",port:"in"}},{src:{process:"Mount",port:"error"},tgt:{process:"Errors",port:"in"}}],properties:{environment:{type:"noflo-browser"}},caseSensitive:!1}},67679:e=>{e.exports={inports:{json:{process:"SendString",port:"string"},in:{process:"SendString",port:"in"}},outports:{out:{process:"ParseJson",port:"out"},error:{process:"ParseJson",port:"error"}},groups:[],processes:{SendString:{component:"strings/SendString"},ParseJson:{component:"strings/ParseJson"}},connections:[{src:{process:"SendString",port:"out"},tgt:{process:"ParseJson",port:"in"}}],properties:{description:"Send the parsed JSON when receiving a packet"},caseSensitive:!1}},38916:(e,t,n)=>{t.transports={websocket:n(52855),iframe:n(75525),opener:n(61545),webrtc:n(32945),base:n(62312)},t.connection=n(60839),t.Signaller=n(64445),t.getTransport=function(e){return t.transports[e]}},60839:(e,t)=>{t.sendGraph=function(e,t,n,r){if((null!=e.properties.environment?e.properties.environment.type:void 0)&&!["all",t.definition.type].includes(e.properties.environment.type))return void n(new Error(`Graph type ${e.properties.environment.type} doesn't match runtime type ${t.definition.type}`));if(!t.canDo("protocol:graph"))return void n(new Error("Runtime doesn't support graph protocol"));const o=e.name||e.properties.id;t.sendGraph("clear",{id:o,name:e.name,main:r,library:e.properties.project,icon:e.properties.icon||"",description:e.properties.description||""}),e.nodes.forEach((e=>{t.sendGraph("addnode",{id:e.id,component:e.component,metadata:e.metadata,graph:o})})),e.edges.forEach((e=>{t.sendGraph("addedge",{src:{node:e.from.node,port:e.from.port},tgt:{node:e.to.node,port:e.to.port},metadata:e.metadata,graph:o})})),e.initializers.forEach((e=>{t.sendGraph("addinitial",{src:{data:e.from.data},tgt:{node:e.to.node,port:e.to.port},metadata:e.metadata,graph:o})})),e.inports&&Object.keys(e.inports).forEach((n=>{const r=e.inports[n];t.sendGraph("addinport",{public:n,node:r.process,port:r.port,graph:o})})),e.outports&&Object.keys(e.outports).forEach((n=>{const r=e.outports[n];t.sendGraph("addoutport",{public:n,node:r.process,port:r.port,graph:o})})),n()}},67832:(e,t,n)=>{var r=n(34155);const{EventEmitter:o}=n(17187),a=()=>!(void 0!==r&&r.execPath&&-1!==r.execPath.indexOf("node"));e.exports={isBrowser:a,EventEmitter:o,WebSocket:a()?window.WebSocket:n(45840).w3cwebsocket}},64445:(e,t,n)=>{const r=n(11227)("fbp-protocol-client:signaller"),{WebSocket:o,EventEmitter:a}=n(67832);e.exports=class extends a{constructor(e,t="client",n="wss://api.flowhub.io"){super(),this.signaller=n,this.role=t,this.id=e,this.connection=null,this.connecting=!1,this.buffer=[]}isConnected(){return!(!this.connection||this.connection.readyState!==this.connection.OPEN)}connect(){if(this.isConnected()||this.connecting)return;r(`${this.id} ${this.role} connecting`);const e=new o(this.signaller);this.connecting=!0,e.addEventListener("open",(()=>{r(`${this.id} ${this.role} connected to ${this.signaller}`),this.connection=e,this.connecting=!1,this.emit("connected"),this.flush()})),e.addEventListener("message",(e=>{this.handleMessage(e)})),e.addEventListener("close",(()=>{this.connection=null,this.connecting=!1,this.emit("disconnected"),r(`${this.id} ${this.role} disconnected`)})),e.addEventListener("error",(e=>{this.connection=null,this.connecting=!1,this.emit("error",e),r(`${this.id} ${this.role} error`,e)}))}signal(e,t={}){const n={id:this.id};this.send(`/to|${e}|/signal|${JSON.stringify(n)}|${JSON.stringify(t)}`)}join(e){const t={id:this.id},n={room:e,id:this.id};this.send(`/announce|${JSON.stringify(t)}|${JSON.stringify(n)}`)}joinReply(e,t){const n={id:this.id},r={room:t,id:this.id};this.send(`/to|${e}|/announce|${JSON.stringify(n)}|${JSON.stringify(r)}`)}send(e){if(!this.isConnected())return r(`${this.id} ${this.role} push buffer`),void this.buffer.push(e);const[t]=e.split("|");r(`${this.id} ${this.role} send ${t}`),this.connection.send(e)}disconnect(){this.isConnected()&&(r(`${this.id} ${this.role} disconnecting`),this.connection.close())}handleMessage(e){const[t,n,o,...a]=e.data.split("|");if("/to"===t){if(n!==this.id)return void r(`${this.id} ${this.role} wrongly-addressed DM, was sent to ${n}`);const t=`${o}|${a.join("|")}`;return void this.handleMessage({...e,data:t})}r(`${this.id} ${this.role} recv ${t}`);let i=null;switch(i=o?JSON.parse(o):JSON.parse(n),t){case"/announce":this.emit("join",i,JSON.parse(n));break;case"/signal":this.emit("signal",i,JSON.parse(n));break;case"/roominfo":break;default:r(`${this.id} ${this.role} unhandled command ${t}`,i)}}flush(){this.buffer.length&&(r(`${this.id} ${this.role} flush buffer`,this.buffer.length),this.buffer.forEach((e=>{this.send(e)})),this.buffer=[])}}},62312:(e,t,n)=>{const r=n(67832);class o extends r.EventEmitter{constructor(e){super(),this.definition=e,this.definition.capabilities||(this.definition.capabilities=[]),this.graph=null}setMain(e){this.graph=e}getType(){return this.definition.protocol}getAddress(){return this.definition.address}canDo(e){return-1!==this.definition.capabilities.indexOf(e)}isConnected(){return!1}connect(){}disconnect(){}reconnect(){return this.disconnect(),this.connect()}start(){if(!this.graph)throw new Error("No graph defined for execution");return this.sendNetwork("start",{graph:this.graph.name||this.graph.properties.id})}stop(){if(!this.graph)throw new Error("No graph defined for execution");return this.sendNetwork("stop",{graph:this.graph.name||this.graph.properties.id})}setParentElement(){}getElement(){}recvMessage(e){switch(this.emit("message",e),e.protocol){case"runtime":return this.recvRuntime(e.command,e.payload);case"graph":return this.recvGraph(e.command,e.payload);case"network":return this.recvNetwork(e.command,e.payload);case"component":return this.recvComponent(e.command,e.payload);case"trace":return this.recvTrace(e.command,e.payload);default:return null}}recvRuntime(e,t){"runtime"===e&&(Object.keys(t).forEach((e=>{const n=t[e];this.definition[e]=n})),this.emit("capabilities",t.capabilities||[])),this.emit("runtime",{command:e,payload:t})}recvComponent(e,t){switch(e){case"error":return void this.emit("network",{command:e,payload:t});default:this.emit("component",{command:e,payload:t})}}recvGraph(e,t){this.emit("graph",{command:e,payload:t})}recvNetwork(e,t){switch(e){case"started":return void this.emit("execution",{running:null==t||null==t.running||t.running,started:null==t||!t.started||t.started});case"stopped":return void this.emit("execution",{running:null!=t&&null!=t.running&&t.running,started:!(null==t||!t.started)&&t.started});case"status":return void this.emit("execution",{running:t.running,started:t.started});case"icon":return void this.emit("icon",t);default:this.emit("network",{command:e,payload:t})}}recvTrace(e,t){this.emit("trace",{command:e,payload:t})}sendRuntime(e,t={}){return this.send("runtime",e,{...t,secret:this.definition.secret})}sendGraph(e,t={}){return this.send("graph",e,{...t,secret:this.definition.secret})}sendNetwork(e,t={}){return this.send("network",e,{...t,secret:this.definition.secret})}sendComponent(e,t={}){return this.send("component",e,{...t,secret:this.definition.secret})}sendTrace(e,t={}){return this.send("trace",e,{...t,secret:this.definition.secret})}send(){}}e.exports=o},75525:(e,t,n)=>{const r=n(62312);e.exports=class extends r{constructor(e){super(e),this.updateIframe=this.updateIframe.bind(this),this.onLoaded=this.onLoaded.bind(this),this.onMessage=this.onMessage.bind(this),this.origin=window.location.origin,this.connecting=!1,this.connected=!1,this.buffer=[],this.iframe=null}getElement(){return this.iframe}isConnected(){return this.connected}setMain(e){this.graph&&this.graph.removeListener("changeProperties",this.updateIframe),e?(e.on("changeProperties",this.updateIframe),super.setMain(e),this.updateIframe()):super.setMain(e)}setParentElement(e){return this.iframe=document.createElement("iframe"),this.iframe.setAttribute("sandbox","allow-scripts allow-same-origin allow-forms"),e.appendChild(this.iframe)}connect(){if(!this.iframe)throw new Error("Unable to connect without a parent element");return this.iframe.addEventListener("load",this.onLoaded,!1),this.connecting=!0,this.emit("status",{online:!1,label:"connecting"}),this.iframe.setAttribute("src",this.getAddress()),this.iframe.id="preview-iframe",window.addEventListener("message",this.onMessage,!1)}updateIframe(){if(!this.iframe||!this.graph)return;const e=this.graph.properties.environment;e&&e.content&&this.send("iframe","setcontent",e.content)}disconnect(){return this.iframe&&this.iframe.removeEventListener("load",this.onLoaded,!1),this.connected=!1,window.removeEventListener("message",this.onMessage,!1),this.emit("status",{online:!1,label:"disconnected"}),this.emit("disconnected")}onLoaded(){let e;this.once("capabilities",(()=>(e&&clearTimeout(e),this.connecting=!1,this.connected=!0,this.emit("status",{online:!0,label:"connected"}),this.emit("connected"),this.updateIframe(),this.flush()))),this.postMessage("runtime","getruntime",{}),e=setTimeout((()=>{this.postMessage("runtime","getruntime",{})}),500)}send(e,t,n){this.connecting?this.buffer.push({protocol:e,command:t,payload:n}):this.postMessage(e,t,n)}postMessage(e,t,n){const r=this.iframe.contentWindow;if(r){try{if("about:blank"===r.location.href)return;if(-1!==r.location.href.indexOf("chrome-extension://"))throw new Error("Use * for IFRAME communications in a Chrome app")}catch(o){return void r.postMessage(JSON.stringify({protocol:e,command:t,payload:n}),"*")}r.postMessage(JSON.stringify({protocol:e,command:t,payload:n}),r.location.href)}}onMessage(e){let t;e.source&&e.source!==this.iframe.contentWindow||("string"==typeof e.data?t=JSON.parse(e.data):({data:t}=e),this.recvMessage(t))}flush(){this.buffer.forEach((e=>{this.postMessage(e.protocol,e.command,e.payload)})),this.buffer=[]}}},61545:(e,t,n)=>{const r=n(62312);e.exports=class extends r{constructor(e){super(e),this.onMessage=this.onMessage.bind(this),this.connecting=!1,this.connected=!1,this.buffer=[]}getElement(){return null}isConnected(){return this.connected}setParentElement(){}connect(){let e;this.connecting=!0,this.emit("status",{online:!1,label:"connecting"}),window.addEventListener("message",this.onMessage,!1),this.once("capabilities",(()=>{e&&clearTimeout(e),this.connecting=!1,this.connected=!0,this.emit("status",{online:!0,label:"connected"}),this.emit("connected"),this.flush()})),this.postMessage("runtime","getruntime",{}),e=setTimeout((()=>{this.postMessage("runtime","getruntime",{})}),500)}updateIframe(){}disconnect(){this.connected=!1,window.removeEventListener("message",this.onMessage,!1),this.emit("status",{online:!1,label:"disconnected"}),this.emit("disconnected")}send(e,t,n){this.connecting?this.buffer.push({protocol:e,command:t,payload:n}):this.postMessage(e,t,n)}postMessage(e,t,n){window.opener&&window.opener.postMessage(JSON.stringify({protocol:e,command:t,payload:n}),"*")}onMessage(e){let t;e.source&&e.source!==window.opener||("string"==typeof e.data?t=JSON.parse(e.data):({data:t}=e),this.recvMessage(t))}flush(){this.buffer.forEach((e=>{this.postMessage(e.protocol,e.command,e.payload)})),this.buffer=[]}}},32945:(e,t,n)=>{const r=n(11227)("fbp-protocol-client:webrtc"),o=n(38853),{v4:a}=n(21614),i=n(62312),{isBrowser:s}=n(67832),c=n(64445);e.exports=class extends i{constructor(e){super(e),this.id=a(),this.handleMessage=this.handleMessage.bind(this),this.signaller=null,this.connecting=!1,this.protocol="webrtc",this.buffer=[],this.peers={}}getElement(){return null}isConnected(){return!!Object.keys(this.peers).filter((e=>this.peers[e].connected)).length}maybeDisconnected(){this.signaller&&!this.signaller.isConnected()&&(this.signaller=null,this.connecting=!1),this.isConnected()||(this.emit("status",{online:!1,label:"disconnected"}),this.emit("disconnected"))}connect(){let e,t;if(this.isConnected()||this.connecting)return;if(this.signaller&&this.signaller.isConnected())return;const o=this.getAddress();-1!==o.indexOf("#")?([t,e]=o.split("#"),"webrtc://"===t&&(t=null)):e=o,t||(t="wss://api.flowhub.io/"),this.signaller=new c(this.id,"client",t);const a={channelName:e,initiator:!0};s()||(a.wrtc=n(29326)),this.signaller.connect(),this.signaller.once("connected",(()=>{this.signaller.join(e)})),this.signaller.on("join",(e=>{this.peers[e.id]||(this.signaller.joinReply(e.id,this.id),this.connectPeer(e,a))})),this.signaller.on("signal",((e,t)=>{const n=this.peers[t.id];n||n.destroyed?(r(`${this.id} received signalling data for peer ${t.id}`),n.signal(e)):r(`${this.id} received signalling data for unknown/destroyed peer ${t.id}`)})),this.signaller.on("error",(e=>{r(`${this.id} signaller errored`,e),this.connecting=!1,this.signaller=null,this.maybeDisconnected(),this.emit("error",e)})),this.signaller.on("disconnected",(()=>{this.signaller=null,this.connecting=!1,this.maybeDisconnected()})),this.connecting=!0}connectPeer(e,t){r(`${this.id} connecting to peer ${e.id}`);const n=new o(t);this.peers[e.id]=n,n.on("signal",(t=>{r(`${this.id} sending signalling data to peer ${e.id}`),this.signaller.signal(e.id,t)})),n.on("connect",(()=>{r(`${this.id} connected to peer ${e.id}`),this.connecting=!1,this.emit("status",{online:!0,label:"connected"}),this.emit("connected"),this.sendRuntime("getruntime",{}),this.flush()})),n.on("data",this.handleMessage),n.on("close",(()=>{r(`${this.id} disconnected from peer ${e.id}`),delete this.peers[e.id],this.maybeDisconnected()})),n.on("error",(t=>{r(`${this.id} peer ${e.id} errored`,t),delete this.peers[e.id],this.maybeDisconnected(),this.emit("error",t)}))}disconnect(){this.connecting=!1,Object.keys(this.peers).forEach((e=>{this.peers[e].destroy(),delete this.peers[e]})),this.signaller&&(this.signaller.disconnect(),this.signaller=null)}send(e,t,n){const r={protocol:e,command:t,payload:n};this.isConnected()?Object.keys(this.peers).forEach((e=>{const t=this.peers[e];t.connected&&t.send(JSON.stringify(r))})):this.buffer.push(r)}handleMessage(e){const t=JSON.parse(e);return this.recvMessage(t)}flush(){this.buffer.forEach((e=>{this.send(e.protocol,e.command,e.payload)})),this.buffer=[]}}},52855:(e,t,n)=>{const r=n(62312),o=n(67832);e.exports=class extends r{constructor(e){super(e),this.handleError=this.handleError.bind(this),this.handleMessage=this.handleMessage.bind(this),this.connecting=!1,this.connection=null,this.protocol="noflo",this.buffer=[],this.container=null}getElement(){if(this.container)return this.container;this.container=document.createElement("div"),this.container.classList.add("preview-container");const e=document.createElement("pre"),t=document.createElement("img");return this.container.appendChild(t),this.container.appendChild(e),this.on("network",(n=>{if("output"!==n.command)return;const r=n.payload;if(null!=r.type&&"previewurl"===r.type){const e=r.url.indexOf(!0)?"&":"?";t.src=`${r.url+e}timestamp=${(new Date).getTime()}`}if(null!=r.message){const t=r.message.replace(/[\u00A0-\u99999<>&]/gim,(e=>`&#${e.charCodeAt(0)};`));e.innerHTML+=`${t}\n`,e.scrollTop=e.scrollHeight}})),this.on("disconnected",(()=>{e.innerHTML=""})),this.container}isConnected(){return this.connection&&!1===this.connecting}connect(){this.connection||this.connecting||(this.protocol?this.connection=new o.WebSocket(this.getAddress(),this.protocol):this.connection=new o.WebSocket(this.getAddress()),this.connection.addEventListener("open",(()=>(this.connecting=!1,this.sendRuntime("getruntime",{}),this.emit("status",{online:!0,label:"connected"}),this.emit("connected"),this.flush())),!1),this.connection.addEventListener("message",this.handleMessage,!1),this.connection.addEventListener("error",this.handleError,!1),this.connection.addEventListener("close",(()=>{this.connection=null,this.emit("status",{online:!1,label:"disconnected"}),this.emit("disconnected")}),!1),this.connecting=!0)}disconnect(){this.connection&&(this.connecting=!1,this.connection.close())}send(e,t,n){this.connecting?this.buffer.push({protocol:e,command:t,payload:n}):this.connection&&this.connection.send(JSON.stringify({protocol:e,command:t,payload:n}))}handleError(e){if("noflo"===this.protocol)return delete this.protocol,this.connecting=!1,this.connection=null,void setTimeout((()=>{this.connect()}),1);this.connection=null,this.connecting=!1;const t=new Error("Connection failed");t.event=e,this.emit("error",t)}handleMessage(e){const t=JSON.parse(e.data);return this.recvMessage(t)}flush(){this.buffer.forEach((e=>{this.send(e.protocol,e.command,e.payload)})),this.buffer=[]}}},13210:(e,t,n)=>{e.exports=function(){"use strict";function e(t,n,r,o){this.message=t,this.expected=n,this.found=r,this.location=o,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,e)}return function(e,t){function n(){this.constructor=e}n.prototype=t.prototype,e.prototype=new n}(e,Error),{SyntaxError:e,parse:function(t){var r,o,a=arguments.length>1?arguments[1]:{},i=this,s={},c={start:dn},u=dn,l=function(){return i.getResult()},d="INPORT=",p={type:"literal",value:"INPORT=",description:'"INPORT="'},h=".",f={type:"literal",value:".",description:'"."'},g=":",m={type:"literal",value:":",description:'":"'},v=function(e,t,n){return i.registerInports(e,t,n)},y="OUTPORT=",b={type:"literal",value:"OUTPORT=",description:'"OUTPORT="'},w=function(e,t,n){return i.registerOutports(e,t,n)},_="DEFAULT_INPORT=",x={type:"literal",value:"DEFAULT_INPORT=",description:'"DEFAULT_INPORT="'},k=function(e){yr=e},P="DEFAULT_OUTPORT=",S={type:"literal",value:"DEFAULT_OUTPORT=",description:'"DEFAULT_OUTPORT="'},C=function(e){br=e},D=function(e){return i.registerAnnotation(e[0],e[1])},E=function(e){return i.registerEdges(e)},j=",",A={type:"literal",value:",",description:'","'},I=/^[\n\r\u2028\u2029]/,O={type:"class",value:"[\\n\\r\\u2028\\u2029]",description:"[\\n\\r\\u2028\\u2029]"},q="#",R={type:"literal",value:"#",description:'"#"'},T="->",B={type:"literal",value:"->",description:'"->"'},M=function(e,t){return[e,t]},N=function(e,t,n){return[{tgt:Sr(t,e)},{src:Cr(t,n)}]},L=function(e,t){return{src:Cr(e,t)}},F=function(e,t){return{tgt:Sr(t,e)}},G="'",U={type:"literal",value:"'",description:'"\'"'},z=function(e){return{data:e.join("")}},W=function(e){return{data:e}},$=function(e){return e},V=/^[a-zA-Z_]/,H={type:"class",value:"[a-zA-Z_]",description:"[a-zA-Z_]"},J=/^[a-zA-Z0-9_\-]/,Q={type:"class",value:"[a-zA-Z0-9_\\-]",description:"[a-zA-Z0-9_\\-]"},X=function(e){return kr(e)},Y=function(e,t){return i.addNode(e,t),e},K=function(e){return i.addAnonymousNode(e,an().start.offset)},Z="(",ee={type:"literal",value:"(",description:'"("'},te=/^[a-zA-Z\/\-0-9_]/,ne={type:"class",value:"[a-zA-Z/\\-0-9_]",description:"[a-zA-Z/\\-0-9_]"},re=")",oe={type:"literal",value:")",description:'")"'},ae=function(e,t){var n={};return n.comp=e?e.join(""):"",t&&(n.meta=t.join("").split(",")),n},ie=/^[a-zA-Z\/=_,0-9]/,se={type:"class",value:"[a-zA-Z/=_,0-9]",description:"[a-zA-Z/=_,0-9]"},ce=function(e){return e},ue="@",le={type:"literal",value:"@",description:'"@"'},de=/^[a-zA-Z0-9\-_]/,pe={type:"class",value:"[a-zA-Z0-9\\-_]",description:"[a-zA-Z0-9\\-_]"},he=/^[a-zA-Z0-9\-_ .]/,fe={type:"class",value:"[a-zA-Z0-9\\-_ \\.]",description:"[a-zA-Z0-9\\-_ \\.]"},ge=function(e,t){return[e.join(""),t.join("")]},me=function(e,t){return{port:a.caseSensitive?e:e.toLowerCase(),index:null!=t?t:void 0}},ve=function(e){return e},ye=/^[a-zA-Z.0-9_]/,be={type:"class",value:"[a-zA-Z.0-9_]",description:"[a-zA-Z.0-9_]"},we=function(e){return kr(e)},_e="[",xe={type:"literal",value:"[",description:'"["'},ke=/^[0-9]/,Pe={type:"class",value:"[0-9]",description:"[0-9]"},Se="]",Ce={type:"literal",value:"]",description:'"]"'},De=function(e){return parseInt(e.join(""))},Ee=/^[^\n\r\u2028\u2029]/,je={type:"class",value:"[^\\n\\r\\u2028\\u2029]",description:"[^\\n\\r\\u2028\\u2029]"},Ae=/^[\\]/,Ie={type:"class",value:"[\\\\]",description:"[\\\\]"},Oe=/^[']/,qe={type:"class",value:"[']",description:"[']"},Re=function(){return"'"},Te=/^[^']/,Be={type:"class",value:"[^']",description:"[^']"},Me=" ",Ne={type:"literal",value:" ",description:'" "'},Le=function(e){return e},Fe="{",Ge={type:"literal",value:"{",description:'"{"'},Ue="}",ze={type:"literal",value:"}",description:'"}"'},We={type:"other",description:"whitespace"},$e=/^[ \t\n\r]/,Ve={type:"class",value:"[ \\t\\n\\r]",description:"[ \\t\\n\\r]"},He="false",Je={type:"literal",value:"false",description:'"false"'},Qe=function(){return!1},Xe="null",Ye={type:"literal",value:"null",description:'"null"'},Ke=function(){return null},Ze="true",et={type:"literal",value:"true",description:'"true"'},tt=function(){return!0},nt=function(e,t){return t},rt=function(e,t){var n,r={};for(r[e.name]=e.value,n=0;n<t.length;n++)r[t[n].name]=t[n].value;return r},ot=function(e){return null!==e?e:{}},at=function(e,t){return{name:e,value:t}},it=function(e,t){return t},st=function(e,t){return[e].concat(t)},ct=function(e){return null!==e?e:[]},ut={type:"other",description:"number"},lt=function(){return parseFloat(on())},dt=/^[1-9]/,pt={type:"class",value:"[1-9]",description:"[1-9]"},ht=/^[eE]/,ft={type:"class",value:"[eE]",description:"[eE]"},gt="-",mt={type:"literal",value:"-",description:'"-"'},vt="+",yt={type:"literal",value:"+",description:'"+"'},bt="0",wt={type:"literal",value:"0",description:'"0"'},_t={type:"other",description:"string"},xt=function(e){return e.join("")},kt='"',Pt={type:"literal",value:'"',description:'"\\""'},St="\\",Ct={type:"literal",value:"\\",description:'"\\\\"'},Dt="/",Et={type:"literal",value:"/",description:'"/"'},jt="b",At={type:"literal",value:"b",description:'"b"'},It=function(){return"\b"},Ot="f",qt={type:"literal",value:"f",description:'"f"'},Rt=function(){return"\f"},Tt="n",Bt={type:"literal",value:"n",description:'"n"'},Mt=function(){return"\n"},Nt="r",Lt={type:"literal",value:"r",description:'"r"'},Ft=function(){return"\r"},Gt="t",Ut={type:"literal",value:"t",description:'"t"'},zt=function(){return"\t"},Wt="u",$t={type:"literal",value:"u",description:'"u"'},Vt=function(e){return String.fromCharCode(parseInt(e,16))},Ht=function(e){return e},Jt=/^[^\0-\x1F"\\]/,Qt={type:"class",value:"[^\\0-\\x1F\\x22\\x5C]",description:"[^\\0-\\x1F\\x22\\x5C]"},Xt=/^[0-9a-f]/i,Yt={type:"class",value:"[0-9a-f]i",description:"[0-9a-f]i"},Kt=0,Zt=0,en=[{line:1,column:1,seenCR:!1}],tn=0,nn=[],rn=0;if("startRule"in a){if(!(a.startRule in c))throw new Error("Can't start parsing from rule \""+a.startRule+'".');u=c[a.startRule]}function on(){return t.substring(Zt,Kt)}function an(){return cn(Zt,Kt)}function sn(e){var n,r,o=en[e];if(o)return o;for(n=e-1;!en[n];)n--;for(o={line:(o=en[n]).line,column:o.column,seenCR:o.seenCR};n<e;)"\n"===(r=t.charAt(n))?(o.seenCR||o.line++,o.column=1,o.seenCR=!1):"\r"===r||"\u2028"===r||"\u2029"===r?(o.line++,o.column=1,o.seenCR=!0):(o.column++,o.seenCR=!1),n++;return en[e]=o,o}function cn(e,t){var n=sn(e),r=sn(t);return{start:{offset:e,line:n.line,column:n.column},end:{offset:t,line:r.line,column:r.column}}}function un(e){Kt<tn||(Kt>tn&&(tn=Kt,nn=[]),nn.push(e))}function ln(t,n,r,o){return null!==n&&function(e){var t=1;for(e.sort((function(e,t){return e.description<t.description?-1:e.description>t.description?1:0}));t<e.length;)e[t-1]===e[t]?e.splice(t,1):t++}(n),new e(null!==t?t:function(e,t){var n,r=new Array(e.length);for(n=0;n<e.length;n++)r[n]=e[n].description;return"Expected "+(e.length>1?r.slice(0,-1).join(", ")+" or "+r[e.length-1]:r[0])+" but "+(t?'"'+function(e){function t(e){return e.charCodeAt(0).toString(16).toUpperCase()}return e.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\x08/g,"\\b").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\f/g,"\\f").replace(/\r/g,"\\r").replace(/[\x00-\x07\x0B\x0E\x0F]/g,(function(e){return"\\x0"+t(e)})).replace(/[\x10-\x1F\x80-\xFF]/g,(function(e){return"\\x"+t(e)})).replace(/[\u0100-\u0FFF]/g,(function(e){return"\\u0"+t(e)})).replace(/[\u1000-\uFFFF]/g,(function(e){return"\\u"+t(e)}))}(t)+'"':"end of input")+" found."}(n,r),n,r,o)}function dn(){var e,t,n;for(e=Kt,t=[],n=pn();n!==s;)t.push(n),n=pn();return t!==s&&(Zt=e,t=l()),t}function pn(){var e,n,r,o,a,i,c,u,l;return e=Kt,(n=Nn())!==s?(t.substr(Kt,7)===d?(r=d,Kt+=7):(r=s,0===rn&&un(p)),r!==s&&(o=kn())!==s?(46===t.charCodeAt(Kt)?(a=h,Kt++):(a=s,0===rn&&un(f)),a!==s&&(i=Rn())!==s?(58===t.charCodeAt(Kt)?(c=g,Kt++):(c=s,0===rn&&un(m)),c!==s&&(u=Rn())!==s&&Nn()!==s?((l=hn())===s&&(l=null),l!==s?(Zt=e,e=n=v(o,i,u)):(Kt=e,e=s)):(Kt=e,e=s)):(Kt=e,e=s)):(Kt=e,e=s)):(Kt=e,e=s),e===s&&(e=Kt,(n=Nn())!==s?(t.substr(Kt,8)===y?(r=y,Kt+=8):(r=s,0===rn&&un(b)),r!==s&&(o=kn())!==s?(46===t.charCodeAt(Kt)?(a=h,Kt++):(a=s,0===rn&&un(f)),a!==s&&(i=Rn())!==s?(58===t.charCodeAt(Kt)?(c=g,Kt++):(c=s,0===rn&&un(m)),c!==s&&(u=Rn())!==s&&Nn()!==s?((l=hn())===s&&(l=null),l!==s?(Zt=e,e=n=w(o,i,u)):(Kt=e,e=s)):(Kt=e,e=s)):(Kt=e,e=s)):(Kt=e,e=s)):(Kt=e,e=s),e===s&&(e=Kt,(n=Nn())!==s?(t.substr(Kt,15)===_?(r=_,Kt+=15):(r=s,0===rn&&un(x)),r!==s&&(o=Rn())!==s&&(a=Nn())!==s?((i=hn())===s&&(i=null),i!==s?(Zt=e,e=n=k(o)):(Kt=e,e=s)):(Kt=e,e=s)):(Kt=e,e=s),e===s&&(e=Kt,(n=Nn())!==s?(t.substr(Kt,16)===P?(r=P,Kt+=16):(r=s,0===rn&&un(S)),r!==s&&(o=Rn())!==s&&(a=Nn())!==s?((i=hn())===s&&(i=null),i!==s?(Zt=e,e=n=C(o)):(Kt=e,e=s)):(Kt=e,e=s)):(Kt=e,e=s),e===s&&(e=Kt,(n=An())!==s&&(r=fn())!==s?(Zt=e,e=n=D(n)):(Kt=e,e=s),e===s&&(e=Kt,(n=gn())!==s?((r=fn())===s&&(r=null),r!==s?e=n=[n,r]:(Kt=e,e=s)):(Kt=e,e=s),e===s&&(e=Kt,(n=Nn())!==s&&(r=fn())!==s?e=n=[n,r]:(Kt=e,e=s),e===s&&(e=Kt,(n=Nn())!==s&&(r=mn())!==s&&(o=Nn())!==s?((a=hn())===s&&(a=null),a!==s?(Zt=e,e=n=E(r)):(Kt=e,e=s)):(Kt=e,e=s)))))))),e}function hn(){var e,n,r,o,a;return e=Kt,(n=Nn())!==s?(44===t.charCodeAt(Kt)?(r=j,Kt++):(r=s,0===rn&&un(A)),r===s&&(r=null),r!==s?((o=gn())===s&&(o=null),o!==s?((a=fn())===s&&(a=null),a!==s?e=n=[n,r,o,a]:(Kt=e,e=s)):(Kt=e,e=s)):(Kt=e,e=s)):(Kt=e,e=s),e}function fn(){var e;return I.test(t.charAt(Kt))?(e=t.charAt(Kt),Kt++):(e=s,0===rn&&un(O)),e}function gn(){var e,n,r,o,a;if(e=Kt,(n=Nn())!==s)if(35===t.charCodeAt(Kt)?(r=q,Kt++):(r=s,0===rn&&un(R)),r!==s){for(o=[],a=Bn();a!==s;)o.push(a),a=Bn();o!==s?e=n=[n,r,o]:(Kt=e,e=s)}else Kt=e,e=s;else Kt=e,e=s;return e}function mn(){var e,n,r,o;return e=Kt,(n=vn())!==s&&Nn()!==s?(t.substr(Kt,2)===T?(r=T,Kt+=2):(r=s,0===rn&&un(B)),r!==s&&Nn()!==s&&(o=mn())!==s?(Zt=e,e=n=M(n,o)):(Kt=e,e=s)):(Kt=e,e=s),e===s&&(e=yn()),e}function vn(){var e;return(e=bn())===s&&(e=wn())===s&&(e=xn()),e}function yn(){var e;return(e=_n())===s&&(e=bn()),e}function bn(){var e,t,n,r;return e=Kt,(t=On())!==s&&(n=kn())!==s&&(r=qn())!==s?(Zt=e,e=t=N(t,n,r)):(Kt=e,e=s),e===s&&(e=Kt,(t=On())===s&&(t=null),t!==s&&(n=Dn())!==s?((r=qn())===s&&(r=null),r!==s?(Zt=e,e=t=N(t,n,r)):(Kt=e,e=s)):(Kt=e,e=s)),e}function wn(){var e,t,n;return e=Kt,(t=kn())!==s?((n=qn())===s&&(n=null),n!==s?(Zt=e,e=t=L(t,n)):(Kt=e,e=s)):(Kt=e,e=s),e}function _n(){var e,t,n;return e=Kt,(t=On())===s&&(t=null),t!==s&&(n=kn())!==s?(Zt=e,e=t=F(t,n)):(Kt=e,e=s),e}function xn(){var e,n,r,o;if(e=Kt,39===t.charCodeAt(Kt)?(n=G,Kt++):(n=s,0===rn&&un(U)),n!==s){for(r=[],o=Mn();o!==s;)r.push(o),o=Mn();r!==s?(39===t.charCodeAt(Kt)?(o=G,Kt++):(o=s,0===rn&&un(U)),o!==s?(Zt=e,e=n=z(r)):(Kt=e,e=s)):(Kt=e,e=s)}else Kt=e,e=s;return e===s&&(e=Kt,(n=Fn())!==s&&(Zt=e,n=W(n)),e=n),e}function kn(){var e,t;return e=Kt,(t=Sn())!==s&&(Zt=e,t=$(t)),(e=t)===s&&(e=Kt,(t=Pn())!==s&&(Zt=e,t=$(t)),(e=t)===s&&(e=Kt,(t=Cn())!==s&&(Zt=e,t=$(t)),e=t)),e}function Pn(){var e,n,r,o,a;if(e=Kt,n=Kt,V.test(t.charAt(Kt))?(r=t.charAt(Kt),Kt++):(r=s,0===rn&&un(H)),r!==s){for(o=[],J.test(t.charAt(Kt))?(a=t.charAt(Kt),Kt++):(a=s,0===rn&&un(Q));a!==s;)o.push(a),J.test(t.charAt(Kt))?(a=t.charAt(Kt),Kt++):(a=s,0===rn&&un(Q));o!==s?n=r=[r,o]:(Kt=n,n=s)}else Kt=n,n=s;return n!==s&&(Zt=e,n=X(n)),n}function Sn(){var e,t,n;return e=Kt,(t=Pn())!==s&&(n=En())!==s?(Zt=e,e=t=Y(t,n)):(Kt=e,e=s),e}function Cn(){var e,t;return e=Kt,(t=En())!==s&&(Zt=e,t=K(t)),t}function Dn(){var e;return(e=Sn())===s&&(e=Cn()),e}function En(){var e,n,r,o,a;if(e=Kt,40===t.charCodeAt(Kt)?(n=Z,Kt++):(n=s,0===rn&&un(ee)),n!==s){for(r=[],te.test(t.charAt(Kt))?(o=t.charAt(Kt),Kt++):(o=s,0===rn&&un(ne));o!==s;)r.push(o),te.test(t.charAt(Kt))?(o=t.charAt(Kt),Kt++):(o=s,0===rn&&un(ne));r===s&&(r=null),r!==s?((o=jn())===s&&(o=null),o!==s?(41===t.charCodeAt(Kt)?(a=re,Kt++):(a=s,0===rn&&un(oe)),a!==s?(Zt=e,e=n=ae(r,o)):(Kt=e,e=s)):(Kt=e,e=s)):(Kt=e,e=s)}else Kt=e,e=s;return e}function jn(){var e,n,r,o;if(e=Kt,58===t.charCodeAt(Kt)?(n=g,Kt++):(n=s,0===rn&&un(m)),n!==s){if(r=[],ie.test(t.charAt(Kt))?(o=t.charAt(Kt),Kt++):(o=s,0===rn&&un(se)),o!==s)for(;o!==s;)r.push(o),ie.test(t.charAt(Kt))?(o=t.charAt(Kt),Kt++):(o=s,0===rn&&un(se));else r=s;r!==s?(Zt=e,e=n=ce(r)):(Kt=e,e=s)}else Kt=e,e=s;return e}function An(){var e,n,r,o,a,i,c;if(e=Kt,35===t.charCodeAt(Kt)?(n=q,Kt++):(n=s,0===rn&&un(R)),n!==s)if(Ln()!==s)if(64===t.charCodeAt(Kt)?(r=ue,Kt++):(r=s,0===rn&&un(le)),r!==s){if(o=[],de.test(t.charAt(Kt))?(a=t.charAt(Kt),Kt++):(a=s,0===rn&&un(pe)),a!==s)for(;a!==s;)o.push(a),de.test(t.charAt(Kt))?(a=t.charAt(Kt),Kt++):(a=s,0===rn&&un(pe));else o=s;if(o!==s)if((a=Ln())!==s){if(i=[],he.test(t.charAt(Kt))?(c=t.charAt(Kt),Kt++):(c=s,0===rn&&un(fe)),c!==s)for(;c!==s;)i.push(c),he.test(t.charAt(Kt))?(c=t.charAt(Kt),Kt++):(c=s,0===rn&&un(fe));else i=s;i!==s?(Zt=e,e=n=ge(o,i)):(Kt=e,e=s)}else Kt=e,e=s;else Kt=e,e=s}else Kt=e,e=s;else Kt=e,e=s;else Kt=e,e=s;return e}function In(){var e,t,n;return e=Kt,(t=Rn())!==s?((n=Tn())===s&&(n=null),n!==s?(Zt=e,e=t=me(t,n)):(Kt=e,e=s)):(Kt=e,e=s),e}function On(){var e,t;return e=Kt,(t=In())!==s&&Ln()!==s?(Zt=e,e=t=ve(t)):(Kt=e,e=s),e}function qn(){var e,t;return e=Kt,Ln()!==s&&(t=In())!==s?(Zt=e,e=ve(t)):(Kt=e,e=s),e}function Rn(){var e,n,r,o,a;if(e=Kt,n=Kt,V.test(t.charAt(Kt))?(r=t.charAt(Kt),Kt++):(r=s,0===rn&&un(H)),r!==s){for(o=[],ye.test(t.charAt(Kt))?(a=t.charAt(Kt),Kt++):(a=s,0===rn&&un(be));a!==s;)o.push(a),ye.test(t.charAt(Kt))?(a=t.charAt(Kt),Kt++):(a=s,0===rn&&un(be));o!==s?n=r=[r,o]:(Kt=n,n=s)}else Kt=n,n=s;return n!==s&&(Zt=e,n=we(n)),n}function Tn(){var e,n,r,o;if(e=Kt,91===t.charCodeAt(Kt)?(n=_e,Kt++):(n=s,0===rn&&un(xe)),n!==s){if(r=[],ke.test(t.charAt(Kt))?(o=t.charAt(Kt),Kt++):(o=s,0===rn&&un(Pe)),o!==s)for(;o!==s;)r.push(o),ke.test(t.charAt(Kt))?(o=t.charAt(Kt),Kt++):(o=s,0===rn&&un(Pe));else r=s;r!==s?(93===t.charCodeAt(Kt)?(o=Se,Kt++):(o=s,0===rn&&un(Ce)),o!==s?(Zt=e,e=n=De(r)):(Kt=e,e=s)):(Kt=e,e=s)}else Kt=e,e=s;return e}function Bn(){var e;return Ee.test(t.charAt(Kt))?(e=t.charAt(Kt),Kt++):(e=s,0===rn&&un(je)),e}function Mn(){var e,n,r;return e=Kt,Ae.test(t.charAt(Kt))?(n=t.charAt(Kt),Kt++):(n=s,0===rn&&un(Ie)),n!==s?(Oe.test(t.charAt(Kt))?(r=t.charAt(Kt),Kt++):(r=s,0===rn&&un(qe)),r!==s?(Zt=e,e=n=Re()):(Kt=e,e=s)):(Kt=e,e=s),e===s&&(Te.test(t.charAt(Kt))?(e=t.charAt(Kt),Kt++):(e=s,0===rn&&un(Be))),e}function Nn(){var e,n;for(e=[],32===t.charCodeAt(Kt)?(n=Me,Kt++):(n=s,0===rn&&un(Ne));n!==s;)e.push(n),32===t.charCodeAt(Kt)?(n=Me,Kt++):(n=s,0===rn&&un(Ne));return e===s&&(e=null),e}function Ln(){var e,n;if(e=[],32===t.charCodeAt(Kt)?(n=Me,Kt++):(n=s,0===rn&&un(Ne)),n!==s)for(;n!==s;)e.push(n),32===t.charCodeAt(Kt)?(n=Me,Kt++):(n=s,0===rn&&un(Ne));else e=s;return e}function Fn(){var e,t;return e=Kt,Hn()!==s&&(t=Jn())!==s&&Hn()!==s?(Zt=e,e=Le(t)):(Kt=e,e=s),e}function Gn(){var e,n,r,o;return e=Kt,(n=Hn())!==s?(91===t.charCodeAt(Kt)?(r=_e,Kt++):(r=s,0===rn&&un(xe)),r!==s&&(o=Hn())!==s?e=n=[n,r,o]:(Kt=e,e=s)):(Kt=e,e=s),e}function Un(){var e,n,r,o;return e=Kt,(n=Hn())!==s?(123===t.charCodeAt(Kt)?(r=Fe,Kt++):(r=s,0===rn&&un(Ge)),r!==s&&(o=Hn())!==s?e=n=[n,r,o]:(Kt=e,e=s)):(Kt=e,e=s),e}function zn(){var e,n,r,o;return e=Kt,(n=Hn())!==s?(93===t.charCodeAt(Kt)?(r=Se,Kt++):(r=s,0===rn&&un(Ce)),r!==s&&(o=Hn())!==s?e=n=[n,r,o]:(Kt=e,e=s)):(Kt=e,e=s),e}function Wn(){var e,n,r,o;return e=Kt,(n=Hn())!==s?(125===t.charCodeAt(Kt)?(r=Ue,Kt++):(r=s,0===rn&&un(ze)),r!==s&&(o=Hn())!==s?e=n=[n,r,o]:(Kt=e,e=s)):(Kt=e,e=s),e}function $n(){var e,n,r,o;return e=Kt,(n=Hn())!==s?(58===t.charCodeAt(Kt)?(r=g,Kt++):(r=s,0===rn&&un(m)),r!==s&&(o=Hn())!==s?e=n=[n,r,o]:(Kt=e,e=s)):(Kt=e,e=s),e}function Vn(){var e,n,r,o;return e=Kt,(n=Hn())!==s?(44===t.charCodeAt(Kt)?(r=j,Kt++):(r=s,0===rn&&un(A)),r!==s&&(o=Hn())!==s?e=n=[n,r,o]:(Kt=e,e=s)):(Kt=e,e=s),e}function Hn(){var e,n;for(rn++,e=[],$e.test(t.charAt(Kt))?(n=t.charAt(Kt),Kt++):(n=s,0===rn&&un(Ve));n!==s;)e.push(n),$e.test(t.charAt(Kt))?(n=t.charAt(Kt),Kt++):(n=s,0===rn&&un(Ve));return rn--,e===s&&(n=s,0===rn&&un(We)),e}function Jn(){var e;return(e=Qn())===s&&(e=Xn())===s&&(e=Yn())===s&&(e=Kn())===s&&(e=er())===s&&(e=tr())===s&&(e=dr()),e}function Qn(){var e,n;return e=Kt,t.substr(Kt,5)===He?(n=He,Kt+=5):(n=s,0===rn&&un(Je)),n!==s&&(Zt=e,n=Qe()),n}function Xn(){var e,n;return e=Kt,t.substr(Kt,4)===Xe?(n=Xe,Kt+=4):(n=s,0===rn&&un(Ye)),n!==s&&(Zt=e,n=Ke()),n}function Yn(){var e,n;return e=Kt,t.substr(Kt,4)===Ze?(n=Ze,Kt+=4):(n=s,0===rn&&un(et)),n!==s&&(Zt=e,n=tt()),n}function Kn(){var e,t,n,r,o,a;if(e=Kt,Un()!==s){if(t=Kt,(n=Zn())!==s){for(r=[],o=Kt,Vn()!==s&&(a=Zn())!==s?(Zt=o,o=nt(n,a)):(Kt=o,o=s);o!==s;)r.push(o),o=Kt,Vn()!==s&&(a=Zn())!==s?(Zt=o,o=nt(n,a)):(Kt=o,o=s);r!==s?(Zt=t,t=n=rt(n,r)):(Kt=t,t=s)}else Kt=t,t=s;t===s&&(t=null),t!==s&&(n=Wn())!==s?(Zt=e,e=ot(t)):(Kt=e,e=s)}else Kt=e,e=s;return e}function Zn(){var e,t,n;return e=Kt,(t=dr())!==s&&$n()!==s&&(n=Jn())!==s?(Zt=e,e=t=at(t,n)):(Kt=e,e=s),e}function er(){var e,t,n,r,o,a;if(e=Kt,Gn()!==s){if(t=Kt,(n=Jn())!==s){for(r=[],o=Kt,Vn()!==s&&(a=Jn())!==s?(Zt=o,o=it(n,a)):(Kt=o,o=s);o!==s;)r.push(o),o=Kt,Vn()!==s&&(a=Jn())!==s?(Zt=o,o=it(n,a)):(Kt=o,o=s);r!==s?(Zt=t,t=n=st(n,r)):(Kt=t,t=s)}else Kt=t,t=s;t===s&&(t=null),t!==s&&(n=zn())!==s?(Zt=e,e=ct(t)):(Kt=e,e=s)}else Kt=e,e=s;return e}function tr(){var e,t,n,r;return rn++,e=Kt,(t=cr())===s&&(t=null),t!==s&&sr()!==s?((n=ir())===s&&(n=null),n!==s?((r=ar())===s&&(r=null),r!==s?(Zt=e,e=t=lt()):(Kt=e,e=s)):(Kt=e,e=s)):(Kt=e,e=s),rn--,e===s&&(t=s,0===rn&&un(ut)),e}function nr(){var e;return 46===t.charCodeAt(Kt)?(e=h,Kt++):(e=s,0===rn&&un(f)),e}function rr(){var e;return dt.test(t.charAt(Kt))?(e=t.charAt(Kt),Kt++):(e=s,0===rn&&un(pt)),e}function or(){var e;return ht.test(t.charAt(Kt))?(e=t.charAt(Kt),Kt++):(e=s,0===rn&&un(ft)),e}function ar(){var e,t,n,r,o;if(e=Kt,(t=or())!==s)if((n=cr())===s&&(n=ur()),n===s&&(n=null),n!==s){if(r=[],(o=mr())!==s)for(;o!==s;)r.push(o),o=mr();else r=s;r!==s?e=t=[t,n,r]:(Kt=e,e=s)}else Kt=e,e=s;else Kt=e,e=s;return e}function ir(){var e,t,n,r;if(e=Kt,(t=nr())!==s){if(n=[],(r=mr())!==s)for(;r!==s;)n.push(r),r=mr();else n=s;n!==s?e=t=[t,n]:(Kt=e,e=s)}else Kt=e,e=s;return e}function sr(){var e,t,n,r;if((e=lr())===s)if(e=Kt,(t=rr())!==s){for(n=[],r=mr();r!==s;)n.push(r),r=mr();n!==s?e=t=[t,n]:(Kt=e,e=s)}else Kt=e,e=s;return e}function cr(){var e;return 45===t.charCodeAt(Kt)?(e=gt,Kt++):(e=s,0===rn&&un(mt)),e}function ur(){var e;return 43===t.charCodeAt(Kt)?(e=vt,Kt++):(e=s,0===rn&&un(yt)),e}function lr(){var e;return 48===t.charCodeAt(Kt)?(e=bt,Kt++):(e=s,0===rn&&un(wt)),e}function dr(){var e,t,n;if(rn++,e=Kt,fr()!==s){for(t=[],n=pr();n!==s;)t.push(n),n=pr();t!==s&&(n=fr())!==s?(Zt=e,e=xt(t)):(Kt=e,e=s)}else Kt=e,e=s;return rn--,e===s&&0===rn&&un(_t),e}function pr(){var e,n,r,o,a,i,c,u,l;return(e=gr())===s&&(e=Kt,hr()!==s?(34===t.charCodeAt(Kt)?(n=kt,Kt++):(n=s,0===rn&&un(Pt)),n===s&&(92===t.charCodeAt(Kt)?(n=St,Kt++):(n=s,0===rn&&un(Ct)),n===s&&(47===t.charCodeAt(Kt)?(n=Dt,Kt++):(n=s,0===rn&&un(Et)),n===s&&(n=Kt,98===t.charCodeAt(Kt)?(r=jt,Kt++):(r=s,0===rn&&un(At)),r!==s&&(Zt=n,r=It()),(n=r)===s&&(n=Kt,102===t.charCodeAt(Kt)?(r=Ot,Kt++):(r=s,0===rn&&un(qt)),r!==s&&(Zt=n,r=Rt()),(n=r)===s&&(n=Kt,110===t.charCodeAt(Kt)?(r=Tt,Kt++):(r=s,0===rn&&un(Bt)),r!==s&&(Zt=n,r=Mt()),(n=r)===s&&(n=Kt,114===t.charCodeAt(Kt)?(r=Nt,Kt++):(r=s,0===rn&&un(Lt)),r!==s&&(Zt=n,r=Ft()),(n=r)===s&&(n=Kt,116===t.charCodeAt(Kt)?(r=Gt,Kt++):(r=s,0===rn&&un(Ut)),r!==s&&(Zt=n,r=zt()),(n=r)===s&&(n=Kt,117===t.charCodeAt(Kt)?(r=Wt,Kt++):(r=s,0===rn&&un($t)),r!==s?(o=Kt,a=Kt,(i=vr())!==s&&(c=vr())!==s&&(u=vr())!==s&&(l=vr())!==s?a=i=[i,c,u,l]:(Kt=a,a=s),(o=a!==s?t.substring(o,Kt):a)!==s?(Zt=n,n=r=Vt(o)):(Kt=n,n=s)):(Kt=n,n=s))))))))),n!==s?(Zt=e,e=Ht(n)):(Kt=e,e=s)):(Kt=e,e=s)),e}function hr(){var e;return 92===t.charCodeAt(Kt)?(e=St,Kt++):(e=s,0===rn&&un(Ct)),e}function fr(){var e;return 34===t.charCodeAt(Kt)?(e=kt,Kt++):(e=s,0===rn&&un(Pt)),e}function gr(){var e;return Jt.test(t.charAt(Kt))?(e=t.charAt(Kt),Kt++):(e=s,0===rn&&un(Qt)),e}function mr(){var e;return ke.test(t.charAt(Kt))?(e=t.charAt(Kt),Kt++):(e=s,0===rn&&un(Pe)),e}function vr(){var e;return Xt.test(t.charAt(Kt))?(e=t.charAt(Kt),Kt++):(e=s,0===rn&&un(Yt)),e}var yr="IN",br="OUT";delete(i=this).properties,delete i.inports,delete i.outports,delete i.groups,i.edges=[],o={},i.validateContents=function(e,t){e.processes&&Object.keys(e.processes).forEach((function(t){if(!e.processes[t].component)throw new Error('Node "'+t+'" does not have a component defined')})),e.inports&&Object.keys(e.inports).forEach((function(t){var n=e.inports[t];if(!e.processes[n.process])throw new Error('Inport "'+t+'" is connected to an undefined target node "'+n.process+'"')})),e.outports&&Object.keys(e.outports).forEach((function(t){var n=e.outports[t];if(!e.processes[n.process])throw new Error('Outport "'+t+'" is connected to an undefined source node "'+n.process+'"')})),e.connections&&e.connections.forEach((function(t){if(t.tgt&&!e.processes[t.tgt.process]){if(t.data)throw new Error('IIP containing "'+t.data+'" is connected to an undefined target node "'+t.tgt.process+'"');throw new Error('Edge from "'+t.src.process+'" port "'+t.src.port+'" is connected to an undefined target node "'+t.tgt.process+'"')}if(t.src&&!e.processes[t.src.process])throw new Error('Edge to "'+t.tgt.process+'" port "'+t.tgt.port+'" is connected to an undefined source node "'+t.src.process+'"')}))},i.addNode=function(e,t){if(o[e]||(o[e]={}),t.comp&&(o[e].component=t.comp),t.meta){for(var n={},r=0;r<t.meta.length;r++){var a=t.meta[r].split("=");1===a.length&&(a=["routes",a[0]]);var i=a[0],s=a[1];"x"!==i&&"y"!==i||(s=parseFloat(s)),n[i]=s}o[e].metadata=n}};var wr={},_r={};i.addAnonymousNode=function(e,t){if(!_r[t]){var n=e.comp.replace(/[^a-zA-Z0-9]+/,"_");wr[n]=(wr[n]||0)+1,_r[t]="_"+n+"_"+wr[n],this.addNode(_r[t],e)}return _r[t]},i.getResult=function(){var e={inports:i.inports||{},outports:i.outports||{},groups:i.groups||[],processes:o||{},connections:i.processEdges()};i.properties&&(e.properties=i.properties),e.caseSensitive=a.caseSensitive||!1;var t=i.validateSchema;if(void 0!==a.validateSchema&&(t=a.validateSchema),t){if(void 0===r)var r=n(99018);var s=n(77731),c=r.validateMultiple(e,s);if(!c.valid)throw new Error("fbp: Did not validate againt graph schema:\n"+JSON.stringify(c.errors,null,2))}return(void 0===a.validateContents||a.validateContents)&&i.validateContents(e),e};var xr=function(e,t){for(var n=-1,r=e?e.length:0,o=[];++n<r;){var a=e[n];a instanceof Array?Array.prototype.push.apply(o,t?a:xr(a)):o.push(a)}return o};function kr(e){return e[0]+e[1].join("")}function Pr(e,t,n){a.caseSensitive||(n=n.toLowerCase());var r={process:e,port:t?t.port:n};return t&&null!=t.index&&(r.index=t.index),r}function Sr(e,t){return Pr(e,t,yr)}function Cr(e,t){return Pr(e,t,br)}if(i.registerAnnotation=function(e,t){if(i.properties||(i.properties={}),"runtime"===e)return i.properties.environment={},void(i.properties.environment.type=t);i.properties[e]=t},i.registerInports=function(e,t,n){i.inports||(i.inports={}),a.caseSensitive||(n=n.toLowerCase(),t=t.toLowerCase()),i.inports[n]={process:e,port:t}},i.registerOutports=function(e,t,n){i.outports||(i.outports={}),a.caseSensitive||(n=n.toLowerCase(),t=t.toLowerCase()),i.outports[n]={process:e,port:t}},i.registerEdges=function(e){Array.isArray(e)&&e.forEach((function(e,t){i.edges.push(e)}))},i.processEdges=function(){var e,t;e=xr(i.edges),t=[];for(var n=1;n<e.length;n+=1)("src"in e[n-1]||"data"in e[n-1])&&"tgt"in e[n]&&(e[n-1].tgt=e[n].tgt,t.push(e[n-1]),n++);return t},(r=u())!==s&&Kt===t.length)return r;throw r!==s&&Kt<t.length&&un({type:"end",description:"end of input"}),ln(null,nn,tn<t.length?t.charAt(tn):null,tn<t.length?cn(tn,tn+1):cn(tn,tn))}}}()},96741:(e,t,n)=>{var r=n(13210),o=n(7051);e.exports={SyntaxError:r.SyntaxError,parse:r.parse,serialize:o}},7051:e=>{var t=[].indexOf||function(e){for(var t=0,n=this.length;t<n;t++)if(t in this&&this[t]===e)return t;return-1};e.exports=function(e,n){var r,o,a,i,s,c,u,l,d,p,h,f,g,m,v,y,b,w,_,x,k,P,S;for(l in null==n&&(n={}),c="string"==typeof e?JSON.parse(e):e,d=[],h="",a=function(e){return null!=c.processes[e].metadata&&(e=c.processes[e].metadata.label),e.indexOf("/")>-1&&(e=e.split("/").pop()),e},o=function(e,t){return null!=t.process&&null!=c.processes[t.process].metadata?e=c.processes[t.process].metadata.label:null!=t.process&&(e=t.process),e.indexOf("/")>-1&&(e=e.split("/").pop()),e},c.properties&&(c.properties.environment&&c.properties.environment.type&&(h+="# @runtime "+c.properties.environment.type+"\n"),Object.keys(c.properties).forEach((function(e){if(e.match(/^[a-zA-Z0-9\-_]+$/)){var t=c.properties[e];"string"==typeof t&&t.match(/^[a-zA-Z0-9\-_\s\.]+$/)&&(h+="# @"+e+" "+t+"\n")}}))),g=c.inports)f=o(l,s=g[l]),l=c.caseSensitive?l:l.toUpperCase(),s.port=c.caseSensitive?s.port:s.port.toUpperCase(),h+="INPORT="+f+"."+s.port+":"+l+"\n";for(l in m=c.outports)f=o(l,p=m[l]),l=c.caseSensitive?l:l.toUpperCase(),p.port=c.caseSensitive?p.port:p.port.toUpperCase(),h+="OUTPORT="+f+"."+p.port+":"+l+"\n";for(h+="\n",i=0,u=(v=c.connections).length;i<u;i++)null!=(r=v[i]).data?(P=c.caseSensitive?r.tgt.port:r.tgt.port.toUpperCase(),k=r.tgt.process,S=c.processes[k].component,x=a(k),t.call(d,S)<0&&(x+="("+S+")",d.push(S)),h+='"'+r.data+'" -> '+P+" "+x+"\n"):(w=c.caseSensitive?r.src.port:r.src.port.toUpperCase(),b=r.src.process,_=c.processes[b].component,y=a(b),t.call(d,_)<0&&(y+="("+_+")",d.push(_)),P=c.caseSensitive?r.tgt.port:r.tgt.port.toUpperCase(),k=r.tgt.process,S=c.processes[k].component,x=a(k),t.call(d,S)<0&&(x+="("+S+")",d.push(S)),h+=y+" "+w+" -> "+P+" "+x+"\n");return h}},77731:e=>{"use strict";e.exports=JSON.parse('{"$schema":"http://json-schema.org/draft-04/schema","id":"graph.json","title":"FBP graph","description":"A graph of FBP processes and connections between them.\\nThis is the primary way of specifying FBP programs.\\n","name":"graph","type":"object","additionalProperties":false,"properties":{"caseSensitive":{"type":"boolean","description":"Whether the graph port identifiers should be treated as case-sensitive"},"properties":{"type":"object","description":"User-defined properties attached to the graph.","additionalProperties":true,"properties":{"name":{"type":"string","description":"Name of the graph"},"environment":{"type":"object","description":"Information about the execution environment for the graph","additionalProperties":true,"required":["type"],"properties":{"type":{"type":"string","description":"Runtime type the graph is for","example":"noflo-nodejs"},"content":{"type":"string","description":"HTML fixture for browser-based graphs"}}},"description":{"type":"string","description":"Graph description"},"icon":{"type":"string","description":"Name of the icon that can be used for depicting the graph"}}},"inports":{"type":["object","undefined"],"description":"Exported inports of the graph","additionalProperties":true,"patternProperties":{"[a-z0-9]+":{"type":"object","properties":{"process":{"type":"string"},"port":{"type":"string"},"metadata":{"type":"object","additionalProperties":true,"required":[],"properties":{"x":{"type":"integer","description":"X coordinate of a graph inport"},"y":{"type":"integer","description":"Y coordinate of a graph inport"}}}}}}},"outports":{"type":["object","undefined"],"description":"Exported outports of the graph","additionalProperties":true,"patternProperties":{"[a-z0-9]+":{"type":"object","properties":{"process":{"type":"string"},"port":{"type":"string"},"metadata":{"type":"object","required":[],"additionalProperties":true,"properties":{"x":{"type":"integer","description":"X coordinate of a graph outport"},"y":{"type":"integer","description":"Y coordinate of a graph outport"}}}}}}},"groups":{"type":"array","description":"List of groups of processes","items":{"type":"object","additionalProperties":false,"properties":{"name":{"type":"string"},"nodes":{"type":"array","items":{"type":"string"}},"metadata":{"type":"object","additionalProperties":true,"required":[],"properties":{"description":{"type":"string"}}}}}},"processes":{"type":"object","description":"The processes of this graph.\\nEach process is an instance of a component.\\n","additionalProperties":false,"patternProperties":{"[a-zA-Z0-9_]+":{"type":"object","properties":{"component":{"type":"string"},"metadata":{"type":"object","additionalProperties":true,"required":[],"properties":{"x":{"type":"integer","description":"X coordinate of a graph node"},"y":{"type":"integer","description":"Y coordinate of a graph node"}}}}}}},"connections":{"type":"array","description":"Connections of the graph.\\nA connection either connects ports of two processes, or specifices an IIP as initial input packet to a port.\\n","items":{"type":"object","additionalProperties":false,"properties":{"src":{"type":"object","additionalProperties":false,"properties":{"process":{"type":"string"},"port":{"type":"string"},"index":{"type":"integer"}}},"tgt":{"type":"object","additionalProperties":false,"properties":{"process":{"type":"string"},"port":{"type":"string"},"index":{"type":"integer"}}},"data":{},"metadata":{"type":"object","additionalProperties":true,"required":[],"properties":{"route":{"type":"integer","description":"Route identifier of a graph edge"},"schema":{"type":"string","format":"uri","description":"JSON schema associated with a graph edge"},"secure":{"type":"boolean","description":"Whether edge data should be treated as secure"}}}}}}}}')},49804:e=>{var t=Object.prototype.hasOwnProperty,n=Object.prototype.toString;e.exports=function(e,r,o){if("[object Function]"!==n.call(r))throw new TypeError("iterator must be a function");var a=e.length;if(a===+a)for(var i=0;i<a;i++)r.call(o,e[i],i,e);else for(var s in e)t.call(e,s)&&r.call(o,e[s],s,e)}},37334:(e,t,n)=>{var r=n(34155);e.exports=d,d.realpath=d,d.sync=p,d.realpathSync=p,d.monkeypatch=function(){o.realpath=d,o.realpathSync=p},d.unmonkeypatch=function(){o.realpath=a,o.realpathSync=i};var o=n(12993),a=o.realpath,i=o.realpathSync,s=r.version,c=/^v[0-5]\./.test(s),u=n(47059);function l(e){return e&&"realpath"===e.syscall&&("ELOOP"===e.code||"ENOMEM"===e.code||"ENAMETOOLONG"===e.code)}function d(e,t,n){if(c)return a(e,t,n);"function"==typeof t&&(n=t,t=null),a(e,t,(function(r,o){l(r)?u.realpath(e,t,n):n(r,o)}))}function p(e,t){if(c)return i(e,t);try{return i(e,t)}catch(n){if(l(n))return u.realpathSync(e,t);throw n}}},47059:(e,t,n)=>{var r=n(34155),o=n(26470),a="win32"===r.platform,i=n(12993),s=r.env.NODE_DEBUG&&/fs/.test(r.env.NODE_DEBUG);if(o.normalize,a)var c=/(.*?)(?:[\/\\]+|$)/g;else c=/(.*?)(?:[\/]+|$)/g;if(a)var u=/^(?:[a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/][^\\\/]+)?[\\\/]*/;else u=/^[\/]*/;t.realpathSync=function(e,t){if(e=o.resolve(e),t&&Object.prototype.hasOwnProperty.call(t,e))return t[e];var n,r,s,l,d=e,p={},h={};function f(){var t=u.exec(e);n=t[0].length,r=t[0],s=t[0],l="",a&&!h[s]&&(i.lstatSync(s),h[s]=!0)}for(f();n<e.length;){c.lastIndex=n;var g=c.exec(e);if(l=r,r+=g[0],s=l+g[1],n=c.lastIndex,!(h[s]||t&&t[s]===s)){var m;if(t&&Object.prototype.hasOwnProperty.call(t,s))m=t[s];else{var v=i.lstatSync(s);if(!v.isSymbolicLink()){h[s]=!0,t&&(t[s]=s);continue}var y=null;if(!a){var b=v.dev.toString(32)+":"+v.ino.toString(32);p.hasOwnProperty(b)&&(y=p[b])}null===y&&(i.statSync(s),y=i.readlinkSync(s)),m=o.resolve(l,y),t&&(t[s]=m),a||(p[b]=y)}e=o.resolve(m,e.slice(n)),f()}}return t&&(t[d]=e),e},t.realpath=function(e,t,n){if("function"!=typeof n&&(n=function(e){return"function"==typeof e?e:function(){var e;if(s){var t=new Error;e=function(e){e&&(t.message=e.message,n(e=t))}}else e=n;return e;function n(e){if(e){if(r.throwDeprecation)throw e;if(!r.noDeprecation){var t="fs: missing callback "+(e.stack||e.message);r.traceDeprecation?console.trace(t):console.error(t)}}}}()}(t),t=null),e=o.resolve(e),t&&Object.prototype.hasOwnProperty.call(t,e))return r.nextTick(n.bind(null,null,t[e]));var l,d,p,h,f=e,g={},m={};function v(){var t=u.exec(e);l=t[0].length,d=t[0],p=t[0],h="",a&&!m[p]?i.lstat(p,(function(e){if(e)return n(e);m[p]=!0,y()})):r.nextTick(y)}function y(){if(l>=e.length)return t&&(t[f]=e),n(null,e);c.lastIndex=l;var o=c.exec(e);return h=d,d+=o[0],p=h+o[1],l=c.lastIndex,m[p]||t&&t[p]===p?r.nextTick(y):t&&Object.prototype.hasOwnProperty.call(t,p)?_(t[p]):i.lstat(p,b)}function b(e,o){if(e)return n(e);if(!o.isSymbolicLink())return m[p]=!0,t&&(t[p]=p),r.nextTick(y);if(!a){var s=o.dev.toString(32)+":"+o.ino.toString(32);if(g.hasOwnProperty(s))return w(null,g[s],p)}i.stat(p,(function(e){if(e)return n(e);i.readlink(p,(function(e,t){a||(g[s]=t),w(e,t)}))}))}function w(e,r,a){if(e)return n(e);var i=o.resolve(h,r);t&&(t[a]=i),_(i)}function _(t){e=o.resolve(t,e.slice(l)),v()}v()}},17648:e=>{"use strict";var t="Function.prototype.bind called on incompatible ",n=Array.prototype.slice,r=Object.prototype.toString,o="[object Function]";e.exports=function(e){var a=this;if("function"!=typeof a||r.call(a)!==o)throw new TypeError(t+a);for(var i,s=n.call(arguments,1),c=function(){if(this instanceof i){var t=a.apply(this,s.concat(n.call(arguments)));return Object(t)===t?t:this}return a.apply(e,s.concat(n.call(arguments)))},u=Math.max(0,a.length-s.length),l=[],d=0;d<u;d++)l.push("$"+d);if(i=Function("binder","return function ("+l.join(",")+"){ return binder.apply(this,arguments); }")(c),a.prototype){var p=function(){};p.prototype=a.prototype,i.prototype=new p,p.prototype=null}return i}},58612:(e,t,n)=>{"use strict";var r=n(17648);e.exports=Function.prototype.bind||r},5177:e=>{e.exports=function(){if("undefined"==typeof globalThis)return null;var e={RTCPeerConnection:globalThis.RTCPeerConnection||globalThis.mozRTCPeerConnection||globalThis.webkitRTCPeerConnection,RTCSessionDescription:globalThis.RTCSessionDescription||globalThis.mozRTCSessionDescription||globalThis.webkitRTCSessionDescription,RTCIceCandidate:globalThis.RTCIceCandidate||globalThis.mozRTCIceCandidate||globalThis.webkitRTCIceCandidate};return e.RTCPeerConnection?e:null}},13702:(e,t,n)=>{var r=n(99223),o=n(75780),a=n(54537),i=n(62391);e.exports=function(e){var t=[],n=e.toString().replace(/\/\*.*?\*\//g,"");n=o(t,n);var s=a(t,n,r.prePatterns).replace(/\n/g,"").replace(/\s*async\s*/,"").match(/(?:function\s*\((.*?)\)|\((.*?)\))|(.*?)\s*=>/);return s=s[1]||s[2]||s[3]||"",a(t,s,r.postPatterns).split(",").filter((function(e){return e})).map((function(e){var n=(e=i(t,e,!0)).split("="),r={param:n[0].trim()};return n[1]&&(r.default=i(t,n.slice(1).join("="))),r}))}},62391:(module,__unused_webpack_exports,__webpack_require__)=>{var delim=__webpack_require__(64016);module.exports=function(cache,string,skipEval){for(var pattern=/:~:(\d+?):~:/;pattern.test(string);){var id=pattern.exec(string)[1];string=string.replace(delim(id),cache[id-1])}return skipEval?string:eval("("+string+")")}},64016:e=>{e.exports=function(e){return[":~:",e,":~:"].join("")}},54537:(e,t,n)=>{var r=n(64016);e.exports=function(e,t,n){return n.forEach((function(n){for(;n.test(t);){var o=n.exec(t)[0];t=t.replace(o,r(e.push(o)))}})),t}},75780:(e,t,n)=>{var r=n(99223).stringPatterns,o=n(64016);e.exports=function(e,t){for(;;){var n=r.reduce((function(e,n){return e.concat(t.match(n)||[])}),[]).sort((function(e,t){return e.length-t.length}))[0];if(!n)return t;t=t.replace(n,o(e.push(n)))}}},99223:e=>{e.exports={stringPatterns:[/'[^]*?'/g,/"[^]*?"/g,/`[^]*?`/g],prePatterns:[/\[[^]*?\]/,/{[^]*?}/,/=>\s*?\([^]*?\)/,/=\s*?function\s*?\([^]*(?=[^]*\))/,/=\s*?\([^]*(?=[^]*\))/,/\s*?=[^>][^,\)]*/],postPatterns:[/\([^]*?\)/]}},40210:(e,t,n)=>{"use strict";var r,o=SyntaxError,a=Function,i=TypeError,s=function(e){try{return a('"use strict"; return ('+e+").constructor;")()}catch(e){}},c=Object.getOwnPropertyDescriptor;if(c)try{c({},"")}catch(e){c=null}var u=function(){throw new i},l=c?function(){try{return u}catch(e){try{return c(arguments,"callee").get}catch(e){return u}}}():u,d=n(41405)(),p=Object.getPrototypeOf||function(e){return e.__proto__},h={},f="undefined"==typeof Uint8Array?r:p(Uint8Array),g={"%AggregateError%":"undefined"==typeof AggregateError?r:AggregateError,"%Array%":Array,"%ArrayBuffer%":"undefined"==typeof ArrayBuffer?r:ArrayBuffer,"%ArrayIteratorPrototype%":d?p([][Symbol.iterator]()):r,"%AsyncFromSyncIteratorPrototype%":r,"%AsyncFunction%":h,"%AsyncGenerator%":h,"%AsyncGeneratorFunction%":h,"%AsyncIteratorPrototype%":h,"%Atomics%":"undefined"==typeof Atomics?r:Atomics,"%BigInt%":"undefined"==typeof BigInt?r:BigInt,"%Boolean%":Boolean,"%DataView%":"undefined"==typeof DataView?r:DataView,"%Date%":Date,"%decodeURI%":decodeURI,"%decodeURIComponent%":decodeURIComponent,"%encodeURI%":encodeURI,"%encodeURIComponent%":encodeURIComponent,"%Error%":Error,"%eval%":eval,"%EvalError%":EvalError,"%Float32Array%":"undefined"==typeof Float32Array?r:Float32Array,"%Float64Array%":"undefined"==typeof Float64Array?r:Float64Array,"%FinalizationRegistry%":"undefined"==typeof FinalizationRegistry?r:FinalizationRegistry,"%Function%":a,"%GeneratorFunction%":h,"%Int8Array%":"undefined"==typeof Int8Array?r:Int8Array,"%Int16Array%":"undefined"==typeof Int16Array?r:Int16Array,"%Int32Array%":"undefined"==typeof Int32Array?r:Int32Array,"%isFinite%":isFinite,"%isNaN%":isNaN,"%IteratorPrototype%":d?p(p([][Symbol.iterator]())):r,"%JSON%":"object"==typeof JSON?JSON:r,"%Map%":"undefined"==typeof Map?r:Map,"%MapIteratorPrototype%":"undefined"!=typeof Map&&d?p((new Map)[Symbol.iterator]()):r,"%Math%":Math,"%Number%":Number,"%Object%":Object,"%parseFloat%":parseFloat,"%parseInt%":parseInt,"%Promise%":"undefined"==typeof Promise?r:Promise,"%Proxy%":"undefined"==typeof Proxy?r:Proxy,"%RangeError%":RangeError,"%ReferenceError%":ReferenceError,"%Reflect%":"undefined"==typeof Reflect?r:Reflect,"%RegExp%":RegExp,"%Set%":"undefined"==typeof Set?r:Set,"%SetIteratorPrototype%":"undefined"!=typeof Set&&d?p((new Set)[Symbol.iterator]()):r,"%SharedArrayBuffer%":"undefined"==typeof SharedArrayBuffer?r:SharedArrayBuffer,"%String%":String,"%StringIteratorPrototype%":d?p(""[Symbol.iterator]()):r,"%Symbol%":d?Symbol:r,"%SyntaxError%":o,"%ThrowTypeError%":l,"%TypedArray%":f,"%TypeError%":i,"%Uint8Array%":"undefined"==typeof Uint8Array?r:Uint8Array,"%Uint8ClampedArray%":"undefined"==typeof Uint8ClampedArray?r:Uint8ClampedArray,"%Uint16Array%":"undefined"==typeof Uint16Array?r:Uint16Array,"%Uint32Array%":"undefined"==typeof Uint32Array?r:Uint32Array,"%URIError%":URIError,"%WeakMap%":"undefined"==typeof WeakMap?r:WeakMap,"%WeakRef%":"undefined"==typeof WeakRef?r:WeakRef,"%WeakSet%":"undefined"==typeof WeakSet?r:WeakSet},m=function e(t){var n;if("%AsyncFunction%"===t)n=s("async function () {}");else if("%GeneratorFunction%"===t)n=s("function* () {}");else if("%AsyncGeneratorFunction%"===t)n=s("async function* () {}");else if("%AsyncGenerator%"===t){var r=e("%AsyncGeneratorFunction%");r&&(n=r.prototype)}else if("%AsyncIteratorPrototype%"===t){var o=e("%AsyncGenerator%");o&&(n=p(o.prototype))}return g[t]=n,n},v={"%ArrayBufferPrototype%":["ArrayBuffer","prototype"],"%ArrayPrototype%":["Array","prototype"],"%ArrayProto_entries%":["Array","prototype","entries"],"%ArrayProto_forEach%":["Array","prototype","forEach"],"%ArrayProto_keys%":["Array","prototype","keys"],"%ArrayProto_values%":["Array","prototype","values"],"%AsyncFunctionPrototype%":["AsyncFunction","prototype"],"%AsyncGenerator%":["AsyncGeneratorFunction","prototype"],"%AsyncGeneratorPrototype%":["AsyncGeneratorFunction","prototype","prototype"],"%BooleanPrototype%":["Boolean","prototype"],"%DataViewPrototype%":["DataView","prototype"],"%DatePrototype%":["Date","prototype"],"%ErrorPrototype%":["Error","prototype"],"%EvalErrorPrototype%":["EvalError","prototype"],"%Float32ArrayPrototype%":["Float32Array","prototype"],"%Float64ArrayPrototype%":["Float64Array","prototype"],"%FunctionPrototype%":["Function","prototype"],"%Generator%":["GeneratorFunction","prototype"],"%GeneratorPrototype%":["GeneratorFunction","prototype","prototype"],"%Int8ArrayPrototype%":["Int8Array","prototype"],"%Int16ArrayPrototype%":["Int16Array","prototype"],"%Int32ArrayPrototype%":["Int32Array","prototype"],"%JSONParse%":["JSON","parse"],"%JSONStringify%":["JSON","stringify"],"%MapPrototype%":["Map","prototype"],"%NumberPrototype%":["Number","prototype"],"%ObjectPrototype%":["Object","prototype"],"%ObjProto_toString%":["Object","prototype","toString"],"%ObjProto_valueOf%":["Object","prototype","valueOf"],"%PromisePrototype%":["Promise","prototype"],"%PromiseProto_then%":["Promise","prototype","then"],"%Promise_all%":["Promise","all"],"%Promise_reject%":["Promise","reject"],"%Promise_resolve%":["Promise","resolve"],"%RangeErrorPrototype%":["RangeError","prototype"],"%ReferenceErrorPrototype%":["ReferenceError","prototype"],"%RegExpPrototype%":["RegExp","prototype"],"%SetPrototype%":["Set","prototype"],"%SharedArrayBufferPrototype%":["SharedArrayBuffer","prototype"],"%StringPrototype%":["String","prototype"],"%SymbolPrototype%":["Symbol","prototype"],"%SyntaxErrorPrototype%":["SyntaxError","prototype"],"%TypedArrayPrototype%":["TypedArray","prototype"],"%TypeErrorPrototype%":["TypeError","prototype"],"%Uint8ArrayPrototype%":["Uint8Array","prototype"],"%Uint8ClampedArrayPrototype%":["Uint8ClampedArray","prototype"],"%Uint16ArrayPrototype%":["Uint16Array","prototype"],"%Uint32ArrayPrototype%":["Uint32Array","prototype"],"%URIErrorPrototype%":["URIError","prototype"],"%WeakMapPrototype%":["WeakMap","prototype"],"%WeakSetPrototype%":["WeakSet","prototype"]},y=n(58612),b=n(17642),w=y.call(Function.call,Array.prototype.concat),_=y.call(Function.apply,Array.prototype.splice),x=y.call(Function.call,String.prototype.replace),k=y.call(Function.call,String.prototype.slice),P=/[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,S=/\\(\\)?/g,C=function(e){var t=k(e,0,1),n=k(e,-1);if("%"===t&&"%"!==n)throw new o("invalid intrinsic syntax, expected closing `%`");if("%"===n&&"%"!==t)throw new o("invalid intrinsic syntax, expected opening `%`");var r=[];return x(e,P,(function(e,t,n,o){r[r.length]=n?x(o,S,"$1"):t||e})),r},D=function(e,t){var n,r=e;if(b(v,r)&&(r="%"+(n=v[r])[0]+"%"),b(g,r)){var a=g[r];if(a===h&&(a=m(r)),void 0===a&&!t)throw new i("intrinsic "+e+" exists, but is not available. Please file an issue!");return{alias:n,name:r,value:a}}throw new o("intrinsic "+e+" does not exist!")};e.exports=function(e,t){if("string"!=typeof e||0===e.length)throw new i("intrinsic name must be a non-empty string");if(arguments.length>1&&"boolean"!=typeof t)throw new i('"allowMissing" argument must be a boolean');var n=C(e),r=n.length>0?n[0]:"",a=D("%"+r+"%",t),s=a.name,u=a.value,l=!1,d=a.alias;d&&(r=d[0],_(n,w([0,1],d)));for(var p=1,h=!0;p<n.length;p+=1){var f=n[p],m=k(f,0,1),v=k(f,-1);if(('"'===m||"'"===m||"`"===m||'"'===v||"'"===v||"`"===v)&&m!==v)throw new o("property names with quotes must have matching quotes");if("constructor"!==f&&h||(l=!0),b(g,s="%"+(r+="."+f)+"%"))u=g[s];else if(null!=u){if(!(f in u)){if(!t)throw new i("base intrinsic for "+e+" exists, but the property is not available.");return}if(c&&p+1>=n.length){var y=c(u,f);u=(h=!!y)&&"get"in y&&!("originalValue"in y.get)?y.get:u[f]}else h=b(u,f),u=u[f];h&&!l&&(g[s]=u)}}return u}},66772:(e,t,n)=>{var r=n(34155);function o(e,t){return Object.prototype.hasOwnProperty.call(e,t)}t.alphasort=l,t.alphasorti=u,t.setopts=function(e,t,n){if(n||(n={}),n.matchBase&&-1===t.indexOf("/")){if(n.noglobstar)throw new Error("base matching requires globstar");t="**/"+t}e.silent=!!n.silent,e.pattern=t,e.strict=!1!==n.strict,e.realpath=!!n.realpath,e.realpathCache=n.realpathCache||Object.create(null),e.follow=!!n.follow,e.dot=!!n.dot,e.mark=!!n.mark,e.nodir=!!n.nodir,e.nodir&&(e.mark=!0),e.sync=!!n.sync,e.nounique=!!n.nounique,e.nonull=!!n.nonull,e.nosort=!!n.nosort,e.nocase=!!n.nocase,e.stat=!!n.stat,e.noprocess=!!n.noprocess,e.absolute=!!n.absolute,e.maxLength=n.maxLength||1/0,e.cache=n.cache||Object.create(null),e.statCache=n.statCache||Object.create(null),e.symlinks=n.symlinks||Object.create(null),function(e,t){e.ignore=t.ignore||[],Array.isArray(e.ignore)||(e.ignore=[e.ignore]),e.ignore.length&&(e.ignore=e.ignore.map(d))}(e,n),e.changedCwd=!1;var i=r.cwd();o(n,"cwd")?(e.cwd=a.resolve(n.cwd),e.changedCwd=e.cwd!==i):e.cwd=i,e.root=n.root||a.resolve(e.cwd,"/"),e.root=a.resolve(e.root),"win32"===r.platform&&(e.root=e.root.replace(/\\/g,"/")),e.cwdAbs=s(e.cwd)?e.cwd:p(e,e.cwd),"win32"===r.platform&&(e.cwdAbs=e.cwdAbs.replace(/\\/g,"/")),e.nomount=!!n.nomount,n.nonegate=!0,n.nocomment=!0,e.minimatch=new c(t,n),e.options=e.minimatch.options},t.ownProp=o,t.makeAbs=p,t.finish=function(e){for(var t=e.nounique,n=t?[]:Object.create(null),r=0,o=e.matches.length;r<o;r++){var a=e.matches[r];if(a&&0!==Object.keys(a).length){var i=Object.keys(a);t?n.push.apply(n,i):i.forEach((function(e){n[e]=!0}))}else if(e.nonull){var s=e.minimatch.globSet[r];t?n.push(s):n[s]=!0}}if(t||(n=Object.keys(n)),e.nosort||(n=n.sort(e.nocase?u:l)),e.mark){for(r=0;r<n.length;r++)n[r]=e._mark(n[r]);e.nodir&&(n=n.filter((function(t){var n=!/\/$/.test(t),r=e.cache[t]||e.cache[p(e,t)];return n&&r&&(n="DIR"!==r&&!Array.isArray(r)),n})))}e.ignore.length&&(n=n.filter((function(t){return!h(e,t)}))),e.found=n},t.mark=function(e,t){var n=p(e,t),r=e.cache[n],o=t;if(r){var a="DIR"===r||Array.isArray(r),i="/"===t.slice(-1);if(a&&!i?o+="/":!a&&i&&(o=o.slice(0,-1)),o!==t){var s=p(e,o);e.statCache[s]=e.statCache[n],e.cache[s]=e.cache[n]}}return o},t.isIgnored=h,t.childrenIgnored=function(e,t){return!!e.ignore.length&&e.ignore.some((function(e){return!(!e.gmatcher||!e.gmatcher.match(t))}))};var a=n(26470),i=n(91171),s=n(64095),c=i.Minimatch;function u(e,t){return e.toLowerCase().localeCompare(t.toLowerCase())}function l(e,t){return e.localeCompare(t)}function d(e){var t=null;if("/**"===e.slice(-3)){var n=e.replace(/(\/\*\*)+$/,"");t=new c(n,{dot:!0})}return{matcher:new c(e,{dot:!0}),gmatcher:t}}function p(e,t){var n=t;return n="/"===t.charAt(0)?a.join(e.root,t):s(t)||""===t?t:e.changedCwd?a.resolve(e.cwd,t):a.resolve(t),"win32"===r.platform&&(n=n.replace(/\\/g,"/")),n}function h(e,t){return!!e.ignore.length&&e.ignore.some((function(e){return e.matcher.match(t)||!(!e.gmatcher||!e.gmatcher.match(t))}))}},12884:(e,t,n)=>{var r=n(34155);e.exports=w;var o=n(12993),a=n(37334),i=n(91171),s=(i.Minimatch,n(35717)),c=n(17187).EventEmitter,u=n(26470),l=n(97680),d=n(64095),p=n(14751),h=n(66772),f=(h.alphasort,h.alphasorti,h.setopts),g=h.ownProp,m=n(67844),v=(n(89539),h.childrenIgnored),y=h.isIgnored,b=n(30778);function w(e,t,n){if("function"==typeof t&&(n=t,t={}),t||(t={}),t.sync){if(n)throw new TypeError("callback provided to sync glob");return p(e,t)}return new x(e,t,n)}w.sync=p;var _=w.GlobSync=p.GlobSync;function x(e,t,n){if("function"==typeof t&&(n=t,t=null),t&&t.sync){if(n)throw new TypeError("callback provided to sync glob");return new _(e,t)}if(!(this instanceof x))return new x(e,t,n);f(this,e,t),this._didRealPath=!1;var r=this.minimatch.set.length;this.matches=new Array(r),"function"==typeof n&&(n=b(n),this.on("error",n),this.on("end",(function(e){n(null,e)})));var o=this;if(this._processing=0,this._emitQueue=[],this._processQueue=[],this.paused=!1,this.noprocess)return this;if(0===r)return i();for(var a=0;a<r;a++)this._process(this.minimatch.set[a],a,!1,i);function i(){--o._processing,o._processing<=0&&o._finish()}}w.glob=w,w.hasMagic=function(e,t){var n=function(e,t){if(null===t||"object"!=typeof t)return e;for(var n=Object.keys(t),r=n.length;r--;)e[n[r]]=t[n[r]];return e}({},t);n.noprocess=!0;var r=new x(e,n).minimatch.set;if(!e)return!1;if(r.length>1)return!0;for(var o=0;o<r[0].length;o++)if("string"!=typeof r[0][o])return!0;return!1},w.Glob=x,s(x,c),x.prototype._finish=function(){if(l(this instanceof x),!this.aborted){if(this.realpath&&!this._didRealpath)return this._realpath();h.finish(this),this.emit("end",this.found)}},x.prototype._realpath=function(){if(!this._didRealpath){this._didRealpath=!0;var e=this.matches.length;if(0===e)return this._finish();for(var t=this,n=0;n<this.matches.length;n++)this._realpathSet(n,r)}function r(){0==--e&&t._finish()}},x.prototype._realpathSet=function(e,t){var n=this.matches[e];if(!n)return t();var r=Object.keys(n),o=this,i=r.length;if(0===i)return t();var s=this.matches[e]=Object.create(null);r.forEach((function(n,r){n=o._makeAbs(n),a.realpath(n,o.realpathCache,(function(r,a){r?"stat"===r.syscall?s[n]=!0:o.emit("error",r):s[a]=!0,0==--i&&(o.matches[e]=s,t())}))}))},x.prototype._mark=function(e){return h.mark(this,e)},x.prototype._makeAbs=function(e){return h.makeAbs(this,e)},x.prototype.abort=function(){this.aborted=!0,this.emit("abort")},x.prototype.pause=function(){this.paused||(this.paused=!0,this.emit("pause"))},x.prototype.resume=function(){if(this.paused){if(this.emit("resume"),this.paused=!1,this._emitQueue.length){var e=this._emitQueue.slice(0);this._emitQueue.length=0;for(var t=0;t<e.length;t++){var n=e[t];this._emitMatch(n[0],n[1])}}if(this._processQueue.length){var r=this._processQueue.slice(0);for(this._processQueue.length=0,t=0;t<r.length;t++){var o=r[t];this._processing--,this._process(o[0],o[1],o[2],o[3])}}}},x.prototype._process=function(e,t,n,r){if(l(this instanceof x),l("function"==typeof r),!this.aborted)if(this._processing++,this.paused)this._processQueue.push([e,t,n,r]);else{for(var o,a=0;"string"==typeof e[a];)a++;switch(a){case e.length:return void this._processSimple(e.join("/"),t,r);case 0:o=null;break;default:o=e.slice(0,a).join("/")}var s,c=e.slice(a);null===o?s=".":d(o)||d(e.join("/"))?(o&&d(o)||(o="/"+o),s=o):s=o;var u=this._makeAbs(s);if(v(this,s))return r();c[0]===i.GLOBSTAR?this._processGlobStar(o,s,u,c,t,n,r):this._processReaddir(o,s,u,c,t,n,r)}},x.prototype._processReaddir=function(e,t,n,r,o,a,i){var s=this;this._readdir(n,a,(function(c,u){return s._processReaddir2(e,t,n,r,o,a,u,i)}))},x.prototype._processReaddir2=function(e,t,n,r,o,a,i,s){if(!i)return s();for(var c=r[0],l=!!this.minimatch.negate,d=c._glob,p=this.dot||"."===d.charAt(0),h=[],f=0;f<i.length;f++)("."!==(m=i[f]).charAt(0)||p)&&(l&&!e?!m.match(c):m.match(c))&&h.push(m);var g=h.length;if(0===g)return s();if(1===r.length&&!this.mark&&!this.stat){for(this.matches[o]||(this.matches[o]=Object.create(null)),f=0;f<g;f++){var m=h[f];e&&(m="/"!==e?e+"/"+m:e+m),"/"!==m.charAt(0)||this.nomount||(m=u.join(this.root,m)),this._emitMatch(o,m)}return s()}for(r.shift(),f=0;f<g;f++)m=h[f],e&&(m="/"!==e?e+"/"+m:e+m),this._process([m].concat(r),o,a,s);s()},x.prototype._emitMatch=function(e,t){if(!this.aborted&&!y(this,t))if(this.paused)this._emitQueue.push([e,t]);else{var n=d(t)?t:this._makeAbs(t);if(this.mark&&(t=this._mark(t)),this.absolute&&(t=n),!this.matches[e][t]){if(this.nodir){var r=this.cache[n];if("DIR"===r||Array.isArray(r))return}this.matches[e][t]=!0;var o=this.statCache[n];o&&this.emit("stat",t,o),this.emit("match",t)}}},x.prototype._readdirInGlobStar=function(e,t){if(!this.aborted){if(this.follow)return this._readdir(e,!1,t);var n=this,r=m("lstat\0"+e,(function(r,o){if(r&&"ENOENT"===r.code)return t();var a=o&&o.isSymbolicLink();n.symlinks[e]=a,a||!o||o.isDirectory()?n._readdir(e,!1,t):(n.cache[e]="FILE",t())}));r&&o.lstat(e,r)}},x.prototype._readdir=function(e,t,n){if(!this.aborted&&(n=m("readdir\0"+e+"\0"+t,n))){if(t&&!g(this.symlinks,e))return this._readdirInGlobStar(e,n);if(g(this.cache,e)){var r=this.cache[e];if(!r||"FILE"===r)return n();if(Array.isArray(r))return n(null,r)}o.readdir(e,function(e,t,n){return function(r,o){r?e._readdirError(t,r,n):e._readdirEntries(t,o,n)}}(this,e,n))}},x.prototype._readdirEntries=function(e,t,n){if(!this.aborted){if(!this.mark&&!this.stat)for(var r=0;r<t.length;r++){var o=t[r];o="/"===e?e+o:e+"/"+o,this.cache[o]=!0}return this.cache[e]=t,n(null,t)}},x.prototype._readdirError=function(e,t,n){if(!this.aborted){switch(t.code){case"ENOTSUP":case"ENOTDIR":var r=this._makeAbs(e);if(this.cache[r]="FILE",r===this.cwdAbs){var o=new Error(t.code+" invalid cwd "+this.cwd);o.path=this.cwd,o.code=t.code,this.emit("error",o),this.abort()}break;case"ENOENT":case"ELOOP":case"ENAMETOOLONG":case"UNKNOWN":this.cache[this._makeAbs(e)]=!1;break;default:this.cache[this._makeAbs(e)]=!1,this.strict&&(this.emit("error",t),this.abort()),this.silent||console.error("glob error",t)}return n()}},x.prototype._processGlobStar=function(e,t,n,r,o,a,i){var s=this;this._readdir(n,a,(function(c,u){s._processGlobStar2(e,t,n,r,o,a,u,i)}))},x.prototype._processGlobStar2=function(e,t,n,r,o,a,i,s){if(!i)return s();var c=r.slice(1),u=e?[e]:[],l=u.concat(c);this._process(l,o,!1,s);var d=this.symlinks[n],p=i.length;if(d&&a)return s();for(var h=0;h<p;h++)if("."!==i[h].charAt(0)||this.dot){var f=u.concat(i[h],c);this._process(f,o,!0,s);var g=u.concat(i[h],r);this._process(g,o,!0,s)}s()},x.prototype._processSimple=function(e,t,n){var r=this;this._stat(e,(function(o,a){r._processSimple2(e,t,o,a,n)}))},x.prototype._processSimple2=function(e,t,n,o,a){if(this.matches[t]||(this.matches[t]=Object.create(null)),!o)return a();if(e&&d(e)&&!this.nomount){var i=/[\/\\]$/.test(e);"/"===e.charAt(0)?e=u.join(this.root,e):(e=u.resolve(this.root,e),i&&(e+="/"))}"win32"===r.platform&&(e=e.replace(/\\/g,"/")),this._emitMatch(t,e),a()},x.prototype._stat=function(e,t){var n=this._makeAbs(e),r="/"===e.slice(-1);if(e.length>this.maxLength)return t();if(!this.stat&&g(this.cache,n)){var a=this.cache[n];if(Array.isArray(a)&&(a="DIR"),!r||"DIR"===a)return t(null,a);if(r&&"FILE"===a)return t()}var i=this.statCache[n];if(void 0!==i){if(!1===i)return t(null,i);var s=i.isDirectory()?"DIR":"FILE";return r&&"FILE"===s?t():t(null,s,i)}var c=this,u=m("stat\0"+n,(function(r,a){if(a&&a.isSymbolicLink())return o.stat(n,(function(r,o){r?c._stat2(e,n,null,a,t):c._stat2(e,n,r,o,t)}));c._stat2(e,n,r,a,t)}));u&&o.lstat(n,u)},x.prototype._stat2=function(e,t,n,r,o){if(n&&("ENOENT"===n.code||"ENOTDIR"===n.code))return this.statCache[t]=!1,o();var a="/"===e.slice(-1);if(this.statCache[t]=r,"/"===t.slice(-1)&&r&&!r.isDirectory())return o(null,!1,r);var i=!0;return r&&(i=r.isDirectory()?"DIR":"FILE"),this.cache[t]=this.cache[t]||i,a&&"FILE"===i?o():o(null,i,r)}},14751:(e,t,n)=>{var r=n(34155);e.exports=g,g.GlobSync=m;var o=n(12993),a=n(37334),i=n(91171),s=(i.Minimatch,n(12884).Glob,n(89539),n(26470)),c=n(97680),u=n(64095),l=n(66772),d=(l.alphasort,l.alphasorti,l.setopts),p=l.ownProp,h=l.childrenIgnored,f=l.isIgnored;function g(e,t){if("function"==typeof t||3===arguments.length)throw new TypeError("callback provided to sync glob\nSee: https://github.com/isaacs/node-glob/issues/167");return new m(e,t).found}function m(e,t){if(!e)throw new Error("must provide pattern");if("function"==typeof t||3===arguments.length)throw new TypeError("callback provided to sync glob\nSee: https://github.com/isaacs/node-glob/issues/167");if(!(this instanceof m))return new m(e,t);if(d(this,e,t),this.noprocess)return this;var n=this.minimatch.set.length;this.matches=new Array(n);for(var r=0;r<n;r++)this._process(this.minimatch.set[r],r,!1);this._finish()}m.prototype._finish=function(){if(c(this instanceof m),this.realpath){var e=this;this.matches.forEach((function(t,n){var r=e.matches[n]=Object.create(null);for(var o in t)try{o=e._makeAbs(o),r[a.realpathSync(o,e.realpathCache)]=!0}catch(t){if("stat"!==t.syscall)throw t;r[e._makeAbs(o)]=!0}}))}l.finish(this)},m.prototype._process=function(e,t,n){c(this instanceof m);for(var r,o=0;"string"==typeof e[o];)o++;switch(o){case e.length:return void this._processSimple(e.join("/"),t);case 0:r=null;break;default:r=e.slice(0,o).join("/")}var a,s=e.slice(o);null===r?a=".":u(r)||u(e.join("/"))?(r&&u(r)||(r="/"+r),a=r):a=r;var l=this._makeAbs(a);h(this,a)||(s[0]===i.GLOBSTAR?this._processGlobStar(r,a,l,s,t,n):this._processReaddir(r,a,l,s,t,n))},m.prototype._processReaddir=function(e,t,n,r,o,a){var i=this._readdir(n,a);if(i){for(var c=r[0],u=!!this.minimatch.negate,l=c._glob,d=this.dot||"."===l.charAt(0),p=[],h=0;h<i.length;h++)("."!==(m=i[h]).charAt(0)||d)&&(u&&!e?!m.match(c):m.match(c))&&p.push(m);var f=p.length;if(0!==f)if(1!==r.length||this.mark||this.stat)for(r.shift(),h=0;h<f;h++){var g;m=p[h],g=e?[e,m]:[m],this._process(g.concat(r),o,a)}else{this.matches[o]||(this.matches[o]=Object.create(null));for(h=0;h<f;h++){var m=p[h];e&&(m="/"!==e.slice(-1)?e+"/"+m:e+m),"/"!==m.charAt(0)||this.nomount||(m=s.join(this.root,m)),this._emitMatch(o,m)}}}},m.prototype._emitMatch=function(e,t){if(!f(this,t)){var n=this._makeAbs(t);if(this.mark&&(t=this._mark(t)),this.absolute&&(t=n),!this.matches[e][t]){if(this.nodir){var r=this.cache[n];if("DIR"===r||Array.isArray(r))return}this.matches[e][t]=!0,this.stat&&this._stat(t)}}},m.prototype._readdirInGlobStar=function(e){if(this.follow)return this._readdir(e,!1);var t,n;try{n=o.lstatSync(e)}catch(e){if("ENOENT"===e.code)return null}var r=n&&n.isSymbolicLink();return this.symlinks[e]=r,r||!n||n.isDirectory()?t=this._readdir(e,!1):this.cache[e]="FILE",t},m.prototype._readdir=function(e,t){if(t&&!p(this.symlinks,e))return this._readdirInGlobStar(e);if(p(this.cache,e)){var n=this.cache[e];if(!n||"FILE"===n)return null;if(Array.isArray(n))return n}try{return this._readdirEntries(e,o.readdirSync(e))}catch(t){return this._readdirError(e,t),null}},m.prototype._readdirEntries=function(e,t){if(!this.mark&&!this.stat)for(var n=0;n<t.length;n++){var r=t[n];r="/"===e?e+r:e+"/"+r,this.cache[r]=!0}return this.cache[e]=t,t},m.prototype._readdirError=function(e,t){switch(t.code){case"ENOTSUP":case"ENOTDIR":var n=this._makeAbs(e);if(this.cache[n]="FILE",n===this.cwdAbs){var r=new Error(t.code+" invalid cwd "+this.cwd);throw r.path=this.cwd,r.code=t.code,r}break;case"ENOENT":case"ELOOP":case"ENAMETOOLONG":case"UNKNOWN":this.cache[this._makeAbs(e)]=!1;break;default:if(this.cache[this._makeAbs(e)]=!1,this.strict)throw t;this.silent||console.error("glob error",t)}},m.prototype._processGlobStar=function(e,t,n,r,o,a){var i=this._readdir(n,a);if(i){var s=r.slice(1),c=e?[e]:[],u=c.concat(s);this._process(u,o,!1);var l=i.length;if(!this.symlinks[n]||!a)for(var d=0;d<l;d++)if("."!==i[d].charAt(0)||this.dot){var p=c.concat(i[d],s);this._process(p,o,!0);var h=c.concat(i[d],r);this._process(h,o,!0)}}},m.prototype._processSimple=function(e,t){var n=this._stat(e);if(this.matches[t]||(this.matches[t]=Object.create(null)),n){if(e&&u(e)&&!this.nomount){var o=/[\/\\]$/.test(e);"/"===e.charAt(0)?e=s.join(this.root,e):(e=s.resolve(this.root,e),o&&(e+="/"))}"win32"===r.platform&&(e=e.replace(/\\/g,"/")),this._emitMatch(t,e)}},m.prototype._stat=function(e){var t=this._makeAbs(e),n="/"===e.slice(-1);if(e.length>this.maxLength)return!1;if(!this.stat&&p(this.cache,t)){var r=this.cache[t];if(Array.isArray(r)&&(r="DIR"),!n||"DIR"===r)return r;if(n&&"FILE"===r)return!1}var a=this.statCache[t];if(!a){var i;try{i=o.lstatSync(t)}catch(e){if(e&&("ENOENT"===e.code||"ENOTDIR"===e.code))return this.statCache[t]=!1,!1}if(i&&i.isSymbolicLink())try{a=o.statSync(t)}catch(e){a=i}else a=i}return this.statCache[t]=a,r=!0,a&&(r=a.isDirectory()?"DIR":"FILE"),this.cache[t]=this.cache[t]||r,(!n||"FILE"!==r)&&r},m.prototype._mark=function(e){return l.mark(this,e)},m.prototype._makeAbs=function(e){return l.makeAbs(this,e)}},41405:(e,t,n)=>{"use strict";var r=n.g.Symbol,o=n(55419);e.exports=function(){return"function"==typeof r&&"function"==typeof Symbol&&"symbol"==typeof r("foo")&&"symbol"==typeof Symbol("bar")&&o()}},55419:e=>{"use strict";e.exports=function(){if("function"!=typeof Symbol||"function"!=typeof Object.getOwnPropertySymbols)return!1;if("symbol"==typeof Symbol.iterator)return!0;var e={},t=Symbol("test"),n=Object(t);if("string"==typeof t)return!1;if("[object Symbol]"!==Object.prototype.toString.call(t))return!1;if("[object Symbol]"!==Object.prototype.toString.call(n))return!1;for(t in e[t]=42,e)return!1;if("function"==typeof Object.keys&&0!==Object.keys(e).length)return!1;if("function"==typeof Object.getOwnPropertyNames&&0!==Object.getOwnPropertyNames(e).length)return!1;var r=Object.getOwnPropertySymbols(e);if(1!==r.length||r[0]!==t)return!1;if(!Object.prototype.propertyIsEnumerable.call(e,t))return!1;if("function"==typeof Object.getOwnPropertyDescriptor){var o=Object.getOwnPropertyDescriptor(e,t);if(42!==o.value||!0!==o.enumerable)return!1}return!0}},17642:(e,t,n)=>{"use strict";var r=n(58612);e.exports=r.call(Function.call,Object.prototype.hasOwnProperty)},80645:(e,t)=>{t.read=function(e,t,n,r,o){var a,i,s=8*o-r-1,c=(1<<s)-1,u=c>>1,l=-7,d=n?o-1:0,p=n?-1:1,h=e[t+d];for(d+=p,a=h&(1<<-l)-1,h>>=-l,l+=s;l>0;a=256*a+e[t+d],d+=p,l-=8);for(i=a&(1<<-l)-1,a>>=-l,l+=r;l>0;i=256*i+e[t+d],d+=p,l-=8);if(0===a)a=1-u;else{if(a===c)return i?NaN:1/0*(h?-1:1);i+=Math.pow(2,r),a-=u}return(h?-1:1)*i*Math.pow(2,a-r)},t.write=function(e,t,n,r,o,a){var i,s,c,u=8*a-o-1,l=(1<<u)-1,d=l>>1,p=23===o?Math.pow(2,-24)-Math.pow(2,-77):0,h=r?0:a-1,f=r?1:-1,g=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(s=isNaN(t)?1:0,i=l):(i=Math.floor(Math.log(t)/Math.LN2),t*(c=Math.pow(2,-i))<1&&(i--,c*=2),(t+=i+d>=1?p/c:p*Math.pow(2,1-d))*c>=2&&(i++,c/=2),i+d>=l?(s=0,i=l):i+d>=1?(s=(t*c-1)*Math.pow(2,o),i+=d):(s=t*Math.pow(2,d-1)*Math.pow(2,o),i=0));o>=8;e[n+h]=255&s,h+=f,s/=256,o-=8);for(i=i<<o|s,u+=o;u>0;e[n+h]=255&i,h+=f,i/=256,u-=8);e[n+h-f]|=128*g}},67844:(e,t,n)=>{var r=n(34155),o=n(52479),a=Object.create(null),i=n(30778);function s(e){for(var t=e.length,n=[],r=0;r<t;r++)n[r]=e[r];return n}e.exports=o((function(e,t){return a[e]?(a[e].push(t),null):(a[e]=[t],function(e){return i((function t(){var n=a[e],o=n.length,i=s(arguments);try{for(var c=0;c<o;c++)n[c].apply(null,i)}finally{n.length>o?(n.splice(0,o),r.nextTick((function(){t.apply(null,i)}))):delete a[e]}}))}(e))}))},35717:e=>{"function"==typeof Object.create?e.exports=function(e,t){t&&(e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}))}:e.exports=function(e,t){if(t){e.super_=t;var n=function(){};n.prototype=t.prototype,e.prototype=new n,e.prototype.constructor=e}}},82584:(e,t,n)=>{"use strict";var r="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag,o=n(21924)("Object.prototype.toString"),a=function(e){return!(r&&e&&"object"==typeof e&&Symbol.toStringTag in e)&&"[object Arguments]"===o(e)},i=function(e){return!!a(e)||null!==e&&"object"==typeof e&&"number"==typeof e.length&&e.length>=0&&"[object Array]"!==o(e)&&"[object Function]"===o(e.callee)},s=function(){return a(arguments)}();a.isLegacyArguments=i,e.exports=s?a:i},48662:e=>{"use strict";var t=Object.prototype.toString,n=Function.prototype.toString,r=/^\s*(?:function)?\*/,o="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag,a=Object.getPrototypeOf,i=function(){if(!o)return!1;try{return Function("return function*() {}")()}catch(e){}}(),s=!(!a||!i)&&a(i);e.exports=function(e){return"function"==typeof e&&(!!r.test(n.call(e))||(o?a&&a(e)===s:"[object GeneratorFunction]"===t.call(e)))}},85692:(e,t,n)=>{"use strict";var r=n(49804),o=n(16314),a=n(21924),i=a("Object.prototype.toString"),s=n(41405)()&&"symbol"==typeof Symbol.toStringTag,c=o(),u=a("Array.prototype.indexOf",!0)||function(e,t){for(var n=0;n<e.length;n+=1)if(e[n]===t)return n;return-1},l=a("String.prototype.slice"),d={},p=n(94079),h=Object.getPrototypeOf;s&&p&&h&&r(c,(function(e){var t=new n.g[e];if(!(Symbol.toStringTag in t))throw new EvalError("this engine has support for Symbol.toStringTag, but "+e+" does not have the property! Please report this.");var r=h(t),o=p(r,Symbol.toStringTag);if(!o){var a=h(r);o=p(a,Symbol.toStringTag)}d[e]=o.get})),e.exports=function(e){if(!e||"object"!=typeof e)return!1;if(!s){var t=l(i(e),8,-1);return u(c,t)>-1}return!!p&&function(e){var t=!1;return r(d,(function(n,r){if(!t)try{t=n.call(e)===r}catch(e){}})),t}(e)}},36521:e=>{var t=t||{REVISION:"ALPHA"};!function(e){"use strict";var n=1024,r=new Int32Array([-1,1,4,-1,4,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,8]),o=function(e){return 65280&e},a=function(e){return 255&e},i=function(e){return r[(65280&e)>>8]},s=function(e,t){this.size=-8&(e+7|0),void 0===t?this.buffer=new ArrayBuffer(this.size):(this.buffer=t,this.size=t.length),this.u8=new Uint8Array(this.buffer),this.i32=new Int32Array(this.buffer),this.f32=new Float32Array(this.buffer),this.f64=new Float64Array(this.buffer)},c=function(){function e(e,t,r,i){this.type=0|o(r),this.channel=0|a(r),this.cols=0|e,this.rows=0|t,void 0===i?this.allocate():(this.buffer=i,this.data=256&this.type?this.buffer.u8:512&this.type?this.buffer.i32:this.type&n?this.buffer.f32:this.buffer.f64)}return e.prototype.allocate=function(){delete this.data,delete this.buffer,this.buffer=new s(this.cols*i(this.type)*this.channel*this.rows),this.data=256&this.type?this.buffer.u8:512&this.type?this.buffer.i32:this.type&n?this.buffer.f32:this.buffer.f64},e.prototype.copy_to=function(e){for(var t=e.data,n=this.data,r=0,o=this.cols*this.rows*this.channel|0;r<o-4;r+=4)t[r]=n[r],t[r+1]=n[r+1],t[r+2]=n[r+2],t[r+3]=n[r+3];for(;r<o;++r)t[r]=n[r]},e.prototype.resize=function(e,t,n){void 0===n&&(n=this.channel),e*i(this.type)*n*t>this.buffer.size?(this.cols=e,this.rows=t,this.channel=n,this.allocate()):(this.cols=e,this.rows=t,this.channel=n)},e}(),u=function(){function e(e){this.levels=0|e,this.data=new Array(e),this.pyrdown=t.imgproc.pyrdown}return e.prototype.allocate=function(e,t,n){for(var r=this.levels;--r>=0;)this.data[r]=new c(e>>r,t>>r,n)},e.prototype.build=function(e,t){void 0===t&&(t=!0);var n=2,r=e,o=this.data[0];if(!t)for(var a=e.cols*e.rows;--a>=0;)o.data[a]=e.data[a];for(o=this.data[1],this.pyrdown(r,o);n<this.levels;++n)r=o,o=this.data[n],this.pyrdown(r,o)},e}();e.U8_t=256,e.S32_t=512,e.F32_t=n,e.S64_t=2048,e.F64_t=4096,e.C1_t=1,e.C2_t=2,e.C3_t=3,e.C4_t=4,e.U8C1_t=257,e.U8C3_t=259,e.U8C4_t=260,e.F32C1_t=1025,e.F32C2_t=1026,e.S32C1_t=513,e.S32C2_t=514,e.EPSILON=1.192092896e-7,e.FLT_MIN=1e-37,e.COLOR_RGBA2GRAY=0,e.COLOR_RGB2GRAY=1,e.COLOR_BGRA2GRAY=2,e.COLOR_BGR2GRAY=3,e.BOX_BLUR_NOSCALE=1,e.SVD_U_T=1,e.SVD_V_T=2,e.get_data_type=o,e.get_channel=a,e.get_data_type_size=i,e.data_t=s,e.matrix_t=c,e.pyramid_t=u,e.keypoint_t=function(e,t,n,r,o){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===r&&(r=0),void 0===o&&(o=-1),this.x=e,this.y=t,this.score=n,this.level=r,this.angle=o}}(t),function(e){"use strict";var n,r,o,a=(o=function(){function e(e){this.next=null,this.data=new t.data_t(e),this.size=this.data.size,this.buffer=this.data.buffer,this.u8=this.data.u8,this.i32=this.data.i32,this.f32=this.data.f32,this.f64=this.data.f64}return e.prototype.resize=function(e){delete this.data,this.data=new t.data_t(e),this.size=this.data.size,this.buffer=this.data.buffer,this.u8=this.data.u8,this.i32=this.data.i32,this.f32=this.data.f32,this.f64=this.data.f64},e}(),{allocate:function(e,t){n=r=new o(t);for(var a=0;a<e;++a){var i=new o(t);r=r.next=i}},get_buffer:function(e){var t=n;return n=n.next,e>t.size&&t.resize(e),t},put_buffer:function(e){r=r.next=e}});e.cache=a,a.allocate(30,2560)}(t),function(e){"use strict";var n,r=(n=new Int32Array(96),{get_gaussian_kernel:function(e,n,r,o){var a=0,i=0,s=0,c=0,u=0,l=0,d=t.cache.get_buffer(e<<2),p=d.f32;if(1==(1&e)&&e<=7&&n<=0)switch(e>>1){case 0:p[0]=1,l=1;break;case 1:p[0]=.25,p[1]=.5,p[2]=.25,l=1;break;case 2:p[0]=.0625,p[1]=.25,p[2]=.375,p[3]=.25,p[4]=.0625,l=1;break;case 3:p[0]=.03125,p[1]=.109375,p[2]=.21875,p[3]=.28125,p[4]=.21875,p[5]=.109375,p[6]=.03125,l=1}else for(u=-.5/((c=n>0?n:.3*(.5*(e-1)-1)+.8)*c);a<e;++a)i=a-.5*(e-1),s=Math.exp(u*i*i),p[a]=s,l+=s;if(o&t.U8_t)for(l=256/l,a=0;a<e;++a)r[a]=p[a]*l+.5|0;else for(l=1/l,a=0;a<e;++a)r[a]=p[a]*l;t.cache.put_buffer(d)},perspective_4point_transform:function(e,t,n,r,o,a,i,s,c,u,l,d,p,h,f,g,m){var v=t,y=u,b=i,w=v*y*b,_=f,x=v*_,k=y*x,P=l,S=v*P,C=a,D=n,E=h,j=D*E,A=j*C,I=E*C*P,O=E*b,q=E*P,R=y*b,T=_*y,B=_*C,M=P*C,N=1/(O-q-R+T-B+M),L=v*E,F=D*C,G=b*v,U=_*G,z=D*y,W=j*P,$=D*P*C,V=b*_*y,H=_*D,J=-(k-w+S*C-C*x-j*y+A-I+O*y)*N,Q=(w-k-L*b+L*P+A-y*F+B*y-I)*N,X=v,Y=(-P*x+U+z*b-j*b+W-$+B*P-V)*N,K=(G*P-U-H*y+W-$+H*C+V-O*P)*N,Z=D,ee=(-S+G+z-F+q-O-T+B)*N,te=(-x+S+j-z+B-M-O+R)*N,ne=-((k=(y=d)*(x=(v=r)*(_=m)))-(w=v*y*(b=c))+(S=v*(P=p))*(C=s)-C*x-(j=(D=o)*(E=g))*y+(A=j*C)-(I=E*C*P)+(O=E*b)*y)*(N=1/(O-(q=E*P)-(R=y*b)+(T=_*y)-(B=_*C)+(M=P*C))),re=(w-k-(L=v*E)*b+L*P+A-y*(F=D*C)+B*y-I)*N,oe=v,ae=(-P*x+(U=_*(G=b*v))+(z=D*y)*b-j*b+(W=j*P)-($=D*P*C)+B*P-(V=b*_*y))*N,ie=(G*P-U-(H=_*D)*y+W-$+H*C+V-O*P)*N,se=D,ce=(-S+G+z-F+q-O-T+B)*N,ue=(-x+S+j-z+B-M-O+R)*N,le=X*ee;A=Z*ee-Y;var de=-Y*te+K*ee,pe=J-le;F=J*te-(S=Q*ee);var he=(w=J*Z)-(k=X*Y),fe=(b=J*K)-(x=Y*Q);$=(y=K-te*Z)*(E=1/(b-w*te-x+k*te+S*Z-le*K));var ge=(M=X*te-Q)*E,me=(G=-Q*Z+X*K)*E,ve=e.data;ve[0]=ne*$+re*(A*E)-oe*(de*E),ve[1]=ne*ge+re*(pe*E)-oe*(F*E),ve[2]=-ne*me-re*(he*E)+oe*(fe*E),ve[3]=ae*$+ie*(A*E)-se*(de*E),ve[4]=ae*ge+ie*(pe*E)-se*(F*E),ve[5]=-ae*me-ie*(he*E)+se*(fe*E),ve[6]=ce*$+ue*(A*E)-de*E,ve[7]=ce*ge+ue*(pe*E)-F*E,ve[8]=-ce*me-ue*(he*E)+fe*E},qsort:function(e,t,r,o){var a,i,s,c,u=0,l=0,d=0,p=0,h=0,f=0,g=0,m=0,v=0,y=0,b=0,w=0,_=0,x=0,k=0,P=0,S=0,C=0,D=n;if(!(r-t+1<=1))for(D[0]=t,D[1]=r;u>=0;)for(l=D[u<<1],d=D[1+(u<<1)],u--;;){if((h=d-l+1)<=7){for(g=l+1;g<=d;g++)for(m=g;m>l&&o(e[m],e[m-1]);m--)a=e[m],e[m]=e[m-1],e[m-1]=a;break}for(C=0,y=l,w=d,x=l+(h>>1),h>40&&(P=l+(v=h>>3),S=l+(v<<1),i=e[k=l],s=e[P],c=e[S],l=o(i,s)?o(s,c)?P:o(i,c)?S:k:o(c,s)?P:o(i,c)?k:S,P=x,S=x+v,i=e[k=x-v],s=e[P],c=e[S],x=o(i,s)?o(s,c)?P:o(i,c)?S:k:o(c,s)?P:o(i,c)?k:S,P=d-v,S=d,i=e[k=d-(v<<1)],s=e[P],c=e[S],d=o(i,s)?o(s,c)?P:o(i,c)?S:k:o(c,s)?P:o(i,c)?k:S),P=x,S=d,i=e[k=l],s=e[P],c=e[S],(x=o(i,s)?o(s,c)?P:o(i,c)?S:k:o(c,s)?P:o(i,c)?k:S)!=y&&(a=e[x],e[x]=e[y],e[y]=a,x=y),l=b=y+1,d=_=w,i=e[x];;){for(;l<=d&&!o(i,e[l]);)o(e[l],i)||(l>b&&(a=e[b],e[b]=e[l],e[l]=a),C=1,b++),l++;for(;l<=d&&!o(e[d],i);)o(i,e[d])||(d<_&&(a=e[_],e[_]=e[d],e[d]=a),C=1,_--),d--;if(l>d)break;a=e[l],e[l]=e[d],e[d]=a,C=1,l++,d--}if(0==C){for(d=w,g=(l=y)+1;g<=d;g++)for(m=g;m>l&&o(e[m],e[m-1]);m--)a=e[m],e[m]=e[m-1],e[m-1]=a;break}for(f=l-(h=Math.min(b-y,l-b))|0,p=0;p<h;++p,++f)a=e[y+p],e[y+p]=e[f],e[f]=a;for(f=w-(h=Math.min(w-_,_-d))+1|0,p=0;p<h;++p,++f)a=e[l+p],e[l+p]=e[f],e[f]=a;if(f=_-d,(h=l-b)>1)f>1?h>f?(D[++u<<1]=y,D[1+(u<<1)]=y+h-1,l=w-f+1,d=w):(D[++u<<1]=w-f+1,D[1+(u<<1)]=w,l=y,d=y+h-1):(l=y,d=y+h-1);else{if(!(f>1))break;l=w-f+1,d=w}}},median:function(e,t,n){for(var r,o=0,a=0,i=0,s=t+n>>1;;){if(n<=t)return e[s];if(n==t+1)return e[t]>e[n]&&(r=e[t],e[t]=e[n],e[n]=r),e[s];for(e[o=t+n>>1]>e[n]&&(r=e[o],e[o]=e[n],e[n]=r),e[t]>e[n]&&(r=e[t],e[t]=e[n],e[n]=r),e[o]>e[t]&&(r=e[o],e[o]=e[t],e[t]=r),a=t+1,r=e[o],e[o]=e[a],e[a]=r,i=n;;){do{++a}while(e[t]>e[a]);do{--i}while(e[i]>e[t]);if(i<a)break;r=e[a],e[a]=e[i],e[i]=r}r=e[t],e[t]=e[i],e[i]=r,i<=s?t=a:i>=s&&(n=i-1)}return 0}});e.math=r}(t),function(e){"use strict";e.matmath={identity:function(e,t){void 0===t&&(t=1);for(var n=e.data,r=e.rows,o=e.cols,a=o+1|0,i=r*o,s=i;--i>=0;)n[i]=0;for(i=s,s=0;s<i;)n[s]=t,s+=a},transpose:function(e,t){for(var n=0,r=0,o=t.rows,a=t.cols,i=0,s=0,c=0,u=t.data,l=e.data;n<o;s+=1,i+=a,n++)for(c=s,r=0;r<a;c+=o,r++)l[c]=u[i+r]},multiply:function(e,t,n){for(var r=0,o=0,a=0,i=0,s=0,c=0,u=0,l=0,d=t.cols,p=t.rows,h=n.cols,f=t.data,g=n.data,m=e.data,v=0;r<p;i+=d,r++)for(u=0,o=0;o<h;l++,u++,o++){for(c=u,s=i,v=0,a=0;a<d;s++,c+=h,a++)v+=f[s]*g[c];m[l]=v}},multiply_ABt:function(e,t,n){for(var r=0,o=0,a=0,i=0,s=0,c=0,u=0,l=t.cols,d=t.rows,p=n.rows,h=t.data,f=n.data,g=e.data,m=0;r<d;i+=l,r++)for(c=0,o=0;o<p;u++,o++){for(s=i,m=0,a=0;a<l;s++,c++,a++)m+=h[s]*f[c];g[u]=m}},multiply_AtB:function(e,t,n){for(var r=0,o=0,a=0,i=0,s=0,c=0,u=0,l=0,d=t.cols,p=t.rows,h=n.cols,f=t.data,g=n.data,m=e.data,v=0;r<d;i++,r++)for(u=0,o=0;o<h;l++,u++,o++){for(c=u,s=i,v=0,a=0;a<p;s+=d,c+=h,a++)v+=f[s]*g[c];m[l]=v}},multiply_AAt:function(e,t){for(var n=0,r=0,o=0,a=0,i=0,s=0,c=0,u=0,l=0,d=t.cols,p=t.rows,h=t.data,f=e.data,g=0;n<p;a+=p+1,i=s,n++)for(u=a,l=a,c=i,r=n;r<p;u++,l+=p,r++){for(s=i,g=0,o=0;o<d;o++)g+=h[s++]*h[c++];f[u]=g,f[l]=g}},multiply_AtA:function(e,t){for(var n=0,r=0,o=0,a=0,i=0,s=0,c=0,u=0,l=0,d=t.cols,p=t.rows,h=t.data,f=e.data,g=0;n<d;c+=d,n++)for(a=n,u=l=c+n,r=n;r<d;u++,l+=d,r++){for(i=a,s=r,g=0,o=0;o<p;i+=d,s+=d,o++)g+=h[i]*h[s];f[u]=g,f[l]=g}},identity_3x3:function(e,t){void 0===t&&(t=1);var n=e.data;n[0]=n[4]=n[8]=t,n[1]=n[2]=n[3]=0,n[5]=n[6]=n[7]=0},invert_3x3:function(e,t){var n=e.data,r=t.data,o=n[4],a=n[8],i=n[5],s=n[7],c=n[0],u=c*o,l=c*i,d=n[3],p=n[1],h=d*p,f=n[2],g=d*f,m=n[6],v=m*p,y=m*f,b=1/(u*a-l*s-h*a+g*s+v*i-y*o);r[0]=(o*a-i*s)*b,r[1]=-(p*a-f*s)*b,r[2]=-(-p*i+f*o)*b,r[3]=-(d*a-i*m)*b,r[4]=(c*a-y)*b,r[5]=-(l-g)*b,r[6]=-(-d*s+o*m)*b,r[7]=-(c*s-v)*b,r[8]=(u-h)*b},multiply_3x3:function(e,t,n){var r=e.data,o=t.data,a=n.data,i=o[0],s=o[1],c=o[2],u=o[3],l=o[4],d=o[5],p=o[6],h=o[7],f=o[8],g=a[0],m=a[1],v=a[2],y=a[3],b=a[4],w=a[5],_=a[6],x=a[7],k=a[8];r[0]=i*g+s*y+c*_,r[1]=i*m+s*b+c*x,r[2]=i*v+s*w+c*k,r[3]=u*g+l*y+d*_,r[4]=u*m+l*b+d*x,r[5]=u*v+l*w+d*k,r[6]=p*g+h*y+f*_,r[7]=p*m+h*b+f*x,r[8]=p*v+h*w+f*k},mat3x3_determinant:function(e){var t=e.data;return t[0]*t[4]*t[8]-t[0]*t[5]*t[7]-t[3]*t[1]*t[8]+t[3]*t[2]*t[7]+t[6]*t[1]*t[5]-t[6]*t[2]*t[4]},determinant_3x3:function(e,t,n,r,o,a,i,s,c){return e*o*c-e*a*s-r*t*c+r*n*s+i*t*a-i*n*o}}}(t),function(e){"use strict";var n,r,o=(n=function(e,t,n,r){r=e[t],e[t]=e[n],e[n]=r},r=function(e,t){return(e=Math.abs(e))>(t=Math.abs(t))?(t/=e,e*Math.sqrt(1+t*t)):t>0?(e/=t,t*Math.sqrt(1+e*e)):0},{lu_solve:function(e,r){var o,a,i,s,c=0,u=0,l=0,d=1,p=e.cols,h=e.data,f=r.data;for(c=0;c<p;c++){for(l=c,u=c+1;u<p;u++)Math.abs(h[u*p+c])>Math.abs(h[l*p+c])&&(l=u);if(Math.abs(h[l*p+c])<t.EPSILON)return 0;if(l!=c){for(u=c;u<p;u++)n(h,c*p+u,l*p+u,o);n(f,c,l,o),d=-d}for(i=-1/h[c*p+c],u=c+1;u<p;u++){for(a=h[u*p+c]*i,l=c+1;l<p;l++)h[u*p+l]+=a*h[c*p+l];f[u]+=a*f[c]}h[c*p+c]=-i}for(c=p-1;c>=0;c--){for(s=f[c],l=c+1;l<p;l++)s-=h[c*p+l]*f[l];f[c]=s*h[c*p+c]}return 1},cholesky_solve:function(e,t){var n,r,o=0,a=0,i=0,s=0,c=0,u=0,l=0,d=e.cols,p=e.data,h=t.data;for(o=0;o<d;o++)for(r=1,c=s=o*d,a=o;a<d;a++){for(n=p[c+o],i=0;i<o;i++)n-=p[i*d+o]*p[c+i];if(a==o){if(p[c+o]=n,0==n)return 0;r=1/n}else p[s+a]=n,p[c+o]=n*r;c+=d}for(s=0,u=0;u<d;u++){for(n=h[u],l=0;l<u;l++)n-=p[s+l]*h[l];h[u]=n,s+=d}for(s=0,u=0;u<d;u++)h[u]/=p[s+u],s+=d;for(u=d-1;u>=0;u--){for(n=h[u],s=(l=u+1)*d;l<d;l++)n-=p[s+u]*h[l],s+=d;h[u]=n}return 1},svd_decompose:function(e,o,a,i,s){void 0===s&&(s=0);var c=0,u=0,l=e.rows,d=e.cols,p=l,h=d,f=e.type|t.C1_t;p<h&&(c=1,u=p,p=h,h=u);var g=t.cache.get_buffer(p*p<<3),m=t.cache.get_buffer(h<<3),v=t.cache.get_buffer(h*h<<3),y=new t.matrix_t(p,p,f,g.data),b=new t.matrix_t(1,h,f,m.data),w=new t.matrix_t(h,h,f,v.data);if(0==c)t.matmath.transpose(y,e);else{for(u=0;u<d*l;u++)y.data[u]=e.data[u];for(;u<h*p;u++)y.data[u]=0}if(function(e,o,a,i,s,c,u,l){for(var d=2*t.EPSILON,p=t.FLT_MIN,h=0,f=0,g=0,m=0,v=Math.max(c,30),y=0,b=0,w=0,_=0,x=0,k=0,P=0,S=0,C=0,D=0,E=0,j=0,A=0,I=0,O=0,q=0,R=0,T=4660,B=0,M=0,N=0,L=t.cache.get_buffer(u<<3),F=L.f64;h<u;h++){for(g=0,E=0;g<c;g++)E+=(S=e[h*o+g])*S;if(F[h]=E,i){for(g=0;g<u;g++)i[h*s+g]=0;i[h*s+h]=1}}for(;m<v;m++){for(x=0,h=0;h<u-1;h++)for(f=h+1;f<u;f++){for(y=h*o|0,b=f*o|0,O=F[h],q=0,R=F[f],g=2,q+=e[y]*e[b],q+=e[y+1]*e[b+1];g<c;g++)q+=e[y+g]*e[b+g];if(!(Math.abs(q)<=d*Math.sqrt(O*R))){for(A=r(q*=2,j=O-R),j<0?(I=.5*(A-j),k=q/(A*(P=Math.sqrt(I/A))*2)):P=q/(A*(k=Math.sqrt((A+j)/(2*A)))*2),O=0,R=0,g=2,C=k*e[y]+P*e[b],D=-P*e[y]+k*e[b],e[y]=C,e[b]=D,O+=C*C,R+=D*D,C=k*e[y+1]+P*e[b+1],D=-P*e[y+1]+k*e[b+1],e[y+1]=C,e[b+1]=D,O+=C*C,R+=D*D;g<c;g++)C=k*e[y+g]+P*e[b+g],D=-P*e[y+g]+k*e[b+g],e[y+g]=C,e[b+g]=D,O+=C*C,R+=D*D;if(F[h]=O,F[f]=R,x=1,i)for(_=f*s|0,g=2,C=k*i[w=h*s|0]+P*i[_],D=-P*i[w]+k*i[_],i[w]=C,i[_]=D,C=k*i[w+1]+P*i[_+1],D=-P*i[w+1]+k*i[_+1],i[w+1]=C,i[_+1]=D;g<u;g++)C=k*i[w+g]+P*i[_+g],D=-P*i[w+g]+k*i[_+g],i[w+g]=C,i[_+g]=D}}if(0==x)break}for(h=0;h<u;h++){for(g=0,E=0;g<c;g++)E+=(S=e[h*o+g])*S;F[h]=Math.sqrt(E)}for(h=0;h<u-1;h++){for(f=h,g=h+1;g<u;g++)F[f]<F[g]&&(f=g);if(h!=f&&(n(F,h,f,E),i)){for(g=0;g<c;g++)n(e,h*o+g,f*o+g,S);for(g=0;g<u;g++)n(i,h*s+g,f*s+g,S)}}for(h=0;h<u;h++)a[h]=F[h];if(i){for(h=0;h<l;h++){for(E=h<u?F[h]:0;E<=p;){for(M=1/c,g=0;g<c;g++)B=0!=(256&(T=214013*T+2531011)>>16)?M:-M,e[h*o+g]=B;for(m=0;m<2;m++)for(f=0;f<h;f++){for(E=0,g=0;g<c;g++)E+=e[h*o+g]*e[f*o+g];for(N=0,g=0;g<c;g++)S=e[h*o+g]-E*e[f*o+g],e[h*o+g]=S,N+=Math.abs(S);for(N=N?1/N:0,g=0;g<c;g++)e[h*o+g]*=N}for(E=0,g=0;g<c;g++)E+=(S=e[h*o+g])*S;E=Math.sqrt(E)}for(P=1/E,g=0;g<c;g++)e[h*o+g]*=P}t.cache.put_buffer(L)}else t.cache.put_buffer(L)}(y.data,p,b.data,w.data,h,p,h,p),o){for(u=0;u<h;u++)o.data[u]=b.data[u];for(;u<d;u++)o.data[u]=0}if(0==c){if(a&&s&t.SVD_U_T)for(u=p*p;--u>=0;)a.data[u]=y.data[u];else a&&t.matmath.transpose(a,y);if(i&&s&t.SVD_V_T)for(u=h*h;--u>=0;)i.data[u]=w.data[u];else i&&t.matmath.transpose(i,w)}else{if(a&&s&t.SVD_U_T)for(u=h*h;--u>=0;)a.data[u]=w.data[u];else a&&t.matmath.transpose(a,w);if(i&&s&t.SVD_V_T)for(u=p*p;--u>=0;)i.data[u]=y.data[u];else i&&t.matmath.transpose(i,y)}t.cache.put_buffer(g),t.cache.put_buffer(m),t.cache.put_buffer(v)},svd_solve:function(e,n,r){var o,a=0,i=0,s=0,c=0,u=0,l=e.rows,d=e.cols,p=0,h=0,f=e.type|t.C1_t,g=t.cache.get_buffer(l*l<<3),m=t.cache.get_buffer(d<<3),v=t.cache.get_buffer(d*d<<3),y=new t.matrix_t(l,l,f,g.data),b=new t.matrix_t(1,d,f,m.data),w=new t.matrix_t(d,d,f,v.data),_=r.data,x=y.data,k=b.data,P=w.data;for(this.svd_decompose(e,b,y,w,0),o=t.EPSILON*k[0]*d;a<d;a++,u+=d){for(h=0,i=0;i<d;i++)if(k[i]>o){for(s=0,p=0,c=0;s<l;s++,c+=d)p+=x[c+i]*_[s];h+=p*P[u+i]/k[i]}n.data[a]=h}t.cache.put_buffer(g),t.cache.put_buffer(m),t.cache.put_buffer(v)},svd_invert:function(e,n){var r,o=0,a=0,i=0,s=0,c=0,u=0,l=n.rows,d=n.cols,p=0,h=n.type|t.C1_t,f=t.cache.get_buffer(l*l<<3),g=t.cache.get_buffer(d<<3),m=t.cache.get_buffer(d*d<<3),v=new t.matrix_t(l,l,h,f.data),y=new t.matrix_t(1,d,h,g.data),b=new t.matrix_t(d,d,h,m.data),w=e.data,_=v.data,x=y.data,k=b.data;for(this.svd_decompose(n,y,v,b,0),r=t.EPSILON*x[0]*d;o<d;o++,c+=d)for(a=0,s=0;a<l;a++,u++){for(i=0,p=0;i<d;i++,s++)x[i]>r&&(p+=k[c+i]*_[s]/x[i]);w[u]=p}t.cache.put_buffer(f),t.cache.put_buffer(g),t.cache.put_buffer(m)},eigenVV:function(e,o,a){for(var i=e.cols,s=i*i,c=e.type|t.C1_t,u=t.cache.get_buffer(i*i<<3),l=t.cache.get_buffer(i<<3),d=new t.matrix_t(i,i,c,u.data),p=new t.matrix_t(1,i,c,l.data);--s>=0;)d.data[s]=e.data[s];if(function(e,o,a,i,s,c){var u=t.EPSILON,l=0,d=0,p=0,h=0,f=0,g=0,m=0,v=0,y=0,b=c*c*30,w=0,_=0,x=0,k=0,P=0,S=0,C=0,D=0,E=0,j=t.cache.get_buffer(c<<2),A=t.cache.get_buffer(c<<2),I=j.i32,O=A.i32;if(i)for(;l<c;l++){for(p=l*s,d=0;d<c;d++)i[p+d]=0;i[p+l]=1}for(p=0;p<c;p++){if(a[p]=e[(o+1)*p],p<c-1){for(h=p+1,w=Math.abs(e[o*p+h]),l=p+2;l<c;l++)w<(_=Math.abs(e[o*p+l]))&&(w=_,h=l);I[p]=h}if(p>0){for(h=0,w=Math.abs(e[p]),l=1;l<p;l++)w<(_=Math.abs(e[o*l+p]))&&(w=_,h=l);O[p]=h}}if(c>1)for(;y<b;y++){for(p=0,w=Math.abs(e[I[0]]),l=1;l<c-1;l++)w<(_=Math.abs(e[o*l+I[l]]))&&(w=_,p=l);for(f=I[p],l=1;l<c;l++)w<(_=Math.abs(e[o*O[l]+l]))&&(w=_,p=O[l],f=l);if(x=e[o*p+f],Math.abs(x)<=u)break;for(k=.5*(a[f]-a[p]),C=(P=Math.abs(k)+r(x,k))/(S=r(x,P)),S=x/S,P=x/P*x,k<0&&(S=-S,P=-P),e[o*p+f]=0,a[p]-=P,a[f]+=P,l=0;l<p;l++)v=o*l+f,D=e[m=o*l+p],E=e[v],e[m]=D*C-E*S,e[v]=D*S+E*C;for(l=p+1;l<f;l++)v=o*l+f,D=e[m=o*p+l],E=e[v],e[m]=D*C-E*S,e[v]=D*S+E*C;for(m=o*p+(l=f+1),v=o*f+l;l<c;l++,m++,v++)D=e[m],E=e[v],e[m]=D*C-E*S,e[v]=D*S+E*C;if(i)for(m=s*p,v=s*f,l=0;l<c;l++,m++,v++)D=i[m],E=i[v],i[m]=D*C-E*S,i[v]=D*S+E*C;for(d=0;d<2;d++){if((g=0==d?p:f)<c-1){for(h=g+1,w=Math.abs(e[o*g+h]),l=g+2;l<c;l++)w<(_=Math.abs(e[o*g+l]))&&(w=_,h=l);I[g]=h}if(g>0){for(h=0,w=Math.abs(e[g]),l=1;l<g;l++)w<(_=Math.abs(e[o*l+g]))&&(w=_,h=l);O[g]=h}}}for(p=0;p<c-1;p++){for(h=p,l=p+1;l<c;l++)a[h]<a[l]&&(h=l);if(p!=h&&(n(a,h,p,w),i))for(l=0;l<c;l++)n(i,s*h+l,s*p+l,w)}t.cache.put_buffer(j),t.cache.put_buffer(A)}(d.data,i,p.data,o?o.data:null,i,i),a)for(;--i>=0;)a.data[i]=p.data[i];t.cache.put_buffer(u),t.cache.put_buffer(l)}});e.linalg=o}(t),function(e){"use strict";var n,r,o,a,i,s,c,u,l,d,p=(n=function(e){return e*e},r=new t.matrix_t(3,3,t.F32_t|t.C1_t),o=new t.matrix_t(3,3,t.F32_t|t.C1_t),a=new t.matrix_t(6,6,t.F32_t|t.C1_t),i=new t.matrix_t(6,1,t.F32_t|t.C1_t),s=function(){function e(){}return e.prototype.run=function(e,n,s,c){var u,l,d=0,p=0,h=s.type|t.C1_t,f=s.data,g=r.data,m=o.data,v=0,y=0;!function(e,t,n,r,o){for(var a,i,s=0,c=0,u=0,l=0,d=0,p=0,h=0,f=0,g=0;s<o;++s)c+=e[s].x,u+=e[s].y,d+=t[s].x,p+=t[s].y;for(c/=o,u/=o,d/=o,p/=o,s=0;s<o;++s)f=e[s].x-c,g=e[s].y-u,l+=Math.sqrt(f*f+g*g),f=t[s].x-d,g=t[s].y-p,h+=Math.sqrt(f*f+g*g);l/=o,h/=o,a=Math.SQRT2/l,i=Math.SQRT2/h,n[0]=n[4]=a,n[2]=-c*a,n[5]=-u*a,n[1]=n[3]=n[6]=n[7]=0,n[8]=1,r[0]=r[4]=i,r[2]=-d*i,r[5]=-p*i,r[1]=r[3]=r[6]=r[7]=0,r[8]=1}(e,n,g,m,c);for(var b=t.cache.get_buffer(2*c*6<<3),w=t.cache.get_buffer(2*c<<3),_=new t.matrix_t(6,2*c,h,b.data),x=new t.matrix_t(1,2*c,h,w.data),k=_.data,P=x.data;d<c;++d)u=e[d],l=n[d],v=g[0]*u.x+g[1]*u.y+g[2],y=g[3]*u.x+g[4]*u.y+g[5],k[p=2*d*6]=v,k[p+1]=y,k[p+2]=1,k[p+3]=0,k[p+4]=0,k[p+5]=0,k[p+=6]=0,k[p+1]=0,k[p+2]=0,k[p+3]=v,k[p+4]=y,k[p+5]=1,P[d<<1]=m[0]*l.x+m[1]*l.y+m[2],P[1+(d<<1)]=m[3]*l.x+m[4]*l.y+m[5];return t.matmath.multiply_AtA(a,_),t.matmath.multiply_AtB(i,_,x),t.linalg.lu_solve(a,i),f[0]=i.data[0],f[1]=i.data[1],f[2]=i.data[2],f[3]=i.data[3],f[4]=i.data[4],f[5]=i.data[5],f[6]=0,f[7]=0,f[8]=1,t.matmath.invert_3x3(o,o),t.matmath.multiply_3x3(s,o,s),t.matmath.multiply_3x3(s,s,r),t.cache.put_buffer(b),t.cache.put_buffer(w),1},e.prototype.error=function(e,t,r,o,a){for(var i,s,c=0,u=r.data;c<a;++c)i=e[c],s=t[c],o[c]=n(s.x-u[0]*i.x-u[1]*i.y-u[2])+n(s.y-u[3]*i.x-u[4]*i.y-u[5])},e.prototype.check_subset=function(e,t,n){return!0},e}(),c=new t.matrix_t(9,9,t.F32_t|t.C1_t),u=new t.matrix_t(9,9,t.F32_t|t.C1_t),{affine2d:s,homography2d:function(){function e(){}return e.prototype.run=function(e,n,a,i){for(var s=0,l=0,d=a.data,p=r.data,h=o.data,f=c.data,g=u.data,m=0,v=0,y=0,b=0,w=0,_=0,x=0,k=0,P=0,S=0,C=0,D=0;s<i;++s)x+=n[s].x,k+=n[s].y,C+=e[s].x,D+=e[s].y;for(x/=i,k/=i,C/=i,D/=i,s=0;s<i;++s)w+=Math.abs(n[s].x-x),_+=Math.abs(n[s].y-k),P+=Math.abs(e[s].x-C),S+=Math.abs(e[s].y-D);if(Math.abs(w)<t.EPSILON||Math.abs(_)<t.EPSILON||Math.abs(P)<t.EPSILON||Math.abs(S)<t.EPSILON)return 0;for(w=i/w,_=i/_,P=i/P,S=i/S,p[0]=P,p[1]=0,p[2]=-C*P,p[3]=0,p[4]=S,p[5]=-D*S,p[6]=0,p[7]=0,p[8]=1,h[0]=1/w,h[1]=0,h[2]=x,h[3]=0,h[4]=1/_,h[5]=k,h[6]=0,h[7]=0,h[8]=1,s=81;--s>=0;)f[s]=0;for(s=0;s<i;++s)m=(n[s].x-x)*w,v=(n[s].y-k)*_,y=(e[s].x-C)*P,b=(e[s].y-D)*S,f[0]+=y*y,f[1]+=y*b,f[2]+=y,f[6]+=y*-m*y,f[7]+=y*-m*b,f[8]+=y*-m,f[10]+=b*b,f[11]+=b,f[15]+=b*-m*y,f[16]+=b*-m*b,f[17]+=b*-m,f[20]+=1,f[24]+=-m*y,f[25]+=-m*b,f[26]+=-m,f[30]+=y*y,f[31]+=y*b,f[32]+=y,f[33]+=y*-v*y,f[34]+=y*-v*b,f[35]+=y*-v,f[40]+=b*b,f[41]+=b,f[42]+=b*-v*y,f[43]+=b*-v*b,f[44]+=b*-v,f[50]+=1,f[51]+=-v*y,f[52]+=-v*b,f[53]+=-v,f[60]+=-m*y*-m*y+-v*y*-v*y,f[61]+=-m*y*-m*b+-v*y*-v*b,f[62]+=-m*y*-m+-v*y*-v,f[70]+=-m*b*-m*b+-v*b*-v*b,f[71]+=-m*b*-m+-v*b*-v,f[80]+=-m*-m+-v*-v;for(s=0;s<9;++s)for(l=0;l<s;++l)f[9*s+l]=f[9*l+s];return t.linalg.eigenVV(c,u),d[0]=g[72],d[1]=g[73],d[2]=g[74],d[3]=g[75],d[4]=g[76],d[5]=g[77],d[6]=g[78],d[7]=g[79],d[8]=g[80],t.matmath.multiply_3x3(a,o,a),t.matmath.multiply_3x3(a,a,r),m=1/d[8],d[0]*=m,d[1]*=m,d[2]*=m,d[3]*=m,d[4]*=m,d[5]*=m,d[6]*=m,d[7]*=m,d[8]=1,1},e.prototype.error=function(e,t,n,r,o){for(var a,i,s=0,c=0,u=0,l=0,d=n.data;s<o;++s)a=e[s],i=t[s],c=1/(d[6]*a.x+d[7]*a.y+1),u=(d[0]*a.x+d[1]*a.y+d[2])*c-i.x,l=(d[3]*a.x+d[4]*a.y+d[5])*c-i.y,r[s]=u*u+l*l},e.prototype.check_subset=function(e,n,r){if(4==r){var o=0,a=e[0],i=e[1],s=e[2],c=e[3],u=n[0],l=n[1],d=n[2],p=n[3],h=a.x,f=a.y,g=i.x,m=i.y,v=s.x,y=s.y,b=u.x,w=u.y,_=l.x,x=l.y,k=d.x,P=d.y,S=t.matmath.determinant_3x3(h,f,1,g,m,1,v,y,1),C=t.matmath.determinant_3x3(b,w,1,_,x,1,k,P,1);if(S*C<0&&o++,h=i.x,f=i.y,g=s.x,m=s.y,v=c.x,y=c.y,b=l.x,w=l.y,_=d.x,x=d.y,k=p.x,P=p.y,(S=t.matmath.determinant_3x3(h,f,1,g,m,1,v,y,1))*(C=t.matmath.determinant_3x3(b,w,1,_,x,1,k,P,1))<0&&o++,h=a.x,f=a.y,g=s.x,m=s.y,v=c.x,y=c.y,b=u.x,w=u.y,_=d.x,x=d.y,k=p.x,P=p.y,(S=t.matmath.determinant_3x3(h,f,1,g,m,1,v,y,1))*(C=t.matmath.determinant_3x3(b,w,1,_,x,1,k,P,1))<0&&o++,h=a.x,f=a.y,g=i.x,m=i.y,v=c.x,y=c.y,b=u.x,w=u.y,_=l.x,x=l.y,k=p.x,P=p.y,(S=t.matmath.determinant_3x3(h,f,1,g,m,1,v,y,1))*(C=t.matmath.determinant_3x3(b,w,1,_,x,1,k,P,1))<0&&o++,0!=o&&4!=o)return!1}return!0},e}()}),h=function(){function e(e,t,n,r){void 0===e&&(e=0),void 0===t&&(t=.5),void 0===n&&(n=.5),void 0===r&&(r=.99),this.size=e,this.thresh=t,this.eps=n,this.prob=r}return e.prototype.update_iters=function(e,t){var n=Math.log(1-this.prob),r=Math.log(1-Math.pow(1-e,this.size));return 0|(r>=0||-n>=t*-r?t:Math.round(n/r))},e}(),f=(l=function(e,t,n,r,o,a,i){for(var s=1e3,c=[],u=0,l=0,d=0,p=0,h=!1;d<s;++d){for(u=0;u<r&&d<s;){for(h=!1,p=0;!h;)for(h=!0,p=c[u]=0|Math.floor(Math.random()*o),l=0;l<u;++l)if(p==c[l]){h=!1;break}a[u]=t[p],i[u]=n[p],e.check_subset(a,i,u+1)?++u:d++}break}return u==r&&d<s},d=function(e,t,n,r,o,a,i,s){var c=0,u=0,l=0,d=a*a;for(e.error(n,r,t,i,o);u<o;++u)l=i[u]<=d,s[u]=l,c+=l;return c},{ransac:function(e,n,r,o,a,i,s,c){if(void 0===c&&(c=1e3),a<e.size)return!1;var u=e.size,p=c,h=0,f=!1,g=[],m=[],v=i.cols,y=i.rows,b=i.type|t.C1_t,w=t.cache.get_buffer(v*y<<3),_=t.cache.get_buffer(a),x=t.cache.get_buffer(a<<2),k=new t.matrix_t(v,y,b,w.data),P=new t.matrix_t(a,1,t.U8C1_t,_.data),S=-1,C=0,D=x.f32;if(a==u){if(n.run(r,o,k,a)<=0)return t.cache.put_buffer(w),t.cache.put_buffer(_),t.cache.put_buffer(x),!1;if(k.copy_to(i),s)for(;--a>=0;)s.data[a]=1;return t.cache.put_buffer(w),t.cache.put_buffer(_),t.cache.put_buffer(x),!0}for(;h<p;++h){if(!l(n,r,o,u,a,g,m)){if(0==h)return t.cache.put_buffer(w),t.cache.put_buffer(_),t.cache.put_buffer(x),!1;break}n.run(g,m,k,u)<=0||(C=d(n,k,r,o,a,e.thresh,D,P.data))>Math.max(S,u-1)&&(k.copy_to(i),S=C,s&&P.copy_to(s),p=e.update_iters((a-C)/a,p),f=!0)}return t.cache.put_buffer(w),t.cache.put_buffer(_),t.cache.put_buffer(x),f},lmeds:function(e,n,r,o,a,i,s,c){if(void 0===c&&(c=1e3),a<e.size)return!1;var u=e.size,p=c,h=0,f=!1,g=[],m=[],v=i.cols,y=i.rows,b=i.type|t.C1_t,w=t.cache.get_buffer(v*y<<3),_=t.cache.get_buffer(a),x=t.cache.get_buffer(a<<2),k=new t.matrix_t(v,y,b,w.data),P=new t.matrix_t(a,1,t.U8_t|t.C1_t,_.data),S=0,C=x.f32,D=1e9,E=0,j=0;if(e.eps=.45,p=e.update_iters(e.eps,p),a==u){if(n.run(r,o,k,a)<=0)return t.cache.put_buffer(w),t.cache.put_buffer(_),t.cache.put_buffer(x),!1;if(k.copy_to(i),s)for(;--a>=0;)s.data[a]=1;return t.cache.put_buffer(w),t.cache.put_buffer(_),t.cache.put_buffer(x),!0}for(;h<p;++h){if(!l(n,r,o,u,a,g,m)){if(0==h)return t.cache.put_buffer(w),t.cache.put_buffer(_),t.cache.put_buffer(x),!1;break}n.run(g,m,k,u)<=0||(n.error(r,o,k,C,a),(j=t.math.median(C,0,a-1))<D&&(D=j,k.copy_to(i),f=!0))}return f&&(E=2.5*1.4826*(1+5/(a-u))*Math.sqrt(D),E=Math.max(E,.001),S=d(n,i,r,o,a,E,C,P.data),s&&P.copy_to(s),f=S>=u),t.cache.put_buffer(w),t.cache.put_buffer(_),t.cache.put_buffer(x),f}});e.ransac_params_t=h,e.motion_model=p,e.motion_estimator=f}(t),function(e){"use strict";var n={grayscale:function(e,n,r,o,a){void 0===a&&(a=t.COLOR_RGBA2GRAY);var i=0,s=0,c=0,u=0,l=0,d=0,p=4899,h=9617,f=1868,g=4;a!=t.COLOR_BGRA2GRAY&&a!=t.COLOR_BGR2GRAY||(p=1868,f=4899),a!=t.COLOR_RGB2GRAY&&a!=t.COLOR_BGR2GRAY||(g=3);var m=g<<1,v=3*g|0;o.resize(n,r,1);var y=o.data;for(s=0;s<r;++s,u+=n,c+=n*g){for(i=0,l=c,d=u;i<=n-4;i+=4,l+=g<<2,d+=4)y[d]=e[l]*p+e[l+1]*h+e[l+2]*f+8192>>14,y[d+1]=e[l+g]*p+e[l+g+1]*h+e[l+g+2]*f+8192>>14,y[d+2]=e[l+m]*p+e[l+m+1]*h+e[l+m+2]*f+8192>>14,y[d+3]=e[l+v]*p+e[l+v+1]*h+e[l+v+2]*f+8192>>14;for(;i<n;++i,++d,l+=g)y[d]=e[l]*p+e[l+1]*h+e[l+2]*f+8192>>14}},resample:function(e,n,r,o){var a=e.rows,i=e.cols;a>o&&i>r&&(n.resize(r,o,e.channel),e.type&t.U8_t&&n.type&t.U8_t&&a*i/(o*r)<256?function(e,n,r,o){for(var a=0,i=e.channel,s=e.cols,c=e.rows,u=e.data,l=n.data,d=s/r,p=c/o,h=d*p*65536|0,f=0,g=0,m=0,v=0,y=0,b=0,w=0,_=0,x=0,k=0,P=0,S=0,C=0,D=0,E=0,j=0,A=t.cache.get_buffer(r*i<<2),I=t.cache.get_buffer(r*i<<2),O=t.cache.get_buffer(2*s*3<<2),q=A.i32,R=I.i32,T=O.i32;f<r;f++){for(y=1+(x=f*d)-1e-6|0,b=0|(k=x+d),y=Math.min(y,s-1),b=Math.min(b,s-1),y>x&&(T[_++]=f*i|0,T[_++]=(y-1)*i|0,T[_++]=256*(y-x)|0,a++),m=y;m<b;m++)a++,T[_++]=f*i|0,T[_++]=m*i|0,T[_++]=256;k-b>.001&&(a++,T[_++]=f*i|0,T[_++]=b*i|0,T[_++]=256*(k-b)|0)}for(f=0;f<r*i;f++)q[f]=R[f]=0;for(g=0,v=0;v<c;v++){for(P=s*v,_=0;_<a;_++)for(C=T[3*_],y=T[3*_+1],D=T[3*_+2],w=0;w<i;w++)q[C+w]+=u[P+y+w]*D;if((g+1)*p<=v+1||v==c-1){if(j=256-(E=256*Math.max(v+1-(g+1)*p,0)|0),S=r*g,E<=0)for(f=0;f<r*i;f++)l[S+f]=Math.min(Math.max((R[f]+256*q[f])/h,0),255),R[f]=q[f]=0;else for(f=0;f<r*i;f++)l[S+f]=Math.min(Math.max((R[f]+q[f]*j)/h,0),255),R[f]=q[f]*E,q[f]=0;g++}else for(f=0;f<r*i;f++)R[f]+=256*q[f],q[f]=0}t.cache.put_buffer(I),t.cache.put_buffer(A),t.cache.put_buffer(O)}(e,n,r,o):function(e,n,r,o){for(var a=0,i=e.channel,s=e.cols,c=e.rows,u=e.data,l=n.data,d=s/r,p=c/o,h=1/(d*p),f=0,g=0,m=0,v=0,y=0,b=0,w=0,_=0,x=0,k=0,P=0,S=0,C=0,D=0,E=0,j=0,A=t.cache.get_buffer(r*i<<2),I=t.cache.get_buffer(r*i<<2),O=t.cache.get_buffer(2*s*3<<2),q=A.f32,R=I.f32,T=O.f32;f<r;f++){for(y=1+(x=f*d)-1e-6|0,b=0|(k=x+d),y=Math.min(y,s-1),b=Math.min(b,s-1),y>x&&(a++,T[_++]=(y-1)*i|0,T[_++]=f*i|0,T[_++]=(y-x)*h),m=y;m<b;m++)a++,T[_++]=m*i|0,T[_++]=f*i|0,T[_++]=h;k-b>.001&&(a++,T[_++]=b*i|0,T[_++]=f*i|0,T[_++]=(k-b)*h)}for(f=0;f<r*i;f++)q[f]=R[f]=0;for(g=0,v=0;v<c;v++){for(P=s*v,_=0;_<a;_++)for(y=0|T[3*_],C=0|T[3*_+1],D=T[3*_+2],w=0;w<i;w++)q[C+w]+=u[P+y+w]*D;if((g+1)*p<=v+1||v==c-1){if(j=1-(E=Math.max(v+1-(g+1)*p,0)),S=r*g,Math.abs(E)<.001)for(f=0;f<r*i;f++)l[S+f]=R[f]+q[f],R[f]=q[f]=0;else for(f=0;f<r*i;f++)l[S+f]=R[f]+q[f]*j,R[f]=q[f]*E,q[f]=0;g++}else for(f=0;f<r*i;f++)R[f]+=q[f],q[f]=0}t.cache.put_buffer(I),t.cache.put_buffer(A),t.cache.put_buffer(O)}(e,n,r,o))},box_blur_gray:function(e,n,r,o){void 0===o&&(o=0);var a=e.cols,i=e.rows,s=i<<1,c=a<<1,u=0,l=0,d=0,p=0,h=1+(r<<1)|0,f=r+1|0,g=f+1|0,m=o&t.BOX_BLUR_NOSCALE?1:1/(h*h),v=t.cache.get_buffer(a*i<<2),y=0,b=0,w=0,_=0,x=0,k=v.i32,P=e.data,S=0;for(n.resize(a,i,e.channel),d=0;d<i;++d){for(b=d,y=f*P[w],u=w+1|0,p=w+r|0;u<=p;++u)y+=P[u];for(_=w+f|0,S=P[x=w],l=0;l<r;++l,b+=i)k[b]=y,y+=P[_]-S,_++;for(;l<a-g;l+=2,b+=s)k[b]=y,y+=P[_]-P[x],k[b+i]=y,y+=P[_+1]-P[x+1],_+=2,x+=2;for(;l<a-f;++l,b+=i)k[b]=y,y+=P[_]-P[x],_++,x++;for(S=P[_-1];l<a;++l,b+=i)k[b]=y,y+=S-P[x],x++;w+=a}if(w=0,P=n.data,1==m)for(d=0;d<a;++d){for(b=d,y=f*k[w],u=w+1|0,p=w+r|0;u<=p;++u)y+=k[u];for(_=w+f,S=k[x=w],l=0;l<r;++l,b+=a)P[b]=y,y+=k[_]-S,_++;for(;l<i-g;l+=2,b+=c)P[b]=y,y+=k[_]-k[x],P[b+a]=y,y+=k[_+1]-k[x+1],_+=2,x+=2;for(;l<i-f;++l,b+=a)P[b]=y,y+=k[_]-k[x],_++,x++;for(S=k[_-1];l<i;++l,b+=a)P[b]=y,y+=S-k[x],x++;w+=i}else for(d=0;d<a;++d){for(b=d,y=f*k[w],u=w+1|0,p=w+r|0;u<=p;++u)y+=k[u];for(_=w+f,S=k[x=w],l=0;l<r;++l,b+=a)P[b]=y*m,y+=k[_]-S,_++;for(;l<i-g;l+=2,b+=c)P[b]=y*m,y+=k[_]-k[x],P[b+a]=y*m,y+=k[_+1]-k[x+1],_+=2,x+=2;for(;l<i-f;++l,b+=a)P[b]=y*m,y+=k[_]-k[x],_++,x++;for(S=k[_-1];l<i;++l,b+=a)P[b]=y*m,y+=S-k[x],x++;w+=i}t.cache.put_buffer(v)},gaussian_blur:function(e,n,r,o){void 0===o&&(o=0),void 0===r&&(r=0);var a=(r=0==r?2*Math.max(1,4*o+1-1e-8)+1|0:r)>>1,i=e.cols,s=e.rows,c=e.type,u=c&t.U8_t;n.resize(i,s,e.channel);var l,d,p=e.data,h=n.data,f=r+Math.max(s,i)|0,g=t.cache.get_buffer(f<<2),m=t.cache.get_buffer(r<<2);u?(l=g.i32,d=m.i32):c&t.S32_t?(l=g.i32,d=m.f32):(l=g.f32,d=m.f32),t.math.get_gaussian_kernel(r,o,d,c),u?function(e,t,n,r,o,a,i,s){for(var c=0,u=0,l=0,d=0,p=0,h=0,f=0,g=0,m=0,v=a[0],y=0,b=r<<1,w=3*r,_=r<<2;c<o;++c){for(h=t[d],u=0;u<s;++u)e[u]=h;for(u=0;u<=r-2;u+=2)e[u+s]=t[d+u],e[u+s+1]=t[d+u+1];for(;u<r;++u)e[u+s]=t[d+u];for(h=t[d+r-1],u=r;u<s+r;++u)e[u+s]=h;for(u=0;u<=r-4;u+=4){for(h=e[u]*v,f=e[u+1]*v,g=e[u+2]*v,m=e[u+3]*v,l=1;l<i;++l)y=a[l],h+=e[l+u]*y,f+=e[l+u+1]*y,g+=e[l+u+2]*y,m+=e[l+u+3]*y;n[p+u]=Math.min(h>>8,255),n[p+u+1]=Math.min(f>>8,255),n[p+u+2]=Math.min(g>>8,255),n[p+u+3]=Math.min(m>>8,255)}for(;u<r;++u){for(h=e[u]*v,l=1;l<i;++l)h+=e[l+u]*a[l];n[p+u]=Math.min(h>>8,255)}d+=r,p+=r}for(c=0;c<r;++c){for(h=n[c],u=0;u<s;++u)e[u]=h;for(l=c,u=0;u<=o-2;u+=2,l+=b)e[u+s]=n[l],e[u+s+1]=n[l+r];for(;u<o;++u,l+=r)e[u+s]=n[l];for(h=n[(o-1)*r+c],u=o;u<s+o;++u)e[u+s]=h;for(p=c,u=0;u<=o-4;u+=4,p+=_){for(h=e[u]*v,f=e[u+1]*v,g=e[u+2]*v,m=e[u+3]*v,l=1;l<i;++l)y=a[l],h+=e[l+u]*y,f+=e[l+u+1]*y,g+=e[l+u+2]*y,m+=e[l+u+3]*y;n[p]=Math.min(h>>8,255),n[p+r]=Math.min(f>>8,255),n[p+b]=Math.min(g>>8,255),n[p+w]=Math.min(m>>8,255)}for(;u<o;++u,p+=r){for(h=e[u]*v,l=1;l<i;++l)h+=e[l+u]*a[l];n[p]=Math.min(h>>8,255)}}}(l,p,h,i,s,d,r,a):function(e,t,n,r,o,a,i,s){for(var c=0,u=0,l=0,d=0,p=0,h=0,f=0,g=0,m=0,v=a[0],y=0,b=r<<1,w=3*r,_=r<<2;c<o;++c){for(h=t[d],u=0;u<s;++u)e[u]=h;for(u=0;u<=r-2;u+=2)e[u+s]=t[d+u],e[u+s+1]=t[d+u+1];for(;u<r;++u)e[u+s]=t[d+u];for(h=t[d+r-1],u=r;u<s+r;++u)e[u+s]=h;for(u=0;u<=r-4;u+=4){for(h=e[u]*v,f=e[u+1]*v,g=e[u+2]*v,m=e[u+3]*v,l=1;l<i;++l)y=a[l],h+=e[l+u]*y,f+=e[l+u+1]*y,g+=e[l+u+2]*y,m+=e[l+u+3]*y;n[p+u]=h,n[p+u+1]=f,n[p+u+2]=g,n[p+u+3]=m}for(;u<r;++u){for(h=e[u]*v,l=1;l<i;++l)h+=e[l+u]*a[l];n[p+u]=h}d+=r,p+=r}for(c=0;c<r;++c){for(h=n[c],u=0;u<s;++u)e[u]=h;for(l=c,u=0;u<=o-2;u+=2,l+=b)e[u+s]=n[l],e[u+s+1]=n[l+r];for(;u<o;++u,l+=r)e[u+s]=n[l];for(h=n[(o-1)*r+c],u=o;u<s+o;++u)e[u+s]=h;for(p=c,u=0;u<=o-4;u+=4,p+=_){for(h=e[u]*v,f=e[u+1]*v,g=e[u+2]*v,m=e[u+3]*v,l=1;l<i;++l)y=a[l],h+=e[l+u]*y,f+=e[l+u+1]*y,g+=e[l+u+2]*y,m+=e[l+u+3]*y;n[p]=h,n[p+r]=f,n[p+b]=g,n[p+w]=m}for(;u<o;++u,p+=r){for(h=e[u]*v,l=1;l<i;++l)h+=e[l+u]*a[l];n[p]=h}}}(l,p,h,i,s,d,r,a),t.cache.put_buffer(g),t.cache.put_buffer(m)},pyrdown:function(e,t,n,r){void 0===n&&(n=0),void 0===r&&(r=0);var o=e.cols,a=o>>1,i=e.rows>>1,s=a-(n<<1),c=i-(r<<1),u=0,l=0,d=n+r*o,p=0,h=0,f=0;t.resize(a,i,e.channel);var g=e.data,m=t.data;for(l=0;l<c;++l){for(p=d,f=h,u=0;u<=s-2;u+=2,f+=2,p+=4)m[f]=g[p]+g[p+1]+g[p+o]+g[p+o+1]+2>>2,m[f+1]=g[p+2]+g[p+3]+g[p+o+2]+g[p+o+3]+2>>2;for(;u<s;++u,++f,p+=2)m[f]=g[p]+g[p+1]+g[p+o]+g[p+o+1]+2>>2;d+=o<<1,h+=a}},scharr_derivatives:function(e,n){var r,o,a,i,s,c,u,l,d=e.cols,p=e.rows,h=d<<1,f=0,g=0,m=0,v=0,y=0,b=0,w=0;n.resize(d,p,2);var _=e.data,x=n.data,k=t.cache.get_buffer(d+2<<2),P=t.cache.get_buffer(d+2<<2);for(e.type&t.U8_t||e.type&t.S32_t?(u=k.i32,l=P.i32):(u=k.f32,l=P.f32);g<p;++g,y+=d){for(v=(g>0?g-1:1)*d|0,b=(g<p-1?g+1:p-2)*d|0,w=g*h|0,f=0,m=1;f<=d-2;f+=2,m+=2)r=_[v+f],o=_[b+f],u[m]=3*(r+o)+10*_[y+f],l[m]=o-r,r=_[v+f+1],o=_[b+f+1],u[m+1]=3*(r+o)+10*_[y+f+1],l[m+1]=o-r;for(;f<d;++f,++m)r=_[v+f],o=_[b+f],u[m]=3*(r+o)+10*_[y+f],l[m]=o-r;for(f=d+1|0,u[0]=u[1],u[f]=u[d],l[0]=l[1],l[f]=l[d],f=0;f<=d-4;f+=4)r=l[f+2],o=l[f+1],a=l[f+3],i=l[f+4],s=u[f+2],c=u[f+3],x[w++]=s-u[f],x[w++]=3*(r+l[f])+10*o,x[w++]=c-u[f+1],x[w++]=3*(a+o)+10*r,x[w++]=u[f+4]-s,x[w++]=3*(i+r)+10*a,x[w++]=u[f+5]-c,x[w++]=3*(l[f+5]+a)+10*i;for(;f<d;++f)x[w++]=u[f+2]-u[f],x[w++]=3*(l[f+2]+l[f])+10*l[f+1]}t.cache.put_buffer(k),t.cache.put_buffer(P)},sobel_derivatives:function(e,n){var r,o,a,i,s,c,u,l,d=e.cols,p=e.rows,h=d<<1,f=0,g=0,m=0,v=0,y=0,b=0,w=0;n.resize(d,p,2);var _=e.data,x=n.data,k=t.cache.get_buffer(d+2<<2),P=t.cache.get_buffer(d+2<<2);for(e.type&t.U8_t||e.type&t.S32_t?(u=k.i32,l=P.i32):(u=k.f32,l=P.f32);g<p;++g,y+=d){for(v=(g>0?g-1:1)*d|0,b=(g<p-1?g+1:p-2)*d|0,w=g*h|0,f=0,m=1;f<=d-2;f+=2,m+=2)r=_[v+f],o=_[b+f],u[m]=r+o+2*_[y+f],l[m]=o-r,r=_[v+f+1],o=_[b+f+1],u[m+1]=r+o+2*_[y+f+1],l[m+1]=o-r;for(;f<d;++f,++m)r=_[v+f],o=_[b+f],u[m]=r+o+2*_[y+f],l[m]=o-r;for(f=d+1|0,u[0]=u[1],u[f]=u[d],l[0]=l[1],l[f]=l[d],f=0;f<=d-4;f+=4)r=l[f+2],o=l[f+1],a=l[f+3],i=l[f+4],s=u[f+2],c=u[f+3],x[w++]=s-u[f],x[w++]=r+l[f]+2*o,x[w++]=c-u[f+1],x[w++]=a+o+2*r,x[w++]=u[f+4]-s,x[w++]=i+r+2*a,x[w++]=u[f+5]-c,x[w++]=l[f+5]+a+2*i;for(;f<d;++f)x[w++]=u[f+2]-u[f],x[w++]=l[f+2]+l[f]+2*l[f+1]}t.cache.put_buffer(k),t.cache.put_buffer(P)},compute_integral_image:function(e,t,n,r){var o=0|e.cols,a=0|e.rows,i=e.data,s=o+1|0,c=0,u=0,l=0,d=0,p=0,h=0,f=0,g=0;if(t&&n){for(;p<s;++p)t[p]=0,n[p]=0;for(l=s+1|0,d=1,p=0,g=0;p<a;++p,++l,++d){for(c=u=0,h=0;h<=o-2;h+=2,g+=2,l+=2,d+=2)c+=f=i[g],u+=f*f,t[l]=t[d]+c,n[l]=n[d]+u,c+=f=i[g+1],u+=f*f,t[l+1]=t[d+1]+c,n[l+1]=n[d+1]+u;for(;h<o;++h,++g,++l,++d)c+=f=i[g],u+=f*f,t[l]=t[d]+c,n[l]=n[d]+u}}else if(t){for(;p<s;++p)t[p]=0;for(l=s+1|0,d=1,p=0,g=0;p<a;++p,++l,++d){for(c=0,h=0;h<=o-2;h+=2,g+=2,l+=2,d+=2)c+=i[g],t[l]=t[d]+c,c+=i[g+1],t[l+1]=t[d+1]+c;for(;h<o;++h,++g,++l,++d)c+=i[g],t[l]=t[d]+c}}else if(n){for(;p<s;++p)n[p]=0;for(l=s+1|0,d=1,p=0,g=0;p<a;++p,++l,++d){for(u=0,h=0;h<=o-2;h+=2,g+=2,l+=2,d+=2)u+=(f=i[g])*f,n[l]=n[d]+u,u+=(f=i[g+1])*f,n[l+1]=n[d+1]+u;for(;h<o;++h,++g,++l,++d)u+=(f=i[g])*f,n[l]=n[d]+u}}if(r){for(p=0;p<s;++p)r[p]=0;for(l=s+1|0,d=0,p=0,g=0;p<a;++p,++l,++d){for(h=0;h<=o-2;h+=2,g+=2,l+=2,d+=2)r[l]=i[g]+r[d],r[l+1]=i[g+1]+r[d+1];for(;h<o;++h,++g,++l,++d)r[l]=i[g]+r[d]}for(l=s+o|0,d=o,p=0;p<a;++p,l+=s,d+=s)r[l]+=r[d];for(h=o-1;h>0;--h)for(d=(l=h+a*s)-s,p=a;p>0;--p,l-=s,d-=s)r[l]+=r[d]+r[d+1]}},equalize_histogram:function(e,n){var r=e.cols,o=e.rows,a=e.data;n.resize(r,o,e.channel);var i,s,c=n.data,u=r*o,l=0,d=0,p=t.cache.get_buffer(1024);for(i=p.i32;l<256;++l)i[l]=0;for(l=0;l<u;++l)++i[a[l]];for(d=i[0],l=1;l<256;++l)d=i[l]+=d;for(s=255/u,l=0;l<u;++l)c[l]=i[a[l]]*s+.5|0;t.cache.put_buffer(p)},canny:function(e,n,r,o){var a=e.cols,i=e.rows;e.data,n.resize(a,i,e.channel);var s=n.data,c=0,u=0,l=0,d=a<<1,p=0,h=0,f=0,g=0,m=0,v=0,y=0,b=0,w=t.cache.get_buffer(i*d<<2),_=t.cache.get_buffer(3*(a+2)<<2),x=t.cache.get_buffer((i+2)*(a+2)<<2),k=t.cache.get_buffer(i*a<<2),P=_.i32,S=x.i32,C=k.i32,D=w.i32,E=new t.matrix_t(a,i,t.S32C2_t,w.data),j=1,A=a+2+1|0,I=2*(a+2)+1|0,O=a+2|0,q=O+1|0,R=0;for(this.sobel_derivatives(e,E),r>o&&(c=r,r=o,o=c),c=3*(a+2)|0;--c>=0;)P[c]=0;for(c=(i+2)*(a+2)|0;--c>=0;)S[c]=0;for(;u<a;++u,l+=2)g=D[l],m=D[l+1],P[A+u]=(g^g>>31)-(g>>31)+((m^m>>31)-(m>>31));for(c=1;c<=i;++c,l+=d){if(c==i)for(u=I+a;--u>=I;)P[u]=0;else for(u=0;u<a;u++)g=D[l+(u<<1)],m=D[l+(u<<1)+1],P[I+u]=(g^g>>31)-(g>>31)+((m^m>>31)-(m>>31));for(p=l-d|0,S[q-1]=0,h=0,u=0;u<a;++u,p+=2){if((f=P[A+u])>r)if(v=(g=D[p])^(m=D[p+1]),m=(m^m>>31)-(m>>31)|0,b=(y=13573*(g=(g^g>>31)-(g>>31)|0))+(g+g<<15),(m<<=15)<y){if(f>P[A+u-1]&&f>=P[A+u+1]){f>o&&!h&&2!=S[q+u-O]?(S[q+u]=2,h=1,C[R++]=q+u):S[q+u]=1;continue}}else if(m>b){if(f>P[j+u]&&f>=P[I+u]){f>o&&!h&&2!=S[q+u-O]?(S[q+u]=2,h=1,C[R++]=q+u):S[q+u]=1;continue}}else if(f>P[j+u-(v=v<0?-1:1)]&&f>P[I+u+v]){f>o&&!h&&2!=S[q+u-O]?(S[q+u]=2,h=1,C[R++]=q+u):S[q+u]=1;continue}S[q+u]=0,h=0}S[q+a]=0,q+=O,u=j,j=A,A=I,I=u}for(u=q-O-1,c=0;c<O;++c,++u)S[u]=0;for(;R>0;)q=C[--R],1==S[q-=O+1]&&(S[q]=2,C[R++]=q),1==S[q+=1]&&(S[q]=2,C[R++]=q),1==S[q+=1]&&(S[q]=2,C[R++]=q),1==S[q+=O]&&(S[q]=2,C[R++]=q),1==S[q-=2]&&(S[q]=2,C[R++]=q),1==S[q+=O]&&(S[q]=2,C[R++]=q),1==S[q+=1]&&(S[q]=2,C[R++]=q),1==S[q+=1]&&(S[q]=2,C[R++]=q);for(q=O+1,j=0,c=0;c<i;++c,q+=O)for(u=0;u<a;++u)s[j++]=255*(2==S[q+u]);t.cache.put_buffer(w),t.cache.put_buffer(_),t.cache.put_buffer(x),t.cache.put_buffer(k)},warp_perspective:function(e,t,n,r){void 0===r&&(r=0);for(var o=0|e.cols,a=0|e.rows,i=0|t.cols,s=0|t.rows,c=e.data,u=t.data,l=0,d=0,p=0,h=0,f=0,g=0,m=0,v=0,y=0,b=0,w=0,_=0,x=0,k=0,P=0,S=n.data,C=S[0],D=S[1],E=S[2],j=S[3],A=S[4],I=S[5],O=S[6],q=S[7],R=S[8],T=0;d<s;++d)for(v=D*d+E,y=A*d+I,b=q*d+R,l=0;l<i;++l,++T,v+=C,y+=j,b+=O)h=0|(g=v*(w=1/b)),f=0|(m=y*w),g>0&&m>0&&h<o-1&&f<a-1?(_=Math.max(g-h,0),x=Math.max(m-f,0),k=c[p=o*f+h|0]+_*(c[p+1]-c[p]),P=c[p+o]+_*(c[p+o+1]-c[p+o]),u[T]=k+x*(P-k)):u[T]=r},warp_affine:function(e,t,n,r){void 0===r&&(r=0);for(var o=e.cols,a=e.rows,i=t.cols,s=t.rows,c=e.data,u=t.data,l=0,d=0,p=0,h=0,f=0,g=0,m=0,v=0,y=0,b=0,w=0,_=n.data,x=_[0],k=_[1],P=_[2],S=_[3],C=_[4],D=_[5],E=0;d<s;++d)for(g=k*d+P,m=C*d+D,l=0;l<i;++l,++E,g+=x,m+=S)f=0|m,(h=0|g)>=0&&f>=0&&h<o-1&&f<a-1?(v=g-h,y=m-f,b=c[p=o*f+h]+v*(c[p+1]-c[p]),w=c[p+o]+v*(c[p+o+1]-c[p+o]),u[E]=b+y*(w-b)):u[E]=r},skindetector:function(e,t){for(var n,r,o,a,i=e.width*e.height;i--;)a=4*i,n=e.data[a],r=e.data[a+1],o=e.data[a+2],n>95&&r>40&&o>20&&n>r&&n>o&&n-Math.min(r,o)>15&&Math.abs(n-r)>15?t[i]=255:t[i]=0}};e.imgproc=n}(t),function(e){"use strict";var n,r,o,a,i,s,c=(n=new Int32Array([0,3,1,3,2,2,3,1,3,0,3,-1,2,-2,1,-3,0,-3,-1,-3,-2,-2,-3,-1,-3,0,-3,1,-2,2,-1,3]),r=new Uint8Array(512),o=new Int32Array(25),a=new Int32Array(25),i=function(e,t,n,r,o){for(var a=0,i=e[t],s=o,c=0,u=0,l=0;a<25;++a)r[a]=i-e[t+n[a]];for(a=0;a<16;a+=2)c=Math.min(r[a+1],r[a+2]),(c=Math.min(c,r[a+3]))<=s||(c=Math.min(c,r[a+4]),c=Math.min(c,r[a+5]),c=Math.min(c,r[a+6]),c=Math.min(c,r[a+7]),c=Math.min(c,r[a+8]),s=Math.max(s,Math.min(c,r[a])),s=Math.max(s,Math.min(c,r[a+9])));for(u=-s,a=0;a<16;a+=2)l=Math.max(r[a+1],r[a+2]),l=Math.max(l,r[a+3]),l=Math.max(l,r[a+4]),(l=Math.max(l,r[a+5]))>=u||(l=Math.max(l,r[a+6]),l=Math.max(l,r[a+7]),l=Math.max(l,r[a+8]),u=Math.min(u,Math.max(l,r[a])),u=Math.min(u,Math.max(l,r[a+9])));return-u-1},s=20,{set_threshold:function(e){s=Math.min(Math.max(e,0),255);for(var t=-255;t<=255;++t)r[t+255]=t<-s?1:t>s?2:0;return s},detect:function(e,c,u){void 0===u&&(u=3);var l,d=e.data,p=e.cols,h=e.rows,f=0,g=0,m=0,v=0,y=0,b=t.cache.get_buffer(3*p),w=t.cache.get_buffer(3*(p+1)<<2),_=b.u8,x=w.i32,k=o,P=a,S=Math.max(3,u),C=Math.min(h-2,h-u),D=Math.max(3,u),E=Math.min(p-3,p-u),j=0,A=0,I=i,O=r,q=s,R=0,T=0,B=0,M=0,N=0,L=0,F=0,G=0,U=0,z=0,W=0,$=0;!function(e,t,r){for(var o=0,a=n;o<16;++o)e[o]=a[o<<1]+a[1+(o<<1)]*t;for(;o<25;++o)e[o]=e[o-16]}(k,p);var V=k[0],H=k[1],J=k[2],Q=k[3],X=k[4],Y=k[5],K=k[6],Z=k[7],ee=k[8],te=k[9],ne=k[10],re=k[11],oe=k[12],ae=k[13],ie=k[14],se=k[15];for(f=0;f<3*p;++f)_[f]=0;for(f=S;f<C;++f){for(F=f*p+D|0,L=(y=(f-3)%3)*p|0,N=y*(p+1)|0,g=0;g<p;++g)_[L+g]=0;if(M=0,f<C-1)for(g=D;g<E;++g,++F)if(0!=(B=O[(T=255-(R=d[F]))+d[F+V]]|O[T+d[F+ee]])&&(B&=O[T+d[F+J]]|O[T+d[F+ne]],B&=O[T+d[F+X]]|O[T+d[F+oe]],0!=(B&=O[T+d[F+K]]|O[T+d[F+ie]]))){if(B&=O[T+d[F+H]]|O[T+d[F+te]],B&=O[T+d[F+Q]]|O[T+d[F+re]],B&=O[T+d[F+Y]]|O[T+d[F+ae]],1&(B&=O[T+d[F+Z]]|O[T+d[F+se]]))for(v=R-q,j=0,m=0;m<25;++m)if(d[F+k[m]]<v){if(++j>8){x[N+ ++M]=g,_[L+g]=I(d,F,k,P,q);break}}else j=0;if(2&B)for(v=R+q,j=0,m=0;m<25;++m)if(d[F+k[m]]>v){if(++j>8){x[N+ ++M]=g,_[L+g]=I(d,F,k,P,q);break}}else j=0}if(x[N+p]=M,f!=S)for(G=(y=(f-4+3)%3)*p|0,N=y*(p+1)|0,U=(y=(f-5+3)%3)*p|0,M=x[N+p],m=0;m<M;++m)z=(g=x[N+m])+1|0,W=g-1|0,($=_[G+g])>_[G+z]&&$>_[G+W]&&$>_[U+W]&&$>_[U+g]&&$>_[U+z]&&$>_[L+W]&&$>_[L+g]&&$>_[L+z]&&((l=c[A]).x=g,l.y=f-1,l.score=$,A++)}return t.cache.put_buffer(b),t.cache.put_buffer(w),A}});e.fast_corners=c,c.set_threshold(20)}(t),function(e){"use strict";var n,r=(n=function(e,t,n,r,o,a,i){var s=-2*e[t]+e[t+r]+e[t-r],c=-2*e[t]+e[t+o]+e[t-o],u=e[t+a]+e[t-a]-e[t+i]-e[t-i],l=0|Math.sqrt((s-c)*(s-c)+4*u*u);return Math.min(Math.abs(n-l),Math.abs(-(n+l)))},{laplacian_threshold:30,min_eigen_value_threshold:25,detect:function(e,r,o){void 0===o&&(o=5);var a,i=0,s=0,c=e.cols,u=e.rows,l=e.data,d=5*c|0,p=3+3*c|0,h=3-3*c|0,f=t.cache.get_buffer(c*u<<2),g=f.i32,m=0,v=0,y=0,b=0,w=0,_=this.laplacian_threshold,x=this.min_eigen_value_threshold,k=0|Math.max(5,o),P=0|Math.max(3,o),S=0|Math.min(c-5,c-o),C=0|Math.min(u-3,u-o);for(i=c*u;--i>=0;)g[i]=0;for(function(e,t,n,r,o,a,i,s,c,u){var l=0,d=0,p=s*n+i|0,h=p;for(l=s;l<u;++l,h=p+=n)for(d=i;d<c;++d,++h)t[h]=-4*e[h]+e[h+5]+e[h-5]+e[h+a]+e[h-a]}(l,g,c,0,0,d,k,P,S,C),v=P*c+k|0,s=P;s<C;++s,v+=c)for(i=k,y=v;i<S;++i,++y)((m=g[y])<-_&&m<g[y-1]&&m<g[y+1]&&m<g[y-c]&&m<g[y+c]&&m<g[y-c-1]&&m<g[y+c-1]&&m<g[y-c+1]&&m<g[y+c+1]||m>_&&m>g[y-1]&&m>g[y+1]&&m>g[y-c]&&m>g[y+c]&&m>g[y-c-1]&&m>g[y+c-1]&&m>g[y-c+1]&&m>g[y+c+1])&&(b=n(l,y,m,5,d,p,h))>x&&((a=r[w]).x=i,a.y=s,a.score=b,++w,++i,++y);return t.cache.put_buffer(f),w}});e.yape06=r}(t),function(e){"use strict";var t,n,r,o=(t=function(e,t,n,r,o){var a,i;if(n>0)for(t-=r*o,i=-o;i<=o;++i){for(a=-o;a<=o;++a)if(e[t+a]>n)return!1;t+=r}else for(t-=r*o,i=-o;i<=o;++i){for(a=-o;a<=o;++a)if(e[t+a]<n)return!1;t+=r}return!0},n=function(e,t,n,r,o,a,i,s){var c=0,u=0,l=i-1|0,d=0,p=0,h=0,f=0,g=0;if((d=e[t+a[u]])<=o)if(d>=r)if((p=e[t+a[l]])<=o){if(p>=r)return void(n[t]=0);if((h=e[t+a[++l]])>o)if((f=e[t+a[++l]])>o)g=3;else{if(!(f<r))return void(n[t]=0);g=6}else if((f=e[t+a[++l]])>o)g=7;else{if(!(f<r))return void(n[t]=0);g=2}}else if((h=e[t+a[++l]])>o)if((f=e[t+a[++l]])>o)g=3;else{if(!(f<r))return void(n[t]=0);g=6}else{if(!(h<r))return void(n[t]=0);if((f=e[t+a[++l]])>o)g=7;else{if(!(f<r))return void(n[t]=0);g=2}}else{if((p=e[t+a[l]])>o)return void(n[t]=0);if((h=e[t+a[++l]])>o)return void(n[t]=0);if((f=e[t+a[++l]])>o)return void(n[t]=0);g=1}else{if((p=e[t+a[l]])<r)return void(n[t]=0);if((h=e[t+a[++l]])<r)return void(n[t]=0);if((f=e[t+a[++l]])<r)return void(n[t]=0);g=0}for(u=1;u<=i;u++)switch(d=e[t+a[u]],g){case 0:if(d>o){if(h=f,(f=e[t+a[++l]])<r)return void(n[t]=0);c-=d+h,g=0;break}if(d<r){if(h>o)return void(n[t]=0);if(f>o)return void(n[t]=0);if(h=f,(f=e[t+a[++l]])>o)return void(n[t]=0);c-=d+h,g=8;break}if(h<=o)return void(n[t]=0);if(f<=o)return void(n[t]=0);if(h=f,(f=e[t+a[++l]])>o){c-=d+h,g=3;break}if(f<r){c-=d+h,g=6;break}return void(n[t]=0);case 1:if(d<r){if(h=f,(f=e[t+a[++l]])>o)return void(n[t]=0);c-=d+h,g=1;break}if(d>o){if(h<r)return void(n[t]=0);if(f<r)return void(n[t]=0);if(h=f,(f=e[t+a[++l]])<r)return void(n[t]=0);c-=d+h,g=9;break}if(h>=r)return void(n[t]=0);if(f>=r)return void(n[t]=0);if(h=f,(f=e[t+a[++l]])<r){c-=d+h,g=2;break}if(f>o){c-=d+h,g=7;break}return void(n[t]=0);case 2:if(d>o)return void(n[t]=0);if(h=f,f=e[t+a[++l]],d<r){if(f>o)return void(n[t]=0);c-=d+h,g=4;break}if(f>o){c-=d+h,g=7;break}if(f<r){c-=d+h,g=2;break}return void(n[t]=0);case 3:if(d<r)return void(n[t]=0);if(h=f,f=e[t+a[++l]],d>o){if(f<r)return void(n[t]=0);c-=d+h,g=5;break}if(f>o){c-=d+h,g=3;break}if(f<r){c-=d+h,g=6;break}return void(n[t]=0);case 4:if(d>o)return void(n[t]=0);if(d<r){if(h=f,(f=e[t+a[++l]])>o)return void(n[t]=0);c-=d+h,g=1;break}if(f>=r)return void(n[t]=0);if(h=f,(f=e[t+a[++l]])<r){c-=d+h,g=2;break}if(f>o){c-=d+h,g=7;break}return void(n[t]=0);case 5:if(d<r)return void(n[t]=0);if(d>o){if(h=f,(f=e[t+a[++l]])<r)return void(n[t]=0);c-=d+h,g=0;break}if(f<=o)return void(n[t]=0);if(h=f,(f=e[t+a[++l]])>o){c-=d+h,g=3;break}if(f<r){c-=d+h,g=6;break}return void(n[t]=0);case 7:if(d>o)return void(n[t]=0);if(d<r)return void(n[t]=0);if(h=f,(f=e[t+a[++l]])>o){c-=d+h,g=3;break}if(f<r){c-=d+h,g=6;break}return void(n[t]=0);case 6:if(d>o)return void(n[t]=0);if(d<r)return void(n[t]=0);if(h=f,(f=e[t+a[++l]])<r){c-=d+h,g=2;break}if(f>o){c-=d+h,g=7;break}return void(n[t]=0);case 8:if(d>o){if(f<r)return void(n[t]=0);if(h=f,(f=e[t+a[++l]])<r)return void(n[t]=0);c-=d+h,g=9;break}if(d<r){if(h=f,(f=e[t+a[++l]])>o)return void(n[t]=0);c-=d+h,g=1;break}return void(n[t]=0);case 9:if(d<r){if(f>o)return void(n[t]=0);if(h=f,(f=e[t+a[++l]])>o)return void(n[t]=0);c-=d+h,g=8;break}if(d>o){if(h=f,(f=e[t+a[++l]])<r)return void(n[t]=0);c-=d+h,g=0;break}return void(n[t]=0)}n[t]=c+s*e[t]},r=function(e,t,n){this.dirs=new Int32Array(1024),this.dirs_count=0|function(e,t,n){var r,o,a=0;for(r=n,o=0;o<r;o++,a++)r=Math.sqrt(n*n-o*o)+.5|0,t[a]=r+e*o;for(r--;r<o&&r>=0;r--,a++)o=Math.sqrt(n*n-r*r)+.5|0,t[a]=r+e*o;for(;-r<o;r--,a++)o=Math.sqrt(n*n-r*r)+.5|0,t[a]=r+e*o;for(o--;o>=0;o--,a++)r=-Math.sqrt(n*n-o*o)-.5|0,t[a]=r+e*o;for(;o>r;o--,a++)r=-Math.sqrt(n*n-o*o)-.5|0,t[a]=r+e*o;for(r++;r<=0;r++,a++)o=-Math.sqrt(n*n-r*r)-.5|0,t[a]=r+e*o;for(;r<-o;r++,a++)o=-Math.sqrt(n*n-r*r)-.5|0,t[a]=r+e*o;for(o++;o<0;o++,a++)r=Math.sqrt(n*n-o*o)+.5|0,t[a]=r+e*o;return t[a]=t[0],t[a+1]=t[1],a}(e,this.dirs,n),this.scores=new Int32Array(e*t),this.radius=0|n},{level_tables:[],tau:7,init:function(e,t,n,o){var a;for(void 0===o&&(o=1),n=Math.min(n,7),n=Math.max(n,3),a=0;a<o;++a)this.level_tables[a]=new r(e>>a,t>>a,n)},detect:function(e,r,o){void 0===o&&(o=4);var a,i,s,c,u,l=this.level_tables[0],d=0|l.radius,p=d-1|0,h=l.dirs,f=0|l.dirs_count,g=f>>1,m=e.data,v=0|e.cols,y=0|e.rows,b=v>>1,w=l.scores,_=0,x=0,k=0,P=0,S=0,C=0,D=0,E=0,j=0|this.tau,A=0,I=0|Math.max(d+1,o),O=0|Math.max(d+1,o),q=0|Math.min(v-d-2,v-o),R=0|Math.min(y-d-2,y-o);for(k=O*v+I|0,x=O;x<R;++x,k+=v)for(_=I,P=k;_<q;++_,++P)S=m[P]+j,(C=m[P]-j)<m[P+d]&&m[P+d]<S&&C<m[P-d]&&m[P-d]<S?w[P]=0:n(m,P,w,C,S,h,g,f);for(k=O*v+I|0,x=O;x<R;++x,k+=v)for(_=I,P=k;_<q;++_,++P)E=w[P],(D=Math.abs(E))<5?(++_,++P):(c=v,u=void 0,u=0,0!=(i=w)[(s=P)+1]&&u++,0!=i[s-1]&&u++,0!=i[s+c]&&u++,0!=i[s+c+1]&&u++,0!=i[s+c-1]&&u++,0!=i[s-c]&&u++,0!=i[s-c+1]&&u++,0!=i[s-c-1]&&u++,u>=3&&t(w,P,E,b,d)&&((a=r[A]).x=_,a.y=x,a.score=D,++A,_+=p,P+=p));return A}});e.yape=o}(t),function(e){"use strict";var n,r,o,a,i=(n=new Int32Array([8,-3,9,5,4,2,7,-12,-11,9,-8,2,7,-12,12,-13,2,-13,2,12,1,-7,1,6,-2,-10,-2,-4,-13,-13,-11,-8,-13,-3,-12,-9,10,4,11,9,-13,-8,-8,-9,-11,7,-9,12,7,7,12,6,-4,-5,-3,0,-13,2,-12,-3,-9,0,-7,5,12,-6,12,-1,-3,6,-2,12,-6,-13,-4,-8,11,-13,12,-8,4,7,5,1,5,-3,10,-3,3,-7,6,12,-8,-7,-6,-2,-2,11,-1,-10,-13,12,-8,10,-7,3,-5,-3,-4,2,-3,7,-10,-12,-6,11,5,-12,6,-7,5,-6,7,-1,1,0,4,-5,9,11,11,-13,4,7,4,12,2,-1,4,4,-4,-12,-2,7,-8,-5,-7,-10,4,11,9,12,0,-8,1,-13,-13,-2,-8,2,-3,-2,-2,3,-6,9,-4,-9,8,12,10,7,0,9,1,3,7,-5,11,-10,-13,-6,-11,0,10,7,12,1,-6,-3,-6,12,10,-9,12,-4,-13,8,-8,-12,-13,0,-8,-4,3,3,7,8,5,7,10,-7,-1,7,1,-12,3,-10,5,6,2,-4,3,-10,-13,0,-13,5,-13,-7,-12,12,-13,3,-11,8,-7,12,-4,7,6,-10,12,8,-9,-1,-7,-6,-2,-5,0,12,-12,5,-7,5,3,-10,8,-13,-7,-7,-4,5,-3,-2,-1,-7,2,9,5,-11,-11,-13,-5,-13,-1,6,0,-1,5,-3,5,2,-4,-13,-4,12,-9,-6,-9,6,-12,-10,-8,-4,10,2,12,-3,7,12,12,12,-7,-13,-6,5,-4,9,-3,4,7,-1,12,2,-7,6,-5,1,-13,11,-12,5,-3,7,-2,-6,7,-8,12,-7,-13,-7,-11,-12,1,-3,12,12,2,-6,3,0,-4,3,-2,-13,-1,-13,1,9,7,1,8,-6,1,-1,3,12,9,1,12,6,-1,-9,-1,3,-13,-13,-10,5,7,7,10,12,12,-5,12,9,6,3,7,11,5,-13,6,10,2,-12,2,3,3,8,4,-6,2,6,12,-13,9,-12,10,3,-8,4,-7,9,-11,12,-4,-6,1,12,2,-8,6,-9,7,-4,2,3,3,-2,6,3,11,0,3,-3,8,-8,7,8,9,3,-11,-5,-6,-4,-10,11,-5,10,-5,-8,-3,12,-10,5,-9,0,8,-1,12,-6,4,-6,6,-11,-10,12,-8,7,4,-2,6,7,-2,0,-2,12,-5,-8,-5,2,7,-6,10,12,-9,-13,-8,-8,-5,-13,-5,-2,8,-8,9,-13,-9,-11,-9,0,1,-8,1,-2,7,-4,9,1,-2,1,-1,-4,11,-6,12,-11,-12,-9,-6,4,3,7,7,12,5,5,10,8,0,-4,2,8,-9,12,-5,-13,0,7,2,12,-1,2,1,7,5,11,7,-9,3,5,6,-8,-13,-4,-8,9,-5,9,-3,-3,-4,-7,-3,-12,6,5,8,0,-7,6,-6,12,-13,6,-5,-2,1,-10,3,10,4,1,8,-4,-2,-2,2,-13,2,-12,12,12,-2,-13,0,-6,4,1,9,3,-6,-10,-3,-5,-3,-13,-1,1,7,5,12,-11,4,-2,5,-7,-13,9,-9,-5,7,1,8,6,7,-8,7,6,-7,-4,-7,1,-8,11,-7,-8,-13,6,-12,-8,2,4,3,9,10,-5,12,3,-6,-5,-6,7,8,-3,9,-8,2,-12,2,8,-11,-2,-10,3,-12,-13,-7,-9,-11,0,-10,-5,5,-3,11,8,-2,-13,-1,12,-1,-8,0,9,-13,-11,-12,-5,-10,-2,-10,11,-3,9,-2,-13,2,-3,3,2,-9,-13,-4,0,-4,6,-3,-10,-4,12,-2,-7,-6,-11,-4,9,6,-3,6,11,-13,11,-5,5,11,11,12,6,7,-5,12,-2,-1,12,0,7,-4,-8,-3,-2,-7,1,-6,7,-13,-12,-8,-13,-7,-2,-6,-8,-8,5,-6,-9,-5,-1,-4,5,-13,7,-8,10,1,5,5,-13,1,0,10,-13,9,12,10,-1,5,-8,10,-9,-1,11,1,-13,-9,-3,-6,2,-1,-10,1,12,-13,1,-8,-10,8,-11,10,-6,2,-13,3,-6,7,-13,12,-9,-10,-10,-5,-7,-10,-8,-8,-13,4,-6,8,5,3,12,8,-13,-4,2,-3,-3,5,-13,10,-12,4,-13,5,-1,-9,9,-4,3,0,3,3,-9,-12,1,-6,1,3,2,4,-8,-10,-10,-10,9,8,-13,12,12,-8,-12,-6,-5,2,2,3,7,10,6,11,-8,6,8,8,-12,-7,10,-6,5,-3,-9,-3,9,-1,-13,-1,5,-3,-7,-3,4,-8,-2,-8,3,4,2,12,12,2,-5,3,11,6,-9,11,-13,3,-1,7,12,11,-1,12,4,-3,0,-3,6,4,-11,4,12,2,-4,2,1,-10,-6,-8,1,-13,7,-11,1,-13,12,-11,-13,6,0,11,-13,0,-1,1,4,-13,3,-9,-2,-9,8,-6,-3,-13,-6,-8,-2,5,-9,8,10,2,7,3,-9,-1,-6,-1,-1,9,5,11,-2,11,-3,12,-8,3,0,3,5,-1,4,0,10,3,-6,4,5,-13,0,-10,5,5,8,12,11,8,9,9,-6,7,-4,8,-12,-10,4,-10,9,7,3,12,4,9,-7,10,-2,7,0,12,-2,-1,-6,0,-11]),r=new t.matrix_t(3,3,t.F32_t|t.C1_t),o=new t.matrix_t(32,32,t.U8_t|t.C1_t),a=function(e,n,o,a,i,s){var c=Math.cos(o),u=Math.sin(o);r.data[0]=c,r.data[1]=-u,r.data[2]=(-c+u)*s*.5+a,r.data[3]=u,r.data[4]=c,r.data[5]=(-u-c)*s*.5+i,t.imgproc.warp_affine(e,n,r,128)},{describe:function(e,r,i,s){var c=0,u=0,l=0,d=0,p=0,h=0,f=0,g=0,m=(e.data,e.cols,e.rows,o.data),v=528,y=0;s.type&t.U8_t?s.resize(32,i,1):(s.type=t.U8_t,s.cols=32,s.rows=i,s.channel=1,s.allocate());var b=s.data,w=0;for(c=0;c<i;++c){for(l=r[c].x,d=r[c].y,p=r[c].angle,a(e,o,p,l,d,32),y=0,u=0;u<32;++u)g=(h=m[v+32*n[y+1]+n[y]])<(f=m[v+32*n[(y+=2)+1]+n[y]])|0,g|=((h=m[v+32*n[(y+=2)+1]+n[y]])<(f=m[v+32*n[(y+=2)+1]+n[y]]))<<1,g|=((h=m[v+32*n[(y+=2)+1]+n[y]])<(f=m[v+32*n[(y+=2)+1]+n[y]]))<<2,g|=((h=m[v+32*n[(y+=2)+1]+n[y]])<(f=m[v+32*n[(y+=2)+1]+n[y]]))<<3,g|=((h=m[v+32*n[(y+=2)+1]+n[y]])<(f=m[v+32*n[(y+=2)+1]+n[y]]))<<4,g|=((h=m[v+32*n[(y+=2)+1]+n[y]])<(f=m[v+32*n[(y+=2)+1]+n[y]]))<<5,g|=((h=m[v+32*n[(y+=2)+1]+n[y]])<(f=m[v+32*n[(y+=2)+1]+n[y]]))<<6,h=m[v+32*n[(y+=2)+1]+n[y]],f=m[v+32*n[(y+=2)+1]+n[y]],y+=2,g|=(h<f)<<7,b[w+u]=g;w+=32}}});e.orb=i}(t),function(e){"use strict";var n,r=(n=t.imgproc.scharr_derivatives,{track:function(e,r,o,a,i,s,c,u,l,d){void 0===c&&(c=30),void 0===u&&(u=new Uint8Array(i)),void 0===l&&(l=.01),void 0===d&&(d=1e-4);var p=.5*(s-1),h=s*s|0,f=h<<1,g=e.data,m=r.data,v=g[0].data,y=m[0].data,b=g[0].cols,w=g[0].rows,_=0,x=0,k=t.cache.get_buffer(h<<2),P=t.cache.get_buffer(f<<2),S=t.cache.get_buffer(w*(b<<1)<<2),C=new t.matrix_t(b,w,t.S32C2_t,S.data),D=k.i32,E=P.i32,j=S.i32,A=0,I=0,O=0,q=0,R=0,T=0,B=0,M=0,N=0,L=0,F=0,G=0,U=0,z=0,W=0,$=0,V=0,H=0,J=0,Q=0,X=0,Y=0,K=0,Z=0,ee=0,te=0,ne=0,re=0,oe=0,ae=0,ie=0,se=0,ce=16384,ue=1/(1<<20),le=0,de=0,pe=0,he=0,fe=0,ge=0,me=0,ve=0,ye=0,be=0,we=0;for(l*=l;Q<i;++Q)u[Q]=1;var _e=e.levels-1|0;for(Z=_e;Z>=0;--Z)for(B=1/(1<<Z),x=w>>Z,A=(_=b>>Z)<<1,v=g[Z].data,y=m[Z].data,ne=_-s|0,re=x-s|0,n(g[Z],C),ee=0;ee<i;++ee)if(X=1+(Q=ee<<1),M=o[Q]*B,N=o[X]*B,Z==_e?(L=M,F=N):(L=2*a[Q],F=2*a[X]),a[Q]=L,a[X]=F,0==(Y=($=0|(M-=p))<=0|$>=ne|(V=0|(N-=p))<=0|V>=re)){for(he=ce-(le=(1-(oe=M-$))*(1-(ae=N-V))*ce+.5|0)-(de=oe*(1-ae)*ce+.5|0)-(pe=(1-oe)*ae*ce+.5|0),ve=0,ye=0,be=0,K=0;K<s;++K)for(O=(I=(K+V)*_+$|0)<<1,R=(q=K*s|0)<<1,Y=0;Y<s;++Y,++I,++q,O+=2)fe=256+(fe=v[I]*le+v[I+1]*de+v[I+_]*pe+v[I+_+1]*he)>>9,ge=8192+(ge=j[O]*le+j[O+2]*de+j[O+A]*pe+j[O+A+2]*he)>>14,me=8192+(me=j[O+1]*le+j[O+3]*de+j[O+A+1]*pe+j[O+A+3]*he)>>14,D[q]=fe,E[R++]=ge,E[R++]=me,ve+=ge*ge,ye+=ge*me,be+=me*me;if(we=(ve*=ue)*(be*=ue)-(ye*=ue)*ye,(be+ve-Math.sqrt((ve-be)*(ve-be)+4*ye*ye))/f<d||we<1.1920929e-7)0==Z&&(u[ee]=0);else for(we=1/we,L-=p,F-=p,G=0,U=0,te=0;te<c;++te){if(0!=(Y=(H=0|L)<=0|H>=ne|(J=0|F)<=0|J>=re)){0==Z&&(u[ee]=0);break}for(he=ce-(le=(1-(oe=L-H))*(1-(ae=F-J))*ce+.5|0)-(de=oe*(1-ae)*ce+.5|0)-(pe=(1-oe)*ae*ce+.5|0),ie=0,se=0,K=0;K<s;++K)for(T=(K+J)*_+H|0,R=(q=K*s|0)<<1,Y=0;Y<s;++Y,++T,++q)fe=256+(fe=y[T]*le+y[T+1]*de+y[T+_]*pe+y[T+_+1]*he)>>9,ie+=(fe-=D[q])*E[R++],se+=fe*E[R++];if(L+=z=(ye*(se*=ue)-be*(ie*=ue))*we,F+=W=(ye*ie-ve*se)*we,a[Q]=L+p,a[X]=F+p,z*z+W*W<=l)break;if(te>0&&Math.abs(z+G)<.01&&Math.abs(W+U)<.01){a[Q]-=.5*z,a[X]-=.5*W;break}G=z,U=W}}else 0==Z&&(u[ee]=0);t.cache.put_buffer(k),t.cache.put_buffer(P),t.cache.put_buffer(S)}});e.optical_flow_lk=r}(t),function(e){"use strict";var t,n=(t=function(e,t){var n=.25*e.width+.5|0;return t.x<=e.x+n&&t.x>=e.x-n&&t.y<=e.y+n&&t.y>=e.y-n&&t.width<=1.5*e.width+.5|0&&1.5*t.width+.5|0>=e.width},{edges_density:.07,detect_single_scale:function(e,t,n,r,o,a,i,s){var c,u,l,d,p,h,f,g,m,v,y,b,w,_,x,k,P,S,C,D,E,j,A,I,O,q=s.size[0]*i|0,R=s.size[1]*i|0,T=.5*i+1.5|0,B=T,M=o-q|0,N=a-R|0,L=o+1|0,F=1/(q*R),G=!0,U=0,z=q,W=R*L,$=W+q,V=q*R*255*this.edges_density|0,H=[];for(p=0;p<N;p+=B)for(U=p*L,d=0;d<M;d+=T,U+=T)if(h=e[U]-e[U+z]-e[U+W]+e[U+$],r&&(r[U]-r[U+z]-r[U+W]+r[U+$]<V||h<20))d+=T,U+=T;else{for(h*=F,g=(f=(t[U]-t[U+z]-t[U+W]+t[U+$])*F-h*h)>0?Math.sqrt(f):1,w=(m=s.complexClassifiers).length,G=!0,c=0;c<w;++c){for(k=(v=m[c]).threshold,_=(y=v.simpleClassifiers).length,P=0,u=0;u<_;++u){if(S=0,x=(D=(b=y[u]).features).length,1===b.tilted)for(l=0;l<x;++l)E=~~(d+(C=D[l])[0]*i)+~~(p+C[1]*i)*L,j=(I=~~(C[2]*i))*L,A=(O=~~(C[3]*i))*L,S+=(n[E]-n[E+I+j]-n[E-O+A]+n[E+I-O+j+A])*C[4];else for(l=0;l<x;++l)E=~~(d+(C=D[l])[0]*i)+~~(p+C[1]*i)*L,I=~~(C[2]*i),A=(O=~~(C[3]*i))*L,S+=(e[E]-e[E+I]-e[E+A]+e[E+A+I])*C[4];P+=S*F<b.threshold*g?b.left_val:b.right_val}if(P<k){G=!1;break}}G&&(H.push({x:d,y:p,width:q,height:R,neighbor:1,confidence:P}),d+=T,U+=T)}return H},detect_multi_scale:function(e,t,n,r,o,a,i,s,c){void 0===s&&(s=1.2),void 0===c&&(c=1);for(var u=i.size[0],l=i.size[1],d=[];c*u<o&&c*l<a;)d=d.concat(this.detect_single_scale(e,t,n,r,o,a,c,i)),c*=s;return d},group_rectangles:function(e,n){void 0===n&&(n=1);var r,o,a=e.length,i=[];for(r=0;r<a;++r)i[r]={parent:-1,element:e[r],rank:0};for(r=0;r<a;++r)if(i[r].element){for(var s=r;-1!=i[s].parent;)s=i[s].parent;for(o=0;o<a;++o)if(r!=o&&i[o].element&&t(i[r].element,i[o].element)){for(var c=o;-1!=i[c].parent;)c=i[c].parent;if(c!=s){i[s].rank>i[c].rank?i[c].parent=s:(i[s].parent=c,i[s].rank==i[c].rank&&i[c].rank++,s=c);for(var u,l=o;-1!=i[l].parent;)u=l,l=i[l].parent,i[u].parent=s;for(l=r;-1!=i[l].parent;)u=l,l=i[l].parent,i[u].parent=s}}}var d=[],p=0;for(r=0;r<a;r++){o=-1;var h=r;if(i[h].element){for(;-1!=i[h].parent;)h=i[h].parent;i[h].rank>=0&&(i[h].rank=~p++),o=~i[h].rank}d[r]=o}var f=[];for(r=0;r<p+1;++r)f[r]={neighbors:0,x:0,y:0,width:0,height:0,confidence:0};for(r=0;r<a;++r){var g=e[r],m=d[r];0==f[m].neighbors&&(f[m].confidence=g.confidence),++f[m].neighbors,f[m].x+=g.x,f[m].y+=g.y,f[m].width+=g.width,f[m].height+=g.height,f[m].confidence=Math.max(f[m].confidence,g.confidence)}var v=[];for(r=0;r<p;++r)(a=f[r].neighbors)>=n&&v.push({x:(2*f[r].x+a)/(2*a),y:(2*f[r].y+a)/(2*a),width:(2*f[r].width+a)/(2*a),height:(2*f[r].height+a)/(2*a),neighbors:f[r].neighbors,confidence:f[r].confidence});var y=[];for(a=v.length,r=0;r<a;++r){g=v[r];var b=!0;for(o=0;o<a;++o){var w=v[o],_=.25*w.width+.5|0;if(r!=o&&g.x>=w.x-_&&g.y>=w.y-_&&g.x+g.width<=w.x+w.width+_&&g.y+g.height<=w.y+w.height+_&&(w.neighbors>Math.max(3,g.neighbors)||g.neighbors<3)){b=!1;break}}b&&y.push(g)}return y}});e.haar=n}(t),function(e){"use strict";var n,r,o=(n=function(e,t){var n=.25*e.width+.5|0;return t.x<=e.x+n&&t.x>=e.x-n&&t.y<=e.y+n&&t.y>=e.y-n&&t.width<=1.5*e.width+.5|0&&1.5*t.width+.5|0>=e.width},r=new t.pyramid_t(1),{interval:4,scale:1.1486,next:5,scale_to:1,prepare_cascade:function(e){for(var t=e.stage_classifier.length,n=0;n<t;n++)for(var r=e.stage_classifier[n].feature,o=e.stage_classifier[n].count,a=e.stage_classifier[n]._feature=new Array(o),i=0;i<o;i++)a[i]={size:r[i].size,px:new Array(r[i].size),pz:new Array(r[i].size),nx:new Array(r[i].size),nz:new Array(r[i].size)}},build_pyramid:function(e,n,o,a){void 0===a&&(a=4);var i=e.cols,s=e.rows,c=0,u=0,l=0,d=!1,p=e,h=e,f=t.U8_t|t.C1_t;this.interval=a,this.scale=Math.pow(2,1/(this.interval+1)),this.next=this.interval+1|0,this.scale_to=Math.log(Math.min(i/n,s/o))/Math.log(this.scale)|0;var g=4*(this.scale_to+2*this.next)|0;for(r.levels!=g&&(r.levels=g,r.data=new Array(g),d=!0,r.data[0]=e),c=1;c<=this.interval;++c)u=i/Math.pow(this.scale,c)|0,l=s/Math.pow(this.scale,c)|0,p=r.data[c<<2],(d||u!=p.cols||l!=p.rows)&&(r.data[c<<2]=new t.matrix_t(u,l,f),p=r.data[c<<2]),t.imgproc.resample(e,p,u,l);for(c=this.next;c<this.scale_to+2*this.next;++c)h=r.data[(c<<2)-(this.next<<2)],p=r.data[c<<2],u=h.cols>>1,l=h.rows>>1,(d||u!=p.cols||l!=p.rows)&&(r.data[c<<2]=new t.matrix_t(u,l,f),p=r.data[c<<2]),t.imgproc.pyrdown(h,p);for(c=2*this.next;c<this.scale_to+2*this.next;++c)u=(h=r.data[(c<<2)-(this.next<<2)]).cols>>1,l=h.rows>>1,p=r.data[1+(c<<2)],(d||u!=p.cols||l!=p.rows)&&(r.data[1+(c<<2)]=new t.matrix_t(u,l,f),p=r.data[1+(c<<2)]),t.imgproc.pyrdown(h,p,1,0),p=r.data[2+(c<<2)],(d||u!=p.cols||l!=p.rows)&&(r.data[2+(c<<2)]=new t.matrix_t(u,l,f),p=r.data[2+(c<<2)]),t.imgproc.pyrdown(h,p,0,1),p=r.data[3+(c<<2)],(d||u!=p.cols||l!=p.rows)&&(r.data[3+(c<<2)]=new t.matrix_t(u,l,f),p=r.data[3+(c<<2)]),t.imgproc.pyrdown(h,p,1,1);return r},detect:function(e,t){this.interval;var n,r,o,a,i,s=this.scale,c=this.next,u=this.scale_to,l=0,d=0,p=0,h=0,f=0,g=0,m=0,v=0,y=0,b=0,w=0,_=0,x=0,k=0,P=0,S=0,C=0,D=0,E=!0,j=!0,A=1,I=1,O=[0,1,0,1],q=[0,0,1,1],R=[],T=e.data,B=[],M=[0,0,0],N=[0,0,0],L=[0,0,0];for(l=0;l<u;l++){for(S=T[(P=l<<2)+(c<<3)].cols-(t.width>>2),C=T[P+(c<<3)].rows-(t.height>>2),N[0]=1*T[P].cols,N[1]=1*T[P+(c<<2)].cols,N[2]=1*T[P+(c<<3)].cols,L[0]=4*T[P].cols-4*S,L[1]=2*T[P+(c<<2)].cols-2*S,L[2]=1*T[P+(c<<3)].cols-1*S,v=t.stage_classifier.length,d=0;d<v;d++)for(o=t.stage_classifier[d].feature,r=t.stage_classifier[d]._feature,y=t.stage_classifier[d].count,p=0;p<y;p++)for(a=r[p],b=0|(i=o[p]).size,m=0;m<b;m++)a.px[m]=1*i.px[m]+i.py[m]*N[i.pz[m]],a.pz[m]=i.pz[m],a.nx[m]=1*i.nx[m]+i.ny[m]*N[i.nz[m]],a.nz[m]=i.nz[m];for(B[0]=T[P].data,B[1]=T[P+(c<<2)].data,m=0;m<4;m++)for(B[2]=T[P+(c<<3)+m].data,M[0]=2*O[m]+q[m]*(2*T[P].cols),M[1]=1*O[m]+q[m]*(1*T[P+(c<<2)].cols),M[2]=0,g=0;g<C;g++){for(f=0;f<S;f++){for(D=0,E=!0,v=t.stage_classifier.length,d=0;d<v;d++){for(D=0,n=t.stage_classifier[d].alpha,r=t.stage_classifier[d]._feature,y=t.stage_classifier[d].count,p=0;p<y;p++)if((_=B[(a=r[p]).pz[0]][M[a.pz[0]]+a.px[0]])<=(x=B[a.nz[0]][M[a.nz[0]]+a.nx[0]]))D+=n[p<<1];else{for(j=!0,b=a.size,k=1;k<b;k++){if(a.pz[k]>=0&&(w=B[a.pz[k]][M[a.pz[k]]+a.px[k]])<_){if(w<=x){j=!1;break}_=w}if(a.nz[k]>=0&&(h=B[a.nz[k]][M[a.nz[k]]+a.nx[k]])>x){if(_<=h){j=!1;break}x=h}}D+=j?n[1+(p<<1)]:n[p<<1]}if(D<t.stage_classifier[d].threshold){E=!1;break}}E&&(R.push({x:(4*f+2*O[m])*A,y:(4*g+2*q[m])*I,width:t.width*A,height:t.height*I,neighbor:1,confidence:D}),++f,M[0]+=4,M[1]+=2,M[2]+=1),M[0]+=4,M[1]+=2,M[2]+=1}M[0]+=L[0],M[1]+=L[1],M[2]+=L[2]}A*=s,I*=s}return R},group_rectangles:function(e,t){void 0===t&&(t=1);var r,o,a=e.length,i=[];for(r=0;r<a;++r)i[r]={parent:-1,element:e[r],rank:0};for(r=0;r<a;++r)if(i[r].element){for(var s=r;-1!=i[s].parent;)s=i[s].parent;for(o=0;o<a;++o)if(r!=o&&i[o].element&&n(i[r].element,i[o].element)){for(var c=o;-1!=i[c].parent;)c=i[c].parent;if(c!=s){i[s].rank>i[c].rank?i[c].parent=s:(i[s].parent=c,i[s].rank==i[c].rank&&i[c].rank++,s=c);for(var u,l=o;-1!=i[l].parent;)u=l,l=i[l].parent,i[u].parent=s;for(l=r;-1!=i[l].parent;)u=l,l=i[l].parent,i[u].parent=s}}}var d=[],p=0;for(r=0;r<a;r++){o=-1;var h=r;if(i[h].element){for(;-1!=i[h].parent;)h=i[h].parent;i[h].rank>=0&&(i[h].rank=~p++),o=~i[h].rank}d[r]=o}var f=[];for(r=0;r<p+1;++r)f[r]={neighbors:0,x:0,y:0,width:0,height:0,confidence:0};for(r=0;r<a;++r){var g=e[r],m=d[r];0==f[m].neighbors&&(f[m].confidence=g.confidence),++f[m].neighbors,f[m].x+=g.x,f[m].y+=g.y,f[m].width+=g.width,f[m].height+=g.height,f[m].confidence=Math.max(f[m].confidence,g.confidence)}var v=[];for(r=0;r<p;++r)(a=f[r].neighbors)>=t&&v.push({x:(2*f[r].x+a)/(2*a),y:(2*f[r].y+a)/(2*a),width:(2*f[r].width+a)/(2*a),height:(2*f[r].height+a)/(2*a),neighbors:f[r].neighbors,confidence:f[r].confidence});var y=[];for(a=v.length,r=0;r<a;++r){g=v[r];var b=!0;for(o=0;o<a;++o){var w=v[o],_=.25*w.width+.5|0;if(r!=o&&g.x>=w.x-_&&g.y>=w.y-_&&g.x+g.width<=w.x+w.width+_&&g.y+g.height<=w.y+w.height+_&&(w.neighbors>Math.max(3,g.neighbors)||g.neighbors<3)){b=!1;break}}b&&y.push(g)}return y}});e.bbf=o}(t),function(t){"use strict";void 0===e.exports?window.jsfeat=t:e.exports=t}(t)},64530:(e,t)=>{function n(e,t){var n=[],r=[];return null==t&&(t=function(e,t){return n[0]===t?"[Circular ~]":"[Circular ~."+r.slice(0,n.indexOf(t)).join(".")+"]"}),function(o,a){if(n.length>0){var i=n.indexOf(this);~i?n.splice(i+1):n.push(this),~i?r.splice(i,1/0,o):r.push(o),~n.indexOf(a)&&(a=t.call(this,o,a))}else n.push(a);return null==e?a:e.call(this,o,a)}}(e.exports=function(e,t,r,o){return JSON.stringify(e,n(t,o),r)}).getSerialize=n},39832:(e,t,n)=>{e.exports=function e(t,n,r){function o(i,s){if(!n[i]){if(!t[i]){if(a)return a(i,!0);var c=new Error("Cannot find module '"+i+"'");throw c.code="MODULE_NOT_FOUND",c}var u=n[i]={exports:{}};t[i][0].call(u.exports,(function(e){return o(t[i][1][e]||e)}),u,u.exports,e,t,n,r)}return n[i].exports}for(var a=void 0,i=0;i<r.length;i++)o(r[i]);return o}({"./aesprim":[function(e,t,n){!function(e,t){"use strict";t(void 0!==n?n:e.esprima={})}(this,(function(e){"use strict";var t,n,r,o,a,i,s,c,u,l,d,p,h,f,g,m,v,y;function b(e,t){if(!e)throw new Error("ASSERT: "+t)}function w(e){return e>=48&&e<=57}function _(e){return"0123456789abcdefABCDEF".indexOf(e)>=0}function x(e){return"01234567".indexOf(e)>=0}function k(e){return 32===e||9===e||11===e||12===e||160===e||e>=5760&&[5760,6158,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8239,8287,12288,65279].indexOf(e)>=0}function P(e){return 10===e||13===e||8232===e||8233===e}function S(e){return 64==e||36===e||95===e||e>=65&&e<=90||e>=97&&e<=122||92===e||e>=128&&s.NonAsciiIdentifierStart.test(String.fromCharCode(e))}function C(e){return 36===e||95===e||e>=65&&e<=90||e>=97&&e<=122||e>=48&&e<=57||92===e||e>=128&&s.NonAsciiIdentifierPart.test(String.fromCharCode(e))}function D(e){switch(e){case"implements":case"interface":case"package":case"private":case"protected":case"public":case"static":case"yield":case"let":return!0;default:return!1}}function E(e){return"eval"===e||"arguments"===e}function j(e){if(l&&D(e))return!0;switch(e.length){case 2:return"if"===e||"in"===e||"do"===e;case 3:return"var"===e||"for"===e||"new"===e||"try"===e||"let"===e;case 4:return"this"===e||"else"===e||"case"===e||"void"===e||"with"===e||"enum"===e;case 5:return"while"===e||"break"===e||"catch"===e||"throw"===e||"const"===e||"yield"===e||"class"===e||"super"===e;case 6:return"return"===e||"typeof"===e||"delete"===e||"switch"===e||"export"===e||"import"===e;case 7:return"default"===e||"finally"===e||"extends"===e;case 8:return"function"===e||"continue"===e||"debugger"===e;case 10:return"instanceof"===e;default:return!1}}function A(e,t,n,r,o){var a;b("number"==typeof n,"Comment must have valid position"),v.lastCommentStart>=n||(v.lastCommentStart=n,a={type:e,value:t},y.range&&(a.range=[n,r]),y.loc&&(a.loc=o),y.comments.push(a),y.attachComment&&(y.leadingComments.push(a),y.trailingComments.push(a)))}function I(e){var t,n,r,o;for(t=d-e,n={start:{line:p,column:d-h-e}};d<f;)if(r=u.charCodeAt(d),++d,P(r))return y.comments&&(o=u.slice(t+e,d-1),n.end={line:p,column:d-h-1},A("Line",o,t,d-1,n)),13===r&&10===u.charCodeAt(d)&&++d,++p,void(h=d);y.comments&&(o=u.slice(t+e,d),n.end={line:p,column:d-h},A("Line",o,t,d,n))}function O(){var e,t,n,r;for(y.comments&&(e=d-2,t={start:{line:p,column:d-h-2}});d<f;)if(P(n=u.charCodeAt(d)))13===n&&10===u.charCodeAt(d+1)&&++d,++p,++d,h=d,d>=f&&J({},i.UnexpectedToken,"ILLEGAL");else if(42===n){if(47===u.charCodeAt(d+1))return++d,++d,void(y.comments&&(r=u.slice(e+2,d-2),t.end={line:p,column:d-h},A("Block",r,e,d,t)));++d}else++d;J({},i.UnexpectedToken,"ILLEGAL")}function q(){var e,t;for(t=0===d;d<f;)if(k(e=u.charCodeAt(d)))++d;else if(P(e))++d,13===e&&10===u.charCodeAt(d)&&++d,++p,h=d,t=!0;else if(47===e)if(47===(e=u.charCodeAt(d+1)))++d,++d,I(2),t=!0;else{if(42!==e)break;++d,++d,O()}else if(t&&45===e){if(45!==u.charCodeAt(d+1)||62!==u.charCodeAt(d+2))break;d+=3,I(3)}else{if(60!==e)break;if("!--"!==u.slice(d+1,d+4))break;++d,++d,++d,++d,I(4)}}function R(e){var t,n,r,o=0;for(n="u"===e?4:2,t=0;t<n;++t){if(!(d<f&&_(u[d])))return"";r=u[d++],o=16*o+"0123456789abcdef".indexOf(r.toLowerCase())}return String.fromCharCode(o)}function T(){var e,t;for(e=u.charCodeAt(d++),t=String.fromCharCode(e),92===e&&(117!==u.charCodeAt(d)&&J({},i.UnexpectedToken,"ILLEGAL"),++d,(e=R("u"))&&"\\"!==e&&S(e.charCodeAt(0))||J({},i.UnexpectedToken,"ILLEGAL"),t=e);d<f&&C(e=u.charCodeAt(d));)++d,t+=String.fromCharCode(e),92===e&&(t=t.substr(0,t.length-1),117!==u.charCodeAt(d)&&J({},i.UnexpectedToken,"ILLEGAL"),++d,(e=R("u"))&&"\\"!==e&&C(e.charCodeAt(0))||J({},i.UnexpectedToken,"ILLEGAL"),t+=e);return t}function B(){var e,t;for(e=d++;d<f;){if(92===(t=u.charCodeAt(d)))return d=e,T();if(!C(t))break;++d}return u.slice(e,d)}function M(){var e,n,r,o,a=d,s=u.charCodeAt(d),c=u[d];switch(s){case 46:case 40:case 41:case 59:case 44:case 123:case 125:case 91:case 93:case 58:case 63:case 126:return++d,y.tokenize&&(40===s?y.openParenToken=y.tokens.length:123===s&&(y.openCurlyToken=y.tokens.length)),{type:t.Punctuator,value:String.fromCharCode(s),lineNumber:p,lineStart:h,start:a,end:d};default:if(61===(e=u.charCodeAt(d+1)))switch(s){case 43:case 45:case 47:case 60:case 62:case 94:case 124:case 37:case 38:case 42:return d+=2,{type:t.Punctuator,value:String.fromCharCode(s)+String.fromCharCode(e),lineNumber:p,lineStart:h,start:a,end:d};case 33:case 61:return d+=2,61===u.charCodeAt(d)&&++d,{type:t.Punctuator,value:u.slice(a,d),lineNumber:p,lineStart:h,start:a,end:d}}}return">>>="===(o=u.substr(d,4))?(d+=4,{type:t.Punctuator,value:o,lineNumber:p,lineStart:h,start:a,end:d}):">>>"===(r=o.substr(0,3))||"<<="===r||">>="===r?(d+=3,{type:t.Punctuator,value:r,lineNumber:p,lineStart:h,start:a,end:d}):c===(n=r.substr(0,2))[1]&&"+-<>&|".indexOf(c)>=0||"=>"===n?(d+=2,{type:t.Punctuator,value:n,lineNumber:p,lineStart:h,start:a,end:d}):"<>=!+-*%&|^/".indexOf(c)>=0?(++d,{type:t.Punctuator,value:c,lineNumber:p,lineStart:h,start:a,end:d}):void J({},i.UnexpectedToken,"ILLEGAL")}function N(){var e,n,r;if(b(w((r=u[d]).charCodeAt(0))||"."===r,"Numeric literal must start with a decimal digit or a decimal point"),n=d,e="","."!==r){if(e=u[d++],r=u[d],"0"===e){if("x"===r||"X"===r)return++d,function(e){for(var n="";d<f&&_(u[d]);)n+=u[d++];return 0===n.length&&J({},i.UnexpectedToken,"ILLEGAL"),S(u.charCodeAt(d))&&J({},i.UnexpectedToken,"ILLEGAL"),{type:t.NumericLiteral,value:parseInt("0x"+n,16),lineNumber:p,lineStart:h,start:e,end:d}}(n);if(x(r))return function(e){for(var n="0"+u[d++];d<f&&x(u[d]);)n+=u[d++];return(S(u.charCodeAt(d))||w(u.charCodeAt(d)))&&J({},i.UnexpectedToken,"ILLEGAL"),{type:t.NumericLiteral,value:parseInt(n,8),octal:!0,lineNumber:p,lineStart:h,start:e,end:d}}(n);r&&w(r.charCodeAt(0))&&J({},i.UnexpectedToken,"ILLEGAL")}for(;w(u.charCodeAt(d));)e+=u[d++];r=u[d]}if("."===r){for(e+=u[d++];w(u.charCodeAt(d));)e+=u[d++];r=u[d]}if("e"===r||"E"===r)if(e+=u[d++],"+"!==(r=u[d])&&"-"!==r||(e+=u[d++]),w(u.charCodeAt(d)))for(;w(u.charCodeAt(d));)e+=u[d++];else J({},i.UnexpectedToken,"ILLEGAL");return S(u.charCodeAt(d))&&J({},i.UnexpectedToken,"ILLEGAL"),{type:t.NumericLiteral,value:parseFloat(e),lineNumber:p,lineStart:h,start:n,end:d}}function L(){var e,n,r,o;return m=null,q(),e=d,n=function(){var e,t,n,r;for(b("/"===(e=u[d]),"Regular expression literal must start with a slash"),t=u[d++],n=!1,r=!1;d<f;)if(t+=e=u[d++],"\\"===e)P((e=u[d++]).charCodeAt(0))&&J({},i.UnterminatedRegExp),t+=e;else if(P(e.charCodeAt(0)))J({},i.UnterminatedRegExp);else if(n)"]"===e&&(n=!1);else{if("/"===e){r=!0;break}"["===e&&(n=!0)}return r||J({},i.UnterminatedRegExp),{value:t.substr(1,t.length-2),literal:t}}(),r=function(){var e,t,n,r;for(t="",n="";d<f&&C((e=u[d]).charCodeAt(0));)if(++d,"\\"===e&&d<f)if("u"===(e=u[d])){if(r=++d,e=R("u"))for(n+=e,t+="\\u";r<d;++r)t+=u[r];else d=r,n+="u",t+="\\u";Q({},i.UnexpectedToken,"ILLEGAL")}else t+="\\",Q({},i.UnexpectedToken,"ILLEGAL");else n+=e,t+=e;return{value:n,literal:t}}(),o=function(e,t){var n;try{n=new RegExp(e,t)}catch(e){J({},i.InvalidRegExp)}return n}(n.value,r.value),y.tokenize?{type:t.RegularExpression,value:o,lineNumber:p,lineStart:h,start:e,end:d}:{literal:n.literal+r.literal,value:o,start:e,end:d}}function F(){var e,t,n,r;return q(),e=d,t={start:{line:p,column:d-h}},n=L(),t.end={line:p,column:d-h},y.tokenize||(y.tokens.length>0&&(r=y.tokens[y.tokens.length-1]).range[0]===e&&"Punctuator"===r.type&&("/"!==r.value&&"/="!==r.value||y.tokens.pop()),y.tokens.push({type:"RegularExpression",value:n.literal,range:[e,d],loc:t})),n}function G(){var e,n,o;return q(),d>=f?{type:t.EOF,lineNumber:p,lineStart:h,start:d,end:d}:S(e=u.charCodeAt(d))?(n=d,{type:1===(o=92===u.charCodeAt(d)?T():B()).length?t.Identifier:j(o)?t.Keyword:"null"===o?t.NullLiteral:"true"===o||"false"===o?t.BooleanLiteral:t.Identifier,value:o,lineNumber:p,lineStart:h,start:n,end:d}):40===e||41===e||59===e?M():39===e||34===e?function(){var e,n,r,o,a,s,c,l,g="",m=!1;for(c=p,l=h,b("'"===(e=u[d])||'"'===e,"String literal must starts with a quote"),n=d,++d;d<f;){if((r=u[d++])===e){e="";break}if("\\"===r)if((r=u[d++])&&P(r.charCodeAt(0)))++p,"\r"===r&&"\n"===u[d]&&++d,h=d;else switch(r){case"u":case"x":s=d,(a=R(r))?g+=a:(d=s,g+=r);break;case"n":g+="\n";break;case"r":g+="\r";break;case"t":g+="\t";break;case"b":g+="\b";break;case"f":g+="\f";break;case"v":g+="\v";break;default:x(r)?(0!==(o="01234567".indexOf(r))&&(m=!0),d<f&&x(u[d])&&(m=!0,o=8*o+"01234567".indexOf(u[d++]),"0123".indexOf(r)>=0&&d<f&&x(u[d])&&(o=8*o+"01234567".indexOf(u[d++]))),g+=String.fromCharCode(o)):g+=r}else{if(P(r.charCodeAt(0)))break;g+=r}}return""!==e&&J({},i.UnexpectedToken,"ILLEGAL"),{type:t.StringLiteral,value:g,octal:m,startLineNumber:c,startLineStart:l,lineNumber:p,lineStart:h,start:n,end:d}}():46===e?w(u.charCodeAt(d+1))?N():M():w(e)?N():y.tokenize&&47===e?function(){var e,t;if(!(e=y.tokens[y.tokens.length-1]))return F();if("Punctuator"===e.type){if("]"===e.value)return M();if(")"===e.value)return!(t=y.tokens[y.openParenToken-1])||"Keyword"!==t.type||"if"!==t.value&&"while"!==t.value&&"for"!==t.value&&"with"!==t.value?M():F();if("}"===e.value){if(y.tokens[y.openCurlyToken-3]&&"Keyword"===y.tokens[y.openCurlyToken-3].type){if(!(t=y.tokens[y.openCurlyToken-4]))return M()}else{if(!y.tokens[y.openCurlyToken-4]||"Keyword"!==y.tokens[y.openCurlyToken-4].type)return M();if(!(t=y.tokens[y.openCurlyToken-5]))return F()}return r.indexOf(t.value)>=0?M():F()}return F()}return"Keyword"===e.type?F():M()}():M()}function U(){var e,r,o;return q(),e={start:{line:p,column:d-h}},r=G(),e.end={line:p,column:d-h},r.type!==t.EOF&&(o=u.slice(r.start,r.end),y.tokens.push({type:n[r.type],value:o,range:[r.start,r.end],loc:e})),r}function z(){var e;return d=(e=m).end,p=e.lineNumber,h=e.lineStart,m=void 0!==y.tokens?U():G(),d=e.end,p=e.lineNumber,h=e.lineStart,e}function W(){var e,t,n;e=d,t=p,n=h,m=void 0!==y.tokens?U():G(),d=e,p=t,h=n}function $(e,t){this.line=e,this.column=t}function V(e,t,n,r){this.start=new $(e,t),this.end=new $(n,r)}function H(){var e,t,n,r;return e=d,t=p,n=h,q(),r=p!==t,d=e,p=t,h=n,r}function J(e,t){var n,r=Array.prototype.slice.call(arguments,2),o=t.replace(/%(\d)/g,(function(e,t){return b(t<r.length,"Message reference must be in range"),r[t]}));throw"number"==typeof e.lineNumber?((n=new Error("Line "+e.lineNumber+": "+o)).index=e.start,n.lineNumber=e.lineNumber,n.column=e.start-h+1):((n=new Error("Line "+p+": "+o)).index=d,n.lineNumber=p,n.column=d-h+1),n.description=o,n}function Q(){try{J.apply(null,arguments)}catch(e){if(!y.errors)throw e;y.errors.push(e)}}function X(e){if(e.type===t.EOF&&J(e,i.UnexpectedEOS),e.type===t.NumericLiteral&&J(e,i.UnexpectedNumber),e.type===t.StringLiteral&&J(e,i.UnexpectedString),e.type===t.Identifier&&J(e,i.UnexpectedIdentifier),e.type===t.Keyword){if(function(e){switch(e){case"class":case"enum":case"export":case"extends":case"import":case"super":return!0;default:return!1}}(e.value))J(e,i.UnexpectedReserved);else if(l&&D(e.value))return void Q(e,i.StrictReservedWord);J(e,i.UnexpectedToken,e.value)}J(e,i.UnexpectedToken,e.value)}function Y(e){var n=z();n.type===t.Punctuator&&n.value===e||X(n)}function K(e){var n=z();n.type===t.Keyword&&n.value===e||X(n)}function Z(e){return m.type===t.Punctuator&&m.value===e}function ee(e){return m.type===t.Keyword&&m.value===e}function te(){var e;59===u.charCodeAt(d)||Z(";")?z():(e=p,q(),p===e&&(m.type===t.EOF||Z("}")||X(m)))}function ne(e){return e.type===o.Identifier||e.type===o.MemberExpression}function re(e,t){var n,r,o;return n=l,o=m,r=Ce(),t&&l&&E(e[0].name)&&Q(t,i.StrictParamName),l=n,g.markEnd(g.createFunctionExpression(null,e,[],r),o)}function oe(){var e,n;return n=m,(e=z()).type===t.StringLiteral||e.type===t.NumericLiteral?(l&&e.octal&&Q(e,i.StrictOctalLiteral),g.markEnd(g.createLiteral(e),n)):g.markEnd(g.createIdentifier(e.value),n)}function ae(){var e,n,r,o,a,s;return s=m,(e=m).type===t.Identifier?(r=oe(),"get"!==e.value||Z(":")?"set"!==e.value||Z(":")?(Y(":"),o=me(),g.markEnd(g.createProperty("init",r,o),s)):(n=oe(),Y("("),(e=m).type!==t.Identifier?(Y(")"),Q(e,i.UnexpectedToken,e.value),o=re([])):(a=[be()],Y(")"),o=re(a,e)),g.markEnd(g.createProperty("set",n,o),s)):(n=oe(),Y("("),Y(")"),o=re([]),g.markEnd(g.createProperty("get",n,o),s))):e.type!==t.EOF&&e.type!==t.Punctuator?(n=oe(),Y(":"),o=me(),g.markEnd(g.createProperty("init",n,o),s)):void X(e)}function ie(){var e,n,r,s;if(Z("("))return function(){var e;return Y("("),e=ve(),Y(")"),e}();if(Z("["))return function(){var e,t=[];for(e=m,Y("[");!Z("]");)Z(",")?(z(),t.push(null)):(t.push(me()),Z("]")||Y(","));return z(),g.markEnd(g.createArrayExpression(t),e)}();if(Z("{"))return function(){var e,t,n,r,s,c=[],u={},d=String;for(s=m,Y("{");!Z("}");)t=(e=ae()).key.type===o.Identifier?e.key.name:d(e.key.value),r="init"===e.kind?a.Data:"get"===e.kind?a.Get:a.Set,n="$"+t,Object.prototype.hasOwnProperty.call(u,n)?(u[n]===a.Data?l&&r===a.Data?Q({},i.StrictDuplicateProperty):r!==a.Data&&Q({},i.AccessorDataProperty):r===a.Data?Q({},i.AccessorDataProperty):u[n]&r&&Q({},i.AccessorGetSet),u[n]|=r):u[n]=r,c.push(e),Z("}")||Y(",");return Y("}"),g.markEnd(g.createObjectExpression(c),s)}();if(e=m.type,s=m,e===t.Identifier)r=g.createIdentifier(z().value);else if(e===t.StringLiteral||e===t.NumericLiteral)l&&m.octal&&Q(m,i.StrictOctalLiteral),r=g.createLiteral(z());else if(e===t.Keyword){if(ee("function"))return function(){var e,t,n,r,o,a,s,c,u=null,d=[];return c=m,K("function"),Z("(")||(e=m,u=be(),l?E(e.value)&&Q(e,i.StrictFunctionName):E(e.value)?(n=e,r=i.StrictFunctionName):D(e.value)&&(n=e,r=i.StrictReservedWord)),d=(o=De(n)).params,t=o.stricted,n=o.firstRestricted,o.message&&(r=o.message),s=l,a=Ce(),l&&n&&J(n,r),l&&t&&Q(t,r),l=s,g.markEnd(g.createFunctionExpression(u,d,[],a),c)}();ee("this")?(z(),r=g.createThisExpression()):X(z())}else e===t.BooleanLiteral?((n=z()).value="true"===n.value,r=g.createLiteral(n)):e===t.NullLiteral?((n=z()).value=null,r=g.createLiteral(n)):Z("/")||Z("/=")?(r=void 0!==y.tokens?g.createLiteral(F()):g.createLiteral(L()),W()):X(z());return g.markEnd(r,s)}function se(){var e=[];if(Y("("),!Z(")"))for(;d<f&&(e.push(me()),!Z(")"));)Y(",");return Y(")"),e}function ce(){var e,n;return n=m,function(e){return e.type===t.Identifier||e.type===t.Keyword||e.type===t.BooleanLiteral||e.type===t.NullLiteral}(e=z())||X(e),g.markEnd(g.createIdentifier(e.value),n)}function ue(){return Y("."),ce()}function le(){var e;return Y("["),e=ve(),Y("]"),e}function de(){var e,t,n;return n=m,K("new"),e=function(){var e,t,n,r;for(r=m,e=v.allowIn,t=ee("new")?de():ie(),v.allowIn=e;Z(".")||Z("[");)Z("[")?(n=le(),t=g.createMemberExpression("[",t,n)):(n=ue(),t=g.createMemberExpression(".",t,n)),g.markEnd(t,r);return t}(),t=Z("(")?se():[],g.markEnd(g.createNewExpression(e,t),n)}function pe(){var e,n,r=m;return e=function(){var e,t,n,r,o;for(o=m,e=v.allowIn,v.allowIn=!0,t=ee("new")?de():ie(),v.allowIn=e;;){if(Z("."))r=ue(),t=g.createMemberExpression(".",t,r);else if(Z("("))n=se(),t=g.createCallExpression(t,n);else{if(!Z("["))break;r=le(),t=g.createMemberExpression("[",t,r)}g.markEnd(t,o)}return t}(),m.type===t.Punctuator&&(!Z("++")&&!Z("--")||H()||(l&&e.type===o.Identifier&&E(e.name)&&Q({},i.StrictLHSPostfix),ne(e)||Q({},i.InvalidLHSInAssignment),n=z(),e=g.markEnd(g.createPostfixExpression(n.value,e),r))),e}function he(){var e,n,r;return m.type!==t.Punctuator&&m.type!==t.Keyword?n=pe():Z("++")||Z("--")?(r=m,e=z(),n=he(),l&&n.type===o.Identifier&&E(n.name)&&Q({},i.StrictLHSPrefix),ne(n)||Q({},i.InvalidLHSInAssignment),n=g.createUnaryExpression(e.value,n),n=g.markEnd(n,r)):Z("+")||Z("-")||Z("~")||Z("!")?(r=m,e=z(),n=he(),n=g.createUnaryExpression(e.value,n),n=g.markEnd(n,r)):ee("delete")||ee("void")||ee("typeof")?(r=m,e=z(),n=he(),n=g.createUnaryExpression(e.value,n),n=g.markEnd(n,r),l&&"delete"===n.operator&&n.argument.type===o.Identifier&&Q({},i.StrictDelete)):n=pe(),n}function fe(e,n){var r=0;if(e.type!==t.Punctuator&&e.type!==t.Keyword)return 0;switch(e.value){case"||":r=1;break;case"&&":r=2;break;case"|":r=3;break;case"^":r=4;break;case"&":r=5;break;case"==":case"!=":case"===":case"!==":r=6;break;case"<":case">":case"<=":case">=":case"instanceof":r=7;break;case"in":r=n?7:0;break;case"<<":case">>":case">>>":r=8;break;case"+":case"-":r=9;break;case"*":case"/":case"%":r=11}return r}function ge(){var e,t,n,r,o;return o=m,e=function(){var e,t,n,r,o,a,i,s,c,u;if(e=m,c=he(),0===(o=fe(r=m,v.allowIn)))return c;for(r.prec=o,z(),t=[e,m],a=[c,r,i=he()];(o=fe(m,v.allowIn))>0;){for(;a.length>2&&o<=a[a.length-2].prec;)i=a.pop(),s=a.pop().value,c=a.pop(),n=g.createBinaryExpression(s,c,i),t.pop(),e=t[t.length-1],g.markEnd(n,e),a.push(n);(r=z()).prec=o,a.push(r),t.push(m),n=he(),a.push(n)}for(n=a[u=a.length-1],t.pop();u>1;)n=g.createBinaryExpression(a[u-1].value,a[u-2],n),u-=2,e=t.pop(),g.markEnd(n,e);return n}(),Z("?")&&(z(),t=v.allowIn,v.allowIn=!0,n=me(),v.allowIn=t,Y(":"),r=me(),e=g.createConditionalExpression(e,n,r),g.markEnd(e,o)),e}function me(){var e,n,r,a,s,c;return e=m,s=m,a=n=ge(),m.type===t.Punctuator&&("="===(c=m.value)||"*="===c||"/="===c||"%="===c||"+="===c||"-="===c||"<<="===c||">>="===c||">>>="===c||"&="===c||"^="===c||"|="===c)&&(ne(n)||Q({},i.InvalidLHSInAssignment),l&&n.type===o.Identifier&&E(n.name)&&Q(e,i.StrictLHSAssignment),e=z(),r=me(),a=g.markEnd(g.createAssignmentExpression(e.value,n,r),s)),a}function ve(){var e,t=m;if(e=me(),Z(",")){for(e=g.createSequenceExpression([e]);d<f&&Z(",");)z(),e.expressions.push(me());g.markEnd(e,t)}return e}function ye(){var e,t;return t=m,Y("{"),e=function(){for(var e,t=[];d<f&&!Z("}")&&void 0!==(e=je());)t.push(e);return t}(),Y("}"),g.markEnd(g.createBlockStatement(e),t)}function be(){var e,n;return n=m,(e=z()).type!==t.Identifier&&X(e),g.markEnd(g.createIdentifier(e.value),n)}function we(e){var t,n,r=null;return n=m,t=be(),l&&E(t.name)&&Q({},i.StrictVarName),"const"===e?(Y("="),r=me()):Z("=")&&(z(),r=me()),g.markEnd(g.createVariableDeclarator(t,r),n)}function _e(e){var t=[];do{if(t.push(we(e)),!Z(","))break;z()}while(d<f);return t}function xe(){var e,t,n,r,o,a,s,c,u,l;return e=t=n=null,K("for"),Y("("),Z(";")?z():(ee("var")||ee("let")?(v.allowIn=!1,l=m,c=z(),u=_e(),e=g.markEnd(g.createVariableDeclaration(u,c.value),l),v.allowIn=!0,1===e.declarations.length&&ee("in")&&(z(),r=e,o=ve(),e=null)):(v.allowIn=!1,e=ve(),v.allowIn=!0,ee("in")&&(ne(e)||Q({},i.InvalidLHSInForIn),z(),r=e,o=ve(),e=null)),void 0===r&&Y(";")),void 0===r&&(Z(";")||(t=ve()),Y(";"),Z(")")||(n=ve())),Y(")"),s=v.inIteration,v.inIteration=!0,a=Se(),v.inIteration=s,void 0===r?g.createForStatement(e,t,n,a):g.createForInStatement(r,o,a)}function ke(){var e,t,n,r=[];for(n=m,ee("default")?(z(),e=null):(K("case"),e=ve()),Y(":");d<f&&!(Z("}")||ee("default")||ee("case"));)t=Se(),r.push(t);return g.markEnd(g.createSwitchCase(e,r),n)}function Pe(){var e,t,n,r,o=[],a=null;return K("try"),e=ye(),ee("catch")&&o.push((r=m,K("catch"),Y("("),Z(")")&&X(m),t=be(),l&&E(t.name)&&Q({},i.StrictCatchVariable),Y(")"),n=ye(),g.markEnd(g.createCatchClause(t,n),r))),ee("finally")&&(z(),a=ye()),0!==o.length||a||J({},i.NoCatchOrFinally),g.createTryStatement(e,[],o,a)}function Se(){var e,n,r,a,s,c,p,h,y,b=m.type;if(b===t.EOF&&X(m),b===t.Punctuator&&"{"===m.value)return ye();if(a=m,b===t.Punctuator)switch(m.value){case";":return g.markEnd((Y(";"),g.createEmptyStatement()),a);case"(":return g.markEnd(function(){var e=ve();return te(),g.createExpressionStatement(e)}(),a)}if(b===t.Keyword)switch(m.value){case"break":return g.markEnd(function(){var e,n=null;return K("break"),59===u.charCodeAt(d)?(z(),v.inIteration||v.inSwitch||J({},i.IllegalBreak),g.createBreakStatement(null)):H()?(v.inIteration||v.inSwitch||J({},i.IllegalBreak),g.createBreakStatement(null)):(m.type===t.Identifier&&(e="$"+(n=be()).name,Object.prototype.hasOwnProperty.call(v.labelSet,e)||J({},i.UnknownLabel,n.name)),te(),null!==n||v.inIteration||v.inSwitch||J({},i.IllegalBreak),g.createBreakStatement(n))}(),a);case"continue":return g.markEnd(function(){var e,n=null;return K("continue"),59===u.charCodeAt(d)?(z(),v.inIteration||J({},i.IllegalContinue),g.createContinueStatement(null)):H()?(v.inIteration||J({},i.IllegalContinue),g.createContinueStatement(null)):(m.type===t.Identifier&&(e="$"+(n=be()).name,Object.prototype.hasOwnProperty.call(v.labelSet,e)||J({},i.UnknownLabel,n.name)),te(),null!==n||v.inIteration||J({},i.IllegalContinue),g.createContinueStatement(n))}(),a);case"debugger":return g.markEnd((K("debugger"),te(),g.createDebuggerStatement()),a);case"do":return g.markEnd((K("do"),y=v.inIteration,v.inIteration=!0,p=Se(),v.inIteration=y,K("while"),Y("("),h=ve(),Y(")"),Z(";")&&z(),g.createDoWhileStatement(p,h)),a);case"for":return g.markEnd(xe(),a);case"function":return g.markEnd(Ee(),a);case"if":return g.markEnd(function(){var e,t,n;return K("if"),Y("("),e=ve(),Y(")"),t=Se(),ee("else")?(z(),n=Se()):n=null,g.createIfStatement(e,t,n)}(),a);case"return":return g.markEnd((c=null,K("return"),v.inFunctionBody||Q({},i.IllegalReturn),32===u.charCodeAt(d)&&S(u.charCodeAt(d+1))?(c=ve(),te(),g.createReturnStatement(c)):H()?g.createReturnStatement(null):(Z(";")||Z("}")||m.type===t.EOF||(c=ve()),te(),g.createReturnStatement(c))),a);case"switch":return g.markEnd(function(){var e,t,n,r,o;if(K("switch"),Y("("),e=ve(),Y(")"),Y("{"),t=[],Z("}"))return z(),g.createSwitchStatement(e,t);for(r=v.inSwitch,v.inSwitch=!0,o=!1;d<f&&!Z("}");)null===(n=ke()).test&&(o&&J({},i.MultipleDefaultsInSwitch),o=!0),t.push(n);return v.inSwitch=r,Y("}"),g.createSwitchStatement(e,t)}(),a);case"throw":return g.markEnd(function(){var e;return K("throw"),H()&&J({},i.NewlineAfterThrow),e=ve(),te(),g.createThrowStatement(e)}(),a);case"try":return g.markEnd(Pe(),a);case"var":return g.markEnd((K("var"),s=_e(),te(),g.createVariableDeclaration(s,"var")),a);case"while":return g.markEnd(function(){var e,t,n;return K("while"),Y("("),e=ve(),Y(")"),n=v.inIteration,v.inIteration=!0,t=Se(),v.inIteration=n,g.createWhileStatement(e,t)}(),a);case"with":return g.markEnd(function(){var e,t;return l&&(q(),Q({},i.StrictModeWith)),K("with"),Y("("),e=ve(),Y(")"),t=Se(),g.createWithStatement(e,t)}(),a)}return(e=ve()).type===o.Identifier&&Z(":")?(z(),r="$"+e.name,Object.prototype.hasOwnProperty.call(v.labelSet,r)&&J({},i.Redeclaration,"Label",e.name),v.labelSet[r]=!0,n=Se(),delete v.labelSet[r],g.markEnd(g.createLabeledStatement(e,n),a)):(te(),g.markEnd(g.createExpressionStatement(e),a))}function Ce(){var e,n,r,a,s,c,p,h,y=[];for(h=m,Y("{");d<f&&m.type===t.StringLiteral&&(n=m,e=je(),y.push(e),e.expression.type===o.Literal);)"use strict"===u.slice(n.start+1,n.end-1)?(l=!0,r&&Q(r,i.StrictOctalLiteral)):!r&&n.octal&&(r=n);for(a=v.labelSet,s=v.inIteration,c=v.inSwitch,p=v.inFunctionBody,v.labelSet={},v.inIteration=!1,v.inSwitch=!1,v.inFunctionBody=!0;d<f&&!Z("}")&&void 0!==(e=je());)y.push(e);return Y("}"),v.labelSet=a,v.inIteration=s,v.inSwitch=c,v.inFunctionBody=p,g.markEnd(g.createBlockStatement(y),h)}function De(e){var t,n,r,o,a,s,c=[];if(Y("("),!Z(")"))for(o={};d<f&&(n=m,t=be(),a="$"+n.value,l?(E(n.value)&&(r=n,s=i.StrictParamName),Object.prototype.hasOwnProperty.call(o,a)&&(r=n,s=i.StrictParamDupe)):e||(E(n.value)?(e=n,s=i.StrictParamName):D(n.value)?(e=n,s=i.StrictReservedWord):Object.prototype.hasOwnProperty.call(o,a)&&(e=n,s=i.StrictParamDupe)),c.push(t),o[a]=!0,!Z(")"));)Y(",");return Y(")"),{params:c,stricted:r,firstRestricted:e,message:s}}function Ee(){var e,t,n,r,o,a,s,c,u,d;return u=m,K("function"),n=m,e=be(),l?E(n.value)&&Q(n,i.StrictFunctionName):E(n.value)?(a=n,s=i.StrictFunctionName):D(n.value)&&(a=n,s=i.StrictReservedWord),d=(o=De(a)).params,r=o.stricted,a=o.firstRestricted,o.message&&(s=o.message),c=l,t=Ce(),l&&a&&J(a,s),l&&r&&Q(r,s),l=c,g.markEnd(g.createFunctionDeclaration(e,d,[],t),u)}function je(){if(m.type===t.Keyword)switch(m.value){case"const":case"let":return e=m.value,r=m,K(e),n=_e(e),te(),g.markEnd(g.createVariableDeclaration(n,e),r);case"function":return Ee();default:return Se()}var e,n,r;if(m.type!==t.EOF)return Se()}function Ae(){var e,n;return q(),W(),n=m,l=!1,e=function(){for(var e,n,r,a=[];d<f&&(n=m).type===t.StringLiteral&&(e=je(),a.push(e),e.expression.type===o.Literal);)"use strict"===u.slice(n.start+1,n.end-1)?(l=!0,r&&Q(r,i.StrictOctalLiteral)):!r&&n.octal&&(r=n);for(;d<f&&void 0!==(e=je());)a.push(e);return a}(),g.markEnd(g.createProgram(e),n)}function Ie(){var e,t,n,r=[];for(e=0;e<y.tokens.length;++e)n={type:(t=y.tokens[e]).type,value:t.value},y.range&&(n.range=t.range),y.loc&&(n.loc=t.loc),r.push(n);y.tokens=r}(n={})[(t={BooleanLiteral:1,EOF:2,Identifier:3,Keyword:4,NullLiteral:5,NumericLiteral:6,Punctuator:7,StringLiteral:8,RegularExpression:9}).BooleanLiteral]="Boolean",n[t.EOF]="<end>",n[t.Identifier]="Identifier",n[t.Keyword]="Keyword",n[t.NullLiteral]="Null",n[t.NumericLiteral]="Numeric",n[t.Punctuator]="Punctuator",n[t.StringLiteral]="String",n[t.RegularExpression]="RegularExpression",r=["(","{","[","in","typeof","instanceof","new","return","case","delete","throw","void","=","+=","-=","*=","/=","%=","<<=",">>=",">>>=","&=","|=","^=",",","+","-","*","/","%","++","--","<<",">>",">>>","&","|","^","!","~","&&","||","?",":","===","==",">=","<=","<",">","!=","!=="],o={AssignmentExpression:"AssignmentExpression",ArrayExpression:"ArrayExpression",BlockStatement:"BlockStatement",BinaryExpression:"BinaryExpression",BreakStatement:"BreakStatement",CallExpression:"CallExpression",CatchClause:"CatchClause",ConditionalExpression:"ConditionalExpression",ContinueStatement:"ContinueStatement",DoWhileStatement:"DoWhileStatement",DebuggerStatement:"DebuggerStatement",EmptyStatement:"EmptyStatement",ExpressionStatement:"ExpressionStatement",ForStatement:"ForStatement",ForInStatement:"ForInStatement",FunctionDeclaration:"FunctionDeclaration",FunctionExpression:"FunctionExpression",Identifier:"Identifier",IfStatement:"IfStatement",Literal:"Literal",LabeledStatement:"LabeledStatement",LogicalExpression:"LogicalExpression",MemberExpression:"MemberExpression",NewExpression:"NewExpression",ObjectExpression:"ObjectExpression",Program:"Program",Property:"Property",ReturnStatement:"ReturnStatement",SequenceExpression:"SequenceExpression",SwitchStatement:"SwitchStatement",SwitchCase:"SwitchCase",ThisExpression:"ThisExpression",ThrowStatement:"ThrowStatement",TryStatement:"TryStatement",UnaryExpression:"UnaryExpression",UpdateExpression:"UpdateExpression",VariableDeclaration:"VariableDeclaration",VariableDeclarator:"VariableDeclarator",WhileStatement:"WhileStatement",WithStatement:"WithStatement"},a={Data:1,Get:2,Set:4},i={UnexpectedToken:"Unexpected token %0",UnexpectedNumber:"Unexpected number",UnexpectedString:"Unexpected string",UnexpectedIdentifier:"Unexpected identifier",UnexpectedReserved:"Unexpected reserved word",UnexpectedEOS:"Unexpected end of input",NewlineAfterThrow:"Illegal newline after throw",InvalidRegExp:"Invalid regular expression",UnterminatedRegExp:"Invalid regular expression: missing /",InvalidLHSInAssignment:"Invalid left-hand side in assignment",InvalidLHSInForIn:"Invalid left-hand side in for-in",MultipleDefaultsInSwitch:"More than one default clause in switch statement",NoCatchOrFinally:"Missing catch or finally after try",UnknownLabel:"Undefined label '%0'",Redeclaration:"%0 '%1' has already been declared",IllegalContinue:"Illegal continue statement",IllegalBreak:"Illegal break statement",IllegalReturn:"Illegal return statement",StrictModeWith:"Strict mode code may not include a with statement",StrictCatchVariable:"Catch variable may not be eval or arguments in strict mode",StrictVarName:"Variable name may not be eval or arguments in strict mode",StrictParamName:"Parameter name eval or arguments is not allowed in strict mode",StrictParamDupe:"Strict mode function may not have duplicate parameter names",StrictFunctionName:"Function name may not be eval or arguments in strict mode",StrictOctalLiteral:"Octal literals are not allowed in strict mode.",StrictDelete:"Delete of an unqualified identifier in strict mode.",StrictDuplicateProperty:"Duplicate data property in object literal not allowed in strict mode",AccessorDataProperty:"Object literal may not have data and accessor property with the same name",AccessorGetSet:"Object literal may not have multiple get/set accessors with the same name",StrictLHSAssignment:"Assignment to eval or arguments is not allowed in strict mode",StrictLHSPostfix:"Postfix increment/decrement may not have eval or arguments operand in strict mode",StrictLHSPrefix:"Prefix increment/decrement may not have eval or arguments operand in strict mode",StrictReservedWord:"Use of future reserved word in strict mode"},s={NonAsciiIdentifierStart:new RegExp("[ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԧԱ-Ֆՙա-ևא-תװ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࢠࢢ-ࢬऄ-हऽॐक़-ॡॱ-ॷॹ-ॿঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-ళవ-హఽౘౙౠౡಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഅ-ഌഎ-ഐഒ-ഺഽൎൠൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛰᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡷᢀ-ᢨᢪᢰ-ᣵᤀ-ᤜᥐ-ᥭᥰ-ᥴᦀ-ᦫᧁ-ᧇᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᳩ-ᳬᳮ-ᳱᳵᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⸯ々-〇〡-〩〱-〵〸-〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿌ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚗꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞎꞐ-ꞓꞠ-Ɦꟸ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꪀ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꯀ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ]"),NonAsciiIdentifierPart:new RegExp("[ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮ̀-ʹͶͷͺ-ͽΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁ҃-҇Ҋ-ԧԱ-Ֆՙա-և֑-ׇֽֿׁׂׅׄא-תװ-ײؐ-ؚؠ-٩ٮ-ۓە-ۜ۟-۪ۨ-ۼۿܐ-݊ݍ-ޱ߀-ߵߺࠀ-࠭ࡀ-࡛ࢠࢢ-ࢬࣤ-ࣾऀ-ॣ०-९ॱ-ॷॹ-ॿঁ-ঃঅ-ঌএঐও-নপ-রলশ-হ়-ৄেৈো-ৎৗড়ঢ়য়-ৣ০-ৱਁ-ਃਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹ਼ਾ-ੂੇੈੋ-੍ੑਖ਼-ੜਫ਼੦-ੵઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૯ଁ-ଃଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହ଼-ୄେୈୋ-୍ୖୗଡ଼ଢ଼ୟ-ୣ୦-୯ୱஂஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௯ఁ-ఃఅ-ఌఎ-ఐఒ-నప-ళవ-హఽ-ౄె-ైొ-్ౕౖౘౙౠ-ౣ౦-౯ಂಃಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕೖೞೠ-ೣ೦-೯ೱೲംഃഅ-ഌഎ-ഐഒ-ഺഽ-ൄെ-ൈൊ-ൎൗൠ-ൣ൦-൯ൺ-ൿංඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟෲෳก-ฺเ-๎๐-๙ກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ູົ-ຽເ-ໄໆ່-ໍ໐-໙ໜ-ໟༀ༘༙༠-༩༹༵༷༾-ཇཉ-ཬཱ-྄྆-ྗྙ-ྼ࿆က-၉ၐ-ႝႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፟ᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛰᜀ-ᜌᜎ-᜔ᜠ-᜴ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲᝳក-៓ៗៜ៝០-៩᠋-᠍᠐-᠙ᠠ-ᡷᢀ-ᢪᢰ-ᣵᤀ-ᤜᤠ-ᤫᤰ-᤻᥆-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧙ᨀ-ᨛᨠ-ᩞ᩠-᩿᩼-᪉᪐-᪙ᪧᬀ-ᭋ᭐-᭙᭫-᭳ᮀ-᯳ᰀ-᰷᱀-᱉ᱍ-ᱽ᳐-᳔᳒-ᳶᴀ-ᷦ᷼-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼ‌‍‿⁀⁔ⁱⁿₐ-ₜ⃐-⃥⃜⃡-⃰ℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯ⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-ⷿⸯ々-〇〡-〯〱-〵〸-〼ぁ-ゖ゙゚ゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿌ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘫꙀ-꙯ꙴ-꙽ꙿ-ꚗꚟ-꛱ꜗ-ꜟꜢ-ꞈꞋ-ꞎꞐ-ꞓꞠ-Ɦꟸ-ꠧꡀ-ꡳꢀ-꣄꣐-꣙꣠-ꣷꣻ꤀-꤭ꤰ-꥓ꥠ-ꥼꦀ-꧀ꧏ-꧙ꨀ-ꨶꩀ-ꩍ꩐-꩙ꩠ-ꩶꩺꩻꪀ-ꫂꫛ-ꫝꫠ-ꫯꫲ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꯀ-ꯪ꯬꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻ︀-️︠-︦︳︴﹍-﹏ﹰ-ﹴﹶ-ﻼ０-９Ａ-Ｚ＿ａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ]")},c={name:"SyntaxTree",processComment:function(e){var t,n;if(!(e.type===o.Program&&e.body.length>0)){for(y.trailingComments.length>0?y.trailingComments[0].range[0]>=e.range[1]?(n=y.trailingComments,y.trailingComments=[]):y.trailingComments.length=0:y.bottomRightStack.length>0&&y.bottomRightStack[y.bottomRightStack.length-1].trailingComments&&y.bottomRightStack[y.bottomRightStack.length-1].trailingComments[0].range[0]>=e.range[1]&&(n=y.bottomRightStack[y.bottomRightStack.length-1].trailingComments,delete y.bottomRightStack[y.bottomRightStack.length-1].trailingComments);y.bottomRightStack.length>0&&y.bottomRightStack[y.bottomRightStack.length-1].range[0]>=e.range[0];)t=y.bottomRightStack.pop();t?t.leadingComments&&t.leadingComments[t.leadingComments.length-1].range[1]<=e.range[0]&&(e.leadingComments=t.leadingComments,delete t.leadingComments):y.leadingComments.length>0&&y.leadingComments[y.leadingComments.length-1].range[1]<=e.range[0]&&(e.leadingComments=y.leadingComments,y.leadingComments=[]),n&&(e.trailingComments=n),y.bottomRightStack.push(e)}},markEnd:function(e,t){return y.range&&(e.range=[t.start,d]),y.loc&&(e.loc=new V(void 0===t.startLineNumber?t.lineNumber:t.startLineNumber,t.start-(void 0===t.startLineStart?t.lineStart:t.startLineStart),p,d-h),this.postProcess(e)),y.attachComment&&this.processComment(e),e},postProcess:function(e){return y.source&&(e.loc.source=y.source),e},createArrayExpression:function(e){return{type:o.ArrayExpression,elements:e}},createAssignmentExpression:function(e,t,n){return{type:o.AssignmentExpression,operator:e,left:t,right:n}},createBinaryExpression:function(e,t,n){return{type:"||"===e||"&&"===e?o.LogicalExpression:o.BinaryExpression,operator:e,left:t,right:n}},createBlockStatement:function(e){return{type:o.BlockStatement,body:e}},createBreakStatement:function(e){return{type:o.BreakStatement,label:e}},createCallExpression:function(e,t){return{type:o.CallExpression,callee:e,arguments:t}},createCatchClause:function(e,t){return{type:o.CatchClause,param:e,body:t}},createConditionalExpression:function(e,t,n){return{type:o.ConditionalExpression,test:e,consequent:t,alternate:n}},createContinueStatement:function(e){return{type:o.ContinueStatement,label:e}},createDebuggerStatement:function(){return{type:o.DebuggerStatement}},createDoWhileStatement:function(e,t){return{type:o.DoWhileStatement,body:e,test:t}},createEmptyStatement:function(){return{type:o.EmptyStatement}},createExpressionStatement:function(e){return{type:o.ExpressionStatement,expression:e}},createForStatement:function(e,t,n,r){return{type:o.ForStatement,init:e,test:t,update:n,body:r}},createForInStatement:function(e,t,n){return{type:o.ForInStatement,left:e,right:t,body:n,each:!1}},createFunctionDeclaration:function(e,t,n,r){return{type:o.FunctionDeclaration,id:e,params:t,defaults:n,body:r,rest:null,generator:!1,expression:!1}},createFunctionExpression:function(e,t,n,r){return{type:o.FunctionExpression,id:e,params:t,defaults:n,body:r,rest:null,generator:!1,expression:!1}},createIdentifier:function(e){return{type:o.Identifier,name:e}},createIfStatement:function(e,t,n){return{type:o.IfStatement,test:e,consequent:t,alternate:n}},createLabeledStatement:function(e,t){return{type:o.LabeledStatement,label:e,body:t}},createLiteral:function(e){return{type:o.Literal,value:e.value,raw:u.slice(e.start,e.end)}},createMemberExpression:function(e,t,n){return{type:o.MemberExpression,computed:"["===e,object:t,property:n}},createNewExpression:function(e,t){return{type:o.NewExpression,callee:e,arguments:t}},createObjectExpression:function(e){return{type:o.ObjectExpression,properties:e}},createPostfixExpression:function(e,t){return{type:o.UpdateExpression,operator:e,argument:t,prefix:!1}},createProgram:function(e){return{type:o.Program,body:e}},createProperty:function(e,t,n){return{type:o.Property,key:t,value:n,kind:e}},createReturnStatement:function(e){return{type:o.ReturnStatement,argument:e}},createSequenceExpression:function(e){return{type:o.SequenceExpression,expressions:e}},createSwitchCase:function(e,t){return{type:o.SwitchCase,test:e,consequent:t}},createSwitchStatement:function(e,t){return{type:o.SwitchStatement,discriminant:e,cases:t}},createThisExpression:function(){return{type:o.ThisExpression}},createThrowStatement:function(e){return{type:o.ThrowStatement,argument:e}},createTryStatement:function(e,t,n,r){return{type:o.TryStatement,block:e,guardedHandlers:t,handlers:n,finalizer:r}},createUnaryExpression:function(e,t){return"++"===e||"--"===e?{type:o.UpdateExpression,operator:e,argument:t,prefix:!0}:{type:o.UnaryExpression,operator:e,argument:t,prefix:!0}},createVariableDeclaration:function(e,t){return{type:o.VariableDeclaration,declarations:e,kind:t}},createVariableDeclarator:function(e,t){return{type:o.VariableDeclarator,id:e,init:t}},createWhileStatement:function(e,t){return{type:o.WhileStatement,test:e,body:t}},createWithStatement:function(e,t){return{type:o.WithStatement,object:e,body:t}}},e.version="1.2.2",e.tokenize=function(e,n){var r;"string"==typeof e||e instanceof String||(e=String(e)),g=c,d=0,p=(u=e).length>0?1:0,h=0,f=u.length,m=null,v={allowIn:!0,labelSet:{},inFunctionBody:!1,inIteration:!1,inSwitch:!1,lastCommentStart:-1},y={},(n=n||{}).tokens=!0,y.tokens=[],y.tokenize=!0,y.openParenToken=-1,y.openCurlyToken=-1,y.range="boolean"==typeof n.range&&n.range,y.loc="boolean"==typeof n.loc&&n.loc,"boolean"==typeof n.comment&&n.comment&&(y.comments=[]),"boolean"==typeof n.tolerant&&n.tolerant&&(y.errors=[]);try{if(W(),m.type===t.EOF)return y.tokens;for(z();m.type!==t.EOF;)try{z()}catch(e){if(y.errors){y.errors.push(e);break}throw e}Ie(),r=y.tokens,void 0!==y.comments&&(r.comments=y.comments),void 0!==y.errors&&(r.errors=y.errors)}catch(e){throw e}finally{y={}}return r},e.parse=function(e,t){var n,r;r=String,"string"==typeof e||e instanceof String||(e=r(e)),g=c,d=0,p=(u=e).length>0?1:0,h=0,f=u.length,m=null,v={allowIn:!0,labelSet:{},inFunctionBody:!1,inIteration:!1,inSwitch:!1,lastCommentStart:-1},y={},void 0!==t&&(y.range="boolean"==typeof t.range&&t.range,y.loc="boolean"==typeof t.loc&&t.loc,y.attachComment="boolean"==typeof t.attachComment&&t.attachComment,y.loc&&null!==t.source&&void 0!==t.source&&(y.source=r(t.source)),"boolean"==typeof t.tokens&&t.tokens&&(y.tokens=[]),"boolean"==typeof t.comment&&t.comment&&(y.comments=[]),"boolean"==typeof t.tolerant&&t.tolerant&&(y.errors=[]),y.attachComment&&(y.range=!0,y.comments=[],y.bottomRightStack=[],y.trailingComments=[],y.leadingComments=[]));try{n=Ae(),void 0!==y.comments&&(n.comments=y.comments),void 0!==y.tokens&&(Ie(),n.tokens=y.tokens),void 0!==y.errors&&(n.errors=y.errors)}catch(e){throw e}finally{y={}}return n},e.Syntax=function(){var e,t={};for(e in"function"==typeof Object.create&&(t=Object.create(null)),o)o.hasOwnProperty(e)&&(t[e]=o[e]);return"function"==typeof Object.freeze&&Object.freeze(t),t}()}))},{}],1:[function(e,t,n){(function(r){var o=function(){var e={trace:function(){},yy:{},symbols_:{error:2,JSON_PATH:3,DOLLAR:4,PATH_COMPONENTS:5,LEADING_CHILD_MEMBER_EXPRESSION:6,PATH_COMPONENT:7,MEMBER_COMPONENT:8,SUBSCRIPT_COMPONENT:9,CHILD_MEMBER_COMPONENT:10,DESCENDANT_MEMBER_COMPONENT:11,DOT:12,MEMBER_EXPRESSION:13,DOT_DOT:14,STAR:15,IDENTIFIER:16,SCRIPT_EXPRESSION:17,INTEGER:18,END:19,CHILD_SUBSCRIPT_COMPONENT:20,DESCENDANT_SUBSCRIPT_COMPONENT:21,"[":22,SUBSCRIPT:23,"]":24,SUBSCRIPT_EXPRESSION:25,SUBSCRIPT_EXPRESSION_LIST:26,SUBSCRIPT_EXPRESSION_LISTABLE:27,",":28,STRING_LITERAL:29,ARRAY_SLICE:30,FILTER_EXPRESSION:31,QQ_STRING:32,Q_STRING:33,$accept:0,$end:1},terminals_:{2:"error",4:"DOLLAR",12:"DOT",14:"DOT_DOT",15:"STAR",16:"IDENTIFIER",17:"SCRIPT_EXPRESSION",18:"INTEGER",19:"END",22:"[",24:"]",28:",",30:"ARRAY_SLICE",31:"FILTER_EXPRESSION",32:"QQ_STRING",33:"Q_STRING"},productions_:[0,[3,1],[3,2],[3,1],[3,2],[5,1],[5,2],[7,1],[7,1],[8,1],[8,1],[10,2],[6,1],[11,2],[13,1],[13,1],[13,1],[13,1],[13,1],[9,1],[9,1],[20,3],[21,4],[23,1],[23,1],[26,1],[26,3],[27,1],[27,1],[27,1],[25,1],[25,1],[25,1],[29,1],[29,1]],performAction:function(e,n,r,o,a,i,s){o.ast||(o.ast=t,t.initialize());var c=i.length-1;switch(a){case 1:return o.ast.set({expression:{type:"root",value:i[c]}}),o.ast.unshift(),o.ast.yield();case 2:return o.ast.set({expression:{type:"root",value:i[c-1]}}),o.ast.unshift(),o.ast.yield();case 3:return o.ast.unshift(),o.ast.yield();case 4:return o.ast.set({operation:"member",scope:"child",expression:{type:"identifier",value:i[c-1]}}),o.ast.unshift(),o.ast.yield();case 5:case 6:break;case 7:o.ast.set({operation:"member"}),o.ast.push();break;case 8:o.ast.set({operation:"subscript"}),o.ast.push();break;case 9:o.ast.set({scope:"child"});break;case 10:o.ast.set({scope:"descendant"});break;case 11:break;case 12:o.ast.set({scope:"child",operation:"member"});break;case 13:break;case 14:o.ast.set({expression:{type:"wildcard",value:i[c]}});break;case 15:o.ast.set({expression:{type:"identifier",value:i[c]}});break;case 16:o.ast.set({expression:{type:"script_expression",value:i[c]}});break;case 17:o.ast.set({expression:{type:"numeric_literal",value:parseInt(i[c])}});break;case 18:break;case 19:o.ast.set({scope:"child"});break;case 20:o.ast.set({scope:"descendant"});break;case 21:case 22:case 23:break;case 24:i[c].length>1?o.ast.set({expression:{type:"union",value:i[c]}}):this.$=i[c];break;case 25:this.$=[i[c]];break;case 26:this.$=i[c-2].concat(i[c]);break;case 27:this.$={expression:{type:"numeric_literal",value:parseInt(i[c])}},o.ast.set(this.$);break;case 28:this.$={expression:{type:"string_literal",value:i[c]}},o.ast.set(this.$);break;case 29:this.$={expression:{type:"slice",value:i[c]}},o.ast.set(this.$);break;case 30:this.$={expression:{type:"wildcard",value:i[c]}},o.ast.set(this.$);break;case 31:this.$={expression:{type:"script_expression",value:i[c]}},o.ast.set(this.$);break;case 32:this.$={expression:{type:"filter_expression",value:i[c]}},o.ast.set(this.$);break;case 33:case 34:this.$=i[c]}},table:[{3:1,4:[1,2],6:3,13:4,15:[1,5],16:[1,6],17:[1,7],18:[1,8],19:[1,9]},{1:[3]},{1:[2,1],5:10,7:11,8:12,9:13,10:14,11:15,12:[1,18],14:[1,19],20:16,21:17,22:[1,20]},{1:[2,3],5:21,7:11,8:12,9:13,10:14,11:15,12:[1,18],14:[1,19],20:16,21:17,22:[1,20]},{1:[2,12],12:[2,12],14:[2,12],22:[2,12]},{1:[2,14],12:[2,14],14:[2,14],22:[2,14]},{1:[2,15],12:[2,15],14:[2,15],22:[2,15]},{1:[2,16],12:[2,16],14:[2,16],22:[2,16]},{1:[2,17],12:[2,17],14:[2,17],22:[2,17]},{1:[2,18],12:[2,18],14:[2,18],22:[2,18]},{1:[2,2],7:22,8:12,9:13,10:14,11:15,12:[1,18],14:[1,19],20:16,21:17,22:[1,20]},{1:[2,5],12:[2,5],14:[2,5],22:[2,5]},{1:[2,7],12:[2,7],14:[2,7],22:[2,7]},{1:[2,8],12:[2,8],14:[2,8],22:[2,8]},{1:[2,9],12:[2,9],14:[2,9],22:[2,9]},{1:[2,10],12:[2,10],14:[2,10],22:[2,10]},{1:[2,19],12:[2,19],14:[2,19],22:[2,19]},{1:[2,20],12:[2,20],14:[2,20],22:[2,20]},{13:23,15:[1,5],16:[1,6],17:[1,7],18:[1,8],19:[1,9]},{13:24,15:[1,5],16:[1,6],17:[1,7],18:[1,8],19:[1,9],22:[1,25]},{15:[1,29],17:[1,30],18:[1,33],23:26,25:27,26:28,27:32,29:34,30:[1,35],31:[1,31],32:[1,36],33:[1,37]},{1:[2,4],7:22,8:12,9:13,10:14,11:15,12:[1,18],14:[1,19],20:16,21:17,22:[1,20]},{1:[2,6],12:[2,6],14:[2,6],22:[2,6]},{1:[2,11],12:[2,11],14:[2,11],22:[2,11]},{1:[2,13],12:[2,13],14:[2,13],22:[2,13]},{15:[1,29],17:[1,30],18:[1,33],23:38,25:27,26:28,27:32,29:34,30:[1,35],31:[1,31],32:[1,36],33:[1,37]},{24:[1,39]},{24:[2,23]},{24:[2,24],28:[1,40]},{24:[2,30]},{24:[2,31]},{24:[2,32]},{24:[2,25],28:[2,25]},{24:[2,27],28:[2,27]},{24:[2,28],28:[2,28]},{24:[2,29],28:[2,29]},{24:[2,33],28:[2,33]},{24:[2,34],28:[2,34]},{24:[1,41]},{1:[2,21],12:[2,21],14:[2,21],22:[2,21]},{18:[1,33],27:42,29:34,30:[1,35],32:[1,36],33:[1,37]},{1:[2,22],12:[2,22],14:[2,22],22:[2,22]},{24:[2,26],28:[2,26]}],defaultActions:{27:[2,23],29:[2,30],30:[2,31],31:[2,32]},parseError:function(e,t){if(!t.recoverable)throw new Error(e);this.trace(e)},parse:function(e){var t=this,n=[0],r=[null],o=[],a=this.table,i="",s=0,c=0,u=0,l=2,d=1,p=o.slice.call(arguments,1);this.lexer.setInput(e),this.lexer.yy=this.yy,this.yy.lexer=this.lexer,this.yy.parser=this,void 0===this.lexer.yylloc&&(this.lexer.yylloc={});var h=this.lexer.yylloc;o.push(h);var f=this.lexer.options&&this.lexer.options.ranges;function g(){var e;return"number"!=typeof(e=t.lexer.lex()||d)&&(e=t.symbols_[e]||e),e}"function"==typeof this.yy.parseError?this.parseError=this.yy.parseError:this.parseError=Object.getPrototypeOf(this).parseError;for(var m,v,y,b,w,_,x,k,P,S={};;){if(y=n[n.length-1],this.defaultActions[y]?b=this.defaultActions[y]:(null==m&&(m=g()),b=a[y]&&a[y][m]),void 0===b||!b.length||!b[0]){var C="";for(_ in P=[],a[y])this.terminals_[_]&&_>l&&P.push("'"+this.terminals_[_]+"'");C=this.lexer.showPosition?"Parse error on line "+(s+1)+":\n"+this.lexer.showPosition()+"\nExpecting "+P.join(", ")+", got '"+(this.terminals_[m]||m)+"'":"Parse error on line "+(s+1)+": Unexpected "+(m==d?"end of input":"'"+(this.terminals_[m]||m)+"'"),this.parseError(C,{text:this.lexer.match,token:this.terminals_[m]||m,line:this.lexer.yylineno,loc:h,expected:P})}if(b[0]instanceof Array&&b.length>1)throw new Error("Parse Error: multiple actions possible at state: "+y+", token: "+m);switch(b[0]){case 1:n.push(m),r.push(this.lexer.yytext),o.push(this.lexer.yylloc),n.push(b[1]),m=null,v?(m=v,v=null):(c=this.lexer.yyleng,i=this.lexer.yytext,s=this.lexer.yylineno,h=this.lexer.yylloc,u>0&&u--);break;case 2:if(x=this.productions_[b[1]][1],S.$=r[r.length-x],S._$={first_line:o[o.length-(x||1)].first_line,last_line:o[o.length-1].last_line,first_column:o[o.length-(x||1)].first_column,last_column:o[o.length-1].last_column},f&&(S._$.range=[o[o.length-(x||1)].range[0],o[o.length-1].range[1]]),void 0!==(w=this.performAction.apply(S,[i,c,s,this.yy,b[1],r,o].concat(p))))return w;x&&(n=n.slice(0,-1*x*2),r=r.slice(0,-1*x),o=o.slice(0,-1*x)),n.push(this.productions_[b[1]][0]),r.push(S.$),o.push(S._$),k=a[n[n.length-2]][n[n.length-1]],n.push(k);break;case 3:return!0}}return!0}},t={initialize:function(){this._nodes=[],this._node={},this._stash=[]},set:function(e){for(var t in e)this._node[t]=e[t];return this._node},node:function(e){return arguments.length&&(this._node=e),this._node},push:function(){this._nodes.push(this._node),this._node={}},unshift:function(){this._nodes.unshift(this._node),this._node={}},yield:function(){var e=this._nodes;return this.initialize(),e}},n={EOF:1,parseError:function(e,t){if(!this.yy.parser)throw new Error(e);this.yy.parser.parseError(e,t)},setInput:function(e){return this._input=e,this._more=this._backtrack=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match="",this.conditionStack=["INITIAL"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var e=this._input[0];return this.yytext+=e,this.yyleng++,this.offset++,this.match+=e,this.matched+=e,e.match(/(?:\r\n?|\n).*/g)?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),e},unput:function(e){var t=e.length,n=e.split(/(?:\r\n?|\n)/g);this._input=e+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-t-1),this.offset-=t;var r=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),n.length-1&&(this.yylineno-=n.length-1);var o=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:n?(n.length===r.length?this.yylloc.first_column:0)+r[r.length-n.length].length-n[0].length:this.yylloc.first_column-t},this.options.ranges&&(this.yylloc.range=[o[0],o[0]+this.yyleng-t]),this.yyleng=this.yytext.length,this},more:function(){return this._more=!0,this},reject:function(){return this.options.backtrack_lexer?(this._backtrack=!0,this):this.parseError("Lexical error on line "+(this.yylineno+1)+". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},less:function(e){this.unput(this.match.slice(e))},pastInput:function(){var e=this.matched.substr(0,this.matched.length-this.match.length);return(e.length>20?"...":"")+e.substr(-20).replace(/\n/g,"")},upcomingInput:function(){var e=this.match;return e.length<20&&(e+=this._input.substr(0,20-e.length)),(e.substr(0,20)+(e.length>20?"...":"")).replace(/\n/g,"")},showPosition:function(){var e=this.pastInput(),t=new Array(e.length+1).join("-");return e+this.upcomingInput()+"\n"+t+"^"},test_match:function(e,t){var n,r,o;if(this.options.backtrack_lexer&&(o={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done},this.options.ranges&&(o.yylloc.range=this.yylloc.range.slice(0))),(r=e[0].match(/(?:\r\n?|\n).*/g))&&(this.yylineno+=r.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:r?r[r.length-1].length-r[r.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+e[0].length},this.yytext+=e[0],this.match+=e[0],this.matches=e,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._backtrack=!1,this._input=this._input.slice(e[0].length),this.matched+=e[0],n=this.performAction.call(this,this.yy,this,t,this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),n)return n;if(this._backtrack){for(var a in o)this[a]=o[a];return!1}return!1},next:function(){if(this.done)return this.EOF;var e,t,n,r;this._input||(this.done=!0),this._more||(this.yytext="",this.match="");for(var o=this._currentRules(),a=0;a<o.length;a++)if((n=this._input.match(this.rules[o[a]]))&&(!t||n[0].length>t[0].length)){if(t=n,r=a,this.options.backtrack_lexer){if(!1!==(e=this.test_match(n,o[a])))return e;if(this._backtrack){t=!1;continue}return!1}if(!this.options.flex)break}return t?!1!==(e=this.test_match(t,o[r]))&&e:""===this._input?this.EOF:this.parseError("Lexical error on line "+(this.yylineno+1)+". Unrecognized text.\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},lex:function(){return this.next()||this.lex()},begin:function(e){this.conditionStack.push(e)},popState:function(){return this.conditionStack.length-1>0?this.conditionStack.pop():this.conditionStack[0]},_currentRules:function(){return this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]?this.conditions[this.conditionStack[this.conditionStack.length-1]].rules:this.conditions.INITIAL.rules},topState:function(e){return(e=this.conditionStack.length-1-Math.abs(e||0))>=0?this.conditionStack[e]:"INITIAL"},pushState:function(e){this.begin(e)},stateStackSize:function(){return this.conditionStack.length},options:{},performAction:function(e,t,n,r){switch(n){case 0:return 4;case 1:return 14;case 2:return 12;case 3:return 15;case 4:return 16;case 5:return 22;case 6:return 24;case 7:return 28;case 8:return 30;case 9:return 18;case 10:return t.yytext=t.yytext.substr(1,t.yyleng-2),32;case 11:return t.yytext=t.yytext.substr(1,t.yyleng-2),33;case 12:return 17;case 13:return 31}},rules:[/^(?:\$)/,/^(?:\.\.)/,/^(?:\.)/,/^(?:\*)/,/^(?:[a-zA-Z_]+[a-zA-Z0-9_]*)/,/^(?:\[)/,/^(?:\])/,/^(?:,)/,/^(?:((-?(?:0|[1-9][0-9]*)))?\:((-?(?:0|[1-9][0-9]*)))?(\:((-?(?:0|[1-9][0-9]*)))?)?)/,/^(?:(-?(?:0|[1-9][0-9]*)))/,/^(?:"(?:\\["bfnrt/\\]|\\u[a-fA-F0-9]{4}|[^"\\])*")/,/^(?:'(?:\\['bfnrt/\\]|\\u[a-fA-F0-9]{4}|[^'\\])*')/,/^(?:\(.+?\)(?=\]))/,/^(?:\?\(.+?\)(?=\]))/],conditions:{INITIAL:{rules:[0,1,2,3,4,5,6,7,8,9,10,11,12,13],inclusive:!0}}};function r(){this.yy={}}return e.lexer=n,r.prototype=e,e.Parser=r,new r}();void 0!==e&&void 0!==n&&(n.parser=o,n.Parser=o.Parser,n.parse=function(){return o.parse.apply(o,arguments)},n.main=function(t){t[1]||(console.log("Usage: "+t[0]+" FILE"),r.exit(1));var o=e("fs").readFileSync(e("path").normalize(t[1]),"utf8");return n.parser.parse(o)},void 0!==t&&e.main===t&&n.main(r.argv.slice(1)))}).call(this,e("_process"))},{_process:14,fs:12,path:13}],2:[function(e,t,n){t.exports={identifier:"[a-zA-Z_]+[a-zA-Z0-9_]*",integer:"-?(?:0|[1-9][0-9]*)",qq_string:'"(?:\\\\["bfnrt/\\\\]|\\\\u[a-fA-F0-9]{4}|[^"\\\\])*"',q_string:"'(?:\\\\['bfnrt/\\\\]|\\\\u[a-fA-F0-9]{4}|[^'\\\\])*'"}},{}],3:[function(e,t,n){var r=e("./dict"),o=e("fs"),a={lex:{macros:{esc:"\\\\",int:r.integer},rules:[["\\$","return 'DOLLAR'"],["\\.\\.","return 'DOT_DOT'"],["\\.","return 'DOT'"],["\\*","return 'STAR'"],[r.identifier,"return 'IDENTIFIER'"],["\\[","return '['"],["\\]","return ']'"],[",","return ','"],["({int})?\\:({int})?(\\:({int})?)?","return 'ARRAY_SLICE'"],["{int}","return 'INTEGER'"],[r.qq_string,"yytext = yytext.substr(1,yyleng-2); return 'QQ_STRING';"],[r.q_string,"yytext = yytext.substr(1,yyleng-2); return 'Q_STRING';"],["\\(.+?\\)(?=\\])","return 'SCRIPT_EXPRESSION'"],["\\?\\(.+?\\)(?=\\])","return 'FILTER_EXPRESSION'"]]},start:"JSON_PATH",bnf:{JSON_PATH:[["DOLLAR",'yy.ast.set({ expression: { type: "root", value: $1 } }); yy.ast.unshift(); return yy.ast.yield()'],["DOLLAR PATH_COMPONENTS",'yy.ast.set({ expression: { type: "root", value: $1 } }); yy.ast.unshift(); return yy.ast.yield()'],["LEADING_CHILD_MEMBER_EXPRESSION","yy.ast.unshift(); return yy.ast.yield()"],["LEADING_CHILD_MEMBER_EXPRESSION PATH_COMPONENTS",'yy.ast.set({ operation: "member", scope: "child", expression: { type: "identifier", value: $1 }}); yy.ast.unshift(); return yy.ast.yield()']],PATH_COMPONENTS:[["PATH_COMPONENT",""],["PATH_COMPONENTS PATH_COMPONENT",""]],PATH_COMPONENT:[["MEMBER_COMPONENT",'yy.ast.set({ operation: "member" }); yy.ast.push()'],["SUBSCRIPT_COMPONENT",'yy.ast.set({ operation: "subscript" }); yy.ast.push() ']],MEMBER_COMPONENT:[["CHILD_MEMBER_COMPONENT",'yy.ast.set({ scope: "child" })'],["DESCENDANT_MEMBER_COMPONENT",'yy.ast.set({ scope: "descendant" })']],CHILD_MEMBER_COMPONENT:[["DOT MEMBER_EXPRESSION",""]],LEADING_CHILD_MEMBER_EXPRESSION:[["MEMBER_EXPRESSION",'yy.ast.set({ scope: "child", operation: "member" })']],DESCENDANT_MEMBER_COMPONENT:[["DOT_DOT MEMBER_EXPRESSION",""]],MEMBER_EXPRESSION:[["STAR",'yy.ast.set({ expression: { type: "wildcard", value: $1 } })'],["IDENTIFIER",'yy.ast.set({ expression: { type: "identifier", value: $1 } })'],["SCRIPT_EXPRESSION",'yy.ast.set({ expression: { type: "script_expression", value: $1 } })'],["INTEGER",'yy.ast.set({ expression: { type: "numeric_literal", value: parseInt($1) } })'],["END",""]],SUBSCRIPT_COMPONENT:[["CHILD_SUBSCRIPT_COMPONENT",'yy.ast.set({ scope: "child" })'],["DESCENDANT_SUBSCRIPT_COMPONENT",'yy.ast.set({ scope: "descendant" })']],CHILD_SUBSCRIPT_COMPONENT:[["[ SUBSCRIPT ]",""]],DESCENDANT_SUBSCRIPT_COMPONENT:[["DOT_DOT [ SUBSCRIPT ]",""]],SUBSCRIPT:[["SUBSCRIPT_EXPRESSION",""],["SUBSCRIPT_EXPRESSION_LIST",'$1.length > 1? yy.ast.set({ expression: { type: "union", value: $1 } }) : $$ = $1']],SUBSCRIPT_EXPRESSION_LIST:[["SUBSCRIPT_EXPRESSION_LISTABLE","$$ = [$1]"],["SUBSCRIPT_EXPRESSION_LIST , SUBSCRIPT_EXPRESSION_LISTABLE","$$ = $1.concat($3)"]],SUBSCRIPT_EXPRESSION_LISTABLE:[["INTEGER",'$$ = { expression: { type: "numeric_literal", value: parseInt($1) } }; yy.ast.set($$)'],["STRING_LITERAL",'$$ = { expression: { type: "string_literal", value: $1 } }; yy.ast.set($$)'],["ARRAY_SLICE",'$$ = { expression: { type: "slice", value: $1 } }; yy.ast.set($$)']],SUBSCRIPT_EXPRESSION:[["STAR",'$$ = { expression: { type: "wildcard", value: $1 } }; yy.ast.set($$)'],["SCRIPT_EXPRESSION",'$$ = { expression: { type: "script_expression", value: $1 } }; yy.ast.set($$)'],["FILTER_EXPRESSION",'$$ = { expression: { type: "filter_expression", value: $1 } }; yy.ast.set($$)']],STRING_LITERAL:[["QQ_STRING","$$ = $1"],["Q_STRING","$$ = $1"]]}};o.readFileSync&&(a.moduleInclude=o.readFileSync(e.resolve("../include/module.js")),a.actionInclude=o.readFileSync(e.resolve("../include/action.js"))),t.exports=a},{"./dict":2,fs:12}],4:[function(e,t,n){var r=e("./aesprim"),o=e("./slice"),a=e("static-eval"),i=e("underscore").uniq,s=function(){return this.initialize.apply(this,arguments)};function c(t,n,o){var a=e("./index"),i=h(r.parse(n).body[0].expression,{"@":t.value}),s=o.replace(/\{\{\s*value\s*\}\}/g,i),c=a.nodes(t.value,s);return c.forEach((function(e){e.path=t.path.concat(e.path.slice(1))})),c}function u(e){return Array.isArray(e)}function l(e){return function(t,n,r,o){var a=t.value,i=t.path,s=[],c=function(t,a){var i;u(t)?(t.forEach((function(e,t){s.length>=o||r(t,e,n)&&s.push({path:a.concat(t),value:e})})),t.forEach((function(t,n){s.length>=o||e&&c(t,a.concat(n))}))):(i=t)&&!(i instanceof Array)&&i instanceof Object&&(this.keys(t).forEach((function(e){s.length>=o||r(e,t[e],n)&&s.push({path:a.concat(e),value:t[e]})})),this.keys(t).forEach((function(n){s.length>=o||e&&c(t[n],a.concat(n))})))}.bind(this);return c(a,i),s}}function d(e){return function(t,n,r){return this.descend(n,t.expression.value,e,r)}}function p(e){return function(t,n,r){return this.traverse(n,t.expression.value,e,r)}}function h(){try{return a.apply(this,arguments)}catch(e){}}function f(e){return e=e.filter((function(e){return e})),i(e,(function(e){return e.path.map((function(e){return String(e).replace("-","--")})).join("-")}))}function g(e){var t=String(e);return t.match(/^-?[0-9]+$/)?parseInt(t):null}s.prototype.initialize=function(){this.traverse=l(!0),this.descend=l()},s.prototype.keys=Object.keys,s.prototype.resolve=function(e){var t=[e.operation,e.scope,e.expression.type].join("-"),n=this._fns[t];if(!n)throw new Error("couldn't resolve key: "+t);return n.bind(this)},s.prototype.register=function(e,t){if(!t instanceof Function)throw new Error("handler must be a function");this._fns[e]=t},s.prototype._fns={"member-child-identifier":function(e,t){var n=e.expression.value,r=t.value;if(r instanceof Object&&n in r)return[{value:r[n],path:t.path.concat(n)}]},"member-descendant-identifier":p((function(e,t,n){return e==n})),"subscript-child-numeric_literal":d((function(e,t,n){return e===n})),"member-child-numeric_literal":d((function(e,t,n){return String(e)===String(n)})),"subscript-descendant-numeric_literal":p((function(e,t,n){return e===n})),"member-child-wildcard":d((function(){return!0})),"member-descendant-wildcard":p((function(){return!0})),"subscript-descendant-wildcard":p((function(){return!0})),"subscript-child-wildcard":d((function(){return!0})),"subscript-child-slice":function(e,t){if(u(t.value)){var n=e.expression.value.split(":").map(g),r=t.value.map((function(e,n){return{value:e,path:t.path.concat(n)}}));return o.apply(null,[r].concat(n))}},"subscript-child-union":function(e,t){var n=[];return e.expression.value.forEach((function(e){var r={operation:"subscript",scope:"child",expression:e.expression},o=this.resolve(r)(r,t);o&&(n=n.concat(o))}),this),f(n)},"subscript-descendant-union":function(t,n,r){var o=e(".."),a=this,i=[];return o.nodes(n,"$..*").slice(1).forEach((function(e){i.length>=r||t.expression.value.forEach((function(t){var n={operation:"subscript",scope:"child",expression:t.expression},r=a.resolve(n)(n,e);i=i.concat(r)}))})),f(i)},"subscript-child-filter_expression":function(e,t,n){var o=e.expression.value.slice(2,-1),a=r.parse(o).body[0].expression;return this.descend(t,null,(function(e,t){return h(a,{"@":t})}),n)},"subscript-descendant-filter_expression":function(e,t,n){var o=e.expression.value.slice(2,-1),a=r.parse(o).body[0].expression;return this.traverse(t,null,(function(e,t){return h(a,{"@":t})}),n)},"subscript-child-script_expression":function(e,t){return c(t,e.expression.value.slice(1,-1),"$[{{value}}]")},"member-child-script_expression":function(e,t){return c(t,e.expression.value.slice(1,-1),"$.{{value}}")},"member-descendant-script_expression":function(e,t){return c(t,e.expression.value.slice(1,-1),"$..value")}},s.prototype._fns["subscript-child-string_literal"]=s.prototype._fns["member-child-identifier"],s.prototype._fns["member-descendant-numeric_literal"]=s.prototype._fns["subscript-descendant-string_literal"]=s.prototype._fns["member-descendant-identifier"],t.exports=s},{"..":"jsonpath","./aesprim":"./aesprim","./index":5,"./slice":7,"static-eval":15,underscore:12}],5:[function(e,t,n){var r=e("assert"),o=e("./dict"),a=e("./parser"),i=e("./handlers"),s=function(){this.initialize.apply(this,arguments)};function c(e){return"[object String]"==Object.prototype.toString.call(e)}s.prototype.initialize=function(){this.parser=new a,this.handlers=new i},s.prototype.parse=function(e){return r.ok(c(e),"we need a path"),this.parser.parse(e)},s.prototype.parent=function(e,t){r.ok(e instanceof Object,"obj needs to be an object"),r.ok(t,"we need a path");var n=this.nodes(e,t)[0];return n.path.pop(),this.value(e,n.path)},s.prototype.apply=function(e,t,n){r.ok(e instanceof Object,"obj needs to be an object"),r.ok(t,"we need a path"),r.equal(typeof n,"function","fn needs to be function");var o=this.nodes(e,t).sort((function(e,t){return t.path.length-e.path.length}));return o.forEach((function(t){var r=t.path.pop(),o=this.value(e,this.stringify(t.path)),a=t.value=n.call(e,o[r]);o[r]=a}),this),o},s.prototype.value=function(e,t,n){if(r.ok(e instanceof Object,"obj needs to be an object"),r.ok(t,"we need a path"),arguments.length>=3){var o=this.nodes(e,t).shift();if(!o)return this._vivify(e,t,n);var a=o.path.slice(-1).shift();this.parent(e,this.stringify(o.path))[a]=n}return this.query(e,this.stringify(t),1).shift()},s.prototype._vivify=function(e,t,n){var o=this;r.ok(e instanceof Object,"obj needs to be an object"),r.ok(t,"we need a path");var a=this.parser.parse(t).map((function(e){return e.expression.value})),i=function(t,n){var r=t.pop(),a=o.value(e,t);a||(i(t.concat(),"string"==typeof r?{}:[]),a=o.value(e,t)),a[r]=n};return i(a,n),this.query(e,t)[0]},s.prototype.query=function(e,t,n){return r.ok(e instanceof Object,"obj needs to be an object"),r.ok(c(t),"we need a path"),this.nodes(e,t,n).map((function(e){return e.value}))},s.prototype.paths=function(e,t,n){return r.ok(e instanceof Object,"obj needs to be an object"),r.ok(t,"we need a path"),this.nodes(e,t,n).map((function(e){return e.path}))},s.prototype.nodes=function(e,t,n){if(r.ok(e instanceof Object,"obj needs to be an object"),r.ok(t,"we need a path"),0===n)return[];var o=this.parser.parse(t),a=this.handlers,i=[{path:["$"],value:e}],s=[];return o.length&&"root"==o[0].expression.type&&o.shift(),o.length?(o.forEach((function(e,t){if(!(s.length>=n)){var r=a.resolve(e),c=[];i.forEach((function(a){if(!(s.length>=n)){var i=r(e,a,n);t==o.length-1?s=s.concat(i||[]):c=c.concat(i||[])}})),i=c}})),n?s.slice(0,n):s):i},s.prototype.stringify=function(e){r.ok(e,"we need a path");var t="$",n={"descendant-member":"..{{value}}","child-member":".{{value}}","descendant-subscript":"..[{{value}}]","child-subscript":"[{{value}}]"};return(e=this._normalize(e)).forEach((function(e){if("root"!=e.expression.type){var r,o=[e.scope,e.operation].join("-"),a=n[o];if(r="string_literal"==e.expression.type?JSON.stringify(e.expression.value):e.expression.value,!a)throw new Error("couldn't find template "+o);t+=a.replace(/{{value}}/,r)}})),t},s.prototype._normalize=function(e){if(r.ok(e,"we need a path"),"string"==typeof e)return this.parser.parse(e);if(Array.isArray(e)&&"string"==typeof e[0]){var t=[{expression:{type:"root",value:"$"}}];return e.forEach((function(e,n){if("$"!=e||0!==n)if("string"==typeof e&&e.match("^"+o.identifier+"$"))t.push({operation:"member",scope:"child",expression:{value:e,type:"identifier"}});else{var r="number"==typeof e?"numeric_literal":"string_literal";t.push({operation:"subscript",scope:"child",expression:{value:e,type:r}})}})),t}if(Array.isArray(e)&&"object"==typeof e[0])return e;throw new Error("couldn't understand path "+e)},s.Handlers=i,s.Parser=a;var u=new s;u.JSONPath=s,t.exports=u},{"./dict":2,"./handlers":4,"./parser":6,assert:8}],6:[function(e,t,n){var r=e("./grammar"),o=e("../generated/parser"),a=function(){var e=new o.Parser,t=e.parseError;return e.yy.parseError=function(){e.yy.ast&&e.yy.ast.initialize(),t.apply(e,arguments)},e};a.grammar=r,t.exports=a},{"../generated/parser":1,"./grammar":3}],7:[function(e,t,n){function r(e){return String(e).match(/^[0-9]+$/)?parseInt(e):Number.isFinite(e)?parseInt(e,10):0}t.exports=function(e,t,n,o){if("string"==typeof t)throw new Error("start cannot be a string");if("string"==typeof n)throw new Error("end cannot be a string");if("string"==typeof o)throw new Error("step cannot be a string");var a=e.length;if(0===o)throw new Error("step cannot be zero");if(o=o?r(o):1,n=n<0?a+n:n,t=r(0===(t=t<0?a+t:t)?0:t||(o>0?0:a-1)),n=r(0===n?0:n||(o>0?a:-1)),t=o>0?Math.max(0,t):Math.min(a,t),n=o>0?Math.min(n,a):Math.max(-1,n),o>0&&n<=t)return[];if(o<0&&t<=n)return[];for(var i=[],s=t;s!=n&&!(o<0&&s<=n||o>0&&s>=n);s+=o)i.push(e[s]);return i}},{}],8:[function(e,t,n){var r=e("util/"),o=Array.prototype.slice,a=Object.prototype.hasOwnProperty,i=t.exports=l;function s(e,t){return r.isUndefined(t)?""+t:r.isNumber(t)&&!isFinite(t)||r.isFunction(t)||r.isRegExp(t)?t.toString():t}function c(e,t){return r.isString(e)?e.length<t?e:e.slice(0,t):e}function u(e,t,n,r,o){throw new i.AssertionError({message:n,actual:e,expected:t,operator:r,stackStartFunction:o})}function l(e,t){e||u(e,!0,t,"==",i.ok)}function d(e,t){if(e===t)return!0;if(r.isBuffer(e)&&r.isBuffer(t)){if(e.length!=t.length)return!1;for(var n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}return r.isDate(e)&&r.isDate(t)?e.getTime()===t.getTime():r.isRegExp(e)&&r.isRegExp(t)?e.source===t.source&&e.global===t.global&&e.multiline===t.multiline&&e.lastIndex===t.lastIndex&&e.ignoreCase===t.ignoreCase:r.isObject(e)||r.isObject(t)?function(e,t){if(r.isNullOrUndefined(e)||r.isNullOrUndefined(t))return!1;if(e.prototype!==t.prototype)return!1;if(r.isPrimitive(e)||r.isPrimitive(t))return e===t;var n=p(e),a=p(t);if(n&&!a||!n&&a)return!1;if(n)return d(e=o.call(e),t=o.call(t));var i,s,c=g(e),u=g(t);if(c.length!=u.length)return!1;for(c.sort(),u.sort(),s=c.length-1;s>=0;s--)if(c[s]!=u[s])return!1;for(s=c.length-1;s>=0;s--)if(!d(e[i=c[s]],t[i]))return!1;return!0}(e,t):e==t}function p(e){return"[object Arguments]"==Object.prototype.toString.call(e)}function h(e,t){return!(!e||!t)&&("[object RegExp]"==Object.prototype.toString.call(t)?t.test(e):e instanceof t||!0===t.call({},e))}function f(e,t,n,o){var a;r.isString(n)&&(o=n,n=null);try{t()}catch(e){a=e}if(o=(n&&n.name?" ("+n.name+").":".")+(o?" "+o:"."),e&&!a&&u(a,n,"Missing expected exception"+o),!e&&h(a,n)&&u(a,n,"Got unwanted exception"+o),e&&a&&n&&!h(a,n)||!e&&a)throw a}i.AssertionError=function(e){this.name="AssertionError",this.actual=e.actual,this.expected=e.expected,this.operator=e.operator,e.message?(this.message=e.message,this.generatedMessage=!1):(this.message=function(e){return c(JSON.stringify(e.actual,s),128)+" "+e.operator+" "+c(JSON.stringify(e.expected,s),128)}(this),this.generatedMessage=!0);var t=e.stackStartFunction||u;if(Error.captureStackTrace)Error.captureStackTrace(this,t);else{var n=new Error;if(n.stack){var r=n.stack,o=t.name,a=r.indexOf("\n"+o);if(a>=0){var i=r.indexOf("\n",a+1);r=r.substring(i+1)}this.stack=r}}},r.inherits(i.AssertionError,Error),i.fail=u,i.ok=l,i.equal=function(e,t,n){e!=t&&u(e,t,n,"==",i.equal)},i.notEqual=function(e,t,n){e==t&&u(e,t,n,"!=",i.notEqual)},i.deepEqual=function(e,t,n){d(e,t)||u(e,t,n,"deepEqual",i.deepEqual)},i.notDeepEqual=function(e,t,n){d(e,t)&&u(e,t,n,"notDeepEqual",i.notDeepEqual)},i.strictEqual=function(e,t,n){e!==t&&u(e,t,n,"===",i.strictEqual)},i.notStrictEqual=function(e,t,n){e===t&&u(e,t,n,"!==",i.notStrictEqual)},i.throws=function(e,t,n){f.apply(this,[!0].concat(o.call(arguments)))},i.doesNotThrow=function(e,t){f.apply(this,[!1].concat(o.call(arguments)))},i.ifError=function(e){if(e)throw e};var g=Object.keys||function(e){var t=[];for(var n in e)a.call(e,n)&&t.push(n);return t}},{"util/":11}],9:[function(e,t,n){"function"==typeof Object.create?t.exports=function(e,t){e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}})}:t.exports=function(e,t){e.super_=t;var n=function(){};n.prototype=t.prototype,e.prototype=new n,e.prototype.constructor=e}},{}],10:[function(e,t,n){t.exports=function(e){return e&&"object"==typeof e&&"function"==typeof e.copy&&"function"==typeof e.fill&&"function"==typeof e.readUInt8}},{}],11:[function(e,t,r){(function(t,n){var o=/%[sdj%]/g;r.format=function(e){if(!v(e)){for(var t=[],n=0;n<arguments.length;n++)t.push(s(arguments[n]));return t.join(" ")}n=1;for(var r=arguments,a=r.length,i=String(e).replace(o,(function(e){if("%%"===e)return"%";if(n>=a)return e;switch(e){case"%s":return String(r[n++]);case"%d":return Number(r[n++]);case"%j":try{return JSON.stringify(r[n++])}catch(e){return"[Circular]"}default:return e}})),c=r[n];n<a;c=r[++n])g(c)||!w(c)?i+=" "+c:i+=" "+s(c);return i},r.deprecate=function(e,o){if(y(n.process))return function(){return r.deprecate(e,o).apply(this,arguments)};if(!0===t.noDeprecation)return e;var a=!1;return function(){if(!a){if(t.throwDeprecation)throw new Error(o);t.traceDeprecation?console.trace(o):console.error(o),a=!0}return e.apply(this,arguments)}};var a,i={};function s(e,t){var n={seen:[],stylize:u};return arguments.length>=3&&(n.depth=arguments[2]),arguments.length>=4&&(n.colors=arguments[3]),f(t)?n.showHidden=t:t&&r._extend(n,t),y(n.showHidden)&&(n.showHidden=!1),y(n.depth)&&(n.depth=2),y(n.colors)&&(n.colors=!1),y(n.customInspect)&&(n.customInspect=!0),n.colors&&(n.stylize=c),l(n,e,n.depth)}function c(e,t){var n=s.styles[t];return n?"["+s.colors[n][0]+"m"+e+"["+s.colors[n][1]+"m":e}function u(e,t){return e}function l(e,t,n){if(e.customInspect&&t&&k(t.inspect)&&t.inspect!==r.inspect&&(!t.constructor||t.constructor.prototype!==t)){var o=t.inspect(n,e);return v(o)||(o=l(e,o,n)),o}var a=function(e,t){if(y(t))return e.stylize("undefined","undefined");if(v(t)){var n="'"+JSON.stringify(t).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return e.stylize(n,"string")}return m(t)?e.stylize(""+t,"number"):f(t)?e.stylize(""+t,"boolean"):g(t)?e.stylize("null","null"):void 0}(e,t);if(a)return a;var i=Object.keys(t),s=function(e){var t={};return e.forEach((function(e,n){t[e]=!0})),t}(i);if(e.showHidden&&(i=Object.getOwnPropertyNames(t)),x(t)&&(i.indexOf("message")>=0||i.indexOf("description")>=0))return d(t);if(0===i.length){if(k(t)){var c=t.name?": "+t.name:"";return e.stylize("[Function"+c+"]","special")}if(b(t))return e.stylize(RegExp.prototype.toString.call(t),"regexp");if(_(t))return e.stylize(Date.prototype.toString.call(t),"date");if(x(t))return d(t)}var u,w="",P=!1,S=["{","}"];return h(t)&&(P=!0,S=["[","]"]),k(t)&&(w=" [Function"+(t.name?": "+t.name:"")+"]"),b(t)&&(w=" "+RegExp.prototype.toString.call(t)),_(t)&&(w=" "+Date.prototype.toUTCString.call(t)),x(t)&&(w=" "+d(t)),0!==i.length||P&&0!=t.length?n<0?b(t)?e.stylize(RegExp.prototype.toString.call(t),"regexp"):e.stylize("[Object]","special"):(e.seen.push(t),u=P?function(e,t,n,r,o){for(var a=[],i=0,s=t.length;i<s;++i)E(t,String(i))?a.push(p(e,t,n,r,String(i),!0)):a.push("");return o.forEach((function(o){o.match(/^\d+$/)||a.push(p(e,t,n,r,o,!0))})),a}(e,t,n,s,i):i.map((function(r){return p(e,t,n,s,r,P)})),e.seen.pop(),function(e,t,n){return e.reduce((function(e,t){return t.indexOf("\n"),e+t.replace(/\u001b\[\d\d?m/g,"").length+1}),0)>60?n[0]+(""===t?"":t+"\n ")+" "+e.join(",\n  ")+" "+n[1]:n[0]+t+" "+e.join(", ")+" "+n[1]}(u,w,S)):S[0]+w+S[1]}function d(e){return"["+Error.prototype.toString.call(e)+"]"}function p(e,t,n,r,o,a){var i,s,c;if((c=Object.getOwnPropertyDescriptor(t,o)||{value:t[o]}).get?s=c.set?e.stylize("[Getter/Setter]","special"):e.stylize("[Getter]","special"):c.set&&(s=e.stylize("[Setter]","special")),E(r,o)||(i="["+o+"]"),s||(e.seen.indexOf(c.value)<0?(s=g(n)?l(e,c.value,null):l(e,c.value,n-1)).indexOf("\n")>-1&&(s=a?s.split("\n").map((function(e){return"  "+e})).join("\n").substr(2):"\n"+s.split("\n").map((function(e){return"   "+e})).join("\n")):s=e.stylize("[Circular]","special")),y(i)){if(a&&o.match(/^\d+$/))return s;(i=JSON.stringify(""+o)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(i=i.substr(1,i.length-2),i=e.stylize(i,"name")):(i=i.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),i=e.stylize(i,"string"))}return i+": "+s}function h(e){return Array.isArray(e)}function f(e){return"boolean"==typeof e}function g(e){return null===e}function m(e){return"number"==typeof e}function v(e){return"string"==typeof e}function y(e){return void 0===e}function b(e){return w(e)&&"[object RegExp]"===P(e)}function w(e){return"object"==typeof e&&null!==e}function _(e){return w(e)&&"[object Date]"===P(e)}function x(e){return w(e)&&("[object Error]"===P(e)||e instanceof Error)}function k(e){return"function"==typeof e}function P(e){return Object.prototype.toString.call(e)}function S(e){return e<10?"0"+e.toString(10):e.toString(10)}r.debuglog=function(e){if(y(a)&&(a=t.env.NODE_DEBUG||""),e=e.toUpperCase(),!i[e])if(new RegExp("\\b"+e+"\\b","i").test(a)){var n=t.pid;i[e]=function(){var t=r.format.apply(r,arguments);console.error("%s %d: %s",e,n,t)}}else i[e]=function(){};return i[e]},r.inspect=s,s.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},s.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",regexp:"red"},r.isArray=h,r.isBoolean=f,r.isNull=g,r.isNullOrUndefined=function(e){return null==e},r.isNumber=m,r.isString=v,r.isSymbol=function(e){return"symbol"==typeof e},r.isUndefined=y,r.isRegExp=b,r.isObject=w,r.isDate=_,r.isError=x,r.isFunction=k,r.isPrimitive=function(e){return null===e||"boolean"==typeof e||"number"==typeof e||"string"==typeof e||"symbol"==typeof e||void 0===e},r.isBuffer=e("./support/isBuffer");var C=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];function D(){var e=new Date,t=[S(e.getHours()),S(e.getMinutes()),S(e.getSeconds())].join(":");return[e.getDate(),C[e.getMonth()],t].join(" ")}function E(e,t){return Object.prototype.hasOwnProperty.call(e,t)}r.log=function(){console.log("%s - %s",D(),r.format.apply(r,arguments))},r.inherits=e("inherits"),r._extend=function(e,t){if(!t||!w(t))return e;for(var n=Object.keys(t),r=n.length;r--;)e[n[r]]=t[n[r]];return e}}).call(this,e("_process"),void 0!==n.g?n.g:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./support/isBuffer":10,_process:14,inherits:9}],12:[function(e,t,n){},{}],13:[function(e,t,n){(function(e){function t(e,t){for(var n=0,r=e.length-1;r>=0;r--){var o=e[r];"."===o?e.splice(r,1):".."===o?(e.splice(r,1),n++):n&&(e.splice(r,1),n--)}if(t)for(;n--;n)e.unshift("..");return e}function r(e,t){if(e.filter)return e.filter(t);for(var n=[],r=0;r<e.length;r++)t(e[r],r,e)&&n.push(e[r]);return n}n.resolve=function(){for(var n="",o=!1,a=arguments.length-1;a>=-1&&!o;a--){var i=a>=0?arguments[a]:e.cwd();if("string"!=typeof i)throw new TypeError("Arguments to path.resolve must be strings");i&&(n=i+"/"+n,o="/"===i.charAt(0))}return(o?"/":"")+(n=t(r(n.split("/"),(function(e){return!!e})),!o).join("/"))||"."},n.normalize=function(e){var a=n.isAbsolute(e),i="/"===o(e,-1);return(e=t(r(e.split("/"),(function(e){return!!e})),!a).join("/"))||a||(e="."),e&&i&&(e+="/"),(a?"/":"")+e},n.isAbsolute=function(e){return"/"===e.charAt(0)},n.join=function(){var e=Array.prototype.slice.call(arguments,0);return n.normalize(r(e,(function(e,t){if("string"!=typeof e)throw new TypeError("Arguments to path.join must be strings");return e})).join("/"))},n.relative=function(e,t){function r(e){for(var t=0;t<e.length&&""===e[t];t++);for(var n=e.length-1;n>=0&&""===e[n];n--);return t>n?[]:e.slice(t,n-t+1)}e=n.resolve(e).substr(1),t=n.resolve(t).substr(1);for(var o=r(e.split("/")),a=r(t.split("/")),i=Math.min(o.length,a.length),s=i,c=0;c<i;c++)if(o[c]!==a[c]){s=c;break}var u=[];for(c=s;c<o.length;c++)u.push("..");return(u=u.concat(a.slice(s))).join("/")},n.sep="/",n.delimiter=":",n.dirname=function(e){if("string"!=typeof e&&(e+=""),0===e.length)return".";for(var t=e.charCodeAt(0),n=47===t,r=-1,o=!0,a=e.length-1;a>=1;--a)if(47===(t=e.charCodeAt(a))){if(!o){r=a;break}}else o=!1;return-1===r?n?"/":".":n&&1===r?"/":e.slice(0,r)},n.basename=function(e,t){var n=function(e){"string"!=typeof e&&(e+="");var t,n=0,r=-1,o=!0;for(t=e.length-1;t>=0;--t)if(47===e.charCodeAt(t)){if(!o){n=t+1;break}}else-1===r&&(o=!1,r=t+1);return-1===r?"":e.slice(n,r)}(e);return t&&n.substr(-1*t.length)===t&&(n=n.substr(0,n.length-t.length)),n},n.extname=function(e){"string"!=typeof e&&(e+="");for(var t=-1,n=0,r=-1,o=!0,a=0,i=e.length-1;i>=0;--i){var s=e.charCodeAt(i);if(47!==s)-1===r&&(o=!1,r=i+1),46===s?-1===t?t=i:1!==a&&(a=1):-1!==t&&(a=-1);else if(!o){n=i+1;break}}return-1===t||-1===r||0===a||1===a&&t===r-1&&t===n+1?"":e.slice(t,r)};var o=function(e,t,n){return e.substr(t,n)}}).call(this,e("_process"))},{_process:14}],14:[function(e,t,n){var r,o,a=t.exports={};function i(){throw new Error("setTimeout has not been defined")}function s(){throw new Error("clearTimeout has not been defined")}function c(e){if(r===setTimeout)return setTimeout(e,0);if((r===i||!r)&&setTimeout)return r=setTimeout,setTimeout(e,0);try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}!function(){try{r="function"==typeof setTimeout?setTimeout:i}catch(e){r=i}try{o="function"==typeof clearTimeout?clearTimeout:s}catch(e){o=s}}();var u,l=[],d=!1,p=-1;function h(){d&&u&&(d=!1,u.length?l=u.concat(l):p=-1,l.length&&f())}function f(){if(!d){var e=c(h);d=!0;for(var t=l.length;t;){for(u=l,l=[];++p<t;)u&&u[p].run();p=-1,t=l.length}u=null,d=!1,function(e){if(o===clearTimeout)return clearTimeout(e);if((o===s||!o)&&clearTimeout)return o=clearTimeout,clearTimeout(e);try{o(e)}catch(t){try{return o.call(null,e)}catch(t){return o.call(this,e)}}}(e)}}function g(e,t){this.fun=e,this.array=t}function m(){}a.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];l.push(new g(e,t)),1!==l.length||d||c(f)},g.prototype.run=function(){this.fun.apply(null,this.array)},a.title="browser",a.browser=!0,a.env={},a.argv=[],a.version="",a.versions={},a.on=m,a.addListener=m,a.once=m,a.off=m,a.removeListener=m,a.removeAllListeners=m,a.emit=m,a.prependListener=m,a.prependOnceListener=m,a.listeners=function(e){return[]},a.binding=function(e){throw new Error("process.binding is not supported")},a.cwd=function(){return"/"},a.chdir=function(e){throw new Error("process.chdir is not supported")},a.umask=function(){return 0}},{}],15:[function(e,t,n){var r=e("escodegen").generate;t.exports=function(e,t){t||(t={});var n={},o=function e(o,a){if("Literal"===o.type)return o.value;if("UnaryExpression"===o.type){var i=e(o.argument);return"+"===o.operator?+i:"-"===o.operator?-i:"~"===o.operator?~i:"!"===o.operator?!i:n}if("ArrayExpression"===o.type){for(var s=[],c=0,u=o.elements.length;c<u;c++){if((v=e(o.elements[c]))===n)return n;s.push(v)}return s}if("ObjectExpression"===o.type){var l={};for(c=0;c<o.properties.length;c++){var d=null===(y=o.properties[c]).value?y.value:e(y.value);if(d===n)return n;l[y.key.value||y.key.name]=d}return l}if("BinaryExpression"===o.type||"LogicalExpression"===o.type){if((u=e(o.left))===n)return n;var p=e(o.right);if(p===n)return n;var h=o.operator;return"=="===h?u==p:"==="===h?u===p:"!="===h?u!=p:"!=="===h?u!==p:"+"===h?u+p:"-"===h?u-p:"*"===h?u*p:"/"===h?u/p:"%"===h?u%p:"<"===h?u<p:"<="===h?u<=p:">"===h?u>p:">="===h?u>=p:"|"===h?u|p:"&"===h?u&p:"^"===h?u^p:"&&"===h?u&&p:"||"===h?u||p:n}if("Identifier"===o.type)return{}.hasOwnProperty.call(t,o.name)?t[o.name]:n;if("ThisExpression"===o.type)return{}.hasOwnProperty.call(t,"this")?t.this:n;if("CallExpression"===o.type){var f=e(o.callee);if(f===n)return n;if("function"!=typeof f)return n;var g=o.callee.object?e(o.callee.object):n;g===n&&(g=null);var m=[];for(c=0,u=o.arguments.length;c<u;c++){var v;if((v=e(o.arguments[c]))===n)return n;m.push(v)}return f.apply(g,m)}var y;if("MemberExpression"===o.type)return(l=e(o.object))===n||"function"==typeof l?n:"Identifier"===o.property.type?l[o.property.name]:(y=e(o.property))===n?n:l[y];if("ConditionalExpression"===o.type)return(i=e(o.test))===n?n:e(i?o.consequent:o.alternate);if("ExpressionStatement"===o.type)return(i=e(o.expression))===n?n:i;if("ReturnStatement"===o.type)return e(o.argument);if("FunctionExpression"===o.type){var b=o.body.body,w={};for(Object.keys(t).forEach((function(e){w[e]=t[e]})),c=0;c<o.params.length;c++){var _=o.params[c];if("Identifier"!=_.type)return n;t[_.name]=null}for(var c in b)if(e(b[c])===n)return n;t=w;var x=Object.keys(t),k=x.map((function(e){return t[e]}));return Function(x.join(", "),"return "+r(o)).apply(null,k)}if("TemplateLiteral"===o.type){var P="";for(c=0;c<o.expressions.length;c++)P+=e(o.quasis[c]),P+=e(o.expressions[c]);return P+e(o.quasis[c])}if("TaggedTemplateExpression"===o.type){var S=e(o.tag),C=o.quasi,D=C.quasis.map(e),E=C.expressions.map(e);return S.apply(null,[D].concat(E))}return"TemplateElement"===o.type?o.value.cooked:n}(e);return o===n?void 0:o}},{escodegen:12}],jsonpath:[function(e,t,n){t.exports=e("./lib/index")},{"./lib/index":5}]},{},["jsonpath"])("jsonpath")},91171:(e,t,n)=>{e.exports=p,p.Minimatch=h;var r={sep:"/"};try{r=n(26470)}catch(e){}var o=p.GLOBSTAR=h.GLOBSTAR={},a=n(3644),i={"!":{open:"(?:(?!(?:",close:"))[^/]*?)"},"?":{open:"(?:",close:")?"},"+":{open:"(?:",close:")+"},"*":{open:"(?:",close:")*"},"@":{open:"(?:",close:")"}},s="[^/]",c="[^/]*?",u="().*{}+?[]^$\\!".split("").reduce((function(e,t){return e[t]=!0,e}),{}),l=/\/+/;function d(e,t){e=e||{},t=t||{};var n={};return Object.keys(t).forEach((function(e){n[e]=t[e]})),Object.keys(e).forEach((function(t){n[t]=e[t]})),n}function p(e,t,n){if("string"!=typeof t)throw new TypeError("glob pattern string required");return n||(n={}),!(!n.nocomment&&"#"===t.charAt(0))&&(""===t.trim()?""===e:new h(t,n).match(e))}function h(e,t){if(!(this instanceof h))return new h(e,t);if("string"!=typeof e)throw new TypeError("glob pattern string required");t||(t={}),e=e.trim(),"/"!==r.sep&&(e=e.split(r.sep).join("/")),this.options=t,this.set=[],this.pattern=e,this.regexp=null,this.negate=!1,this.comment=!1,this.empty=!1,this.make()}function f(e,t){if(t||(t=this instanceof h?this.options:{}),void 0===(e=void 0===e?this.pattern:e))throw new TypeError("undefined pattern");return t.nobrace||!e.match(/\{.*\}/)?[e]:a(e)}p.filter=function(e,t){return t=t||{},function(n,r,o){return p(n,e,t)}},p.defaults=function(e){if(!e||!Object.keys(e).length)return p;var t=p,n=function(n,r,o){return t.minimatch(n,r,d(e,o))};return n.Minimatch=function(n,r){return new t.Minimatch(n,d(e,r))},n},h.defaults=function(e){return e&&Object.keys(e).length?p.defaults(e).Minimatch:h},h.prototype.debug=function(){},h.prototype.make=function(){if(!this._made){var e=this.pattern,t=this.options;if(t.nocomment||"#"!==e.charAt(0))if(e){this.parseNegate();var n=this.globSet=this.braceExpand();t.debug&&(this.debug=console.error),this.debug(this.pattern,n),n=this.globParts=n.map((function(e){return e.split(l)})),this.debug(this.pattern,n),n=n.map((function(e,t,n){return e.map(this.parse,this)}),this),this.debug(this.pattern,n),n=n.filter((function(e){return-1===e.indexOf(!1)})),this.debug(this.pattern,n),this.set=n}else this.empty=!0;else this.comment=!0}},h.prototype.parseNegate=function(){var e=this.pattern,t=!1,n=0;if(!this.options.nonegate){for(var r=0,o=e.length;r<o&&"!"===e.charAt(r);r++)t=!t,n++;n&&(this.pattern=e.substr(n)),this.negate=t}},p.braceExpand=function(e,t){return f(e,t)},h.prototype.braceExpand=f,h.prototype.parse=function(e,t){if(e.length>65536)throw new TypeError("pattern is too long");var n=this.options;if(!n.noglobstar&&"**"===e)return o;if(""===e)return"";var r,a="",l=!!n.nocase,d=!1,p=[],h=[],f=!1,m=-1,v=-1,y="."===e.charAt(0)?"":n.dot?"(?!(?:^|\\/)\\.{1,2}(?:$|\\/))":"(?!\\.)",b=this;function w(){if(r){switch(r){case"*":a+=c,l=!0;break;case"?":a+=s,l=!0;break;default:a+="\\"+r}b.debug("clearStateChar %j %j",r,a),r=!1}}for(var _,x=0,k=e.length;x<k&&(_=e.charAt(x));x++)if(this.debug("%s\t%s %s %j",e,x,a,_),d&&u[_])a+="\\"+_,d=!1;else switch(_){case"/":return!1;case"\\":w(),d=!0;continue;case"?":case"*":case"+":case"@":case"!":if(this.debug("%s\t%s %s %j <-- stateChar",e,x,a,_),f){this.debug("  in class"),"!"===_&&x===v+1&&(_="^"),a+=_;continue}b.debug("call clearStateChar %j",r),w(),r=_,n.noext&&w();continue;case"(":if(f){a+="(";continue}if(!r){a+="\\(";continue}p.push({type:r,start:x-1,reStart:a.length,open:i[r].open,close:i[r].close}),a+="!"===r?"(?:(?!(?:":"(?:",this.debug("plType %j %j",r,a),r=!1;continue;case")":if(f||!p.length){a+="\\)";continue}w(),l=!0;var P=p.pop();a+=P.close,"!"===P.type&&h.push(P),P.reEnd=a.length;continue;case"|":if(f||!p.length||d){a+="\\|",d=!1;continue}w(),a+="|";continue;case"[":if(w(),f){a+="\\"+_;continue}f=!0,v=x,m=a.length,a+=_;continue;case"]":if(x===v+1||!f){a+="\\"+_,d=!1;continue}if(f){var S=e.substring(v+1,x);try{RegExp("["+S+"]")}catch(e){var C=this.parse(S,g);a=a.substr(0,m)+"\\["+C[0]+"\\]",l=l||C[1],f=!1;continue}}l=!0,f=!1,a+=_;continue;default:w(),d?d=!1:!u[_]||"^"===_&&f||(a+="\\"),a+=_}for(f&&(S=e.substr(v+1),C=this.parse(S,g),a=a.substr(0,m)+"\\["+C[0],l=l||C[1]),P=p.pop();P;P=p.pop()){var D=a.slice(P.reStart+P.open.length);this.debug("setting tail",a,P),D=D.replace(/((?:\\{2}){0,64})(\\?)\|/g,(function(e,t,n){return n||(n="\\"),t+t+n+"|"})),this.debug("tail=%j\n   %s",D,D,P,a);var E="*"===P.type?c:"?"===P.type?s:"\\"+P.type;l=!0,a=a.slice(0,P.reStart)+E+"\\("+D}w(),d&&(a+="\\\\");var j=!1;switch(a.charAt(0)){case".":case"[":case"(":j=!0}for(var A=h.length-1;A>-1;A--){var I=h[A],O=a.slice(0,I.reStart),q=a.slice(I.reStart,I.reEnd-8),R=a.slice(I.reEnd-8,I.reEnd),T=a.slice(I.reEnd);R+=T;var B=O.split("(").length-1,M=T;for(x=0;x<B;x++)M=M.replace(/\)[+*?]?/,"");var N="";""===(T=M)&&t!==g&&(N="$"),a=O+q+T+N+R}if(""!==a&&l&&(a="(?=.)"+a),j&&(a=y+a),t===g)return[a,l];if(!l)return e.replace(/\\(.)/g,"$1");var L=n.nocase?"i":"";try{var F=new RegExp("^"+a+"$",L)}catch(e){return new RegExp("$.")}return F._glob=e,F._src=a,F};var g={};p.makeRe=function(e,t){return new h(e,t||{}).makeRe()},h.prototype.makeRe=function(){if(this.regexp||!1===this.regexp)return this.regexp;var e=this.set;if(!e.length)return this.regexp=!1,this.regexp;var t=this.options,n=t.noglobstar?c:t.dot?"(?:(?!(?:\\/|^)(?:\\.{1,2})($|\\/)).)*?":"(?:(?!(?:\\/|^)\\.).)*?",r=t.nocase?"i":"",a=e.map((function(e){return e.map((function(e){return e===o?n:"string"==typeof e?e.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&"):e._src})).join("\\/")})).join("|");a="^(?:"+a+")$",this.negate&&(a="^(?!"+a+").*$");try{this.regexp=new RegExp(a,r)}catch(e){this.regexp=!1}return this.regexp},p.match=function(e,t,n){var r=new h(t,n=n||{});return e=e.filter((function(e){return r.match(e)})),r.options.nonull&&!e.length&&e.push(t),e},h.prototype.match=function(e,t){if(this.debug("match",e,this.pattern),this.comment)return!1;if(this.empty)return""===e;if("/"===e&&t)return!0;var n=this.options;"/"!==r.sep&&(e=e.split(r.sep).join("/")),e=e.split(l),this.debug(this.pattern,"split",e);var o,a,i=this.set;for(this.debug(this.pattern,"set",i),a=e.length-1;a>=0&&!(o=e[a]);a--);for(a=0;a<i.length;a++){var s=i[a],c=e;if(n.matchBase&&1===s.length&&(c=[o]),this.matchOne(c,s,t))return!!n.flipNegate||!this.negate}return!n.flipNegate&&this.negate},h.prototype.matchOne=function(e,t,n){var r=this.options;this.debug("matchOne",{this:this,file:e,pattern:t}),this.debug("matchOne",e.length,t.length);for(var a=0,i=0,s=e.length,c=t.length;a<s&&i<c;a++,i++){this.debug("matchOne loop");var u,l=t[i],d=e[a];if(this.debug(t,l,d),!1===l)return!1;if(l===o){this.debug("GLOBSTAR",[t,l,d]);var p=a,h=i+1;if(h===c){for(this.debug("** at the end");a<s;a++)if("."===e[a]||".."===e[a]||!r.dot&&"."===e[a].charAt(0))return!1;return!0}for(;p<s;){var f=e[p];if(this.debug("\nglobstar while",e,p,t,h,f),this.matchOne(e.slice(p),t.slice(h),n))return this.debug("globstar found match!",p,s,f),!0;if("."===f||".."===f||!r.dot&&"."===f.charAt(0)){this.debug("dot detected!",e,p,t,h);break}this.debug("globstar swallow a segment, and continue"),p++}return!(!n||(this.debug("\n>>> no match, partial?",e,p,t,h),p!==s))}if("string"==typeof l?(u=r.nocase?d.toLowerCase()===l.toLowerCase():d===l,this.debug("string match",l,d,u)):(u=d.match(l),this.debug("pattern match",l,d,u)),!u)return!1}if(a===s&&i===c)return!0;if(a===s)return n;if(i===c)return a===s-1&&""===e[a];throw new Error("wtf?")}},81890:(e,t,n)=>{var r=n(26470),o=n(12993),a=parseInt("0777",8);function i(e,t,n,s){"function"==typeof t?(n=t,t={}):t&&"object"==typeof t||(t={mode:t});var c=t.mode,u=t.fs||o;void 0===c&&(c=a),s||(s=null);var l=n||function(){};e=r.resolve(e),u.mkdir(e,c,(function(n){if(!n)return l(null,s=s||e);switch(n.code){case"ENOENT":if(r.dirname(e)===e)return l(n);i(r.dirname(e),t,(function(n,r){n?l(n,r):i(e,t,l,r)}));break;default:u.stat(e,(function(e,t){e||!t.isDirectory()?l(n,s):l(null,s)}))}}))}e.exports=i.mkdirp=i.mkdirP=i,i.sync=function e(t,n,i){n&&"object"==typeof n||(n={mode:n});var s=n.mode,c=n.fs||o;void 0===s&&(s=a),i||(i=null),t=r.resolve(t);try{c.mkdirSync(t,s),i=i||t}catch(o){switch(o.code){case"ENOENT":i=e(r.dirname(t),n,i),e(t,n,i);break;default:var u;try{u=c.statSync(t)}catch(e){throw o}if(!u.isDirectory())throw o}}return i}},57824:e=>{var t=1e3,n=60*t,r=60*n,o=24*r;function a(e,t,n,r){var o=t>=1.5*n;return Math.round(e/n)+" "+r+(o?"s":"")}e.exports=function(e,i){i=i||{};var s,c,u=typeof e;if("string"===u&&e.length>0)return function(e){if(!((e=String(e)).length>100)){var a=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(a){var i=parseFloat(a[1]);switch((a[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return 315576e5*i;case"weeks":case"week":case"w":return 6048e5*i;case"days":case"day":case"d":return i*o;case"hours":case"hour":case"hrs":case"hr":case"h":return i*r;case"minutes":case"minute":case"mins":case"min":case"m":return i*n;case"seconds":case"second":case"secs":case"sec":case"s":return i*t;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return i;default:return}}}}(e);if("number"===u&&isFinite(e))return i.long?(s=e,(c=Math.abs(s))>=o?a(s,c,o,"day"):c>=r?a(s,c,r,"hour"):c>=n?a(s,c,n,"minute"):c>=t?a(s,c,t,"second"):s+" ms"):function(e){var a=Math.abs(e);return a>=o?Math.round(e/o)+"d":a>=r?Math.round(e/r)+"h":a>=n?Math.round(e/n)+"m":a>=t?Math.round(e/t)+"s":e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))}},68639:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component;return e.description="Collect streamed Assemblies from all connected inputs into a single message",e.icon="fast-forward",e.inPorts.add("in",{datatype:"object",addressable:!0}),e.outPorts.add("out",{datatype:"object"}),e.forwardBrackets={},e.process(((e,t)=>{const n=e.attached("in"),r=n.filter((t=>e.hasStream(["in",t])));if(r.length<n.length)return;const o=r.map((t=>e.getStream(["in",t]))),a={errors:[],data:[]};o.forEach((e=>{const t=[];e.forEach((e=>{"data"===e.type&&(e.data.errors&&e.data.errors.length&&(a.errors=a.errors.concat(e.data.errors)),t.push(e.data))})),a.data.push(t)})),t.sendDone({out:a})}))}},31491:(e,t,n)=>{const{default:r,fail:o}=n(16618),a=n(39832);class i extends r{constructor(){super({description:"Compare an object value extracted with a JSONPath expression",icon:"check",inPorts:{in:{datatype:"object",description:"Object to query",required:!0},path:{datatype:"string",description:"JSONPath expression",required:!0,control:!0},comparison:{datatype:"number",description:"Value to compare against",required:!0,control:!0},operator:{datatype:"string",description:"Comparison operator",control:!0,default:"==",values:["==","!=",">","<",">=","<="]}},outPorts:{pass:{datatype:"object",description:"Object that passed the comparison"},fail:{datatype:"object",description:"Object that failed the comparison"}}})}handle(e,t){if(!e.hasData("in","path","comparison","operator"))return;const[n,r,i,s]=e.getData("in","path","comparison","operator");if(!this.validate(n))return void t.sendDone({fail:n});let c;try{c=a.value(n,r)}catch(e){return void t.sendDone({fail:o(n,e)})}let u=!1;switch(s){case"==":u=c==i;break;case"!=":u=c!=i;break;case">":u=c>i;break;case"<":u=c<i;break;case">=":u=c>=i;break;case"<=":u=c<=i;break;default:return void t.done(new Error(`Unknown operator ${s}`))}u?t.sendDone({pass:n}):t.sendDone({fail:n})}}t.getComponent=()=>new i},30618:(e,t,n)=>{const r=n(76445),{fork:o}=n(16618);t.getComponent=()=>{const e=new r.Component;return e.description="Fork assembly message to all connections",e.icon="angle-double-left",e.inPorts.add("in",{datatype:"object"}),e.outPorts.add("out",{datatype:"object",addressable:!0}),e.process(((t,n)=>{if(!t.hasData("in"))return;const a=t.getData("in");e.outPorts.ports.out.listAttached().forEach((e=>{n.send({out:new r.IP("data",o(a),{index:e})})})),n.done()}))}},31460:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component;return e.description="Convert an assembly message to a regular NoFlo packet",e.inPorts.add("in",{datatype:"object"}),e.outPorts.add("out",{datatype:"object"}),e.outPorts.add("error",{datatype:"object"}),e.process(((e,t)=>{if(!e.hasData("in"))return;const n=e.getData("in");n.errors&&n.errors.length?t.done(n.errors[0]):t.sendDone({out:{...n,errors:void 0}})}))}},81086:(e,t,n)=>{const r=n(76445),{merge:o}=n(16618);t.getComponent=()=>{const e=new r.Component;return e.description="Merge assembly message from all connections",e.icon="angle-double-right",e.inPorts.add("in",{datatype:"object",addressable:!0}),e.outPorts.add("out",{datatype:"object"}),e.process(((e,t)=>{const n=e.attached("in"),r=n.filter((t=>e.hasData(["in",t])));if(r.length<n.length)return;const a=r.map((t=>e.getData(["in",t])));let i={},s=[];a.forEach((e=>{e.errors&&e.errors.length&&(s=s.concat(e.errors)),i=o(i,e)})),t.sendDone({out:{...i,errors:s}})}))}},96782:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component;return e.description="Convert regular NoFlo data to an assembly message",e.inPorts.add("in",{datatype:"all"}),e.inPorts.add("error",{datatype:"object"}),e.outPorts.add("out",{datatype:"object"}),e.process(((e,t)=>{if(e.hasData("in")){const n=e.getData("in");t.sendDone({out:{errors:[],data:n}})}else if(e.hasData("error")){const n=e.getData("error");t.sendDone({out:{errors:[n]}})}}))}},16618:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.merge=t.fork=t.Component=t.failed=t.fail=void 0;const r=n(76445),o={def:e=>void 0!==e,set:e=>null!=e,ok:e=>!!e,num:e=>"number"==typeof e,str:e=>"string"==typeof e,obj:e=>"object"==typeof e&&null!==e,func:e=>"function"==typeof e,">0":e=>e>0},a={def:e=>`${e} is undefined`,set:e=>`${e} is not set`,ok:e=>`${e} is false or empty`,num:(e,t)=>`${e} is not a number: ${t}`,str:(e,t)=>`${e} is not a string: ${t}`,obj:(e,t)=>`${e} is not an object: ${t}`,func:(e,t)=>`${e} is not a function: ${t}`,">0":(e,t)=>`${e} is not positive: ${t}`};function i(e,t){if(!Array.isArray(e.errors))throw new Error("Message.errors is not an array");return(Array.isArray(t)?t:[t]).forEach((t=>e.errors.push(t))),e}function s(e){return e.errors&&Array.isArray(e.errors)&&e.errors.length>0}function c(e,t){const n=`${t}Ports`,r=e;if(n in e){if(Array.isArray(e[n])){const t={};e[n].forEach((e=>{t[e]={datatype:"all"}})),r[n]=t}}else{const e="out"===t?"Outgoing":"Incoming";r[n]={[t]:{datatype:"object",description:`${e} message`,required:!0}}}return r}function u(e){if(Array.isArray(e)){const t={};return e.forEach((e=>{t[e]="ok"})),t}return e}t.fail=i,t.failed=s;class l extends r.Component{constructor(e={}){let t=c(e,"in");if(t=c(t,"out"),super(t),this.relay=this.relay||null,e.validates&&(this.validates=u(e.validates)),"function"==typeof this.relay){const e=this.relay.bind(this);this.process(((t,n)=>{if(!t.hasData("in"))return;const r=t.getData("in");this.validate(r)?e(r,n):n.sendDone(r)}))}"function"==typeof this.handle&&this.process(this.handle)}checkFields(e,t){const n=[];function r(e,t,i,s){if(!e||i.length<=0)return;const c=i.shift(),u=0===i.length?s:"obj";o[u](e[c])?i.length>0&&r(e[c],`${t}.${c}`,i,s):n.push(new Error(a[u](`${t}.${c}`,e[c])))}return Object.keys(t).forEach((n=>{const a=n.indexOf(".")>0?n.split("."):[n];let i=t[n];i in o||(i="ok"),r(e,"msg",a,i)})),n}validate(e,t=this.validates){if(s(e))return!1;if(t&&"object"==typeof t){t=u(t);const n=this.checkFields(e,t);if(n.length>0)return i(e,n),!1}return!0}}t.Component=l,t.fork=function(e,t=[],n=[]){const r={errors:n.includes("error")?e.errors.slice(0):e.errors};return Object.keys(e).forEach((o=>{"errors"!==o&&(t.includes(o)||(n.includes(o)?r[o]=JSON.parse(JSON.stringify(e[o])):r[o]=e[o]))})),r},t.merge=function(e,t){const n=e,r=Object.keys(e);return Object.keys(t).forEach((o=>{-1!==r.indexOf(o)&&void 0!==e[o]||void 0===t[o]||(n[o]=t[o])})),n},t.default=l},497:e=>{"use strict";e.exports=JSON.parse('{"properties":{"name":"CopyCanvas","id":"CopyCanvas","environment":{"type":"noflo-browser"}},"inports":{"canvas":{"process":"core/Repeat_wuue3","port":"in","metadata":{"x":0,"y":36}}},"outports":{"canvas_copy":{"process":"Draw","port":"canvas","metadata":{"x":828,"y":72}}},"groups":[{"name":"create","nodes":["CreateCanvas","getHeight","getWidth"],"metadata":{"description":"make new canvas with original dimensions"}},{"name":"copy","nodes":["DrawImage","Draw"],"metadata":{"description":"draw original to new"}}],"processes":{"CreateCanvas":{"component":"canvas/CreateCanvas","metadata":{"label":"CreateCanvas","x":396,"y":252}},"DrawImage":{"component":"canvas/DrawImage","metadata":{"label":"DrawImage","x":576,"y":72}},"Draw":{"component":"canvas/Draw","metadata":{"label":"Draw","x":684,"y":72}},"core/Repeat_wuue3":{"component":"core/Repeat","metadata":{"label":"core/Repeat","x":144,"y":36}},"getHeight":{"component":"dom/GetAttribute","metadata":{"label":"getHeight","x":288,"y":252}},"getWidth":{"component":"dom/GetAttribute","metadata":{"label":"getWidth","x":288,"y":144}}},"connections":[{"src":{"process":"core/Repeat_wuue3","port":"out"},"tgt":{"process":"getWidth","port":"element"},"metadata":{}},{"src":{"process":"core/Repeat_wuue3","port":"out"},"tgt":{"process":"getHeight","port":"element"},"metadata":{"route":0}},{"src":{"process":"getWidth","port":"out"},"tgt":{"process":"CreateCanvas","port":"width"},"metadata":{}},{"src":{"process":"getHeight","port":"out"},"tgt":{"process":"CreateCanvas","port":"height"},"metadata":{}},{"src":{"process":"DrawImage","port":"drawimage"},"tgt":{"process":"Draw","port":"commands"},"metadata":{}},{"src":{"process":"CreateCanvas","port":"canvas"},"tgt":{"process":"Draw","port":"canvas"},"metadata":{}},{"src":{"process":"core/Repeat_wuue3","port":"out"},"tgt":{"process":"DrawImage","port":"image"},"metadata":{"route":0}},{"data":"width","tgt":{"process":"getWidth","port":"attribute"}},{"data":"height","tgt":{"process":"getHeight","port":"attribute"}},{"data":{"x":0,"y":0},"tgt":{"process":"DrawImage","port":"destpoint"}},{"data":true,"tgt":{"process":"Draw","port":"drawevery"}}]}')},67546:e=>{"use strict";e.exports=JSON.parse('{"properties":{"name":"PointFromObject","id":"PointFromObject","environment":{"type":"all","content":""}},"inports":{"in":{"process":"core/Split_2l54n","port":"in","metadata":{"x":36,"y":36}}},"outports":{"point":{"process":"canvas/MakePoint_h7co8","port":"point","metadata":{"x":792,"y":36}}},"groups":[],"processes":{"core/Split_2l54n":{"component":"core/Split","metadata":{"label":"core/Split","x":180,"y":36}},"x":{"component":"objects/ExtractProperty","metadata":{"label":"x","x":324,"y":144}},"y":{"component":"objects/ExtractProperty","metadata":{"label":"y","x":324,"y":36}},"adapters/PacketsToArray_7a90h":{"component":"adapters/PacketsToArray","metadata":{"label":"adapters/PacketsToArray","x":468,"y":144}},"adapters/PacketsToArray_xtzm":{"component":"adapters/PacketsToArray","metadata":{"label":"adapters/PacketsToArray","x":468,"y":36}},"canvas/MakePoint_h7co8":{"component":"canvas/MakePoint","metadata":{"label":"canvas/MakePoint","x":648,"y":36}}},"connections":[{"src":{"process":"x","port":"out"},"tgt":{"process":"adapters/PacketsToArray_7a90h","port":"in"},"metadata":{"route":null}},{"src":{"process":"adapters/PacketsToArray_7a90h","port":"out"},"tgt":{"process":"canvas/MakePoint_h7co8","port":"x"},"metadata":{}},{"src":{"process":"y","port":"out"},"tgt":{"process":"adapters/PacketsToArray_xtzm","port":"in"},"metadata":{"route":null}},{"src":{"process":"adapters/PacketsToArray_xtzm","port":"out"},"tgt":{"process":"canvas/MakePoint_h7co8","port":"y"},"metadata":{}},{"src":{"process":"core/Split_2l54n","port":"out"},"tgt":{"process":"x","port":"in"},"metadata":{}},{"src":{"process":"core/Split_2l54n","port":"out"},"tgt":{"process":"y","port":"in"},"metadata":{"route":0}},{"data":"x","tgt":{"process":"x","port":"key"}},{"data":"y","tgt":{"process":"y","port":"key"}}]}')},77460:e=>{"use strict";e.exports=JSON.parse('{"properties":{"name":"RectangleFromObject","id":"RectangleFromObject","environment":{"type":"all","content":""}},"inports":{"in":{"process":"core/Split_xvdlb","port":"in","metadata":{"x":540,"y":-288}}},"outports":{"rectangle":{"process":"canvas/MakeRectangle_v3sfl","port":"rectangle","metadata":{"x":1296,"y":-252}}},"groups":[],"processes":{"width":{"component":"objects/ExtractProperty","metadata":{"label":"width","x":828,"y":-288}},"adapters/PacketsToArray_smxrx":{"component":"adapters/PacketsToArray","metadata":{"label":"adapters/PacketsToArray","x":972,"y":-288}},"adapters/PacketsToArray_gysu3":{"component":"adapters/PacketsToArray","metadata":{"label":"adapters/PacketsToArray","x":972,"y":-180}},"height":{"component":"objects/ExtractProperty","metadata":{"label":"height","x":828,"y":-180}},"core/Split_xvdlb":{"component":"core/Split","metadata":{"label":"core/Split","x":684,"y":-288}},"canvas/MakeRectangle_v3sfl":{"component":"canvas/MakeRectangle","metadata":{"label":"canvas/MakeRectangle","x":1152,"y":-252}},"canvas/PointFromObject_l1e2e":{"component":"canvas/PointFromObject","metadata":{"label":"canvas/PointFromObject","x":828,"y":-396}}},"connections":[{"src":{"process":"core/Split_xvdlb","port":"out"},"tgt":{"process":"width","port":"in"},"metadata":{"route":0}},{"src":{"process":"core/Split_xvdlb","port":"out"},"tgt":{"process":"height","port":"in"},"metadata":{"route":0}},{"src":{"process":"width","port":"out"},"tgt":{"process":"adapters/PacketsToArray_smxrx","port":"in"},"metadata":{"route":null}},{"src":{"process":"adapters/PacketsToArray_smxrx","port":"out"},"tgt":{"process":"canvas/MakeRectangle_v3sfl","port":"width"},"metadata":{}},{"src":{"process":"height","port":"out"},"tgt":{"process":"adapters/PacketsToArray_gysu3","port":"in"},"metadata":{"route":null}},{"src":{"process":"adapters/PacketsToArray_gysu3","port":"out"},"tgt":{"process":"canvas/MakeRectangle_v3sfl","port":"height"},"metadata":{}},{"src":{"process":"core/Split_xvdlb","port":"out"},"tgt":{"process":"canvas/PointFromObject_l1e2e","port":"in"},"metadata":{"route":0}},{"src":{"process":"canvas/PointFromObject_l1e2e","port":"point"},"tgt":{"process":"canvas/MakeRectangle_v3sfl","port":"point"},"metadata":{}},{"data":"width","tgt":{"process":"width","port":"key"}},{"data":"height","tgt":{"process":"height","port":"key"}}]}')},45801:(e,t,n)=>{t.canvas=n(65338)},32312:(module,exports,__webpack_require__)=>{"use strict";var clm={tracker:function(e){var t,n,r,o,a,i,s,c,u,l,d,p,h,f,g;e||(e={}),void 0===e.constantVelocity&&(e.constantVelocity=!0),void 0===e.searchWindow&&(e.searchWindow=11),void 0===e.useWebGL&&(e.useWebGL=!0),void 0===e.scoreThreshold&&(e.scoreThreshold=.5),void 0===e.stopOnConvergence&&(e.stopOnConvergence=!1),void 0===e.weightPoints&&(e.weightPoints=void 0),void 0===e.sharpenResponse&&(e.sharpenResponse=!1);var m,v,y,b,w,_,x,k,P=!1,S=!1,C=[],D=[],E=[],j=[],A=[],I=[],O=[],q="single",R=["raw"],T=0,B=[10,5,1],M=!0,N=[],L=[];if("undefined"!=typeof Float64Array)var F=new Float64Array(2),G=new Float64Array(2);else F=new Array(2),G=new Array(2);var U,z,W,$,V,H,J,Q,X,Y,K,Z,ee,te,ne,re,oe,ae,ie=0,se=document.createElement("canvas"),ce=se.getContext("2d"),ue=[],le=0,de=[0,0],pe=[0,0],he=[0,0],fe=Math.PI/2;this.init=function(p){o=(f=p).patchModel.patchType,t=f.patchModel.numPatches,n=f.patchModel.patchSize[0],m="MOSSE"==o?n:e.searchWindow,r=f.shapeModel.numEvalues,v=f.patchModel.canvasSize[0],y=f.patchModel.canvasSize[1],d=document.createElement("canvas"),c=d.getContext("2d"),u=d.width=v+(m-1)+n-1,l=d.height=y+(m-1)+n-1,f.hints&&mosseFilter&&left_eye_filter&&right_eye_filter&&nose_filter?((Z=new mosseFilter).load(left_eye_filter),(ee=new mosseFilter).load(right_eye_filter),(te=new mosseFilter).load(nose_filter)):console.log("MOSSE filters not found, using rough approximation for initialization."),i=numeric.rep([2*t,r],0);for(var D=0;D<2*t;D++)for(var E=0;E<r;E++)i[D][E]=f.shapeModel.eigenVectors[D][E];for(D=0;D<t;D++)O[D]=[f.shapeModel.meanShape[D][0],f.shapeModel.meanShape[D][1]];for(H=J=0,$=V=1e6,D=0;D<t;D++)O[D][0]<$&&($=O[D][0]),O[D][1]<V&&(V=O[D][1]),O[D][0]>H&&(H=O[D][0]),O[D][1]>J&&(J=O[D][1]);for(Q=H-$,X=J-V,f.scoring&&(Y=new Float64Array(f.scoring.coef),K=f.scoring.bias,se.width=f.scoring.size[0],se.height=f.scoring.size[1]),s=f.shapeModel.eigenValues,h=f.patchModel.weights,g=f.patchModel.bias,a=numeric.rep([r+4,r+4],0),D=0;D<r;D++)f.shapeModel.nonRegularizedVectors.indexOf(D)>=0?a[D+4][D+4]=1e-7:a[D+4][D+4]=1/s[D];for(D=0;D<r+4;D++)C[D]=0;if("SVM"==o){var j,I=document.createElement("canvas");if(window.WebGLRenderingContext&&((j=I.getContext("webgl")||I.getContext("experimental-webgl"))&&j.getExtension("OES_texture_float")||(j=null)),j&&e.useWebGL&&void 0!==webglFilter){U=new webglFilter;try{U.init(h,g,t,m+n-1,m+n-1,n,n),"lbp"in h&&(S=!0),"sobel"in h&&(P=!0)}catch(e){alert("There was a problem setting up webGL programs, falling back to slightly slower javascript version. :("),U=void 0,(z=new svmFilter).init(h.raw,g.raw,t,n,m)}}else{if(void 0===svmFilter)throw"Could not initiate filters, please make sure that svmfilter.js or svmfilter_conv_js.js is loaded.";(z=new svmFilter).init(h.raw,g.raw,t,n,m)}}else"MOSSE"==o&&(W=new mosseFilterResponses).init(h,t,n,n);if(_=x="SVM"==o?n+m-1:m,k=_*x,w=m*m,"undefined"!=typeof Float64Array)for(b=new Float64Array(w),D=0;D<t;D++)A[D]=new Float64Array(k);else for(b=new Array(w),D=0;D<t;D++)A[D]=new Array(k);for(D=0;D<t;D++)N[D]=1,L[D]=0;if(e.weightPoints){for(ae=[],D=0;D<t;D++)D in e.weightPoints?(ae[2*D]=e.weightPoints[D],ae[2*D+1]=e.weightPoints[D]):(ae[2*D]=1,ae[2*D+1]=1);ae=numeric.diag(ae)}},this.start=function(e,t){if(void 0===f)return console.log("tracker needs to be initalized before starting to track."),!1;void 0===re&&(re=e,oe=t),ne=Ce(ge)},this.stop=function(){De(ne)},this.track=function(n,d){var p,h,f,g,v,y;if(M){var w=ke(n,d);if(!w)return(T=document.createEvent("Event")).initEvent("clmtrackrNotFound",!0,!0),document.dispatchEvent(T),!1;p=w[0],g=w[1],h=w[2],f=w[3],M=!1}else{if(ie+=1,e.constantVelocity&&E.length>=2)for(var P=0;P<C.length;P++)C[P]=.1*E[1][P]+.9*(2*E[1][P]-E[0][P]);(g=fe-Math.atan((C[0]+1)/C[1]))>fe&&(g-=Math.PI),p=C[1]/Math.sin(g),h=C[2],f=C[3]}c.save(),c.clearRect(0,0,u,l),c.scale(1/p,1/p),c.rotate(-g),c.translate(-h,-f),c.drawImage(n,0,0,n.width,n.height),c.restore();var S,O,q,R=be(C,!1);if(Y&&ie%10==0&&!xe()){for(M=!0,ue=[],P=0;P<C.length;P++)C[P]=0,E=[];var T;return(T=document.createEvent("Event")).initEvent("clmtrackrLost",!0,!0),document.dispatchEvent(T),!1}for(P=0;P<t;P++){v=R[P][0]-_/2,y=R[P][1]-x/2,S=c.getImageData(Math.round(v),Math.round(y),_,x).data,O=A[P];for(var N=0;N<k;N++)q=.3*S[4*N]+.59*S[4*N+1]+.11*S[4*N+2],O[N]=q}if("SVM"==o)if(void 0!==U)I=ve(A);else{if(void 0===z)throw"SVM-filters do not seem to be initiated properly.";I=z.getResponses(A)}else"MOSSE"==o&&(I=W.getResponses(A));if(e.sharpenResponse)for(P=0;P<t;P++)for(N=0;N<I[P].length;N++)I[P][N]=Math.pow(I[P][N],e.sharpenResponse);var L,$=D,V=[];for(P=0;P<B.length;P++){var H,J;for(L=ye(C,i),N=0;N<t;N++){H=$[N][0]-(m-1)*p/2,J=$[N][1]-(m-1)*p/2;var Q=we(m,D[N],F,b,I,H,J,N,B[P],p);_e(m,G,F,b,Q,H,J,p),V[N]=[G[0]-D[N][0],G[1]-D[N][1]]}for(var X=numeric.rep([2*t,1],0),K=0;K<t;K++)X[2*K][0]=V[K][0],X[2*K+1][0]=V[K][1];var Z=numeric.mul(a,B[P]);if(e.weightPoints)var ee=numeric.dot(numeric.transpose(L),numeric.dot(ae,L));else ee=numeric.dot(numeric.transpose(L),L);for(var te=numeric.rep([r+4,1],0),ne=0;ne<r+4;ne++)te[ne][0]=C[ne];var re=numeric.dot(Z,te);if(e.weightPoints)var oe=numeric.dot(numeric.transpose(L),numeric.dot(ae,X));else oe=numeric.dot(numeric.transpose(L),X);var se,ce=numeric.add(Z,ee),le=numeric.sub(re,oe),de=numeric.dot(numeric.inv(ce),le),pe=D;for(K=0;K<r+4;K++)C[K]-=de[K];for(K=0;K<r;K++)se=Math.abs(3*Math.sqrt(s[K])),Math.abs(C[K+4])>se&&(C[K+4]>0?C[K+4]=se:C[K+4]=-se);D=be(C,!0);var he,ge,me=0;for(K=0;K<D.length;K++)me+=(he=D[K][0]-pe[K][0])*he+(ge=D[K][1]-pe[K][1])*ge;if(me<.01)break}return e.constantVelocity&&(E.push(C.slice()),E.splice(0,3==E.length?1:0)),j.splice(0,10==j.length?1:0),j.push(D.slice(0)),(T=document.createEvent("Event")).initEvent("clmtrackrIteration",!0,!0),document.dispatchEvent(T),this.getConvergence()<.5&&ue.length>=5&&(e.stopOnConvergence&&this.stop(),(T=document.createEvent("Event")).initEvent("clmtrackrConverged",!0,!0),document.dispatchEvent(T)),D},this.reset=function(){M=!0,ue=[];for(var e=0;e<C.length;e++)C[e]=0,E=[];re=void 0,oe=void 0},this.draw=function(e,t,n){var r;r=void 0===t?C.slice(0):t.slice(0);var o,a=e.getContext("2d");a.fillStyle="rgb(200,200,200)",a.strokeStyle="rgb(130,255,50)",o=void 0===n?f.path.normal:f.path[n];for(var i=0;i<o.length;i++)"number"==typeof o[i]?Se(a,o[i],r):Pe(a,o[i],r)},this.getScore=function(){return le},this.calculatePositions=function(e){return be(e,!0)},this.getCurrentPosition=function(){return!M&&D},this.getCurrentParameters=function(){return C},this.getConvergence=function(){if(j.length<10)return 999999;for(var e=0,n=0,r=0,o=0,a=0;a<5;a++)for(var i=0;i<t;i++)e+=j[a][i][0],n+=j[a][i][1];for(e/=5,n/=5,a=5;a<10;a++)for(i=0;i<t;i++)r+=j[a][i][0],o+=j[a][i][1];var s=(r/=5)-e,c=(o/=5)-n;return(s*s+c*c)/j.length},this.setResponseMode=function(e,t){if(void 0!==f)if(void 0!==U)if(["single","blend","cycle"].indexOf(e)<0)console.log("Tried to set an unknown responsemode : '"+e+"'. No changes made.");else if(t instanceof Array){for(var n=0;n<t.length;n++)["raw","sobel","lbp"].indexOf(t[n])<0&&console.log("Unknown element in responsemode list : '"+t[n]+"'. No changes made."),"sobel"==t[n]&&0==P&&console.log("The sobel filters have not been initialized! No changes made."),"lbp"==t[n]&&0==S&&console.log("The LBP filters have not been initialized! No changes made.");T=0,q=e,R=t}else console.log("List in setResponseMode must be an array of strings! No changes made.");else console.log("Responsemodes are only allowed when using webGL. In pure JS, only 'raw' mode is available.");else console.log("Clmtrackr has not been initialized with a model yet. No changes made.")};var ge=function(){ne=Ce(ge);for(var e=(new Date).getTime();(new Date).getTime()-e<16;)this.track(re,oe)}.bind(this),me=function(e,t){return"lbp"==e?U.getLBPResponses(t):"raw"==e?U.getRawResponses(t):"sobel"==e?U.getSobelResponses(t):void 0},ve=function(e){if("single"==q)return me(R[0],e);if("cycle"==q){var n=me(R[T],e);return++T>=R.length&&(T=0),n}for(var r=[],o=0;o<R.length;o++)r[o]=me(R[o],e);var a=[];for(o=0;o<t;o++){n=Array(m*m);for(var i=0;i<m*m;i++)n[i]=0;for(var s=0;s<R.length;s++)for(i=0;i<m*m;i++)n[i]+=r[s][o][i]/R.length;a[o]=n}return a},ye=function(e,n){for(var o,a,i=numeric.rep([2*t,r+4],0),s=0;s<t;s++){o=O[s][0],a=O[s][1];for(var c=0;c<r;c++)o+=e[c+4]*n[2*s][c],a+=e[c+4]*n[2*s+1][c];for(i[2*s][0]=o,i[2*s+1][0]=a,o=O[s][1],a=O[s][0],c=0;c<r;c++)o+=e[c+4]*n[2*s+1][c],a+=e[c+4]*n[2*s][c];i[2*s][1]=-o,i[2*s+1][1]=a,i[2*s][2]=1,i[2*s+1][2]=0,i[2*s][3]=0,i[2*s+1][3]=1;for(var u=0;u<r;u++)o=e[0]*n[2*s][u]-e[1]*n[2*s+1][u]+n[2*s][u],a=e[0]*n[2*s+1][u]+e[1]*n[2*s][u]+n[2*s+1][u],i[2*s][u+4]=o,i[2*s+1][u+4]=a}return i},be=function(e,n){for(var r,o,a,i,s=e.length,c=[],u=0;u<t;u++){r=O[u][0],o=O[u][1];for(var l=0;l<s-4;l++)r+=f.shapeModel.eigenVectors[2*u][l]*e[l+4],o+=f.shapeModel.eigenVectors[2*u+1][l]*e[l+4];n&&(a=e[0]*r-e[1]*o+e[2],i=e[0]*o+e[1]*r+e[3],r+=a,o+=i),c[u]=[r,o]}return c},we=function(e,t,n,r,o,a,i,s,c,u){for(var l,d,p=0,h=0,f=0;f<e;f++){n[1]=i+f*u;for(var g=0;g<e;g++)n[0]=a+g*u,l=t[0]-n[0],d=t[1]-n[1],r[p]=o[s][p]*Math.exp(-.5*(l*l+d*d)/(c*u)),h+=r[p],p++}return h},_e=function(e,t,n,r,o,a,i,s){var c=0,u=0;t[0]=0,t[1]=0;for(var l=0;l<e;l++){n[1]=i+l*s;for(var d=0;d<e;d++)n[0]=a+d*s,u=r[c]/o,t[0]+=u*n[0],t[1]+=u*n[1],c++}},xe=function(){ce.drawImage(d,Math.round($+Q/4.5),Math.round(V-X/12),Math.round(Q-2*Q/4.5),Math.round(X-X/12),0,0,20,22);for(var t=ce.getImageData(0,0,20,22),n=new Array(440),r=t.data,o=0,a=0;a<440;a++)n[a]=.3*r[4*a]+.59*r[4*a+1]+.11*r[4*a+2],n[a]=Math.log(n[a]+1),n[a]>o&&(o=n[a]);if(o>0){var i=0;for(a=0;a<440;a++)i+=n[a];i/=440;var s=0;for(a=0;a<440;a++)s+=(n[a]-i)*(n[a]-i);s/=439,s=Math.sqrt(s);var c=0;for(a=0;a<440;a++)n[a]=(n[a]-i)/s,c+=n[a]*Y[a];if(c+=K,c=1/(1+Math.exp(-c)),ue.splice(0,5==ue.length?1:0),ue.push(c),ue.length>4){for(le=0,a=0;a<5;a++)le+=ue[a];if((le/=5)<e.scoreThreshold)return!1}}return!0},ke=function(e,t){var n,r,o,a;if(t)p={x:t[0],y:t[1],width:t[2],height:t[3]};else if(!function(e){var t=document.createElement("canvas");t.width=e.width,t.height=e.height,t.getContext("2d").drawImage(e,0,0,e.width,e.height);var n=new jsfeat_face(t).findFace();if(!(n.length>0))return!1;p=n[0];for(var r=1;r<n.length;r++)n[r].confidence>p.confidence&&(p=n[r]);return p}(e))return!1;if(f.hints&&mosseFilter&&left_eye_filter&&right_eye_filter&&nose_filter){var i=4.5*p.width/10,s=6*p.width/10,c=te.track(e,Math.round(p.x+p.width/2-i/2),Math.round(p.y+p.height*(5/8)-i/2),i,i,!1),u=ee.track(e,Math.round(p.x+3*p.width/4-s/2),Math.round(p.y+.4*p.height-s/2),s,s,!1),l=Z.track(e,Math.round(p.x+p.width/4-s/2),Math.round(p.y+.4*p.height-s/2),s,s,!1);de[0]=Math.round(p.x+3*p.width/4-s/2)+u[0],de[1]=Math.round(p.y+.4*p.height-s/2)+u[1],pe[0]=Math.round(p.x+p.width/4-s/2)+l[0],pe[1]=Math.round(p.y+.4*p.height-s/2)+l[1],he[0]=Math.round(p.x+p.width/2-i/2)+c[0],he[1]=Math.round(p.y+p.height*(5/8)-i/2)+c[1];var d=f.hints.leftEye,h=f.hints.rightEye,g=f.hints.nose,m=function(e,t){for(var n=[],r=[],o=0;o<e.length;o++)n[o]=[e[o][0],e[o][1]];for(o=0;o<t.length;o++)r[o]=[t[o][0],t[o][1]];t=r,e=n;var a=[0,0];for(o=0;o<e.length;o++)a[0]+=e[o][0],a[1]+=e[o][1];a[0]/=e.length,a[1]/=e.length;var i=[0,0];for(o=0;o<t.length;o++)i[0]+=t[o][0],i[1]+=t[o][1];i[0]/=t.length,i[1]/=t.length;var s=a[0]-i[0],c=a[1]-i[1];for(o=0;o<t.length;o++)t[o][0]-=i[0],t[o][1]-=i[1];for(o=0;o<e.length;o++)e[o][0]-=a[0],e[o][1]-=a[1];var u=0;for(o=0;o<t.length;o++)u+=t[o][0]*t[o][0],u+=t[o][1]*t[o][1];u=Math.sqrt(u/t.length);var l=0;for(o=0;o<e.length;o++)l+=e[o][0]*e[o][0],l+=e[o][1]*e[o][1];var d=(l=Math.sqrt(l/e.length))/u;for(o=0;o<t.length;o++)t[o][0]*=d,t[o][1]*=d;var p=0,h=0;for(o=0;o<t.length;o++)p+=t[o][0]*e[o][1]-t[o][1]*e[o][0],h+=t[o][0]*e[o][0]+t[o][1]*e[o][1];var f=Math.atan(p/h);return[s+=i[0]-d*Math.cos(-f)*i[0]-d*i[1]*Math.sin(-f),c+=i[1]+d*Math.sin(-f)*i[0]-d*i[1]*Math.cos(-f),d,f]}([pe,de,he],[d,h,g]);n=m[0],r=m[1],o=m[2],a=m[3],C[0]=o*Math.cos(a)-1,C[1]=o*Math.sin(a),C[2]=n,C[3]=r}else o=p.width/modelheight,n=p.x-xmin*o+.1*p.width,r=p.y-ymin*o+.25*p.height,C[0]=o-1,C[2]=n,C[3]=r;return D=be(C,!0),[o,a,n,r]},Pe=function(e,t,n){var o,a,i,s,c;e.beginPath();for(var u=0;u<t.length;u++){o=2*t[u],a=O[o/2][0],i=O[o/2][1];for(var l=0;l<r;l++)a+=f.shapeModel.eigenVectors[o][l]*n[l+4],i+=f.shapeModel.eigenVectors[o+1][l]*n[l+4];s=n[0]*a-n[1]*i+n[2],c=n[0]*i+n[1]*a+n[3],a+=s,i+=c,0==o?e.moveTo(a,i):e.lineTo(a,i)}e.moveTo(0,0),e.closePath(),e.stroke()};function Se(e,t,n){var o,a,i,s,c;a=O[(o=2*t)/2][0],i=O[o/2][1];for(var u=0;u<r;u++)a+=f.shapeModel.eigenVectors[o][u]*n[u+4],i+=f.shapeModel.eigenVectors[o+1][u]*n[u+4];s=n[0]*a-n[1]*i+n[2],c=n[0]*i+n[1]*a+n[3],a+=s,i+=c,e.beginPath(),e.arc(a,i,1,0,2*Math.PI,!0),e.closePath(),e.fill()}var Ce=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(e,t){return window.setTimeout(e,1e3/60)},De=window.cancelAnimationFrame||window.webkitCancelRequestAnimationFrame||window.mozCancelRequestAnimationFrame||window.oCancelRequestAnimationFrame||window.msCancelRequestAnimationFrame||window.clearTimeout;return!0}},webglFilter=function(){var e,t,n,r,o,a,i,s,c,u,l,d,p,h,f,g,m,v,y,b,w,_,x,k,P,S,C,D,E,j,A,I,O,q,R,T,B,M,N,L,F,G,U,z,W,$,V,H,J=!1,Q=!1,X=["attribute vec2 a_texCoord;","attribute vec2 a_position;","","varying vec2 v_texCoord;","","void main() {","   // transform coordinates to regular coordinates","   gl_Position = vec4(a_position,0.0,1.0);"," ","   // pass the texCoord to the fragment shader","   v_texCoord = a_texCoord;","}"].join("\n"),Y=["attribute vec2 a_texCoord;","attribute vec2 a_position;","","varying vec2 v_texCoord;","","void main() {","   // transform coordinates to regular coordinates","   gl_Position = vec4(a_position,0.0,1.0);"," ","   // pass the texCoord to the fragment shader","   v_texCoord = a_texCoord;","}"].join("\n"),K=["attribute vec2 a_texCoord_draw;","attribute vec2 a_position_draw;","attribute float a_patchChoice_draw;","","uniform vec2 u_resolutiondraw;","","varying vec2 v_texCoord;","varying float v_select;","","void main() {","   // convert the rectangle from pixels to 0.0 to 1.0","   vec2 zeroToOne = a_position_draw / u_resolutiondraw;","","   // convert from 0->1 to 0->2","   vec2 zeroToTwo = zeroToOne * 2.0;","","   // convert from 0->2 to -1->+1 (clipspace)","   vec2 clipSpace = zeroToTwo - 1.0;","   ","   // transform coordinates to regular coordinates","   gl_Position = vec4(clipSpace * vec2(1.0, 1.0), 0, 1);","","   // pass the texCoord to the fragment shader","   v_texCoord = a_texCoord_draw;","   ","   v_select = a_patchChoice_draw;","}"].join("\n"),Z=["precision mediump float;","","// our responses","uniform sampler2D u_responses;","","// the texCoords passed in from the vertex shader.","varying vec2 v_texCoord;","varying float v_select;","","const vec4 bit_shift = vec4(256.0*256.0*256.0, 256.0*256.0, 256.0, 1.0);","const vec4 bit_mask  = vec4(0.0, 1.0/256.0, 1.0/256.0, 1.0/256.0);","","// packing code from here http://stackoverflow.com/questions/9882716/packing-float-into-vec4-how-does-this-code-work","void main() {","  vec4 colorSum = texture2D(u_responses, v_texCoord);","  float value = 0.0;","  if (v_select < 0.1) {","    value = colorSum[0];","  } else if (v_select > 0.9 && v_select < 1.1) {","    value = colorSum[1];","  } else if (v_select > 1.9 && v_select < 2.1) {","    value = colorSum[2];","  } else if (v_select > 2.9 && v_select < 3.1) {","    value = colorSum[3];","  } else {","    value = 1.0;","  }","  ","  vec4 res = fract(value * bit_shift);","  res -= res.xxyz * bit_mask;","  ","  //gl_FragColor = vec4(value, value, value, value);","  //gl_FragColor = vec4(1.0, value, 1.0, 1.0);","  gl_FragColor = res;","}"].join("\n");this.init=function(ee,ne,re,oe,ae,ie,se){if(ie==se)if(ie%2!=0&&se%2!=0){O=ne,n=ie,r=se,o=oe,a=ae,i=re,p=Math.floor(i/4)+Math.ceil(i%4/4),s=o,c=a*p,_=o-n+1,k=(x=a-n+1)*i,D=Math.floor(i/4)+Math.ceil(i%4/4),E=o,j=a*D,A=o*a,I=new Float32Array(A*D*4);var ce=[1/o,1/(a*p)];if(H=["precision mediump float;","","const vec2 u_onePixelPatches = vec2("+(1/o).toFixed(10)+","+(1/(a*p)).toFixed(10)+");","const vec2 u_onePixelFilters = vec2("+(1/n).toFixed(10)+","+(1/(r*p)).toFixed(10)+");","const float u_halffilterwidth = "+((n-1)/2).toFixed(1)+";","const float u_halffilterheight = "+((r-1)/2).toFixed(1)+";","","// our patches","uniform sampler2D u_patches;","// our filters","uniform sampler2D u_filters;","","// the texCoords passed in from the vertex shader.","varying vec2 v_texCoord;","varying vec2 v_texCoordFilters; // this should give us correct filter","","void main() {","  vec4 colorSum = vec4(0.0, 0.0, 0.0, 0.0);","  vec4 maxn = vec4(0.0, 0.0, 0.0, 0.0);","  vec4 minn = vec4(256.0, 256.0, 256.0, 256.0);","  vec4 scale = vec4(0.0, 0.0, 0.0, 0.0);","  vec4 patchValue = vec4(0.0, 0.0, 0.0, 0.0);","  vec4 filterValue = vec4(0.0, 0.0, 0.0, 0.0);","  vec4 filterTemp = vec4(0.0, 0.0, 0.0, 0.0);","  for (int w = 0;w < "+n+";w++) {","    for (int h = 0;h < "+r+";h++) {","      patchValue = texture2D(u_patches, v_texCoord + u_onePixelPatches * vec2(float(w)-u_halffilterwidth, float(h)-u_halffilterheight));","      filterValue = texture2D(u_filters, v_texCoordFilters + u_onePixelFilters * vec2(float(w)-u_halffilterwidth, float(h)-u_halffilterheight));","      maxn = max(patchValue, maxn);","      minn = min(patchValue, minn);","      colorSum += patchValue*filterValue;","      filterTemp += filterValue;","    } ","  }","  scale = maxn-minn;","  colorSum = (colorSum-(minn*filterTemp))/scale;","  // logistic transformation","  colorSum = 1.0/(1.0 + exp(- (colorSum) ));","  gl_FragColor = colorSum;","}"].join("\n"),V=["attribute vec2 a_texCoord;","attribute vec2 a_position;","","const vec2 u_resolution = vec2("+s.toFixed(1)+","+c.toFixed(1)+");","const float u_patchHeight = "+(1/p).toFixed(10)+";","const float u_filterHeight = "+(1/p).toFixed(10)+";","const vec2 u_midpoint = vec2(0.5 ,"+(1/(2*p)).toFixed(10)+");","","varying vec2 v_texCoord;","varying vec2 v_texCoordFilters;","","void main() {","   // convert the rectangle from pixels to 0.0 to 1.0","   vec2 zeroToOne = a_position / u_resolution;","","   // convert from 0->1 to 0->2","   vec2 zeroToTwo = zeroToOne * 2.0;","","   // convert from 0->2 to -1->+1 (clipspace)","   vec2 clipSpace = zeroToTwo - 1.0;","   ","   // transform coordinates to regular coordinates","   gl_Position = vec4(clipSpace * vec2(1.0, 1.0), 0, 1);"," ","   // pass the texCoord to the fragment shader","   v_texCoord = a_texCoord;","   ","   // set the filtertexture coordinate based on number filter to use","   v_texCoordFilters = u_midpoint + vec2(0.0, u_filterHeight * floor(a_texCoord[1]/u_patchHeight));","}"].join("\n"),"lbp"in ee&&(W=["precision mediump float;","","uniform vec2 u_onePixelPatches;","","// our patches","uniform sampler2D u_patches;","","// the texCoords passed in from the vertex shader.","varying vec2 v_texCoord;","","void main() {","  vec4 topLeft = texture2D(u_patches, v_texCoord + vec2(-"+ce[0].toFixed(5)+", -"+ce[1].toFixed(5)+"));","  vec4 topMid = texture2D(u_patches, v_texCoord + vec2(0.0, -"+ce[1].toFixed(5)+"));","  vec4 topRight = texture2D(u_patches, v_texCoord + vec2("+ce[0].toFixed(5)+", -"+ce[1].toFixed(5)+"));","  vec4 midLeft = texture2D(u_patches, v_texCoord + vec2(-"+ce[0].toFixed(5)+", 0.0));","  vec4 midMid = texture2D(u_patches, v_texCoord);","  vec4 midRight = texture2D(u_patches, v_texCoord + vec2("+ce[0].toFixed(5)+", 0.0));","  vec4 bottomLeft = texture2D(u_patches, v_texCoord + vec2(-"+ce[0].toFixed(5)+", "+ce[1].toFixed(5)+"));","  vec4 bottomMid = texture2D(u_patches, v_texCoord + vec2(0.0, "+ce[1].toFixed(5)+"));","  vec4 bottomRight = texture2D(u_patches, v_texCoord + vec2("+ce[0].toFixed(5)+", "+ce[1].toFixed(5)+"));","  vec4 lbp = step(midMid, midRight)*1.0 + step(midMid, topRight)*2.0 + step(midMid, topMid)*4.0;","  lbp = lbp + step(midMid, topLeft)*8.0 + step(midMid, midLeft)*16.0 + step(midMid, bottomLeft)*32.0;","  lbp = lbp + step(midMid, bottomMid)*64.0 + step(midMid, bottomRight)*128.0;","  gl_FragColor = lbp;","}"].join("\n")),"sobel"in ee&&($=["precision mediump float;","","uniform vec2 u_onePixelPatches;","","// our patches","uniform sampler2D u_patches;","","// the texCoords passed in from the vertex shader.","varying vec2 v_texCoord;","","void main() {","  vec4 bottomLeft = texture2D(u_patches, v_texCoord + vec2(-"+ce[0].toFixed(5)+", "+ce[1].toFixed(5)+"));","  vec4 bottomRight = texture2D(u_patches, v_texCoord + vec2("+ce[0].toFixed(5)+", "+ce[1].toFixed(5)+"));","  vec4 topLeft = texture2D(u_patches, v_texCoord + vec2(-"+ce[0].toFixed(5)+", -"+ce[1].toFixed(5)+"));","  vec4 topRight = texture2D(u_patches, v_texCoord + vec2("+ce[0].toFixed(5)+", -"+ce[1].toFixed(5)+"));","  vec4 dx = (","    bottomLeft +","    (texture2D(u_patches, v_texCoord + vec2(-"+ce[0].toFixed(5)+", 0.0))*vec4(2.0,2.0,2.0,2.0)) +","    topLeft -","    bottomRight -","    (texture2D(u_patches, v_texCoord + vec2("+ce[0].toFixed(5)+", 0.0))*vec4(2.0,2.0,2.0,2.0)) -","    topRight)/4.0;","  vec4 dy = (","    bottomLeft +","    (texture2D(u_patches, v_texCoord + vec2(0.0, "+ce[1].toFixed(5)+"))*vec4(2.0,2.0,2.0,2.0)) +","    bottomRight -","    topLeft -","    (texture2D(u_patches, v_texCoord + vec2(0.0, -"+ce[1].toFixed(5)+"))*vec4(2.0,2.0,2.0,2.0)) -","    topRight)/4.0;","  vec4 gradient = sqrt((dx*dx) + (dy*dy));","  gl_FragColor = gradient;","}"].join("\n")),(t=document.createElement("canvas")).setAttribute("width",o-n+1+"px"),t.setAttribute("height",(a-r+1)*i+"px"),t.setAttribute("id","renderCanvas"),t.setAttribute("style","display:none;"),document.body.appendChild(t),(e=setupWebGL(t,{premultipliedAlpha:!1,preserveDrawingBuffer:!0,antialias:!1})).getExtension("OES_texture_float")){"raw"in ee&&te(ee.raw,e.TEXTURE0),"sobel"in ee&&(te(ee.sobel,e.TEXTURE4),Q=!0),"lbp"in ee&&(te(ee.lbp,e.TEXTURE5),J=!0);for(var ue=[],le=(n-1)/2,de=0;de<p;de++)fe=de*a,ue=(ue=ue.concat([le,fe+le,o-le,fe+le,le,fe+a-le])).concat([le,fe+a-le,o-le,fe+le,o-le,fe+a-le]);ue=new Float32Array(ue);var pe,he=[];for(de=0;de<ue.length;de++)he[de]=de%2==0?ue[de]/s:ue[de]/c;if(he=new Float32Array(he),"lbp"in ee||"sobel"in ee){var fe,ge=1-2/(a*p),me=1-2/p+2/(a*p),ve=[];for(de=0;de<p;de++)fe=de*(2/p),ve=(ve=ve.concat([-1,ge-fe,1,ge-fe,-1,me-fe])).concat([-1,me-fe,1,ge-fe,1,me-fe]);ve=new Float32Array(ve),ge=1-1/(a*p),me=1-1/p+1/(a*p);var ye=[];for(de=0;de<p;de++)fe=de*(1/p),ye=(ye=ye.concat([0,ge-fe,1,ge-fe,0,me-fe])).concat([0,me-fe,1,ge-fe,1,me-fe]);ye=new Float32Array(ye)}for(P=new Float32Array(12*i),de=0;de<i;de++)fe=de*x,P[pe=12*de]=0,P[pe+1]=fe,P[pe+2]=_,P[pe+3]=fe,P[pe+4]=0,P[pe+5]=fe+x,P[pe+6]=0,P[pe+7]=fe+x,P[pe+8]=_,P[pe+9]=fe,P[pe+10]=_,P[pe+11]=fe+x;S=new Float32Array(12*i);var be,we=(n-1)/2/o,_e=(n-1)/2/(a*D),xe=a/(a*D);for(de=0;de<i;de++)fe=Math.floor(de/4)*xe,S[pe=12*de]=we,S[pe+1]=fe+_e,S[pe+2]=1-we,S[pe+3]=fe+_e,S[pe+4]=we,S[pe+5]=fe+xe-_e,S[pe+6]=we,S[pe+7]=fe+xe-_e,S[pe+8]=1-we,S[pe+9]=fe+_e,S[pe+10]=1-we,S[pe+11]=fe+xe-_e;for(C=new Float32Array(6*i),de=0;de<i;de++)be=de%4,C[pe=6*de]=be,C[pe+1]=be,C[pe+2]=be,C[pe+3]=be,C[pe+4]=be,C[pe+5]=be;if("sobel"in ee){var ke=loadShader(e,Y,e.VERTEX_SHADER),Pe=loadShader(e,$,e.FRAGMENT_SHADER);N=createProgram(e,[ke,Pe]),e.useProgram(N),U=e.getAttribLocation(N,"a_position"),z=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,z),e.bufferData(e.ARRAY_BUFFER,ve,e.STATIC_DRAW),e.enableVertexAttribArray(U),e.vertexAttribPointer(U,2,e.FLOAT,!1,0,0),F=e.getAttribLocation(N,"a_texCoord"),G=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,G),e.bufferData(e.ARRAY_BUFFER,ye,e.STATIC_DRAW),e.enableVertexAttribArray(F),e.vertexAttribPointer(F,2,e.FLOAT,!1,0,0),e.uniform1i(e.getUniformLocation(N,"u_patches"),1)}if("lbp"in ee){var Se=loadShader(e,X,e.VERTEX_SHADER),Ce=loadShader(e,W,e.FRAGMENT_SHADER);q=createProgram(e,[Se,Ce]),e.useProgram(q),B=e.getAttribLocation(q,"a_position"),M=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,M),e.bufferData(e.ARRAY_BUFFER,ve,e.STATIC_DRAW),e.enableVertexAttribArray(B),e.vertexAttribPointer(B,2,e.FLOAT,!1,0,0),F=e.getAttribLocation(q,"a_texCoord"),T=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,T),e.bufferData(e.ARRAY_BUFFER,ye,e.STATIC_DRAW),e.enableVertexAttribArray(R),e.vertexAttribPointer(R,2,e.FLOAT,!1,0,0),e.uniform1i(e.getUniformLocation(q,"u_patches"),1)}var De=loadShader(e,K,e.VERTEX_SHADER),Ee=loadShader(e,Z,e.FRAGMENT_SHADER);l=createProgram(e,[De,Ee]),e.useProgram(l);var je=e.getUniformLocation(l,"u_resolutiondraw");e.uniform2f(je,_,k);var Ae=e.getUniformLocation(l,"u_responses");e.uniform1i(Ae,2);var Ie=loadShader(e,V,e.VERTEX_SHADER),Oe=loadShader(e,H,e.FRAGMENT_SHADER);u=createProgram(e,[Ie,Oe]),e.useProgram(u);var qe=e.getAttribLocation(u,"a_position");if(w=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,w),e.bufferData(e.ARRAY_BUFFER,ue,e.STATIC_DRAW),e.enableVertexAttribArray(qe),e.vertexAttribPointer(qe,2,e.FLOAT,!1,0,0),b=e.getAttribLocation(u,"a_texCoord"),y=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,y),e.bufferData(e.ARRAY_BUFFER,he,e.STATIC_DRAW),e.enableVertexAttribArray(b),e.vertexAttribPointer(b,2,e.FLOAT,!1,0,0),"lbp"in ee||"sobel"in ee){e.activeTexture(e.TEXTURE3);var Re=e.createTexture();e.bindTexture(e.TEXTURE_2D,Re),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,o,a*p,0,e.RGBA,e.FLOAT,null),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),L=e.createFramebuffer(),e.bindFramebuffer(e.FRAMEBUFFER,L),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,Re,0)}e.activeTexture(e.TEXTURE2),v=e.createTexture(),e.bindTexture(e.TEXTURE_2D,v),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,o,a*p,0,e.RGBA,e.FLOAT,null),d=e.createFramebuffer(),e.bindFramebuffer(e.FRAMEBUFFER,d),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,v,0),e.viewport(0,0,o,a*p),h=e.createTexture(),f=e.createBuffer(),m=e.createBuffer(),g=e.createBuffer()}else alert("Your graphics card does not support floating point textures! :(")}else alert("filters used in svm must be of odd dimensions!");else alert("filter width and height must be same size!")},this.getRawResponses=function(t){ee(t),e.useProgram(u),e.uniform1i(e.getUniformLocation(u,"u_patches"),1),e.uniform1i(e.getUniformLocation(u,"u_filters"),0);var n=e.getAttribLocation(u,"a_position");e.bindBuffer(e.ARRAY_BUFFER,w),e.enableVertexAttribArray(n),e.vertexAttribPointer(n,2,e.FLOAT,!1,0,0);var r=e.getAttribLocation(u,"a_texCoord");return e.bindBuffer(e.ARRAY_BUFFER,y),e.enableVertexAttribArray(r),e.vertexAttribPointer(r,2,e.FLOAT,!1,0,0),e.bindFramebuffer(e.FRAMEBUFFER,d),e.viewport(0,0,o,a*p),e.clearColor(0,0,0,1),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER),e.drawArrays(e.TRIANGLES,0,6*D),ne("raw")},this.getSobelResponses=function(t){if(Q){ee(t),e.useProgram(N);var n=e.getAttribLocation(N,"a_position");e.bindBuffer(e.ARRAY_BUFFER,z),e.enableVertexAttribArray(n),e.vertexAttribPointer(n,2,e.FLOAT,!1,0,0);var r=e.getAttribLocation(N,"a_texCoord");e.bindBuffer(e.ARRAY_BUFFER,G),e.enableVertexAttribArray(r),e.vertexAttribPointer(r,2,e.FLOAT,!1,0,0),e.bindFramebuffer(e.FRAMEBUFFER,L),e.viewport(0,0,o,a*p),e.clearColor(0,0,0,1),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER),e.drawArrays(e.TRIANGLES,0,6*D),e.useProgram(u),e.uniform1i(e.getUniformLocation(u,"u_filters"),4),e.uniform1i(e.getUniformLocation(u,"u_patches"),3);var i=e.getAttribLocation(u,"a_position");e.bindBuffer(e.ARRAY_BUFFER,w),e.enableVertexAttribArray(i),e.vertexAttribPointer(i,2,e.FLOAT,!1,0,0);var s=e.getAttribLocation(u,"a_texCoord");return e.bindBuffer(e.ARRAY_BUFFER,y),e.enableVertexAttribArray(s),e.vertexAttribPointer(s,2,e.FLOAT,!1,0,0),e.bindFramebuffer(e.FRAMEBUFFER,d),e.viewport(0,0,o,a*p),e.clearColor(0,0,0,1),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER),e.drawArrays(e.TRIANGLES,0,6*D),ne("sobel")}},this.getLBPResponses=function(t){if(J){ee(t),e.useProgram(q);var n=e.getAttribLocation(q,"a_position");e.bindBuffer(e.ARRAY_BUFFER,M),e.enableVertexAttribArray(n),e.vertexAttribPointer(n,2,e.FLOAT,!1,0,0);var r=e.getAttribLocation(q,"a_texCoord");e.bindBuffer(e.ARRAY_BUFFER,T),e.enableVertexAttribArray(r),e.vertexAttribPointer(r,2,e.FLOAT,!1,0,0),e.bindFramebuffer(e.FRAMEBUFFER,L),e.viewport(0,0,o,a*p),e.clearColor(0,0,0,1),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER),e.drawArrays(e.TRIANGLES,0,6*D),e.useProgram(u),e.uniform1i(e.getUniformLocation(u,"u_filters"),5),e.uniform1i(e.getUniformLocation(u,"u_patches"),3);var i=e.getAttribLocation(u,"a_position");e.bindBuffer(e.ARRAY_BUFFER,w),e.enableVertexAttribArray(i),e.vertexAttribPointer(i,2,e.FLOAT,!1,0,0);var s=e.getAttribLocation(u,"a_texCoord");return e.bindBuffer(e.ARRAY_BUFFER,y),e.enableVertexAttribArray(s),e.vertexAttribPointer(s,2,e.FLOAT,!1,0,0),e.bindFramebuffer(e.FRAMEBUFFER,d),e.viewport(0,0,o,a*p),e.clearColor(0,0,0,1),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER),e.drawArrays(e.TRIANGLES,0,6*D),ne("lbp")}};var ee=function(t){for(var n=0,r=0,s=0,c=0;c<D;c++)for(var u=0;u<a;u++)for(var l=0;l<o;l++)r=4*c,I[n=4*(A*c+(s=u*o+l))]=r<i?t[r][s]:0,I[n+1]=r+1<i?t[r+1][s]:0,I[n+2]=r+2<i?t[r+2][s]:0,I[n+3]=r+3<i?t[r+3][s]:0;e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,h),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,E,j,0,e.RGBA,e.FLOAT,I),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST)},te=function(t,o){for(var a=n*r,i=new Float32Array(a*p*4),s=0;s<p;s++)for(var c=0;c<r;c++)for(var u=0;u<n;u++)4*s<t.length?i[4*(a*s+c*n+u)]=t[4*s][c*n+u]:i[4*(a*s+c*n+u)]=0,4*s+1<t.length?i[4*(a*s+c*n+u)+1]=t[4*s+1][c*n+u]:i[4*(a*s+c*n+u)+1]=0,4*s+2<t.length?i[4*(a*s+c*n+u)+2]=t[4*s+2][c*n+u]:i[4*(a*s+c*n+u)+2]=0,4*s+3<t.length?i[4*(a*s+c*n+u)+3]=t[4*s+3][c*n+u]:i[4*(a*s+c*n+u)+3]=0;e.activeTexture(o);var l=e.createTexture();e.bindTexture(e.TEXTURE_2D,l),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n,r*p,0,e.RGBA,e.FLOAT,i),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST)},ne=function(t){e.useProgram(l),e.bindFramebuffer(e.FRAMEBUFFER,null),e.viewport(0,0,_,k),e.clearColor(0,0,0,1),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER),e.bindBuffer(e.ARRAY_BUFFER,f),e.bufferData(e.ARRAY_BUFFER,P,e.STATIC_DRAW);var n=e.getAttribLocation(l,"a_position_draw");e.enableVertexAttribArray(n),e.vertexAttribPointer(n,2,e.FLOAT,!1,0,0),e.bindBuffer(e.ARRAY_BUFFER,m),e.bufferData(e.ARRAY_BUFFER,S,e.STATIC_DRAW);var r=e.getAttribLocation(l,"a_texCoord_draw");e.enableVertexAttribArray(r),e.vertexAttribPointer(r,2,e.FLOAT,!1,0,0),e.bindBuffer(e.ARRAY_BUFFER,g),e.bufferData(e.ARRAY_BUFFER,C,e.STATIC_DRAW);var o=e.getAttribLocation(l,"a_patchChoice_draw");e.enableVertexAttribArray(o),e.vertexAttribPointer(o,1,e.FLOAT,!1,0,0),e.drawArrays(e.TRIANGLES,0,6*i);var a=ae();a=ie(a),a=oe(a,i);for(var s=(a=re(a,O[t])).length,c=0;c<s;c++)a[c]=se(a[c]);return a},re=function(e,t){for(var n,r=0;r<e.length;r++){n=Math.exp(t[r]);for(var o=0;o<e[r].length;o++)e[r][o]=1/(1+(1-e[r][o])/(e[r][o]*n))}return e},oe=function(e,t){for(var n=[],r=e.length,o=r/t,a=[],i=0;i<r;i++)i%o==0&&(0!=i&&n.push(a),a=[]),a.push(e[i]);return n.push(a),n},ae=function(){var n=new Uint8Array(4*t.width*t.height);return e.readPixels(0,0,t.width,t.height,e.RGBA,e.UNSIGNED_BYTE,n),n},ie=function(e){for(var t=[],n=e.length,r=0;r<n;r+=4)t[r/4>>0]=e[r]/4294967296+e[r+1]/16777216+e[r+2]/65536+e[r+3]/256;return t},se=function(e){for(var t=e.length,n=0,r=1,o=0;o<t;o++)n=e[o]>n?e[o]:n,r=e[o]<r?e[o]:r;var a=n-r;if(0==a)e=e.map((function(){return 1}));else for(o=0;o<t;o++)e[o]=(e[o]-r)/a;return e}};!function(){var e=function(e){throw window.console&&(window.console.error?window.console.error(e):window.console.log&&window.console.log(e)),e},t=function(){return window!=window.top},n=function(e,t){return window.WebGLRenderingContext&&r(e,t)||null},r=function(e,t){for(var n=["webgl","experimental-webgl"],r=null,o=0;o<n.length;++o){try{r=e.getContext(n[o],t)}catch(e){}if(r)break}return r},o=function(){t()&&(document.body.className="iframe")},a=function(t,n,r,o){var a=o||e,i=t.createShader(r);return t.shaderSource(i,n),t.compileShader(i),t.getShaderParameter(i,t.COMPILE_STATUS)?i:(a("*** Error compiling shader '"+i+"':"+t.getShaderInfoLog(i)),t.deleteShader(i),null)};window.setupWebGL=n,window.createProgram=function(t,n,r,o){for(var a=t.createProgram(),i=0;i<n.length;++i)t.attachShader(a,n[i]);if(r)for(i=0;i<r.length;++i)t.bindAttribLocation(a,o?o[i]:i,r[i]);if(t.linkProgram(a),!t.getProgramParameter(a,t.LINK_STATUS)){var s=t.getProgramInfoLog(a);return e("Error in program linking:"+s),t.deleteProgram(a),null}return a},window.createShaderFromScriptElement=function(e,t,n,r){var o,i,s=document.getElementById(t);if(!s)throw"*** Error: unknown script element"+t;if(o=s.text,!n)if("x-shader/x-vertex"==s.type)i=e.VERTEX_SHADER;else if("x-shader/x-fragment"==s.type)i=e.FRAGMENT_SHADER;else if(i!=e.VERTEX_SHADER&&i!=e.FRAGMENT_SHADER)throw"*** Error: unknown shader type";return a(e,o,n||i,r)},window.getWebGLContext=function(e){return t()&&(o(),e.width=e.clientWidth,e.height=e.clientHeight),n(e)},window.updateCSSIfInIFrame=o,window.loadShader=a}();var svmFilter=function(){var e,t,n,r,o,a,i,s,c,u,l;this.fft_inplace=function(t,n){void 0===n&&(n=u);for(var r=0;r<a;r++)n[r]=0;return e.real_fft2d(t,n),[t,n]},this.ifft=function(t,n){return e.real_ifft2d(t,n),t};var d=function(e,t){for(var n,r,o=0;o<a;o++)n=e[0][o]*t[0][o]-e[1][o]*t[1][o],r=e[0][o]*t[1][o]+e[1][o]*t[0][o],e[0][o]=n,e[1][o]=r};this.init=function(d,p,h,g,v){var y;o=f(g-1+v),a=o*o,(e=new m).init(o),t=Array(h);for(var b=(g-1)/2,w=0;w<h;w++){for(var _=new Float64Array(a),x=new Float64Array(a),k=0;k<g;k++)for(var P=0;P<g;P++)_[P+(P<b?o-b:-b)+(k+(k<b?o-b:-b))*o]=d[w][g-1-k+(g-1-P)*g];y=this.fft_inplace(_,x),t[w]=y}for(r=new Float64Array(h),w=0;w<h;w++)r[w]=p[w];for(n=Array(h),u=Array(h),w=0;w<h;w++)n[w]=new Float64Array(v*v),u[w]=new Float64Array(v*v);l=new Float64Array(a),c=h,i=g,s=v},this.getResponses=function(e){for(var a,u,f=i-1+s,m=0;m<c;m++){for(var v=0;v<o*o;v++)l[v]=0;for(e[m]=p(e[m]),v=0;v<f;v++)for(var y=0;y<f;y++)l[v+o*y]=e[m][y+f*v];for(a=this.fft_inplace(l),d(a,t[m]),a=this.ifft(a[0],a[1]),u=(i-1)/2,v=0;v<s;v++)for(y=0;y<s;y++)n[m][v+y*s]=a[u+y+(v+u)*o];for(v=0;v<s*s;v++)n[m][v]+=r[m];n[m]=h(n[m]),g(n[m])}return n};var p=function(e){for(var t,n=i-1+s,r=0,o=1e3,a=0;a<n;a++)for(var c=0;c<n;c++)(t=e[c+n*a])<o&&(o=t),t>r&&(r=t);var u=r-o;for(a=0;a<n;a++)for(c=0;c<n;c++)e[c+n*a]=(e[c+n*a]-o)/u;return e},h=function(e){for(var t=0;t<s;t++)for(var n=0;n<s;n++)e[t+n*s]=1/(1+Math.exp(-(e[t+n*s]-1)));return e},f=function(e){return e--,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,++e},g=function(e){for(var t=e.length,n=0,r=1,o=0;o<t;o++)n=e[o]>n?e[o]:n,r=e[o]<r?e[o]:r;var a=n-r;if(0==a);else for(o=0;o<t;o++)e[o]=(e[o]-r)/a};function m(){var e,t,n=0,r=null,o=null;function a(e,t,a){for(var i,s,c,u,l,d,p,h,f,g=n>>2,m=0;m<n;m++)m<(u=r[m])&&(l=e[m],e[m]=e[u],e[u]=l,l=t[m],t[m]=t[u],t[u]=l);for(var v=1;v<n;v<<=1){s=0,i=n/(v<<1);for(var y=0;y<v;y++){d=o[s+g],p=a*o[s];for(var b=y;b<n;b+=v<<1)h=d*e[c=b+v]+p*t[c],f=d*t[c]-p*e[c],e[c]=e[b]-h,e[b]+=h,t[c]=t[b]-f,t[b]+=f;s+=i}}}this.init=function(a){if(0===a||0!=(a&a-1))throw new Error("init: radix-2 required");n=a,r="undefined"!=typeof Uint8Array?new Uint8Array(n):new Array(n),"undefined"!=typeof Float64Array?(o=new Float64Array(1.25*n),e=new Float64Array(n),t=new Float64Array(n)):(o=new Array(1.25*n),e=new Array(n),t=new Array(n)),function(){var e=0,t=0,o=0;for(r[0]=0;++e<n;){for(o=n>>1;o<=t;)t-=o,o>>=1;t+=o,r[e]=t}}(),function(){var e=n>>1,t=n>>2,r=n>>3,a=e+t,i=Math.sin(Math.PI/n),s=2*i*i,c=Math.sqrt(s*(2-s)),u=o[t]=1,l=o[0]=0;i=2*s;for(var d=1;d<r;d++)s+=i*(u-=s),c-=i*(l+=c),o[d]=l,o[t-d]=u;0!==r&&(o[r]=Math.sqrt(.5));for(var p=0;p<t;p++)o[e-p]=o[p];for(var h=0;h<a;h++)o[h+e]=-o[h]}()},this.fft1d=function(e,t){a(e,t,1)},this.ifft1d=function(e,t){var r=1/n;a(e,t,-1);for(var o=0;o<n;o++)e[o]*=r,t[o]*=r},this.fft2d=function(r,o){for(var a=0,i=0;i<n;i++){a=i*n;for(var s=0;s<n;s++)e[s]=r[s+a],t[s]=o[s+a];this.fft1d(e,t);for(var c=0;c<n;c++)r[c+a]=e[c],o[c+a]=t[c]}for(var u=0;u<n;u++){for(var l=0;l<n;l++)a=u+l*n,e[l]=r[a],t[l]=o[a];this.fft1d(e,t);for(var d=0;d<n;d++)r[a=u+d*n]=e[d],o[a]=t[d]}},this.ifft2d=function(r,o){for(var a=0,i=0;i<n;i++){a=i*n;for(var s=0;s<n;s++)e[s]=r[s+a],t[s]=o[s+a];this.ifft1d(e,t);for(var c=0;c<n;c++)r[c+a]=e[c],o[c+a]=t[c]}for(var u=0;u<n;u++){for(var l=0;l<n;l++)a=u+l*n,e[l]=r[a],t[l]=o[a];this.ifft1d(e,t);for(var d=0;d<n;d++)r[a=u+d*n]=e[d],o[a]=t[d]}},this.real_ifft2d=function(r,o){for(var a,i=0,s=0;s<n;s++){i=s*n;for(var c=0;c<n;c++)e[c]=r[c+i],t[c]=o[c+i];this.ifft1d(e,t);for(var u=0;u<n;u++)r[u+i]=e[u],o[u+i]=t[u]}for(var l=n/2,d=0,p=0;p<n;p+=2){for(i=p,a=p+1,e[0]=r[0+i],t[0]=r[0+a],e[n/2]=r[l*n+i],t[n/2]=r[l*n+a],u=1;u<l;u++)d=u*n,e[u]=r[d+i]-o[d+a],e[n-u]=r[d+i]+o[d+a],t[u]=o[d+i]+r[d+a],t[n-u]=r[d+a]-o[d+i];this.ifft1d(e,t);for(var h=0;h<n;h++)a=p+1+h*n,r[i=p+h*n]=e[h],r[a]=t[h]}},this.real_fft2d=function(r,o){for(var a=0,i=0,s=0;s<n;s+=2){a=s*n,i=(s+1)*n;for(var c=0;c<n;c++)e[c]=r[c+a],t[c]=r[c+i];this.fft1d(e,t),r[0+a]=e[0],r[0+i]=t[0],o[0+a]=0,o[0+i]=0,r[n/2+a]=e[n/2],r[n/2+i]=t[n/2],o[n/2+a]=0,o[n/2+i]=0;for(var u=1;u<n/2;u++)r[u+a]=.5*(e[u]+e[n-u]),o[u+a]=.5*(t[u]-t[n-u]),r[u+i]=.5*(t[u]+t[n-u]),o[u+i]=-.5*(e[u]-e[n-u]),r[n-u+a]=r[u+a],o[n-u+a]=-o[u+a],r[n-u+i]=r[u+i],o[n-u+i]=-o[u+i]}for(var l=0;l<n;l++){for(var d=0;d<n;d++)a=l+d*n,e[d]=r[a],t[d]=o[a];this.fft1d(e,t);for(var p=0;p<n;p++)r[a=l+p*n]=e[p],o[a]=t[p]}}}},mosseFilterResponses=function(){var e=[],t=[],n=0;this.init=function(t,r,o,a){for(var i=0;i<r;i++){var s={};s.width=o,s.height=a;for(var c=o*a,u=new Float64Array(c),l=new Float64Array(c),d=0;d<c;d++)u[d]=t[i][0][d],l[d]=t[i][1][d];s.real=u,s.imag=l,e[i]=new mosseFilter,e[i].load(s)}n=r},this.getResponses=function(o){for(var a=0;a<n;a++)t[a]=e[a].getResponse(o[a]),t[a]=r(t[a]);return t};var r=function(e){for(var t=e.length,n=0,r=1,o=0;o<t;o++)n=e[o]>n?e[o]:n,r=e[o]<r?e[o]:r;var a=n-r;if(0==a)e=e.map((function(){return 1}));else for(o=0;o<t;o++)e[o]=(e[o]-r)/a;return e}},left_eye_filter={real:[1.5419219943717721,.40010880110578706,-.7904364126534296,-1.2685464969238938,.39878117336167285,-1.0673489992245377,-.07988083822940402,-.45374680224191505,-.04347409793890079,-.31125662385352687,.17092430376098702,-.29613086164846153,.5616469648110296,-1.559786848789493,.6451303799749266,-1.2899747976234162,1.1761667998175334,-1.289974797623355,.6451303799749047,-1.5597868487894897,.561646964811025,-.29613086164845964,.17092430376099094,-.3112566238535296,-.04347409793890079,-.4537468022419118,-.07988083822940466,-1.0673489992245357,.39878117336167307,-1.2685464969238942,-.7904364126534301,.40010880110578717,-1.3820969331049027,.06956047126920577,-1.9786339579213206,-1.9807415717551982,-.7866727441045088,-1.2217002325587256,-.19150029104902774,-.3513161729077324,-.17646388464205803,-.1667209502050344,-.09229861292456652,-.028899376452253527,-.1314555696102146,-.32892265898101813,-.40987148655061206,.11741827111366547,-.6725433018260514,-.46007833291519956,-.67215259521101,-.4487190743247301,-.03474931672918458,.005563928130243397,-.1767590236098159,-.2619620808503219,-.3630125430638704,-.33546767337818123,-.6458889740799838,-1.1981932989987978,.12372650763830917,-1.4996172161865935,-2.408429802301389,-2.050529127959172,-1.7249706159518585,-2.277646289702639,-3.125963174341959,-2.9656385065342015,-2.848083508696201,-1.426096450031019,-.6179259082917354,-.2611655301498782,-.38519889843539723,-.17511899827006483,-.32808050503227176,.007680087103746304,-.18710828510427668,.1976534820339281,-.5544445310046505,.1458356759032838,-.6984497111751529,-.9018857723352662,-.5350001638458337,-.0444207518616698,.014727914354086128,-.28084584584371913,-.2989040874868585,-.3943138014933655,-.39569215798819307,-.743519999882583,-.8250219837063175,-1.851491897104155,-.7430237866893424,.21156442062863762,-3.3061472495599986,-1.7990472945779568,-2.219376425173228,-2.343880246691925,-3.361597106712331,-3.538324908586371,-2.263967374508659,-2.027175780678075,-.7524258340587223,-.3014341101683938,-.3625272253546275,-.2548943100464769,-.1892849156146708,-.1179891518538482,.027920290231533224,-.03547210749814382,-.2900872185756226,-.3604588674139817,-.391561438074338,-.8222225740287656,-.4497991497169593,-.09813633035547625,.06562858246622937,-.3360730432730313,-.3216120132349778,-.41856090178723965,-.6402842542962905,-.7766428172010218,-1.3946448661671447,-2.2603422126144683,-.38769722219534525,-.9534159393947865,-1.412952994959813,-2.360233685802043,-1.275639243727802,-2.0983496132652038,-2.568245461005427,-2.879105394693038,-2.1809972632688095,-.8428129384777686,-.759989367937187,-.18584599820380068,-.3010574835530826,-.16098142942852958,-.1379212574041719,-.08979002287112871,-.12321821342876504,-.1128661923016878,-.3924098378001975,-.5780902167586397,-.48685989567066695,-.5356535944329623,-.05103668985052638,-.006854703392511769,-.1896340515783942,-.22514761090777807,-.3555582346088891,-.4667060397658552,-.5617954148525789,-.7495095888115163,-1.477207542226035,-1.5836466114968029,-2.3846549454186694,-1.4884613952536236,-1.8237453905245253,-1.6712324532934877,-1.5169157844507295,-1.6930052820597281,-2.1023566589276004,-2.2062031109308458,-1.7945281756942255,-.2645739883891265,.22038139379151148,-.43479836723775234,-.19830827357221226,-.18018565146479498,-.09706087918479574,-.10088329756370379,-.06306970995727253,-.17970932516041177,-.1943040732581543,-.3797056039227762,-.4730230160625181,-.3036696794805218,-.0647323910189154,-.08902516330269715,-.08200020008302734,-.22965854401457736,-.32035624605031326,-.3183678319655244,-.4013205823631112,-.6560174703347086,-.5904048375141748,-1.8503084663080034,-1.8694842425148914,-1.9326778896298584,-1.630157842292352,-1.43320067851183,-1.305707665299106,-1.364200787821644,-1.5357935460809622,-1.616199233695124,-.7400351866837052,-.2942382417321069,.025934598230976654,-.043349004411304674,-.2540802180302247,-.0669656864849775,-.07571749869863525,.007057189465364498,-.04217135665833811,-.03693831566176801,-.3422156158175605,-.20400167508805764,-.3741711609707977,-.25039909487805356,-.07087453139452493,-.0569972852039487,-.06723820695040318,-.17397285212300442,-.20428337307808273,-.23651154356493315,-.3335649893327657,-.07339749754226077,-.703679598066816,-.8240368002159505,-1.6058616381755235,-1.6192427030685497,-1.5705638815427956,-1.4659201063980019,-.9550417954995102,-.9723752616273987,-1.0460191987834688,-.9146566894126572,-.6054823236139852,.01898438364933451,-.19419044456729498,-.03962785112430722,.0012357796666701798,-.07811082244532508,.004862636492025052,-.04044908966237959,-.0035054269587873454,-.1338754472473073,-.10031131456276647,-.2596867467568419,-.20555329767005767,-.26509289948725284,-.038788452621647145,-.07699989187225126,-.0716614330389765,-.14182240789719938,-.1654673053291095,-.19859450279267193,-.05338232636581037,-.2156585383674445,-.0450973572847935,-.6244981857994951,-.9262490674491722,-1.0411254782363617,-1.122035196738675,-1.0607692164246043,-.5772381177353403,-.6318773589638808,-.5481331120442192,-.5532025210173874,-.301972995874824,-.04721324975783839,.08280893046738329,-.06771513448322243,-.01022881748368659,.04203831125895655,-.06337176739998067,.029161890169972702,-.09139631658683613,-.003460073507075481,-.12424052925006424,-.244329964180121,-.265216641753595,-.22745980283820413,-.14361316535317664,-.0007590420310057794,-.02093616845786214,-.14205665196423617,-.19024248288823023,-.0796861223622452,-.15016133237735926,.049598910651295514,-.11760486834511712,-.1837522251545049,-.3859420549411461,-.5354251643699984,-.5734099173080799,-.5275362142401814,-.23151163972118355,-.2229509691994926,-.33704349161770436,-.26165852514054583,-.13898866968588663,.034596483191139484,-.012631210076789067,.04737131007634562,-.03865183933075155,-.001997076145443002,.0630488452583755,-.1124891762554399,.08556992539656616,-.210436590518682,-.19223333969456,-.3908299483003586,-.1929436800716272,-.4102559543993857,-.17178084419175166,-.010933041190555012,-.0895129361520745,-.21569610281495066,-.09144756671688016,-.19525258909505316,-.029753598134641936,-.021307245660079924,.02908712794055101,.03751129065309784,-.2060099012070584,-.26967580750352926,-.21000923681194664,-.2820901885828563,-.11925518789339556,-.24869348141289982,-.21025892926356746,-.15567029136726124,-.04054672910839591,-.00502661531005471,.030710887069787196,-.006110434024585828,.0369376092260571,-.05486266136790032,.013297880203253048,.19659447375886394,-.2499491329142558,-.06295969900286576,-.5305502909595601,-.38784811281629444,-.5389128507596239,-.41886712861154285,-.09923009726032588,-.16474199810952628,-.28693665642627014,-.00956679808502211,-.3261995499345093,-.08627491478166284,-.07325316175571477,.01563417403869033,.08244053654753179,.025411878261881942,-.11318909242737961,-.1270560226842935,-.21657212936164139,-.1399387354961119,-.3751027523762283,-.2647292311107622,-.24460131567533192,-.14127652303494026,-.05042868659104518,.04134784037419077,-.006178044515300064,.007399034521025015,-.01406273903701438,.14348925152561878,-.015321787554403667,.0017746672356015968,.2516513542736105,-.626463828190993,-.4816713433080564,-1.045863293770664,-.6951259178849319,-.44532127384388254,-.2847972402536839,-.3947095508731798,.2022722834472047,-.5390991207348895,-.12025629051789474,-.1899243750597305,-.04847480672159513,.06076477135322776,.09064815178251616,.09160820891269728,.0036582478916540977,-.2249253000526313,-.27295314658024766,-.3555973802525736,-.6290292501441295,-.57166411974881,-.3725889517312918,-.22157638610464933,.022494427132080854,.014769425415166171,.003526808789406817,-.011346909674078769,.05092117084834829,.09030854179921963,.37260817254533324,-.2590987139215991,-.42379280974334355,-.09538064780856813,-1.190608374889352,-.7859991441489247,-.9527791435273028,-.6365977835942234,-.9802601500895275,.481731982859161,-.6009200901805519,-.10265418316164113,-.39913639006279306,-.17310908908773887,-.0194191171632387,.05404796528917988,.1388529643463832,.15661099050146,-.10898263774416243,-.332912314567376,-.5956902786588871,-.6935308158494897,-1.0999707493347484,-.7439208475373669,-.4907478121415816,-.06519055673385296,.012289768389229717,.024577513704595676,.004030280469609632,.036047756292976456,.058236765637246286,.1389384625679062,.03694467603693463,.41686279554239464,-.8523228638818582,-1.298831512762498,-.4735277967730517,-.8176363254154679,-.7738445780362183,-1.425624000451928,.5258899353236068,-.8982172402290268,.1591911967653899,-.5504659677234687,-.3098001604127102,-.16709614007114884,-.046029700131955266,.04479326815042398,.1689242242845459,.14412365934528507,-.008825007131336736,-.3677854512466631,-.793938445177321,-1.1610479066529615,-.7652321000885066,-.630098580320484,-.13947023057344932,-.017173105577524262,.039030007688455846,.0144912730838054,.03979254294383725,.054072846696920814,.11729310469925348,.053609281522667675,.008154949871808708,-.3091081345284555,.25944224899607843,-1.3584842180322938,-1.5885570490138659,-.6575958279461822,-1.139869490652734,.7092826408059469,-1.9674198903133462,.37712664425406606,-.8433603839057895,-.47788074719428036,-.1834200008666372,-.18811394573901796,-.05505002764598565,.045043056834335606,.1148630355985436,.22023958716404868,.14735402009444676,-.27894427087198,-.7308053695312964,-.7679430569329723,-.37355919765840223,.12353986794322802,.09050534837631184,.14069908672094206,.08737321438027885,.023353946735568523,.03140055992039659,.07955023044620224,.08492716138218544,.04077715825534942,-.16274954314482293,-.41184413435479567,-.7187128882257487,.5530290745634285,-1.5309493464500674,-2.9026104205694736,.4204330359950835,-1.713810626479367,.295138882491271,-1.2517216433630918,-.6676994217651684,-.28576739334390183,-.24127777006787937,-.10778095858902549,-.03609242500919886,.021519213385077923,.13414694961717147,.16917378957839613,.17307922682581758,.07624675882901567,-.04790483513427262,-.27544262702406924,.6182624956656319,.269874231236934,.2085883517320696,.2607342621072197,.12070625812911842,.06294558209330968,.08364957391650543,.04968809534578587,.01956435760784307,-.04603581747659695,-.13409074070830324,-.4902720181429455,-.4775645732142016,-.7440367513542755,-.3080068432033089,-.04371243884270504,-4.735594317158907,-.043712438842706695,-.3080068432033096,-.7440367513542757,-.47756457321420304,-.49027201814294813,-.13409074070830412,-.046035817476598156,.01956435760784307,.049688095345786006,.08364957391650606,.06294558209331085,.12070625812911921,.2607342621072207,.2085883517320702,.269874231236934,-.3735591976583676,-.2754426270240343,-.04790483513427313,.07624675882901252,.17307922682581853,.169173789578395,.13414694961716844,.02151921338507657,-.03609242500919986,-.1077809585890261,-.24127777006787943,-.2857673933439015,-.667699421765169,-1.2517216433630949,.2951388824912743,-1.7138106264793713,.4204330359950768,-2.902610420569474,-1.5309493464500692,.5530290745634223,-.7187128882257502,-.41184413435479833,-.16274954314482265,.04077715825534866,.08492716138218645,.07955023044620314,.03140055992039842,.023353946735571576,.08737321438028138,.14069908672095732,.09050534837633403,.1235398679432393,-.7652321000884781,-.7679430569329614,-.730805369531285,-.27894427087197604,.1473540200944477,.22023958716404682,.11486303559854165,.04504305683433383,-.05505002764598645,-.18811394573901843,-.18342000086663854,-.4778807471942804,-.8433603839057915,.37712664425406617,-1.9674198903133469,.709282640805937,-1.1398694906527307,-.657595827946194,-1.588557049013867,-1.3584842180322987,.2594422489960773,-.3091081345284578,.008154949871808691,.05360928152266728,.11729310469925426,.0540728466969212,.03979254294383871,.01449127308380731,.039030007688458185,-.017173105577517028,-.13947023057343994,-.6300985803204511,-1.0999707493347308,-1.1610479066529467,-.793938445177313,-.3677854512466584,-.00882500713133401,.1441236593452856,.168924224284544,.04479326815042012,-.04602970013195615,-.16709614007115095,-.30980016041271097,-.5504659677234705,.15919119676539073,-.8982172402290286,.5258899353236033,-1.4256240004519327,-.7738445780362169,-.8176363254154656,-.4735277967730568,-1.2988315127625027,-.8523228638818583,.41686279554239525,.036944676036935756,.13893846256790574,.058236765637246675,.036047756292977066,.004030280469611113,.02457751370459911,.012289768389232913,-.06519055673384466,-.49074781214156804,-.7439208475373563,-.629029250144129,-.6935308158494856,-.595690278658883,-.3329123145673749,-.10898263774416028,.15661099050145985,.13885296434638142,.054047965289177706,-.019419117163239467,-.17310908908773912,-.39913639006279433,-.10265418316163986,-.6009200901805531,.48173198285915786,-.9802601500895259,-.6365977835942213,-.9527791435273002,-.7859991441489246,-1.190608374889349,-.09538064780857,-.4237928097433449,-.25909871392159683,.37260817254533357,.09030854179921953,.05092117084834837,-.011346909674079158,.003526808789408155,.014769425415168456,.022494427132082863,-.22157638610464575,-.37258895173129003,-.5716641197488066,-.37510275237622537,-.3555973802525706,-.2729531465802467,-.22492530005262792,.0036582478916564426,.09160820891269639,.09064815178251497,.06076477135322488,-.04847480672159565,-.18992437505973167,-.12025629051789351,-.5390991207348887,.20227228344720258,-.394709550873178,-.28479724025368247,-.4453212738438783,-.6951259178849327,-1.04586329377066,-.4816713433080586,-.6264638281909916,.2516513542736103,.0017746672356018336,-.0153217875544032,.14348925152561842,-.01406273903701487,.007399034521024359,-.00617804451529856,.04134784037419488,-.050428686591041855,-.1412765230349349,-.2446013156753272,-.26472923111076024,-.11925518789339257,-.13993873549610955,-.2165721293616384,-.1270560226842922,-.11318909242737903,.025411878261882927,.08244053654753017,.015634174038688685,-.0732531617557155,-.08627491478166197,-.326199549934509,-.00956679808502389,-.28693665642627003,-.16474199810952764,-.09923009726032403,-.4188671286115432,-.5389128507596231,-.3878481128162946,-.5305502909595622,-.06295969900286663,-.24994913291425488,.1965944737588636,.013297880203252755,-.054862661367901897,.03693760922605668,-.0061104340245862225,.030710887069788338,-.005026615310052167,-.040546729108393256,-.15567029136725916,-.21025892926356554,-.2486934814128962,-.2315116397211769,-.2820901885828492,-.21000923681193823,-.26967580750352416,-.20600990120705304,.03751129065309909,.029087127940549885,-.02130724566008323,-.0297535981346421,-.19525258909505444,-.09144756671688208,-.2156961028149504,-.08951293615207585,-.010933041190555782,-.17178084419175305,-.41025595439938806,-.19294368007162768,-.39082994830036216,-.19223333969456258,-.2104365905186827,.08556992539656708,-.11248917625543933,.06304884525837423,-.001997076145445627,-.0386518393307522,.04737131007634562,-.012631210076786959,.0345964831911426,-.13898866968588444,-.26165852514053983,-.33704349161769737,-.22295096919948695,-.5772381177353403,-.5275362142401814,-.5734099173080794,-.5354251643699987,-.38594205494114614,-.1837522251545064,-.11760486834511884,.04959891065129376,-.15016133237735926,-.07968612236224891,-.1902424828882312,-.1420566519642383,-.02093616845786258,-.0007590420310084487,-.14361316535317845,-.2274598028382093,-.265216641753595,-.2443299641801253,-.12424052925006639,-.003460073507076083,-.09139631658683596,.029161890169972428,-.06337176739998052,.042038311258955005,-.01022881748368659,-.06771513448322196,.08280893046738375,-.047213249757837236,-.3019729958748239,-.5532025210173874,-.548133112044219,-.6318773589638805,-.9550417954995029,-1.060769216424599,-1.1220351967386673,-1.0411254782363524,-.9262490674491646,-.6244981857994925,-.045097357284792555,-.21565853836744897,-.05338232636581171,-.19859450279267432,-.16546730532911214,-.14182240789720132,-.07166143303897729,-.07699989187225306,-.038788452621649434,-.2650928994872585,-.20555329767005678,-.2596867467568408,-.10031131456276626,-.13387544724730568,-.0035054269587865765,-.04044908966237997,.004862636492024128,-.07811082244532547,.0012357796666695618,-.0396278511243066,-.19419044456729473,.018984383649339364,-.6054823236139799,-.9146566894126499,-1.046019198783463,-.9723752616273926,-1.3057076652991049,-1.4659201063979992,-1.5705638815427927,-1.6192427030685486,-1.6058616381755215,-.8240368002159525,-.7036795980668187,-.07339749754226939,-.3335649893327653,-.23651154356493967,-.2042833730780847,-.17397285212300875,-.06723820695040342,-.056997285203952995,-.07087453139452611,-.25039909487805306,-.3741711609707976,-.2040016750880539,-.3422156158175576,-.03693831566176366,-.042171356658337315,.00705718946536539,-.07571749869863496,-.0669656864849772,-.25408021803022474,-.04334900441130162,.025934598230977574,-.2942382417321012,-.7400351866837027,-1.6161992336951192,-1.5357935460809593,-1.3642007878216427,-1.5169157844507262,-1.4332006785118279,-1.630157842292349,-1.932677889629856,-1.8694842425148879,-1.8503084663080056,-.5904048375141792,-.6560174703347134,-.40132058236311047,-.31836783196552787,-.32035624605031593,-.22965854401457814,-.08200020008302822,-.08902516330269802,-.06473239101891355,-.3036696794805129,-.4730230160625184,-.3797056039227587,-.19430407325814622,-.1797093251603995,-.06306970995727144,-.10088329756370083,-.09706087918479443,-.18018565146479387,-.19830827357221226,-.43479836723774673,.22038139379151372,-.2645739883891143,-1.79452817569422,-2.206203110930839,-2.102356658927595,-1.6930052820597257,-1.2756392437278008,-1.6712324532934884,-1.8237453905245253,-1.4884613952536252,-2.384654945418673,-1.5836466114968115,-1.4772075422260404,-.749509588811526,-.561795414852579,-.46670603976586306,-.3555582346088905,-.22514761090777982,-.18963405157839525,-.006854703392512414,-.05103668985052919,-.5356535944329562,-.48685989567066656,-.5780902167586235,-.3924098378001862,-.11286619230167973,-.12321821342876334,-.08979002287112711,-.13792125740417074,-.16098142942852883,-.301057483553083,-.18584599820379807,-.7599893679371835,-.8428129384777584,-2.1809972632688073,-2.879105394693035,-2.5682454610054237,-2.0983496132652038,-2.219376425173226,-2.3602336858020396,-1.4129529949598048,-.9534159393947887,-.38769722219534936,-2.260342212614477,-1.394644866167148,-.7766428172010335,-.6402842542962903,-.41856090178724664,-.3216120132349809,-.3360730432730346,.06562858246623078,-.09813633035547877,-.44979914971695495,-.822222574028781,-.391561438074338,-.3604588674139763,-.2900872185756239,-.03547210749813554,.027920290231535812,-.117989151853845,-.1892849156146684,-.25489431004647656,-.3625272253546275,-.30143411016838906,-.7524258340587202,-2.027175780678063,-2.263967374508654,-3.538324908586366,-3.361597106712324,-2.343880246691923,-1.7249706159518579,-1.7990472945779559,-3.3061472495599995,.21156442062862166,-.743023786689344,-1.8514918971041745,-.8250219837063265,-.7435199998826033,-.3956921579881928,-.3943138014933833,-.29890408748686254,-.28084584584372846,.01472791435408881,-.04442075186168376,-.5350001638458372,-.9018857723352869,-.6984497111751535,.14583567590324595,-.5544445310046473,.1976534820339324,-.18710828510427244,.007680087103749638,-.3280805050322698,-.17511899827005836,-.38519889843539723,-.2611655301498714,-.6179259082917326,-1.4260964500310052,-2.8480835086962,-2.9656385065341997,-3.1259631743419583,-2.2776462897026373,-1.3820969331049018,-2.0505291279591713,-2.408429802301388,-1.4996172161865962,.12372650763830863,-1.1981932989988076,-.6458889740799882,-.33546767337818667,-.36301254306387043,-.2619620808503318,-.176759023609821,.005563928130235761,-.034749316729180774,-.44871907432473696,-.6721525952110092,-.4600783329152383,-.6725433018260518,.11741827111366224,-.409871486550618,-.32892265898101625,-.1314555696102148,-.028899376452251727,-.09229861292456465,-.1667209502050334,-.17646388464205828,-.3513161729077252,-.1915002910490266,-1.22170023255872,-.7866727441045076,-1.980741571755196,-1.978633957921319,.06956047126920993],bottom:{real:[4103.3252596935745,31959.928439656338,10854.93487005055,5174.7646941682715,2670.3793024702013,1512.8812431609856,751.7211981350827,487.34157279751093,286.27976884850017,202.21445228809756,139.363320073941,96.32667662587427,67.41651339270402,55.03603936156373,42.61745504949191,37.32784123540667,35.19880020906027,37.32784123540659,42.6174550494918,55.036039361563766,67.41651339270402,96.32667662587428,139.36332007394108,202.21445228809804,286.27976884850017,487.34157279751093,751.7211981350829,1512.8812431609856,2670.3793024702018,5174.764694168275,10854.93487005055,31959.928439656363,12454.694619943468,7821.583390276555,5473.1790170642225,2925.2286142376206,1403.2127508507554,917.0553055607355,556.7335087890582,335.5815491134937,222.7562369115075,161.71079893305554,119.4497628246793,75.60900751432125,55.49608708093657,43.99882948912511,34.72502996512234,29.983374804996487,29.18733660878197,30.714909872552553,33.13572852856229,38.78004056055656,50.11926248444739,62.42660929674013,93.91676536356728,123.96413175241418,177.16967383039952,250.50030243800805,399.94920918463373,596.1485322845399,914.2463340693114,1871.621027127744,4518.422312124804,13565.815861293135,16084.742683461694,10028.519769850123,2736.2851033168113,1377.4551350842332,614.0817483175045,382.39730464420114,237.0105878631189,156.24359018004319,129.95938769710136,95.53783206710068,72.00409286489193,47.80430165384308,38.41781199466849,32.4520486224145,26.753427300507923,23.7729362481657,23.138404805980134,23.598476471031617,24.755859033283485,28.71332398916273,33.39553720167712,40.85058654989144,58.64988180671874,74.87296871197377,93.46512922636781,123.19419955144703,174.7570612705884,262.71291650117263,321.82068054258934,657.052536352664,2163.593226520231,10212.960963472207,3792.0213246064613,2759.3366542985627,1627.1011647050395,788.4497720201678,362.8509317865861,253.90720770691448,163.04342130809295,117.95146004773997,90.7661067039026,66.20774509684053,48.204553381452804,35.4292065515689,28.049881805648454,23.25027473117818,20.7789366420614,19.004228801577,17.585642163629327,17.6981813264345,18.806836162280465,20.329571180523736,23.456998427374465,27.472702254518477,37.19312003574272,49.11725258408396,59.57482901261523,73.59994664128709,112.97176733843995,181.91972084309376,284.0343016488693,486.2964820369405,857.0528785536101,2037.977143592303,2057.7285052573056,2152.595270625315,1395.1090523951752,736.2529768000007,343.98700964912916,189.68478304615005,127.37774106216496,91.12789293157843,73.66725513376396,55.964360327653644,39.48256704253295,28.14219415335706,21.278934963706885,18.193385040510105,16.473354788100497,15.086583853495943,14.403945056404867,14.533202056236952,15.306988390608382,16.092687824041843,18.097466979870337,20.289280537832838,26.201109009342694,34.023571220637564,41.620492531599325,50.685682074964014,82.56070198163133,127.19888958323958,237.89761616945128,410.06312322518994,1062.2303232610248,1612.0404058137353,2295.1409914972487,1787.3905923922546,1192.2295048012345,614.2488252588063,260.82616895243024,126.23242010647614,84.15107628881098,67.70941499278271,60.1225715594723,42.830591238304876,28.733103940874788,20.365121706656215,16.211112474155353,14.072758594539286,13.483685068827034,12.859628868618824,11.868475605254234,11.903201306554562,12.816996745648828,13.065794209061782,14.312459824747068,16.296926608708432,20.657711991677495,27.65339007023543,33.59311041396786,40.672720076575544,55.85662461850217,103.16047843117397,179.23484372919035,453.7513605151255,902.2628504825688,1683.7179352249004,1784.083505146898,1577.4265763170067,936.6630912289419,441.2089233758718,176.43359667751182,98.09397174153568,65.99594469503664,53.24029570749545,45.85166507919449,32.40748535978308,22.496202298890402,16.9656137144178,13.731573445856062,12.28236966845588,11.747735381447885,11.213125876643861,10.807806034266576,10.840341477375139,11.066245600125107,11.119452781179984,12.424913044930788,14.61002755646222,16.887227742677396,22.29462391228396,27.97815738132312,31.99125039297179,44.05265888187653,76.10956832779837,159.13944268405785,318.3920712827857,686.0032317807187,1336.6568589814267,1043.0649603599104,984.7874618280729,618.0395600950327,289.32426118556657,132.98214831862998,71.52004843088118,52.57629039600819,41.525598741467476,33.63391272281399,27.03125566244968,19.489513580793098,14.812681614273632,12.21137274400836,10.893625186679536,10.482989068673637,10.105487112246305,9.711689924381735,9.948806980482882,10.161347795217756,10.513274350469635,11.294150924355744,12.914730156139361,14.478861048855546,19.021661277112585,23.907610167423496,27.23573455134931,38.74297641398302,62.86922312590263,111.92503010834605,213.21062569137553,433.61330953226366,726.7026984582077,562.2186141052522,539.290746631297,362.9446461846826,211.46669660189423,107.79772661917396,60.67666837556757,41.743276533116536,34.42369696468284,31.26708433258414,25.313030406949355,18.452791878453507,13.956644256748325,11.043046695375654,10.111101652499672,9.455036044447306,9.242959346939653,8.952191122239926,9.232112416401021,9.190804166916982,9.566282735322787,10.506864865879585,11.825879962774797,13.52813582962821,15.999059082232355,19.794027285196304,22.4788452877151,32.16327238486775,47.951984523863096,81.30924286665513,150.93744536633105,263.8463052599166,439.2795103319926,309.78719189559973,306.63257299287005,244.19689848939953,151.98869039704036,91.33048200427616,57.35275332201335,38.70916070606743,33.08708644900138,29.826655436967027,23.987725148031473,16.89184234468231,13.041947079601194,10.535809562752126,9.535947162168391,8.937448349685543,8.567264312291233,8.457273589565943,8.46028044009711,8.55434575263303,9.382376333669994,10.37723041770863,11.799673812944503,12.361176855966248,14.786798351390814,16.739331260686697,20.5901480313592,25.753571174908508,38.3828930678668,63.23013835373618,105.62437218489313,175.68359833526657,256.05708017959813,224.80770864957879,228.96753655549054,172.54966320095522,116.2654682194649,80.46990226978717,53.84433487661021,37.483534347728245,31.075867215997253,26.284110672635684,20.645029038002825,15.025930043703783,11.738276392873866,10.201438772469425,8.820344522727998,8.494550985699536,8.19687284093449,8.179077730441959,7.908377156922052,8.678547729507404,9.647371515689038,10.339435934253908,10.728035799158873,11.983620383388951,13.687783504221503,16.433795900162693,18.309125668572698,22.485075799802843,31.76468437638305,49.270779583367755,77.72985195627992,123.50059845139852,179.77043479461938,159.57955623939222,154.5332986938033,127.96891349444883,91.96783661678981,66.92174464641701,48.818287955893446,36.59106165352678,27.834277069623926,23.04190215218159,18.3587138942453,13.567338391039883,11.281789781943191,9.60382954556472,8.733327756377252,8.338123667351045,7.899208806186968,7.710432242677591,7.998386998564103,8.543643849090227,9.443215884480004,9.787034441091842,10.423788563863184,11.253535869282553,13.327727562718719,15.178485067808285,17.337135682195893,21.668177060872456,29.324826866357235,41.49275321863635,60.042185621507166,90.31813491621534,130.8805255687621,104.24612656823803,108.8028525877362,89.55574556015725,69.78566957523967,56.746590174428,44.171218069814536,32.39838941697333,25.18225275923646,21.610810960419155,16.972539478480535,13.238333358456819,10.614964653675054,9.380692794630786,8.749281483242108,8.135298996501481,7.634398163782139,7.485286988947929,7.8316993609624435,8.385395741527464,9.231574230561463,9.838944162951421,10.386606043801919,11.354519695989614,13.10793814373473,15.240615596988986,17.58979203150065,21.461767190818147,26.661531554562984,36.12333702897858,50.32073186927438,69.0656097199978,87.4422608573542,76.67764327657595,72.68914763671407,65.50785565022079,58.29765840635796,49.55859874114894,39.192968104211104,29.954333787314212,23.9458863540046,19.99476230299754,16.735792774046942,12.901585018586687,10.289994503175569,9.397776582267992,8.670419628780323,7.8828328381527575,7.534147883901947,7.43129292000411,7.798515976625768,8.186906091241408,9.142118635191288,9.830770779287306,10.340589147553608,11.281171263863113,12.984935438318947,15.107976469419242,18.19770629294057,20.668346478928893,25.76149613251493,32.2514242661345,39.95295492008993,51.36943807862585,65.56929956266247,55.46884946872952,55.86542097352833,55.10113878297366,50.53184836867472,43.70147053696678,35.86638144085743,28.439396618258566,22.42863349391925,18.94503035808276,15.596977301337661,12.206893729284205,10.050508612628137,9.547393948232287,8.646327628083018,7.910774588392556,7.275551408966156,7.5482842032534565,7.544387941964139,7.96361878033256,8.992201544757735,9.635199784998907,10.0402383165895,11.706284711344862,13.336194440398188,15.639893484781382,17.791763978880017,20.83131115781941,25.6818621728188,31.387128642704546,37.14316604955522,44.038766386780296,52.90450693740585,48.059389050535145,50.072432061388255,49.11501031551525,44.16042346883115,38.44095318130842,32.35840674752788,26.251111011761232,21.08192257046498,17.515101530242855,14.10261621013594,11.438986216849498,10.422223192105227,9.76207732514108,8.774631916934416,7.5939451837729885,7.260594980680288,7.476691949602524,7.419064545103371,8.018735722916306,8.926634451217284,9.69756437118481,10.35689464395745,11.451859179394017,13.10319606057651,15.460942026724263,18.825021564083144,22.773162722002358,26.906890973713775,31.803276985208164,37.82902190094245,42.388788349798304,44.62010567979956,48.85927778095382,46.13611029220518,41.908361785717766,39.52102274454999,35.05229493371635,29.18134316630342,23.802472557875006,19.95574653975907,16.22743816874862,13.086681034223906,11.226909204888067,10.616041272149978,9.83854928426482,8.656300584619567,7.8952678290472065,7.276214992565685,7.309404620848296,7.276214992565686,7.895267829047208,8.656300584619574,9.838549284264822,10.61604127214999,11.226909204888063,13.086681034223904,16.22743816874862,19.955746539759044,23.80247255787499,29.181343166303414,35.05229493371636,39.52102274454999,41.908361785717766,46.13611029220517,48.05938905053505,44.620105679799494,42.388788349798226,37.82902190094255,31.803276985208186,26.906890973713825,22.77316272200237,18.825021564083173,15.460942026724263,13.103196060576508,11.451859179394024,10.35689464395744,9.69756437118482,8.926634451217275,8.0187357229163,7.419064545103367,7.476691949602523,7.260594980680292,7.593945183772996,8.774631916934418,9.762077325141082,10.42222319210523,11.438986216849505,14.102616210135931,17.51510153024284,21.08192257046497,26.251111011761218,32.358406747527845,38.44095318130838,44.16042346883106,49.115010315515164,50.07243206138801,55.46884946872923,52.90450693740565,44.03876638678024,37.143166049555234,31.387128642704567,25.681862172818796,20.831311157819414,17.79176397888002,15.639893484781378,13.336194440398192,11.706284711344864,10.040238316589498,9.635199784998912,8.99220154475773,7.963618780332553,7.544387941964129,7.548284203253456,7.275551408966155,7.910774588392558,8.646327628083021,9.547393948232287,10.05050861262814,12.206893729284213,15.596977301337661,18.94503035808276,22.42863349391924,28.439396618258566,35.86638144085739,43.70147053696676,50.531848368674645,55.10113878297363,55.86542097352813,76.67764327657582,65.56929956266234,51.369438078625784,39.95295492009,32.251424266134514,25.76149613251495,20.668346478928903,18.19770629294057,15.107976469419244,12.98493543831895,11.28117126386311,10.340589147553612,9.830770779287295,9.142118635191292,8.18690609124141,7.79851597662576,7.431292920004107,7.5341478839019365,7.882832838152761,8.670419628780317,9.397776582267994,10.289994503175565,12.9015850185867,16.735792774046928,19.99476230299755,23.945886354004585,29.95433378731421,39.19296810421109,49.55859874114887,58.297658406357826,65.50785565022066,72.68914763671383,104.24612656823788,87.44226085735421,69.06560971999775,50.32073186927437,36.123337028978554,26.661531554563005,21.461767190818144,17.589792031500657,15.24061559698899,13.107938143734735,11.354519695989618,10.386606043801917,9.838944162951416,9.231574230561453,8.38539574152746,7.831699360962437,7.48528698894793,7.634398163782137,8.135298996501476,8.749281483242111,9.380692794630788,10.614964653675061,13.238333358456819,16.97253947848054,21.610810960419155,25.182252759236462,32.39838941697333,44.171218069814465,56.74659017442797,69.78566957523961,89.55574556015718,108.80285258773613,159.5795562393919,130.8805255687619,90.31813491621534,60.0421856215072,41.49275321863639,29.32482686635726,21.668177060872456,17.3371356821959,15.178485067808294,13.327727562718726,11.253535869282553,10.423788563863175,9.787034441091842,9.443215884480002,8.543643849090223,7.998386998564096,7.710432242677589,7.89920880618696,8.338123667351045,8.733327756377253,9.603829545564714,11.28178978194319,13.567338391039879,18.358713894245295,23.041902152181613,27.834277069623926,36.59106165352677,48.81828795589338,66.92174464641698,91.96783661678955,127.96891349444861,154.53329869380323,224.80770864957842,179.77043479461912,123.50059845139837,77.72985195627996,49.27077958336772,31.764684376383045,22.485075799802868,18.309125668572733,16.433795900162703,13.6877835042215,11.983620383388955,10.72803579915886,10.339435934253904,9.647371515689025,8.678547729507397,7.908377156922045,8.179077730441955,8.19687284093449,8.494550985699535,8.820344522727986,10.201438772469423,11.73827639287387,15.02593004370379,20.645029038002832,26.28411067263568,31.075867215997253,37.483534347728245,53.84433487661013,80.46990226978717,116.26546821946468,172.54966320095502,228.96753655548974,309.78719189559854,256.05708017959756,175.68359833526623,105.62437218489312,63.23013835373606,38.382893067866796,25.7535711749085,20.590148031359234,16.739331260686704,14.786798351390802,12.36117685596625,11.799673812944498,10.377230417708628,9.382376333669995,8.55434575263302,8.4602804400971,8.457273589565942,8.567264312291222,8.93744834968554,9.535947162168387,10.53580956275212,13.041947079601202,16.89184234468233,23.987725148031487,29.826655436966995,33.087086449001376,38.7091607060674,57.35275332201325,91.33048200427605,151.98869039704,244.1968984893988,306.63257299286875,562.2186141052522,439.2795103319928,263.8463052599166,150.93744536633125,81.30924286665515,47.95198452386317,32.16327238486775,22.47884528771512,19.794027285196304,15.999059082232373,13.52813582962822,11.82587996277479,10.50686486587958,9.566282735322787,9.190804166916978,9.232112416401021,8.952191122239926,9.242959346939646,9.455036044447304,10.111101652499666,11.043046695375656,13.956644256748326,18.452791878453535,25.31303040694941,31.26708433258414,34.42369696468283,41.74327653311653,60.67666837556751,107.79772661917396,211.46669660189391,362.9446461846827,539.2907466312969,1043.064960359907,726.7026984582062,433.6133095322625,213.2106256913756,111.92503010834588,62.869223125902685,38.742976413983,27.235734551349324,23.9076101674235,19.021661277112635,14.478861048855546,12.91473015613936,11.29415092435573,10.513274350469626,10.161347795217747,9.948806980482875,9.71168992438174,10.105487112246305,10.48298906867363,10.893625186679529,12.211372744008356,14.812681614273641,19.489513580793123,27.031255662449723,33.63391272281395,41.52559874146754,52.57629039600815,71.52004843088102,132.98214831862995,289.32426118556515,618.0395600950308,984.7874618280689,1784.083505146894,1336.6568589814267,686.003231780718,318.39207128278593,159.1394426840578,76.10956832779843,44.05265888187656,31.991250392971853,27.978157381323108,22.294623912284028,16.8872277426774,14.610027556462216,12.424913044930783,11.119452781179971,11.066245600125109,10.840341477375128,10.807806034266576,11.213125876643852,11.747735381447885,12.282369668455885,13.73157344585606,16.96561371441783,22.496202298890438,32.407485359783124,45.85166507919449,53.24029570749542,65.99594469503667,98.09397174153547,176.43359667751176,441.208923375871,936.6630912289413,1577.4265763170022,2295.1409914972464,1683.7179352249,902.2628504825688,453.7513605151263,179.23484372919026,103.16047843117398,55.856624618502074,40.67272007657553,33.59311041396785,27.65339007023547,20.65771199167747,16.296926608708404,14.312459824747059,13.065794209061782,12.816996745648842,11.903201306554557,11.868475605254236,12.859628868618808,13.483685068827036,14.072758594539282,16.21111247415536,20.36512170665626,28.733103940874788,42.830591238304876,60.12257155947228,67.70941499278264,84.15107628881094,126.23242010647601,260.82616895243,614.2488252588045,1192.2295048012338,1787.3905923922525,2057.728505257306,1612.0404058137367,1062.2303232610243,410.0631232251907,237.8976161694511,127.19888958323968,82.56070198163133,50.68568207496404,41.620492531599325,34.0235712206376,26.201109009342684,20.289280537832823,18.09746697987034,16.092687824041846,15.306988390608383,14.533202056236956,14.40394505640487,15.08658385349593,16.47335478810048,18.1933850405101,21.278934963706888,28.14219415335708,39.482567042533006,55.964360327653644,73.66725513376396,91.12789293157849,127.37774106216477,189.68478304614982,343.98700964912905,736.2529767999998,1395.109052395176,2152.5952706253147,3792.021324606458,2037.977143592301,857.0528785536089,486.29648203694126,284.03430164886925,181.91972084309373,112.97176733844,73.59994664128712,59.574829012615204,49.11725258408404,37.19312003574272,27.472702254518456,23.45699842737447,20.329571180523697,18.806836162280476,17.698181326434526,17.585642163629327,19.004228801577025,20.77893664206141,23.250274731178163,28.04988180564844,35.429206551568925,48.20455338145283,66.20774509684051,90.7661067039026,117.95146004774013,163.04342130809306,253.9072077069139,362.850931786586,788.4497720201659,1627.1011647050398,2759.3366542985605,16084.74268346169,10212.960963472211,2163.5932265202296,657.0525363526643,321.82068054258923,262.71291650117286,174.75706127058845,123.19419955144714,93.46512922636784,74.87296871197394,58.64988180671873,40.850586549891496,33.39553720167711,28.713323989162756,24.75585903328349,23.59847647103166,23.138404805980127,23.77293624816566,26.753427300507926,32.45204862241451,38.4178119946685,47.80430165384316,72.004092864892,95.53783206710088,129.95938769710136,156.24359018004333,237.01058786311899,382.3973046442005,614.0817483175048,1377.4551350842296,2736.2851033168104,10028.51976985012,12454.694619943462,13565.815861293133,4518.422312124801,1871.6210271277425,914.2463340693118,596.14853228454,399.9492091846334,250.50030243800833,177.16967383039946,123.96413175241405,93.91676536356745,62.42660929674012,50.119262484447404,38.78004056055657,33.13572852856233,30.714909872552628,29.187336608781973,29.983374804996448,34.725029965122346,43.998829489125086,55.49608708093662,75.60900751432128,119.44976282467937,161.7107989330556,222.75623691150756,335.5815491134934,556.7335087890583,917.0553055607353,1403.2127508507556,2925.2286142376206,5473.1790170642225,7821.583390276545],imag:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},imag:[0,1.2364045139795619,-1.417097645517349,-.563991130501104,.4461220475293454,-.22857396866743723,-.12233724123958876,-.2217506337025343,-.08184765447899214,-.0821445284202198,-.016319194688300422,-.2278226981680879,-.31553723757062957,-.3462773758278895,1.228987349434353,.2371473197924402,0,-.2371473197924659,-1.2289873494343397,.34627737582788415,.31553723757063035,.2278226981680877,.01631919468830003,.08214452842021792,.08184765447899214,.22175063370252604,.12233724123959235,.22857396866743548,-.4461220475293452,.5639911305011042,1.4170976455173483,-1.2364045139795607,1.3606412475160685,1.4411916754234004,-.3363973770718067,-.400592898897314,.07786945045374206,.11933000679564014,-.37020072416606636,-.12600631152419078,-.2929172313060311,-.05068339188231875,-.2123566898458312,-.16517843825664788,-.3743892093980239,.24863698196016526,.3956337373323095,.6330846638456997,-.4264395724952261,-.28749903579454716,-.4230156803297583,.2797162376269552,.37808744252168813,.15296582393741,.10558339349178479,.08813592215903832,.16705843369252343,.44192642538865684,.2991522518142107,-.047649837051313024,-.9104604552681237,2.0668504460046964,1.0236217631956717,.09577502733112331,.7432738853191639,-.03456213195457008,.8636112375382173,.14688086473050152,-.480409603699644,.725531558693561,-.8786532261255596,-.4386512882244577,-.4857318707028599,-.32017932907631874,-.2830749986604581,-.26990648117356825,.02650526715020339,.07048596936827395,.5437098167860802,-.06793846381419581,.03776680164210118,-.5672727000472354,.7031723596162832,-.02113335643666033,.3877841945469715,-.021237638325898506,.22272564345822293,-.028529610958430065,.3838911656921847,.5401519230094508,.6089048453513496,-.5885198019984432,-.4425799571579083,-.3105478087846587,.29452233058397137,1.420373052298152,.5504297333386854,1.0635980503754177,-.3322328231573132,.34444399750770754,1.481298784591465,.2820348699677993,-.5064081488092492,-.6315271726552403,-.629560147993244,-.381439099170168,-.2602400449478186,-.19111004712688462,-.0074049384249937926,.04814578185161191,.1775395908501845,-.010766872600667563,-.3055754310904166,-.1279044678178969,.26497067484017217,.49718432792560446,.10847923107858634,.1836279844437401,.07579332872568043,.06091583791907436,.19352569039908019,.7248413105946724,.4476986361937191,.6572778182386981,-2.7705947112358387,-1.8545676439466314,1.253480431944275,-.3320127176659218,-.8817924518615257,-.49191197464707653,.25061306335904526,.36434278784189494,1.1059306596340364,.5161851914994362,-.5625934272912334,-.7981852522367001,-.5061427531741151,-.3345019295861077,-.24220392956380443,-.2936321736893144,-.008975674876931768,.015702042401798396,.004328761309678161,.11769772351691517,.14847974776257877,-.07040420542590121,.15992872157624444,.12352253662711207,.22950814490677918,.17507285276321555,.13747467644410705,-.011397583876153142,.1103654239578318,.24404333943616102,1.1434123865171273,-.6056618650285197,-1.3365493166122577,-1.133825005706898,-1.8155993788135394,-1.0591766157447149,-.6901024725301684,-.4661262670583974,-.20353239335470796,.5166385012265062,.2659701357580968,-.10657803670351902,-.6973013864661958,-.6010674473512339,-.335428005062553,-.3056428917979951,-.2667283201489782,-.19552146385155383,-.07081825322981734,.24716165183995586,.2487100107308503,.08790627274965952,-.06639276489870762,.11463822183417864,-.0973871145489355,.203187369929616,.14292038700683402,.20736891492564988,.013685307258532538,-.024371827339033106,-.07233585420108031,.49291782026044645,.048917424863979306,.2263553910474094,.10839909954530379,-1.1957108711898896,-1.074771579950879,-1.1175823884839045,-.23901621577757862,-.12877260884038383,.23623861798820722,.17111767858219226,.4620869054676118,-.23679486634226876,-.5317886241837987,-.34021620386249335,-.23658495591681358,-.22275756609764855,-.20572232603908905,-.1449473312771276,.04256966078595399,.07773307076521871,.20558191361174552,.03171963561705125,-.031869312918226284,.00924466716916557,.05690796487103113,.006811401556527948,.20608602740074444,.023033890597355222,.06494462602113064,-.08971160087534784,.051877409795188095,-.22207073062343796,.2424827691685977,.8293224240232046,-.0013771249391571728,-.05913901763736715,-.220679259578907,-.040068334939789486,.3067700518158289,.3449025548727411,.2222188244136875,.30818729583490434,.04165627319971488,.04389672863559383,-.30032839778423015,-.2424624650890286,-.178099692406481,-.14126159805998126,-.15553553242798068,-.11510723629505018,.024565620333015844,.09932497386133324,.11314958231531824,.10920785431914558,-.002747867764731495,-.002197448124614016,-.0699406561715515,.1465617772621658,.07877018936108643,.10241250352514093,-.021646587213105684,.019211160710794505,-.26281055993233693,-.05514681914050946,.35375643597531126,.22411418130009836,.3875457037899096,.25423051056794166,.30581901500051717,.08591146266209009,.39107302489471046,.24699055160378858,.29387297238508514,.15373347718831995,-.002984582508486469,-.01726020797163449,.0728272552276582,-.06208913525822485,-.11929552297831249,-.14454547803177953,-.09526826450768199,-.10089614648569632,.048761457544342565,.09609679137720413,.10529567915508571,.012037966893712556,.07634310058801329,-.20546035926376272,.13459193297647368,.025732944443593878,.15693288111736364,.04376164797318158,.08347929962968435,-.15251693996845875,-.10657849804550705,.03864181635108452,-.10231188547257405,.21957600785318707,.264774413728534,.35686545376814865,.2942848550600693,.4993413545698925,.1828568991437829,.23675610338446562,.10353827744151976,.06310794909144525,.03846587209017991,.136617176259979,.09812275535485428,-.003990620093458214,-.09009439550122221,-.16647262366552176,-.19237746196753996,.02664719406199056,.04850938386374907,.1654716680991411,-.03591479523938604,.09927373929001723,-.11264804489487676,.14792025966567318,-.09379152614028652,.10021979561886898,.008044972903133957,.2539938219386156,-.10951630791791984,-.03354812223332894,-.024275040060575473,-.15565555640319179,-.035231426543991154,.06348517358735144,.22814734409189322,.10684932807789806,.2355554633425988,.10407564589066262,.015525256999673128,-.011913601076877599,-.003929592004374066,.04470159355949418,.16547295203389104,.15907957720488838,.07466463078185209,-.04243906497357175,-.11246394245376416,-.1697242715154008,-.2153029085609272,-.1519575050165171,.40553391670472716,-.05507255324487554,.18488826926783164,-.03502892748503212,.3700138711951932,-.15325722566754377,.2716892969482076,-.05970121628039784,.48380889084850937,-.13017614472815323,.04767342132995452,.07130558425889642,-.15733503034508964,-.07959356603951166,-.07548582078045694,.06620598245919887,-.0012785498169557718,.06382739270218783,-.0024400785561267094,.050942947866382475,-.16777938781510365,-.09287604949663145,-.010378011540593757,.1594331602275639,.19523869399925237,.18464942262011227,.06328512198243717,-.07722165855118322,-.1491589460269398,-.17912928670535297,-.11490318286815507,-.11189726101521234,-.20487634390276235,.7649837592101456,-.23800865420158882,.7408363358679637,-.08384674801899719,.46372256496136105,-.1683495959766098,.8086039606875512,-.25555617026146216,.19463913189037535,.3009779498087988,-.16302064990391507,-.10690976611351247,-.13497815095121923,-.04977220128469868,-.07945189422396105,.04040760416145534,-.09194915079908203,-.14731166465811507,-.2649992211995451,-.15560186997026057,-.06949686732786686,.16530147427910571,.22324548858793775,.26718136730575287,.1916641951249017,.06093692301766854,-.08862623473412004,-.14658150061325853,-.1598833096185107,-.18630425886720847,.20226767939927157,-.0861423758749425,-.7776631130885305,1.4090153420038987,-.3038886842868152,1.2888777036518135,-.07447075817772283,1.2482190395029773,-.80123249840126,.47055407026248136,.7557719984574562,-.11037652666672627,-.05445836926306743,-.1991810754488677,-.10899116252888987,-.15332031366957818,.04365448634854576,-.022154991408309264,-.1523944889888934,-.19372066727324463,-.023769000914279543,.24457812931884867,.5172290601462988,.4305115414461968,.4535547011943914,.3493581281435395,.2107669845089832,.06395623914002005,-.043266091906771414,-.12307402164456596,-.17588597679362872,-.05716033563257766,-.0784239564694168,.14377922602722487,-.28610637890062873,-1.3867297053543113,2.707602155025657,-.12637740826622818,2.0046873376560574,-1.442367549533677,.4151690191416874,1.1637625900709285,.02187980097289477,.2119473473283329,-.11885489129254229,-.1159981397382039,-.1889926920183694,-.058557612447368006,-.043992442353640485,-.026879139952720663,-.0192982065162415,.11425895652801879,-.10204731321609413,1.0976378910336273,.7808329817202355,.7892686156410853,.6558593420029429,.41963945036689065,.2149537780289469,.10907743849349204,-.015003791740152183,-.0981083523247832,-.09998346191476838,-.14074054993981988,-.04922222307913471,-.6022563234411543,.1482255131870283,-.20779420774376042,-2.0348285284263787,4.025186119425146,-2.7420491756647705,.8073118378409511,1.5256751899261984,-.015777910213839702,.5648106146365885,.09474509067016074,.03230544111585742,-.15496296066268442,-.07089892296474551,-.15185446167165811,-.09901337883732231,-.03383919809283262,.20170996830425536,.31395340400286426,.9180493845319551,.9083748013224733,1.1212514777242175,.8111537128593137,.6546125277251835,.4481201828101785,.2933813386224918,.08094250654372658,-.004887613580663216,-.04204543783114793,-.048279129686226115,-.13748504879992385,-.22867414001479172,-.6520602138291955,-1.4414816884582773,.3490015618927237,1.2663064061664397,-4.451906943808227,2.3981175155339263,2.0366543361516527,-.11574419894478603,.9938253915317542,.4025305949854213,.2978752123577735,-.04812880127462812,.001834095689180732,-.06357806485663896,-.1491109787327997,-.17638384543546787,-.15061392115741762,-.13638564133647435,.3292785127452974,.4564601274895542,0,-.09838020244848457,.2889284460821786,.3998138477400701,.45036129401449043,.22152969012775114,.11073273247786891,.024117745722163984,-.005028012954253469,-.08710696057267951,-.08365344819547284,-.5152142695871454,-.8612426220912759,-.7893985113030451,-.7442322593539389,-1.1208061672534484,0,1.1208061672534437,.7442322593539381,.7893985113030426,.8612426220912766,.5152142695871439,.08365344819547249,.08710696057267933,.005028012954253469,-.02411774572216354,-.11073273247786865,-.22152969012775126,-.45036129401449054,-.39981384774006945,-.2889284460821784,.09838020244848424,-.9083748013224145,-.4564601274895271,-.32927851274525655,.13638564133649642,.15061392115742586,.17638384543547556,.14911097873280194,.0635780648566394,-.0018340956891807838,.04812880127462774,-.2978752123577729,-.40253059498541977,-.993825391531751,.11574419894478773,-2.0366543361516536,-2.39811751553392,4.451906943808238,-1.2663064061664346,-.34900156189272086,1.441481688458285,.6520602138291958,.22867414001479336,.13748504879992438,.04827912968622815,.042045437831148495,.004887613580664909,-.08094250654372509,-.2933813386224868,-.44812018281017507,-.6546125277251672,-.8111537128592801,-1.1212514777241573,-1.0976378910335893,-.9180493845319213,-.31395340400284805,-.2017099683042456,.033839198092839695,.09901337883732686,.1518544616716597,.07089892296474593,.15496296066268506,-.032305441115858605,-.09474509067015939,-.5648106146365897,.01577791021384034,-1.5256751899262007,-.8073118378409491,2.742049175664779,-4.02518611942514,2.03482852842639,.20779420774376556,-.14822551318702654,.6022563234411564,.04922222307913573,.14074054993982205,.09998346191477035,.09810835232478354,.015003791740153814,-.10907743849349157,-.21495377802894516,-.4196394503668887,-.6558593420029402,-.789268615641069,-.7808329817202074,-.24457812931883488,.10204731321609872,-.11425895652800651,.019298206516249916,.026879139952725083,.04399244235364598,.058557612447370934,.18899269201837068,.11599813973820411,.11885489129254237,-.21194734732833254,-.02187980097289353,-1.1637625900709312,-.4151690191416833,1.4423675495336772,-2.0046873376560503,.12637740826623128,-2.7076021550256497,1.3867297053543175,.2861063789006335,-.143779226027226,.07842395646942202,.05716033563257912,.1758859767936318,.12307402164456618,.04326609190677271,-.06395623914001951,-.21076698450897985,-.3493581281435364,-.4535547011943848,-.4305115414461896,-.5172290601462894,.15560186997025938,.02376900091427863,.1937206672732435,.15239448898889424,.022154991408310377,-.043654486348542874,.15332031366958024,.10899116252889095,.1991810754488677,.054458369263066984,.11037652666672665,-.7557719984574531,-.4705540702624809,.8012324984012641,-1.2482190395029769,.07447075817773094,-1.2888777036518133,.3038886842868241,-1.4090153420038936,.7776631130885349,.08614237587494372,-.2022676793992712,.1863042588672104,.15988330961851227,.14658150061325848,.08862623473412022,-.060936923017667906,-.19166419512490052,-.26718136730575015,-.22324548858793625,-.16530147427910316,.06949686732786675,.16777938781510615,.2649992211995447,.14731166465811715,.0919491507990829,-.04040760416145386,.07945189422396387,.049772201284700876,.13497815095122018,.10690976611351256,.16302064990391416,-.3009779498087981,-.19463913189037552,.2555561702614637,-.8086039606875491,.16834959597661264,-.46372256496135666,.08384674801899664,-.7408363358679616,.23800865420159104,-.7649837592101448,.20487634390276502,.11189726101521356,.11490318286815554,.1791292867053549,.14915894602693922,.0772216585511834,-.06328512198243683,-.18464942262010964,-.19523869399925042,-.15943316022756263,.01037801154059478,.09287604949663382,-.015525256999667727,-.050942947866376924,.0024400785561280833,-.06382739270218761,.0012785498169549515,-.06620598245919762,.07548582078045817,.079593566039512,.1573350303450895,-.07130558425889703,-.0476734213299555,.13017614472815361,-.48380889084851014,.05970121628039872,-.27168929694820493,.1532572256675474,-.37001387119519286,.03502892748503371,-.18488826926782947,.05507255324487735,-.4055339167047277,.15195750501651886,.2153029085609278,.1697242715154005,.11246394245376394,.04243906497357169,-.07466463078185144,-.159079577204887,-.16547295203388937,-.04470159355949411,.003929592004374638,.011913601076878649,-.1828568991437799,-.10407564589066134,-.23555546334259525,-.10684932807789757,-.22814734409189458,-.06348517358734926,.035231426543992535,.15565555640319106,.02427504006057549,.03354812223332628,.10951630791791925,-.2539938219386176,-.008044972903134084,-.10021979561886678,.09379152614028896,-.14792025966567243,.11264804489487593,-.09927373929001457,.03591479523938799,-.1654716680991405,-.04850938386374761,-.02664719406199113,.192377461967541,.16647262366552154,.09009439550122157,.003990620093459625,-.09812275535485344,-.1366171762599761,-.03846587209018027,-.0631079490914464,-.10353827744152141,-.2367561033844639,-.39107302489471046,-.4993413545698927,-.2942848550600695,-.35686545376814893,-.2647744137285342,-.21957600785318782,.10231188547257429,-.038641816351083894,.10657849804550705,.15251693996845886,-.08347929962968535,-.043761647973181945,-.1569328811173635,-.02573294444359092,-.13459193297646968,.2054603592637699,-.07634310058801329,-.012037966893705314,-.10529567915508307,-.09609679137720112,-.048761457544342024,.10089614648569795,.0952682645076824,.14454547803178003,.11929552297831249,.062089135258225896,-.07282725522765716,.017260207971635976,.0029845825084865137,-.15373347718831978,-.29387297238508514,-.24699055160378858,-.3067700518158321,-.08591146266209564,-.3058190150005192,-.25423051056794305,-.3875457037899132,-.22411418130009808,-.3537564359753084,.055146819140510416,.2628105599323362,-.019211160710796572,.021646587213104713,-.10241250352514171,-.07877018936108618,-.14656177726216213,.06994065617155748,.002197448124624663,.002747867764730379,-.10920785431913549,-.11314958231531393,-.0993249738613295,-.024565620333014605,.11510723629505158,.15553553242798132,.1412615980599799,.1780996924064803,.24246246508902825,.300328397784228,-.04389672863558922,-.04165627319971637,-.30818729583490695,-.22221882441369153,-.3449025548727439,.23901621577757753,.04006833493978915,.22067925957890494,.05913901763736636,.0013771249391555669,-.8293224240232032,-.2424827691685955,.2220707306234446,-.05187740979518813,.08971160087534878,-.06494462602113076,-.023033890597353883,-.20608602740074317,-.006811401556518173,-.05690796487102039,-.009244667169144016,.03186931291822486,-.03171963561703066,-.2055819136117401,-.07773307076521087,-.042569660785952056,.14494733127713064,.20572232603908944,.2227575660976475,.23658495591681294,.3402162038624952,.5317886241837994,.2367948663422716,-.4620869054676115,-.17111767858219507,-.23623861798820922,.12877260884038208,.690102472530167,1.1175823884838996,1.0747715799508781,1.1957108711898863,-.10839909954530788,-.2263553910474054,-.04891742486397395,-.49291782026044056,.07233585420108059,.024371827339035017,-.013685307258532536,-.2073689149256469,-.1429203870068314,-.20318736992960118,.09738711454895084,-.11463822183415182,.06639276489870634,-.08790627274963889,-.24871001073084317,-.24716165183994784,.07081825322981992,.19552146385155544,.2667283201489779,.3056428917979906,.3354280050625516,.6010674473512297,.6973013864661962,.10657803670352221,-.26597013575809814,-.5166385012265116,.20353239335470413,.46612626705839527,.8817924518615256,1.0591766157447142,1.81559937881354,1.1338250057069015,1.336549316612259,.6056618650285254,-1.143412386517127,-.24404333943615408,-.11036542395783162,.0113975838761526,-.1374746764441064,-.17507285276321236,-.229508144906775,-.1235225366270939,-.15992872157622667,.07040420542593133,-.14847974776257952,-.11769772351689584,-.0043287613096706385,-.01570204240179094,.008975674876936093,.2936321736893157,.24220392956380496,.33450192958610414,.5061427531741152,.7981852522366981,.5625934272912321,-.5161851914994344,-1.105930659634037,-.36434278784189805,-.2506130633590454,.49191197464707476,-.5504297333386833,.33201271766592266,-1.2534804319442674,1.8545676439466376,2.7705947112358396,-.6572778182386966,-.4476986361937145,-.724841310594671,-.19352569039907921,-.06091583791907576,-.07579332872568335,-.18362798444373865,-.10847923107858076,-.4971843279255892,-.26497067484015147,.1279044678179279,.3055754310904159,.010766872600696822,-.17753959085018053,-.04814578185160058,.007404938424997059,.1911100471268881,.260240044947818,.38143909917016594,.6295601479932434,.6315271726552409,.5064081488092473,-.28203486996779953,-1.481298784591466,-.34444399750770943,.33223282315731145,-1.0635980503754157,-.7432738853191642,-1.4203730522981521,-.29452233058397176,.3105478087846589,.4425799571579111,.5885198019984471,-.608904845351347,-.5401519230094439,-.3838911656921845,.02852961095842791,-.22272564345822352,.021237638325899852,-.387784194546968,.021133356436687064,-.703172359616261,.5672727000473203,-.037766801642101375,.06793846381428098,-.5437098167860644,-.0704859693682512,-.02650526715020184,.26990648117357596,.2830749986604576,.3201793290763222,.48573187070286,.4386512882244713,.8786532261255616,-.7255315586935562,.48040960369964236,-.14688086473049994,-.8636112375382178,.034562131954569586,-1.3606412475160699,-.0957750273311256,-1.0236217631956728,-2.0668504460046977,.9104604552681247,.04764983705131218,-.29915225181420874,-.4419264253886607,-.16705843369252318,-.08813592215903708,-.1055833934917848,-.1529658239374068,-.37808744252168625,-.2797162376269429,.42301568032977793,.28749903579456393,.42643957249522774,-.6330846638456163,-.39563373733228846,-.2486369819601503,.3743892093980236,.1651784382566546,.21235668984583117,.05068339188231969,.2929172313060312,.12600631152419559,.3702007241660689,-.11933000679563836,-.07786945045374266,.4005928988973134,.33639737707180556,-1.4411916754233998],height:32,width:32,top:{real:[6327.007467982786,12787.448651417644,-8580.13577826938,-6564.429625192605,1064.8969915597925,-1614.7722808334524,-60.04811942184231,-221.12968025641604,-12.445754708845573,-62.94058771358334,23.82057845345795,-28.525301748952867,37.86428012515434,-85.844490405628,27.49381496964307,-48.15197444336273,41.39966019930714,-48.151974443360345,27.493814969642067,-85.84449040562787,37.86428012515403,-28.52530174895269,23.82057845345851,-62.94058771358404,-12.445754708845573,-221.12968025641445,-60.048119421842806,-1614.7722808334493,1064.8969915597932,-6564.429625192613,-8580.135778269385,12787.448651417659,-17213.595236981997,544.0730266990294,-10829.417860945707,-5794.121923108305,-1103.8692252742003,-1120.3666800727638,-106.61462896985108,-117.89522553300084,-39.30843089365121,-26.96057805653429,-11.02504742288635,-2.1850531713376355,-7.295269738362588,-14.472211987615461,-14.23279965231924,3.5205960317557246,-19.62974773437861,-14.131264529804582,-22.272265924680642,-17.401343902608428,-1.7416101263052008,.34733716754184635,-16.60063574625633,-32.47390190466588,-64.31481385096977,-84.0347536394093,-258.3227844043639,-714.3011765913042,113.1165060355228,-2806.7151144576005,-10882.302955904926,-27817.100568112113,-27745.70849411807,-22841.4208450087,-8553.526467468835,-4085.033989629072,-1748.9561003744159,-545.3354386545253,-146.45498278007594,-40.80544006189128,-50.06021298226216,-16.73048944848435,-23.62313915150434,.36714120063527833,-7.188290919780933,6.414260409354566,-14.833291452397129,3.4669422259569203,-16.161012153790594,-21.28313017801196,-13.244388638951026,-1.2754674400463286,.4918466117149978,-11.472717532816317,-17.53068940264937,-29.523444921912187,-36.98341868022681,-91.5973512360268,-144.17841735614732,-486.41083616652156,-239.1204206916959,139.0089391760282,-7153.157795026505,-18373.599790964956,-8415.922731585739,-6467.554677983386,-5469.658567600724,-2789.7914675082047,-821.4826713748977,-514.7145420030545,-122.6780822655295,-35.554593402553344,-32.90518481960786,-16.87597750619218,-9.124394819051188,-4.180262031874417,.783160840973908,-.8247362446257293,-6.027703935454679,-6.850242789892616,-6.885859335051412,-14.551844205848809,-8.459298914659914,-1.9950695133570466,1.5394495557011576,-9.232834653609892,-11.961754213185406,-20.558561534905806,-38.14482496917136,-57.16086990533409,-157.5554953403844,-411.2008243286849,-110.1193097574614,-463.64281724562954,-1210.9754315912523,-4810.1023052011815,-2624.9192342435695,-4516.897453633137,-3582.982491421491,-2119.74991736369,-750.2347266447723,-159.86878938364373,-96.80572891910141,-16.935754226078267,-22.178078450833883,-9.009222722598976,-5.445485292050662,-2.526888256673675,-2.621952349894846,-2.0534180946008638,-6.464306480423622,-8.721406530014862,-7.012703187407293,-7.7847619200438425,-.7812180190370879,-.11031060182209244,-3.431895986699017,-4.568083040130742,-9.316020064156948,-15.87900618307528,-23.382201868158507,-37.98940473063752,-121.95929165874175,-201.43809047465336,-567.3037269017944,-610.3631285378248,-1937.2376557226703,-2694.0942422163184,-3481.535597542074,-3026.0617140239533,-2506.491638388831,-1355.157669171596,-468.0599091435185,-33.397814851582154,18.54533148158398,-29.439943085485314,-11.922803368680741,-7.717457984896304,-2.788860330209426,-2.054500633053642,-1.0224301618297007,-2.5290059501700397,-2.6199349314032494,-4.882873145781677,-5.6140621268617785,-3.6146413255535528,-.829674845027506,-1.1631844631411599,-1.17362456930955,-3.7427284368684024,-6.617827065642342,-8.803949843157813,-13.481606634721874,-26.682014936266803,-32.97802138197703,-190.87870662958537,-335.07671606134033,-876.9552218570499,-1470.8308615232113,-2413.1056871868645,-2329.4915082040015,-2151.926578142459,-1438.5211303616525,-713.0815238595347,-130.56706965452,-28.862997769748436,1.7115783105395304,-2.3079138134833856,-11.650001060370576,-2.170189504369732,-1.7033561682904694,.11972955037883275,-.5790790812653609,-.45369004788794814,-4.0202584980239315,-2.2874964618085922,-4.043969331388718,-2.714411694103757,-.7843149712055903,-.6337786214807561,-.8354288746558204,-2.5417481635934216,-3.449779845211915,-5.2729359146939485,-9.332533768451485,-2.348077722091996,-30.998957295773433,-62.717085150656224,-255.55592612696097,-515.5540381395323,-1077.4118984564277,-1959.4321649356718,-996.1706325647543,-957.5829658424543,-646.4812454670936,-264.6323709027533,-80.5183401631437,1.357764038030833,-10.209813205700032,-1.6455702447745924,.04156410545341299,-2.111433611523795,.09477041994978236,-.5991594867560358,-.04280607522064791,-1.4583889440112543,-1.0515624140257636,-2.624261072572436,-1.9962698899057387,-2.637358088895228,-.39414295752688255,-.8095209882094745,-.8093550401978136,-1.831598128086258,-2.395778121988731,-3.7775973636187947,-1.2762438485839673,-5.873618704707699,-1.7472058496177199,-39.26171578474986,-103.67045476207605,-221.97901463800724,-486.52939506954147,-770.8638520171584,-324.5340145618874,-340.76561269504333,-198.9419784129981,-116.98390967138687,-32.55200245568722,-2.8647426984892057,3.4567160839115996,-2.331005269373194,-.31982529888503974,1.0641170511547686,-1.1693860348016079,.407002126956675,-1.0092937918537679,-.03498515495516123,-1.1746986822405672,-2.25833192615608,-2.3742700657768196,-2.0999344700147127,-1.3199204785521135,-.00726121067659493,-.21997349279604808,-1.6799449140427334,-2.573626149077699,-1.274902979707558,-2.9722975102588807,1.1149262389696764,-3.782557414370513,-8.811283856834226,-31.380656277665604,-80.81570649485545,-151.2920880811312,-231.73584987382,-71.71934076037124,-68.36402933689453,-82.30497530908133,-39.76913656733262,-12.693902195545155,1.984203566270604,-.4889435407745263,1.5673786316984977,-1.1528550937233366,-.047905313676576855,1.0650111541187497,-1.4670778837513785,.9015484382771278,-2.0067122081730173,-1.7180755446076856,-3.3483434682482898,-1.6317774897434336,-3.470880426438495,-1.4694727348954268,-.10257790692130256,-.9288963638157178,-2.5451436559397584,-1.1303995452351283,-2.8871606625355204,-.49805533537312113,-.4387193422815815,.7490974196906504,1.439791857975526,-13.026034555561825,-28.484337861014367,-36.89517840676591,-72.2311900358384,-26.809485534889244,-56.94273379652035,-36.28010742942203,-18.09907931367515,-3.2627913287121535,-.2706547580504817,1.1511525903295716,-.1898870363801409,.9708722088802537,-1.132641237042418,.1998130176636337,2.307680270293133,-2.549840775656603,-.5553262362525304,-4.506786497033707,-3.1791416623515807,-4.407810096297031,-3.312559231697057,-.8611731352773999,-1.5893272599995412,-2.966763176308445,-.10263295233944174,-3.9090515756474873,-1.1809123553765606,-1.20382750933502,.286248057198718,1.853681713247669,.8072002923997494,-5.576914824230862,-9.876045833403877,-26.746787584056406,-25.156847324745275,-59.858730768373135,-40.90948134422029,-31.301364606284917,-12.99289618826553,-3.374775686900119,2.018530777741562,-.2260612077575776,.20594677690592242,-.3240322568825497,2.6342781156582364,-.20787587650621794,.020021422684959465,2.4168167113542753,-5.471113939106749,-4.016235227521675,-8.261492540220937,-5.359721289980835,-3.561851886896915,-2.433206189931258,-3.72732750056158,1.9796458045760836,-5.619455249505039,-1.3533084788499918,-2.5312603283156982,-.7357741299886245,1.05348708564852,1.9641802030644013,2.686394865901931,.1517907769810002,-13.505006616733285,-24.652619118640313,-46.54077201833177,-65.57386282564879,-62.198686950727755,-33.36748135977328,-15.462856466374785,1.276482037672726,.652383510779166,.11426292455840634,-.28574074744887695,1.1004477970868616,1.5327652909312646,4.932711200240519,-2.7503236900904393,-3.9754701567757182,-.834512135731142,-9.685955117463603,-6.000630422824884,-7.13182532638587,-4.985642454964987,-8.219869288149797,4.4471445589999075,-5.912419213682183,-1.066228559248251,-4.532002002354178,-2.2691032318803455,-.2959592999178123,.95069246916244,2.9800299945570488,4.175488865046039,-3.9368165535394617,-16.75239131732446,-41.14171229985143,-60.64390251212476,-84.34316473215777,-54.07497231667312,-32.1478368384324,-3.8004568077904586,.609063700223492,.9632657107050296,.12072436644318041,.8631954755084683,1.1644302862121145,2.3252453178811563,.4766448788746544,4.289515874709642,-8.009939850720517,-11.261414242734404,-3.732740466180737,-6.1601929909303115,-5.750665733944118,-11.117751544185502,4.305411514823387,-8.211608570347876,1.5649721654809707,-5.692142411938895,-3.494908667188049,-2.1697325908161673,-.6954156264880039,.8151347377023449,3.491384396197289,3.712841092827461,-.2846190491444036,-14.694115553922865,-40.78417179777688,-76.1290979979302,-42.44654416844914,-35.20072244442639,-7.684968530920968,-.867788767062698,1.7056687310546401,.5197495279873948,1.131675911228874,1.212780060538119,2.222121429321137,.8361427470500683,.09954660645280876,-3.106693968311659,2.4769973579809332,-11.745899626687375,-12.566716735550758,-4.784372252544112,-8.604058870064595,5.351103402740868,-15.66778198729919,3.3911987930307137,-8.125945789685659,-4.798036588740434,-2.1471667518999764,-2.508724157326058,-.860976568717486,.8013954360837776,2.3927476350849495,5.65616272254561,4.625019584724071,-10.360873371570062,-32.18376694299341,-40.627648783043085,-17.95302681367091,6.185941644460162,4.4451711191118575,6.213331251274599,3.3587096432927233,.7556965076296271,.8242995843017912,1.6770717987294814,1.487507854284298,.5750646130151693,-1.8616897808321822,-4.292331488605052,-7.016130789435238,4.852626568656962,-11.625945416074895,-21.07467865045702,3.143448295571389,-12.714871655934468,2.366640700254353,-11.17366154497929,-6.475058123170597,-2.9596627855411386,-2.763079045935563,-1.4122750319888788,-.5580228906711165,.4050996560161985,3.054950312292098,4.5519407117959005,5.504486591127148,2.884340309618711,-2.0306279174386637,-12.290279126535582,30.20785901727286,12.45094729737127,8.741596108674122,10.304484703022888,4.231031360287155,1.8368366318675937,1.9910666876255574,.991563036763885,.31747940339256003,-.6024560594659747,-1.5054245711483085,-5.204747979185773,-4.698542589986817,-6.440605765726458,-2.431796520269472,-.318061102868901,-34.61437498430425,-.3180611028689131,-2.431796520269478,-6.440605765726465,-4.6985425899868325,-5.2047479791858065,-1.505424571148318,-.6024560594659905,.31747940339256003,.9915630367638866,1.9910666876255707,1.836836631867627,4.231031360287185,10.30448470302293,8.741596108674146,12.450947297371268,-17.95302681366921,-12.290279126534008,-2.0306279174386814,2.8843403096185996,5.504486591127181,4.5519407117958774,3.0549503122920303,.40509965601617365,-.558022890671132,-1.4122750319888866,-2.763079045935566,-2.9596627855411324,-6.4750581231706095,-11.173661544979305,2.3666407002543774,-12.714871655934495,3.1434482955713383,-21.074678650457034,-11.625945416074918,4.852626568656909,-7.016130789435253,-4.292331488605082,-1.8616897808321802,.5750646130151582,1.4875078542843145,1.6770717987294999,.8242995843018388,.7556965076297252,3.3587096432928165,6.21333125127526,4.445171119112939,6.185941644460696,-42.44654416844733,-40.62764878304236,-32.18376694299287,-10.36087337156992,4.625019584724104,5.656162722545562,2.392747635084909,.8013954360837462,-.8609765687174984,-2.5087241573260646,-2.1471667518999924,-4.798036588740434,-8.125945789685682,3.391198793030713,-15.66778198729918,5.351103402740785,-8.604058870064568,-4.7843722525441965,-12.56671673555077,-11.745899626687423,2.4769973579809226,-3.1066939683116837,.09954660645280862,.8361427470500621,2.2221214293211515,1.2127800605381271,1.1316759112289154,.5197495279874628,1.7056687310547414,-.8677887670623313,-7.684968530920446,-35.20072244442443,-84.3431647321563,-76.12909799792908,-40.784171797776416,-14.694115553922703,-.28461904914431585,3.712841092827477,3.4913843961972515,.8151347377022745,-.6954156264880174,-2.169732590816195,-3.494908667188057,-5.692142411938915,1.5649721654809774,-8.211608570347895,4.3054115148233585,-11.117751544185527,-5.750665733944103,-6.160192990930285,-3.732740466180779,-11.261414242734437,-8.009939850720519,4.289515874709647,.47664487887466933,2.3252453178811465,1.164430286212123,.8631954755084824,.12072436644322472,.9632657107051639,.6090637002236494,-3.800456807789966,-32.147836838431445,-54.074972316672174,-65.57386282564865,-60.643902512124406,-41.14171229985112,-16.752391317324395,-3.936816553539381,4.175488865046039,2.98002999455701,.9506924691624021,-.295959299917824,-2.26910323188035,-4.532002002354194,-1.0662285592482377,-5.912419213682192,4.447144558999873,-8.21986928814978,-4.9856424549649665,-7.1318253263858535,-6.000630422824882,-9.685955117463573,-.8345121357311588,-3.9754701567757316,-2.7503236900904167,4.932711200240523,1.5327652909312637,1.1004477970868634,-.2857407474488868,.11426292455844969,.6523835107792659,1.2764820376728394,-15.462856466374522,-33.367481359773095,-62.19868695072734,-59.85873076837255,-46.54077201833131,-24.652619118640224,-13.50500661673309,.15179077698109764,2.686394865901908,1.9641802030643754,1.0534870856484704,-.7357741299886327,-2.5312603283157147,-1.353308478849978,-5.619455249505026,1.979645804576063,-3.7273275005615623,-2.4332061899312447,-3.561851886896878,-5.35972128998084,-8.261492540220898,-4.016235227521694,-5.471113939106738,2.416816711354272,.020021422684962133,-.20787587650621156,2.6342781156582284,-.3240322568825613,.20594677690590416,-.22606120775752253,2.01853077774176,-3.3747756868998953,-12.992896188264998,-31.301364606284267,-40.909481344219984,-26.809485534888527,-25.156847324744817,-26.74678758405601,-9.876045833403781,-5.576914824230828,.8072002923997806,1.8536817132476344,.28624805719868845,-1.2038275093350328,-1.1809123553765482,-3.9090515756474855,-.10263295233946072,-2.9667631763084428,-1.589327259999552,-.8611731352773833,-3.3125592316970565,-4.407810096297022,-3.179141662351582,-4.5067864970337235,-.5553262362525373,-2.549840775656593,2.30768027029313,.19981301766362944,-1.1326412370424508,.9708722088802425,-.18988703638015317,1.1511525903296145,-.27065475805034434,-3.2627913287119403,-18.099079313674878,-36.28010742942166,-56.94273379651932,-71.7193407603689,-72.2311900358364,-36.895178406764366,-28.484337861013827,-13.026034555561461,1.4397918579755735,.7490974196906212,-.4387193422816503,-.49805533537312413,-2.8871606625355364,-1.130399545235152,-2.5451436559397544,-.9288963638157319,-.10257790692130979,-1.4694727348954375,-3.47088042643851,-1.6317774897434372,-3.3483434682483164,-1.7180755446077083,-2.006712208173023,.9015484382771369,-1.4670778837513718,1.0650111541187297,-.047905313676639846,-1.1528550937233546,1.5673786316984972,-.48894354077444435,1.9842035662707793,-12.693902195544938,-39.769136567331614,-82.30497530907938,-68.36402933689251,-324.5340145618874,-231.73584987382011,-151.29208808113108,-80.8157064948556,-31.380656277665615,-8.811283856834311,-3.7825574143705687,1.114926238969638,-2.9722975102588807,-1.2749029797076188,-2.573626149077714,-1.679944914042758,-.21997349279605258,-.007261210676620465,-1.3199204785521295,-2.09993447001476,-2.3742700657768196,-2.2583319261561177,-1.1746986822405874,-.0349851549551673,-1.009293791853766,.40700212695667115,-1.169386034801607,1.0641170511547318,-.31982529888503974,-2.3310052693731778,3.456716083911618,-2.864742698489133,-32.55200245568721,-116.98390967138671,-198.9419784129981,-340.7656126950431,-996.1706325647434,-770.863852017153,-486.52939506953675,-221.97901463800537,-103.67045476207502,-39.261715784749725,-1.7472058496176825,-5.873618704707824,-1.2762438485839995,-3.7775973636188502,-2.3957781219887693,-1.831598128086283,-.8093550401978216,-.8095209882094927,-.3941429575269055,-2.637358088895282,-1.9962698899057312,-2.6242610725724247,-1.0515624140257607,-1.4583889440112356,-.042806075220638506,-.5991594867560418,.09477041994976447,-2.111433611523809,.04156410545339216,-1.645570244774569,-10.20981320570001,1.357764038031177,-80.51834016314297,-264.63237090274987,-646.481245467088,-957.5829658424444,-2329.4915082039943,-1959.4321649356684,-1077.4118984564245,-515.5540381395323,-255.55592612696057,-62.717085150656416,-30.998957295773568,-2.348077722092276,-9.332533768451471,-5.272935914694109,-3.4497798452119492,-2.5417481635934838,-.8354288746558232,-.6337786214808031,-.7843149712056035,-2.714411694103749,-4.043969331388717,-2.2874964618085487,-4.020258498023898,-.4536900478878949,-.5790790812653498,.1197295503788481,-1.7033561682904654,-2.170189504369725,-11.650001060370577,-2.3079138134832218,1.7115783105395919,-28.86299776974782,-130.5670696545195,-713.0815238595312,-1438.5211303616488,-2151.926578142451,-3481.535597542063,-2413.1056871868605,-1470.8308615232086,-876.9552218570503,-335.07671606133954,-190.87870662958562,-32.978021381977214,-26.682014936266988,-13.48160663472185,-8.803949843157923,-6.6178270656423885,-3.7427284368684086,-1.1736245693095617,-1.1631844631411714,-.8296748450274833,-3.6146413255534444,-5.614062126861783,-4.8828731457814465,-2.619934931403141,-2.5290059501698665,-1.0224301618296836,-2.0545006330535864,-2.788860330209389,-7.717457984896257,-11.922803368680738,-29.439943085484902,18.545331481584157,-33.39781485158058,-468.0599091435166,-1355.1576691715877,-2506.491638388823,-3026.0617140239456,-2624.9192342435676,-2694.0942422163216,-1937.2376557226696,-610.3631285378265,-567.3037269017948,-201.4380904746546,-121.9592916587422,-37.98940473063803,-23.38220186815851,-15.879006183075566,-9.31602006415698,-4.568083040130774,-3.431895986699037,-.11031060182210287,-.7812180190371311,-7.784761920043757,-7.012703187407289,-8.721406530014612,-6.46430648042343,-2.0534180946007163,-2.62195234989481,-2.526888256673632,-5.445485292050623,-9.009222722598933,-22.17807845083391,-16.93575422607804,-96.80572891910084,-159.86878938364163,-750.2347266447713,-2119.7499173636857,-3582.9824914214882,-4516.897453633135,-8415.922731585722,-4810.102305201169,-1210.9754315912437,-463.6428172456313,-110.11930975746253,-411.2008243286865,-157.55549534038482,-57.16086990533496,-38.144824969171324,-20.558561534906186,-11.961754213185522,-9.232834653609975,1.5394495557011911,-1.995069513357094,-8.459298914659838,-14.5518442058491,-6.885859335051412,-6.850242789892523,-6.027703935454709,-.8247362446255362,.7831608409739802,-4.180262031874306,-9.124394819051078,-16.875977506192154,-32.90518481960786,-35.55459340255284,-122.67808226552924,-514.7145420030503,-821.4826713748957,-2789.7914675081947,-5469.658567600714,-6467.554677983375,-27745.70849411805,-18373.599790964956,-7153.157795026502,139.0089391760178,-239.12042069169632,-486.41083616652713,-144.17841735614894,-91.5973512360294,-36.9834186802268,-29.52344492191359,-17.530689402649603,-11.472717532816715,.49184661171508715,-1.2754674400467305,-13.244388638951113,-21.283130178012485,-16.161012153790605,3.4669422259560148,-14.833291452397047,6.414260409354707,-7.18829091978077,.3671412006354383,-23.623139151504223,-16.730489448483766,-50.06021298226216,-40.80544006189026,-146.45498278007528,-545.3354386545192,-1748.9561003744159,-4085.033989629059,-8553.52646746883,-22841.42084500867,-17213.59523698198,-27817.100568112102,-10882.302955904914,-2806.7151144576032,113.11650603552238,-714.3011765913102,-258.32278440436545,-84.03475363941075,-64.31481385096976,-32.473901904667066,-16.600635746256838,.34733716754136956,-1.7416101263050108,-17.401343902608698,-22.27226592468065,-14.131264529805808,-19.62974773437863,3.5205960317556224,-14.232799652319452,-14.47221198761537,-7.295269738362605,-2.1850531713375,-11.025047422886134,-26.960578056534132,-39.30843089365128,-117.89522553299832,-106.61462896985047,-1120.3666800727583,-1103.8692252741987,-5794.121923108299,-10829.417860945698,544.0730266990613],imag:[0,39515.399789254865,-15382.502646592808,-2918.5213899411633,1191.3150820979915,-345.8052698718326,-91.96349756116432,-108.0683025974378,-23.43132760503778,-16.61081082295881,-2.2742971526945692,-21.94540337447156,-21.27242040257718,-19.057735286082725,52.37631312091274,8.852197502614422,0,-8.852197502615361,-52.376313120912044,19.05773528608244,21.27242040257723,21.945403374471546,2.2742971526945164,16.61081082295847,23.43132760503778,108.06830259743377,91.96349756116703,345.8052698718299,-1191.315082097991,2918.521389941166,15382.502646592799,-39515.399789254865,16946.371225111547,11272.40087069651,-1841.163065584854,-1171.8258105148211,109.267405778432,109.43221584454041,-206.10314812122442,-42.28539321936541,-65.24914017226911,-8.196051793926907,-25.36595623631852,-12.488977779350739,-20.777136166915728,10.939736173955986,13.738393384077787,18.982014759380824,-12.446635345723246,-8.830506972875275,-14.016932746731957,10.847407040619599,18.949463773817904,9.549137726694633,9.916050792857149,10.925693066643545,29.5976882079218,110.70270321520633,119.64570653889598,-28.406380421737747,-832.3851335439583,3868.3607546707453,4625.155413999855,1299.266384884336,11955.36918869557,-346.60702359457474,2363.08656433282,202.32180136864196,-295.0107693483969,277.4413124787238,-208.25011765184485,-68.53645210929017,-63.125416501511275,-30.589238972650307,-20.382558491276782,-12.902690844348575,1.0182743702449766,2.287414105137245,14.546101055958879,-1.6150967690531892,.8738635446220925,-13.38677146472326,17.407635810762027,-.6068089103442856,12.950261495215786,-.8675699825474084,13.062832664150156,-2.136096668655318,35.88043741028102,66.54358379132412,106.41042136702396,-154.61175360170367,-142.4313830070681,-204.04622542072212,637.2265195104327,14506.214536688893,2087.241286517743,2934.8250858413794,-540.5764135125077,271.5767913086672,537.4906442433505,71.61068630950663,-82.56651716015784,-74.48955207450676,-57.14272356927949,-25.254222647826957,-12.544755138678799,-6.770877333738462,-.2077076475991805,1.1194026551973495,3.6890839097334878,-.20461611038051675,-5.373740185152839,-2.2636764639022453,4.983260069528009,10.10754418440443,2.544597152813191,5.044756942220222,2.818990373202739,2.9920185974422946,11.529259915073515,53.34828178316849,50.5773061658137,119.57179721034167,-786.9439339579221,-901.8697209507841,1074.2990124084633,-676.634329985113,-1814.4894639161919,-1058.8873901892568,349.63255334068964,268.2484621242063,380.4257804868011,97.91247606120596,-71.66187990477866,-72.73694020539094,-37.286147332183255,-18.72018651765236,-9.562832886967836,-8.263453641636948,-.1909928019616089,.2856733033383343,.0713092208473309,1.775656575203522,2.1386941287610384,-1.0231985430634363,2.4480270844924137,1.987809621173889,4.1535160740617325,3.5521022242715827,3.6019889835361654,-.38778650675348675,4.593463303583732,12.369503115173785,94.4009292853464,-77.03951669454163,-317.9618963149653,-464.9398230309893,-1928.5847150696218,-1707.435501473529,-1583.8824730375936,-833.1497046070991,-242.65732454029356,317.3445924618518,69.37197156554217,-13.453603503282046,-58.67866216881051,-40.69792523135727,-20.16679423742438,-13.090865763493372,-7.663932546815518,-3.9818184076004774,-1.1480426683317846,3.4782462601712654,3.3535274581593777,1.130442042784202,-.7879809105656911,1.364561831917687,-1.248210330241836,2.654804361380871,2.0455422971726147,3.3794759874708187,.2827071358643787,-.6739636481307105,-2.4299863370655714,20.048308524208917,2.7323622379310764,23.350930435926227,19.428895667387472,-542.5554345851384,-969.7264693441342,-1881.693511581832,-426.42488803140975,-203.1293354864958,221.2759941924873,75.49864673782753,81.52765470923214,-23.22814892751923,-35.0958926310836,-18.113211298120703,-10.84781416147373,-7.219012562090457,-4.627971063973636,-2.4591204313834965,.5845484236475059,.9547463106026568,2.4151219203224654,.35567626693527166,-.3444373524655358,.10021534895843374,.6297575158661224,.07573905798146836,2.560600970229473,.33652577635989583,1.0967346902818458,-2.0000864020848046,1.451434335785166,-7.104320348324592,10.682010714917043,63.119371696969466,-.21915489532378957,-18.829394319190524,-151.38668525810633,-53.557614725234764,319.9810919368852,339.6557115911443,137.34002448547074,89.16606167421133,5.539540701045855,3.139496157974919,-15.790153056071546,-10.068399035154068,-5.990189510359599,-3.818478372445559,-3.031311871551015,-1.7050468427375405,.29997994657424726,1.0820090369221063,1.186145834536469,1.1035985643781976,-.026686439684276222,-.021861987241408937,-.7106913323848779,1.5408441736495715,.8896424069841912,1.3226298476418663,-.3134179284404904,.3654281917809065,-6.283172414744601,-1.5019641274621849,13.705577255286178,14.08988446983488,43.37606456504579,54.20464622802869,132.60719521227122,62.432091745032416,219.8685340702529,133.19971898528303,106.65962198554573,32.50951057813668,-.3217312093221928,-1.0472919151881939,3.040048254115993,-2.137337576928337,-3.730023177462626,-3.658884080605465,-1.7579654575817145,-1.4081716233776314,.5384750525967524,.9716444260939648,.9955744417358943,.11126643861839057,.6834380273282822,-1.8968331338371984,1.2370080984335854,.24616862215977253,1.6488725749132858,.5175199959040523,1.1293193043526017,-2.440127533596657,-2.1096176983280075,.8686234113923286,-3.2906850406637935,10.529105330387669,21.528607110729595,53.86435993126087,77.64597170154937,219.35042572397626,56.6467253044894,72.59713315254464,25.283726226154087,9.591694536051858,3.513106638710965,7.835371209588592,3.7982495059531924,-.1320379920173739,-2.687214491416787,-3.993299541160216,-3.249609758225802,.3475312947763441,.5110856303949012,1.5779290838292743,-.32098662744154494,.8505043637670686,-.9526953350056799,1.2514468795435802,-.8023251432711297,.9402998385797201,.0834845375200434,2.9970442493787712,-1.3537504507858638,-.49606931853204594,-.4063479369404129,-3.2049709482453,-.9073350510942371,2.436744629198272,14.425788131967863,11.285893196605656,41.38323140755873,26.64930600456886,3.49019745229235,-2.7278278900775033,-.6780497768719117,5.197251705350807,13.315592278460391,8.56553402704958,2.798694252472001,-1.3188307478897958,-2.9560147101356677,-3.503962513889325,-3.235126442242444,-1.7837191938553947,4.13702942142299,-.485758893366084,1.5705428299533406,-.2871276643491235,3.026372213847224,-1.2120159426024513,2.35786853116133,-.5759598133955007,5.0023110313506045,-1.3965343408401143,.5713001835955326,.9760153999777991,-2.585611776637107,-1.4572886030272592,-1.697304402058907,2.103012136644805,-.06299514621758302,4.961293785496401,-.301351161950073,9.158035887659205,-26.77416025365113,-14.352442298363405,-1.328062861082634,14.662722831107068,13.065714024917916,9.014268684358106,2.3156698002103213,-2.1494090398895276,-3.4369058394752816,-3.2885833247038136,-1.5589303641797962,-1.2624013759488528,-1.9675974847606275,6.6808538974877765,-1.9845455926326385,5.852020908231505,-.6464946693693394,3.7090325345277484,-1.4383189901623872,7.635821765818129,-2.5011370399824613,2.0288771570791524,3.387066154036441,-2.1726948090167277,-1.6227282885568253,-2.3401345171732064,-1.0784728701462345,-2.329913042321786,1.6766227476276099,-5.520827980018438,-13.304914803323909,-34.683237345909106,-16.2208922311743,-7.561457411183358,14.803696771258469,15.579335900760762,15.161631552742872,8.466040959037517,1.9742581617985508,-2.2318082441740326,-3.1677451000476946,-2.7136257844502993,-2.4663578849843404,2.147064267404146,-.8080751646824499,-6.8039934755458935,11.462761097859508,-2.320007213313432,9.647619505490004,-.5832325892308606,10.466810618341768,-7.39663728492945,4.629755222962074,7.84990600691447,-1.2532724460122664,-.7138369357089525,-3.035642205111053,-1.9171318821546592,-3.2905248775997,1.1638954652799918,-.8003122215164804,-7.6686022187651925,-13.379436000591463,-2.0784151782651223,18.75367455316294,37.59693951497317,28.201887912811504,26.441177038828386,17.31369928962457,8.260583701281336,1.91576653498145,-1.0360449197814665,-2.460835808457071,-2.9435912594789997,-.7374589298546507,-.806982080987579,1.3512050433752707,-2.4806623635392717,-10.931358459008862,20.399475046734903,-.9391475392972903,15.633586230850142,-11.808527677086202,3.795524426649309,11.440683264496995,.22625003249094855,2.3910143241324033,-1.5433230899620785,-1.7524971656611896,-3.4392335008624597,-1.2102890230410412,-1.1333111335531953,-.8668905465240005,-.7710203749819823,5.869418392294464,-6.691170849830921,60.884710948918006,43.6215632338163,43.48959952748494,33.141784821271486,18.338861076357606,7.709614194939609,3.102096535420124,-.33651454595896624,-1.858665713174497,-1.559439785993801,-1.7180049365163976,-.49470837698954684,-5.749978377706704,1.2816063498557866,-1.6438131382345036,-14.80449956699707,30.38324880041191,-20.687082737158004,6.429123713414993,13.719178799652914,-.15202331710012035,5.670833174690743,1.1091130063870853,.43083164420390874,-2.423604198850752,-1.2614169037455483,-3.163327541785472,-2.542847948565205,-1.0621152637056996,7.492146846575477,13.826120615216594,48.56895003285198,43.655937980459306,56.143788442077074,39.839822974553684,28.907966432346075,17.226166967005444,9.493352687280801,2.124830724849576,-.10304029106189502,-.73643011249607,-.6808620369242278,-1.5726895782452095,-2.38329292549688,-6.365462228048634,-12.648471231222512,2.6502987300645,9.194137936615347,-33.28553680715055,17.791788634489134,16.331392880531652,-1.0332061538290742,9.637685708097134,4.168966963233515,3.4112249849533103,-.6306411192619769,.02835684712188818,-1.1968584419289052,-3.3957285823190806,-4.745940898656516,-4.790016252397657,-5.15933541309157,13.957717184896774,20.367299127198688,0,-4.5388798707327584,12.10851784859719,15.801052170121357,15.786196904526062,6.464533909142766,2.6357128260629894,.48128762074186304,-.08159176932681525,-1.1399410088753745,-.939169667566381,-5.469535949937741,-8.47337798315448,-6.833270794890364,-5.875913014616271,-8.155226637929625,0,8.15522663792959,5.875913014616266,6.833270794890349,8.473377983154487,5.469535949937732,.9391696675663769,1.139941008875372,.08159176932681525,-.48128762074185355,-2.635712826062981,-6.464533909142767,-15.786196904526072,-15.80105217012133,-12.108517848597181,4.538879870732742,-43.65593798045641,-20.367299127197448,-13.957717184895019,5.1593354130924185,4.790016252397922,4.745940898656731,3.395728582319133,1.1968584419289152,-.028356847121888983,.6306411192619719,-3.411224984953306,-4.168966963233496,-9.637685708097113,1.0332061538290882,-16.33139288053165,-17.79178863448908,33.28553680715062,-9.194137936615315,-2.6502987300644807,12.648471231222583,6.365462228048637,2.383292925496898,1.5726895782452166,.680862036924256,.7364301124960793,.10304029106193066,-2.124830724849536,-9.493352687280627,-17.22616696700529,-28.907966432345297,-39.839822974551964,-56.14378844207378,-60.88471094891558,-48.56895003285002,-13.82612061521586,-7.492146846575117,1.0621152637059226,2.542847948565322,3.163327541785505,1.261416903745556,2.4236041988507613,-.43083164420392467,-1.1091130063870698,-5.6708331746907525,.1520233171001266,-13.719178799652925,-6.429123713414971,20.687082737158036,-30.38324880041186,14.804499566997148,1.6438131382345447,-1.2816063498557717,5.749978377706724,.49470837698955733,1.7180049365164254,1.5594397859938318,1.8586657131745035,.33651454595900265,-3.102096535420111,-7.709614194939538,-18.33886107635751,-33.1417848212713,-43.48959952748401,-43.621563233814584,-18.75367455316185,6.691170849831209,-5.8694183922938254,.77102037498232,.8668905465241434,1.133311133553338,1.2102890230411023,3.4392335008624833,1.7524971656611932,1.5433230899620796,-2.3910143241323984,-.22625003249093578,-11.44068326449701,-3.795524426649273,11.808527677086207,-15.633586230850069,.9391475392973129,-20.39947504673482,10.931358459008916,2.4806623635393117,-1.3512050433752816,.8069820809876324,.7374589298546702,2.943591259479049,2.4608358084570767,1.036044919781497,-1.9157665349814337,-8.2605837012812,-17.313699289624388,-26.441177038827938,-28.201887912810978,-37.59693951497237,16.22089223117415,2.078415178265043,13.379436000591378,7.6686022187652325,.8003122215165199,-1.1638954652799158,3.290524877599744,1.917131882154679,3.035642205111054,.713836935708947,1.253272446012271,-7.849906006914436,-4.629755222962067,7.396637284929479,-10.46681061834176,.5832325892309236,-9.647619505490004,2.3200072133134997,-11.462761097859458,6.803993475545934,.8080751646824615,-2.147064267404143,2.4663578849843657,2.7136257844503273,3.1677451000476933,2.2318082441740374,-1.9742581617985304,-8.466040959037452,-15.161631552742712,-15.579335900760643,-14.803696771258227,7.561457411183342,26.774160253651477,34.683237345909006,13.304914803324097,5.520827980018494,-1.6766227476275497,2.3299130423218712,1.078472870146282,2.3401345171732237,1.6227282885568277,2.172694809016716,-3.3870661540364337,-2.0288771570791524,2.5011370399824764,-7.635821765818108,1.4383189901624107,-3.7090325345277098,.646494669369335,-5.852020908231483,1.984545592632657,-6.680853897487771,1.9675974847606519,1.2624013759488664,1.5589303641798025,3.2885833247038483,3.436905839475272,2.1494090398895325,-2.3156698002103084,-9.014268684357965,-13.06571402491778,-14.662722831106908,1.328062861082763,14.352442298363767,-3.49019745229113,-9.158035887658194,.30135116195024236,-4.9612937854963866,.06299514621754256,-2.103012136644765,1.6973044020589363,1.457288603027268,2.5856117766371063,-.9760153999778071,-.5713001835955446,1.396534340840117,-5.002311031350611,.5759598133955085,-2.357868531161305,1.2120159426024788,-3.02637221384722,.28712766434913656,-1.5705428299533217,.4857588933660993,-4.137029421422994,1.783719193855416,3.235126442242455,3.5039625138893205,2.956014710135662,1.3188307478897938,-2.7986942524719765,-8.56553402704949,-13.315592278460258,-5.19725170535079,.6780497768720096,2.7278278900777337,-56.64672530448825,-26.649306004568476,-41.383231407558036,-11.285893196605604,-14.42578813196792,-2.4367446291981882,.9073350510942723,3.2049709482452906,.4063479369404134,.4960693185320061,1.3537504507858567,-2.9970442493787934,-.0834845375200447,-.9402998385796996,.8023251432711498,-1.2514468795435723,.9526953350056726,-.8505043637670447,.3209866274415623,-1.577929083829268,-.5110856303948855,-.3475312947763517,3.2496097582258234,3.9932995411602126,2.687214491416765,.13203799201742056,-3.798249505953158,-7.8353712095884145,-3.513106638710994,-9.591694536052009,-25.283726226154414,-72.5971331525438,-219.8685340702529,-219.35042572397646,-77.64597170154943,-53.86435993126099,-21.52860711072962,-10.52910533038772,3.290685040663801,-.8686234113923152,2.1096176983280075,2.4401275335966615,-1.1293193043526162,-.5175199959040564,-1.6488725749132833,-.24616862215974425,-1.2370080984335483,1.8968331338372646,-.6834380273282822,-.11126643861832354,-.9955744417358692,-.9716444260939339,-.5384750525967466,1.408171623377654,1.757965457581725,3.6588840806054854,3.730023177462626,2.1373375769283727,-3.0400482541159497,1.047291915188283,.3217312093221976,-32.5095105781366,-106.65962198554575,-133.199718985283,-319.98109193688754,-62.432091745036324,-132.60719521227176,-54.20464622802902,-43.37606456504613,-14.089884469834875,-13.705577255286062,1.5019641274622118,6.283172414744585,-.3654281917809468,.31341792844047633,-1.322629847641876,-.8896424069841873,-1.5408441736495315,.7106913323849381,.021861987241514846,.0266864396842654,-1.1035985643780957,-1.186145834536423,-1.082009036922065,-.29997994657423205,1.7050468427375622,3.031311871551031,3.818478372445528,5.99018951035957,10.06839903515407,15.790153056071421,-3.1394961579745826,-5.539540701046052,-89.16606167421166,-137.3400244854728,-339.65571159114575,426.42488803140685,53.55761472523432,151.38668525810476,18.829394319190286,.2191548953235339,-63.1193716969694,-10.682010714916952,7.104320348324818,-1.4514343357851665,2.0000864020848317,-1.0967346902818478,-.3365257763598761,-2.5606009702294568,-.07573905798135958,-.6297575158660037,-.1002153489582,.34443735246552043,-.35567626693504045,-2.415121920322402,-.9547463106025608,-.5845484236474793,2.4591204313835524,4.627971063973652,7.219012562090432,10.8478141614737,18.11321129812079,35.095892631083665,23.22814892751946,-81.52765470923207,-75.49864673782862,-221.27599419248904,203.12933548649244,1583.8824730375886,1881.6935115818235,969.7264693441334,542.5554345851378,-19.428895667388197,-23.350930435925818,-2.7323622379307726,-20.048308524208668,2.4299863370655803,.6739636481307644,-.2827071358643783,-3.3794759874707645,-2.045542297172576,-2.6548043613806773,1.248210330242034,-1.3645618319173671,.787980910565676,-1.130442042783935,-3.353527458159282,-3.4782462601711517,1.1480426683318268,3.981818407600519,7.663932546815509,13.09086576349318,20.166794237424288,40.69792523135695,58.67866216881051,13.453603503282435,-69.37197156554245,-317.3445924618542,242.65732454028887,833.1497046070945,1814.4894639161919,1707.4355014735293,1928.5847150696216,464.93982303099165,317.9618963149654,77.03951669454241,-94.40092928534638,-12.369503115173439,-4.593463303583724,.3877865067534687,-3.6019889835361467,-3.5521022242715157,-4.153516074061658,-1.987809621173597,-2.4480270844921423,1.0231985430638744,-2.1386941287610495,-1.775656575203229,-.07130922084720692,-.28567330333819857,.19099280196170093,8.26345364163699,9.562832886967872,18.72018651765216,37.28614733218326,72.7369402053908,71.66187990477839,-97.91247606120552,-380.4257804868011,-268.24846212420823,-349.6325533406899,1058.8873901892528,-2087.2412865177334,676.6343299851142,-1074.2990124084556,901.8697209507884,786.9439339579222,-119.57179721034137,-50.57730616581321,-53.34828178316841,-11.529259915073451,-2.9920185974423683,-2.818990373202848,-5.044756942220179,-2.5445971528130604,-10.107544184404102,-4.9832600695276215,2.2636764639027978,5.373740185152825,.20461611038107308,-3.6890839097334074,-1.119402655197085,.20770764759927202,6.770877333738589,12.544755138678777,25.25422264782682,57.14272356927944,74.48955207450695,82.56651716015759,-71.61068630950653,-537.4906442433507,-271.57679130866813,540.5764135125049,-2934.825085841371,-11955.36918869557,-14506.214536688902,-637.2265195104331,204.04622542072232,142.43138300706894,154.61175360170483,-106.41042136702355,-66.54358379132336,-35.88043741028101,2.1360966686551617,-13.062832664150186,.8675699825474646,-12.950261495215663,.6068089103450538,-17.40763581076148,13.386771464725289,-.8738635446220966,1.6150967690552112,-14.54610105595846,-2.2874141051365076,-1.018274370244917,12.902690844348964,20.382558491276768,30.589238972650698,63.12541650151129,68.53645210929236,208.25011765184536,-277.4413124787215,295.01076934839597,-202.32180136863923,-2363.0865643328207,346.6070235945696,-16946.371225111554,-1299.266384884367,-4625.155413999856,-3868.3607546707453,832.3851335439597,28.40638042173725,-119.64570653889508,-110.70270321520742,-29.59768820792175,-10.925693066643381,-9.916050792857169,-9.54913772669443,-18.949463773817815,-10.847407040619126,14.016932746732627,8.830506972875813,12.446635345723296,-18.9820147593783,-13.73839338407706,-10.939736173955323,20.777136166915735,12.48897777935125,25.36595623631853,8.196051793927062,65.24914017226915,42.28539321936699,206.10314812122587,-109.43221584453876,-109.26740577843286,1171.8258105148195,1841.1630655848473,-11272.40087069649]}},right_eye_filter={real:[1.8229079259010603,.09781049864858246,-.5584009213724859,-.9997046284235658,.18757876559092043,-.8161769486311446,-.17457078018685562,.1382218261307309,-.13830885288846723,.14088352498892928,-.11242245121823281,.6419014453075046,-.18081689212517704,.8475744542340304,-2.0367692338977426,2.3450651085370726,-3.222777163962479,2.3450651085369945,-2.03676923389771,.8475744542340385,-.18081689212518082,.6419014453075054,-.11242245121823641,.1408835249889417,-.13830885288846723,.13822182613073003,-.17457078018684977,-.8161769486311367,.18757876559091927,-.9997046284235627,-.5584009213724851,.09781049864858132,-1.0960340088024074,-1.91191994525123,-2.409570266538848,-.5516235280495324,-.5050532801402159,-1.3068505835636635,-.4943718744397559,.23127204626685588,.0433507943550392,-.07178740615443681,.07085444983720594,.17221102955705567,.44602122877614064,.0741482055919004,-.015611524439393865,-.7989672475729291,-.6715596106043705,-.49375784053273253,.028167647498424205,-.3191891366103583,.5358217017440822,.20183473326047152,.12710467168208503,-.0714002635141921,.07456060444801779,-.12451483496807111,.051358135035693774,-.7728239811338444,-.42160647485916963,-1.1311602269894514,-1.4625324828122208,.3337871926813808,-1.77011609742092,-1.4302518240108344,-3.0428213499062116,-.6063122548783355,-.13683987631719793,-2.369242408538352,-.34105804260324346,-.2596965785205799,.2361043379661986,-.2768516857968317,.16986402710259335,.073612585805397,.5770491101708912,-.059867579479423505,.5168021952817504,-1.0666730319382505,-.005655209467068683,-.7580993906074581,-.06470132025004456,-.19832318162238824,.37732986906226257,.20777584924550152,.15451076629740465,-.013991851319401968,.13841341497021592,-.08688394903692853,.2526142361971455,-1.199138513843388,-1.9867837341406693,-2.275962773839737,-3.1079150257531585,-2.3995834975192567,-2.293769234372572,-2.1872173045799017,-1.3988308931230504,-2.207395781381544,-1.9667941627002865,-1.6748432066635108,-.9265077203256434,-.0541972372500527,-.18026213329416008,-.15232124758200827,-.016555865669302033,.31289505893870784,.4280654296827472,.23124350286854853,-.08736638276460744,-.12552132795947232,-.12547908619418155,-.38089709050886683,-.2844407665876804,-.11944152964360766,.12056136689031131,.21189843131890268,.1658159847015422,.13376820638890077,.22205496825803592,.15120100371874812,.12380717441381156,-1.235259678432226,-2.222275911684921,-3.378285680998969,-3.415076124219421,-2.7282977589825297,-1.5576789730825455,-1.6478932560447972,-2.067907968457094,-2.004290735457912,-2.6427456963680775,-1.930947467983862,-.16864865516592528,-.22642518078963322,-.13321306237600422,-.20692971953006373,-.068344938706069,.14493915164047724,.4650583247482101,.32789481378377733,.1852927254910838,-.1356638873386786,-.03585192275390197,-.17203834043005656,-.15954900238018477,-.05958171313143122,-.017228379259871054,.12402459410135006,.1524538089963059,.1627194606370896,.24817234249560427,.26053579199245763,-.04769125558408293,-.8145999303179203,-2.074066074419681,-3.154489159895426,-2.9212825837849565,-2.40774190894317,-1.6411629435379833,-1.576697627349694,-1.8007661961299257,-2.0001525985045707,-1.5107274159689619,-1.2839600483166405,-.631967111188135,.3107157406422172,-.21370915949408273,-.16393119308951343,-.0974817040158397,.13767875532837173,.23695911940697742,.3615877419673283,-.0006696253821662316,-.1026502520704758,-.18176695609293456,-.059120611570986824,-.13702193484548986,-.00735380131579763,.020281061259494877,.1503250145998206,.16876214929227357,.18780650312631536,.16308782299108887,.18583847563977354,.4490729609236465,-.020800703185301726,-1.4297091333258476,-2.4259185480628145,-2.4053777736536626,-1.982130703567588,-1.3372642957080885,-1.2989780551182537,-1.3731553217305845,-1.2269479805895975,-1.2032897772528626,-.22206046284030648,-.1841554828910981,-.23415549346578352,.07793632568988745,-.21633114300736572,-.05944972221175794,.013318329293146938,.2877543730088398,.21963323601338633,.16649953505637383,-.18974789333555656,-.1737958013223644,-.23416130311702454,-.13478379984035538,-.13112027137758978,.033522350558872455,.13259733500476653,.171380750952115,.15737574769334917,.09247716245660553,.13448891283084696,.4116145942481744,.35609170613712005,-.5531644985020381,-1.540851379466907,-1.8005308506197801,-1.5719273509294158,-.9404057795331605,-.8389941648002093,-.7733641692859126,-.6656241101650995,-.4002640865408188,-.3675097145491356,.2414435659750552,-.0656771881779108,-.21341675767851534,-.041369287190265204,-.08740484292179958,.04460147122538273,.19583406251777175,.1830038441344799,.012219595757112435,-.034593273427629516,-.14926486203867156,-.036665364495836496,-.1306231554860259,-.08638162405193898,.0020423415177502173,.11239290885891448,.12781279786870536,.10954302373131516,.14996801038078228,.12965098836907352,.14324588543961356,.0567484033157079,-.07934259271000402,-.7714589827483544,-1.1705860882999304,-1.0754357146023004,-.5463269466436349,-.37732231762995055,-.29185933229148303,-.18245346577017127,-.15252816280103537,.00992307413149221,-.05334501261419268,.10643359538216246,-.06963530217299803,-.20853401810086858,.03871878333386132,.024793140061197767,.2221501854940542,.1909069391112047,.13458393481660855,-.1226120784542075,-.06040684690366743,-.08306038338398455,-.0169256864349541,-.03335293819594764,.0564744224029561,.04873056181166667,.09209822163153716,.13542751998114597,.15540921558269635,.10094403852684107,.050489672984821425,.08984099886151299,.018445471788018183,-.4428032483123847,-.6455947552354269,-.6412340959287646,-.2557177936173176,-.15489773108593363,-.10375533557574061,-.07401894727409025,-.07402176527738832,-.034956034554291714,.06533170031918539,-.07929977184739372,.03572542409731947,-.10252861876832269,-.22107962950770202,.20755848067860572,.23157078159613848,.34013467279608883,.23914223921471078,.04359196404412921,-.20186945117744784,.04172561648658725,-.038784831650455286,.07624815101935192,-.060276976551200255,-.0031358189183758184,.13054366560393055,.16122088670834137,.12129220423951546,.06462405927184613,.06315363352353807,.0368689547736123,.025599835220982206,-.17872521900892777,-.3757789408279771,-.33418602947194676,-.19087946198724595,-.09243055938719592,-.15843188266072916,-.1178716916883143,-.07983285707762743,-.0384556097211695,.015668866487966955,.005265676601997658,-.12562510603385343,-.024970842739258457,-.030574039563531708,-.21969881405226874,.5919138706078211,.39965780946904006,.2262476397429311,.07714378169383113,.07854251680850119,-.0038697706067326258,.21858339549378,.08387013381984681,-.1914992924369444,.05367331518054547,.22201073984886688,.16922848807595664,.12511007660405662,.09511163485538424,.0841953956240581,.010195208908487656,-.01658912331368151,-.07692269919160621,-.17023093289451025,-.26998035777525775,-.28189859430096476,-.32749231042729776,-.240474927671948,-.27714150491609907,-.16857870511456344,-.056310601502134704,.026291702225850644,-.028508101274427284,-.06630706179098649,-.27187198211633473,.06621925794626239,.32825613521942065,-.2130375838630078,1.1917438602108388,.2807025357241521,.23447144426975483,.1651152909709915,.40113579910945835,.017152293761210982,-.1450564820739392,.13833755803781553,.2361453534315919,.16033553043559276,.17442784770871,.17988585089228476,.143828955260344,.07132752932041192,.016244981011210025,-.013577696292888701,-.024045478766089354,-.11184718959298219,-.1466657480521107,.008087681789972736,-.16842937423863127,-.4354348937994489,-.2997528685170986,-.22753898297998879,-.06903603291657966,.014977564920406507,-.02042087790603848,-.13524198281736244,-.1573938044754166,-.3340126093430992,.46815371603113554,.9302172976832263,-.26733338229185055,1.4166629302294091,.6066447960893963,.3603810860087503,.4605515924213614,-.32071019427276837,.15916183580862947,.5514216292911032,.20419289205444074,.051921880744650394,.24679565757292954,.2706202610478356,.15590400545853877,.08185944105119965,-.04098023110727716,.019596242113331462,.09436442791977376,.06527851980277598,-.029838116901178446,.15435464918439099,-.03938665594416125,-.07779640601620462,-.28158476919608044,-.03311012802272485,.018548614200940845,.06704610765103773,-.0442452017815352,-.1525534131110006,-.22929077462390082,-.08530271071238826,-.04930239368333223,.8574436846312782,1.8448220136861364,-.6874455683197501,1.810880881855317,.6623703970370957,-.31567909429421087,.8323221790747578,.9786336592299799,.30994126117364096,-.041163173314528664,.17633262873947353,.23161854928102976,.2508770436670255,.19868696729956423,.09356988769444988,.03236232444292232,-.002750766613633768,.21821986304703905,.37880734420129814,.40096920495374666,.9356115419306689,.6132603995532996,.1638528799494483,.1009541629695858,.05660159184623324,.15561323638878471,.07300029281297159,-.005544245314691569,-.13817032242271102,-.11770539535407684,-.09624545727844742,.4644289412509608,.45587938373772585,1.3432089992982477,2.5059762271849535,-.9382969763987489,.6492144586928863,.7978253203448007,1.3025551528258366,.9417497410073223,.0999214696597348,.2871278626692066,.1585368007924338,.130717335778855,.17042917695126153,.1998644332453962,.13725228360851915,.029723534135295476,.09814363533870286,.19047751491127032,.4933533797343521,.7808930441209985,.2968658742882804,.38131881367791126,.4064367365251492,.19053499830856688,.20033550195294633,.13287714582076576,.10533560171090586,.0008548789781538824,-.04943529640626747,-.08130941155497949,.05794771671040313,.48207744089263116,1.2538880645112733,1.2204758332556214,.8779386387662574,1.8796293205435075,-.45285576127696725,2.2308682152547137,1.2382711063757557,-.03520793699594507,.8817567227830668,.5591603196165794,.18718127547628777,.01176467325227445,.06874700659527258,.13522321325294812,.17151312046437606,.10315365060575944,-.0011239413451798732,.14993420590829387,.3895911022808224,.3884586226441047,.6971673018273219,.5180206439350141,.2883776700148891,.10583936790249669,.0710166156702107,.16001776032454934,.10715662619027419,.05618871675953212,-.03582584015504452,.006146991796811139,.08949387784356472,.68387295014826,1.1016519558168656,1.3182383587355595,.6663538204015352,.5486367363209722,4.054777023104894,.5486367363209715,.6663538204015342,1.3182383587355562,1.101651955816866,.6838729501482614,.08949387784356506,.006146991796810629,-.03582584015504452,.05618871675953043,.10715662619027334,.16001776032454856,.07101661567021002,.10583936790249539,.2883776700148883,.5180206439350135,.2968658742883096,.388458622644122,.38959110228084654,.14993420590831108,-.001123941345177488,.10315365060576374,.17151312046437922,.13522321325295103,.06874700659527355,.011764673252275867,.18718127547628682,.5591603196165779,.881756722783062,-.035207936995944634,1.2382711063757532,2.2308682152547106,-.45285576127696175,1.8796293205435037,.8779386387662579,1.2204758332556218,1.2538880645112747,.4820774408926327,.05794771671040518,-.08130941155497955,-.04943529640626837,.0008548789781495917,.10533560171090255,.132877145820761,.20033550195294705,.19053499830855697,.40643673652513423,.38131881367792647,.9356115419306881,.7808930441210271,.49335337973436416,.1904775149112758,.0981436353387047,.029723534135297252,.13725228360851988,.19986443324539666,.17042917695126267,.13071733577885625,.15853680079243432,.28712786266920415,.09992146965973223,.9417497410073171,1.3025551528258328,.7978253203448017,.6492144586928862,-.9382969763987445,2.505976227184955,1.3432089992982421,.45587938373772335,.46442894125096235,-.09624545727844717,-.11770539535407766,-.13817032242271216,-.005544245314694519,.07300029281296944,.1556132363887834,.05660159184623321,.10095416296958591,.16385287994945555,.613260399553306,.15435464918440814,.40096920495376004,.37880734420131523,.218219863047049,-.0027507666136306606,.03236232444292454,.09356988769444934,.19868696729956342,.2508770436670255,.2316185492810306,.17633262873947425,-.041163173314526666,.30994126117363635,.9786336592299767,.8323221790747578,-.3156790942942159,.662370397037097,1.810880881855315,-.6874455683197483,1.8448220136861369,.8574436846312773,-.0493023936833296,-.08530271071238829,-.2292907746239018,-.15255341311100187,-.04424520178153933,.0670461076510356,.018548614200940294,-.03311012802272051,-.2815847691960758,-.07779640601620005,-.039386655944146774,.008087681789976134,-.02983811690117316,.0652785198027806,.09436442791977824,.019596242113334855,-.04098023110727665,.08185944105119855,.15590400545853553,.2706202610478356,.24679565757292907,.05192188074465168,.20419289205443947,.5514216292910992,.15916183580862936,-.3207101942727711,.46055159242136157,.36038108600874996,.606644796089398,1.416662930229405,-.2673333822918505,.9302172976832263,.4681537160311345,-.3340126093430979,-.1573938044754171,-.13524198281736302,-.02042087790604074,.014977564920405115,-.06903603291657855,-.2275389829799863,-.29975286851709465,-.4354348937994427,-.16842937423862725,-.28189859430095965,-.1466657480521052,-.1118471895929717,-.024045478766081197,-.01357769629288397,.01624498101121273,.07132752932040962,.14382895526034015,.1798858508922834,.17442784770871067,.16033553043559218,.23614535343159299,.13833755803781575,-.14505648207394348,.01715229376121234,.40113579910946,.16511529097099317,.23447144426975502,.2807025357241538,1.1917438602108381,-.21303758386300692,.3282561352194251,.06621925794626213,-.2718719821163353,-.06630706179098739,-.028508101274429792,.026291702225849072,-.056310601502134,-.1685787051145608,-.27714150491609657,-.24047492767194564,-.3274923104272947,-.19087946198724157,-.2699803577752515,-.17023093289450597,-.07692269919160243,-.016589123313677224,.01019520890848913,.08419539562405712,.09511163485538146,.12511007660405613,.1692284880759545,.22201073984886613,.053673315180547035,-.19149929243694658,.08387013381984704,.21858339549377928,-.0038697706067313737,.0785425168085006,.07714378169383322,.2262476397429297,.3996578094690411,.5919138706078217,-.21969881405226852,-.0305740395635305,-.024970842739259945,-.1256251060338537,.005265676601996701,.015668866487966397,-.038455609721168606,-.07983285707762636,-.11787169168831266,-.15843188266072725,-.09243055938719412,-.25571779361731145,-.33418602947193976,-.3757789408279684,-.17872521900892277,.025599835220983438,.0368689547736149,.0631536335235363,.06462405927184454,.12129220423951372,.1612208867083402,.1305436656039314,-.003135818918377517,-.060276976551199596,.07624815101935135,-.03878483165045592,.04172561648658526,-.20186945117744698,.043591964044126186,.23914223921470992,.3401346727960877,.23157078159613964,.20755848067860685,-.22107962950770196,-.1025286187683216,.03572542409731814,-.07929977184739355,.06533170031918509,-.034956034554288036,-.07402176527738524,-.07401894727408691,-.10375533557573537,-.15489773108592672,-.5463269466436349,-.641234095928764,-.6455947552354269,-.44280324831238616,.018445471788017767,.08984099886151031,.05048967298482026,.10094403852683856,.15540921558269635,.13542751998114574,.09209822163153619,.04873056181166658,.056474422402955825,-.03335293819594981,-.01692568643495722,-.08306038338399054,-.06040684690366743,-.1226120784542102,.13458393481660744,.19090693911120402,.22215018549405383,.02479314006119874,.038718783333861403,-.20853401810086775,-.06963530217299803,.1064335953821621,-.05334501261419192,.00992307413149367,-.15252816280103507,-.1824534657701707,-.291859332291483,-.3773223176299495,-.9404057795331534,-1.0754357146022915,-1.1705860882999222,-.7714589827483473,-.07934259271000449,.05674840331570382,.14324588543960787,.12965098836906794,.14996801038078103,.10954302373131049,.12781279786870486,.11239290885891398,.002042341517751725,-.08638162405194173,-.13062315548602732,-.03666536449584196,-.149264862038672,-.03459327342763485,.012219595757109143,.18300384413447635,.1958340625177715,.0446014712253844,-.08740484292179726,-.04136928719026287,-.21341675767851565,-.0656771881779069,.24144356597505726,-.36750971454912684,-.40026408654081164,-.6656241101650917,-.7733641692859056,-.8389941648002021,-1.3372642957080858,-1.5719273509294132,-1.8005308506197781,-1.5408513794669076,-.5531644985020383,.3560917061371113,.4116145942481696,.1344889128308404,.09247716245660478,.1573757476933456,.17138075095211283,.1325973350047658,.03352235055887238,-.13112027137759125,-.13478379984035713,-.23416130311702804,-.1737958013223642,-.18974789333555622,.16649953505637016,.21963323601338522,.28775437300883855,.013318329293152468,-.05944972221175441,-.21633114300735917,.07793632568988698,-.2341554934657765,-.18415548289109335,-.2220604628402971,-1.203289777252857,-1.2269479805895944,-1.3731553217305832,-1.2989780551182524,-1.64116294353798,-1.9821307035675826,-2.4053777736536572,-2.4259185480628087,-1.4297091333258454,-.020800703185307738,.44907296092364196,.1858384756397643,.16308782299108818,.18780650312631128,.1687621492922723,.15032501459981898,.020281061259495404,-.007353801315796421,-.13702193484548603,-.059120611570979247,-.18176695609293375,-.10265025207047287,-.0006696253821684415,.3615877419673271,.2369591194069768,.13767875532837892,-.09748170401583293,-.1639311930895031,-.2137091594940832,.3107157406422304,-.6319671111881267,-1.283960048316625,-1.5107274159689543,-2.0001525985045667,-1.800766196129921,-1.5766976273496909,-1.557678973082544,-2.4077419089431698,-2.921282583784955,-3.1544891598954266,-2.074066074419682,-.8145999303179303,-.04769125558408684,.26053579199245114,.24817234249560396,.16271946063708537,.1524538089963024,.12402459410134949,-.017228379259870755,-.05958171313142866,-.15954900238017725,-.17203834043004781,-.03585192275390215,-.13566388733867182,.1852927254910774,.32789481378377766,.4650583247482103,.14493915164048596,-.06834493870606016,-.20692971953005135,-.13321306237600447,-.22642518078961474,-.16864865516591712,-1.9309474679838514,-2.6427456963680735,-2.0042907354579094,-2.067907968457093,-1.6478932560447959,-2.2937692343725686,-2.7282977589825266,-3.4150761242194196,-3.378285680998969,-2.222275911684919,-1.2352596784322352,.12380717441380877,.15120100371873849,.22205496825803597,.13376820638889372,.16581598470153905,.21189843131890046,.1205613668903118,-.11944152964360859,-.2844407665876833,-.3808970905088692,-.1254790861941803,-.12552132795948226,-.08736638276460633,.2312435028685467,.42806542968274885,.31289505893871633,-.016555865669298363,-.15232124758199445,-.18026213329416074,-.054197237250036744,-.9265077203256314,-1.6748432066634964,-1.966794162700286,-2.2073957813815404,-1.3988308931230464,-2.187217304579897,-1.7701160974209202,-2.3995834975192563,-3.1079150257531603,-2.2759627738397428,-1.9867837341406698,-1.1991385138433992,.25261423619714135,-.08688394903694385,.13841341497021575,-.013991851319408978,.15451076629740176,.20777584924549833,.37732986906226257,-.1983231816223982,-.06470132025005006,-.7580993906075129,-.005655209467068792,-1.0666730319382445,.5168021952817432,-.05986757947942188,.5770491101708914,.07361258580540825,.16986402710259826,-.27685168579682035,.23610433796619823,-.25969657852055217,-.3410580426032341,-2.3692424085383355,-.13683987631719494,-.6063122548783239,-3.0428213499062093,-1.4302518240108333,-1.0960340088024054,.33378719268138207,-1.462532482812221,-1.1311602269894572,-.42160647485916913,-.7728239811338516,.051358135035689895,-.12451483496808054,.07456060444801794,-.0714002635141984,.12710467168208478,.20183473326046905,.5358217017440833,-.3191891366103783,.028167647498415164,-.4937578405327754,-.671559610604369,-.7989672475729755,-.01561152443937639,.07414820559189893,.44602122877613765,.17221102955705844,.07085444983721219,-.07178740615442418,.04335079435503895,.23127204626685866,-.49437187443974595,-1.3068505835636535,-.5050532801402167,-.5516235280495194,-2.409570266538846,-1.9119199452512292],bottom:{real:[4046.4241509904555,28839.973879370627,10191.512031448321,4381.745580729326,2071.954841391502,1107.282586745483,528.3455155315031,308.973302997304,185.81061014820492,130.08108126519062,87.65365496956511,59.09553675383809,43.5062694558484,34.57522231168169,30.79809745290528,25.523061346781674,25.951646714603154,25.52306134678159,30.79809745290521,34.575222311681706,43.50626945584836,59.09553675383802,87.65365496956517,130.08108126519082,185.81061014820492,308.9733029973038,528.3455155315033,1107.2825867454833,2071.954841391503,4381.745580729332,10191.512031448323,28839.973879370646,13493.224333003216,16392.51995145616,4871.835388507577,1571.3337493887716,567.6409664515353,373.6703632325283,244.24660034041102,142.79597933554817,106.13580676907658,75.85834762271053,58.06132256419008,39.85453847302155,30.569538051408923,25.094853941398878,22.929757321982656,20.808198660555963,22.04888812794956,23.622937534136554,29.13868315116802,38.08298107447914,54.39934218587819,77.82662149201184,121.61239162949131,177.63416429867098,254.30481783551838,430.47940336338183,664.6352580903059,1219.8477670929726,1935.5749815900854,3358.0980991141623,6069.217591691605,8660.703929170162,15384.540019848313,11175.737303494303,2216.879483433469,674.5985908630485,308.5763093759745,222.13525013253278,144.62539946693838,89.35178904734964,66.20028378403181,53.5880480094322,38.10483512466045,27.11271894406526,23.0333116325101,19.85886354561889,19.408029208714364,19.38215160767772,20.87171121755368,24.726583224259915,29.429525390428484,39.688247321389746,54.02667736866649,71.50918951653236,109.7023701375058,145.30501493896827,183.8476594317636,237.38092500065588,353.51632607639505,531.2703272946572,719.1706536370991,1367.9024800373177,2857.732229334478,8625.014975132006,3926.861100346452,2444.3527388912776,1028.8359899085383,585.5616655429562,332.57137935864864,180.13762334769046,105.17011934648103,61.496465220623485,45.504823244138095,37.90846017249317,30.846794326525625,21.222093075405745,18.718288087401802,17.679602313216872,17.409839934721365,17.794391783727544,18.55926931620083,21.34840958130715,24.39997962145603,30.767061622228063,38.103008129659166,44.81251118779231,61.577721983396955,87.29148588450872,106.99539363556599,134.18057082099898,169.37440787587974,269.99443977661724,364.5624879914471,674.5083954608231,1521.022929703357,2634.7343778883865,2024.849011267275,1926.8239401023498,1491.9478410044117,611.8362791883309,316.43682665588744,155.99683828976544,89.67337986475002,50.013293885425135,37.52800970717606,32.4518569290627,24.96614670350918,19.130394004010906,15.343856356149828,14.843145659919786,14.861292517540363,15.036681247518919,15.312687438440403,17.138709070816013,19.446116741695533,22.850207518010233,27.457440287528367,32.58150530830809,40.985078317877736,54.412823137373685,75.7624376442659,94.73305934658734,128.1467358253355,182.29010502256293,275.9549807303486,527.3269557849401,1132.5867520786235,1866.4077869841046,2266.7457843108455,2107.849516989544,1234.6592459623437,673.7095428348114,266.6693703142779,139.47307538222793,66.73073111331448,41.917980917088734,31.2590211502941,26.786032891522527,20.35627716260823,16.038244917569745,14.499148814332527,13.459360575928033,13.144389071570192,12.567429683418663,12.230328765246885,13.466217665828195,15.328301760046475,17.144679989146308,19.68756841312236,24.07413404470534,32.72703461228699,43.026808431859955,59.19377390623037,78.82051256303095,92.99417854470647,120.42091176843755,201.9182636225097,436.44287859172925,877.8862778005057,1439.6385876846614,1649.991139346905,1699.4038415062987,1039.2560892520887,495.5166152968933,235.81544665938515,113.58561083280532,60.921551746622946,35.725757089786256,25.024628727892466,22.490208420088727,17.75982379192019,13.543616943986416,12.938917306264663,11.956364952724385,11.421939705679733,11.372903592178258,11.032765269291394,11.408229662647633,12.481114469594095,13.60275540468532,14.91952183557448,17.807798659576154,23.277252196336814,31.950664619854233,47.416694920263616,56.268912844615144,64.959626427587,85.07080953900385,130.82046704446515,257.6757193526242,627.4672126329166,1194.1693767483914,1080.1900960853154,902.674413704009,600.0405579473822,333.23520458042,166.5653831933532,88.94630554757107,50.71739323274513,31.897215329939996,23.060146944216118,18.57978056254417,15.572760511446054,13.273777678692191,12.224913053368416,11.68638594982613,10.392044527527784,10.422646713468026,10.113778554702394,10.225072497047023,10.776357928238541,11.471833692521193,12.585855785544721,15.131216045563061,18.856673404562432,24.858220592568422,32.65728080220338,43.03798769624031,51.536289299313914,59.08796022590117,89.41884663641925,168.4478105078281,382.14409608709747,745.2779764237599,544.9352379585605,546.6325594355021,362.69938393816085,222.4530875664997,124.7835476428534,69.15551045543614,41.705006957506896,26.952419331651356,19.77855541151112,17.743475715717917,14.471795156401063,12.765457059373892,11.899864411981882,10.85818004844373,10.325708895539952,9.569271974525638,9.211348082086339,9.068032997029013,9.773443256037565,10.488284402310196,11.32319714067481,13.23504887223821,16.674941080314653,20.771526297093455,27.56941781857049,33.10306848160457,37.13160941522371,47.9647604307364,66.57881750760357,119.94841754808802,237.18123750436465,409.50889944188236,307.01018353832677,288.6676029163843,236.16368190120858,154.32114106589464,92.30377324569548,55.468009578938926,35.843010431224045,24.692475316947775,18.31794202383119,15.815283825259236,13.970653175227845,12.321358605090134,11.166914874614415,10.532076178141539,9.973858270077274,9.439553232293433,8.852477993151703,8.596032516390286,8.723315099425728,9.460546505870271,10.702831587760128,11.695932356823622,14.406509159208545,18.893042693096525,25.031728162044864,28.237283751764654,32.11015444012318,38.78178298956029,56.41249717617234,92.1569459348398,157.10935603874077,244.2492508143064,218.20881258539546,216.90433976724358,169.13695858014356,112.62100758585845,68.70530790516959,45.982361360241526,32.725373555898344,22.221572369125827,17.135020014783734,14.281960328360523,12.699315839076576,11.637118060780567,11.004832210877884,10.393382355075936,9.625960216653379,8.765201384599987,8.56501202823621,8.585447651774187,8.185151868753188,9.127087262857684,9.83839770401408,11.693775785132257,13.287947209975439,16.544820171465705,21.672488061489553,27.762087103200397,29.796933806391767,35.44318849026896,51.826480475596476,76.69213661877438,114.45554660359461,172.81330831382385,150.57608076172548,151.07347077509746,119.80060075739978,84.30708089677061,55.59442395215062,38.954469932130465,27.855857296119165,21.147383956632677,16.095362427853317,14.114901096214023,12.272097096384341,11.279235865220194,10.45557624282722,10.21340372397941,9.435254000412767,9.059591562681522,8.428576772270588,8.218967691673965,8.248320783896837,8.727213385180734,9.38534177467142,10.436988631508529,11.737372360714012,14.160123000210135,18.9595792421897,24.173697545434358,27.627516713161423,33.591531685669004,45.29743998493664,65.89753949730466,88.61094452128638,122.51594786973793,102.9717174324289,99.77114417163114,80.2546364501959,61.009511746666256,44.78691291380718,34.27102450032318,25.65851527359349,19.184194785168692,15.369946764821139,13.384363033613122,12.174478369218367,10.905903566261369,10.181651684644681,9.640875595253302,9.574230453297359,8.97633087224121,8.549303268806982,8.064448476431524,8.427686598834292,8.72909633979811,9.121092688430965,10.045472592156113,11.11042960636143,12.723025686618605,15.905816263070196,20.70949104573221,24.791931496783274,30.865414152401307,41.83571418562319,55.039237230593706,69.94725096238655,86.30565695416685,70.24607741665449,70.16319096773124,60.94158545735483,46.98868155158853,37.426824229947464,31.10511465478153,24.71795750943227,18.191253220796238,14.40571246916225,12.794837539520243,11.45286867499644,10.555233980671725,10.138595490186225,9.761793932644013,9.29451140670217,9.19785195708974,8.526970468266507,8.369498694773359,8.390085060120985,8.901978011001628,9.499322405169718,10.189344774081897,11.038776504531349,12.139382952337165,14.296273465828305,18.325479810549485,23.245126565071455,28.658675517780157,38.227879918404916,50.026933715114076,59.913478880080035,67.14288472835021,60.67320096274469,56.006191670589025,48.95238380733793,41.87728990082497,35.56375265114289,29.381802508508265,23.323351055229473,18.385352146785323,14.386074460433269,11.971768024825069,10.813949701229296,10.104265892334448,9.787383736052597,9.787645018242003,9.37365706088819,9.106783751430337,8.878274256847538,8.410860465515668,8.514529191196903,9.144463863378933,9.590368756917496,10.050972673200409,10.599176866339214,12.029252308933458,13.885440808202775,16.9338405396521,20.94976745380013,27.39267044577291,35.24694581160402,44.844494652773115,53.52792012053346,59.51190645761453,53.048047546158344,49.66790259120493,45.161821768091436,39.040569237963304,34.15349837076654,28.812200326236947,21.915204963295363,16.82529154292102,14.19448100676546,11.707465544074312,10.438485210613589,9.815124564873926,9.283134914271356,9.082142057825001,9.047050535951438,9.09240899822194,8.846694431391352,8.473593906264338,8.498070251525021,9.011344572210785,9.28987103872928,9.957567886683233,10.426127211956205,11.223822839806607,13.77325124182781,16.688691177663944,20.746301629724744,26.320191080313084,33.9798684365786,42.0788988747152,48.313306819757166,52.481937610238305,49.070609767594966,49.766679020971374,46.54427285231858,40.229040805773415,32.55983963778149,26.180018982316895,21.083604085221012,16.97356072267355,13.301411970448795,11.264067238060504,10.255581922596939,9.653621368211203,9.215377406296422,8.746811076118282,8.435654271837505,8.73238467436222,8.845859907838124,8.73238467436222,8.435654271837503,8.74681107611829,9.215377406296428,9.653621368211212,10.255581922596944,11.264067238060512,13.301411970448795,16.973560722673543,21.08360408522101,26.18001898231688,32.559839637781494,40.22904080577338,46.54427285231857,49.76667902097133,53.048047546158344,52.4819376102382,48.31330681975705,42.0788988747152,33.97986843657858,26.320191080313087,20.746301629724748,16.68869117766396,13.773251241827822,11.22382283980661,10.426127211956201,9.957567886683226,9.289871038729279,9.011344572210792,8.498070251525027,8.473593906264336,8.84669443139135,9.092408998221947,9.04705053595144,9.082142057825006,9.283134914271354,9.815124564873928,10.438485210613582,11.707465544074319,14.19448100676546,16.825291542921,21.915204963295366,28.81220032623694,34.15349837076655,39.04056923796328,45.16182176809137,49.667902591205,60.67320096274468,59.51190645761457,53.5279201205334,44.84449465277307,35.24694581160401,27.392670445772925,20.949767453800135,16.933840539652095,13.88544080820277,12.029252308933453,10.599176866339214,10.0509726732004,9.590368756917488,9.144463863378933,8.51452919119691,8.410860465515672,8.878274256847535,9.106783751430338,9.373657060888185,9.787645018242001,9.787383736052602,10.10426589233446,10.813949701229305,11.971768024825074,14.386074460433273,18.385352146785333,23.323351055229466,29.38180250850825,35.56375265114288,41.87728990082496,48.952383807337874,56.00619167058891,70.24607741665429,67.14288472835011,59.913478880079964,50.02693371511406,38.22787991840492,28.65867551778019,23.24512656507147,18.325479810549478,14.296273465828305,12.139382952337156,11.038776504531354,10.189344774081897,9.499322405169723,8.901978011001633,8.390085060120985,8.369498694773357,8.526970468266507,9.197851957089739,9.294511406702163,9.761793932644014,10.138595490186225,10.555233980671725,11.452868674996441,12.794837539520238,14.405712469162248,18.19125322079625,24.717957509432264,31.105114654781534,37.42682422994745,46.98868155158849,60.941585457354776,70.16319096773115,102.97171743242879,86.3056569541668,69.94725096238649,55.039237230593784,41.83571418562317,30.865414152401325,24.791931496783278,20.709491045732214,15.905816263070196,12.723025686618604,11.110429606361421,10.045472592156107,9.121092688430974,8.729096339798112,8.427686598834294,8.064448476431526,8.549303268806982,8.976330872241213,9.574230453297362,9.640875595253306,10.181651684644681,10.905903566261369,12.174478369218367,13.384363033613125,15.369946764821144,19.18419478516869,25.658515273593498,34.27102450032314,44.78691291380715,61.00951174666618,80.25463645019579,99.77114417163101,150.57608076172505,122.51594786973776,88.61094452128623,65.89753949730463,45.297439984936574,33.591531685669025,27.627516713161402,24.173697545434354,18.9595792421897,14.160123000210131,11.737372360714007,10.436988631508525,9.385341774671417,8.727213385180733,8.248320783896826,8.218967691673969,8.42857677227059,9.05959156268152,9.435254000412765,10.213403723979411,10.455576242827226,11.27923586522019,12.272097096384336,14.114901096214016,16.09536242785333,21.1473839566327,27.85585729611916,38.95446993213041,55.594423952150585,84.30708089677043,119.80060075739968,151.0734707750972,218.20881258539524,172.81330831382382,114.45554660359451,76.69213661877443,51.82648047559643,35.44318849026896,29.796933806391745,27.762087103200372,21.67248806148955,16.544820171465698,13.287947209975444,11.693775785132251,9.838397704014087,9.127087262857684,8.18515186875319,8.58544765177418,8.565012028236207,8.765201384599994,9.625960216653379,10.393382355075921,11.004832210877884,11.637118060780562,12.699315839076572,14.281960328360505,17.13502001478374,22.221572369125806,32.72537355589832,45.98236136024148,68.70530790516956,112.62100758585837,169.13695858014344,216.90433976724287,307.01018353832563,244.24925081430612,157.1093560387404,92.15694593483975,56.412497176172316,38.7817829895603,32.11015444012317,28.237283751764654,25.031728162044857,18.893042693096504,14.406509159208543,11.695932356823613,10.702831587760132,9.460546505870267,8.72331509942572,8.596032516390284,8.852477993151705,9.439553232293427,9.973858270077281,10.53207617814155,11.166914874614413,12.321358605090143,13.970653175227838,15.815283825259229,18.317942023831186,24.692475316947778,35.84301043122402,55.46800957893881,92.30377324569537,154.32114106589427,236.1636819012079,288.66760291638354,544.9352379585605,409.5088994418828,237.18123750436465,119.9484175480882,66.57881750760357,47.964760430736455,37.13160941522369,33.10306848160456,27.56941781857049,20.771526297093434,16.674941080314646,13.235048872238199,11.323197140674804,10.488284402310184,9.773443256037565,9.068032997029011,9.211348082086339,9.569271974525646,10.325708895539957,10.85818004844373,11.899864411981884,12.765457059373892,14.471795156401072,17.743475715717903,19.77855541151112,26.952419331651342,41.70500695750688,69.15551045543599,124.7835476428534,222.45308756649936,362.6993839381608,546.6325594355021,1080.190096085312,745.2779764237579,382.1440960870959,168.44781050782805,89.41884663641922,59.087960225901135,51.53628929931389,43.03798769624031,32.657280802203374,24.858220592568383,18.8566734045624,15.131216045563052,12.585855785544725,11.471833692521184,10.776357928238532,10.22507249704702,10.113778554702403,10.422646713468026,10.39204452752778,11.686385949826136,12.224913053368411,13.273777678692191,15.572760511446033,18.57978056254414,23.06014694421612,31.897215329939918,50.717393232745025,88.94630554757079,166.56538319335294,333.23520458041884,600.0405579473809,902.6744137040065,1649.9911393469013,1194.1693767483896,627.4672126329157,257.67571935262464,130.82046704446515,85.0708095390039,64.95962642758694,56.2689128446152,47.416694920263595,31.950664619854226,23.277252196336782,17.807798659576147,14.919521835574468,13.60275540468532,12.48111446959408,11.408229662647638,11.032765269291394,11.37290359217827,11.42193970567975,11.956364952724407,12.938917306264656,13.543616943986398,17.75982379192014,22.490208420088635,25.024628727892473,35.72575708978623,60.92155174662291,113.58561083280503,235.81544665938503,495.516615296892,1039.2560892520876,1699.403841506296,2266.7457843108423,1439.6385876846614,877.8862778005042,436.4428785917297,201.91826362250967,120.42091176843758,92.99417854470644,78.82051256303102,59.19377390623031,43.02680843185989,32.72703461228695,24.074134044705318,19.68756841312234,17.1446799891463,15.32830176004647,13.466217665828177,12.230328765246888,12.567429683418707,13.144389071570203,13.459360575928054,14.499148814332536,16.03824491756973,20.356277162608194,26.786032891522385,31.259021150294068,41.91798091708869,66.7307311133144,139.47307538222745,266.6693703142776,673.7095428348102,1234.659245962343,2107.8495169895405,2024.849011267276,1866.4077869841062,1132.5867520786235,527.3269557849405,275.9549807303485,182.29010502256293,128.14673582533564,94.7330593465875,75.76243764426589,54.41282313737368,40.98507831787773,32.58150530830807,27.457440287528364,22.85020751801021,19.446116741695526,17.13870907081601,15.312687438440404,15.036681247518965,14.861292517540395,14.843145659919811,15.343856356149836,19.130394004010878,24.966146703509185,32.45185692906261,37.528009707176075,50.013293885425036,89.67337986474986,155.9968382897651,316.4368266558874,611.8362791883301,1491.9478410044112,1926.8239401023493,3926.8611003464503,2634.734377888386,1521.0229297033557,674.508395460824,364.56248799144686,269.9944397766174,169.37440787587963,134.18057082099915,106.99539363556599,87.2914858845087,61.577721983396906,44.81251118779232,38.103008129659166,30.767061622228066,24.399979621456033,21.348409581307155,18.55926931620083,17.794391783727576,17.409839934721397,17.67960231321689,18.71828808740179,21.222093075405763,30.846794326525586,37.90846017249308,45.504823244138095,61.496465220623335,105.17011934648093,180.13762334768973,332.5713793586485,585.5616655429553,1028.835989908537,2444.352738891274,15384.54001984831,8625.01497513201,2857.732229334476,1367.90248003732,719.1706536370989,531.2703272946578,353.516326076395,237.38092500065625,183.84765943176362,145.3050149389683,109.70237013750581,71.50918951653222,54.02667736866647,39.68824732138969,29.429525390428473,24.726583224260004,20.871711217553678,19.38215160767773,19.408029208714364,19.85886354561895,23.033311632510113,27.11271894406525,38.10483512466044,53.58804800943198,66.20028378403181,89.35178904734937,144.6253994669383,222.13525013253218,308.5763093759745,674.5985908630483,2216.8794834334685,11175.737303494294,13493.224333003214,8660.703929170164,6069.217591691604,3358.098099114159,1935.5749815900851,1219.8477670929722,664.635258090306,430.47940336338263,254.30481783551838,177.63416429867087,121.61239162949126,77.82662149201184,54.399342185878204,38.082981074479164,29.138683151168006,23.622937534136597,22.04888812794956,20.80819866055599,22.92975732198266,25.094853941398917,30.56953805140891,39.85453847302151,58.06132256419004,75.85834762271038,106.13580676907651,142.795979335548,244.246600340411,373.6703632325282,567.6409664515357,1571.3337493887695,4871.835388507573,16392.519951456165],imag:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},imag:[0,-1.343901621327011,1.721833324939457,1.3937858919791224,-.904784867734521,.9956083728012485,.13374486301187097,.7978179059888694,.08123543012206277,.47338465820086184,-.07853466443921621,.2950011933196759,-.6247916276373429,.2951717097474046,-1.8712573358384692,.14096520515743682,0,-.14096520515741828,1.8712573358384816,-.2951717097473781,.6247916276373373,-.29500119331966146,.07853466443922305,-.4733846582008596,-.08123543012206277,-.79781790598886,-.1337448630118737,-.9956083728012485,.9047848677345208,-1.3937858919791226,-1.7218333249394557,1.3439016213270112,1.5871307700950068,.5637011092588632,1.2603198064423482,2.9317402483699255,-.8409084656280159,.2839544102155089,1.0393523450590114,.8310491123379952,.5733425968094368,.30043904784975134,.29266755430531527,.08293010406402415,-.3650283542031338,-.7621355462343821,-.5431683864795783,-.6602817924610193,.20250391456576916,-.059393044635645806,.9730252602081445,-.01782962412134724,.18933865423621773,.011846708470834844,.014269719747672759,-.16281560265463554,-.24410560657714067,-.34963232308526365,-.32234943120999277,-.6691127915152365,.14162995430492473,-.9690987495763558,-1.0446282489208472,1.3612809629252947,.7046490796090316,1.644656498115789,1.457626495523533,-.6840361527612806,-.681474708971962,.7311857387294264,1.2398159392319572,1.2736175855463174,.6555066385893611,.4589733287486102,.2494812924962717,.2295941880121868,-.6735544911252082,-.7891737944140509,-.833663158873984,-.02279594414115591,.157531969600533,.5083619532158246,.16292155588892338,.14047533322536612,-.029004083819245446,.042892010327960466,-.0847803286744503,-.1321705591443332,-.30971168558439593,-.44061350110378666,-.593809888932934,-.4671902772630274,-1.2068396187631398,-.9496940875254227,.2896061689589903,-.40038203546320883,.5562024927443893,.14065731983379595,1.390858139437829,-.6783334205276503,-2.0926714021100303,1.5120873610545131,1.7251253398279642,1.0499886203647506,.6413261932720733,.43315407205712014,.32584150801434064,.17968537990933128,-.27887473465086693,-.7264668532809715,-.9520027428255372,-.38747270801185796,.31172559850957127,.3167238274644899,.25925756638025876,.20404659434537992,.19201780058118942,.0025274006864131854,-.20254250312507205,-.301466819890184,-.45156398868756126,-.7158395939816518,-.7863634374888125,-1.3089140888320636,.4139391942136343,-.9230837800112506,-.9608676869506684,.994894967509791,-.39381772120025876,-.5926473858270555,-1.1161873115341066,-.38954314931717815,.15776662530084892,.39428020304678685,1.7089894615168126,.9286849101064603,.350973234838865,.3212528804707568,.23669588269358602,.19592809956108717,-.3264696987509312,-.5617213523679232,-.7659613758273989,-.4848448097808058,.0035984972735877987,.36234031342999445,.02584515038201295,.3813234596441356,.2917223569671276,.10460468586389386,-.14942504329756173,-.2340648419056832,-.5970258341713899,-.6479171630934003,-1.1972380302487249,-.37081056871520385,.31028937719203986,-.11181138224479611,.05022415004119631,-.5924281903599851,-.4703174557375312,-.5556706599080107,-.18073895078348806,-.07286620180284567,.9080135456055427,1.3448759333642528,.5639174664677074,.6882456370936582,.270544474915452,.1855550606492347,.21628766080629094,.08922769637111864,-.1330464412169812,-.5104407538921645,-.5748295632952253,-.499928421733889,-.008888226974178647,-.026119953804469152,.16649307508904443,.18021017930701566,.24129551707937363,.05141476622049072,-.05440923791370335,-.21354052285348152,-.34065461819243753,-.8321595295545801,-.6545515144341882,-.5171174887453374,-.34193161983249143,.2599196779142151,-.3192283896931117,-.2509623323107447,-.019538834540300996,.23386297177233037,.39736821511961345,.7260382384711854,.8168297825020705,1.0763583447726135,.806113881274012,-.023349196100613815,.09911450222934183,.11136104528246665,.11912886110102348,.1510441091194204,-.10294245821664937,-.34339582552474845,-.46071517851602106,-.2745498847774613,-.021291149638310566,.03581857177521538,.08165077597052256,.19593247304969552,.16021249355536668,.07341110181145782,-.09441366146062889,-.14774431296435828,-.3788677957633147,-.38953231590523063,-.6289222156301494,-.8021965599423332,.19764870263775744,-.2862016389005325,.04173881161878554,-.04750283167130345,.42759360787810174,.4435334033074589,.612327609854575,.7020782016690547,.7219260366639536,.6392879141687147,.3258926130651039,.17268517789923485,-.1183225223006091,.04939158090533926,.12347320818582375,.06469798143401673,-.006710209168704759,-.2737081974258909,-.26939466873920287,-.25176222060999,.00813102285298534,.013089808045657288,.185105158015618,.11713478908555769,.20974664985683705,.04874577836816892,-.006935953460316863,-.18083894269546222,-.1590773470203919,-.3049032697254573,-.4952504311071168,-.2063397715454307,-.28929558460304977,.01725566086804829,.08925055891284024,.3434977458343078,.3827720504358852,.5677210207032581,.4881147517750161,.43659704639067964,.38858095560717315,.35469216713625445,.11095078972724678,-.05035409898656247,.010426074631633324,-.023032548262322892,.0685580235114857,.1199625535177883,-.004434755204994449,-.14323623171577524,-.2742488887234425,-.15059247824174998,-.18695930341705305,.06813688020408373,.04916201156820307,.16362595169702937,.07832572097557808,.11153460033842358,-.10346450949096449,-.03925026108281402,-.12027128091306288,-.23113762225192683,-.07885965728132803,-.2598298090974699,-.112193082069427,-.19372413199270677,.1843821378255476,.22544536191476028,.22838873802709003,.11856768480607156,.2001101062269439,.16443500436191505,.1344103610721337,.1560099579732318,.02998498079292612,-.01795042558889614,-.095997178609832,.04581555915567668,.05060040141112804,.0625550701522621,.09536267957415628,-.2588472108186818,-.19352665675464722,-.35758313393883445,.05724199410125697,-.07448979769121256,.15760636776309309,.07711029442456042,.21793581355625327,-.0853841567280578,.0542780951185194,-.06351351655225722,-.13925876777247995,-.05309048214962413,-.08855066431481835,.09705317802047587,.021982682491266895,-.0320570437725536,.011606155190390474,.20297398899260674,.08713770793778194,.14235450986309658,-.006634429052264465,.06944355111332648,.037974760198136455,.02723212012252952,-.030406089689394462,-.06289143982632239,-.033462702565164315,-.13091343010011852,.18662643567548856,.14580799486104234,-.055902479292620696,-.12813917376287484,-.4370654490609753,-.09792671156559801,-.17130544619864244,.30727693305691806,-.2953735036217468,.2205640575182558,-.16529753202987246,.3404745588343642,-.0020829156573361745,-.1477566402016345,-.07451855199653255,-.1485032050753669,-.057283952975165524,.06466541846880637,.23511892751228192,.11870789775778592,.0625549454189092,-.03129802431166904,.0064402102662661845,-.07908206366482008,.0553675188881671,.025089334126077875,.06380009174949475,.01598882409357055,-.0485453569421806,-.11558972094679192,-.09748734332934658,-.0004949292816682794,-.18157168721539482,.3394228896917068,.3052238631985539,-.5463958953710175,.013830571830100688,-.38850732372171304,.223075916963486,-.31865288748874443,.25745374979707547,-.8188534714960727,.5085516891060978,.20195166784419227,-.06978574367189032,.05088417995496527,-.18377202523753672,-.17303565260659334,-.15924096907201105,.0921469322051947,.26379835890783954,.35934781180257075,.24329566614587647,.18564601960109514,.24223475523068938,.2896764687039265,.15967526911861643,.2236525476678126,.12185893624650075,.07010515076512246,-.045495054958742086,-.13016925945874308,-.12331107551299306,-.09658598904032947,.22919036999990153,-.39865574246315477,.3675558227752026,.4559731496763589,-.9322732995444801,.3211078437592451,-.5916002406790702,.39469180639349893,-1.5810043928614619,.7192616842627553,-.09592034339847655,-.08487714593751221,.4039957386289845,-.04174339774265379,-.1030386108486746,-.21220001866353477,-.17318676777643013,.015792824133968684,.3799471493407144,.4573031649737595,.4849146321923636,.278045596991639,.330997517931827,.07346181941874468,.3044571730020384,.3481533243335257,.27336662525128713,.05011351109495184,-.05940584463270739,-.1626114347474223,-.10891422081227681,-.07507029717115797,.15348950297637756,.6313299455118446,-.9360445989877769,.4232569705540574,1.1782712312395338,-1.6700526640562563,.6730754801286777,-2.036587646020969,.696651869739933,-.3990336398782886,-.7775110416888031,.5628167675812451,.04446899108365955,.08127813274590998,-.07099339435842372,-.09185286036621106,-.10956166698887557,.07294149309473505,.3516732889665791,.6348806757989582,.5619968460520506,.6062770727450226,-.01897019762481933,.37668655809680845,.2231700372991837,.17596357423928666,.182021098919622,.038230887694388455,-.10475039750351335,-.1512317199312191,-.11278544639649389,.05411089572076022,.23852479976301316,.30802887330694756,.9587111952302938,-1.4503952980081434,-.06145839150349969,2.138997807668353,-3.5142346308062073,1.6764175122847729,-.6325266075787294,-1.1970497991660358,.46027494328631885,-.38868529039399474,.06306613375883041,.08502403448097447,.047630852690686495,-.022775175196356016,.011847923870825085,.13095780969018636,.39870906011464996,.5410013327184018,.6285964225750199,.12859489098386362,-.17371304193339687,-.7713566279215256,-.3569696489220254,-.15350152251372465,-.08110842702990148,-.12890403553126065,-.14048874638904316,-.18368108831833277,-.13143015225876853,.03731818798640201,.398153506664189,.446850695599386,.29854169122462937,1.0193515924216456,-2.1696976832709978,-1.5476694374721527,4.111501359710062,-1.6066056279080296,-1.1129988398741206,.9464135190271308,-.6646448718237143,-.22405122030787003,-.1684513504650424,.10281428632219461,.12776142939872864,.10903691838775739,.0974771489483065,.19622512970077355,.3758189010900003,.5815217498439217,.575882448967759,.5683582142796539,0,-.07566059104010174,-.5319087481065502,-.4906650633876551,-.2538852177443554,-.17759782612549996,-.17342105765811164,-.1717237906748887,-.17163733194043357,-.009691726103346027,.23320936684713756,.6154416324788491,.2303178322389413,.4504667163321609,-.2542218615438303,-1.2338903723029762,0,1.233890372302968,.2542218615438289,-.45046671633216256,-.23031783223894184,-.61544163247885,-.2332093668471385,.009691726103345007,.17163733194043357,.17172379067488885,.17342105765811225,.17759782612550043,.25388521774435546,.4906650633876564,.5319087481065498,.07566059104010284,.17371304193345374,-.5683582142795844,-.5758824489677223,-.5815217498439111,-.37581890108999716,-.1962251297007692,-.09747714894830553,-.1090369183877569,-.12776142939873006,-.10281428632219579,.1684513504650413,.22405122030786861,.6646448718237126,-.9464135190271386,1.112998839874119,1.6066056279080259,-4.111501359710058,1.5476694374721462,2.169697683270998,-1.0193515924216472,-.2985416912246324,-.44685069559938834,-.39815350666419097,-.03731818798640415,.13143015225876697,.18368108831833294,.14048874638904385,.12890403553126736,.0811084270299098,.15350152251374438,.3569696489220662,.7713566279215556,.018970197624865574,-.1285948909838308,-.6285964225750031,-.5410013327183986,-.39870906011464824,-.13095780969018578,-.011847923870824886,.02277517519635736,-.04763085269068705,-.08502403448097469,-.06306613375883256,.38868529039399197,-.4602749432863225,1.1970497991660347,.6325266075787281,-1.6764175122847713,3.5142346308062082,-2.138997807668362,.06145839150349631,1.4503952980081398,-.9587111952302971,-.30802887330694667,-.2385247997630148,-.0541108957207615,.11278544639649313,.15123171993121864,.1047503975035141,-.03823088769438403,-.18202109891961496,-.1759635742392747,-.2231700372991606,-.3766865580967669,-.33099751793180054,-.6062770727449965,-.5619968460520336,-.6348806757989502,-.35167328896657507,-.07294149309473368,.1095616669888755,.0918528603662118,.07099339435842339,-.08127813274590924,-.044468991083660724,-.5628167675812489,.7775110416888034,.3990336398782871,-.6966518697399285,2.0365876460209633,-.6730754801286755,1.6700526640562572,-1.17827123123954,-.42325697055405653,.9360445989877786,-.6313299455118465,-.15348950297637845,.0750702971711561,.10891422081227575,.16261143474742193,.05940584463270852,-.05011351109494761,-.2733666252512826,-.3481533243335174,-.3044571730020204,-.07346181941872514,-.24223475523068566,-.278045596991634,-.48491463219235625,-.45730316497375445,-.37994714934071183,-.015792824133968708,.17318676777642958,.21220001866353638,.10303861084867472,.04174339774265514,-.40399573862898636,.08487714593751182,.0959203433984764,-.719261684262751,1.5810043928614652,-.3946918063934955,.59160024067907,-.32110784375924395,.932273299544479,-.4559731496763611,-.3675558227752009,.39865574246315755,-.22919036999990147,.09658598904032888,.12331107551299252,.1301692594587433,.045495054958742745,-.07010515076512172,-.12185893624649984,-.223652547667811,-.15967526911861513,-.28967646870392255,-.006440210266261173,-.18564601960108706,-.2432956661458719,-.3593478118025666,-.2637983589078372,-.0921469322051936,.15924096907201093,.17303565260659445,.18377202523753683,-.05088417995496395,.06978574367189057,-.20195166784419286,-.5085516891060973,.8188534714960719,-.25745374979707175,.3186528874887527,-.22307591696348483,.3885073237217165,-.013830571830101068,.546395895371022,-.305223863198555,-.3394228896917048,.18157168721539607,.0004949292816654663,.09748734332934587,.11558972094679136,.04854535694218131,-.015988824093569717,-.06380009174949508,-.025089334126078205,-.055367518888164394,.07908206366482075,-.08713770793777711,.03129802431166981,-.06255494541890674,-.1187078977577844,-.23511892751228033,-.06466541846880579,.05728395297516605,.14850320507536743,.07451855199653275,.14775664020163706,.0020829156573371555,-.34047455883436323,.16529753202987046,-.22056405751825445,.29537350362174863,-.30727693305691484,.17130544619864224,.0979267115656023,.4370654490609771,.12813917376287753,.055902479292622584,-.14580799486104357,-.18662643567548898,.13091343010011883,.03346270256516358,.06289143982632284,.03040608968939467,-.02723212012252924,-.03797476019813689,-.06944355111332663,.006634429052265361,-.14235450986309153,-.22838873802708684,-.2029739889926063,-.011606155190393872,.032057043772551565,-.021982682491265355,-.09705317802047468,.08855066431481819,.05309048214962463,.13925876777248047,.06351351655226015,-.054278095118517826,.08538415672805795,-.21793581355625447,-.07711029442455894,-.1576063677630919,.07448979769121587,-.057241994101257694,.3575831339388394,.1935266567546499,.25884721081868634,-.09536267957415476,-.06255507015225903,-.050600401411129904,-.04581555915567774,.09599717860983221,.0179504255888953,-.029984980792924155,-.15600995797322956,-.13441036107213314,-.16443500436191227,-.20011010622694014,-.1185676848060674,-.3827720504358852,-.22544536191476122,-.18438213782554774,.19372413199270522,.11219308206942717,.25982980909746933,.07885965728132813,.23113762225192824,.12027128091306288,.03925026108281611,.10346450949096535,-.11153460033842286,-.07832572097557809,-.16362595169702793,-.049162011568201006,-.06813688020407746,.18695930341705305,.15059247824175628,.2742488887234457,.14323623171577923,.004434755204995782,-.11996255351778637,-.0685580235114842,.023032548262321723,-.010426074631633324,.05035409898656467,-.11095078972724633,-.35469216713625396,-.38858095560717304,-.43659704639067964,-.4881147517750165,-.5677210207032584,-.4275936078781049,-.34349774583431025,-.08925055891284522,-.017255660868053985,.2892955846030494,.20633977154543065,.49525043110711575,.30490326972545867,.15907734702039197,.1808389426954664,.006935953460319154,-.04874577836816606,-.20974664985683683,-.11713478908555536,-.18510515801561447,-.013089808045645399,-.008131022852986567,.2517622206100028,.2693946687392072,.273708197425899,.006710209168707876,-.06469798143401254,-.12347320818582255,-.0493915809053365,.11832252230060807,-.17268517789922963,-.32589261306509937,-.639287914168712,-.7219260366639526,-.7020782016690555,-.6123276098545748,-.44353340330746277,.01953883454029997,.04750283167129971,-.041738811618788646,.2862016389005296,-.19764870263775797,.8021965599423365,.6289222156301542,.3895323159052357,.37886779576331475,.14774431296436413,.09441366146063283,-.07341110181145313,-.16021249355536557,-.19593247304968892,-.08165077597051315,-.03581857177519336,.021291149638310077,.27454988477748077,.46071517851603194,.3433958255247594,.10294245821665464,-.15104410911941546,-.11912886110102075,-.1113610452824651,-.09911450222934172,.02334919610061857,-.8061138812740085,-1.0763583447726097,-.8168297825020715,-.7260382384711874,-.39736821511961523,-.23386297177233123,.4703174557375292,.2509623323107428,.31922838969310624,-.25991967791422005,.34193161983249054,.517117488745342,.6545515144341917,.8321595295545877,.3406546181924375,.21354052285348993,.05440923791370753,-.051414766220484194,-.24129551707937194,-.18021017930700467,-.16649307508903324,.02611995380449984,.008888226974177819,.4999284217339134,.5748295632952383,.510440753892181,.13304644121698647,-.08922769637111018,-.21628766080628836,-.18555506064923225,-.27054447491545125,-.688245637093645,-.5639174664677029,-1.344875933364252,-.9080135456055456,.07286620180284165,.18073895078348665,.5556706599080086,.3938177212002582,.5924281903599832,-.05022415004119711,.11181138224479518,-.31028937719204,.3708105687152074,1.1972380302487284,.6479171630934083,.5970258341713901,.2340648419056917,.1494250432975659,-.10460468586388726,-.2917223569671256,-.38132345964412656,-.02584515038199919,-.36234031342997136,-.0035984972735878563,.484844809780835,.7659613758274156,.5617213523679431,.32646969875093934,-.19592809956107882,-.23669588269358457,-.32125288047075495,-.3509732348388646,-.9286849101064518,-1.7089894615168075,-.3942802030467882,-.1577666253008498,.3895431493171764,1.1161873115341048,.5926473858270547,-.5562024927443876,-.9948949675097908,.9608676869506646,.923083780011243,-.4139391942136339,1.3089140888320632,.7863634374888133,.7158395939816597,.4515639886875609,.3014668198901915,.2025425031250778,-.0025274006864056797,-.1920178005811869,-.20404659434537004,-.25925756638025355,-.31672382746446043,-.3117255985095709,.387472708011902,.9520027428255602,.7264668532809944,.2788747346508717,-.17968537990931685,-.3258415080143367,-.4331540720571135,-.6413261932720714,-1.0499886203647348,-1.7251253398279605,-1.5120873610545145,2.092671402110029,.678333420527655,-1.3908581394378237,-.14065731983379445,-.704649079609032,.4003820354632061,-.2896061689589916,.9496940875254203,1.2068396187631385,.4671902772630277,.5938098889329356,.44061350110379105,.30971168558439566,.1321705591443394,.08478032867445422,-.042892010327952576,.02900408381925063,-.1404753332253544,-.16292155588890503,-.5083619532157557,-.15753196960053273,.022795944141262008,.8336631588740234,.7891737944140912,.6735544911252132,-.2295941880121686,-.24948129249626083,-.4589733287485918,-.6555066385893606,-1.2736175855462932,-1.2398159392319503,-.7311857387294178,.681474708971963,.6840361527612938,-1.4576264955235338,-1.6446564981157907,-1.587130770095007,-1.361280962925294,1.044628248920846,.9690987495763536,-.1416299543049248,.6691127915152362,.32234943120999365,.34963232308526704,.244105606577141,.16281560265463482,-.014269719747667968,-.011846708470826806,-.18933865423621368,.017829624121361812,-.9730252602081131,.05939304463575307,-.2025039145657705,.6602817924610479,.5431683864796097,.7621355462344159,.36502835420313695,-.08293010406400844,-.29266755430530383,-.30043904784973247,-.5733425968094366,-.8310491123379783,-1.039352345059011,-.28395441021550044,.840908465628016,-2.9317402483699175,-1.2603198064423498,-.5637011092588653],height:32,width:32,top:{real:[7376.258656397969,2820.8522261533344,-5690.949708539517,-4380.451337629613,388.6547315083493,-903.738522922329,-92.23368885456094,42.706854165930984,-25.699252344104405,18.326281263011424,-9.854238749915744,37.93351045351143,-7.866668430967025,29.305075180843883,-62.72861735466191,59.85324062738893,-83.63637439904494,59.853240627386725,-62.728617354660756,29.305075180844177,-7.866668430967183,37.93351045351143,-9.854238749916066,18.326281263013065,-25.699252344104405,42.70685416593069,-92.23368885455788,-903.7385229223205,388.6547315083471,-4380.4513376296045,-5690.949708539511,2820.8522261533035,-14789.032757371706,-31341.18584811776,-11739.029695619593,-866.7846665811339,-286.68893204831016,-488.3313322508757,-120.74864963582691,33.024718339611894,4.6010715329524166,-5.445674010995977,4.113903067106239,6.8633911029603265,13.634662924808397,1.860738389345556,-.35796846682150263,-16.62506921077511,-14.807142725465134,-11.664010623894898,.8207681555703734,-12.155673848711613,29.148348103795893,15.708115389403888,15.457503110539639,-12.683126140048403,18.96112093185931,-53.601071866945205,34.13442733448511,-942.7276077420217,-816.050944813798,-3798.5470080468217,-8876.42787310433,2890.8320511623124,-27232.42194054986,-15984.118662988652,-6745.568222360413,-409.0173927639226,-42.225544009425754,-526.2922550452712,-49.32565565290618,-23.20435390028933,15.630174176003303,-14.835941429972856,6.4726407463551725,1.9958373496876167,13.291351981828791,-1.1889020916883648,10.030112101155916,-20.67441842084843,-.1180338988714332,-18.74520767411604,-1.9041291470929314,-7.871099481794243,20.38587909738803,14.857882580655026,16.95019727458754,-2.033086164989526,25.446982376231624,-20.62459219009594,89.30325669500957,-637.0667107212057,-1428.8365567175017,-3113.2951228079887,-8881.588935127695,-20696.443600183225,-9007.313179629116,-5346.330609000281,-1439.1675666408983,-1292.5663502582722,-654.0994476037728,-301.7022747283896,-97.440927522084,-3.3329385156017457,-8.202796513162015,-5.774263947387032,-.5106953831985463,6.640288063631823,8.012652033059101,4.0882931682311625,-1.521034739607415,-2.233575686924605,-2.3288001542285928,-8.13154709651151,-6.9403489082507335,-3.674864902798056,4.593750742744353,9.495700824153968,10.21057060635477,11.67682549979278,23.75885873750166,20.28823698768961,20.9697668571251,-333.51324485695324,-810.1584353673162,-2278.682054098889,-5194.409091620209,-7188.339898707115,-3154.0647285180166,-3175.2001764803263,-3085.2108289353805,-1226.2977859942123,-836.2620618172178,-301.22169990911055,-15.123294918373254,-11.324269109892445,-4.999221097969336,-6.7152536525607,-1.7063097661780617,2.7727430774894133,7.135788132168215,4.866990482124882,2.7536893948953045,-2.039934630711028,-.5489892871976103,-2.9485150656567436,-3.1026085263061316,-1.3614545093317587,-.47304719477880164,4.040907971073893,6.248331301572371,8.854025232654797,18.80214162335462,24.681352644731625,-6.111478730512031,-148.49350684902615,-572.3488635999528,-1663.447165744248,-3308.605953472853,-4493.828247899506,-3720.0991836319017,-3323.4413322476125,-2223.332633868252,-1347.5218927383742,-402.86472873295924,-179.0778566066358,-42.17162736915355,13.024576486879551,-6.680339136637107,-4.3910663300422375,-1.9843645852297727,2.2081255979025864,3.4357055351949564,4.866739798973896,-.008801816555391827,-1.2900498248809058,-2.223069631674785,-.7961310239517896,-2.1003135650570957,-.12607857026311342,.39928478103703097,3.6189445517483683,5.523084701132182,8.08071443227348,9.653783720993834,14.647883903859292,41.76117110773358,-2.5048396429986766,-288.68438568639834,-1058.7748743456032,-2111.6481404168812,-2853.5518466904464,-2206.474238883325,-2207.488296900341,-1427.060029597421,-607.9731104871157,-283.75431628355585,-25.222873313531675,-11.21903778037437,-8.365382280797615,1.9503276148055415,-4.8653324939916756,-1.0558165909594248,.18037835028025548,3.723230036877415,2.6260151255238955,1.901747650437611,-2.157984497724208,-1.9174482807780493,-2.671365924063863,-1.6822520344543337,-1.783596980145315,.50013744114288,2.3612666445612516,3.9892729615099713,5.028259733848998,4.384961399296521,7.567544914645971,26.73833027450421,30.29300971120987,-72.36523804645397,-397.03998761961856,-1129.7740740979677,-1877.1475049531305,-1015.8170093531105,-757.3385658121136,-464.0498676348327,-221.8093865245269,-66.67014095320897,-32.688631361988044,12.245388279073117,-2.09491941357581,-4.921421792424727,-.7686322780239969,-1.3611346863617457,.5920300131883174,2.3940543871676745,2.138653552857357,.12698658321630202,-.36055346759858353,-1.509631760657328,-.37490601010058217,-1.4076418772333708,-.9909556252137327,.02570461580723476,1.7006413859335137,2.41012418633353,2.72304464828999,4.897547426352959,5.579917642233582,7.382361392952302,3.3531473980019464,-7.094723129271724,-129.95057654055665,-447.33256260550814,-801.4985531526427,-297.712804672423,-206.25666421819534,-105.85720001872387,-40.587336797783266,-19.033005269759897,.6862352568504775,-2.224754122223199,2.868642893715354,-1.3772856826259623,-3.700118286073842,.5603303011127165,.3164957648182627,2.6435570864758695,2.072901917366745,1.3896745329326239,-1.1733083260901866,-.5564284933709801,-.7531942972718523,-.16542223594150865,-.3498151014517736,.639471018274414,.6449513671490333,1.5357324193076427,2.8130362926385226,4.284541597255651,3.341557420163751,1.8747628167747612,4.309201987250532,1.2280777000161127,-53.113548920223614,-153.12296297306594,-262.5910689083988,-78.50796675246865,-44.71395672976317,-24.503242066462356,-11.422688403833899,-6.832488237410147,-1.9389416594991726,2.3416848160301655,-1.9581076589813595,.6544162473914797,-1.6215192060328243,-3.0886268279599727,2.557402471968773,2.5859312055320047,3.582324284715654,2.385170800316441,.411488665094779,-1.7870448740379692,.3586747560851346,-.33833230756510146,.7213491787051987,-.6451343286468626,-.036676325952571386,1.880678514199683,3.0459530955995717,3.0361534846987768,1.8248078988499765,2.0278729258957484,1.4298438030821454,1.444150632114136,-16.470770345398158,-59.03838740640355,-81.62468733113072,-41.65158074717607,-20.04858945819673,-26.796686775361913,-13.274828683787613,-5.48494102646779,-1.7682797425272327,.5127695090162155,.11701161368370352,-2.1525887062494076,-.35663258536781867,-.3882693848937121,-2.5566610369397282,6.513912829330354,4.153796425003821,2.177850779277181,.6761807821160477,.6727176011927574,-.03322371296847739,1.7891382881043305,.7654900301212932,-1.8840461990319548,.6276437133660342,2.9500669911593334,2.799854903105731,2.7114466415734606,2.640497491382968,2.5087646302130264,.3613507110411972,-.8597558755237771,-5.89936615548755,-19.483874473281006,-46.656198806892085,-42.44718550207896,-49.47539998840752,-28.80904080219163,-23.364991274814315,-9.372036001443622,-2.193549633075087,.7323779052753541,-.6028717635248831,-1.067236191051992,-3.837446138403733,.8126491631670523,3.702478373345459,-2.227430700667376,12.171761179906976,2.648499723117314,2.1242155181960216,1.3916869062247985,3.2969221728544564,.1414776211221006,-1.2659388719629114,1.2983452624583423,2.4646463691490883,1.8819178233751466,2.469919778217255,3.410560044540994,3.476877662739366,1.970602508408192,.5456937943711528,-.6150348829608226,-1.584537886719974,-9.910885111885545,-17.96889314262851,.8328024839604734,-16.804391379900096,-34.94566909960443,-18.287776152890835,-10.19076861522101,-2.365935575489219,.38430207827148843,-.39175809943359,-2.078662076271716,-2.1066158183404973,-4.0664292874937455,5.105639281222473,9.471148516042044,-2.577327881134023,13.563457368659881,5.445444411621721,3.0810071966308192,3.71409458782056,-2.7028450063821525,1.3893389983926554,5.029567791169772,2.0512141006459763,.5768744010433312,3.139987490646312,4.304436149290965,3.228692605037394,2.0294536549063102,-1.2648718051872285,.8198227841656076,5.193746134405688,4.566053007097891,-2.575198281431435,10.842808636227273,-2.7634934625905125,-4.741036325511608,-13.231297049532179,-1.239206941737581,.576956771407574,1.6572428400911725,-.8048756694131317,-2.197640605466401,-2.9337382106235617,-.9769607434101947,-.5203983011347634,8.693274674091336,18.008772340009436,-6.389470676234774,16.656214263229323,5.648012814589276,-2.642075767662634,6.983253879862469,8.71177531529134,2.944231966553327,-.4194257648970201,1.9464964791115495,2.8117062685871983,3.586606822562346,3.6410340078674697,2.1750438821370093,.9274613552108363,-.10515597578954901,10.916870623975495,22.695665816423684,26.922229107827643,56.766547106622895,34.3463794813641,8.02098906722306,4.227686749372474,2.0129650120803855,4.572197379285084,1.7026114564114816,-.10193290249876912,-1.9877285465951933,-1.4091416884493304,-1.0407935339809435,4.692713510495082,4.461866465996299,13.14685287043932,23.49016175637019,-8.54486765868434,5.763904015786262,6.710397445275458,11.090643871879529,8.611796474987928,.95828374077,2.885914301402635,1.6803595914225926,1.5724318132354216,2.366484248547459,3.3844724421254813,2.8754034241014996,.8142069750518306,3.4592633965370854,8.541867898911974,26.408180301615612,46.47243379513072,15.748155014076561,18.939305693948317,18.355423454953527,7.438594793720825,6.84215823955665,3.828482944166501,2.3084513014265475,.01438358804135348,-.7017083759025844,-.9519271341888802,.604886383870369,4.7316501322768225,11.640012070252736,11.084534895769892,7.942755232382746,17.090358547431578,-4.006276541512437,18.90347131446114,10.522914852414784,-.3172708519471489,8.191406242187256,5.567876842121583,1.9515757898119943,.13204460835173984,.9468697939602826,2.2566984460298456,3.5582629306092612,2.7150237945754423,-.038191379039643265,6.309066288275824,18.822434458740766,20.387061197767007,34.21042461069561,25.78016711295075,13.422328957688888,4.257816250206805,2.3122896178400203,4.189268002804536,2.259247881703766,.9537225958470233,-.4765342590896943,.06924012891108702,.917811795795561,6.601850524692877,10.152138543237006,11.530381877152177,5.6211304516254526,4.790907028041365,35.86798950390679,4.790907028041358,5.621130451625443,11.530381877152157,10.152138543237017,6.601850524692898,.917811795795565,.06924012891108133,-.4765342590896943,.9537225958469944,2.2592478817037476,4.189268002804514,2.3122896178399985,4.257816250206748,13.422328957688848,25.78016711295069,15.74815501407811,20.387061197767874,18.82243445874189,6.309066288276548,-.03819137903956219,2.7150237945755555,3.5582629306093274,2.2566984460298958,.946869793960297,.1320446083517558,1.951575789811984,5.567876842121564,8.19140624218721,-.3172708519471452,10.522914852414772,18.90347131446111,-4.006276541512388,17.090358547431556,7.942755232382751,11.084534895769902,11.640012070252746,4.7316501322768385,.60488638387039,-.9519271341888812,-.7017083759025972,.014383588041281273,2.308451301426475,3.8284829441663635,6.842158239556676,7.438594793720435,18.355423454952824,18.9393056939491,56.76654710662406,46.47243379513245,26.408180301616227,8.54186789891221,3.4592633965371484,.8142069750518798,2.875403424101515,3.384472442125488,2.3664842485474735,1.572431813235436,1.6803595914225982,2.8859143014026083,.9582837407699747,8.61179647498788,11.090643871879506,6.710397445275469,5.763904015786259,-8.544867658684302,23.490161756370185,13.146852870439265,4.461866465996277,4.692713510495103,-1.0407935339809418,-1.4091416884493408,-1.98772854659521,-.1019329024988234,1.7026114564114307,4.572197379285043,2.0129650120803833,4.227686749372477,8.020989067223404,34.346379481364394,10.842808636228447,26.9222291078285,22.695665816424683,10.916870623975989,-.10515597578943024,.9274613552109011,2.175043882136998,3.6410340078674537,3.5866068225623455,2.8117062685872063,1.9464964791115584,-.41942576489699973,2.944231966553285,8.711775315291318,6.983253879862468,-2.642075767662676,5.648012814589287,16.6562142632293,-6.389470676234752,18.008772340009443,8.693274674091327,-.5203983011347356,-.9769607434101951,-2.9337382106235728,-2.1976406054664195,-.8048756694132073,1.657242840091119,.5769567714075567,-1.2392069417374179,-13.231297049531948,-4.741036325511325,-2.763493462589494,.8328024839608222,-2.5751982814309775,4.566053007098211,5.1937461344059415,.8198227841657492,-1.2648718051872136,2.029453654906283,3.2286926050373275,4.304436149290965,3.1399874906463054,.576874401043345,2.051214100645962,5.02956779116974,1.3893389983926545,-2.7028450063821756,3.7140945878205622,3.081007196630816,5.4454444116217395,13.563457368659845,-2.5773278811340234,9.471148516042044,5.105639281222461,-4.06642928749373,-2.1066158183405044,-2.0786620762717254,-.39175809943363327,.38430207827145285,-2.3659355754891784,-10.190768615220893,-18.28777615289057,-34.94566909960389,-16.804391379899673,-42.447185502078064,-17.968893142627813,-9.910885111884598,-1.5845378867194357,-.6150348829606075,.5456937943712441,1.970602508408127,3.4768776627392723,3.410560044540968,2.469919778217264,1.881917823375139,2.4646463691490985,1.2983452624583438,-1.2659388719629485,.1414776211221116,3.2969221728544715,1.391686906224813,2.124215518196023,2.6484997231173293,12.171761179906973,-2.227430700667368,3.702478373345508,.8126491631670488,-3.837446138403738,-1.0672361910520076,-.6028717635249369,.7323779052753103,-2.1935496330750563,-9.372036001443469,-23.364991274814056,-28.809040802191326,-49.47539998840697,-41.65158074717507,-46.656198806891,-19.4838744732805,-5.899366155487263,-.8597558755235543,.3613507110412495,2.5087646302129953,2.640497491382889,2.711446641573449,2.7998549031056945,2.950066991159325,.6276437133660522,-1.8840461990319775,.7654900301212954,1.789138288104325,-.033223712968466615,.6727176011927521,.6761807821160666,2.177850779277167,4.153796425003827,6.51391282933036,-2.5566610369397242,-.38826938489369667,-.3566325853678395,-2.152588706249413,.11701161368368215,.5127695090161969,-1.76827974252719,-5.484941026467714,-13.274828683787417,-26.79668677536157,-20.048589458196275,-78.50796675246646,-81.62468733112892,-59.03838740640205,-16.47077034539769,1.4441506321142048,1.429843803082246,2.0278729258956907,1.8248078988499317,3.036153484698732,3.045953095599546,1.8806785141996951,-.036676325952591224,-.6451343286468558,.721349178705193,-.3383323075651067,.35867475608511745,-1.7870448740379619,.4114886650947502,2.385170800316434,3.582324284715646,2.585931205532017,2.5574024719687887,-3.08862682795997,-1.6215192060328063,.6544162473914552,-1.9581076589813555,2.341684816030153,-1.9389416594989646,-6.832488237409854,-11.422688403833355,-24.50324206646105,-44.71395672976105,-297.712804672423,-262.5910689083989,-153.12296297306594,-53.11354892022388,1.2280777000160852,4.309201987250408,1.8747628167747172,3.341557420163666,4.284541597255651,2.813036292638515,1.5357324193076258,.6449513671490316,.6394710182744104,-.34981510145179595,-.16542223594153913,-.7531942972719063,-.5564284933709801,-1.1733083260902135,1.3896745329326132,2.0729019173667376,2.6435570864758655,.3164957648182751,.5603303011127181,-3.7001182860738244,-1.3772856826259623,2.8686428937153425,-2.224754122223166,.6862352568505768,-19.033005269759858,-40.587336797783074,-105.85720001872383,-206.25666421819477,-1015.8170093530997,-801.4985531526338,-447.3325626055032,-129.9505765405554,-7.094723129271765,3.3531473980017035,7.382361392952007,5.579917642233341,4.897547426352917,2.7230446482898696,2.4101241863335168,1.700641385933505,.025704615807253747,-.9909556252137635,-1.4076418772333852,-.37490601010063784,-1.5096317606573337,-.36055346759863915,.12698658321626774,2.1386535528573165,2.39405438716767,.5920300131883396,-1.3611346863617075,-.7686322780239524,-4.921421792424735,-2.0949194135756803,12.245388279073195,-32.688631361987156,-66.67014095320768,-221.8093865245236,-464.0498676348275,-757.3385658121049,-2206.474238883316,-1877.1475049531243,-1129.7740740979648,-397.03998761961947,-72.365238046454,30.293009711209137,26.738330274503873,7.567544914645611,4.3849613992964835,5.028259733848883,3.9892729615099154,2.361266644561238,.5001374411428784,-1.783596980145335,-1.6822520344543537,-2.6713659240639043,-1.9174482807780469,-2.1579844977242066,1.9017476504375719,2.626015125523887,3.7232300368773963,.18037835028033014,-1.0558165909593593,-4.865332493991508,1.9503276148055297,-8.365382280797357,-11.219037780374073,-25.22287331353055,-283.7543162835544,-607.9731104871125,-1427.0600295974182,-2207.488296900335,-3720.099183631889,-2853.5518466904387,-2111.648140416873,-1058.7748743456016,-288.6843856863979,-2.5048396429994018,41.76117110773314,14.647883903858578,9.653783720993783,8.080714432273291,5.523084701132133,3.618944551748326,.3992847810370409,-.12607857026309263,-2.100313565057036,-.7961310239516864,-2.223069631674776,-1.2900498248808734,-.008801816555420883,4.866739798973889,3.4357055351949497,2.2081255979026997,-1.9843645852296314,-4.391066330041937,-6.680339136637114,13.024576486880093,-42.171627369152944,-179.07785660663302,-402.86472873295685,-1347.5218927383694,-2223.332633868245,-3323.4413322476003,-3154.064728518015,-4493.828247899509,-3308.6059534728515,-1663.4471657442498,-572.3488635999529,-148.49350684902797,-6.111478730512539,24.681352644731046,18.802141623354593,8.854025232654564,6.248331301572226,4.040907971073872,-.4730471947787934,-1.361454509331699,-3.102608526305984,-2.948515065656593,-.5489892871976132,-2.039934630710932,2.753689394895215,4.866990482124894,7.135788132168221,2.7727430774895763,-1.706309766177841,-6.715253652560278,-4.999221097969348,-11.324269109891496,-15.123294918372496,-301.2216999091082,-836.2620618172166,-1226.2977859942089,-3085.2108289353782,-3175.200176480323,-9007.3131796291,-7188.339898707104,-5194.409091620202,-2278.6820540988915,-810.158435367315,-333.5132448569559,20.969766857124615,20.288236987688347,23.75885873750167,11.676825499792164,10.210570606354567,9.49570082415387,4.593750742744372,-3.6748649027980855,-6.9403489082508045,-8.131547096511563,-2.3288001542285697,-2.2335756869247856,-1.5210347396073984,4.088293168231135,8.012652033059126,6.64028806363201,-.5106953831984324,-5.774263947386494,-8.202796513162045,-3.3329385156007563,-97.44092752208263,-301.70227472838576,-654.0994476037723,-1292.5663502582681,-1439.1675666408923,-5346.33060900026,-27232.421940549855,-20696.44360018323,-8881.588935127695,-3113.2951228080024,-1428.8365567175017,-637.0667107212123,89.30325669500809,-20.62459219009961,25.446982376231595,-2.0330861649905447,16.950197274587225,14.857882580654767,20.385879097388024,-7.871099481794626,-1.9041291470930921,-18.74520767411746,-.11803389887143546,-20.674418420848326,10.030112101155776,-1.1889020916883362,13.291351981828802,1.995837349687921,6.472640746355359,-14.835941429972186,15.63017417600328,-23.204353900286776,-49.325655652904786,-526.2922550452662,-42.22554400942483,-409.0173927639147,-6745.568222360406,-15984.118662988625,-14789.032757371675,2890.832051162324,-8876.42787310433,-3798.5470080468367,-816.0509448137971,-942.7276077420302,34.13442733448254,-53.60107186694936,18.961120931859348,-12.683126140049515,15.4575031105396,15.708115389403696,29.148348103795954,-12.15567384871238,.8207681555701095,-11.664010623895932,-14.807142725465098,-16.625069210776097,-.357968466821102,1.860738389345522,13.634662924808296,6.863391102960431,4.1139030671066,-5.445674010995009,4.601071532952386,33.02471833961225,-120.74864963582446,-488.33133225087175,-286.68893204831085,-866.7846665811124,-11739.029695619576,-31341.18584811775],imag:[0,-38758.087655514835,17548.08504726914,6107.2151726624015,-1874.673387120311,1102.4198144208276,70.66349859769723,246.50443360377355,15.094404836632346,61.578388193120794,-6.883850379905633,17.433253862249003,-27.18235290574834,10.205627484635695,-57.63116578861708,3.5978635789949243,0,-3.597863578994439,57.63116578861733,-10.205627484634785,27.18235290574807,-17.43325386224813,6.883850379906236,-61.5783881931206,-15.094404836632346,-246.50443360377048,-70.66349859769869,-1102.4198144208278,1874.6733871203112,-6107.21517266241,-17548.085047269135,38758.087655514864,21415.51152670408,9240.481680183884,6140.0706338628515,4606.742396705084,-477.33409412636456,106.10534760670754,253.8582768364973,118.670471872242,60.85217906744696,22.7908097312226,16.992665274593527,3.3051410229913314,-11.158748163655874,-19.12568021630007,-12.454719286949617,-13.739274709476872,4.4649861577325,-1.403038183390045,28.35267475528794,-.6790052379783438,10.299898240809684,.9219892960858738,1.7353747463970652,-28.921613512340663,-62.07723181322848,-150.50951383829744,-214.24479740751684,-816.215744663207,274.1353961963593,-3254.328668806272,-6340.0761451284025,11789.65138431164,10840.701965194425,18380.24897742693,3231.3822724351476,-461.44982475214084,-210.28695062763435,162.42212696600188,179.30887547689923,113.80000983072934,43.39472549693249,24.59548477602943,9.50644351725762,6.2249226907652995,-15.514190495563678,-15.67209469704693,-16.179758937655365,-.4418344453840365,3.28796177703477,12.57005414423841,4.794704065681184,5.575219767602969,-1.566994278876134,3.0671728952871886,-9.300602996623944,-19.205045070959127,-56.93976849335746,-104.59324045979437,-209.921490323403,-248.20433151041027,-867.9236374610348,-1299.0888976028032,827.6168828481927,-3453.30105164401,2184.1299326736716,343.8161049808456,1430.9649107108667,-397.20604751762147,-695.9626147441301,272.38382351444113,181.43163787734565,64.57058867431132,29.183435066681643,16.420203889130576,10.051165980763317,3.81329985672547,-5.220057623492661,-12.843645059741645,-16.57421537000831,-6.894841171864867,5.785399335493025,6.761549992871188,6.325879336386598,6.277914142030076,7.316455816584333,.11325917153592484,-12.472105947256997,-26.315486653091728,-48.31526672127188,-96.05176533673017,-133.189841599909,-353.39952612993443,150.90670251969735,-622.6277593313,-1461.5017842629939,2621.2839732861958,-797.4214233918754,-1141.9271710506443,-1665.2932495998289,-238.3366310615267,49.92317026240907,61.50646507554549,153.25086116745172,46.446591336114025,13.171326963991907,10.42525251508628,5.909384131444669,3.748181741060674,-5.009304162269796,-8.337711853484214,-11.383176063308646,-7.290456859187921,.05510266399852992,6.210045216504963,.5025878115353007,8.7133201843541,8.009949196961943,3.408178127748358,-6.12419710220284,-12.736128845291272,-45.232132533425755,-61.3791750629996,-153.42214558232837,-67.5950975145708,85.62589910386124,-58.961155821254636,56.88320697106799,-1105.7125877167775,-1066.0901100808514,-1171.2701320923616,-223.1510166903665,-49.090655504704266,242.13940044346495,187.57398243385657,37.63062482495811,28.849867481961542,8.456955463477327,4.970283957738858,4.402811570225055,1.43105564783055,-1.929060150422355,-6.870206159283182,-7.555783429793225,-6.282815286883121,-.1087059380343404,-.35173698335235887,2.55205609592295,3.0896458550054593,4.750522000279903,1.2377659738692817,-1.7806530124299274,-9.187967169255963,-20.16463244939638,-65.5912406537027,-60.86948040000092,-62.27175948611826,-69.04223895420877,113.44009243151515,-280.2462227959351,-361.29505764988915,-32.2389038646619,397.42763261597736,412.9673372382922,359.76401050336045,192.6210800054142,122.25882006598455,49.109708531705785,-.8341677081323136,2.4803036198391495,2.5045331182816137,2.1157075816863125,2.045683555559115,-1.3319639541688315,-4.10576581321596,-5.262260990501468,-3.122429370817716,-.23490025627283884,.40862649299968534,1.019092681419275,2.6652215067301066,2.390293795931129,1.3072901204360872,-2.1976906085986245,-4.720528993014994,-17.96465868682184,-21.918559933832515,-40.85455217934482,-68.24351076369831,25.856495589804037,-73.74721318359471,26.189735785049756,-56.7264268907042,461.88238037931336,400.3662547887042,367.42140066372616,233.95717316464078,120.24788693419019,56.86229814651989,16.52842380846973,5.508176303740889,-2.7285347510623343,.9176847348583501,1.922818700657754,.8587866218152932,-.08203172365733125,-3.1986596327501684,-2.7995613930163934,-2.624028681216124,.08223536455831822,.1338442362392752,1.9947594371394528,1.3437508199980643,2.6398410865992954,.7375829037978984,-.13078900915043976,-4.49533432925064,-5.195033590914489,-13.12242317098767,-25.523369493146305,-12.192196214097944,-25.868477512213353,2.906678292088343,34.10657416101557,256.00130492151595,208.58597838816522,310.3347945923577,177.03891975992664,97.122360992021,48.48851018711319,24.52891787285255,4.627203457515712,-1.3571647909533122,.2062126948263101,-.40867746076362715,.9921576725859489,1.531376825664169,-.05277298563976486,-1.5552847934304939,-2.8318141898835965,-1.44106038161314,-1.7221472209588695,.6178674780052442,.48048213041449506,1.7161555169971148,.8868975797919587,1.4761658864245926,-1.7252645996654892,-.8152878302494553,-3.3158091950668926,-7.6513645380807835,-2.928185992788675,-12.462674546124116,-7.4696827367159715,-23.236903073402107,43.7319836231637,92.32188204199035,70.11766837978374,34.22664935631408,47.258739472197036,25.375797504306092,12.406583490274283,8.653561843269081,1.0747519793409035,-.44324044078252567,-1.7584707522262704,.724586071659981,.7069206586421795,.7707634519125917,1.064906925019734,-2.726198542841819,-1.9302074459527443,-3.37542502778594,.506733493065497,-.6403167230929973,1.374850007673434,.729505526484903,2.3325303094340692,-.9986473214357906,.7819578744693423,-1.1999635798104886,-3.4858876190620522,-1.4991310089769327,-2.843375506924322,3.7638952884372583,1.240098013963287,-2.9542792497780144,1.823435568047936,49.57624474623547,19.014215780516388,30.877310974744532,-1.1221271518157558,7.8208026967228905,2.609067592037944,1.2521971880796572,-.9950506434595828,-1.3975466814991453,-.5733840782028455,-1.8697004151394911,2.370028050564138,1.696784850403636,-.6151974047873662,-1.3317994275810727,-4.207174624734692,-.8583473478041032,-1.4672332071937433,2.6381100233578914,-2.417676985149717,2.013107400019082,-1.626262859601891,3.9814331515508763,-.027677673297514374,-2.444607041276003,-1.6150024285043403,-4.122758914406767,-1.7068861549694658,2.2919486155920237,12.185386506158462,9.103962312567619,7.15976047067928,-5.408715124986016,.9697416211757905,-11.947201833901593,6.633062025249099,2.115208521813355,3.546929348907518,.6228361674031171,-1.3522725353705505,-2.4444202103018355,-1.5690941230144015,-.006985877860368016,-2.2282653754616524,3.828430830887377,3.1912913728027457,-5.5805618725494135,.13049495818795365,-3.5197176720292105,1.8802124921714005,-2.6189977871286096,2.1235611153433935,-7.146308976942236,4.772931412347173,2.1077672614040215,-.8191012589463181,.7205262469271351,-3.484240274988763,-4.182911530688638,-4.399432534457007,3.095356592907991,11.949390330752637,23.68013662152991,21.558658775121675,22.744598059672118,24.94332876792813,28.90135272218845,12.814680673201753,13.644932734111247,5.45768556544121,2.4025753394703617,-1.167335562531859,-2.4971924284976894,-1.8952846661475429,-1.292741941276348,2.790273201996955,-4.347701083439493,3.742325362160104,4.395980410805589,-8.925799415294772,2.882370251254919,-5.057769871464573,3.1829717367300585,-13.324209534416688,6.278504535455041,-.8748983428436319,-.8526310432157135,4.488566215307324,-.5311023217265213,-1.6389132121610095,-4.394554386416681,-4.293634482862569,.4874520575309819,15.895360345460416,25.16961738329208,33.91844547329262,23.996907911576923,23.2512772693596,5.15431566471437,18.55410282660839,16.359265688234956,10.23124463361384,1.5587865083621433,-1.4683911434431964,-2.958105786087343,-1.5689869488245065,-.9605122563484721,1.7578951205789273,6.663835293882251,-9.490177549910648,4.131747327103883,10.951455398944859,-15.360897164532773,5.739294741971535,-17.045217645164048,5.844968444410362,-3.5521886878464675,-7.3858280585812945,5.734734089519626,.4908832539545151,.9866663790534967,-1.0149409800154179,-1.6832477381822215,-2.5467748158366237,2.090406582384414,13.443724261124899,31.761133485201317,33.67118616661112,40.70719160876065,-1.150982612793645,21.09677957250432,10.924705320167561,7.368877610403945,6.47335333926665,1.1232923919614803,-2.443130294149275,-2.7804484266994756,-1.6225398299131664,.6478030911844409,2.579395187133014,3.112405638409599,9.383274359768524,-14.19595431303103,-.5760898854676106,19.47939047921927,-31.200338855208866,14.100113777774123,-5.385666264437839,-10.946378631138824,4.4142064356850845,-3.906665232225006,.6684491059860498,1.0227755630951,.6613753856807533,-.38567118503773246,.24821124990411303,3.587284123143521,14.053276636456639,24.260931372233497,33.64745909564876,7.652927123158831,-9.215137707870635,-38.31166585868664,-16.121399661234683,-5.99278681782985,-2.770136530421177,-3.714008894587047,-3.0788396721523017,-3.0904878618769733,-1.8655827999533823,.43690140001808947,4.156119490868076,4.385895239208535,2.7714027971729753,9.257895969243517,-19.629364588289473,-14.072043519544888,36.373196183604975,-13.61372365841147,-9.458342331116125,8.528458327752043,-6.174465145795059,-2.2310052363098367,-1.75629520897435,1.153969335081464,1.7596902661237352,1.8196834579374304,2.022290334087173,5.164682908483578,12.770276815017757,24.46979490512981,27.822785449092486,29.82854034209125,0,-3.7653763488297254,-24.75730590440647,-19.738984856989376,-8.266461976159446,-4.649514459183804,-3.656340919703911,-2.914764188547905,-2.2830188616483764,-.10916825448095578,2.391697766817782,5.941240494184604,2.1224657474819093,3.9401472638367774,-2.144527732326695,-10.774805376941604,0,10.774805376941531,2.144527732326683,-3.940147263836795,-2.1224657474819155,-5.941240494184617,-2.3916977668177926,.10916825448094437,2.2830188616483764,2.9147641885479065,3.6563409197039234,4.649514459183814,8.26646197615945,19.73898485698941,24.75730590440644,3.7653763488297773,9.215137707873652,-29.828540342087546,-27.822785449090652,-24.46979490512937,-12.770276815017642,-5.164682908483464,-2.022290334087153,-1.8196834579374237,-1.7596902661237566,-1.1539693350814775,1.7562952089743382,2.231005236309821,6.1744651457950415,-8.52845832775212,9.45834233111612,13.613723658411436,-36.37319618360493,14.07204351954484,19.629364588289484,-9.257895969243535,-2.7714027971730033,-4.385895239208558,-4.156119490868093,-.4369014000181147,1.8655827999533605,3.090487861876973,3.0788396721523177,3.7140088945872396,2.770136530421462,5.992786817830616,16.121399661236502,38.31166585868818,1.1509826127964509,-7.652927123156882,-33.647459095647825,-24.260931372233326,-14.053276636456571,-3.5872841231435073,-.2482112499041089,.3856711850377551,-.6613753856807607,-1.0227755630951023,-.6684491059860727,3.906665232224975,-4.4142064356851165,10.946378631138813,5.385666264437834,-14.100113777774116,31.200338855208855,-19.47939047921935,.5760898854675786,14.195954313030994,-9.383274359768562,-3.112405638409594,-2.579395187133034,-.6478030911844564,1.6225398299131557,2.780448426699469,2.4431302941492916,-1.1232923919613498,-6.473353339266396,-7.368877610403441,-10.924705320166419,-21.09677957250195,-23.25127726935768,-40.70719160875883,-33.67118616661006,-31.7611334852009,-13.443724261124748,-2.090406582384377,2.5467748158366237,1.6832477381822348,1.0149409800154132,-.986666379053487,-.49088325395452825,-5.734734089519665,7.385828058581301,3.5521886878464564,-5.844968444410324,17.045217645163998,-5.7392947419715155,15.360897164532778,-10.951455398944907,-4.131747327103875,9.490177549910666,-6.66383529388227,-1.7578951205789377,.960512256348448,1.5689869488244914,2.958105786087338,1.4683911434432237,-1.5587865083620118,-10.231244633613667,-16.359265688234554,-18.554102826607274,-5.154315664712993,-24.943328767927714,-23.996907911576475,-33.91844547329208,-25.169617383291836,-15.895360345460304,-.487452057530983,4.293634482862555,4.394554386416715,1.6389132121610113,.5311023217265384,-4.4885662153073405,.852631043215709,.8748983428436312,-6.278504535455005,13.324209534416719,-3.1829717367300314,5.05776987146457,-2.8823702512549096,8.925799415294765,-4.395980410805612,-3.742325362160086,4.3477010834395236,-2.7902732019969543,1.2927419412763401,1.8952846661475349,2.4971924284976934,1.1673355625318764,-2.4025753394703346,-5.457685565441166,-13.644932734111133,-12.814680673201632,-28.901352722188015,-.9697416211750332,-22.744598059671098,-21.55865877512123,-23.680136621529623,-11.949390330752514,-3.0953565929079563,4.399432534457,4.182911530688664,3.484240274988765,-.7205262469271163,.8191012589463207,-2.1077672614040264,-4.772931412347166,7.146308976942229,-2.1235611153433602,2.618997787128679,-1.8802124921713912,3.5197176720292407,-.1304949581879572,5.580561872549461,-3.191291372802759,-3.828430830887353,2.228265375461667,.006985877860328306,1.5690941230143916,2.4444202103018267,1.3522725353705702,-.6228361674030838,-3.546929348907534,-2.1152085218133783,-6.633062025248768,11.947201833901675,-19.01421578051531,5.4087151249861485,-7.159760470678993,-9.103962312567507,-12.18538650615837,-2.2919486155920032,1.7068861549694805,4.122758914406779,1.615002428504344,2.4446070412760443,.027677673297527423,-3.981433151550863,1.6262628596018724,-2.0131074000190696,2.4176769851497326,-2.638110023357861,1.4672332071937413,.8583473478041416,4.2071746247347095,1.331799427581099,.6151974047873869,-1.6967848504036496,-2.3700280505641422,1.8697004151394931,.5733840782028331,1.397546681499154,.9950506434595889,-1.2521971880796428,-2.609067592037973,-7.820802696722901,1.1221271518159068,-30.877310974743335,-70.1176683797825,-49.57624474623531,-1.8234355680484657,2.954279249777826,-1.2400980139631994,-3.7638952884372125,2.8433755069243154,1.499131008976947,3.4858876190620642,1.1999635798105424,-.7819578744693196,.9986473214357916,-2.332530309434083,-.7295055264848886,-1.3748500076734225,.6403167230930256,-.5067334930655034,3.375425027785985,1.930207445952772,2.72619854284187,-1.0649069250197167,-.7707634519125544,-.7069206586422051,-.7245860716599976,1.7584707522262737,.443240440782505,-1.0747519793408324,-8.653561843268937,-12.406583490274217,-25.375797504305602,-47.25873947219602,-34.226649356312784,-208.58597838816522,-92.32188204199083,-43.731983623163735,23.236903073401958,7.469682736715982,12.462674546124104,2.928185992788677,7.651364538080827,3.3158091950668926,.8152878302494978,1.7252645996655027,-1.4761658864245817,-.8868975797919583,-1.7161555169970975,-.4804821304144749,-.6178674780051872,1.7221472209588695,1.4410603816132017,2.8318141898836315,1.5552847934305372,.05277298563978073,-1.5313768256641445,-.9921576725859278,.40867746076360606,-.2062126948263101,1.3571647909533708,-4.627203457515691,-24.528917872852457,-48.48851018711318,-97.12236099202084,-177.03891975992676,-310.3347945923578,-461.88238037931535,-256.0013049215171,-34.106574161017335,-2.906678292089301,25.868477512213314,12.192196214097933,25.52336949314624,13.12242317098773,5.195033590914491,4.495334329250737,.13078900915048275,-.7375829037978546,-2.6398410865992936,-1.3437508199980366,-1.9947594371394133,-.13384423623915356,-.08223536455833068,2.624028681216258,2.7995613930164374,3.1986596327502643,.0820317236573693,-.8587866218152375,-1.9228187006577324,-.9176847348582973,2.728534751062311,-5.50817630374071,-16.528423808469462,-56.862298146519464,-120.24788693418984,-233.9571731646403,-367.42140066372525,-400.36625478870656,32.23890386466014,56.72642689069964,-26.189735785051667,73.74721318359408,-25.85649558980411,68.24351076369864,40.85455217934509,21.91855993383282,17.96465868682183,4.720528993015179,2.197690608598713,-1.3072901204360032,-2.39029379593111,-2.6652215067300165,-1.0190926814191563,-.4086264929994344,.23490025627283342,3.122429370817941,5.262260990501599,4.105765813216099,1.331963954168899,-2.0456835555590454,-2.1157075816862583,-2.504533118281568,-2.4803036198391473,.8341677081324829,-49.10970853170554,-122.25882006598383,-192.6210800054143,-359.76401050336045,-412.9673372382936,-397.42763261597815,1066.0901100808455,361.29505764988636,280.2462227959299,-113.44009243151743,69.04223895420859,62.27175948611885,60.869480400001216,65.59124065370337,20.164632449396354,9.18796716925631,1.7806530124300617,-1.2377659738691233,-4.750522000279865,-3.0896458550052697,-2.552056095922777,.35173698335277165,.10870593803433028,6.282815286883449,7.555783429793403,6.870206159283416,1.9290601504224327,-1.4310556478304128,-4.402811570224995,-4.970283957738766,-8.456955463477293,-28.849867481960956,-37.63062482495777,-187.57398243385583,-242.13940044346546,49.09065550470147,223.15101669036463,1171.270132092355,797.4214233918746,1105.712587716775,-56.883206971068894,58.961155821254195,-85.62589910386123,67.59509751457145,153.422145582329,61.37917506300045,45.23213253342577,12.736128845291734,6.124197102203009,-3.4081781277481404,-8.009949196961886,-8.713320184353885,-.502587811535033,-6.210045216504566,-.05510266399853082,7.290456859188381,11.383176063308918,8.337711853484521,5.009304162269923,-3.7481817410605087,-5.909384131444633,-10.425252515086191,-13.171326963991898,-46.44659133611351,-153.250861167451,-61.50646507554556,-49.92317026240935,238.33663106152528,1665.293249599826,1141.9271710506428,-2184.1299326736644,-2621.2839732861944,1461.5017842629866,622.6277593312957,-150.9067025196971,353.39952612993454,133.18984159990904,96.05176533673138,48.31526672127185,26.31548665309238,12.47210594725734,-.11325917153558851,-7.316455816584236,-6.277914142029773,-6.325879336386472,-6.761549992870561,-5.785399335493018,6.894841171865663,16.57421537000874,12.843645059742064,5.220057623492746,-3.813299856725167,-10.051165980763182,-16.420203889130285,-29.183435066681557,-64.5705886743102,-181.43163787734505,-272.3838235144402,695.9626147441294,397.20604751762363,-1430.9649107108592,-343.8161049808414,-10840.70196519443,3453.3010516439876,-827.616882848196,1299.088897602802,867.9236374610335,248.20433151041067,209.92149032340356,104.5932404597956,56.93976849335743,19.20504507096003,9.300602996624374,-3.0671728952866175,1.5669942788764133,-5.575219767602496,-4.794704065680643,-12.570054144236753,-3.2879617770347638,.4418344453860932,16.17975893765613,15.672094697047777,15.5141904955638,-6.224922690764802,-9.506443517257205,-24.595484776028343,-43.39472549693245,-113.80000983072682,-179.30887547689812,-162.42212696599955,210.28695062763467,461.44982475214965,-3231.3822724351485,-18380.248977426934,-21415.51152670408,-11789.651384311637,6340.076145128395,3254.3286688062612,-274.13539619635947,816.2157446632062,214.24479740751747,150.50951383829917,62.077231813228565,28.921613512340514,-1.735374746396482,-.921989296085248,-10.299898240809465,.679005237978899,-28.35267475528701,1.4030381833925814,-4.464986157732529,13.739274709477487,12.454719286950338,19.12568021630095,11.158748163655963,-3.305141022990702,-16.992665274592852,-22.790809731221124,-60.8521790674469,-118.67047187223945,-253.85827683649717,-106.10534760670436,477.3340941263651,-4606.7423967050645,-6140.070633862854,-9240.48168018392]}},nose_filter={real:[3.0408379415611857,.3782226136313794,1.1747173276627942,.877915728669575,.2742957852453699,-.26015038230887205,-.04589694540462394,.18194913988848616,-.19035992880648842,-.05006447220662765,-.016354960260506177,.07301390320491648,.15053197342937383,-.47378158951033317,-.33333577915227425,-.30434085338299055,.2637228440630788,-.3043408533829945,-.33333577915227836,-.4737815895103303,.15053197342937505,.07301390320491558,-.016354960260505706,-.05006447220662877,-.19035992880648842,.1819491398884854,-.04589694540462493,-.2601503823088735,.2742957852453695,.8779157286695746,1.1747173276627942,.3782226136313796,1.5638480130127614,-1.0502161590016221,-.28144140655806793,.660078762090635,.25575295594566605,-.11471557758718753,.22751157962613866,-.29100003355994186,.2924299486585318,.1495006131107875,-.02214037256893809,.034503572794411914,-.1741288940590147,.060297128338254534,-.49717312826403576,-.10585857030501357,.08278017743008333,-.11056584899062352,-.7249941619639279,-.1561286375130836,-.36586758725441215,-.19718551141955715,-.04343432877571885,-.060442748560529294,.1383233017601592,-.07171439916436274,.31725814504248484,.16801904131477274,.5867500433912975,1.515502516107282,.9923275265012264,-1.0129349058609656,-1.6725083187014358,-.6607722409175779,2.2217962254133496,.983904929170131,-.16319024909703178,.6727165127601918,.16380771710007475,.2198937373567962,-.12296413131763459,-.18224776807046256,-.011168077595514938,.10364961453623285,.1359801303077682,-.2633959372271572,.039396952561874886,-.3386669625362648,-.00431018414096014,.17740469505625342,-.10830858623812685,-.3318605121146624,.12060535717228799,.0847034747306358,-.08626242606474008,-.1297477439897661,-.28426475792188655,.21965961682575447,.249559991006423,.4680408859416745,-.46946217188769823,-.31724338121882617,1.7716903674840139,.5657788112446531,.7151259504708923,.4910867492003736,.9231011957591465,-1.093993495771964,.18102793706565934,.3548459552618665,.48676804973393767,-.09792392205621177,-7820006368423637e-20,-.016095705887683227,-.08426320972768339,.008033164669753148,-.04485316816646984,.006217070245597755,-.15890945005602863,.22815908460498888,.17110516400703918,-.29052216822588434,-.18224178792918044,-.018421573557969844,.032535239746583795,-.08121081614537759,-.02917591511509403,.09292986204084308,.16824405476099044,-.2467922762570458,.00030176170486908785,.023943010115746295,-.43281940369171445,-.5716683662381382,1.2482467538506352,.7438533137124667,.5478774521600256,.9289894130003817,.5447330180533513,-.4877077226718825,-.40370312470951597,.3909652762329985,.12644205243911047,.0424168022733412,.04921969358643031,-.07774818656606704,-.04361457599167721,-.00416350617181571,.07897222152752259,.05394497327097297,.11232623315704468,-.07044562563150354,-.07205720117764265,.12706805404252855,-.13757198545862262,-.316392239894439,-.02924048624466061,.10973045554309782,.04102655016489614,.01891084247324943,-.05692236942047649,.030805208457151782,-.1512000567754726,-.058122663069861934,-.30506910575481916,-.7903386881329538,.026308878650124864,1.7521122327973906,.6456622051479368,.40042515638418263,-.334612088484084,-.5536942957177082,-.030140868003777126,.27230784814155334,.008194429787378334,-.030645866021173498,.023928227792328404,.09070651048741973,-.021569631345745226,-.006412781536769337,-.026343653609827326,.00793656086939748,-.187914504113454,.14319521757460194,.17003550871316017,-.24661106106331201,-.21167593067635404,-.09820675094642621,-.04859275944736512,.002812925595011044,.04986893975541695,.03902323739410261,-.0036267311717218496,-.12930461632538415,-.06741132095183786,.01080120538703819,.07493129145102806,.0657071501308885,-.22930577035731903,-.3489467290456117,.37107135970432037,.49136473213042475,.10645611255411164,-.27741376367012294,-.015474080963115254,.13417678111594294,-.00046677178847574514,-.06415224549575138,.038292630722847554,.017696001575747813,.005215763190194701,-.023883294001795573,.0006051884889793161,-.08839509351423595,-.117577580272467,-.019555697374511325,.025650630137194243,-.043746931993730094,-.08846438922222799,-.07444223373636531,-.009910405282542814,.06487167324863496,.03524540038796406,-.006516309042701568,-.0652868815022504,.023130909787941502,-.028452880392855154,-.09863825695148282,-.23382813425811513,-.07793324996210348,.06957578883921661,.8663549110069351,.3366879287386472,.342535292159714,-.019122146869457048,-.0165213645474579,.09816142594631652,-.011130337821465129,-.09254353938682904,-.004697312064988421,-.008688517253163962,.04191586562399075,.004043623749362439,-.037907101781325205,-.03902357631677511,-.03769096399730089,-.11419210623041842,-.0767327261839726,.12573571356763677,.012633232837618465,-.09894200529309495,-.06188860116512567,-.009001290088071785,-.014247675993027883,.027023228844142398,-.005028277416555645,-.03166737161574289,-.033818612421867206,-.01148054478950835,.002410610826462259,.08440238506225944,.06982454502965495,.043930202648898894,.07887205982729704,.05505335977604347,.0133618922103162,.06845383453783666,.08170149012888928,-.02303497290340257,-.04240668227306069,.03514872971871225,-.037569795749083354,-.0041828274568459145,.012961699649937737,-.015475583648045266,-.027857672235467607,.011169867646763214,-.052725469767566695,-.007014873006769892,.053188940442296044,-.09528942369836853,.016377276604450954,-.015232023889946105,-.07768220186100935,-.04820769301430424,.014396940553395536,.021075876818278678,-.0024069559974744716,-.01675825964935249,.03186587970698775,.03282462316832693,-.07418273257242147,-.0800368653632972,.055652716802045685,.11130862970905192,.07295297283810102,.03509839696826377,.07024247972129444,.040747896169172335,-.022459274904977577,.014257984954846613,.019887732012022184,-.04081100434571369,.00881916198202256,.012579825412037176,.0010521231241174983,.006430724322423028,-.0107697788586532,-.0653135355342319,-.06276957327196686,.11452944472315789,.040092306883550234,.12236977033818973,.1362440389652974,.027359429809611827,-.0259369720098807,-.02141908253190829,-.02797214703330133,.00803207985016095,.0013100558771969473,-.005256186606445598,-.009737528949062902,.028455863356249757,.05642570174166461,-.0014166564531825356,-.03252893302731624,-.01961911263034095,.06570068946378961,-.02757449361247655,-.03281004271094684,-.021337213333243964,.01959299008029563,-.0197597500925572,-.030135000999364853,.03169848862163001,.02352205471086472,-.021766544372719836,-.002982743443279076,.007837350887812254,-.0028057606437618767,-.03323255078204348,-.07083081897710564,.05908045566984465,.36951320092865036,.09141112866594404,.1640423341726465,.06259827020745422,.04498640351980994,-.08151089674102797,-.04234161800714717,-.019737461729971092,-.004897400116936683,.01654258945512711,.008801297726757945,-.013696041496545335,-.0020268100930256635,.015845305908809133,.01645861261947946,.0005947400127468152,-.07852906625699135,-.013402803779002156,-.003601329999506423,.03757359158202504,-.007663649465542595,-.0021144243161753088,.032140257903604356,.0203960516207237,-.013294834505552555,.0021732333351695376,.015223562704661827,-.01560949450401263,.01506060958955546,.09924124830572909,-.19173261262163863,.2450151004066432,.26383919410790774,.33963060937430933,.34586223870135113,.1799263961717959,.13137374163691276,-.03649385871696803,-.041981936023927684,-.06025893230575421,-.009907901040571007,-.01002457918175982,.016637976300589805,.03162910623031014,-.011441752446030828,-.010113005489671789,-.027490450999295705,-.018258671855796018,.06129626392127453,.10180457538537498,.0976474425888894,.0632464597546009,.0018146068702083835,-.012539173975430248,-.008345642545901014,.020763503842579332,.03599616230766787,-.01567557540926648,-.02966274712552258,.0213127701286804,.08274253615935892,-.10682054954404013,-.033729052458342255,-.12662108035586636,.18053751384272299,.7094059953008747,-.21337246968950196,.09763637724258438,.1534595963462679,-.1169011010733575,.030098075283007168,.03418607642912205,-.021402902917041923,.004634909602610389,.011776544425663813,-.008967393462662933,.025701507905379287,-.0293335209574718,.0051215906448292756,-9620791778747625e-20,-.027988212781709806,.09369529674769571,.10174972110658871,.1657472048824174,.09791737794265405,.007579036411405063,.031051039914505564,.0156926018464825,-.015197940538429407,.02615442788343286,.03817892786043429,.07391023019778703,.0062621769249755375,.14786394857966245,-.24133125024592791,.3194460948677117,.5071563706514025,.3628700351691248,1.3060302403517683,-.5146783421531846,-.23826829822593068,-.009346884510492325,.16015106243072727,.02805086056222977,-.0035899004350242064,-.005543580364317014,-.02673292092466164,-.010772744125100176,-.024390993371714485,.012627431507206405,-.008720378793527347,.017390054254405412,.12375300108425245,.24623032442851775,.3222060858193874,.14931322115435106,-.030460558403777184,.017160725214558258,-.009483975390035431,-.04093798312300821,.021461267056132466,.05260524273481167,.08258391915651302,.060994911510484674,.19212485777257118,.030490864773295545,.1759282405498893,.2988664581273196,-.3440942993173739,1.3210609586317499,.059297195869563314,.664508151802211,-.1883702247397409,.3431030805221454,.41335445680081984,.18880277280085617,-.0025387166530481263,-.027056960212979365,-.014992917126512385,-.06582507050815357,.005992440061786605,.01605849168664445,.09631821867793273,.11648035795043635,.08310567318064768,.3267135114890813,.21720864831216413,.29412476851730657,.14853499339159934,.01897098102580162,-.006319176952692685,-.01818046447321878,-.03325569084071112,.04208810691484625,.1159854409909094,.13859711550376397,-.01128947190338442,.08665386837365273,.5559656926196751,.3768055607681325,.8848889918243579,-1.1019114795534606,1.0072326177374842,-.25696609936231163,.2259560500510676,.20124367647634336,.25020565573121023,.15194580903531119,.054188690404279045,-.03158847298103453,-.07246900626544177,-.025752917138555535,-.0471489088024604,.07929355690286198,.16429646904639772,.19502382977708654,.21468548823411557,.26510515339808566,.4121092848683291,.2413785630078775,.03924506370665969,.01328784964664576,.0639384949592911,-.05680891882903846,-.03915972562302279,.028736615885883075,.07567485585281981,.10715382591497533,.2994107520295937,.24751816611443234,-.14971685838339424,.9272502035304818,-.5803073077758771,1.4965419400087898,-.5803073077758782,.9272502035304832,-.1497168583833956,.24751816611443228,.29941075202959394,.10715382591497527,.07567485585281959,.028736615885883075,-.039159725623022994,-.05680891882903847,.06393849495929133,.013287849646645755,.03924506370665942,.24137856300787733,.41210928486832976,.326713511489085,.21468548823411696,.1950238297770854,.1642964690463976,.07929355690286159,-.04714890880246026,-.025752917138555938,-.07246900626544235,-.03158847298103462,.0541886904042793,.15194580903531177,.25020565573121106,.2012436764763436,.2259560500510681,-.25696609936231096,1.007232617737484,-1.1019114795534584,.884888991824356,.3768055607681309,.555965692619678,.08665386837365335,-.011289471903383815,.13859711550376486,.11598544099090989,.042088106914846005,-.033255690840710936,-.018180464473218153,-.0063191769526928735,.018970981025801085,.1485349933915988,.2941247685173069,.21720864831216452,.24623032442851894,.08310567318064788,.11648035795043606,.09631821867793225,.01605849168664411,.00599244006178636,-.06582507050815366,-.014992917126512623,-.027056960212979545,-.002538716653047571,.18880277280085703,.41335445680082034,.3431030805221454,-.18837022473973905,.6645081518022098,.05929719586956184,1.3210609586317497,-.34409429931737384,.2988664581273206,.1759282405498891,.030490864773296485,.19212485777257224,.06099491151048541,.08258391915651307,.05260524273481172,.021461267056132546,-.04093798312300816,-.0094839753900352,.017160725214558203,-.030460558403777944,.14931322115435064,.3222060858193871,.09369529674769708,.1237530010842532,.017390054254405134,-.008720378793527876,.012627431507206037,-.024390993371714388,-.010772744125100247,-.026732920924662094,-.005543580364316986,-.0035899004350241582,.02805086056223034,.16015106243072863,-.009346884510491546,-.23826829822592965,-.514678342153184,1.3060302403517683,.3628700351691248,.5071563706514024,.3194460948677121,-.24133125024592691,.1478639485796626,.006262176924976706,.0739102301977875,.03817892786043468,.026154427883432977,-.015197940538429256,.015692601846482655,.03105103991450549,.007579036411404823,.09791737794265432,.16574720488241704,.10174972110658852,.10180457538537414,-.027988212781709362,-9620791778727375e-20,.0051215906448293215,-.02933352095747186,.025701507905379183,-.008967393462662796,.01177654442566399,.004634909602610413,-.021402902917041607,.03418607642912222,.030098075283007585,-.1169011010733573,.15345959634626896,.09763637724258231,-.21337246968950468,.7094059953008736,.18053751384272154,-.12662108035586525,-.033729052458342325,-.1068205495440398,.0827425361593592,.021312770128680637,-.02966274712552271,-.015675575409266458,.03599616230766798,.0207635038425793,-.008345642545901005,-.012539173975430275,.001814606870208027,.06324645975460065,.09764744258888952,-.013402803779000846,.06129626392127332,-.018258671855796015,-.02749045099929539,-.010113005489671634,-.01144175244603072,.03162910623031008,.016637976300589583,-.010024579181759814,-.009907901040570755,-.06025893230575406,-.041981936023927795,-.03649385871696789,.13137374163691345,.17992639617179582,.345862238701351,.3396306093743105,.2638391941079055,.24501510040664315,-.19173261262163757,.09924124830572889,.01506060958955588,-.015609494504012908,.015223562704661735,.002173233335169546,-.013294834505552418,.02039605162072387,.03214025790360414,-.002114424316175266,-.00766364946554255,.037573591582025015,-.0036013299995066783,-.027574493612477238,-.0785290662569907,.0005947400127465092,.016458612619479316,.015845305908809258,-.002026810093025809,-.013696041496545191,.008801297726758145,.016542589455127047,-.00489740011693653,-.019737461729970797,-.042341618007146614,-.08151089674102786,.044986403519810654,.06259827020745319,.16404233417264671,.09141112866594406,.36951320092864953,.05908045566984523,-.07083081897710557,-.033232550782043346,-.0028057606437617323,.007837350887812152,-.0029827434432791976,-.02176654437271973,.02352205471086483,.03169848862162995,-.030135000999364715,-.0197597500925572,.019592990080295483,-.021337213333244086,-.03281004271094604,.03509839696826556,.06570068946378826,-.019619112630341284,-.03252893302731594,-.001416656453182401,.056425701741664544,.028455863356249663,-.00973752894906295,-.005256186606445511,.00131005587719705,.008032079850161055,-.02797214703330162,-.021419082531907708,-.025936972009880058,.02735942980961241,.13624403896529816,.12236977033819048,.04009230688355046,.11452944472315811,-.062769573271967,-.065313535534232,-.010769778858653123,.006430724322423077,.0010521231241173155,.012579825412037126,.008819161982022697,-.040811004345713484,.019887732012021993,.014257984954846677,-.022459274904977573,.04074789616917183,.0702424797212939,.05505335977604347,.07295297283810104,.11130862970905199,.05565271680204555,-.08003686536329738,-.07418273257242172,.03282462316832692,.03186587970698777,-.01675825964935249,-.002406955997474462,.021075876818278654,.014396940553395566,-.048207693014304456,-.0776822018610092,-.015232023889946197,.01637727660445112,-.09528942369836853,.05318894044229575,-.007014873006770006,-.052725469767566646,.011169867646763318,-.027857672235467666,-.015475583648045285,.012961699649937817,-.0041828274568459145,-.03756979574908331,.03514872971871221,-.04240668227306084,-.023034972903402475,.08170149012888943,.06845383453783664,.013361892210316275,.33668792873864783,.07887205982729592,.043930202648898596,.06982454502965493,.08440238506225957,.0024106108264623457,-.011480544789508253,-.033818612421867275,-.03166737161574274,-.00502827741655568,.027023228844142416,-.014247675993027993,-.009001290088071238,-.0618886011651253,-.09894200529309476,.01263323283761883,.12573571356763666,-.07673272618397192,-.11419210623041808,-.037690963997301666,-.03902357631677525,-.03790710178132505,.004043623749362313,.04191586562399077,-.008688517253163995,-.004697312064988438,-.09254353938682865,-.011130337821465186,.09816142594631627,-.016521364547457937,-.01912214686945752,.3425352921597138,.3710713597043204,.8663549110069338,.06957578883921638,-.07793324996210346,-.23382813425811527,-.09863825695148333,-.02845288039285465,.02313090978794155,-.06528688150225045,-.006516309042701882,.03524540038796402,.06487167324863516,-.009910405282542379,-.07444223373636433,-.0884643892222283,-.043746931993730226,.025650630137194336,-.019555697374510583,-.11757758027246727,-.08839509351423645,.0006051884889788229,-.023883294001795972,.005215763190194649,.017696001575747886,.03829263072284757,-.06415224549575124,-.00046677178847581285,.1341767811159426,-.015474080963115183,-.2774137636701229,.10645611255411111,.491364732130425,.645662205147937,-.34894672904561197,-.22930577035731828,.06570715013088865,.07493129145102859,.010801205387038527,-.06741132095183788,-.1293046163253841,-.0036267311717218076,.0390232373941025,.04986893975541658,.002812925595011048,-.04859275944736474,-.09820675094642502,-.21167593067635238,-.24661106106331246,.17003550871316073,.14319521757460188,-.18791450411345456,.007936560869396415,-.02634365360982748,-.00641278153676982,-.021569631345745438,.09070651048741984,.023928227792328456,-.030645866021173446,.008194429787378174,.2723078481415532,-.030140868003777244,-.5536942957177085,-.3346120884840844,.40042515638418175,.547877452160026,1.7521122327973908,.02630887865012415,-.7903386881329546,-.305069105754819,-.05812266306986232,-.1512000567754718,.03080520845715192,-.05692236942047645,.018910842473248434,.04102655016489636,.10973045554309671,-.029240486244660805,-.3163922398944391,-.13757198545862218,.1270680540425267,-.07205720117764353,-.07044562563150432,.11232623315704422,.05394497327097227,.07897222152752154,-.00416350617181658,-.04361457599167779,-.07774818656606759,.04921969358643038,.04241680227334132,.12644205243911066,.39096527623299887,-.4037031247095156,-.48770772267188234,.5447330180533501,.9289894130003811,.7151259504708923,.7438533137124658,1.2482467538506357,-.5716683662381389,-.432819403691714,.023943010115746077,.00030176170486927514,-.2467922762570443,.16824405476099039,.0929298620408442,-.029175915115095267,-.0812108161453773,.03253523974658334,-.018421573557966798,-.18224178792918325,-.2905221682258862,.1711051640070395,.22815908460498383,-.15890945005602886,.0062170702455973175,-.04485316816647018,.0080331646697509,-.0842632097276826,-.016095705887684088,-7820006368420517e-20,-.09792392205621189,.48676804973393806,.35484595526186524,.18102793706565945,-1.0939934957719641,.9231011957591454,.4910867492003743,-1.6725083187014362,.5657788112446521,1.7716903674840145,-.3172433812188264,-.46946217188769945,.468040885941674,.2495599910064237,.2196596168257534,-.28426475792188616,-.12974774398976752,-.0862624260647399,.08470347473063304,.12060535717228706,-.33186051211466344,-.10830858623812538,.1774046950562415,-.004310184140959981,-.3386669625362712,.0393969525618715,-.26339593722715154,.1359801303077666,.1036496145362314,-.01116807759551522,-.18224776807046214,-.12296413131763473,.21989373735679868,.16380771710007386,.6727165127601912,-.16319024909703136,.9839049291701306,2.2217962254133496,-.660772240917578,1.5638480130127614,-1.0129349058609651,.9923275265012277,1.515502516107282,.5867500433912969,.16801904131477496,.31725814504248523,-.07171439916435922,.13832330176015895,-.06044274856052339,-.04343432877572056,-.19718551141955432,-.36586758725441343,-.15612863751307984,-.7249941619639332,-.11056584899062098,.08278017743008294,-.10585857030502534,-.49717312826403764,.06029712833825185,-.1741288940590143,.034503572794408806,-.022140372568936324,.14950061311078439,.2924299486585319,-.2910000335599442,.2275115796261395,-.11471557758718894,.255752955945665,.6600787620906332,-.2814414065580684,-1.050216159001623],bottom:{real:[5837.242024063461,16421.19056905325,8527.227518211732,3938.41845467232,969.2100004376409,269.87346390668256,193.53992011404216,135.14631901451781,58.523829955616236,29.311524302602624,20.863281166035843,14.808244655557742,11.401757474781434,9.638649393665329,8.053859109417678,7.471439806212464,7.271177617526248,7.471439806212424,8.053859109417665,9.638649393665327,11.401757474781416,14.808244655557761,20.863281166035858,29.311524302602734,58.523829955616236,135.1463190145178,193.53992011404216,269.87346390668273,969.2100004376406,3938.4184546723186,8527.22751821173,16421.19056905326,14982.474506443205,4755.19857866802,3083.864201169168,1502.8058566448747,596.268512932032,262.3552053688135,201.52671733896852,108.13603201941604,57.999252895466505,28.992297197792773,19.233600066307524,13.871180161098291,10.761421361485239,8.850682851250665,7.812558492626262,7.123450122935638,6.6618841738486525,7.176288470960696,8.141688980401993,8.866363260774406,11.328672883224474,14.773155762512141,20.0580565285724,28.68834409907191,57.995376649220766,126.94075502116374,211.30702516808583,262.5444859553627,752.9602476197267,2141.536802332785,3891.366197365788,5583.546099008517,9500.652808667768,4225.384857328793,1708.1934289355966,562.9450489663958,526.4142021082113,290.26438540271903,151.3473221830423,89.3045970775778,50.1610416734142,27.913649363990057,19.253723232543383,14.310501425792925,10.62253810462022,8.652074761601527,7.679643289534405,6.9311889072641995,6.5442165971044535,6.83524729637813,7.253158781826729,8.812570019717482,10.256278085266516,13.962876672312342,18.680978544191657,27.64161128084435,51.70590284164593,92.38303510862865,175.23999552329536,238.6238705323166,446.2130896894364,589.8495064414341,1459.800700420838,2983.642166781685,6639.698067031166,3615.9230624353354,1045.9683029029898,541.9569824673339,551.2292078912385,269.0174810237252,121.81702466062521,78.61930436899455,46.26647526114716,26.895860643920866,18.966790938143397,14.141216689343503,10.624588727031869,8.51206745844691,7.508407817845805,7.127942028564302,6.550522644160282,6.597661457074558,7.5671769464103935,8.42937533661321,10.446992271959362,13.755112829750516,18.515159362788847,25.868606557166544,43.59302593302384,76.84786004620612,125.0365119439001,241.77755195523335,523.0849929966005,633.3655585428983,855.6947679023069,2473.0066947172836,2803.949655269216,1850.6397468329815,645.7731463695902,447.0056397685769,381.6372474267435,196.7755433249871,93.58681681613771,72.61236574074685,43.711482900929944,27.782222145016455,18.647268962291367,13.844325818813939,10.350953817244738,8.7140342291789,7.351664195270592,6.886474159529909,6.1226840838853605,6.718650713141449,7.014879626817314,7.902004601266044,9.653604858655545,13.744699851401226,17.87227996094296,25.02588903079783,38.77546859762585,68.22861611587423,97.80666785184185,178.52012140604563,362.80035213144055,506.96305099601244,508.39785887877764,1271.7627571663681,1970.0713813014595,1211.9708052435174,448.82610946730466,388.9148370038566,294.26646682781944,147.68595350614527,76.56381892160427,57.53338100926053,37.094893522892434,25.168957624787666,17.405368368923924,12.931100650610183,10.211256703797424,8.378308200770265,6.884564767216135,6.295463031189576,6.1711525716900475,6.285263765474588,7.131800245728804,7.812646461498566,9.356258005810218,12.456351018938477,17.12365920646733,22.851195586808732,34.22708028584924,57.27396559547706,82.12680179596266,114.0182287640494,248.69630423497404,396.25330408596494,382.77662480077174,646.8612706088028,1066.195953557621,770.7452163454607,344.77171326148743,328.2115248838793,223.6732358532505,124.39997807543456,66.04212498002366,49.833499278727395,36.08081235450254,24.010000461569632,16.241873057458708,11.94801819096188,9.663620823552634,8.173481426927411,6.8263151892657215,6.109400553448764,5.556036412886669,6.08951612256523,6.737155385092935,7.561498049402431,9.303546039908396,11.904089289656403,15.753116847312391,22.11618678180766,33.401673308199264,45.775772578430164,60.54280760491739,91.41224059968123,164.58197575163385,289.9799614501007,367.09809735899603,433.5172945888932,538.9971467870731,436.9735160339028,214.4570000321332,226.27353228768246,190.72528880002966,104.24105887361294,63.0962910283184,44.89569211557344,34.378771692376986,22.743616534455565,14.943130070579064,11.306154107321404,9.490726177732828,8.057539867813432,6.624991765631065,5.80530835366394,5.67275940871921,5.680399455258072,6.45122342172424,7.309182096903841,8.905316851708879,11.147020821533502,13.978280110937801,19.308076160210224,27.380246565144393,39.45337202937899,53.82390657707432,70.344986096435,125.18491111128095,220.27402210338624,239.0209596497513,253.5280561179115,337.90351459641266,301.96557555412664,163.1486266603976,176.1964602722083,155.2640157056349,91.40217063585646,57.9223709952281,44.13290601551937,31.477476121951593,19.994026988386896,14.669539930994308,10.52228821405147,8.949924507684104,7.416085875937713,6.0652235290917815,5.533683634797245,5.345334549972072,5.525199888029565,6.049359333226362,7.498954463790416,8.644145711066678,10.17217183387787,12.922358897606493,16.497840703497662,24.47352534302224,36.89322569574956,46.488420049270196,60.00894968185993,101.55324863109907,172.57213254679178,186.99209153386954,177.69050334329205,224.71115213821386,219.35401697656656,131.98987419085088,139.58612051732652,133.97255559613592,83.71766714607698,52.48988401855501,39.948149447326976,29.992243301791387,19.792293237610107,13.550533437330548,10.191515700191694,8.725128556525828,7.013096609958828,6.041290502053927,5.169560945388304,5.23354642177383,5.274893760174123,5.915118914176224,6.64049249933847,8.252563319435486,9.86505065394757,11.857247340871206,15.821441128307118,21.809722446513074,33.20484260444123,45.292100524348356,53.58823709974399,86.04657086533335,138.34470513151498,144.28338780744133,137.47961624149846,184.36194031651988,195.75342807998493,111.69248606852764,108.22432115257934,110.31477193613289,70.73795275871473,45.31608419986612,35.221165127538775,25.132656234698317,17.80870832888929,13.205138111505544,9.831975695829131,8.385186971565917,6.697914777469541,5.557794982618686,5.064013606215784,4.915924071395172,5.174737523892124,5.621849200313962,6.392652273833619,7.8838556827841355,9.58804953889033,11.2702077240605,14.675031755421674,19.961485602094882,28.340133288775018,38.07180730248544,46.21180594207289,70.89628817363239,115.46517347822648,119.73189294718243,110.21299532100423,137.4907868217927,145.21239507063157,90.73647550020203,84.82013466298467,87.02888773526917,58.59278092655856,39.14047570270828,30.030590426700837,23.561748558876776,17.07171690133644,12.059539847971436,9.13034699170641,7.8824915696444915,6.557457716388455,5.450832747202711,4.631948788952135,4.85569366970317,5.095213989565805,5.36260614825461,6.023150477726759,7.392912454090475,8.869713914539098,10.839689611405708,13.484775054138881,18.12552087046162,25.51326521840107,33.81482175872351,43.00066071296376,59.28906756969899,89.52310048000626,96.00283450164133,88.24840395150595,114.22377327036351,136.39754784126862,85.13393713749406,70.75761358115078,72.94113644504662,50.41713140464106,35.29732697897046,27.270836476117434,20.337170678571646,15.328073102208975,11.22762600822461,8.889470339904383,7.306673249055975,6.111757001079701,5.224039680082537,4.692794475404797,4.446269195676172,4.8997943453914665,5.030120352863074,5.850405985335514,6.902103078533902,8.693648104841767,10.014300550884089,12.783989981758968,16.915182814597465,23.037925870268026,29.781501040175886,36.13778662893932,46.659613314406016,72.54209688440005,80.09830912470618,76.77256948716943,87.96931966600367,100.35528192635977,66.39074370667048,56.29722089299507,57.44977691289374,42.311817158751616,30.3950154293208,24.633397231162515,18.800000277532757,13.90634472463726,10.685561612392762,8.772663355326253,7.37657782226477,6.023800684787688,5.208207432749892,4.58867196645594,4.61664103539597,4.611514826957056,4.992077230917985,5.644512472351516,6.798068303404396,7.497596200534023,9.606658686908084,12.06652313244911,16.25166382630045,21.003823940677318,27.62293357307126,33.836788273738165,41.87785442344717,58.53283536970373,68.23932029676797,62.32614973900864,71.58383095513956,81.61139186167428,61.29060695836405,49.963935495056425,49.74402774735454,38.555965139546075,28.313241453630848,22.404376161451804,17.69007471646092,13.348861556136391,10.46674681432143,8.150736425345137,6.780493336316558,5.7303247473649055,4.973796153764103,4.6591603640435,4.369127354240186,4.587644085680502,4.877527941931284,5.564315782428927,6.510642451461139,7.651725877469773,9.397827067443549,12.208065227131403,15.316902707006163,20.982661610009878,26.31786929803148,32.313264556083666,38.06286011366607,50.10516748474813,58.219661124046276,59.8611576800925,61.01902036645045,69.64280516822298,57.634563900118565,46.96752310990223,43.85887184820529,34.95764055706675,26.50503998364094,21.71545909517323,16.236775633007202,12.875777825381771,9.983473961099762,7.8930497070448,6.682971556980369,5.667219370450012,5.079424691551845,4.681264046528276,4.618663229753943,4.621109290436842,5.08978657739574,5.56918107107971,6.503518731799128,7.20143269985937,9.170362043794405,12.475838151915292,15.6623920524898,19.528853843427893,25.07702804540938,30.833489267211636,39.11329640738612,46.77099142791858,55.937485646720255,57.570245344451905,57.63781758903021,59.86039156661088,52.77619568232774,43.83929696702742,39.83301283219751,33.59821343802381,26.072700016436322,20.27697550152119,16.195672497297036,12.239826665071417,9.687521348716507,7.737954389393363,6.378678225480716,5.595025932784059,5.123290382827299,4.578659230973724,4.5178908466513406,4.578659230973722,5.123290382827298,5.5950259327840595,6.378678225480715,7.737954389393368,9.687521348716508,12.239826665071421,16.195672497297036,20.276975501521182,26.072700016436304,33.598213438023805,39.83301283219751,43.839296967027416,52.77619568232774,59.860391566610836,61.01902036645044,57.57024534445192,55.937485646720255,46.77099142791852,39.113296407386116,30.833489267211636,25.07702804540937,19.528853843427893,15.662392052489803,12.475838151915296,9.1703620437944,7.201432699859367,6.503518731799129,5.569181071079711,5.0897865773957385,4.6211092904368405,4.618663229753942,4.681264046528273,5.079424691551845,5.667219370450009,6.68297155698037,7.893049707044798,9.983473961099765,12.875777825381764,16.23677563300721,21.71545909517325,26.50503998364096,34.957640557066775,43.85887184820525,46.96752310990224,57.63456390011859,69.64280516822295,71.58383095513962,59.86115768009248,58.21966112404624,50.10516748474814,38.06286011366608,32.313264556083666,26.317869298031482,20.982661610009867,15.316902707006161,12.2080652271314,9.397827067443544,7.651725877469773,6.510642451461139,5.564315782428928,4.877527941931286,4.587644085680501,4.369127354240187,4.659160364043497,4.973796153764102,5.730324747364904,6.780493336316559,8.150736425345137,10.466746814321423,13.348861556136386,17.69007471646092,22.40437616145178,28.31324145363085,38.55596513954604,49.74402774735451,49.96393549505642,61.29060695836407,81.61139186167424,87.96931966600363,62.32614973900866,68.23932029676796,58.53283536970371,41.87785442344717,33.83678827373816,27.622933573071283,21.00382394067731,16.251663826300444,12.066523132449106,9.606658686908084,7.49759620053402,6.798068303404393,5.644512472351519,4.992077230917984,4.61151482695706,4.616641035395972,4.588671966455937,5.208207432749891,6.023800684787687,7.376577822264771,8.772663355326259,10.685561612392764,13.906344724637258,18.80000027753276,24.633397231162533,30.395015429320793,42.31181715875161,57.44977691289373,56.29722089299503,66.3907437066705,100.35528192635975,114.2237732703635,76.77256948716945,80.09830912470622,72.54209688440005,46.659613314406,36.13778662893932,29.781501040175893,23.037925870268033,16.91518281459747,12.783989981758975,10.014300550884082,8.693648104841765,6.902103078533901,5.850405985335523,5.030120352863068,4.899794345391461,4.446269195676173,4.692794475404802,5.224039680082533,6.111757001079703,7.306673249055973,8.889470339904381,11.22762600822461,15.32807310220897,20.33717067857165,27.270836476117438,35.29732697897047,50.41713140464108,72.94113644504664,70.75761358115082,85.13393713749407,136.39754784126856,137.49078682179265,88.248403951506,96.00283450164132,89.52310048000622,59.28906756969897,43.00066071296374,33.814821758723504,25.51326521840107,18.125520870461624,13.484775054138884,10.839689611405714,8.869713914539101,7.3929124540904745,6.023150477726761,5.362606148254609,5.095213989565807,4.855693669703173,4.6319487889521325,5.45083274720271,6.55745771638845,7.882491569644493,9.130346991706412,12.059539847971436,17.071716901336433,23.561748558876776,30.030590426700826,39.14047570270828,58.592780926558504,87.02888773526915,84.82013466298463,90.73647550020199,145.21239507063157,184.36194031652002,110.2129953210042,119.73189294718252,115.4651734782265,70.8962881736324,46.21180594207288,38.07180730248544,28.340133288775018,19.961485602094882,14.675031755421674,11.270207724060505,9.588049538890328,7.883855682784136,6.392652273833623,5.621849200313961,5.174737523892125,4.915924071395175,5.064013606215786,5.557794982618686,6.697914777469534,8.385186971565918,9.831975695829147,13.205138111505548,17.808708328889303,25.13265623469832,35.221165127538775,45.3160841998661,70.73795275871471,110.3147719361329,108.2243211525794,111.69248606852767,195.75342807998487,224.71115213821398,137.47961624149852,144.2833878074414,138.3447051315149,86.04657086533334,53.58823709974399,45.29210052434834,33.20484260444123,21.80972244651307,15.82144112830712,11.857247340871208,9.86505065394757,8.252563319435486,6.640492499338464,5.915118914176224,5.274893760174123,5.23354642177383,5.16956094538831,6.041290502053925,7.013096609958833,8.725128556525835,10.191515700191694,13.550533437330545,19.792293237610103,29.992243301791408,39.94814944732701,52.489884018555,83.71766714607696,133.97255559613592,139.5861205173265,131.9898741908509,219.35401697656653,337.90351459641266,177.69050334329216,186.99209153386957,172.57213254679186,101.55324863109904,60.00894968185994,46.48842004927018,36.89322569574956,24.47352534302224,16.497840703497666,12.922358897606497,10.172171833877869,8.644145711066678,7.498954463790413,6.04935933322636,5.525199888029563,5.345334549972072,5.533683634797246,6.065223529091781,7.416085875937713,8.949924507684111,10.522288214051471,14.669539930994311,19.99402698838689,31.477476121951593,44.13290601551936,57.92237099522811,91.40217063585641,155.2640157056349,176.1964602722083,163.14862666039767,301.96557555412653,538.9971467870728,253.5280561179116,239.02095964975135,220.2740221033861,125.18491111128091,70.34498609643492,53.82390657707433,39.45337202937895,27.380246565144397,19.308076160210238,13.978280110937792,11.147020821533506,8.905316851708882,7.309182096903844,6.451223421724239,5.680399455258068,5.672759408719208,5.805308353663939,6.624991765631067,8.05753986781343,9.49072617773283,11.306154107321403,14.943130070579077,22.74361653445556,34.378771692377,44.895692115573446,63.09629102831839,104.241058873613,190.72528880002952,226.27353228768243,214.45700003213315,436.97351603390234,1066.195953557621,433.5172945888933,367.098097358996,289.97996145010086,164.58197575163376,91.4122405996812,60.542807604917364,45.77577257843016,33.401673308199264,22.11618678180764,15.753116847312398,11.904089289656401,9.303546039908392,7.561498049402436,6.737155385092932,6.08951612256523,5.556036412886668,6.1094005534487605,6.826315189265727,8.17348142692741,9.663620823552627,11.948018190961893,16.241873057458722,24.01000046156964,36.080812354502534,49.833499278727416,66.04212498002366,124.39997807543459,223.67323585325056,328.21152488387946,344.7717132614875,770.7452163454602,1970.0713813014588,646.861270608803,382.7766248007717,396.2533040859646,248.69630423497387,114.01822876404945,82.12680179596269,57.273965595476994,34.22708028584923,22.85119558680874,17.12365920646733,12.456351018938475,9.356258005810217,7.812646461498566,7.131800245728804,6.285263765474588,6.1711525716900475,6.295463031189579,6.884564767216139,8.378308200770256,10.211256703797417,12.931100650610194,17.405368368923916,25.168957624787648,37.094893522892434,57.53338100926052,76.56381892160427,147.68595350614524,294.26646682781944,388.9148370038566,448.8261094673048,1211.9708052435162,2803.949655269216,1271.7627571663686,508.3978588787775,506.96305099601244,362.8003521314405,178.52012140604566,97.80666785184182,68.22861611587415,38.77546859762585,25.02588903079784,17.872279960942965,13.74469985140124,9.653604858655543,7.902004601266046,7.014879626817316,6.718650713141439,6.122684083885363,6.8864741595299055,7.351664195270594,8.714034229178903,10.350953817244736,13.844325818813926,18.64726896229136,27.782222145016434,43.71148290092994,72.61236574074687,93.58681681613766,196.7755433249871,381.6372474267434,447.0056397685771,645.7731463695901,1850.6397468329806,6639.698067031165,2473.006694717284,855.694767902307,633.3655585428982,523.0849929966007,241.7775519552335,125.03651194390012,76.8478600462061,43.59302593302385,25.868606557166554,18.515159362788847,13.755112829750496,10.44699227195936,8.429375336613218,7.567176946410392,6.597661457074561,6.55052264416028,7.127942028564301,7.508407817845802,8.512067458446909,10.624588727031863,14.141216689343507,18.966790938143404,26.89586064392087,46.26647526114716,78.61930436899458,121.81702466062518,269.01748102372505,551.2292078912383,541.9569824673345,1045.9683029029893,3615.9230624353345,9500.652808667768,2983.6421667816867,1459.8007004208382,589.8495064414337,446.2130896894364,238.62387053231652,175.23999552329542,92.38303510862855,51.705902841645944,27.641611280844312,18.680978544191667,13.962876672312348,10.25627808526652,8.812570019717501,7.25315878182674,6.8352472963781254,6.544216597104452,6.931188907264199,7.679643289534406,8.652074761601519,10.622538104620222,14.310501425792921,19.253723232543386,27.913649363990046,50.161041673414196,89.30459707757784,151.3473221830423,290.2643854027191,526.4142021082113,562.945048966396,1708.193428935596,4225.384857328791,14982.4745064432,5583.546099008519,3891.3661973657854,2141.536802332784,752.9602476197266,262.54448595536314,211.3070251680859,126.94075502116375,57.99537664922077,28.688344099071898,20.0580565285724,14.773155762512143,11.328672883224492,8.866363260774417,8.141688980402005,7.176288470960711,6.661884173848655,7.123450122935626,7.812558492626261,8.850682851250665,10.76142136148522,13.871180161098282,19.233600066307527,28.99229719779277,57.999252895466505,108.13603201941609,201.52671733896852,262.35520536881353,596.2685129320319,1502.8058566448742,3083.8642011691672,4755.198578668018],imag:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},imag:[0,-.13871927675086548,-.5582757149609217,-.8538326372408309,-.4670119338361595,.047809537946767316,-.3426920474802197,.1583158937413706,.20589774809377467,-.21944378817656213,-.12654666933988368,-.19544466487854822,-.09644626945019073,-.2265628704083768,.10840537931386109,-.055457499657790024,0,.055457499657784036,-.10840537931384955,.22656287040837902,.09644626945018958,.19544466487854698,.1265466693398799,.21944378817656165,-.20589774809377467,-.15831589374137045,.34269204748022014,-.04780953794676766,.4670119338361596,.8538326372408298,.5582757149609219,.1387192767508655,-1.279550584464304,-.8069590311966991,-.5066002982483182,-1.4561178571661,-.13414323846201096,-.2505529731115498,-.640274048196847,-.19951473048424853,.3313791296331769,-.04749824375932937,-.24064979253244873,.1395435157196932,.17789090203786645,-.044374683774468404,-.36806933922228663,.19528135326361654,.3299964626914292,-.13015393203002068,.1959681784626765,.28571835588367483,.2270580105241475,-.14508578389537852,.23457709892354506,.21163882649779878,-.20150153854805303,.060946718066345364,.3100404128586439,-.2625838718707748,.13955938857309563,-.2449447076348287,.06851005109099272,-1.1758121586434307,-1.368201172600149,-1.6899938281650106,-.7501926868865519,.6891128285175293,.44086751164178845,-.2315595903433902,-.545103158770842,.26585764990704713,.2624959582084973,-.04514609184617117,.011517786678353055,-.05790784432037342,.07685412425301096,.0035092112107953564,-.23588030048916386,-.04827784038071106,-.21489820671404902,.2681728717818591,-.027468417557455105,.2987317445654509,.07289920747928859,.023829771073631354,.006649117012129198,.004829873646791909,-.13057930804766787,-.2694620959312879,.39240115086507854,.8531772106141665,-.11752989424299426,.9999870738966831,.5578743616729666,-1.0314907737559058,-1.5043263157657751,-1.3830149751777026,-.20446853801739454,-.2836403310191183,.6830314716152905,.03902721990981517,-.18273076418691683,-.013466871818696777,.028891896132398606,-.06862124221450072,-.02679286952467542,.18842973810535804,.06839228253508749,-.17097210848547728,-.23288712244734344,-.3141661235870828,.2728416921191384,-.07243899022541153,.1202436118466384,.06744326225711779,-.004045232640019184,-.15231382612170316,.020438609938141238,.10773227995476008,-.1646961578394999,-.034526357222664054,.3404569968631755,.3582562672018631,.5020328221472785,-.9005057884056485,1.1141651843864948,-1.0547694551235964,.15113295529591572,-.4201199738298069,-1.1306687523196075,.5990489956312235,.1278247611955642,-.26469201284371935,-.0028564673365734715,.2587885502662681,.0007864520134104085,-.17181320075266995,.013143422355015144,.05023839674084175,.07215692285898792,.04160467398259256,-.0112715468909201,-.016101389694688766,-.3126936366227507,.0949743341513004,-.06786938796696873,.14811752790953986,.010724993842567176,-.07149566160435743,-.037154193600070516,.05779163337935353,.09493793106291729,-.1272883333159909,-.01740846979628495,.6200376238621287,.07441700456397177,-.12904495334293709,-1.4636084587609224,-.0367437300827803,-.77470195486186,-.60686918965332,.6287263620045662,-.46894237369717673,-.18368617361305525,.26816260026693856,.13447215443394772,.04100815493405749,-.017107991149299187,-.0680369475996533,-.01240601732954733,.05935692746192456,.12615835751185028,.053672308552617974,.03774974359224236,-.10597138547480481,.022172258797336697,-.058681894939636686,.12792055300624736,-.06015432347010594,.03229830899926915,-.015701976416949814,.0007367446231764113,.07712597645572114,.05564408487662822,-.06598174001891982,-.14567847379973994,.039540586335773356,.2491706386704154,-.6432675339043068,.3675466403998282,-.0696498769749482,.2952063874323651,-.011417685121456805,-1.0450941798657123,-.17374602795438093,.19930768818407893,-.1556206112582631,.05581712853807612,.1790093649902748,.005237402448426343,-.04259609882328368,-.02083426192853383,.03668659345054796,.0007688026095817875,.06171969247781091,.027700064466885506,.10661165850403151,-.13945785164947772,-.05054425815546071,-.11937846922953205,.03439955883717337,.02521789889898339,-.004746861819041827,-.02825685744844651,.029239764799856467,.046539635523190424,-.03331642390248576,-.15842957449053302,.1474114560630888,.1752194519195491,-.07562928201952297,-.9196871674688946,-.4550470204476488,-.12177128356890227,-.10462001130261206,.1804016527269576,-.047005347129142915,-.19200701617075638,.1133507155810588,.14315736053243958,-.06754552046591941,-.0022066601859379556,.008400134072988386,.00493380069781825,.016196236751475263,.0664195740691833,-.012240235365542763,.01443312883853778,.023674926554515096,-.017114978073907605,-.1437989861779111,.08430372577238564,.005677992326511777,.048321020114327755,.022849248448590556,.012395399307186424,.023865191872962568,-.006037515267849562,-.021897165586045375,-.09217332722109582,-.17587869380621102,.09199292532210088,.014980171338571357,.0086063527817299,.098130362913165,.130338354535672,.09420330567759944,-.19730813245926024,-.10041080102702246,.07593204274580358,.02113428762188104,-.05957553232524452,.008299212542201392,.015272751179096435,.009024853611406095,-.019251438395354602,-.015788972597383853,.003250945662643008,.03296897547944033,-.015058032290062954,.017643635220692015,-.06885700316953144,.030070570566209365,-.12793975070954616,-.04353483487601328,.0017423598025251587,.028592812647173952,.0036967486190428137,.009045316783825322,-.016259252101333162,-.005207681729782719,.018046490267575967,-.026168992315517926,-.08307703486887791,.032798990212655046,-.027546636940189637,-.12409557570816734,-.008835607182220642,-.034333260533212014,.05617729507532258,.05799439311344064,-.032566171451921935,-.010465798382464413,.020079425427313443,-.017396471253638312,-.017870360905994483,.010919865739753416,.012363627500514531,-.01431321541581572,.03420155792081711,.10796975372596095,.21064351401911494,-.04601640195702946,-.0838033070266082,-.15128619138644472,-.07074541532788599,-.06951503451164355,.07063841806481566,-.008001903562601612,.02654845111893607,.019862790828204354,-.00386983557629617,-.020866890117519677,-.004808443274984591,-.00364516409639753,-.0026341276434262537,-.0023099396961399252,.04390810066375783,.09677203374284404,.04918905117971889,.07060077152873424,-.02677362863360314,-.05973226936448265,.013552286601009756,.0032289712715403013,-.023046337829044056,-.0104051517231316,.01942709625934166,.018256051683800133,-.05675987022201821,-.03296056009139303,-.0173990042730968,.12185282737260948,.03798423433754776,-.12270039394272629,-.055947445070994896,.04621845892784341,-.1857137618225036,-.06381089208694728,.07053672326645595,.03906718120738633,.01577517031413787,-.004745657011912422,-.01980141197527725,.02463719909248731,.019457415538283646,-.0067710516924983765,-.02834601701232055,-.006509832922919529,-.0013352981567293612,-.023151697315085987,-.06519950655383687,-.1042256990435297,-.023224778901070588,.00729635443120975,-.03470838640090929,-.0023809918522597964,.01616754166381201,-.005434023698746317,.002720810988399538,.006684196401156055,-.023932611476630623,-.03900580321070505,.016396390506166533,.05806798387241651,.15112210885707694,.0919535398253341,-.308789816469042,.23773808023122034,-.11496619447060334,-.15410637679425881,.16398523681965352,-.04216012313160585,-.005783889905293601,.021159112170606904,-.0008919402495326755,-.043632529695206895,.025594278576058532,.04827977682701759,.008656372871138766,-.025123508323013247,-.021222695138498154,.012727342518660707,.002732727307553498,.01672722282524492,-.062351999721191126,-.0950864851349935,.009789315676701096,.020526538310240195,-.0017729650965628652,.004236734242614828,.00969181616596509,-.014518052118829046,-.004581035374341906,-.06945150463938297,-.03628959076218118,.22708969966074724,.3665342673930222,-.5962576209185034,.3677477205864991,.2627894192943519,-.10703484463450727,-.13950623949894417,-.08080613749345363,-.018761372187400087,-.1480711283584217,.015533054933596769,-.01315617033162085,.03305379581498845,.012901798319361097,.00377273404398293,-.008705072547776149,-.026200884444946355,-.0699831200027948,-.04585110256530889,-.008021591507498945,-.04806311981862181,-.05590918830230712,.015567334119352533,-.06911372306398904,-.007247424342862186,.04252656204416145,.039806904605142766,-.027582495505149615,.004926143375425349,-.04754279011762625,-.07412235121492936,.22223052073714245,-.007741727367060801,-.08082528642091588,.6239051855537013,-.1898873716577621,-.013310214088767865,-.13538196037364333,-.38370084094404533,-.32853605615928166,-.2309534981672577,.002457368089255563,-.060148519255615616,.030360401196840837,-.008421474591235168,.033027304906486414,.0307398640217227,.009703992699996455,-.06069855739203631,-.04746519227839175,-.053530300822357386,-.04617423408269824,.005211204463466864,.020596160958060543,-.15878906772803425,-.02193329327109424,.007934242380394899,.027919450264392773,.007043080701302528,.020085011074200358,-.07593504311206385,-.04165227277395796,.16889959178925665,.18647295463827135,.014154913289577202,.06052110757646851,-.6363731233683723,.9019195738157793,.27922666018549325,-.48673882008850766,-.3337003135725931,-.3513559741645329,-.2622745616761345,-.1719749232535629,-.005731502793172811,-.04469091820910031,.053283308768024513,.03946559994643804,-.014174493080162808,-.04946368453866596,-.022857667990750397,-.1688130409012578,-.08081252690949967,.0005823444604532637,.08433842597437612,-.1251823168088108,-.04050640633805026,-.08374410530080309,-.001350704062862842,.030200114248426838,.04229988913026935,.011310849850443803,.08175917844592068,.03528956306363411,-.12268118169149339,.0581572497684168,.1945303065955717,-.3201969513996092,1.2621857571853639,.24947885513851267,-.8682713800974683,-.26346017480935824,-.4031200027249898,-.22820944406317872,.0813299683314989,.00388713671617719,-.10891614598123801,.00043800911235750134,-.04328929752692221,.012593343881888895,-.004268663667086969,-.008833188472774969,-.02414166683120631,-.03923653338217388,-.25435751708422283,0,.1310658190076192,.22441332039311174,-.09476844701896146,.0024812204443016074,.03628626839204586,.0056698536823630895,-.010705526315732189,.08204491851289233,.0010532751265284197,.015101105715477795,.09065350545022463,.27613653682211553,.17494988738073455,.3095682126985193,.0345404763627059,0,-.034540476362701966,-.3095682126985185,-.1749498873807341,-.27613653682211575,-.09065350545022713,-.015101105715478274,-.0010532751265287738,-.08204491851289233,.010705526315732109,-.0056698536823632534,-.03628626839204598,-.002481220444301584,.09476844701896192,-.224413320393112,-.13106581900761924,-.00058234446045053,.254357517084223,.03923653338217307,.024141666831206714,.008833188472774717,.004268663667086584,-.012593343881888968,.04328929752692242,-.00043800911235742604,.1089161459812379,-.0038871367161778295,-.08132996833150016,.22820944406317803,.4031200027249902,.26346017480936107,.8682713800974723,-.24947885513851314,-1.2621857571853632,.3201969513996075,-.194530306595574,-.05815724976841667,.1226811816914933,-.0352895630636345,-.08175917844592065,-.011310849850443772,-.04229988913026883,-.030200114248426623,.0013507040628626303,.08374410530080267,.040506406338050895,.12518231680881103,-.08433842597437564,.04617423408269629,.08081252690949875,.16881304090125832,.02285766799075026,.04946368453866589,.014174493080162815,-.039465599946438334,-.053283308768024965,.04469091820910013,.005731502793172531,.1719749232535624,.26227456167613394,.3513559741645329,.3337003135725934,.48673882008850966,-.2792266601854941,-.9019195738157806,.6363731233683764,-.060521107576467635,-.014154913289577215,-.18647295463827063,-.16889959178925743,.041652272773958374,.07593504311206452,-.020085011074200423,-.007043080701302525,-.02791945026439252,-.00793424238039499,.021933293271094115,.1587890677280339,-.02059616095805995,-.005211204463467397,.008021591507499164,.05353030082235833,.0474651922783904,.060698557392036064,-.00970399269999631,-.030739864021722747,-.03302730490648645,.008421474591235165,-.03036040119684083,.060148519255615165,-.0024573680892551967,.23095349816725866,.3285360561592826,.38370084094404566,.13538196037364647,.01331021408876858,.1898873716577617,-.6239051855536973,.08082528642091671,.00774172736706095,-.22223052073714233,.07412235121492945,.047542790117626306,-.004926143375424972,.027582495505149737,-.039806904605142586,-.04252656204416143,.0072474243428623,.0691137230639886,-.015567334119352927,.055909188302305984,.04806311981862192,-.0027327273075535455,.04585110256530835,.0699831200027951,.026200884444945973,.008705072547775906,-.0037727340439829347,-.012901798319361227,-.033053795814988754,.01315617033162081,-.01553305493359669,.14807112835842184,.018761372187400604,.08080613749345414,.13950623949894433,.10703484463450816,-.26278941929435246,-.36774772058649907,.5962576209185069,-.3665342673930213,-.2270896996607477,.03628959076218108,.06945150463938327,.0045810353743422905,.014518052118829408,-.009691816165965116,-.004236734242614894,.0017729650965627938,-.020526538310240098,-.00978931567670096,.09508648513499297,.06235199972119075,-.01672722282524514,.06519950655383722,-.012727342518659639,.021222695138497675,.02512350832301345,-.008656372871138747,-.048279776827017555,-.025594278576058595,.04363252969520693,.0008919402495326742,-.02115911217060702,.005783889905293781,.042160123131606046,-.16398523681965352,.15410637679425865,.1149661944706041,-.23773808023122042,.30878981646904247,-.09195353982533305,-.1511221088570756,-.05806798387241584,-.016396390506166002,.03900580321070508,.023932611476630637,-.006684196401155907,-.0027208109883995707,.005434023698746266,-.016167541663812044,.002380991852259873,.03470838640090904,-.007296354431210057,.023224778901069786,.10422569904352962,-.04918905117971928,.023151697315084544,.0013352981567299367,.006509832922919474,.02834601701232067,.006771051692498271,-.019457415538283694,-.024637199092487305,.019801411975277225,.004745657011912749,-.015775170314137797,-.03906718120738624,-.07053672326645621,.06381089208694683,.18571376182250354,-.04621845892784342,.05594744507099499,.1227003939427266,-.03798423433754704,-.12185282737260873,.01739900427309727,.03296056009139282,.05675987022201823,-.01825605168379989,-.019427096259341584,.010405151723131587,.02304633782904404,-.00322897127154033,-.013552286601009622,.05973226936448246,.02677362863360303,-.07060077152873463,.008835607182220432,-.09677203374284288,-.043908100663758234,.0023099396961402566,.0026341276434262424,.00364516409639781,.004808443274984581,.020866890117519587,.0038698355762962896,-.01986279082820429,-.026548451118935872,.008001903562601734,-.0706384180648158,.06951503451164305,.07074541532788536,.15128619138644453,.08380330702660829,.04601640195702959,-.21064351401911435,-.10796975372596025,-.03420155792081658,.01431321541581594,-.012363627500514576,-.010919865739753575,.017870360905994497,.017396471253638378,-.02007942542731345,.01046579838246435,.03256617145192176,-.05799439311344054,-.05617729507532285,.03433326053321245,-.130338354535672,.12409557570816747,.02754663694018964,-.03279899021265514,.08307703486887798,.026168992315518,-.018046490267575984,.005207681729782772,.016259252101333162,-.009045316783825131,-.0036967486190426836,-.02859281264717387,-.0017423598025251908,.04353483487601341,.12793975070954686,-.030070570566209584,.06885700316953144,-.017643635220692303,.015058032290063167,-.03296897547944007,-.0032509456626426633,.015788972597383943,.019251438395354474,-.009024853611406113,-.015272751179096435,-.008299212542201484,.05957553232524453,-.02113428762188115,-.07593204274580363,.10041080102702246,.19730813245926007,-.09420330567759928,.12177128356890216,-.09813036291316408,-.008606352781730114,-.014980171338571052,-.09199292532210057,.17587869380621152,.09217332722109572,.02189716558604548,.006037515267849643,-.02386519187296254,-.012395399307185896,-.022849248448590303,-.04832102011432769,-.005677992326511827,-.08430372577238573,.1437989861779114,.017114978073907855,-.02367492655451382,-.014433128838537597,.01224023536554338,-.06641957406918292,-.016196236751474646,-.0049338006978182185,-.008400134072988485,.0022066601859378697,.06754552046591947,-.1431573605324398,-.11335071558105927,.19200701617075636,.04700534712914311,-.1804016527269583,.10462001130261284,-.2952063874323646,.4550470204476488,.9196871674688951,.07562928201952356,-.17521945191954877,-.14741145606308895,.15842957449053352,.03331642390248584,-.04653963552319055,-.029239764799856394,.02825685744844656,.00474686181904234,-.02521789889898306,-.03439955883717374,.11937846922953181,.050544258155460854,.1394578516494776,-.10661165850403005,-.027700064466883865,-.06171969247781083,-.0007688026095812998,-.036686593450547596,.02083426192853413,.04259609882328336,-.005237402448426355,-.17900936499027453,-.05581712853807628,.1556206112582631,-.19930768818407885,.17374602795438115,1.0450941798657116,.011417685121456564,.7747019548618601,.06964987697494884,-.3675466403998272,.6432675339043074,-.24917063867041553,-.03954058633577317,.14567847379973992,.0659817400189202,-.05564408487662822,-.07712597645572139,-.0007367446231761105,.015701976416950342,-.032298308999268784,.0601543234701064,-.12792055300624763,.05868189493963719,-.022172258797336572,.105971385474807,-.03774974359224228,-.053672308552617946,-.12615835751184992,-.05935692746192366,.012406017329547145,.0680369475996537,.017107991149299284,-.04100815493405788,-.13447215443394772,-.2681626002669388,.18368617361305564,.4689423736971773,-.6287263620045653,.6068691896533199,-.15113295529591578,.036743730082780514,1.463608458760923,.1290449533429373,-.07441700456397135,-.6200376238621289,.017408469796284774,.1272883333159911,-.09493793106291715,-.05779163337935424,.03715419360007,.07149566160435859,-.010724993842566222,-.1481175279095394,.06786938796697012,-.09497433415130044,.31269363662275046,.01610138969469304,.011271546890921311,-.0416046739825933,-.07215692285898725,-.05023839674084114,-.013143422355014638,.1718132007526696,-.0007864520134103385,-.2587885502662679,.0028564673365731054,.26469201284371935,-.12782476119556443,-.5990489956312219,1.130668752319608,.4201199738298067,1.5043263157657745,1.0547694551235969,-1.114165184386494,.9005057884056495,-.5020328221472783,-.35825626720186354,-.34045699686317654,.03452635722266466,.16469615783949973,-.10773227995476188,-.02043860993814084,.15231382612170388,.00404523264002093,-.0674432622571157,-.120243611846639,.0724389902254128,-.2728416921191381,.31416612358708496,.23288712244734694,.17097210848547523,-.0683922825350877,-.1884297381053561,.026792869524674363,.068621242214501,-.028891896132398506,.01346687181869554,.18273076418691644,-.03902721990981482,-.6830314716152913,.28364033101911773,.20446853801739462,1.3830149751777017,1.3682011726001495,1.0314907737559074,-.5578743616729661,-.9999870738966836,.11752989424299397,-.8531772106141676,-.392401150865078,.2694620959312899,.13057930804766765,-.004829873646791958,-.006649117012130222,-.023829771073630532,-.07289920747928642,-.29873174456544577,.027468417557455698,-.26817287178186705,.21489820671404794,.048277840380711166,.23588030048916517,-.0035092112107956196,-.07685412425301093,.05790784432037204,-.011517786678353752,.04514609184617035,-.2624959582084973,-.2658576499070465,.5451031587708403,.2315595903433905,-.4408675116417886,-.689112828517529,.750192686886552,1.6899938281650098,1.2795505844643045,1.1758121586434311,-.0685100510909925,.24494470763482898,-.13955938857309558,.2625838718707741,-.31004041285864437,-.06094671806634362,.20150153854805294,-.21163882649779717,-.23457709892354675,.14508578389537688,-.22705801052414679,-.2857183558836735,-.19596817846267664,.13015393203001066,-.32999646269142935,-.19528135326362211,.3680693392222917,.044374683774465004,-.17789090203786717,-.13954351571969323,.24064979253244634,.04749824375933088,-.33137912963317673,.1995147304842484,.640274048196846,.2505529731115497,.13414323846201037,1.4561178571660989,.506600298248318,.8069590311966988],height:32,width:32,top:{real:[17750.107020847583,6210.865615966279,10017.081922566327,3457.5995074393513,265.850218137708,-70.20768481034305,-8.882891147089472,24.58975650378648,-11.140592103834141,-1.46746599378154,-.34121813437428317,1.0812077419156148,1.7163290532419633,-4.566614630463569,-2.684639401420383,-2.273864366622347,1.917575640981823,-2.273864366622364,-2.6846394014204122,-4.5666146304635395,1.7163290532419744,1.0812077419156028,-.34121813437427356,-1.4674659937815784,-11.140592103834141,24.589756503786372,-8.882891147089664,-70.20768481034348,265.8502181377076,3457.5995074393486,10017.081922566325,6210.865615966285,23430.31298691556,-4993.986386578701,-867.9270784111233,991.9702295167051,152.49743471969379,-30.09622891688864,45.84966179865908,-31.46758894668901,16.96071854645447,4.334366206560186,-.4258390713100009,.4786052744328573,-1.8738744001784808,.5336707597630499,-3.884194145524758,-.7540782456530397,.5514719539298555,-.7934524273933928,-5.902676979317489,-1.384293215600769,-4.144794214579823,-2.913052274311734,-.8712082218639676,-1.7340023689981476,8.022111984944255,-9.103479975813322,67.03887483927257,44.11247283269986,441.79945796279685,3245.5044122716786,3861.5097933424754,-5655.768742169554,-15889.920855591003,-2792.017020916347,3795.2577126849956,553.8844085299576,-85.90566477025423,195.26564512659746,24.791859336013662,19.6375216145314,-6.168008915359045,-5.087200295288675,-.21502707506361318,1.4832779566036471,1.4444541156654906,-2.278921340791467,.30255454236990775,-2.3473646939882187,-.02820677859184775,1.2126049622480428,-.7855793734203073,-2.9245439997897638,1.236962081731878,1.1827041713801927,-1.6114665304853286,-3.5864367039316236,-14.698165954413065,20.29282209316159,43.7328917067592,111.68572777077691,-209.48016621032312,-187.12585183373633,2586.314839382015,1688.0815183011628,4748.220391025409,1775.7319020900284,965.534591135915,-592.8974138074635,99.78788635488837,95.45976503600482,59.29663551844352,-7.698710633143011,-.003618041311866854,-.4329078625206647,-1.598202682681902,.1135987222961578,-.47654646487314006,.05292012132443119,-1.193156957130263,1.6263047283546588,1.120828251360869,-1.916766911729648,-1.3790558562903064,-.15528235781115707,.339895398198906,-1.1170639390757935,-.5401967179111659,2.403966038546336,7.33426744227294,-18.965458306286095,.03773123101507536,5.788882372224528,-226.40133474887324,-362.0750540837246,1068.1182163210274,1839.5542246985658,1536.22079311388,1719.2247320855465,351.77395499971544,-218.0081025930205,-154.06814929171503,76.93240465195194,11.83330919947551,3.0799843602247936,2.1514657945922595,-2.1600173905506583,-.8132927291931007,-.05764093599125942,.8174378178766071,.4700783435753993,.8257847464902618,-.485121980563267,-.4411834787796781,.8537258719103306,-.9650509180144995,-2.500132935450727,-.2822761000809063,1.5082121759974054,.7332379903786944,.47326064521443867,-2.2071915479661444,2.1017967421924912,-14.788373732218277,-10.376064867674437,-110.67917899227207,-400.67251265606825,13.375377575225066,2228.271084047331,1272.0006323499422,485.3035992226992,-150.18264185504094,-215.33992676901764,-8.869446734595165,40.21604419999191,.627396838406635,-1.763160286154926,.8876150621479377,2.2829883187502253,-.37542737915458396,-.08292432350233894,-.2690018095258665,.06649495301798529,-1.293709574268377,.9014801984840545,1.049315066873844,-1.550015566266476,-1.5096304544124948,-.7672546252768676,-.45464639460382006,.03503878860161394,.8539387293596101,.891727630123107,-.12413241898971583,-7.405788146756412,-5.5362761946156125,1.231534306746803,18.635135255424384,26.03667534143711,-87.77288882471544,-225.72012452523,395.63478219787083,378.7170167703935,36.70305631243881,-91.05039439794716,-3.4611377608751717,16.691588629055683,-.030826600791664327,-3.196930879641269,1.3816292236713215,.42488100600164197,.0847137636329082,-.28535803119354425,.005848312084274873,-.7224956550701193,-.802621622131051,-.11947358836291604,.1425158350557394,-.2663976476885841,-.5959983362374907,-.5628948051906861,-.09220191182028845,.7722381907211653,.5552249106419074,-.14411590791637013,-2.1806910872492855,1.0588352659849944,-1.722617263430356,-9.016744076782127,-38.48389632251889,-22.599080819691828,25.54113970512769,375.57983717352784,181.47383294778024,149.67885098073037,-4.100878251797606,-3.738347514365787,18.721866312633942,-1.1602382001305473,-5.839154093942011,-.21088907624048864,-.29870055099180226,.9533183744618138,.06042439564320553,-.42858353450158043,-.37036207729837234,-.3036964450645726,-.7565217634765898,-.4454571363152239,.7132684521528351,.07176180892895631,-.6382969819391779,-.4523550556385587,-.08015934030842575,-.15881914095274483,.37773826228539636,-.0970863633135215,-.8670604429090952,-1.3342582973973045,-.6179277702044148,.16957438507140327,10.565905071599056,15.380533375221102,10.50023919474786,19.996280010030237,18.60272375866586,4.034831471780333,11.168149094486143,14.395513359675057,-3.576502394652771,-3.876062809222843,2.0358977627782506,-1.6580642648165547,-.13166485139511078,.2591565726162201,-.22701969228044258,-.29312645623416966,.09996947219935386,-.3910166116454323,-.042546772814251566,.29433076927773894,-.5093538487418168,.09048772686114162,-.09214398588257239,-.5825352944026844,-.416714322810017,.14644815319126417,.2723500443275419,-.039709576626662156,-.41013369223337515,1.1756350920235048,1.5259648698081887,-4.451627866201312,-8.128003687892722,9.604108020551694,20.813833475064627,12.963050463991683,7.8870012209429445,15.407970089260955,5.378309688910911,-3.135003053617967,1.9101786820520572,1.6649545288728531,-2.142164884787256,.3523092008580216,.37729718445187704,.02082392939460398,.08713974495724808,-.10976037032555666,-.5698689940173911,-.4402090815221931,.6919056466115241,.20725962387572397,.6404278736867182,.7186728309989674,.16183428074791173,-.17223426808716463,-.17676233483878773,-.27594664738318686,.0952383574449861,.02072697193586424,-.11463597101365795,-.3233331161098237,1.2888258236383847,3.023753883451761,-.12189842989060286,-4.500205647906865,-2.8307120360813536,9.032505574283658,-5.083687145641661,-6.422678336118566,-2.383206402964554,2.120438050789215,-2.1797923249754283,-2.131688277076892,1.4364513793862836,.8284741731103675,-.5470510771368747,-.053118808001264,.1034933009018914,-.027586170457780668,-.2786611518494937,-.4744187891270259,.32835706009268834,1.8712198771790323,.4493701678023156,.8488760221500451,.3519180353068138,.2875824347525097,-.6426201464805843,-.4059735310092979,-.2224452936424687,-.07186950223505165,.3302146612298864,.24942995069051274,-.5214330526633183,-.09366255470033667,1.1233733739102922,1.9003965613191238,.07120934753760759,-8.654923611944618,-1.842762037193103,-.5229577546680441,3.409295272037012,-.6500317796772334,-.1840159964371442,1.8831870902689825,.7983111628921199,-.3992517298270185,.05120517740303382,.2598923527237304,-.18824332097783142,.13750859145926242,.7822683031309051,-1.2572785001190825,1.335536332855691,1.2220896356262305,1.6491421999762639,1.7622421170936717,.9648743983441674,.7912838147011229,-.26979590260649117,-.37236776211072153,-.6531881225090838,-.13360581679076858,-.1817007191765827,.4244891020544192,1.0695325895656689,-.49200291489349485,-.5995906658098875,-2.461030407050638,-1.7528842523917616,5.409297459242755,11.628502736704702,13.318871722095572,5.384420128917242,.12839725172390623,-.9146215998500353,-.4207633568928546,.7328961843606323,.9816454560601925,-.31879685258307294,-.45467275635234927,.23929181220408463,.735537321037087,-.7805028518028965,-.2061437725020578,-.6614735481139654,.8472254475644475,3.1542100241342745,-1.0454812204468338,.4911227283477408,.8978009409713777,-.8068634496024236,.2616620751435001,.3423496440167225,-.27361449647202374,.07840034325728802,.2713071574863611,-.26706243773596255,.9287956087265937,-1.3686907450256593,.37153092475944227,-.00770609153918559,-2.1487270106054996,8.242311510799118,10.211121947580189,11.004080199445575,5.512476255300478,.43541395104991965,1.3138259234516578,.4769768752500237,-.3743769063787195,.4917032514672482,.5309293320442569,.7897723185645854,.05493597003430254,1.0907299238052364,-1.4537313504920895,1.663741525652943,2.3271742206176285,1.6752406948773604,6.0227778178364675,-2.569314033109529,-1.3449083811022362,-.06354075932635939,1.2007479971921078,.26947504329539196,-.043317616642408706,-.0900924044749603,-.5614935645216418,-.29757479536733583,-.825312878504854,.5288097384008399,-.5104284962829919,1.1866854822445434,7.713048076228817,17.626109919920186,26.29568713002228,9.15149795145862,-1.521929375229722,.8536435912377126,-.365663824522519,-1.1590870007863963,.4808263000269652,.9305906744563816,1.1024013035834523,.638418295742183,1.5659590764611497,.20674310541385973,1.0081259505833966,1.4865008399227626,-1.6031905208728288,5.771883570976741,.2720344299284404,3.2411570780563994,-1.0481514144590243,2.2338214812745694,3.1628749936702945,1.7743358086362808,-.03099281849361625,-.4144288271295417,-.31459130661253104,-1.7323756021672925,.19363530105298493,.6112321227052172,4.826040478690415,6.7814469674820135,4.974801806376985,19.935738411546794,15.127019575257112,16.951752765718286,6.976320734749117,.8320458256453673,-.22090351652873133,-.48187393778382737,-.7221625941331894,.6833751487943774,1.493402769177877,1.3836806937153638,-.0891083628996989,.5791053376434419,3.1507795425198797,1.9139554692796912,4.14239902259602,-5.089358033057332,4.654532007457709,-1.3079026033800338,1.258390156840345,1.3087920196200225,1.8018391908724931,1.3933980798910508,.6760493311480307,-.49475104816844406,-1.4152366315362725,-.645806625334661,-1.4537653735214031,3.1014323943375786,7.6843087454063586,10.909142678924193,12.359496229531475,15.280082473470735,24.669023160454167,12.739042274822818,1.7204760023261643,.5292950854871518,2.1482192005482723,-1.481161898887601,-.7940407971043247,.46540881956838565,.9262471185427797,1.0380549761479756,2.3168267428989626,1.5788387366050483,-.8376697052300492,4.750572050222373,-2.6570294115495297,6.761213132395551,-2.6570294115495336,4.750572050222378,-.837669705230057,1.5788387366050476,2.3168267428989657,1.0380549761479752,.9262471185427773,.46540881956838565,-.7940407971043286,-1.4811618988876,2.148219200548279,.5292950854871515,1.7204760023261518,12.73904227482281,24.669023160454188,19.935738411547018,12.35949622953156,10.909142678924129,7.684308745406342,3.101432394337563,-1.4537653735213987,-.6458066253346709,-1.4152366315362839,-.4947510481684456,.676049331148034,1.3933980798910552,1.8018391908724987,1.3087920196200247,1.2583901568403484,-1.30790260338003,4.654532007457706,-5.08935803305732,4.142399022596009,1.913955469279683,3.1507795425198943,.5791053376434462,-.0891083628996941,1.383680693715373,1.4934027691778826,.6833751487943738,-.7221625941331862,-.4818739377838111,-.22090351652873805,.832045825645343,6.976320734749093,16.951752765718314,15.127019575257133,17.626109919920285,4.974801806376996,6.781446967481992,4.826040478690392,.6112321227052044,.193635301052977,-1.7323756021672947,-.31459130661253587,-.4144288271295444,-.030992818493609464,1.7743358086362877,3.162874993670298,2.2338214812745694,-1.0481514144590143,3.241157078056395,.27203442992843363,5.771883570976741,-1.6031905208728274,1.4865008399227673,1.0081259505833953,.20674310541386615,1.5659590764611582,.6384182957421902,1.1024013035834526,.9305906744563824,.48082630002696636,-1.159087000786395,-.3656638245225098,.8536435912377094,-1.5219293752297598,9.151497951458596,26.295687130022237,8.242311510799235,7.713048076228867,1.1866854822445243,-.5104284962830227,.5288097384008245,-.8253128785048506,-.297574795367338,-.5614935645216511,-.0900924044749598,-.043317616642408116,.26947504329539745,1.2007479971921178,-.06354075932635406,-1.3449083811022313,-2.5693140331095257,6.022777817836472,1.675240694877361,2.327174220617627,1.6637415256529449,-1.4537313504920832,1.0907299238052377,.05493597003431282,.7897723185645906,.5309293320442623,.4917032514672505,-.37437690637871607,.4769768752500283,1.3138259234516545,.43541395104990577,5.512476255300489,11.004080199445557,10.211121947580168,11.628502736704604,-2.1487270106054663,-.007706091539169374,.37153092475944555,-1.3686907450256616,.9287956087265901,-.26706243773595856,.27130715748636525,.07840034325728844,-.27361449647201985,.34234964401672396,.26166207514350365,-.8068634496024222,.8978009409713853,.49112272834772974,-1.045481220446846,3.15421002413427,.8472254475644415,-.661473548113959,-.2061437725020583,-.7805028518028938,.7355373210370894,.23929181220408727,-.45467275635235105,-.31879685258307255,.9816454560601955,.7328961843606313,-.4207633568928543,-.9146215998500377,.12839725172388108,5.38442012891722,13.318871722095585,-1.8427620371929223,5.4092974592426515,-1.752884252391761,-2.461030407050609,-.5995906658098782,-.49200291489348996,1.0695325895656664,.42448910205441354,-.18170071917658262,-.13360581679076522,-.6531881225090824,-.3723677621107227,-.26979590260649017,.7912838147011273,.9648743983441668,1.7622421170936722,1.6491421999762705,1.2220896356262196,1.3355363328556904,-1.257278500119075,.7822683031309038,.13750859145926628,-.18824332097783478,.25989235272372874,.05120517740303401,-.39925172982701423,.7983111628921264,1.8831870902689678,-.18401599643714045,-.6500317796772292,3.409295272037008,-.5229577546680811,-5.083687145641791,-8.654923611944545,.07120934753757101,1.9003965613191072,1.1233733739103013,-.09366255470034336,-.5214330526633129,.24942995069051838,.33021466122988513,-.0718695022350494,-.22244529364246549,-.40597353100929245,-.6426201464805834,.2875824347525145,.351918035306808,.8488760221500463,.44937016780231587,1.871219877179029,.32835706009269156,-.47441878912702484,-.27866115184949264,-.027586170457779294,.1034933009018901,-.053118808001266206,-.5470510771368722,.8284741731103715,1.4364513793862805,-2.131688277076882,-2.1797923249754287,2.120438050789201,-2.383206402964568,-6.422678336118408,7.88700122094335,9.032505574283476,-2.830712036081403,-4.500205647906819,-.12189842989059124,3.023753883451757,1.28882582363838,-.3233331161098253,-.11463597101365604,.02072697193586587,.09523835744498739,-.27594664738318975,-.17676233483878293,-.1722342680871602,.16183428074791517,.7186728309989714,.640427873686722,.20725962387572536,.6919056466115251,-.44020908152219435,-.5698689940173924,-.10976037032555588,.08713974495724872,.02082392939460036,.3772971844518759,.35230920085802736,-2.142164884787245,1.6649545288728365,1.9101786820520659,-3.135003053617966,5.3783096889108455,15.40797008926083,18.60272375866586,12.963050463991696,20.813833475064644,9.604108020551676,-8.128003687892736,-4.451627866201328,1.5259648698081876,1.1756350920235052,-.41013369223337515,-.039709576626662,.2723500443275417,.14644815319126442,-.41671432281001886,-.5825352944026828,-.09214398588257292,.09048772686114251,-.5093538487418168,.2943307692777374,-.042546772814252246,-.3910166116454319,.09996947219935487,-.29312645623417033,-.22701969228044291,.2591565726162216,-.13166485139511078,-1.6580642648165524,2.0358977627782484,-3.8760628092228537,-3.5765023946527563,14.395513359675084,11.168149094486147,4.034831471780354,181.47383294778047,19.996280010029963,10.50023919474779,15.38053337522109,10.565905071599067,.1695743850714092,-.6179277702044097,-1.3342582973973056,-.8670604429090915,-.09708636331352224,.37773826228539636,-.1588191409527461,-.08015934030842092,-.45235505563855616,-.6382969819391766,.07176180892895834,.7132684521528342,-.4454571363152199,-.7565217634765878,-.3036964450645788,-.3703620772983737,-.42858353450157866,.0604243956432037,.953318374461814,-.29870055099180354,-.21088907624048941,-5.839154093941986,-1.1602382001305538,18.721866312633882,-3.7383475143657954,-4.100878251797706,149.67885098073012,395.6347821978709,375.57983717352744,25.5411397051276,-22.599080819691835,-38.48389632251889,-9.016744076782171,-1.7226172634303247,1.0588352659849967,-2.1806910872492873,-.14411590791637696,.5552249106419069,.7722381907211674,-.09220191182028437,-.5628948051906791,-.5959983362374925,-.26639764768858487,.1425158350557399,-.11947358836291141,-.8026216221310536,-.7224956550701233,.005848312084270103,-.28535803119354936,.08471376363290742,.42488100600164375,1.381629223671322,-3.1969308796412634,-.030826600791668796,16.691588629055648,-3.4611377608751566,-91.05039439794719,36.70305631243863,378.7170167703935,1272.0006323499422,-225.72012452523026,-87.77288882471514,26.03667534143715,18.6351352554245,1.231534306746842,-5.536276194615616,-7.405788146756401,-.12413241898971436,.891727630123105,.8539387293596038,.03503878860161398,-.4546463946038164,-.7672546252768583,-1.509630454412483,-1.550015566266479,1.0493150668738473,.9014801984840544,-1.2937095742683813,.0664949530179763,-.2690018095258679,-.08292432350234526,-.37542737915458746,2.2829883187502267,.8876150621479396,-1.7631602861549227,.6273968384066227,40.21604419999188,-8.8694467345952,-215.33992676901772,-150.18264185504114,485.3035992226977,1536.2207931138814,2228.271084047332,13.3753775752247,-400.67251265606865,-110.679178992272,-10.376064867674508,-14.788373732218197,2.1017967421924983,-2.207191547966143,.47326064521441386,.7332379903786985,1.5082121759973919,-.2822761000809081,-2.5001329354507282,-.9650509180144967,.8537258719103169,-.4411834787796837,-.48512198056327205,.8257847464902586,.4700783435753934,.817437817876596,-.05764093599127141,-.8132927291931111,-2.160017390550672,2.151465794592262,3.0799843602248034,11.833309199475522,76.93240465195203,-154.06814929171483,-218.00810259302057,351.7739549997146,1719.2247320855445,4748.220391025408,1839.554224698564,1068.1182163210278,-362.07505408372486,-226.40133474887313,5.788882372224479,.03773123101509879,-18.96545830628597,7.334267442272939,2.4039660385463657,-.5401967179111887,-1.117063939075788,.3398953981989011,-.15528235781113153,-1.3790558562903272,-1.9167669117296613,1.1208282513608707,1.6263047283546224,-1.193156957130264,.05292012132442746,-.4765464648731435,.11359872229612604,-1.5982026826818876,-.4329078625206879,-.003618041311865411,-7.698710633143024,59.29663551844356,95.45976503600443,99.78788635488839,-592.8974138074643,965.5345911359134,1775.7319020900306,-15889.920855591006,1688.0815183011607,2586.3148393820165,-187.12585183373636,-209.48016621032366,111.68572777077674,43.73289170675933,20.292822093161472,-14.69816595441305,-3.5864367039316574,-1.611466530485326,1.1827041713801545,1.236962081731869,-2.9245439997897797,-.7855793734202979,1.2126049622479607,-.028206778591846705,-2.347364693988263,.3025545423698818,-2.278921340791416,1.4444541156654738,1.483277956603626,-.2150270750636187,-5.08720029528866,-6.168008915359052,19.637521614531632,24.791859336013527,195.26564512659732,-85.905664770254,553.8844085299576,3795.257712684994,-2792.017020916346,23430.312986915553,-5655.768742169554,3861.509793342478,3245.504412271677,441.7994579627963,44.11247283270051,67.03887483927267,-9.103479975812874,8.02211198494424,-1.7340023689979776,-.8712082218640018,-2.913052274311693,-4.144794214579845,-1.3842932156007377,-5.902676979317541,-.7934524273933764,.5514719539298532,-.7540782456531224,-3.8841941455247726,.5336707597630261,-1.8738744001784735,.4786052744328138,-.42583907130996707,4.334366206560095,16.960718546454476,-31.46758894668928,45.84966179865925,-30.096228916889014,152.4974347196931,991.9702295167021,-867.9270784111243,-4993.986386578703],imag:[0,-2277.9356791272003,-4760.5440393641,-3362.7502157108247,-452.6326365977277,12.902525613472081,-66.32459149303926,21.395810280639775,12.049924797684376,-6.432231930192483,-2.6401787430633603,-2.8941924141450355,-1.0996569736184965,-2.1837600734887777,.8730816516968187,-.4143473704962265,0,.41434737049617953,-.8730816516967246,2.1837600734887985,1.0996569736184816,2.8941924141450213,2.640178743063284,6.432231930192494,-12.049924797684376,-21.39581028063975,66.32459149303935,-12.902525613472182,452.63263659772764,3362.7502157108197,4760.544039364101,2277.9356791272016,-19170.834011440937,-3837.2504381898657,-1562.2865240696121,-2188.2624437144,-79.98538931763022,-65.73387671644744,-129.0323271304431,-21.57473128398986,19.219741943874205,-1.3770831994436832,-4.628561865608997,1.935633246860916,1.914358953204174,-.39274625271235863,-2.8755632420164114,1.391076979912747,2.198398212230069,-.9340221618772395,1.5955119590990243,2.5332827335358816,2.5722659267438073,-2.1433748844126024,4.705160710516987,6.0715674792926295,-11.686157623491814,7.736622407403881,65.5137173230452,-68.9399476604814,105.08267177765576,-524.55810593663,266.59769699529215,-6565.201391560311,-12998.804313286138,-7140.874330507554,-1281.4742181751476,387.93265499317204,232.0789193763446,-67.21350217512955,-82.49990339348469,23.74231030494058,13.167070698799225,-1.2601921779485123,.22176027695648487,-.8286902887112986,.8163858633748259,.03036195775005164,-1.8114765667849664,-.33462283171345614,-1.4063404110660631,1.8330278968089115,-.19923279402973898,2.6325944160953934,.7476745441031245,.33273215463055067,.1242120122414053,.13350548988021607,-6.751721015042069,-24.893726268864828,68.76437592093231,203.5884482467179,-52.44337724103917,589.8418819857724,814.3853839170243,-3077.5993672243876,-9988.272530974133,-5000.875744438487,-213.8676097071096,-153.72085790515706,376.50689706328353,10.499004391497454,-22.259718007212538,-1.058756094412357,1.3367261976572533,-1.845627367813951,-.5081747549074722,2.6646257572641145,.726639874038269,-1.4553261209412862,-1.748611490859247,-2.2393579162674944,1.787255682497424,-.4779279337995983,.9099046875190019,.5685045714908853,-.042260514128558184,-2.0950938638350283,.3784241201585649,2.7868839636562086,-7.179603879766707,-2.653276667752605,42.569555354666804,86.61832325668642,262.60583525697274,-570.3493516446566,953.3853188584327,-2608.4519239039555,423.7691979018007,-777.4907220078727,-730.1555176872118,267.7782795448585,48.782690015655945,-52.08491464110734,-.2673276853691823,18.791248861451912,.034376983736590996,-4.773352510756985,.2450889317389604,.6955167330950534,.7468929761078751,.3625445531781404,-.08286462770329087,-.11088180406499534,-1.914524352082348,.6380993778757686,-.4760955869340491,1.1704253870693357,.1035348526676573,-.9826864094292438,-.6640301497435355,1.4462870038602533,3.6812627646537175,-8.684706829846188,-1.702664423174063,110.68919188818327,26.998515460375977,-65.42102326237345,-744.0954066709206,-46.729307478653496,-1526.2181503116453,-735.5077404616152,282.18880697804167,-182.37864683063907,-54.0526813142352,39.603849315110104,10.295701682078779,2.359337802307917,-.6346191100738395,-1.7124190510555728,-.21593130161202514,.7675504033211141,1.2882353738829533,.4496831429006712,.25989055470659483,-.6671389396205737,.13682839189736165,-.3688311879534851,.9123038313637193,-.4699644624025633,.3021913121485442,-.19558932994062075,.01261576384947006,1.762420772813289,1.9045345605049635,-3.7790359077733253,-11.964107143689581,4.5083476182968525,61.96781696120042,-254.89688572081204,140.68826246910922,-45.053807917761794,314.747855744751,-8.800126189101572,-360.31891091191073,-57.02544877742448,44.579795546563595,-19.359200628613657,3.6862817789376683,8.920663061128309,.18896973496668307,-1.022732352408107,-.33838743748909134,.4383320859115699,.007429416907156167,.504464760143059,.1890893708139402,.6513333254686208,-.7748329018274454,-.3077900749407771,-.8042712968338931,.2601121970475906,.2346158834364472,-.05650706693953473,-.4451335771232274,.6466720997697505,1.554501701628272,-1.5250850436867627,-9.59177124730927,13.475211488788412,28.8379635870378,-21.930976284520067,-337.61540934331555,-197.27075321520147,-65.63437440423792,-45.71617418640904,38.68839724466203,-10.636065931319841,-36.620593610799475,11.815798616251305,9.03269848300071,-3.0325028906240825,-.07586226673501913,.19104942819406223,.07372642556981186,.18311714867084192,.6303699903322625,-.09862618444928073,.09561935970760504,.13744024889930673,-.09708915289878234,-.8168356827516692,.5438621702414317,.041501479859297266,.4303139947158866,.254701048212831,.17326636360277617,.46079094226119127,-.1653086566745448,-.8639170202551628,-4.961128553246363,-12.372184270457062,11.516126179313906,3.2997425925449804,2.057098700973387,24.878800155519915,44.04178808431685,28.44615541803764,-32.190550839656126,-17.692027714058376,11.789513877445387,1.9317197634824401,-3.450756085581017,.36626836712779354,.480747660556516,.18044316667269442,-.2824097442697313,-.16613612027343372,.029095718259237995,.24450075339721422,-.09133033174751364,.09763429547907566,-.36806371804963284,.1661459131254051,-.7739535250454471,-.3264657443238585,.015061212014132833,.29085100346092985,.04777071240950242,.14922819541222396,-.39792121836056477,-.1921281774085053,.8389528199741381,-1.5703737430868945,-8.436742777573645,5.660191686379234,-5.151003256170212,-22.05060531025986,-1.985459469757478,-7.531138613863072,7.414834109374134,8.095212346461937,-4.362973215395906,-.8761722254011065,1.0539667118389069,-.6949568334964709,-.5359722121834076,.21612918483653182,.16753374785242167,-.14587335963051168,.2984129896925935,.7572023138336264,1.2725586605629424,-.23788459440434945,-.4385884976219189,-.7980185869448654,-.418467544297231,-.4616140652658238,.5829480178646468,-.07893918397306843,.3147915514342539,.3142579757323138,-.08440003983266144,-.692881801996411,-.2177844961762289,-.19533791786522492,-.22665765093841067,-.3195679261340593,6.3352095159571435,13.304182061875538,9.068588917821575,13.820343051841526,-2.9904131431626517,-6.464484302874146,1.4950174056035006,.22841081726546483,-1.0443697855595202,-.36648156701751267,.4882545319244275,.32511669967392476,-.7495219254728813,-.3240674257394919,-.14589390394899102,.816159853135446,.21110858701983537,-.6213564644140027,-.275033391957563,.23916839371037824,-1.0440547633891395,-.40792084439497517,.5561013465692207,.37457806876122546,.17778944632276653,-.06964266735015433,-.395265600045646,.6982215061431774,.740778974977921,-.3129025268374792,-2.009627390680164,-.7516589877591736,-.15987777595408992,-2.551617907860878,-8.96433145647966,-15.134863386021781,-2.1073345817546003,.6188777654040759,-3.020632263557078,-.13950893398737912,.6328052716649578,-.16318694006603662,.06410706438489891,.11411070867346804,-.2886162817684455,-.35613651800395313,.12924440993745664,.38077834891929796,.8237413397844878,.42592408743381815,-1.499388757097531,1.2113263922466315,-.6165184213094926,-.9282058970090798,1.2123284995709924,-.37394823077908607,-.0626955713199254,.28532586796592635,-.016166881608109255,-1.113208302263574,.8654659680925351,2.0760623026361933,.5132282760654556,-2.249134360011389,-2.0374388890600263,1.1231676638159473,.3121424243877217,2.2815521755579042,-5.308271224660933,-6.728092771971708,.7140438104778886,1.0348891792697787,-.06258092873568138,.11553928672311624,.19710411955257187,-.22253376417909151,-.05143415191355815,-.6173870905535266,-.26515618204121805,1.3879170617746586,1.914789556971131,-2.7981144693643607,1.635105361823879,1.2876141106871726,-.538398150461572,-.8161681385562726,-.5577322903580001,-.1631047677612218,-1.4828287822897712,.1985744186572128,-.22253902629935005,.7614908977166794,.38423492006819204,.1363382578891905,-.40617531895308634,-1.9006670978622686,-5.605529579495267,-3.520106957758509,-.705653947553275,-4.823387939658201,-3.7118525914264513,.8763976476322485,-3.9705679716456896,-.3066516936670704,1.2925955094882555,.9805792936814742,-.5185509231518588,.06850464794165309,-.508021413026953,-.6502504343138331,1.639300730699956,-.04663462261514044,-.42095485749155304,2.862896234676761,-.8766418320987102,-.06138024962032572,-.6758372018583059,-2.165804182360429,-2.233410549901899,-1.7315960703588726,.023607096501577673,-.7257834989804465,.49340703388266716,-.17688316963519096,.9123110495294448,1.0401382704665323,.4063823936166456,-3.5528586670065754,-3.2389924588328527,-3.336337544628424,-3.3053285670589143,.4252936495393003,1.2623512061316915,-7.933726737283649,-1.0910503490681764,.3059123726272148,.7904901365883903,.15779582936744363,.35530534658354934,-1.0136463777621887,-.4359637933660717,1.3766560550226186,1.2643786263280588,.08111224992006862,.30101965208538256,-2.9649644331404845,3.940601481283172,1.2809925361642973,-2.3740821954043603,-1.8568139214134618,-2.2875531209700912,-2.0068530505793203,-1.6161905886738603,-.0699705599485395,-.6845264460955596,1.1180256373411306,1.0386505011587546,-.45802414484767806,-1.8827293053017495,-1.1452872829873149,-9.828238034590992,-4.837531415856278,.03553408849268729,5.873564568328072,-7.214828237282292,-1.9024855757814658,-3.672921982430532,-.04721742712852893,.8004552356650778,.9185615121387268,.1836517312402891,1.0527130168554166,.35231243394437906,-.9683286652099518,.38866324603453256,1.1024459216780036,-1.6264163010988006,5.908624805151913,1.1522588148293589,-4.01237694118883,-1.340956061423007,-2.245048288549614,-1.484164394238348,.5856922934209832,.03564645100107093,-1.3588202093923047,.006860270440306241,-.8453903643879284,.31580363771161246,-.13161779536446233,-.3454951189579537,-1.1291296924180168,-2.1947930228924113,-14.643424663744323,0,7.845651246794636,11.843681310787776,-4.154582091968257,.09883448579737673,1.2191537903053737,.14782839419733967,-.21707569483499198,1.328772630302227,.012891904979339022,.146292284007916,.7014726904124609,1.7613861146868823,.9788491568328603,1.5860078469473597,.1581490709403331,0,-.158149070940315,-1.586007846947355,-.978849156832858,-1.7613861146868832,-.7014726904124806,-.14629228400792066,-.012891904979343359,-1.328772630302227,.21707569483499028,-.14782839419734384,-1.2191537903053777,-.0988344857973758,4.154582091968275,-11.843681310787789,-7.845651246794633,-.03553408849252048,14.643424663744339,2.194793022892366,1.1291296924180338,.3454951189579438,.13161779536445045,-.3158036377116142,.8453903643879325,-.006860270440305063,1.3588202093923036,-.03564645100107677,-.5856922934209922,1.484164394238344,2.2450482885496172,1.3409560614230207,4.012376941188847,-1.1522588148293609,-5.908624805151906,1.6264163010987922,-1.102445921678016,-.3886632460345318,.9683286652099508,-.3523124339443831,-1.0527130168554157,-.18365173124028866,-.9185615121387165,-.8004552356650727,.04721742712852156,3.67292198243051,1.9024855757814958,7.21482823728231,-5.873564568328037,3.3053285670587775,4.837531415856222,9.828238034591017,1.1452872829873084,1.8827293053017478,.4580241448476783,-1.0386505011587623,-1.1180256373411397,.6845264460955567,.06997055994853607,1.6161905886738546,2.006853050579316,2.2875531209700912,1.856813921413464,2.374082195404371,-1.280992536164301,-3.9406014812831787,2.9649644331405014,-.3010196520853782,-.08111224992006867,-1.264378626328054,-1.3766560550226248,.4359637933660757,1.0136463777621971,-.3553053465835505,-.15779582936744335,-.7904901365883831,-.305912372627218,1.0910503490681696,7.93372673728363,-1.2623512061316555,-.42529364953934357,.7056539475532939,3.336337544628484,3.2389924588327594,3.552858667006559,-.4063823936166395,-1.0401382704665338,-.9123110495294464,.17688316963519082,-.4934070338826668,.7257834989804409,-.02360709650157415,1.7315960703588795,2.2334105499019046,2.165804182360432,.6758372018583214,.061380249620329064,.8766418320987087,-2.862896234676741,.4209548574915572,.04663462261514133,-1.6393007306999556,.6502504343138344,.5080214130269537,-.06850464794164784,.5185509231518611,-.9805792936814706,-1.2925955094882546,.3066516936670752,3.9705679716456634,-.8763976476322699,3.7118525914263776,4.823387939658211,-.31214242438772705,3.520106957758469,5.605529579495292,1.900667097862241,.40617531895307485,-.13633825788919066,-.384234920068196,-.7614908977166867,.2225390262993494,-.1985744186572119,1.4828287822897714,.16310476776122626,.5577322903580035,.8161681385562749,.5383981504615758,-1.287614110687174,-1.6351053618238793,2.7981144693643794,-1.9147895569711246,-1.387917061774662,.26515618204121727,.617387090553529,.05143415191356246,.22253376417909698,-.19710411955257243,-.11553928672311804,.06258092873567889,-1.0348891792697743,-.7140438104778788,6.728092771971674,5.308271224660902,-2.2815521755579335,8.964331456479705,-1.1231676638158536,2.03743888905998,2.2491343600114058,-.5132282760654543,-2.076062302636191,-.865465968092537,1.1132083022635748,.016166881608109234,-.285325867965928,.06269557131992738,.373948230779088,-1.2123284995709924,.9282058970090792,.6165184213094966,-1.2113263922466326,1.4993887570975342,-.42592408743381316,-.8237413397844804,-.38077834891929335,-.1292444099374525,.3561365180039534,.28861628176844567,-.11411070867346547,-.06410706438489967,.163186940066035,-.6328052716649591,.13950893398738348,3.0206322635570557,-.6188777654041017,2.1073345817545266,15.134863386021769,-9.068588917821655,2.5516179078607184,.15987777595415892,.7516589877591673,2.0096273906801727,.3129025268374742,-.7407789749779229,-.6982215061431771,.3952656000456455,.06964266735015913,-.1777894463227658,-.3745780687612245,-.5561013465692228,.40792084439497267,1.044054763389139,-.23916839371037832,.2750333919575636,.6213564644140045,-.21110858701983135,-.8161598531354401,.14589390394899499,.3240674257394903,.7495219254728818,-.3251166996739207,-.4882545319244257,.3664815670175123,1.0443697855595189,-.22841081726546683,-1.4950174056034862,6.464484302874131,2.9904131431626397,-13.820343051841599,1.9854594697574315,-13.304182061875386,-6.335209515957204,.3195679261341049,.22665765093840967,.19533791786523994,.2177844961762284,.692881801996408,.08440003983266403,-.31425797573231284,-.3147915514342516,.07893918397306962,-.5829480178646479,.46161406526582016,.41846754429722727,.7980185869448644,.4385884976219195,.23788459440435036,-1.2725586605629382,-.7572023138336219,-.29841298969258917,.14587335963051393,-.16753374785242225,-.21612918483653495,.5359722121834085,.6949568334964742,-1.0539667118389073,.8761722254011011,4.362973215395883,-8.09521234646192,-7.414834109374171,7.531138613863165,-44.04178808431685,22.050605310259897,5.151003256170214,-5.660191686379251,8.436742777573649,1.5703737430868991,-.8389528199741386,.19212817740850727,.39792121836056477,-.14922819541222082,-.04777071240950075,-.2908510034609289,-.01506121201413311,.3264657443238593,.7739535250454511,-.16614591312540627,.36806371804963284,-.09763429547907729,.09133033174751491,-.2445007533972123,-.02909571825923493,.16613612027343472,.2824097442697295,-.1804431666726947,-.480747660556516,-.36626836712779753,3.450756085581019,-1.9317197634824488,-11.789513877445398,17.692027714058376,32.19055083965611,-28.446155418037584,65.63437440423782,-24.8788001555197,-2.0570987009734387,-3.2997425925449106,-11.516126179313863,12.372184270457085,4.9611285532463585,.8639170202551659,.16530865667454706,-.46079094226119116,-.1732663636027687,-.25470104821282824,-.4303139947158862,-.04150147985929765,-.5438621702414322,.8168356827516703,.09708915289878373,-.1374402488992993,-.09561935970760387,.09862618444928568,-.6303699903322589,-.18311714867083492,-.07372642556981146,-.19104942819406445,.0758622667350162,3.0325028906240856,-9.032698483000724,-11.815798616251362,36.620593610799446,10.636065931319884,-38.68839724466217,45.71617418640933,-314.74785574475044,197.27075321520152,337.61540934331566,21.930976284520245,-28.83796358703773,-13.475211488788421,9.591771247309294,1.5250850436867665,-1.554501701628276,-.6466720997697484,.4451335771232284,.056507066939540815,-.23461588343644407,-.2601121970475936,.8042712968338912,.307790074940778,.7748329018274447,-.6513333254686114,-.18908937081392915,-.5044647601430582,-.007429416907151449,-.43833208591156614,.3383874374890965,1.0227323524080993,-.18896973496668346,-8.920663061128298,-3.6862817789376785,19.35920062861366,-44.57979554656358,57.025448777424586,360.31891091191056,8.800126189101382,1526.2181503116453,45.05380791776222,-140.68826246910882,254.89688572081207,-61.9678169612004,-4.508347618296833,11.964107143689583,3.779035907773343,-1.904534560504963,-1.7624207728132955,-.01261576384946491,.19558932994062728,-.3021913121485407,.4699644624025669,-.9123038313637213,.36883118795348824,-.13682839189736087,.6671389396205878,-.2598905547065944,-.4496831429006705,-1.2882353738829488,-.7675504033211031,.21593130161202181,1.7124190510555817,.6346191100738432,-2.3593378023079388,-10.295701682078779,-39.60384931511013,54.052681314235315,182.3786468306393,-282.1888069780413,735.5077404616143,-423.7691979018009,46.72930747865378,744.0954066709207,65.42102326237357,-26.998515460375824,-110.68919188818332,1.7026644231740455,8.68470682984619,-3.681262764653712,-1.4462870038602713,.6640301497435265,.9826864094292609,-.10353485266764806,-1.1704253870693322,.47609558693405896,-.638099377875768,1.9145243520823476,.11088180406502474,.08286462770329978,-.362544553178147,-.7468929761078681,-.6955167330950445,-.24508893173895085,4.773352510756971,-.03437698373658793,-18.7912488614519,.26732768536914786,52.08491464110734,-48.78269001565601,-267.7782795448579,730.1555176872121,777.4907220078719,9988.272530974127,2608.451923903957,-953.385318858432,570.3493516446571,-262.60583525697274,-86.61832325668658,-42.569555354666946,2.6532766677526505,7.1796038797667014,-2.786883963656256,-.37842412015855753,2.0950938638350354,.042260514128576405,-.5685045714908681,-.9099046875190062,.4779279337996068,-1.7872556824974217,2.239357916267509,1.748611490859272,1.4553261209412682,-.726639874038271,-2.664625757264088,.5081747549074523,1.8456273678139588,-1.3367261976572486,1.0587560944122603,22.259718007212488,-10.499004391497355,-376.5068970632838,153.72085790515695,213.8676097071096,5000.875744438484,12998.804313286144,3077.5993672243935,-814.3853839170239,-589.8418819857724,52.443377241039045,-203.5884482467181,-68.76437592093224,24.89372626886499,6.75172101504206,-.13350548988021724,-.12421201224142447,-.33273215463053935,-.7476745441031024,-2.632594416095354,.19923279402974362,-1.8330278968089646,1.4063404110660558,.33462283171345686,1.8114765667849764,-.03036195775005389,-.8163858633748258,.8286902887112786,-.22176027695649836,1.260192177948489,-13.167070698799225,-23.74231030494054,82.49990339348442,67.21350217512965,-232.0789193763447,-387.93265499317204,1281.4742181751474,7140.874330507548,19170.83401144094,6565.201391560317,-266.59769699529113,524.5581059366303,-105.08267177765569,68.93994766048132,-65.5137173230453,-7.73662240740366,11.686157623491809,-6.071567479292581,-4.705160710517021,2.1433748844125784,-2.5722659267438033,-2.5332827335358727,-1.5955119590990279,.9340221618771696,-2.1983982122300714,-1.3910769799127845,2.875563242016451,.39274625271232855,-1.9143589532041787,-1.9356332468609148,4.628561865608953,1.3770831994437265,-19.219741943874194,21.574731283989856,129.0323271304429,65.73387671644744,79.98538931762987,2188.2624437143977,1562.286524069611,3837.2504381898625]}},numeric=exports;void 0!==__webpack_require__.g&&(__webpack_require__.g.numeric=numeric),window.numeric=numeric,numeric.version="1.2.6",numeric.bench=function(e,t){var n,r,o;for(void 0===t&&(t=15),r=.5,n=new Date;;){for(o=r*=2;o>3;o-=4)e(),e(),e(),e();for(;o>0;)e(),o--;if(new Date-n>t)break}for(o=r;o>3;o-=4)e(),e(),e(),e();for(;o>0;)e(),o--;return 1e3*(3*r-1)/(new Date-n)},numeric._myIndexOf=function(e){var t,n=this.length;for(t=0;t<n;++t)if(this[t]===e)return t;return-1},numeric.myIndexOf=Array.prototype.indexOf?Array.prototype.indexOf:numeric._myIndexOf,numeric.Function=Function,numeric.precision=4,numeric.largeArray=50,numeric.prettyPrint=function(e){function t(e){if(0===e)return"0";if(isNaN(e))return"NaN";if(e<0)return"-"+t(-e);if(isFinite(e)){var n=Math.floor(Math.log(e)/Math.log(10)),r=e/Math.pow(10,n),o=r.toPrecision(numeric.precision);return 10===parseFloat(o)&&(n++,o=(r=1).toPrecision(numeric.precision)),parseFloat(o).toString()+"e"+n.toString()}return"Infinity"}var n=[];return function e(r){var o;if(void 0===r)return n.push(Array(numeric.precision+8).join(" ")),!1;if("string"==typeof r)return n.push('"'+r+'"'),!1;if("boolean"==typeof r)return n.push(r.toString()),!1;if("number"==typeof r){var a=t(r),i=r.toPrecision(numeric.precision),s=parseFloat(r.toString()).toString(),c=[a,i,s,parseFloat(i).toString(),parseFloat(s).toString()];for(o=1;o<c.length;o++)c[o].length<a.length&&(a=c[o]);return n.push(Array(numeric.precision+8-a.length).join(" ")+a),!1}if(null===r)return n.push("null"),!1;if("function"==typeof r){n.push(r.toString());var u=!1;for(o in r)r.hasOwnProperty(o)&&(u?n.push(",\n"):n.push("\n{"),u=!0,n.push(o),n.push(": \n"),e(r[o]));return u&&n.push("}\n"),!0}if(r instanceof Array){if(r.length>numeric.largeArray)return n.push("...Large Array..."),!0;for(u=!1,n.push("["),o=0;o<r.length;o++)o>0&&(n.push(","),u&&n.push("\n ")),u=e(r[o]);return n.push("]"),!0}for(o in n.push("{"),u=!1,r)r.hasOwnProperty(o)&&(u&&n.push(",\n"),u=!0,n.push(o),n.push(": \n"),e(r[o]));return n.push("}"),!0}(e),n.join("")},numeric.parseDate=function(e){return function e(t){if("string"==typeof t)return Date.parse(t.replace(/-/g,"/"));if(!(t instanceof Array))throw new Error("parseDate: parameter must be arrays of strings");var n,r=[];for(n=0;n<t.length;n++)r[n]=e(t[n]);return r}(e)},numeric.parseFloat=function(e){return function e(t){if("string"==typeof t)return parseFloat(t);if(!(t instanceof Array))throw new Error("parseFloat: parameter must be arrays of strings");var n,r=[];for(n=0;n<t.length;n++)r[n]=e(t[n]);return r}(e)},numeric.parseCSV=function(e){var t,n,r,o=e.split("\n"),a=[],i=/(([^'",]*)|('[^']*')|("[^"]*")),/g,s=/^\s*(([+-]?[0-9]+(\.[0-9]*)?(e[+-]?[0-9]+)?)|([+-]?[0-9]*(\.[0-9]+)?(e[+-]?[0-9]+)?))\s*$/,c=0;for(n=0;n<o.length;n++){var u,l=(o[n]+",").match(i);if(l.length>0){for(a[c]=[],t=0;t<l.length;t++)u=(r=l[t]).substr(0,r.length-1),s.test(u)?a[c][t]=parseFloat(u):a[c][t]=u;c++}}return a},numeric.toCSV=function(e){var t,n,r,o,a,i=numeric.dim(e);for(r=i[0],i[1],a=[],t=0;t<r;t++){for(o=[],n=0;n<r;n++)o[n]=e[t][n].toString();a[t]=o.join(", ")}return a.join("\n")+"\n"},numeric.getURL=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(),t},numeric.imageURL=function(e){function t(e,t,n){void 0===t&&(t=0),void 0===n&&(n=e.length);var r,o=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117],a=-1;for(e.length,r=t;r<n;r++)a=a>>>8^o[255&(a^e[r])];return-1^a}var n,r,o,a,i,s,c,u,l,d,p=e[0].length,h=e[0][0].length,f=[137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,h>>24&255,h>>16&255,h>>8&255,255&h,p>>24&255,p>>16&255,p>>8&255,255&p,8,2,0,0,0,-1,-2,-3,-4,-5,-6,-7,-8,73,68,65,84,8,29];for(d=t(f,12,29),f[29]=d>>24&255,f[30]=d>>16&255,f[31]=d>>8&255,f[32]=255&d,n=1,r=0,c=0;c<p;c++){for(c<p-1?f.push(0):f.push(1),i=3*h+1+(0===c)&255,s=3*h+1+(0===c)>>8&255,f.push(i),f.push(s),f.push(255&~i),f.push(255&~s),0===c&&f.push(0),u=0;u<h;u++)for(o=0;o<3;o++)r=(r+(n=(n+(i=(i=e[o][c][u])>255?255:i<0?0:Math.round(i)))%65521))%65521,f.push(i);f.push(0)}return l=(r<<16)+n,f.push(l>>24&255),f.push(l>>16&255),f.push(l>>8&255),f.push(255&l),a=f.length-41,f[33]=a>>24&255,f[34]=a>>16&255,f[35]=a>>8&255,f[36]=255&a,d=t(f,37),f.push(d>>24&255),f.push(d>>16&255),f.push(d>>8&255),f.push(255&d),f.push(0),f.push(0),f.push(0),f.push(0),f.push(73),f.push(69),f.push(78),f.push(68),f.push(174),f.push(66),f.push(96),f.push(130),"data:image/png;base64,"+function(e){var t,n,r,o,a,i,s,c=e.length,u="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",l="";for(t=0;t<c;t+=3)a=((3&(n=e[t]))<<4)+((r=e[t+1])>>4),i=((15&r)<<2)+((o=e[t+2])>>6),s=63&o,t+1>=c?i=s=64:t+2>=c&&(s=64),l+=u.charAt(n>>2)+u.charAt(a)+u.charAt(i)+u.charAt(s);return l}(f)},numeric._dim=function(e){for(var t=[];"object"==typeof e;)t.push(e.length),e=e[0];return t},numeric.dim=function(e){var t;return"object"==typeof e?"object"==typeof(t=e[0])?"object"==typeof t[0]?numeric._dim(e):[e.length,t.length]:[e.length]:[]},numeric.mapreduce=function(e,t){return Function("x","accum","_s","_k",'if(typeof accum === "undefined") accum = '+t+';\nif(typeof x === "number") { var xi = x; '+e+'; return accum; }\nif(typeof _s === "undefined") _s = numeric.dim(x);\nif(typeof _k === "undefined") _k = 0;\nvar _n = _s[_k];\nvar i,xi;\nif(_k < _s.length-1) {\n    for(i=_n-1;i>=0;i--) {\n        accum = arguments.callee(x[i],accum,_s,_k+1);\n    }    return accum;\n}\nfor(i=_n-1;i>=1;i-=2) { \n    xi = x[i];\n    '+e+";\n    xi = x[i-1];\n    "+e+";\n}\nif(i === 0) {\n    xi = x[i];\n    "+e+"\n}\nreturn accum;")},numeric.mapreduce2=function(e,t){return Function("x","var n = x.length;\nvar i,xi;\n"+t+";\nfor(i=n-1;i!==-1;--i) { \n    xi = x[i];\n    "+e+";\n}\nreturn accum;")},numeric.same=function e(t,n){var r,o;if(!(t instanceof Array&&n instanceof Array))return!1;if((o=t.length)!==n.length)return!1;for(r=0;r<o;r++)if(t[r]!==n[r]){if("object"!=typeof t[r])return!1;if(!e(t[r],n[r]))return!1}return!0},numeric.rep=function(e,t,n){void 0===n&&(n=0);var r,o=e[n],a=Array(o);if(n===e.length-1){for(r=o-2;r>=0;r-=2)a[r+1]=t,a[r]=t;return-1===r&&(a[0]=t),a}for(r=o-1;r>=0;r--)a[r]=numeric.rep(e,t,n+1);return a},numeric.dotMMsmall=function(e,t){var n,r,o,a,i,s,c,u,l,d,p;for(a=e.length,i=t.length,s=t[0].length,c=Array(a),n=a-1;n>=0;n--){for(u=Array(s),l=e[n],o=s-1;o>=0;o--){for(d=l[i-1]*t[i-1][o],r=i-2;r>=1;r-=2)p=r-1,d+=l[r]*t[r][o]+l[p]*t[p][o];0===r&&(d+=l[0]*t[0][o]),u[o]=d}c[n]=u}return c},numeric._getCol=function(e,t,n){var r;for(r=e.length-1;r>0;--r)n[r]=e[r][t],n[--r]=e[r][t];0===r&&(n[0]=e[0][t])},numeric.dotMMbig=function(e,t){var n,r,o,a=numeric._getCol,i=t.length,s=Array(i),c=e.length,u=t[0].length,l=new Array(c),d=numeric.dotVV;for(--i,r=--c;-1!==r;--r)l[r]=Array(u);for(r=--u;-1!==r;--r)for(a(t,r,s),o=c;-1!==o;--o)n=e[o],l[o][r]=d(n,s);return l},numeric.dotMV=function(e,t){var n,r=e.length,o=(t.length,Array(r)),a=numeric.dotVV;for(n=r-1;n>=0;n--)o[n]=a(e[n],t);return o},numeric.dotVM=function(e,t){var n,r,o,a,i,s,c;for(o=e.length,a=t[0].length,i=Array(a),r=a-1;r>=0;r--){for(s=e[o-1]*t[o-1][r],n=o-2;n>=1;n-=2)c=n-1,s+=e[n]*t[n][r]+e[c]*t[c][r];0===n&&(s+=e[0]*t[0][r]),i[r]=s}return i},numeric.dotVV=function(e,t){var n,r,o=e.length,a=e[o-1]*t[o-1];for(n=o-2;n>=1;n-=2)r=n-1,a+=e[n]*t[n]+e[r]*t[r];return 0===n&&(a+=e[0]*t[0]),a},numeric.dot=function(e,t){var n=numeric.dim;switch(1e3*n(e).length+n(t).length){case 2002:return t.length<10?numeric.dotMMsmall(e,t):numeric.dotMMbig(e,t);case 2001:return numeric.dotMV(e,t);case 1002:return numeric.dotVM(e,t);case 1001:return numeric.dotVV(e,t);case 1e3:return numeric.mulVS(e,t);case 1:return numeric.mulSV(e,t);case 0:return e*t;default:throw new Error("numeric.dot only works on vectors and matrices")}},numeric.diag=function(e){var t,n,r,o,a=e.length,i=Array(a);for(t=a-1;t>=0;t--){for(o=Array(a),n=t+2,r=a-1;r>=n;r-=2)o[r]=0,o[r-1]=0;for(r>t&&(o[r]=0),o[t]=e[t],r=t-1;r>=1;r-=2)o[r]=0,o[r-1]=0;0===r&&(o[0]=0),i[t]=o}return i},numeric.getDiag=function(e){var t,n=Math.min(e.length,e[0].length),r=Array(n);for(t=n-1;t>=1;--t)r[t]=e[t][t],r[--t]=e[t][t];return 0===t&&(r[0]=e[0][0]),r},numeric.identity=function(e){return numeric.diag(numeric.rep([e],1))},numeric.pointwise=function(e,t,n){void 0===n&&(n="");var r,o,a=[],i=/\[i\]$/,s="",c=!1;for(r=0;r<e.length;r++)i.test(e[r])?s=o=e[r].substring(0,e[r].length-3):o=e[r],"ret"===o&&(c=!0),a.push(o);return a[e.length]="_s",a[e.length+1]="_k",a[e.length+2]='if(typeof _s === "undefined") _s = numeric.dim('+s+');\nif(typeof _k === "undefined") _k = 0;\nvar _n = _s[_k];\nvar i'+(c?"":", ret = Array(_n)")+";\nif(_k < _s.length-1) {\n    for(i=_n-1;i>=0;i--) ret[i] = arguments.callee("+e.join(",")+",_s,_k+1);\n    return ret;\n}\n"+n+"\nfor(i=_n-1;i!==-1;--i) {\n    "+t+"\n}\nreturn ret;",Function.apply(null,a)},numeric.pointwise2=function(e,t,n){void 0===n&&(n="");var r,o,a=[],i=/\[i\]$/,s="",c=!1;for(r=0;r<e.length;r++)i.test(e[r])?s=o=e[r].substring(0,e[r].length-3):o=e[r],"ret"===o&&(c=!0),a.push(o);return a[e.length]="var _n = "+s+".length;\nvar i"+(c?"":", ret = Array(_n)")+";\n"+n+"\nfor(i=_n-1;i!==-1;--i) {\n"+t+"\n}\nreturn ret;",Function.apply(null,a)},numeric._biforeach=function e(t,n,r,o,a){var i;if(o!==r.length-1)for(i=r[o]-1;i>=0;i--)e("object"==typeof t?t[i]:t,"object"==typeof n?n[i]:n,r,o+1,a);else a(t,n)},numeric._biforeach2=function e(t,n,r,o,a){if(o===r.length-1)return a(t,n);var i,s=r[o],c=Array(s);for(i=s-1;i>=0;--i)c[i]=e("object"==typeof t?t[i]:t,"object"==typeof n?n[i]:n,r,o+1,a);return c},numeric._foreach=function e(t,n,r,o){var a;if(r!==n.length-1)for(a=n[r]-1;a>=0;a--)e(t[a],n,r+1,o);else o(t)},numeric._foreach2=function e(t,n,r,o){if(r===n.length-1)return o(t);var a,i=n[r],s=Array(i);for(a=i-1;a>=0;a--)s[a]=e(t[a],n,r+1,o);return s},numeric.ops2={add:"+",sub:"-",mul:"*",div:"/",mod:"%",and:"&&",or:"||",eq:"===",neq:"!==",lt:"<",gt:">",leq:"<=",geq:">=",band:"&",bor:"|",bxor:"^",lshift:"<<",rshift:">>",rrshift:">>>"},numeric.opseq={addeq:"+=",subeq:"-=",muleq:"*=",diveq:"/=",modeq:"%=",lshifteq:"<<=",rshifteq:">>=",rrshifteq:">>>=",bandeq:"&=",boreq:"|=",bxoreq:"^="},numeric.mathfuns=["abs","acos","asin","atan","ceil","cos","exp","floor","log","round","sin","sqrt","tan","isNaN","isFinite"],numeric.mathfuns2=["atan2","pow","max","min"],numeric.ops1={neg:"-",not:"!",bnot:"~",clone:""},numeric.mapreducers={any:["if(xi) return true;","var accum = false;"],all:["if(!xi) return false;","var accum = true;"],sum:["accum += xi;","var accum = 0;"],prod:["accum *= xi;","var accum = 1;"],norm2Squared:["accum += xi*xi;","var accum = 0;"],norminf:["accum = max(accum,abs(xi));","var accum = 0, max = Math.max, abs = Math.abs;"],norm1:["accum += abs(xi)","var accum = 0, abs = Math.abs;"],sup:["accum = max(accum,xi);","var accum = -Infinity, max = Math.max;"],inf:["accum = min(accum,xi);","var accum = Infinity, min = Math.min;"]},function(){var e,t;for(e=0;e<numeric.mathfuns2.length;++e)t=numeric.mathfuns2[e],numeric.ops2[t]=t;for(e in numeric.ops2)if(numeric.ops2.hasOwnProperty(e)){t=numeric.ops2[e];var n,r,o="";-1!==numeric.myIndexOf.call(numeric.mathfuns2,e)?(o="var "+t+" = Math."+t+";\n",n=function(e,n,r){return e+" = "+t+"("+n+","+r+")"},r=function(e,n){return e+" = "+t+"("+e+","+n+")"}):(n=function(e,n,r){return e+" = "+n+" "+t+" "+r},r=numeric.opseq.hasOwnProperty(e+"eq")?function(e,n){return e+" "+t+"= "+n}:function(e,n){return e+" = "+e+" "+t+" "+n}),numeric[e+"VV"]=numeric.pointwise2(["x[i]","y[i]"],n("ret[i]","x[i]","y[i]"),o),numeric[e+"SV"]=numeric.pointwise2(["x","y[i]"],n("ret[i]","x","y[i]"),o),numeric[e+"VS"]=numeric.pointwise2(["x[i]","y"],n("ret[i]","x[i]","y"),o),numeric[e]=Function("var n = arguments.length, i, x = arguments[0], y;\nvar VV = numeric."+e+"VV, VS = numeric."+e+"VS, SV = numeric."+e+'SV;\nvar dim = numeric.dim;\nfor(i=1;i!==n;++i) { \n  y = arguments[i];\n  if(typeof x === "object") {\n      if(typeof y === "object") x = numeric._biforeach2(x,y,dim(x),0,VV);\n      else x = numeric._biforeach2(x,y,dim(x),0,VS);\n  } else if(typeof y === "object") x = numeric._biforeach2(x,y,dim(y),0,SV);\n  else '+r("x","y")+"\n}\nreturn x;\n"),numeric[t]=numeric[e],numeric[e+"eqV"]=numeric.pointwise2(["ret[i]","x[i]"],r("ret[i]","x[i]"),o),numeric[e+"eqS"]=numeric.pointwise2(["ret[i]","x"],r("ret[i]","x"),o),numeric[e+"eq"]=Function("var n = arguments.length, i, x = arguments[0], y;\nvar V = numeric."+e+"eqV, S = numeric."+e+'eqS\nvar s = numeric.dim(x);\nfor(i=1;i!==n;++i) { \n  y = arguments[i];\n  if(typeof y === "object") numeric._biforeach(x,y,s,0,V);\n  else numeric._biforeach(x,y,s,0,S);\n}\nreturn x;\n')}for(e=0;e<numeric.mathfuns2.length;++e)t=numeric.mathfuns2[e],delete numeric.ops2[t];for(e=0;e<numeric.mathfuns.length;++e)t=numeric.mathfuns[e],numeric.ops1[t]=t;for(e in numeric.ops1)numeric.ops1.hasOwnProperty(e)&&(o="",t=numeric.ops1[e],-1!==numeric.myIndexOf.call(numeric.mathfuns,e)&&Math.hasOwnProperty(t)&&(o="var "+t+" = Math."+t+";\n"),numeric[e+"eqV"]=numeric.pointwise2(["ret[i]"],"ret[i] = "+t+"(ret[i]);",o),numeric[e+"eq"]=Function("x",'if(typeof x !== "object") return '+t+"x\nvar i;\nvar V = numeric."+e+"eqV;\nvar s = numeric.dim(x);\nnumeric._foreach(x,s,0,V);\nreturn x;\n"),numeric[e+"V"]=numeric.pointwise2(["x[i]"],"ret[i] = "+t+"(x[i]);",o),numeric[e]=Function("x",'if(typeof x !== "object") return '+t+"(x)\nvar i;\nvar V = numeric."+e+"V;\nvar s = numeric.dim(x);\nreturn numeric._foreach2(x,s,0,V);\n"));for(e=0;e<numeric.mathfuns.length;++e)t=numeric.mathfuns[e],delete numeric.ops1[t];for(e in numeric.mapreducers)numeric.mapreducers.hasOwnProperty(e)&&(t=numeric.mapreducers[e],numeric[e+"V"]=numeric.mapreduce2(t[0],t[1]),numeric[e]=Function("x","s","k",t[1]+'if(typeof x !== "object") {    xi = x;\n'+t[0]+';\n    return accum;\n}if(typeof s === "undefined") s = numeric.dim(x);\nif(typeof k === "undefined") k = 0;\nif(k === s.length-1) return numeric.'+e+"V(x);\nvar xi;\nvar n = x.length, i;\nfor(i=n-1;i!==-1;--i) {\n   xi = arguments.callee(x[i]);\n"+t[0]+";\n}\nreturn accum;\n"))}(),numeric.truncVV=numeric.pointwise(["x[i]","y[i]"],"ret[i] = round(x[i]/y[i])*y[i];","var round = Math.round;"),numeric.truncVS=numeric.pointwise(["x[i]","y"],"ret[i] = round(x[i]/y)*y;","var round = Math.round;"),numeric.truncSV=numeric.pointwise(["x","y[i]"],"ret[i] = round(x/y[i])*y[i];","var round = Math.round;"),numeric.trunc=function(e,t){return"object"==typeof e?"object"==typeof t?numeric.truncVV(e,t):numeric.truncVS(e,t):"object"==typeof t?numeric.truncSV(e,t):Math.round(e/t)*t},numeric.inv=function(e){var t,n,r,o,a,i,s,c=numeric.dim(e),u=Math.abs,l=c[0],d=c[1],p=numeric.clone(e),h=numeric.identity(l);for(i=0;i<d;++i){var f=-1,g=-1;for(a=i;a!==l;++a)(s=u(p[a][i]))>g&&(f=a,g=s);for(n=p[f],p[f]=p[i],p[i]=n,o=h[f],h[f]=h[i],h[i]=o,e=n[i],s=i;s!==d;++s)n[s]/=e;for(s=d-1;-1!==s;--s)o[s]/=e;for(a=l-1;-1!==a;--a)if(a!==i){for(t=p[a],r=h[a],e=t[i],s=i+1;s!==d;++s)t[s]-=n[s]*e;for(s=d-1;s>0;--s)r[s]-=o[s]*e,r[--s]-=o[s]*e;0===s&&(r[0]-=o[0]*e)}}return h},numeric.det=function(e){var t=numeric.dim(e);if(2!==t.length||t[0]!==t[1])throw new Error("numeric: det() only works on square matrices");var n,r,o,a,i,s,c,u,l=t[0],d=1,p=numeric.clone(e);for(r=0;r<l-1;r++){for(o=r,n=r+1;n<l;n++)Math.abs(p[n][r])>Math.abs(p[o][r])&&(o=n);for(o!==r&&(c=p[o],p[o]=p[r],p[r]=c,d*=-1),a=p[r],n=r+1;n<l;n++){for(s=(i=p[n])[r]/a[r],o=r+1;o<l-1;o+=2)u=o+1,i[o]-=a[o]*s,i[u]-=a[u]*s;o!==l&&(i[o]-=a[o]*s)}if(0===a[r])return 0;d*=a[r]}return d*p[r][r]},numeric.transpose=function(e){var t,n,r,o,a,i=e.length,s=e[0].length,c=Array(s);for(n=0;n<s;n++)c[n]=Array(i);for(t=i-1;t>=1;t-=2){for(o=e[t],r=e[t-1],n=s-1;n>=1;--n)(a=c[n])[t]=o[n],a[t-1]=r[n],(a=c[--n])[t]=o[n],a[t-1]=r[n];0===n&&((a=c[0])[t]=o[0],a[t-1]=r[0])}if(0===t){for(r=e[0],n=s-1;n>=1;--n)c[n][0]=r[n],c[--n][0]=r[n];0===n&&(c[0][0]=r[0])}return c},numeric.negtranspose=function(e){var t,n,r,o,a,i=e.length,s=e[0].length,c=Array(s);for(n=0;n<s;n++)c[n]=Array(i);for(t=i-1;t>=1;t-=2){for(o=e[t],r=e[t-1],n=s-1;n>=1;--n)(a=c[n])[t]=-o[n],a[t-1]=-r[n],(a=c[--n])[t]=-o[n],a[t-1]=-r[n];0===n&&((a=c[0])[t]=-o[0],a[t-1]=-r[0])}if(0===t){for(r=e[0],n=s-1;n>=1;--n)c[n][0]=-r[n],c[--n][0]=-r[n];0===n&&(c[0][0]=-r[0])}return c},numeric._random=function e(t,n){var r,o,a=t[n],i=Array(a);if(n===t.length-1){for(o=Math.random,r=a-1;r>=1;r-=2)i[r]=o(),i[r-1]=o();return 0===r&&(i[0]=o()),i}for(r=a-1;r>=0;r--)i[r]=e(t,n+1);return i},numeric.random=function(e){return numeric._random(e,0)},numeric.norm2=function(e){return Math.sqrt(numeric.norm2Squared(e))},numeric.linspace=function(e,t,n){if(void 0===n&&(n=Math.max(Math.round(t-e)+1,1)),n<2)return 1===n?[e]:[];var r,o=Array(n);for(r=--n;r>=0;r--)o[r]=(r*t+(n-r)*e)/n;return o},numeric.getBlock=function(e,t,n){var r=numeric.dim(e);return function e(o,a){var i,s=t[a],c=n[a]-s,u=Array(c);if(a===r.length-1){for(i=c;i>=0;i--)u[i]=o[i+s];return u}for(i=c;i>=0;i--)u[i]=e(o[i+s],a+1);return u}(e,0)},numeric.setBlock=function(e,t,n,r){var o=numeric.dim(e);return function e(r,a,i){var s,c=t[i],u=n[i]-c;if(i===o.length-1)for(s=u;s>=0;s--)r[s+c]=a[s];for(s=u;s>=0;s--)e(r[s+c],a[s],i+1)}(e,r,0),e},numeric.getRange=function(e,t,n){var r,o,a,i,s=t.length,c=n.length,u=Array(s);for(r=s-1;-1!==r;--r)for(u[r]=Array(c),a=u[r],i=e[t[r]],o=c-1;-1!==o;--o)a[o]=i[n[o]];return u},numeric.blockMatrix=function(e){var t=numeric.dim(e);if(t.length<4)return numeric.blockMatrix([e]);var n,r,o,a,i,s=t[0],c=t[1];for(n=0,r=0,o=0;o<s;++o)n+=e[o][0].length;for(a=0;a<c;++a)r+=e[0][a][0].length;var u=Array(n);for(o=0;o<n;++o)u[o]=Array(r);var l,d,p,h,f,g=0;for(o=0;o<s;++o){for(l=r,a=c-1;-1!==a;--a)for(l-=(i=e[o][a])[0].length,p=i.length-1;-1!==p;--p)for(f=i[p],d=u[g+p],h=f.length-1;-1!==h;--h)d[l+h]=f[h];g+=e[o][0].length}return u},numeric.tensor=function(e,t){if("number"==typeof e||"number"==typeof t)return numeric.mul(e,t);var n=numeric.dim(e),r=numeric.dim(t);if(1!==n.length||1!==r.length)throw new Error("numeric: tensor product is only defined for vectors");var o,a,i,s,c=n[0],u=r[0],l=Array(c);for(a=c-1;a>=0;a--){for(o=Array(u),s=e[a],i=u-1;i>=3;--i)o[i]=s*t[i],o[--i]=s*t[i],o[--i]=s*t[i],o[--i]=s*t[i];for(;i>=0;)o[i]=s*t[i],--i;l[a]=o}return l},numeric.T=function(e,t){this.x=e,this.y=t},numeric.t=function(e,t){return new numeric.T(e,t)},numeric.Tbinop=function(e,t,n,r,o){var a;if(numeric.indexOf,"string"!=typeof o)for(a in o="",numeric)numeric.hasOwnProperty(a)&&(e.indexOf(a)>=0||t.indexOf(a)>=0||n.indexOf(a)>=0||r.indexOf(a)>=0)&&a.length>1&&(o+="var "+a+" = numeric."+a+";\n");return Function(["y"],"var x = this;\nif(!(y instanceof numeric.T)) { y = new numeric.T(y); }\n"+o+"\nif(x.y) {  if(y.y) {    return new numeric.T("+r+");\n  }\n  return new numeric.T("+n+");\n}\nif(y.y) {\n  return new numeric.T("+t+");\n}\nreturn new numeric.T("+e+");\n")},numeric.T.prototype.add=numeric.Tbinop("add(x.x,y.x)","add(x.x,y.x),y.y","add(x.x,y.x),x.y","add(x.x,y.x),add(x.y,y.y)"),numeric.T.prototype.sub=numeric.Tbinop("sub(x.x,y.x)","sub(x.x,y.x),neg(y.y)","sub(x.x,y.x),x.y","sub(x.x,y.x),sub(x.y,y.y)"),numeric.T.prototype.mul=numeric.Tbinop("mul(x.x,y.x)","mul(x.x,y.x),mul(x.x,y.y)","mul(x.x,y.x),mul(x.y,y.x)","sub(mul(x.x,y.x),mul(x.y,y.y)),add(mul(x.x,y.y),mul(x.y,y.x))"),numeric.T.prototype.reciprocal=function(){var e=numeric.mul,t=numeric.div;if(this.y){var n=numeric.add(e(this.x,this.x),e(this.y,this.y));return new numeric.T(t(this.x,n),t(numeric.neg(this.y),n))}return new T(t(1,this.x))},numeric.T.prototype.div=function(e){if(e instanceof numeric.T||(e=new numeric.T(e)),e.y)return this.mul(e.reciprocal());var t=numeric.div;return this.y?new numeric.T(t(this.x,e.x),t(this.y,e.x)):new numeric.T(t(this.x,e.x))},numeric.T.prototype.dot=numeric.Tbinop("dot(x.x,y.x)","dot(x.x,y.x),dot(x.x,y.y)","dot(x.x,y.x),dot(x.y,y.x)","sub(dot(x.x,y.x),dot(x.y,y.y)),add(dot(x.x,y.y),dot(x.y,y.x))"),numeric.T.prototype.transpose=function(){var e=numeric.transpose,t=this.x,n=this.y;return n?new numeric.T(e(t),e(n)):new numeric.T(e(t))},numeric.T.prototype.transjugate=function(){var e=numeric.transpose,t=this.x,n=this.y;return n?new numeric.T(e(t),numeric.negtranspose(n)):new numeric.T(e(t))},numeric.Tunop=function(e,t,n){return"string"!=typeof n&&(n=""),Function("var x = this;\n"+n+"\nif(x.y) {  "+t+";\n}\n"+e+";\n")},numeric.T.prototype.exp=numeric.Tunop("return new numeric.T(ex)","return new numeric.T(mul(cos(x.y),ex),mul(sin(x.y),ex))","var ex = numeric.exp(x.x), cos = numeric.cos, sin = numeric.sin, mul = numeric.mul;"),numeric.T.prototype.conj=numeric.Tunop("return new numeric.T(x.x);","return new numeric.T(x.x,numeric.neg(x.y));"),numeric.T.prototype.neg=numeric.Tunop("return new numeric.T(neg(x.x));","return new numeric.T(neg(x.x),neg(x.y));","var neg = numeric.neg;"),numeric.T.prototype.sin=numeric.Tunop("return new numeric.T(numeric.sin(x.x))","return x.exp().sub(x.neg().exp()).div(new numeric.T(0,2));"),numeric.T.prototype.cos=numeric.Tunop("return new numeric.T(numeric.cos(x.x))","return x.exp().add(x.neg().exp()).div(2);"),numeric.T.prototype.abs=numeric.Tunop("return new numeric.T(numeric.abs(x.x));","return new numeric.T(numeric.sqrt(numeric.add(mul(x.x,x.x),mul(x.y,x.y))));","var mul = numeric.mul;"),numeric.T.prototype.log=numeric.Tunop("return new numeric.T(numeric.log(x.x));","var theta = new numeric.T(numeric.atan2(x.y,x.x)), r = x.abs();\nreturn new numeric.T(numeric.log(r.x),theta.x);"),numeric.T.prototype.norm2=numeric.Tunop("return numeric.norm2(x.x);","var f = numeric.norm2Squared;\nreturn Math.sqrt(f(x.x)+f(x.y));"),numeric.T.prototype.inv=function(){var e=this;if(void 0===e.y)return new numeric.T(numeric.inv(e.x));var t,n,r,o,a,i,s,c,u,l,d,p,h,f,g,m,v,y,b=e.x.length,w=numeric.identity(b),_=numeric.rep([b,b],0),x=numeric.clone(e.x),k=numeric.clone(e.y);for(u=0;u<b;u++){for(p=(f=x[u][u])*f+(g=k[u][u])*g,d=u,l=u+1;l<b;l++)(h=(f=x[l][u])*f+(g=k[l][u])*g)>p&&(d=l,p=h);for(d!==u&&(y=x[u],x[u]=x[d],x[d]=y,y=k[u],k[u]=k[d],k[d]=y,y=w[u],w[u]=w[d],w[d]=y,y=_[u],_[u]=_[d],_[d]=y),t=x[u],n=k[u],a=w[u],i=_[u],f=t[u],g=n[u],l=u+1;l<b;l++)m=t[l],v=n[l],t[l]=(m*f+v*g)/p,n[l]=(v*f-m*g)/p;for(l=0;l<b;l++)m=a[l],v=i[l],a[l]=(m*f+v*g)/p,i[l]=(v*f-m*g)/p;for(l=u+1;l<b;l++){for(r=x[l],o=k[l],s=w[l],c=_[l],f=r[u],g=o[u],d=u+1;d<b;d++)m=t[d],v=n[d],r[d]-=m*f-v*g,o[d]-=v*f+m*g;for(d=0;d<b;d++)m=a[d],v=i[d],s[d]-=m*f-v*g,c[d]-=v*f+m*g}}for(u=b-1;u>0;u--)for(a=w[u],i=_[u],l=u-1;l>=0;l--)for(s=w[l],c=_[l],f=x[l][u],g=k[l][u],d=b-1;d>=0;d--)m=a[d],v=i[d],s[d]-=f*m-g*v,c[d]-=f*v+g*m;return new numeric.T(w,_)},numeric.T.prototype.get=function(e){var t,n=this.x,r=this.y,o=0,a=e.length;if(r){for(;o<a;)n=n[t=e[o]],r=r[t],o++;return new numeric.T(n,r)}for(;o<a;)n=n[t=e[o]],o++;return new numeric.T(n)},numeric.T.prototype.set=function(e,t){var n,r=this.x,o=this.y,a=0,i=e.length,s=t.x,c=t.y;if(0===i)return c?this.y=c:o&&(this.y=void 0),this.x=r,this;if(c){for(o||(o=numeric.rep(numeric.dim(r),0),this.y=o);a<i-1;)r=r[n=e[a]],o=o[n],a++;return r[n=e[a]]=s,o[n]=c,this}if(o){for(;a<i-1;)r=r[n=e[a]],o=o[n],a++;return r[n=e[a]]=s,o[n]=s instanceof Array?numeric.rep(numeric.dim(s),0):0,this}for(;a<i-1;)r=r[n=e[a]],a++;return r[n=e[a]]=s,this},numeric.T.prototype.getRows=function(e,t){var n,r,o=t-e+1,a=Array(o),i=this.x,s=this.y;for(n=e;n<=t;n++)a[n-e]=i[n];if(s){for(r=Array(o),n=e;n<=t;n++)r[n-e]=s[n];return new numeric.T(a,r)}return new numeric.T(a)},numeric.T.prototype.setRows=function(e,t,n){var r,o=this.x,a=this.y,i=n.x,s=n.y;for(r=e;r<=t;r++)o[r]=i[r-e];if(s)for(a||(a=numeric.rep(numeric.dim(o),0),this.y=a),r=e;r<=t;r++)a[r]=s[r-e];else if(a)for(r=e;r<=t;r++)a[r]=numeric.rep([i[r-e].length],0);return this},numeric.T.prototype.getRow=function(e){var t=this.x,n=this.y;return n?new numeric.T(t[e],n[e]):new numeric.T(t[e])},numeric.T.prototype.setRow=function(e,t){var n=this.x,r=this.y,o=t.x,a=t.y;return n[e]=o,a?(r||(r=numeric.rep(numeric.dim(n),0),this.y=r),r[e]=a):r&&(r=numeric.rep([o.length],0)),this},numeric.T.prototype.getBlock=function(e,t){var n=this.x,r=this.y,o=numeric.getBlock;return r?new numeric.T(o(n,e,t),o(r,e,t)):new numeric.T(o(n,e,t))},numeric.T.prototype.setBlock=function(e,t,n){n instanceof numeric.T||(n=new numeric.T(n));var r=this.x,o=this.y,a=numeric.setBlock,i=n.x,s=n.y;if(s)return o||(this.y=numeric.rep(numeric.dim(this),0),o=this.y),a(r,e,t,i),a(o,e,t,s),this;a(r,e,t,i),o&&a(o,e,t,numeric.rep(numeric.dim(i),0))},numeric.T.rep=function(e,t){var n=numeric.T;t instanceof n||(t=new n(t));var r=t.x,o=t.y,a=numeric.rep;return o?new n(a(e,r),a(e,o)):new n(a(e,r))},numeric.T.diag=function(e){e instanceof numeric.T||(e=new numeric.T(e));var t=e.x,n=e.y,r=numeric.diag;return n?new numeric.T(r(t),r(n)):new numeric.T(r(t))},numeric.T.eig=function(){if(this.y)throw new Error("eig: not implemented for complex matrices.");return numeric.eig(this.x)},numeric.T.identity=function(e){return new numeric.T(numeric.identity(e))},numeric.T.prototype.getDiag=function(){var e=numeric,t=this.x,n=this.y;return n?new e.T(e.getDiag(t),e.getDiag(n)):new e.T(e.getDiag(t))},numeric.house=function(e){var t=numeric.clone(e),n=(e[0]>=0?1:-1)*numeric.norm2(e);t[0]+=n;var r=numeric.norm2(t);if(0===r)throw new Error("eig: internal error");return numeric.div(t,r)},numeric.toUpperHessenberg=function(e){var t=numeric.dim(e);if(2!==t.length||t[0]!==t[1])throw new Error("numeric: toUpperHessenberg() only works on square matrices");var n,r,o,a,i,s,c,u,l,d,p=t[0],h=numeric.clone(e),f=numeric.identity(p);for(r=0;r<p-2;r++){for(a=Array(p-r-1),n=r+1;n<p;n++)a[n-r-1]=h[n][r];if(numeric.norm2(a)>0){for(i=numeric.house(a),s=numeric.getBlock(h,[r+1,r],[p-1,p-1]),c=numeric.tensor(i,numeric.dot(i,s)),n=r+1;n<p;n++)for(u=h[n],l=c[n-r-1],o=r;o<p;o++)u[o]-=2*l[o-r];for(s=numeric.getBlock(h,[0,r+1],[p-1,p-1]),c=numeric.tensor(numeric.dot(s,i),i),n=0;n<p;n++)for(u=h[n],l=c[n],o=r+1;o<p;o++)u[o]-=2*l[o-r-1];for(s=Array(p-r-1),n=r+1;n<p;n++)s[n-r-1]=f[n];for(c=numeric.tensor(i,numeric.dot(i,s)),n=r+1;n<p;n++)for(d=f[n],l=c[n-r-1],o=0;o<p;o++)d[o]-=2*l[o]}}return{H:h,Q:f}},numeric.epsilon=2220446049250313e-31,numeric.QRFrancis=function(e,t){void 0===t&&(t=1e4),e=numeric.clone(e),numeric.clone(e);var n,r,o,a,i,s,c,u,l,d,p,h,f,g,m,v,y,b,w=numeric.dim(e)[0],_=numeric.identity(w);if(w<3)return{Q:_,B:[[0,w-1]]};var x=numeric.epsilon;for(b=0;b<t;b++){for(v=0;v<w-1;v++)if(Math.abs(e[v+1][v])<x*(Math.abs(e[v][v])+Math.abs(e[v+1][v+1]))){var k=numeric.QRFrancis(numeric.getBlock(e,[0,0],[v,v]),t),P=numeric.QRFrancis(numeric.getBlock(e,[v+1,v+1],[w-1,w-1]),t);for(h=Array(v+1),m=0;m<=v;m++)h[m]=_[m];for(f=numeric.dot(k.Q,h),m=0;m<=v;m++)_[m]=f[m];for(h=Array(w-v-1),m=v+1;m<w;m++)h[m-v-1]=_[m];for(f=numeric.dot(P.Q,h),m=v+1;m<w;m++)_[m]=f[m-v-1];return{Q:_,B:k.B.concat(numeric.add(P.B,v+1))}}var S,C,D;for(o=e[w-2][w-2],a=e[w-2][w-1],i=e[w-1][w-2],u=o+(s=e[w-1][w-1]),c=o*s-a*i,l=numeric.getBlock(e,[0,0],[2,2]),u*u>=4*c?(S=.5*(u+Math.sqrt(u*u-4*c)),C=.5*(u-Math.sqrt(u*u-4*c)),l=numeric.add(numeric.sub(numeric.dot(l,l),numeric.mul(l,S+C)),numeric.diag(numeric.rep([3],S*C)))):l=numeric.add(numeric.sub(numeric.dot(l,l),numeric.mul(l,u)),numeric.diag(numeric.rep([3],c))),n=[l[0][0],l[1][0],l[2][0]],r=numeric.house(n),h=[e[0],e[1],e[2]],f=numeric.tensor(r,numeric.dot(r,h)),m=0;m<3;m++)for(p=e[m],g=f[m],y=0;y<w;y++)p[y]-=2*g[y];for(h=numeric.getBlock(e,[0,0],[w-1,2]),f=numeric.tensor(numeric.dot(h,r),r),m=0;m<w;m++)for(p=e[m],g=f[m],y=0;y<3;y++)p[y]-=2*g[y];for(h=[_[0],_[1],_[2]],f=numeric.tensor(r,numeric.dot(r,h)),m=0;m<3;m++)for(d=_[m],g=f[m],y=0;y<w;y++)d[y]-=2*g[y];for(v=0;v<w-2;v++){for(y=v;y<=v+1;y++)if(Math.abs(e[y+1][y])<x*(Math.abs(e[y][y])+Math.abs(e[y+1][y+1]))){for(k=numeric.QRFrancis(numeric.getBlock(e,[0,0],[y,y]),t),P=numeric.QRFrancis(numeric.getBlock(e,[y+1,y+1],[w-1,w-1]),t),h=Array(y+1),m=0;m<=y;m++)h[m]=_[m];for(f=numeric.dot(k.Q,h),m=0;m<=y;m++)_[m]=f[m];for(h=Array(w-y-1),m=y+1;m<w;m++)h[m-y-1]=_[m];for(f=numeric.dot(P.Q,h),m=y+1;m<w;m++)_[m]=f[m-y-1];return{Q:_,B:k.B.concat(numeric.add(P.B,y+1))}}for(D=Math.min(w-1,v+3),n=Array(D-v),m=v+1;m<=D;m++)n[m-v-1]=e[m][v];for(r=numeric.house(n),h=numeric.getBlock(e,[v+1,v],[D,w-1]),f=numeric.tensor(r,numeric.dot(r,h)),m=v+1;m<=D;m++)for(p=e[m],g=f[m-v-1],y=v;y<w;y++)p[y]-=2*g[y-v];for(h=numeric.getBlock(e,[0,v+1],[w-1,D]),f=numeric.tensor(numeric.dot(h,r),r),m=0;m<w;m++)for(p=e[m],g=f[m],y=v+1;y<=D;y++)p[y]-=2*g[y-v-1];for(h=Array(D-v),m=v+1;m<=D;m++)h[m-v-1]=_[m];for(f=numeric.tensor(r,numeric.dot(r,h)),m=v+1;m<=D;m++)for(d=_[m],g=f[m-v-1],y=0;y<w;y++)d[y]-=2*g[y]}}throw new Error("numeric: eigenvalue iteration does not converge -- increase maxiter?")},numeric.eig=function(e,t){var n,r,o,a,i,s,c,u,l,d,p,h,f,g,m,v,y=numeric.toUpperHessenberg(e),b=numeric.QRFrancis(y.H,t),w=numeric.T,_=e.length,x=b.B,k=numeric.dot(b.Q,numeric.dot(y.H,numeric.transpose(b.Q))),P=new w(numeric.dot(b.Q,y.Q)),S=x.length,C=Math.sqrt;for(r=0;r<S;r++)if((n=x[r][0])===x[r][1]);else{if(a=n+1,i=k[n][n],s=k[n][a],c=k[a][n],u=k[a][a],0===s&&0===c)continue;(d=(l=-i-u)*l-4*(i*u-s*c))>=0?((m=(i-(p=l<0?-.5*(l-C(d)):-.5*(l+C(d))))*(i-p)+s*s)>(v=c*c+(u-p)*(u-p))?(f=(i-p)/(m=C(m)),g=s/m):(f=c/(v=C(v)),g=(u-p)/v),o=new w([[g,-f],[f,g]]),P.setRows(n,a,o.dot(P.getRows(n,a)))):(p=-.5*l,h=.5*C(-d),(m=(i-p)*(i-p)+s*s)>(v=c*c+(u-p)*(u-p))?(f=(i-p)/(m=C(m+h*h)),g=s/m,p=0,h/=m):(f=c/(v=C(v+h*h)),g=(u-p)/v,p=h/v,h=0),o=new w([[g,-f],[f,g]],[[p,h],[h,-p]]),P.setRows(n,a,o.dot(P.getRows(n,a))))}var D=P.dot(e).dot(P.transjugate()),E=(_=e.length,numeric.T.identity(_));for(a=0;a<_;a++)if(a>0)for(r=a-1;r>=0;r--){var j=D.get([r,r]),A=D.get([a,a]);numeric.neq(j.x,A.x)||numeric.neq(j.y,A.y)?(p=D.getRow(r).getBlock([r],[a-1]),h=E.getRow(a).getBlock([r],[a-1]),E.set([a,r],D.get([r,a]).neg().sub(p.dot(h)).div(j.sub(A)))):E.setRow(a,E.getRow(r))}for(a=0;a<_;a++)p=E.getRow(a),E.setRow(a,p.div(p.norm2()));return E=E.transpose(),E=P.transjugate().dot(E),{lambda:D.getDiag(),E}},numeric.ccsSparse=function(e){var t,n,r,o=e.length,a=[];for(n=o-1;-1!==n;--n)for(r in t=e[n]){for(r=parseInt(r);r>=a.length;)a[a.length]=0;0!==t[r]&&a[r]++}var i=a.length,s=Array(i+1);for(s[0]=0,n=0;n<i;++n)s[n+1]=s[n]+a[n];var c=Array(s[i]),u=Array(s[i]);for(n=o-1;-1!==n;--n)for(r in t=e[n])0!==t[r]&&(a[r]--,c[s[r]+a[r]]=n,u[s[r]+a[r]]=t[r]);return[s,c,u]},numeric.ccsFull=function(e){var t,n,r,o,a=e[0],i=e[1],s=e[2],c=numeric.ccsDim(e),u=c[0],l=c[1],d=numeric.rep([u,l],0);for(t=0;t<l;t++)for(r=a[t],o=a[t+1],n=r;n<o;++n)d[i[n]][t]=s[n];return d},numeric.ccsTSolve=function(e,t,n,r,o){var a,i,s,c,u,l,d,p=e[0],h=e[1],f=e[2],g=p.length-1,m=Math.max,v=0;function y(e){var t;if(0===n[e]){for(n[e]=1,t=p[e];t<p[e+1];++t)y(h[t]);o[v]=e,++v}}for(void 0===r&&(n=numeric.rep([g],0)),void 0===r&&(r=numeric.linspace(0,n.length-1)),void 0===o&&(o=[]),a=r.length-1;-1!==a;--a)y(r[a]);for(o.length=v,a=o.length-1;-1!==a;--a)n[o[a]]=0;for(a=r.length-1;-1!==a;--a)i=r[a],n[i]=t[i];for(a=o.length-1;-1!==a;--a){for(i=o[a],s=p[i],c=m(p[i+1],s),u=s;u!==c;++u)if(h[u]===i){n[i]/=f[u];break}for(d=n[i],u=s;u!==c;++u)(l=h[u])!==i&&(n[l]-=d*f[u])}return n},numeric.ccsDFS=function(e){this.k=Array(e),this.k1=Array(e),this.j=Array(e)},numeric.ccsDFS.prototype.dfs=function(e,t,n,r,o,a){var i,s,c,u=0,l=o.length,d=this.k,p=this.k1,h=this.j;if(0===r[e])for(r[e]=1,h[0]=e,d[0]=s=t[e],p[0]=c=t[e+1];;)if(s>=c){if(o[l]=h[u],0===u)return;++l,s=d[--u],c=p[u]}else 0===r[i=a[n[s]]]?(r[i]=1,d[u]=s,h[++u]=i,s=t[i],p[u]=c=t[i+1]):++s},numeric.ccsLPSolve=function(e,t,n,r,o,a,i){var s,c,u,l,d,p,h,f,g,m=e[0],v=e[1],y=e[2],b=(m.length,t[0]),w=t[1],_=t[2];for(c=b[o],u=b[o+1],r.length=0,s=c;s<u;++s)i.dfs(a[w[s]],m,v,n,r,a);for(s=r.length-1;-1!==s;--s)n[r[s]]=0;for(s=c;s!==u;++s)n[l=a[w[s]]]=_[s];for(s=r.length-1;-1!==s;--s){for(d=m[l=r[s]],p=m[l+1],h=d;h<p;++h)if(a[v[h]]===l){n[l]/=y[h];break}for(g=n[l],h=d;h<p;++h)(f=a[v[h]])!==l&&(n[f]-=g*y[h])}return n},numeric.ccsLUP1=function(e,t){var n,r,o,a,i,s,c,u=e[0].length-1,l=[numeric.rep([u+1],0),[],[]],d=[numeric.rep([u+1],0),[],[]],p=l[0],h=l[1],f=l[2],g=d[0],m=d[1],v=d[2],y=numeric.rep([u],0),b=numeric.rep([u],0),w=numeric.ccsLPSolve,_=(Math.max,Math.abs),x=numeric.linspace(0,u-1),k=numeric.linspace(0,u-1),P=new numeric.ccsDFS(u);for(void 0===t&&(t=1),n=0;n<u;++n){for(w(l,e,y,b,n,k,P),a=-1,i=-1,r=b.length-1;-1!==r;--r)(o=b[r])<=n||(s=_(y[o]))>a&&(i=o,a=s);for(_(y[n])<t*a&&(r=x[n],a=x[i],x[n]=a,k[a]=n,x[i]=r,k[r]=i,a=y[n],y[n]=y[i],y[i]=a),a=p[n],i=g[n],c=y[n],h[a]=x[n],f[a]=1,++a,r=b.length-1;-1!==r;--r)s=y[o=b[r]],b[r]=0,y[o]=0,o<=n?(m[i]=o,v[i]=s,++i):(h[a]=x[o],f[a]=s/c,++a);p[n+1]=a,g[n+1]=i}for(r=h.length-1;-1!==r;--r)h[r]=k[h[r]];return{L:l,U:d,P:x,Pinv:k}},numeric.ccsDFS0=function(e){this.k=Array(e),this.k1=Array(e),this.j=Array(e)},numeric.ccsDFS0.prototype.dfs=function(e,t,n,r,o,a,i){var s,c,u,l=0,d=o.length,p=this.k,h=this.k1,f=this.j;if(0===r[e])for(r[e]=1,f[0]=e,p[0]=c=t[a[e]],h[0]=u=t[a[e]+1];;){if(isNaN(c))throw new Error("Ow!");if(c>=u){if(o[d]=a[f[l]],0===l)return;++d,c=p[--l],u=h[l]}else 0===r[s=n[c]]?(r[s]=1,p[l]=c,f[++l]=s,c=t[s=a[s]],h[l]=u=t[s+1]):++c}},numeric.ccsLPSolve0=function(e,t,n,r,o,a,i,s){var c,u,l,d,p,h,f,g,m,v=e[0],y=e[1],b=e[2],w=(v.length,t[0]),_=t[1],x=t[2];for(u=w[o],l=w[o+1],r.length=0,c=u;c<l;++c)s.dfs(_[c],v,y,n,r,a,i);for(c=r.length-1;-1!==c;--c)n[i[d=r[c]]]=0;for(c=u;c!==l;++c)n[d=_[c]]=x[c];for(c=r.length-1;-1!==c;--c){for(g=i[d=r[c]],p=v[d],h=v[d+1],f=p;f<h;++f)if(y[f]===g){n[g]/=b[f];break}for(m=n[g],f=p;f<h;++f)n[y[f]]-=m*b[f];n[g]=m}},numeric.ccsLUP0=function(e,t){var n,r,o,a,i,s,c,u=e[0].length-1,l=[numeric.rep([u+1],0),[],[]],d=[numeric.rep([u+1],0),[],[]],p=l[0],h=l[1],f=l[2],g=d[0],m=d[1],v=d[2],y=numeric.rep([u],0),b=numeric.rep([u],0),w=numeric.ccsLPSolve0,_=(Math.max,Math.abs),x=numeric.linspace(0,u-1),k=numeric.linspace(0,u-1),P=new numeric.ccsDFS0(u);for(void 0===t&&(t=1),n=0;n<u;++n){for(w(l,e,y,b,n,k,x,P),a=-1,i=-1,r=b.length-1;-1!==r;--r)(o=b[r])<=n||(s=_(y[x[o]]))>a&&(i=o,a=s);for(_(y[x[n]])<t*a&&(r=x[n],a=x[i],x[n]=a,k[a]=n,x[i]=r,k[r]=i),a=p[n],i=g[n],c=y[x[n]],h[a]=x[n],f[a]=1,++a,r=b.length-1;-1!==r;--r)s=y[x[o=b[r]]],b[r]=0,y[x[o]]=0,o<=n?(m[i]=o,v[i]=s,++i):(h[a]=x[o],f[a]=s/c,++a);p[n+1]=a,g[n+1]=i}for(r=h.length-1;-1!==r;--r)h[r]=k[h[r]];return{L:l,U:d,P:x,Pinv:k}},numeric.ccsLUP=numeric.ccsLUP0,numeric.ccsDim=function(e){return[numeric.sup(e[1])+1,e[0].length-1]},numeric.ccsGetBlock=function(e,t,n){var r=numeric.ccsDim(e),o=r[0],a=r[1];void 0===t?t=numeric.linspace(0,o-1):"number"==typeof t&&(t=[t]),void 0===n?n=numeric.linspace(0,a-1):"number"==typeof n&&(n=[n]);var i,s,c,u,l=t.length,d=n.length,p=numeric.rep([a],0),h=[],f=[],g=[p,h,f],m=e[0],v=e[1],y=e[2],b=numeric.rep([o],0),w=0,_=numeric.rep([o],0);for(s=0;s<d;++s){var x=m[u=n[s]],k=m[u+1];for(i=x;i<k;++i)_[c=v[i]]=1,b[c]=y[i];for(i=0;i<l;++i)_[t[i]]&&(h[w]=i,f[w]=b[t[i]],++w);for(i=x;i<k;++i)_[c=v[i]]=0;p[s+1]=w}return g},numeric.ccsDot=function(e,t){var n,r,o,a,i,s,c,u,l,d,p,h=e[0],f=e[1],g=e[2],m=t[0],v=t[1],y=t[2],b=numeric.ccsDim(e),w=numeric.ccsDim(t),_=b[0],x=(b[1],w[1]),k=numeric.rep([_],0),P=numeric.rep([_],0),S=Array(_),C=numeric.rep([x],0),D=[],E=[],j=[C,D,E];for(o=0;o!==x;++o){for(a=m[o],i=m[o+1],l=0,r=a;r<i;++r)for(d=v[r],p=y[r],s=h[d],c=h[d+1],n=s;n<c;++n)0===P[u=f[n]]&&(S[l]=u,P[u]=1,l+=1),k[u]=k[u]+g[n]*p;for(i=(a=C[o])+l,C[o+1]=i,r=l-1;-1!==r;--r)p=a+r,n=S[r],D[p]=n,E[p]=k[n],P[n]=0,k[n]=0;C[o+1]=C[o]+l}return j},numeric.ccsLUPSolve=function(e,t){var n=e.L,r=e.U,o=(e.P,t[0]),a=!1;"object"!=typeof o&&(o=(t=[[0,t.length],numeric.linspace(0,t.length-1),t])[0],a=!0);var i,s,c,u,l,d,p=t[1],h=t[2],f=n[0].length-1,g=o.length-1,m=numeric.rep([f],0),v=Array(f),y=numeric.rep([f],0),b=Array(f),w=numeric.rep([g+1],0),_=[],x=[],k=numeric.ccsTSolve,P=0;for(i=0;i<g;++i){for(l=0,c=o[i],u=o[i+1],s=c;s<u;++s)d=e.Pinv[p[s]],b[l]=d,y[d]=h[s],++l;for(b.length=l,k(n,y,m,b,v),s=b.length-1;-1!==s;--s)y[b[s]]=0;if(k(r,m,y,v,b),a)return y;for(s=v.length-1;-1!==s;--s)m[v[s]]=0;for(s=b.length-1;-1!==s;--s)d=b[s],_[P]=d,x[P]=y[d],y[d]=0,++P;w[i+1]=P}return[w,_,x]},numeric.ccsbinop=function(e,t){return void 0===t&&(t=""),Function("X","Y","var Xi = X[0], Xj = X[1], Xv = X[2];\nvar Yi = Y[0], Yj = Y[1], Yv = Y[2];\nvar n = Xi.length-1,m = Math.max(numeric.sup(Xj),numeric.sup(Yj))+1;\nvar Zi = numeric.rep([n+1],0), Zj = [], Zv = [];\nvar x = numeric.rep([m],0),y = numeric.rep([m],0);\nvar xk,yk,zk;\nvar i,j,j0,j1,k,p=0;\n"+t+"for(i=0;i<n;++i) {\n  j0 = Xi[i]; j1 = Xi[i+1];\n  for(j=j0;j!==j1;++j) {\n    k = Xj[j];\n    x[k] = 1;\n    Zj[p] = k;\n    ++p;\n  }\n  j0 = Yi[i]; j1 = Yi[i+1];\n  for(j=j0;j!==j1;++j) {\n    k = Yj[j];\n    y[k] = Yv[j];\n    if(x[k] === 0) {\n      Zj[p] = k;\n      ++p;\n    }\n  }\n  Zi[i+1] = p;\n  j0 = Xi[i]; j1 = Xi[i+1];\n  for(j=j0;j!==j1;++j) x[Xj[j]] = Xv[j];\n  j0 = Zi[i]; j1 = Zi[i+1];\n  for(j=j0;j!==j1;++j) {\n    k = Zj[j];\n    xk = x[k];\n    yk = y[k];\n"+e+"\n    Zv[j] = zk;\n  }\n  j0 = Xi[i]; j1 = Xi[i+1];\n  for(j=j0;j!==j1;++j) x[Xj[j]] = 0;\n  j0 = Yi[i]; j1 = Yi[i+1];\n  for(j=j0;j!==j1;++j) y[Yj[j]] = 0;\n}\nreturn [Zi,Zj,Zv];")},function(){var k,A,B,C;for(k in numeric.ops2)A=isFinite(eval("1"+numeric.ops2[k]+"0"))?"[Y[0],Y[1],numeric."+k+"(X,Y[2])]":"NaN",B=isFinite(eval("0"+numeric.ops2[k]+"1"))?"[X[0],X[1],numeric."+k+"(X[2],Y)]":"NaN",C=isFinite(eval("1"+numeric.ops2[k]+"0"))&&isFinite(eval("0"+numeric.ops2[k]+"1"))?"numeric.ccs"+k+"MM(X,Y)":"NaN",numeric["ccs"+k+"MM"]=numeric.ccsbinop("zk = xk "+numeric.ops2[k]+"yk;"),numeric["ccs"+k]=Function("X","Y",'if(typeof X === "number") return '+A+';\nif(typeof Y === "number") return '+B+";\nreturn "+C+";\n")}(),numeric.ccsScatter=function(e){var t,n=e[0],r=e[1],o=e[2],a=numeric.sup(r)+1,i=n.length,s=numeric.rep([a],0),c=Array(i),u=Array(i),l=numeric.rep([a],0);for(t=0;t<i;++t)l[r[t]]++;for(t=0;t<a;++t)s[t+1]=s[t]+l[t];var d,p,h=s.slice(0);for(t=0;t<i;++t)c[d=h[p=r[t]]]=n[t],u[d]=o[t],h[p]=h[p]+1;return[s,c,u]},numeric.ccsGather=function(e){var t,n,r,o,a,i=e[0],s=e[1],c=e[2],u=i.length-1,l=s.length,d=Array(l),p=Array(l),h=Array(l);for(a=0,t=0;t<u;++t)for(r=i[t],o=i[t+1],n=r;n!==o;++n)p[a]=t,d[a]=s[n],h[a]=c[n],++a;return[d,p,h]},numeric.sdim=function e(t,n,r){if(void 0===n&&(n=[]),"object"!=typeof t)return n;var o;for(o in void 0===r&&(r=0),r in n||(n[r]=0),t.length>n[r]&&(n[r]=t.length),t)t.hasOwnProperty(o)&&e(t[o],n,r+1);return n},numeric.sclone=function e(t,n,r){void 0===n&&(n=0),void 0===r&&(r=numeric.sdim(t).length);var o,a=Array(t.length);if(n===r-1){for(o in t)t.hasOwnProperty(o)&&(a[o]=t[o]);return a}for(o in t)t.hasOwnProperty(o)&&(a[o]=e(t[o],n+1,r));return a},numeric.sdiag=function(e){var t,n,r=e.length,o=Array(r);for(t=r-1;t>=1;t-=2)n=t-1,o[t]=[],o[t][t]=e[t],o[n]=[],o[n][n]=e[n];return 0===t&&(o[0]=[],o[0][0]=e[t]),o},numeric.sidentity=function(e){return numeric.sdiag(numeric.rep([e],1))},numeric.stranspose=function(e){var t,n,r,o=[];for(t in e.length,e)if(e.hasOwnProperty(t))for(n in r=e[t])r.hasOwnProperty(n)&&("object"!=typeof o[n]&&(o[n]=[]),o[n][t]=r[n]);return o},numeric.sLUP=function(e,t){throw new Error("The function numeric.sLUP had a bug in it and has been removed. Please use the new numeric.ccsLUP function instead.")},numeric.sdotMM=function(e,t){var n,r,o,a,i,s,c,u=e.length,l=(t.length,numeric.stranspose(t)),d=l.length,p=Array(u);for(o=u-1;o>=0;o--){for(c=[],n=e[o],i=d-1;i>=0;i--){for(a in s=0,r=l[i],n)n.hasOwnProperty(a)&&a in r&&(s+=n[a]*r[a]);s&&(c[i]=s)}p[o]=c}return p},numeric.sdotMV=function(e,t){var n,r,o,a,i=e.length,s=Array(i);for(r=i-1;r>=0;r--){for(o in a=0,n=e[r])n.hasOwnProperty(o)&&t[o]&&(a+=n[o]*t[o]);a&&(s[r]=a)}return s},numeric.sdotVM=function(e,t){var n,r,o,a,i=[];for(n in e)if(e.hasOwnProperty(n))for(r in o=t[n],a=e[n],o)o.hasOwnProperty(r)&&(i[r]||(i[r]=0),i[r]+=a*o[r]);return i},numeric.sdotVV=function(e,t){var n,r=0;for(n in e)e[n]&&t[n]&&(r+=e[n]*t[n]);return r},numeric.sdot=function(e,t){var n=numeric.sdim(e).length,r=numeric.sdim(t).length;switch(1e3*n+r){case 0:return e*t;case 1001:return numeric.sdotVV(e,t);case 2001:return numeric.sdotMV(e,t);case 1002:return numeric.sdotVM(e,t);case 2002:return numeric.sdotMM(e,t);default:throw new Error("numeric.sdot not implemented for tensors of order "+n+" and "+r)}},numeric.sscatter=function(e){var t,n,r,o,a=e[0].length,i=e.length,s=[];for(n=a-1;n>=0;--n)if(e[i-1][n]){for(o=s,r=0;r<i-2;r++)o[t=e[r][n]]||(o[t]=[]),o=o[t];o[e[r][n]]=e[r+1][n]}return s},numeric.sgather=function e(t,n,r){var o,a,i;for(a in void 0===n&&(n=[]),void 0===r&&(r=[]),o=r.length,t)if(t.hasOwnProperty(a))if(r[o]=parseInt(a),"number"==typeof(i=t[a])){if(i){if(0===n.length)for(a=o+1;a>=0;--a)n[a]=[];for(a=o;a>=0;--a)n[a].push(r[a]);n[o+1].push(i)}}else e(i,n,r);return r.length>o&&r.pop(),n},numeric.cLU=function(e){var t,n,r,o,a,i,s=e[0],c=e[1],u=e[2],l=s.length,d=0;for(t=0;t<l;t++)s[t]>d&&(d=s[t]);d++;var p,h=Array(d),f=Array(d),g=numeric.rep([d],1/0),m=numeric.rep([d],-1/0);for(r=0;r<l;r++)t=s[r],(n=c[r])<g[t]&&(g[t]=n),n>m[t]&&(m[t]=n);for(t=0;t<d-1;t++)m[t]>m[t+1]&&(m[t+1]=m[t]);for(t=d-1;t>=1;t--)g[t]<g[t-1]&&(g[t-1]=g[t]);for(t=0;t<d;t++)f[t]=numeric.rep([m[t]-g[t]+1],0),h[t]=numeric.rep([t-g[t]],0),g[t],m[t];for(r=0;r<l;r++)f[t=s[r]][c[r]-g[t]]=u[r];for(t=0;t<d-1;t++)for(o=t-g[t],b=f[t],n=t+1;g[n]<=t&&n<d;n++)if(a=t-g[n],i=m[t]-t,p=(w=f[n])[a]/b[o]){for(r=1;r<=i;r++)w[r+a]-=p*b[r+o];h[n][t-g[n]]=p}var v,y,b=[],w=[],_=[],x=[],k=[],P=[];for(l=0,v=0,t=0;t<d;t++){for(o=g[t],a=m[t],y=f[t],n=t;n<=a;n++)y[n-o]&&(b[l]=t,w[l]=n,_[l]=y[n-o],l++);for(y=h[t],n=o;n<t;n++)y[n-o]&&(x[v]=t,k[v]=n,P[v]=y[n-o],v++);x[v]=t,k[v]=t,P[v]=1,v++}return{U:[b,w,_],L:[x,k,P]}},numeric.cLUsolve=function(e,t){var n,r,o=e.L,a=e.U,i=numeric.clone(t),s=o[0],c=o[1],u=o[2],l=a[0],d=a[1],p=a[2],h=l.length,f=(s.length,i.length);for(r=0,n=0;n<f;n++){for(;c[r]<n;)i[n]-=u[r]*i[c[r]],r++;r++}for(r=h-1,n=f-1;n>=0;n--){for(;d[r]>n;)i[n]-=p[r]*i[d[r]],r--;i[n]/=p[r],r--}return i},numeric.cgrid=function(e,t){"number"==typeof e&&(e=[e,e]);var n,r,o,a=numeric.rep(e,-1);if("function"!=typeof t)switch(t){case"L":t=function(t,n){return t>=e[0]/2||n<e[1]/2};break;default:t=function(e,t){return!0}}for(o=0,n=1;n<e[0]-1;n++)for(r=1;r<e[1]-1;r++)t(n,r)&&(a[n][r]=o,o++);return a},numeric.cdelsq=function(e){var t,n,r,o,a,i=[[-1,0],[0,-1],[0,1],[1,0]],s=numeric.dim(e),c=s[0],u=s[1],l=[],d=[],p=[];for(t=1;t<c-1;t++)for(n=1;n<u-1;n++)if(!(e[t][n]<0)){for(r=0;r<4;r++)o=t+i[r][0],a=n+i[r][1],e[o][a]<0||(l.push(e[t][n]),d.push(e[o][a]),p.push(-1));l.push(e[t][n]),d.push(e[t][n]),p.push(4)}return[l,d,p]},numeric.cdotMV=function(e,t){var n,r,o,a=e[0],i=e[1],s=e[2],c=a.length;for(o=0,r=0;r<c;r++)a[r]>o&&(o=a[r]);for(o++,n=numeric.rep([o],0),r=0;r<c;r++)n[a[r]]+=s[r]*t[i[r]];return n},numeric.Spline=function(e,t,n,r,o){this.x=e,this.yl=t,this.yr=n,this.kl=r,this.kr=o},numeric.Spline.prototype._at=function(e,t){var n,r,o,a=this.x,i=this.yl,s=this.yr,c=this.kl,u=this.kr,l=numeric.add,d=numeric.sub,p=numeric.mul;n=d(p(c[t],a[t+1]-a[t]),d(s[t+1],i[t])),r=l(p(u[t+1],a[t]-a[t+1]),d(s[t+1],i[t]));var h=(o=(e-a[t])/(a[t+1]-a[t]))*(1-o);return l(l(l(p(1-o,i[t]),p(o,s[t+1])),p(n,h*(1-o))),p(r,h*o))},numeric.Spline.prototype.at=function(e){if("number"==typeof e){var t,n,r,o=this.x,a=o.length,i=Math.floor;for(t=0,n=a-1;n-t>1;)o[r=i((t+n)/2)]<=e?t=r:n=r;return this._at(e,t)}a=e.length;var s,c=Array(a);for(s=a-1;-1!==s;--s)c[s]=this.at(e[s]);return c},numeric.Spline.prototype.diff=function(){var e,t,n,r=this.x,o=this.yl,a=this.yr,i=this.kl,s=this.kr,c=o.length,u=i,l=s,d=Array(c),p=Array(c),h=numeric.add,f=numeric.mul,g=numeric.div,m=numeric.sub;for(e=c-1;-1!==e;--e)t=r[e+1]-r[e],n=m(a[e+1],o[e]),d[e]=g(h(f(n,6),f(i[e],-4*t),f(s[e+1],-2*t)),t*t),p[e+1]=g(h(f(n,-6),f(i[e],2*t),f(s[e+1],4*t)),t*t);return new numeric.Spline(r,u,l,d,p)},numeric.Spline.prototype.roots=function(){function e(e){return e*e}var t=[],n=this.x,r=this.yl,o=this.yr,a=this.kl,i=this.kr;"number"==typeof r[0]&&(r=[r],o=[o],a=[a],i=[i]);var s,c,u,l,d,p,h,f,g,m,v,y,b,w,_,x,k,P,S,C,D,E,j,A=r.length,I=n.length-1,O=(t=Array(A),Math.sqrt);for(s=0;s!==A;++s){for(l=r[s],d=o[s],p=a[s],h=i[s],f=[],c=0;c!==I;c++){for(c>0&&d[c]*l[c]<0&&f.push(n[c]),x=n[c+1]-n[c],n[c],v=l[c],y=d[c+1],g=p[c]/x,b=(m=h[c+1]/x)+3*v+2*g-3*y,w=3*(m+g+2*(v-y)),(_=e(g-m+3*(v-y))+12*m*v)<=0?k=(P=b/w)>n[c]&&P<n[c+1]?[n[c],P,n[c+1]]:[n[c],n[c+1]]:(P=(b-O(_))/w,S=(b+O(_))/w,k=[n[c]],P>n[c]&&P<n[c+1]&&k.push(P),S>n[c]&&S<n[c+1]&&k.push(S),k.push(n[c+1])),D=k[0],P=this._at(D,c),u=0;u<k.length-1;u++)if(E=k[u+1],S=this._at(E,c),0!==P)if(0===S||P*S>0)D=E,P=S;else{for(var q=0;!((j=(P*E-S*D)/(P-S))<=D||j>=E);)if((C=this._at(j,c))*S>0)E=j,S=C,-1===q&&(P*=.5),q=-1;else{if(!(C*P>0))break;D=j,P=C,1===q&&(S*=.5),q=1}f.push(j),D=k[u+1],P=this._at(D,c)}else f.push(D),D=E,P=S;0===S&&f.push(E)}t[s]=f}return"number"==typeof this.yl[0]?t[0]:t},numeric.spline=function(e,t,n,r){var o,a=e.length,i=[],s=[],c=[],u=numeric.sub,l=numeric.mul,d=numeric.add;for(o=a-2;o>=0;o--)s[o]=e[o+1]-e[o],c[o]=u(t[o+1],t[o]);"string"!=typeof n&&"string"!=typeof r||(n=r="periodic");var p=[[],[],[]];switch(typeof n){case"undefined":i[0]=l(3/(s[0]*s[0]),c[0]),p[0].push(0,0),p[1].push(0,1),p[2].push(2/s[0],1/s[0]);break;case"string":i[0]=d(l(3/(s[a-2]*s[a-2]),c[a-2]),l(3/(s[0]*s[0]),c[0])),p[0].push(0,0,0),p[1].push(a-2,0,1),p[2].push(1/s[a-2],2/s[a-2]+2/s[0],1/s[0]);break;default:i[0]=n,p[0].push(0),p[1].push(0),p[2].push(1)}for(o=1;o<a-1;o++)i[o]=d(l(3/(s[o-1]*s[o-1]),c[o-1]),l(3/(s[o]*s[o]),c[o])),p[0].push(o,o,o),p[1].push(o-1,o,o+1),p[2].push(1/s[o-1],2/s[o-1]+2/s[o],1/s[o]);switch(typeof r){case"undefined":i[a-1]=l(3/(s[a-2]*s[a-2]),c[a-2]),p[0].push(a-1,a-1),p[1].push(a-2,a-1),p[2].push(1/s[a-2],2/s[a-2]);break;case"string":p[1][p[1].length-1]=0;break;default:i[a-1]=r,p[0].push(a-1),p[1].push(a-1),p[2].push(1)}i="number"!=typeof i[0]?numeric.transpose(i):[i];var h=Array(i.length);if("string"==typeof n)for(o=h.length-1;-1!==o;--o)h[o]=numeric.ccsLUPSolve(numeric.ccsLUP(numeric.ccsScatter(p)),i[o]),h[o][a-1]=h[o][0];else for(o=h.length-1;-1!==o;--o)h[o]=numeric.cLUsolve(numeric.cLU(p),i[o]);return h="number"==typeof t[0]?h[0]:numeric.transpose(h),new numeric.Spline(e,t,t,h,h)},numeric.fftpow2=function e(t,n){var r=t.length;if(1!==r){var o,a,i=Math.cos,s=Math.sin,c=Array(r/2),u=Array(r/2),l=Array(r/2),d=Array(r/2);for(a=r/2,o=r-1;-1!==o;--o)l[--a]=t[o],d[a]=n[o],--o,c[a]=t[o],u[a]=n[o];e(c,u),e(l,d),a=r/2;var p,h,f,g=-6.283185307179586/r;for(o=r-1;-1!==o;--o)-1==--a&&(a=r/2-1),h=i(p=g*o),f=s(p),t[o]=c[a]+h*l[a]-f*d[a],n[o]=u[a]+h*d[a]+f*l[a]}},numeric._ifftpow2=function e(t,n){var r=t.length;if(1!==r){var o,a,i=Math.cos,s=Math.sin,c=Array(r/2),u=Array(r/2),l=Array(r/2),d=Array(r/2);for(a=r/2,o=r-1;-1!==o;--o)l[--a]=t[o],d[a]=n[o],--o,c[a]=t[o],u[a]=n[o];e(c,u),e(l,d),a=r/2;var p,h,f,g=6.283185307179586/r;for(o=r-1;-1!==o;--o)-1==--a&&(a=r/2-1),h=i(p=g*o),f=s(p),t[o]=c[a]+h*l[a]-f*d[a],n[o]=u[a]+h*d[a]+f*l[a]}},numeric.ifftpow2=function(e,t){numeric._ifftpow2(e,t),numeric.diveq(e,e.length),numeric.diveq(t,t.length)},numeric.convpow2=function(e,t,n,r){var o,a,i,s,c;for(numeric.fftpow2(e,t),numeric.fftpow2(n,r),o=e.length-1;-1!==o;--o)a=e[o],s=t[o],i=n[o],c=r[o],e[o]=a*i-s*c,t[o]=a*c+s*i;numeric.ifftpow2(e,t)},numeric.T.prototype.fft=function(){var e,t,n=this.x,r=this.y,o=n.length,a=Math.log,i=a(2),s=Math.ceil(a(2*o-1)/i),c=Math.pow(2,s),u=numeric.rep([c],0),l=numeric.rep([c],0),d=Math.cos,p=Math.sin,h=-3.141592653589793/o,f=numeric.rep([c],0),g=numeric.rep([c],0);for(Math.floor(o/2),e=0;e<o;e++)f[e]=n[e];if(void 0!==r)for(e=0;e<o;e++)g[e]=r[e];for(u[0]=1,e=1;e<=c/2;e++)t=h*e*e,u[e]=d(t),l[e]=p(t),u[c-e]=d(t),l[c-e]=p(t);var m=new numeric.T(f,g),v=new numeric.T(u,l);return m=m.mul(v),numeric.convpow2(m.x,m.y,numeric.clone(v.x),numeric.neg(v.y)),(m=m.mul(v)).x.length=o,m.y.length=o,m},numeric.T.prototype.ifft=function(){var e,t,n=this.x,r=this.y,o=n.length,a=Math.log,i=a(2),s=Math.ceil(a(2*o-1)/i),c=Math.pow(2,s),u=numeric.rep([c],0),l=numeric.rep([c],0),d=Math.cos,p=Math.sin,h=3.141592653589793/o,f=numeric.rep([c],0),g=numeric.rep([c],0);for(Math.floor(o/2),e=0;e<o;e++)f[e]=n[e];if(void 0!==r)for(e=0;e<o;e++)g[e]=r[e];for(u[0]=1,e=1;e<=c/2;e++)t=h*e*e,u[e]=d(t),l[e]=p(t),u[c-e]=d(t),l[c-e]=p(t);var m=new numeric.T(f,g),v=new numeric.T(u,l);return m=m.mul(v),numeric.convpow2(m.x,m.y,numeric.clone(v.x),numeric.neg(v.y)),(m=m.mul(v)).x.length=o,m.y.length=o,m.div(o)},numeric.gradient=function(e,t){var n=t.length,r=e(t);if(isNaN(r))throw new Error("gradient: f(x) is a NaN!");var o,a,i,s,c,u,l,d,p,h=Math.max,f=numeric.clone(t),g=Array(n),m=(numeric.div,numeric.sub,h=Math.max,Math.abs),v=Math.min,y=0;for(o=0;o<n;o++)for(var b=h(1e-6*r,1e-8);;){if(++y>20)throw new Error("Numerical gradient fails");if(f[o]=t[o]+b,a=e(f),f[o]=t[o]-b,i=e(f),f[o]=t[o],isNaN(a)||isNaN(i))b/=16;else{if(g[o]=(a-i)/(2*b),s=t[o]-b,c=t[o],u=t[o]+b,l=(a-r)/b,d=(r-i)/b,p=h(m(g[o]),m(r),m(a),m(i),m(s),m(c),m(u),1e-8),!(v(h(m(l-g[o]),m(d-g[o]),m(l-d))/p,b/p)>.001))break;b/=16}}return g},numeric.uncmin=function(e,t,n,r,o,a,i){var s=numeric.gradient;void 0===i&&(i={}),void 0===n&&(n=1e-8),void 0===r&&(r=function(t){return s(e,t)}),void 0===o&&(o=1e3);var c,u,l=(t=numeric.clone(t)).length,d=e(t);if(isNaN(d))throw new Error("uncmin: f(x0) is a NaN!");var p=Math.max,h=numeric.norm2;n=p(n,numeric.epsilon);var f,g,m,v,y,b,w,_,x,k,P=i.Hinv||numeric.identity(l),S=numeric.dot,C=(numeric.inv,numeric.sub),D=numeric.add,E=numeric.tensor,j=numeric.div,A=numeric.mul,I=numeric.all,O=numeric.isFinite,q=numeric.neg,R=0,T="";for(g=r(t);R<o;){if("function"==typeof a&&a(R,t,d,g,P)){T="Callback returned true";break}if(!I(O(g))){T="Gradient has Infinity or NaN";break}if(!I(O(f=q(S(P,g))))){T="Search direction has Infinity or NaN";break}if((k=h(f))<n){T="Newton step smaller than tol";break}for(x=1,u=S(g,f),y=t;R<o&&!(x*k<n)&&(y=D(t,v=A(f,x)),(c=e(y))-d>=.1*x*u||isNaN(c));)x*=.5,++R;if(x*k<n){T="Line search step size smaller than tol";break}if(R===o){T="maxit reached during line search";break}_=S(b=C(m=r(y),g),v),w=S(P,b),P=C(D(P,A((_+S(b,w))/(_*_),E(v,v))),j(D(E(w,v),E(v,w)),_)),t=y,d=c,g=m,++R}return{solution:t,f:d,gradient:g,invHessian:P,iterations:R,message:T}},numeric.Dopri=function(e,t,n,r,o,a,i){this.x=e,this.y=t,this.f=n,this.ymid=r,this.iterations=o,this.events=i,this.message=a},numeric.Dopri.prototype._at=function(e,t){function n(e){return e*e}var r,o,a,i,s,c,u,l,d,p=this,h=p.x,f=p.y,g=p.f,m=p.ymid,v=(h.length,Math.floor,numeric.add),y=numeric.mul,b=numeric.sub;return r=h[t],o=h[t+1],i=f[t],s=f[t+1],a=r+.5*(o-r),c=m[t],u=b(g[t],y(i,1/(r-a)+2/(r-o))),l=b(g[t+1],y(s,1/(o-a)+2/(o-r))),v(v(v(v(y(i,(d=[n(e-o)*(e-a)/n(r-o)/(r-a),n(e-r)*n(e-o)/n(r-a)/n(o-a),n(e-r)*(e-a)/n(o-r)/(o-a),(e-r)*n(e-o)*(e-a)/n(r-o)/(r-a),(e-o)*n(e-r)*(e-a)/n(r-o)/(o-a)])[0]),y(c,d[1])),y(s,d[2])),y(u,d[3])),y(l,d[4]))},numeric.Dopri.prototype.at=function(e){var t,n,r,o=Math.floor;if("number"!=typeof e){var a=e.length,i=Array(a);for(t=a-1;-1!==t;--t)i[t]=this.at(e[t]);return i}var s=this.x;for(t=0,n=s.length-1;n-t>1;)s[r=o(.5*(t+n))]<=e?t=r:n=r;return this._at(e,t)},numeric.dopri=function(e,t,n,r,o,a,i){void 0===o&&(o=1e-6),void 0===a&&(a=1e3);var s,c,u,l,d,p,h,f,g,m,v,y,b,w=[e],_=[n],x=[r(e,n)],k=[],P=[3/40,9/40],S=[44/45,-56/15,32/9],C=[19372/6561,-25360/2187,64448/6561,-212/729],D=[9017/3168,-355/33,46732/5247,49/176,-5103/18656],E=[35/384,0,500/1113,125/192,-2187/6784,11/84],j=[.10013431883002395,0,.3918321794184259,-.02982460176594817,.05893268337240795,-.04497888809104361,5618549.5/235043384],A=[.2,.3,.8,8/9,1,1],I=[-71/57600,0,71/16695,-71/1920,17253/339200,-22/525,1/40],O=0,q=(t-e)/10,R=0,T=numeric.add,B=numeric.mul,M=(Math.max,Math.min),N=Math.abs,L=numeric.norminf,F=Math.pow,G=numeric.any,U=numeric.lt,z=numeric.and,W=(numeric.sub,new numeric.Dopri(w,_,x,k,-1,""));for("function"==typeof i&&(v=i(e,n));e<t&&R<a;)if(++R,e+q>t&&(q=t-e),s=r(e+A[0]*q,T(n,B(.2*q,x[O]))),c=r(e+A[1]*q,T(T(n,B(P[0]*q,x[O])),B(P[1]*q,s))),u=r(e+A[2]*q,T(T(T(n,B(S[0]*q,x[O])),B(S[1]*q,s)),B(S[2]*q,c))),l=r(e+A[3]*q,T(T(T(T(n,B(C[0]*q,x[O])),B(C[1]*q,s)),B(C[2]*q,c)),B(C[3]*q,u))),d=r(e+A[4]*q,T(T(T(T(T(n,B(D[0]*q,x[O])),B(D[1]*q,s)),B(D[2]*q,c)),B(D[3]*q,u)),B(D[4]*q,l))),p=r(e+q,g=T(T(T(T(T(n,B(x[O],q*E[0])),B(c,q*E[2])),B(u,q*E[3])),B(l,q*E[4])),B(d,q*E[5]))),(m="number"==typeof(h=T(T(T(T(T(B(x[O],q*I[0]),B(c,q*I[2])),B(u,q*I[3])),B(l,q*I[4])),B(d,q*I[5])),B(p,q*I[6])))?N(h):L(h))>o){if(e+(q=.2*q*F(o/m,.25))===e){W.msg="Step size became too small";break}}else{if(k[O]=T(T(T(T(T(T(n,B(x[O],q*j[0])),B(c,q*j[2])),B(u,q*j[3])),B(l,q*j[4])),B(d,q*j[5])),B(p,q*j[6])),w[++O]=e+q,_[O]=g,x[O]=p,"function"==typeof i){var $,V,H=e,J=e+.5*q;if(y=i(J,k[O-1]),G(b=z(U(v,0),U(0,y)))||(H=J,v=y,y=i(J=e+q,g),b=z(U(v,0),U(0,y))),G(b)){for(var Q,X,Y=0,K=1,Z=1;;){if("number"==typeof v)V=(Z*y*H-K*v*J)/(Z*y-K*v);else for(V=J,f=v.length-1;-1!==f;--f)v[f]<0&&y[f]>0&&(V=M(V,(Z*y[f]*H-K*v[f]*J)/(Z*y[f]-K*v[f])));if(V<=H||V>=J)break;X=i(V,$=W._at(V,O-1)),G(Q=z(U(v,0),U(0,X)))?(J=V,y=X,b=Q,Z=1,-1===Y?K*=.5:K=1,Y=-1):(H=V,v=X,K=1,1===Y?Z*=.5:Z=1,Y=1)}return g=W._at(.5*(e+V),O-1),W.f[O]=r(V,$),W.x[O]=V,W.y[O]=$,W.ymid[O-1]=g,W.events=b,W.iterations=R,W}}e+=q,n=g,v=y,q=M(.8*q*F(o/m,.25),4*q)}return W.iterations=R,W},numeric.LU=function(e,t){t=t||!1;var n,r,o,a,i,s,c,u,l,d=Math.abs,p=e.length,h=p-1,f=new Array(p);for(t||(e=numeric.clone(e)),o=0;o<p;++o){for(c=o,l=d((s=e[o])[o]),r=o+1;r<p;++r)l<(a=d(e[r][o]))&&(l=a,c=r);for(f[o]=c,c!=o&&(e[o]=e[c],e[c]=s,s=e[o]),i=s[o],n=o+1;n<p;++n)e[n][o]/=i;for(n=o+1;n<p;++n){for(u=e[n],r=o+1;r<h;++r)u[r]-=u[o]*s[r],u[++r]-=u[o]*s[r];r===h&&(u[r]-=u[o]*s[r])}}return{LU:e,P:f}},numeric.LUsolve=function(e,t){var n,r,o,a,i,s=e.LU,c=s.length,u=numeric.clone(t),l=e.P;for(n=c-1;-1!==n;--n)u[n]=t[n];for(n=0;n<c;++n)for(o=l[n],l[n]!==n&&(i=u[n],u[n]=u[o],u[o]=i),a=s[n],r=0;r<n;++r)u[n]-=u[r]*a[r];for(n=c-1;n>=0;--n){for(a=s[n],r=n+1;r<c;++r)u[n]-=u[r]*a[r];u[n]/=a[n]}return u},numeric.solve=function(e,t,n){return numeric.LUsolve(numeric.LU(e,n),t)},numeric.echelonize=function(e){var t,n,r,o,a,i,s,c,u=numeric.dim(e),l=u[0],d=u[1],p=numeric.identity(l),h=Array(l),f=Math.abs,g=numeric.diveq;for(e=numeric.clone(e),t=0;t<l;++t){for(r=0,a=e[t],i=p[t],n=1;n<d;++n)f(a[r])<f(a[n])&&(r=n);for(h[t]=r,g(i,a[r]),g(a,a[r]),n=0;n<l;++n)if(n!==t){for(c=(s=e[n])[r],o=d-1;-1!==o;--o)s[o]-=a[o]*c;for(s=p[n],o=l-1;-1!==o;--o)s[o]-=i[o]*c}}return{I:p,A:e,P:h}},numeric.__solveLP=function(e,t,n,r,o,a,i){var s,c,u,l,d=numeric.sum,p=(numeric.log,numeric.mul),h=numeric.sub,f=numeric.dot,g=numeric.div,m=numeric.add,v=e.length,y=n.length,b=!1,w=1,_=(numeric.transpose(t),numeric.svd,numeric.transpose),x=(numeric.leq,Math.sqrt),k=Math.abs,P=(numeric.muleq,numeric.norminf,numeric.any,Math.min),S=numeric.all,C=numeric.gt,D=Array(v),E=Array(y),j=(numeric.rep([y],1),numeric.solve),A=h(n,f(t,a)),I=f(e,e);for(u=0;u<o;++u){var O,q;for(O=y-1;-1!==O;--O)E[O]=g(t[O],A[O]);var R=_(E);for(O=v-1;-1!==O;--O)D[O]=d(R[O]);w=.25*k(I/f(e,D));var T=100*x(I/f(D,D));for((!isFinite(w)||w>T)&&(w=T),l=m(e,p(w,D)),c=f(R,E),O=v-1;-1!==O;--O)c[O][O]+=1;q=j(c,g(l,w),!0);var B=g(A,f(t,q)),M=1;for(O=y-1;-1!==O;--O)B[O]<0&&(M=P(M,-.999*B[O]));if(s=h(a,p(q,M)),!S(C(A=h(n,f(t,s)),0)))return{solution:a,message:"",iterations:u};if(a=s,w<r)return{solution:s,message:"",iterations:u};if(i){var N=f(e,l),L=f(t,l);for(b=!0,O=y-1;-1!==O;--O)if(N*L[O]<0){b=!1;break}}else b=!(a[v-1]>=0);if(b)return{solution:s,message:"Unbounded",iterations:u}}return{solution:a,message:"maximum iteration count exceeded",iterations:u}},numeric._solveLP=function(e,t,n,r,o){var a=e.length,i=n.length,s=(numeric.sum,numeric.log,numeric.mul,numeric.sub),c=numeric.dot,u=(numeric.div,numeric.add,numeric.rep([a],0).concat([1])),l=numeric.rep([i,1],-1),d=numeric.blockMatrix([[t,l]]),p=n,h=numeric.rep([a],0).concat(Math.max(0,numeric.sup(numeric.neg(n)))+1),f=numeric.__solveLP(u,d,p,r,o,h,!1),g=numeric.clone(f.solution);if(g.length=a,numeric.inf(s(n,c(t,g)))<0)return{solution:NaN,message:"Infeasible",iterations:f.iterations};var m=numeric.__solveLP(e,t,n,r,o-f.iterations,g,!0);return m.iterations+=f.iterations,m},numeric.solveLP=function(e,t,n,r,o,a,i){if(void 0===i&&(i=1e3),void 0===a&&(a=numeric.epsilon),void 0===r)return numeric._solveLP(e,t,n,a,i);var s,c=r.length,u=r[0].length,l=t.length,d=numeric.echelonize(r),p=numeric.rep([u],0),h=d.P,f=[];for(s=h.length-1;-1!==s;--s)p[h[s]]=1;for(s=u-1;-1!==s;--s)0===p[s]&&f.push(s);var g=numeric.getRange,m=numeric.linspace(0,c-1),v=numeric.linspace(0,l-1),y=g(r,m,f),b=g(t,v,h),w=g(t,v,f),_=numeric.dot,x=numeric.sub,k=_(b,d.I),P=x(w,_(k,y)),S=x(n,_(k,o)),C=Array(h.length),D=Array(f.length);for(s=h.length-1;-1!==s;--s)C[s]=e[h[s]];for(s=f.length-1;-1!==s;--s)D[s]=e[f[s]];var E=x(D,_(C,_(d.I,y))),j=numeric._solveLP(E,P,S,a,i),A=j.solution;if(A!=A)return j;var I=_(d.I,x(o,_(y,A))),O=Array(e.length);for(s=h.length-1;-1!==s;--s)O[h[s]]=I[s];for(s=f.length-1;-1!==s;--s)O[f[s]]=A[s];return{solution:O,message:j.message,iterations:j.iterations}},numeric.MPStoLP=function(e){e instanceof String&&e.split("\n");var t,n,r,o,a=0,i=["Initial state","NAME","ROWS","COLUMNS","RHS","BOUNDS","ENDATA"],s=e.length,c=0,u={},l=[],d=0,p={},h=0,f=[],g=[],m=[];function v(n){throw new Error("MPStoLP: "+n+"\nLine "+t+": "+e[t]+"\nCurrent state: "+i[a]+"\n")}for(t=0;t<s;++t){var y=(r=e[t]).match(/\S*/g),b=[];for(n=0;n<y.length;++n)""!==y[n]&&b.push(y[n]);if(0!==b.length){for(n=0;n<i.length&&r.substr(0,i[n].length)!==i[n];++n);if(n<i.length){if(a=n,1===n&&(o=b[1]),6===n)return{name:o,c:f,A:numeric.transpose(g),b:m,rows:u,vars:p}}else switch(a){case 0:case 1:v("Unexpected line");case 2:switch(b[0]){case"N":0===c?c=b[1]:v("Two or more N rows");break;case"L":u[b[1]]=d,l[d]=1,m[d]=0,++d;break;case"G":u[b[1]]=d,l[d]=-1,m[d]=0,++d;break;case"E":u[b[1]]=d,l[d]=0,m[d]=0,++d;break;default:v("Parse error "+numeric.prettyPrint(b))}break;case 3:p.hasOwnProperty(b[0])||(p[b[0]]=h,f[h]=0,g[h]=numeric.rep([d],0),++h);var w=p[b[0]];for(n=1;n<b.length;n+=2)if(b[n]!==c){var _=u[b[n]];g[w][_]=(l[_]<0?-1:1)*parseFloat(b[n+1])}else f[w]=parseFloat(b[n+1]);break;case 4:for(n=1;n<b.length;n+=2)m[u[b[n]]]=(l[u[b[n]]]<0?-1:1)*parseFloat(b[n+1]);break;case 5:break;case 6:v("Internal error")}}}v("Reached end of file without ENDATA")},numeric.seedrandom={pow:Math.pow,random:Math.random},function(e,t,n,r,o,a,i){function s(e){var t,r,o=this,a=e.length,i=0,s=o.i=o.j=o.m=0;for(o.S=[],o.c=[],a||(e=[a++]);i<n;)o.S[i]=i++;for(i=0;i<n;i++)s=l(s+(t=o.S[i])+e[i%a]),r=o.S[s],o.S[i]=r,o.S[s]=t;o.g=function(e){var t=o.S,r=l(o.i+1),a=t[r],i=l(o.j+a),s=t[i];t[r]=s,t[i]=a;for(var c=t[l(a+s)];--e;)r=l(r+1),s=t[i=l(i+(a=t[r]))],t[r]=s,t[i]=a,c=c*n+t[l(a+s)];return o.i=r,o.j=i,c},o.g(n)}function c(e,t,n,r,o){if(n=[],o=typeof e,t&&"object"==o)for(r in e)if(r.indexOf("S")<5)try{n.push(c(e[r],t-1))}catch(e){}return n.length?n:e+("string"!=o?"\0":"")}function u(e,t,n,r){for(e+="",n=0,r=0;r<e.length;r++)t[l(r)]=l((n^=19*t[l(r)])+e.charCodeAt(r));for(r in e="",t)e+=String.fromCharCode(t[r]);return e}function l(e){return 255&e}t.seedrandom=function(r,l){var d,p=[];return r=u(c(l?[r,e]:arguments.length?r:[(new Date).getTime(),e,window],3),p),u((d=new s(p)).S,e),t.random=function(){for(var e=d.g(6),t=i,r=0;e<o;)e=(e+r)*n,t*=n,r=d.g(1);for(;e>=a;)e/=2,t/=2,r>>>=1;return(e+r)/t},r},i=t.pow(n,6),o=t.pow(2,o),a=2*o,u(t.random(),e)}([],numeric.seedrandom,256,0,52),function(e){function t(e){if("object"!=typeof e)return e;var n,r=[],o=e.length;for(n=0;n<o;n++)r[n+1]=t(e[n]);return r}function n(e){if("object"!=typeof e)return e;var t,r=[],o=e.length;for(t=1;t<o;t++)r[t-1]=n(e[t]);return r}e.solveQP=function(e,r,o,a,i,s){e=t(e),r=t(r),o=t(o);var c,u,l,d,p,h=[],f=[],g=[],m=[],v=[];if(i=i||0,s=s?t(s):[void 0,0],a=a?t(a):[],u=e.length-1,l=o[1].length-1,!a)for(c=1;c<=l;c+=1)a[c]=0;for(c=1;c<=l;c+=1)f[c]=0;for(d=Math.min(u,l),c=1;c<=u;c+=1)g[c]=0;for(h[1]=0,c=1;c<=2*u+d*(d+5)/2+2*l+1;c+=1)m[c]=0;for(c=1;c<=2;c+=1)v[c]=0;return function(e,t,n,r,o,a,i,s,c,u,l,d,p,h,f,g){var m,v,y,b,w,_,x,k,P,S,C,D,E,j,A,I,O,q,R,T,B,M,N,L,F,G,U;E=Math.min(r,u),y=2*r+E*(E+5)/2+2*u+1,L=1e-60;do{F=1+.1*(L+=L),G=1+.2*L}while(F<=1||G<=1);for(m=1;m<=r;m+=1)f[m]=t[m];for(m=r+1;m<=y;m+=1)f[m]=0;for(m=1;m<=u;m+=1)d[m]=0;if(w=[],0===g[1]){if(function(e,t,n,r){var o,a,i,s,c,u;for(a=1;a<=n;a+=1){if(r[1]=a,u=0,(i=a-1)<1){if((u=e[a][a]-u)<=0)break;e[a][a]=Math.sqrt(u)}else{for(s=1;s<=i;s+=1){for(c=e[s][a],o=1;o<s;o+=1)c-=e[o][a]*e[o][s];c/=e[s][s],e[s][a]=c,u+=c*c}if((u=e[a][a]-u)<=0)break;e[a][a]=Math.sqrt(u)}r[1]=0}}(e,0,r,w),0!==w[1])return void(g[1]=2);!function(e,t,n,r){var o,a,i,s;for(a=1;a<=n;a+=1){for(s=0,o=1;o<a;o+=1)s+=e[o][a]*r[o];r[a]=(r[a]-s)/e[a][a]}for(i=1;i<=n;i+=1)for(r[a=n+1-i]=r[a]/e[a][a],s=-r[a],o=1;o<a;o+=1)r[o]=r[o]+s*e[o][a]}(e,0,r,t),function(e,t,n){var r,o,a,i,s;for(a=1;a<=n;a+=1){for(e[a][a]=1/e[a][a],s=-e[a][a],r=1;r<a;r+=1)e[r][a]=s*e[r][a];if(n<(i=a+1))break;for(o=i;o<=n;o+=1)for(s=e[a][o],e[a][o]=0,r=1;r<=a;r+=1)e[r][o]=e[r][o]+s*e[r][a]}}(e,0,r)}else{for(v=1;v<=r;v+=1)for(o[v]=0,m=1;m<=v;m+=1)o[v]=o[v]+e[m][v]*t[m];for(v=1;v<=r;v+=1)for(t[v]=0,m=v;m<=r;m+=1)t[v]=t[v]+e[v][m]*o[m]}for(a[1]=0,v=1;v<=r;v+=1)for(o[v]=t[v],a[1]=a[1]+f[v]*o[v],f[v]=0,m=v+1;m<=r;m+=1)e[m][v]=0;for(a[1]=-a[1]/2,g[1]=0,j=(S=(P=(C=(k=(x=r)+r)+E)+E+1)+E*(E+1)/2)+u,m=1;m<=u;m+=1){for(I=0,v=1;v<=r;v+=1)I+=i[v][m]*i[v][m];f[j+m]=Math.sqrt(I)}function z(){for(h[1]=h[1]+1,y=S,m=1;m<=u;m+=1){for(y+=1,I=-s[m],v=1;v<=r;v+=1)I+=i[v][m]*o[v];if(Math.abs(I)<L&&(I=0),m>l)f[y]=I;else if(f[y]=-Math.abs(I),I>0){for(v=1;v<=r;v+=1)i[v][m]=-i[v][m];s[m]=-s[m]}}for(m=1;m<=p;m+=1)f[S+d[m]]=0;for(D=0,A=0,m=1;m<=u;m+=1)f[S+m]<A*f[j+m]&&(D=m,A=f[S+m]/f[j+m]);return 0===D?999:0}function W(){for(m=1;m<=r;m+=1){for(I=0,v=1;v<=r;v+=1)I+=e[v][m]*i[v][D];f[m]=I}for(b=x,m=1;m<=r;m+=1)f[b+m]=0;for(v=p+1;v<=r;v+=1)for(m=1;m<=r;m+=1)f[b+m]=f[b+m]+e[m][v]*f[v];for(M=!0,m=p;m>=1;m-=1){for(I=f[m],b=(y=P+m*(m+3)/2)-m,v=m+1;v<=p;v+=1)I-=f[y]*f[k+v],y+=v;if(I/=f[b],f[k+m]=I,d[m]<l)break;if(I<0)break;M=!1,_=m}if(!M)for(O=f[C+_]/f[k+_],m=1;m<=p&&!(d[m]<l)&&!(f[k+m]<0);m+=1)(A=f[C+m]/f[k+m])<O&&(O=A,_=m);for(I=0,m=x+1;m<=x+r;m+=1)I+=f[m]*f[m];if(Math.abs(I)<=L){if(M)return g[1]=1,999;for(m=1;m<=p;m+=1)f[C+m]=f[C+m]-O*f[k+m];return f[C+p+1]=f[C+p+1]+O,700}for(I=0,m=1;m<=r;m+=1)I+=f[x+m]*i[m][D];for(q=-f[S+D]/I,N=!0,M||O<q&&(q=O,N=!1),m=1;m<=r;m+=1)o[m]=o[m]+q*f[x+m],Math.abs(o[m])<L&&(o[m]=0);for(a[1]=a[1]+q*I*(q/2+f[C+p+1]),m=1;m<=p;m+=1)f[C+m]=f[C+m]-q*f[k+m];if(f[C+p+1]=f[C+p+1]+q,!N){for(I=-s[D],v=1;v<=r;v+=1)I+=o[v]*i[v][D];if(D>l)f[S+D]=I;else if(f[S+D]=-Math.abs(I),I>0){for(v=1;v<=r;v+=1)i[v][D]=-i[v][D];s[D]=-s[D]}return 700}for(d[p+=1]=D,y=P+(p-1)*p/2+1,m=1;m<=p-1;m+=1)f[y]=f[m],y+=1;if(p===r)f[y]=f[r];else{for(m=r;m>=p+1&&0!==f[m]&&(R=Math.max(Math.abs(f[m-1]),Math.abs(f[m])),T=Math.min(Math.abs(f[m-1]),Math.abs(f[m])),A=f[m-1]>=0?Math.abs(R*Math.sqrt(1+T*T/(R*R))):-Math.abs(R*Math.sqrt(1+T*T/(R*R))),R=f[m-1]/A,T=f[m]/A,1!==R);m-=1)if(0===R)for(f[m-1]=T*A,v=1;v<=r;v+=1)A=e[v][m-1],e[v][m-1]=e[v][m],e[v][m]=A;else for(f[m-1]=A,B=T/(1+R),v=1;v<=r;v+=1)A=R*e[v][m-1]+T*e[v][m],e[v][m]=B*(e[v][m-1]+A)-e[v][m],e[v][m-1]=A;f[y]=f[p]}return 0}function $(){if(0===f[b=(y=P+_*(_+1)/2+1)+_])return 798;if(R=Math.max(Math.abs(f[b-1]),Math.abs(f[b])),T=Math.min(Math.abs(f[b-1]),Math.abs(f[b])),A=f[b-1]>=0?Math.abs(R*Math.sqrt(1+T*T/(R*R))):-Math.abs(R*Math.sqrt(1+T*T/(R*R))),R=f[b-1]/A,T=f[b]/A,1===R)return 798;if(0===R){for(m=_+1;m<=p;m+=1)A=f[b-1],f[b-1]=f[b],f[b]=A,b+=m;for(m=1;m<=r;m+=1)A=e[m][_],e[m][_]=e[m][_+1],e[m][_+1]=A}else{for(B=T/(1+R),m=_+1;m<=p;m+=1)A=R*f[b-1]+T*f[b],f[b]=B*(f[b-1]+A)-f[b],f[b-1]=A,b+=m;for(m=1;m<=r;m+=1)A=R*e[m][_]+T*e[m][_+1],e[m][_+1]=B*(e[m][_]+A)-e[m][_+1],e[m][_]=A}return 0}function V(){for(b=y-_,m=1;m<=_;m+=1)f[b]=f[y],y+=1,b+=1;return f[C+_]=f[C+_+1],d[_]=d[_+1],(_+=1)<p?797:0}function H(){return f[C+p]=f[C+p+1],f[C+p+1]=0,d[p]=0,p-=1,h[2]=h[2]+1,0}for(p=0,h[1]=0,h[2]=0,U=0;;){if(999===(U=z()))return;for(;0!==(U=W());){if(999===U)return;if(700===U)if(_===p)H();else{for(;$(),797===(U=V()););H()}}}}(e,r,0,u,g,h,o,a,0,l,i,f,0,v,m,s),p="",1===s[1]&&(p="constraints are inconsistent, no solution!"),2===s[1]&&(p="matrix D in quadratic function is not positive definite!"),{solution:n(g),value:n(h),unconstrained_solution:n(r),iterations:n(v),iact:n(f),message:p}}}(numeric),numeric.svd=function(e){var t,n=numeric.epsilon,r=1e-64/n,o=0,a=0,i=0,s=0,c=0,u=numeric.clone(e),l=u.length,d=u[0].length;if(l<d)throw"Need more rows than columns";var p=new Array(d),h=new Array(d);for(a=0;a<d;a++)p[a]=h[a]=0;var f=numeric.rep([d,d],0);function g(e,t){return(e=Math.abs(e))>(t=Math.abs(t))?e*Math.sqrt(1+t*t/e/e):0==t?e:t*Math.sqrt(1+e*e/t/t)}var m=0,v=0,y=0,b=0,w=0,_=0,x=0;for(a=0;a<d;a++){for(p[a]=v,x=0,c=a+1,i=a;i<l;i++)x+=u[i][a]*u[i][a];if(x<=r)v=0;else for(m=u[a][a],v=Math.sqrt(x),m>=0&&(v=-v),y=m*v-x,u[a][a]=m-v,i=c;i<d;i++){for(x=0,s=a;s<l;s++)x+=u[s][a]*u[s][i];for(m=x/y,s=a;s<l;s++)u[s][i]+=m*u[s][a]}for(h[a]=v,x=0,i=c;i<d;i++)x+=u[a][i]*u[a][i];if(x<=r)v=0;else{for(m=u[a][a+1],v=Math.sqrt(x),m>=0&&(v=-v),y=m*v-x,u[a][a+1]=m-v,i=c;i<d;i++)p[i]=u[a][i]/y;for(i=c;i<l;i++){for(x=0,s=c;s<d;s++)x+=u[i][s]*u[a][s];for(s=c;s<d;s++)u[i][s]+=x*p[s]}}(w=Math.abs(h[a])+Math.abs(p[a]))>b&&(b=w)}for(a=d-1;-1!=a;a+=-1){if(0!=v){for(y=v*u[a][a+1],i=c;i<d;i++)f[i][a]=u[a][i]/y;for(i=c;i<d;i++){for(x=0,s=c;s<d;s++)x+=u[a][s]*f[s][i];for(s=c;s<d;s++)f[s][i]+=x*f[s][a]}}for(i=c;i<d;i++)f[a][i]=0,f[i][a]=0;f[a][a]=1,v=p[a],c=a}for(a=d-1;-1!=a;a+=-1){for(c=a+1,v=h[a],i=c;i<d;i++)u[a][i]=0;if(0!=v){for(y=u[a][a]*v,i=c;i<d;i++){for(x=0,s=c;s<l;s++)x+=u[s][a]*u[s][i];for(m=x/y,s=a;s<l;s++)u[s][i]+=m*u[s][a]}for(i=a;i<l;i++)u[i][a]=u[i][a]/v}else for(i=a;i<l;i++)u[i][a]=0;u[a][a]+=1}for(n*=b,s=d-1;-1!=s;s+=-1)for(var k=0;k<50;k++){var P=!1;for(c=s;-1!=c;c+=-1){if(Math.abs(p[c])<=n){P=!0;break}if(Math.abs(h[c-1])<=n)break}if(!P){o=0,x=1;var S=c-1;for(a=c;a<s+1&&(m=x*p[a],p[a]=o*p[a],!(Math.abs(m)<=n));a++)for(y=g(m,v=h[a]),h[a]=y,o=v/y,x=-m/y,i=0;i<l;i++)w=u[i][S],_=u[i][a],u[i][S]=w*o+_*x,u[i][a]=-w*x+_*o}if(_=h[s],c==s){if(_<0)for(h[s]=-_,i=0;i<d;i++)f[i][s]=-f[i][s];break}if(k>=49)throw"Error: no convergence.";for(b=h[c],v=g(m=(((w=h[s-1])-_)*(w+_)+((v=p[s-1])-(y=p[s]))*(v+y))/(2*y*w),1),m=m<0?((b-_)*(b+_)+y*(w/(m-v)-y))/b:((b-_)*(b+_)+y*(w/(m+v)-y))/b,o=1,x=1,a=c+1;a<s+1;a++){for(v=p[a],w=h[a],y=x*v,v*=o,_=g(m,y),p[a-1]=_,m=b*(o=m/_)+v*(x=y/_),v=-b*x+v*o,y=w*x,w*=o,i=0;i<d;i++)b=f[i][a-1],_=f[i][a],f[i][a-1]=b*o+_*x,f[i][a]=-b*x+_*o;for(_=g(m,y),h[a-1]=_,m=(o=m/_)*v+(x=y/_)*w,b=-x*v+o*w,i=0;i<l;i++)w=u[i][a-1],_=u[i][a],u[i][a-1]=w*o+_*x,u[i][a]=-w*x+_*o}p[c]=0,p[s]=m,h[s]=b}for(a=0;a<h.length;a++)h[a]<n&&(h[a]=0);for(a=0;a<d;a++)for(i=a-1;i>=0;i--)if(h[i]<h[a]){for(o=h[i],h[i]=h[a],h[a]=o,s=0;s<u.length;s++)t=u[s][a],u[s][a]=u[s][i],u[s][i]=t;for(s=0;s<f.length;s++)t=f[s][a],f[s][a]=f[s][i],f[s][i]=t;a=i}return{U:u,S:h,V:f}};var jsfeat=jsfeat||{REVISION:"ALPHA"},o,f,v,u,h,b,r,n,q,c,global;self.Int32Array=self.Int32Array||Array,self.Uint32Array=self.Uint32Array||Array,self.Uint8Array=self.Uint8Array||Array,self.Float32Array=self.Float32Array||Array,self.Float64Array=self.Float64Array||Array,o=jsfeat,f=1024,v=new Int32Array([-1,1,4,-1,4,-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,8]),u=function(e){return 65280&e},h=function(e){return 255&e},b=function(e){return v[(65280&e)>>8]},r=function(e,t){this.size=-8&(e+7|0),void 0===t?this.buffer=new ArrayBuffer(this.size):(this.buffer=t,this.size=t.length),this.u8=new Uint8Array(this.buffer),this.i32=new Int32Array(this.buffer),this.f32=new Float32Array(this.buffer),this.f64=new Float64Array(this.buffer)},n=function(){function e(e,t,n,o){this.type=0|u(n),this.channel=0|h(n),this.cols=0|e,this.rows=0|t,this.buffer=void 0===o?new r(e*b(n)*h(n)*t):o,this.data=256&this.type?this.buffer.u8:512&this.type?this.buffer.i32:this.type&f?this.buffer.f32:this.buffer.f64}return e.prototype.set_data_type=function(e){this.type=0|u(e),this.channel=0|h(e),delete this.data,delete this.buffer,this.buffer=new r(this.cols*b(e)*h(e)*this.rows),this.data=256&this.type?this.buffer.u8:512&this.type?this.buffer.i32:this.type&f?this.buffer.f32:this.buffer.f64},e.prototype.set_data=function(e){for(var t=e.length;--t>=0;)this.data[t]=e[t]},e}(),q=function(){function e(e){this.levels=0|e,this.data=new Array(e),this.pyrdown=jsfeat.imgproc.pyrdown}return e.prototype.allocate=function(e,t,r){for(var o=this.levels;--o>=0;)this.data[o]=new n(e>>o,t>>o,r)},e.prototype.build=function(e,t){void 0===t&&(t=!0);var n=2,r=e,o=this.data[0];if(!t)for(var a=e.cols*e.rows;--a>=0;)o.data[a]=e.data[a];for(o=this.data[1],this.pyrdown(r,o);n<this.levels;++n)r=o,o=this.data[n],this.pyrdown(r,o)},e}(),c=function(e,t,n,r){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===r&&(r=0),this.x=e,this.y=t,this.score=n,this.level=r},o.U8_t=256,o.S32_t=512,o.F32_t=f,o.S64_t=2048,o.F64_t=4096,o.C1_t=1,o.C2_t=2,o.C3_t=3,o.C4_t=4,o.EPSILON=1.192092896e-7,o.FLT_MIN=1e-37,o.BOX_BLUR_NOSCALE=1,o.SVD_U_T=1,o.SVD_V_T=2,o.get_data_type=u,o.get_channel=h,o.get_data_type_size=b,o.data_t=r,o.matrix_t=n,o.pyramid_t=q,o.point2d_t=c,function(e){var t=function(){var e,t,n=function(){function e(e){this.next=null,this.data=new jsfeat.data_t(e),this.size=this.data.size,this.buffer=this.data.buffer,this.u8=this.data.u8,this.i32=this.data.i32,this.f32=this.data.f32,this.f64=this.data.f64}return e.prototype.resize=function(e){delete this.data,this.data=new jsfeat.data_t(e),this.size=this.data.size,this.buffer=this.data.buffer,this.u8=this.data.u8,this.i32=this.data.i32,this.f32=this.data.f32,this.f64=this.data.f64},e}();return{allocate:function(r,o){e=t=new n(o);for(var a=0;a<r;++a){var i=new n(o);t=t.next=i}},get_buffer:function(t){var n=e;return e=e.next,t>n.size&&n.resize(t),n},put_buffer:function(e){t=t.next=e}}}();e.cache=t,t.allocate(30,2560)}(jsfeat),function(e){var t=function(){var e=new Int32Array(96);return{get_gaussian_kernel:function(e,t,n,r){var o=0,a=0,i=0,s=0,c=0,u=0,l=jsfeat.cache.get_buffer(e<<2),d=l.f32;if(1==(1&e)&&e<=7&&t<=0)switch(e>>1){case 0:d[0]=1,u=1;break;case 1:d[0]=.25,d[1]=.5,d[2]=.25,u=1;break;case 2:d[0]=.0625,d[1]=.25,d[2]=.375,d[3]=.25,d[4]=.0625,u=1;break;case 3:d[0]=.03125,d[1]=.109375,d[2]=.21875,d[3]=.28125,d[4]=.21875,d[5]=.109375,d[6]=.03125,u=1}else for(c=-.5/((s=t>0?t:.3*(.5*(e-1)-1)+.8)*s);o<e;++o)a=o-.5*(e-1),i=Math.exp(c*a*a),d[o]=i,u+=i;if(r&jsfeat.U8_t)for(u=256/u,o=0;o<e;++o)n[o]=d[o]*u+.5|0;else for(u=1/u,o=0;o<e;++o)n[o]=d[o]*u;jsfeat.cache.put_buffer(l)},qsort:function(t,n,r,o){var a,i,s,c,u=0,l=0,d=0,p=0,h=0,f=0,g=0,m=0,v=0,y=0,b=0,w=0,_=0,x=0,k=0,P=0,S=0,C=0,D=e;if(!(r-n+1<=1))for(D[0]=n,D[1]=r;u>=0;)for(l=D[u<<1],d=D[1+(u<<1)],u--;;){if((h=d-l+1)<=7){for(g=l+1;g<=d;g++)for(m=g;m>l&&o(t[m],t[m-1]);m--)a=t[m],t[m]=t[m-1],t[m-1]=a;break}for(C=0,y=l,w=d,x=l+(h>>1),h>40&&(P=l+(v=h>>3),S=l+(v<<1),i=t[k=l],s=t[P],c=t[S],l=o(i,s)?o(s,c)?P:o(i,c)?S:k:o(c,s)?P:o(i,c)?k:S,P=x,S=x+v,i=t[k=x-v],s=t[P],c=t[S],x=o(i,s)?o(s,c)?P:o(i,c)?S:k:o(c,s)?P:o(i,c)?k:S,P=d-v,S=d,i=t[k=d-(v<<1)],s=t[P],c=t[S],d=o(i,s)?o(s,c)?P:o(i,c)?S:k:o(c,s)?P:o(i,c)?k:S),P=x,S=d,i=t[k=l],s=t[P],c=t[S],(x=o(i,s)?o(s,c)?P:o(i,c)?S:k:o(c,s)?P:o(i,c)?k:S)!=y&&(a=t[x],t[x]=t[y],t[y]=a,x=y),l=b=y+1,d=_=w,i=t[x];;){for(;l<=d&&!o(i,t[l]);)o(t[l],i)||(l>b&&(a=t[b],t[b]=t[l],t[l]=a),C=1,b++),l++;for(;l<=d&&!o(t[d],i);)o(i,t[d])||(d<_&&(a=t[_],t[_]=t[d],t[d]=a),C=1,_--),d--;if(l>d)break;a=t[l],t[l]=t[d],t[d]=a,C=1,l++,d--}if(0==C){for(d=w,g=(l=y)+1;g<=d;g++)for(m=g;m>l&&o(t[m],t[m-1]);m--)a=t[m],t[m]=t[m-1],t[m-1]=a;break}for(f=l-(h=Math.min(b-y,l-b))|0,p=0;p<h;++p,++f)a=t[y+p],t[y+p]=t[f],t[f]=a;for(f=w-(h=Math.min(w-_,_-d))+1|0,p=0;p<h;++p,++f)a=t[l+p],t[l+p]=t[f],t[f]=a;if(f=_-d,(h=l-b)>1)f>1?h>f?(D[++u<<1]=y,D[1+(u<<1)]=y+h-1,l=w-f+1,d=w):(D[++u<<1]=w-f+1,D[1+(u<<1)]=w,l=y,d=y+h-1):(l=y,d=y+h-1);else{if(!(f>1))break;l=w-f+1,d=w}}},median:function(e,t,n){for(var r,o=0,a=0,i=0,s=t+n>>1;;){if(n<=t)return e[s];if(n==t+1)return e[t]>e[n]&&(r=e[t],e[t]=e[n],e[n]=r),e[s];for(e[o=t+n>>1]>e[n]&&(r=e[o],e[o]=e[n],e[n]=r),e[t]>e[n]&&(r=e[t],e[t]=e[n],e[n]=r),e[o]>e[t]&&(r=e[o],e[o]=e[t],e[t]=r),a=t+1,r=e[o],e[o]=e[a],e[a]=r,i=n;;){do{++a}while(e[t]>e[a]);do{--i}while(e[i]>e[t]);if(i<a)break;r=e[a],e[a]=e[i],e[i]=r}r=e[t],e[t]=e[i],e[i]=r,i<=s?t=a:i>=s&&(n=i-1)}return 0}}}();e.math=t}(jsfeat),function(e){e.matmath={transpose:function(e,t){for(var n=0,r=0,o=t.rows,a=t.cols,i=0,s=0,c=0,u=t.data,l=e.data;n<o;s+=1,i+=a,n++)for(c=s,r=0;r<a;c+=o,r++)l[c]=u[i+r]},multiply:function(e,t,n){for(var r=0,o=0,a=0,i=0,s=0,c=0,u=0,l=0,d=t.cols,p=t.rows,h=n.cols,f=t.data,g=n.data,m=e.data,v=0;r<p;i+=d,r++)for(u=0,o=0;o<h;l++,u++,o++){for(c=u,s=i,v=0,a=0;a<d;s++,c+=h,a++)v+=f[s]*g[c];m[l]=v}},multiply_ABt:function(e,t,n){for(var r=0,o=0,a=0,i=0,s=0,c=0,u=0,l=t.cols,d=t.rows,p=n.rows,h=t.data,f=n.data,g=e.data,m=0;r<d;i+=l,r++)for(c=0,o=0;o<p;u++,o++){for(s=i,m=0,a=0;a<l;s++,c++,a++)m+=h[s]*f[c];g[u]=m}},multiply_AtB:function(e,t,n){for(var r=0,o=0,a=0,i=0,s=0,c=0,u=0,l=0,d=t.cols,p=t.rows,h=n.cols,f=t.data,g=n.data,m=e.data,v=0;r<d;i++,r++)for(u=0,o=0;o<h;l++,u++,o++){for(c=u,s=i,v=0,a=0;a<p;s+=d,c+=h,a++)v+=f[s]*g[c];m[l]=v}},multiply_AAt:function(e,t){for(var n=0,r=0,o=0,a=0,i=0,s=0,c=0,u=0,l=0,d=t.cols,p=t.rows,h=t.data,f=e.data,g=0;n<p;a+=p+1,i=s,n++)for(u=a,l=a,c=i,r=n;r<p;u++,l+=p,r++){for(s=i,g=0,o=0;o<d;o++)g+=h[s++]*h[c++];f[u]=g,f[l]=g}},multiply_AtA:function(e,t){for(var n=0,r=0,o=0,a=0,i=0,s=0,c=0,u=0,l=0,d=t.cols,p=t.rows,h=t.data,f=e.data,g=0;n<d;c+=d,n++)for(a=n,u=l=c+n,r=n;r<d;u++,l+=d,r++){for(i=a,s=r,g=0,o=0;o<p;i+=d,s+=d,o++)g+=h[i]*h[s];f[u]=g,f[l]=g}}}}(jsfeat),function(e){var t=function(){var e=function(e,t,n,r){r=e[t],e[t]=e[n],e[n]=r},t=function(e,t){return(e=Math.abs(e))>(t=Math.abs(t))?(t/=e,e*Math.sqrt(1+t*t)):t>0?(e/=t,t*Math.sqrt(1+e*e)):0};return{lu_solve:function(t,n){var r,o,a,i,s=0,c=0,u=0,l=1,d=t.cols,p=t.data,h=n.data;for(s=0;s<d;s++){for(u=s,c=s+1;c<d;c++)Math.abs(p[c*d+s])>Math.abs(p[u*d+s])&&(u=c);if(Math.abs(p[u*d+s])<jsfeat.EPSILON)return 0;if(u!=s){for(c=s;c<d;c++)e(p,s*d+c,u*d+c,r);e(h,s,u,r),l=-l}for(a=-1/p[s*d+s],c=s+1;c<d;c++){for(o=p[c*d+s]*a,u=s+1;u<d;u++)p[c*d+u]+=o*p[s*d+u];h[c]+=o*h[s]}p[s*d+s]=-a}for(s=d-1;s>=0;s--){for(i=h[s],u=s+1;u<d;u++)i-=p[s*d+u]*h[u];h[s]=i*p[s*d+s]}return 1},cholesky_solve:function(e,t){var n,r,o=0,a=0,i=0,s=0,c=0,u=0,l=0,d=e.cols,p=e.data,h=t.data;for(o=0;o<d;o++)for(r=1,c=s=o*d,a=o;a<d;a++){for(n=p[c+o],i=0;i<o;i++)n-=p[i*d+o]*p[c+i];if(a==o){if(p[c+o]=n,0==n)return 0;r=1/n}else p[s+a]=n,p[c+o]=n*r;c+=d}for(s=0,u=0;u<d;u++){for(n=h[u],l=0;l<u;l++)n-=p[s+l]*h[l];h[u]=n,s+=d}for(s=0,u=0;u<d;u++)h[u]/=p[s+u],s+=d;for(u=d-1;u>=0;u--){for(n=h[u],s=(l=u+1)*d;l<d;l++)n-=p[s+u]*h[l],s+=d;h[u]=n}return 1},svd_decompose:function(n,r,o,a,i){void 0===i&&(i=0);var s=0,c=0,u=n.rows,l=n.cols,d=u,p=l,h=n.type|jsfeat.C1_t;d<p&&(s=1,c=d,d=p,p=c);var f=jsfeat.cache.get_buffer(d*d<<3),g=jsfeat.cache.get_buffer(p<<3),m=jsfeat.cache.get_buffer(p*p<<3),v=new jsfeat.matrix_t(d,d,h,f.data),y=new jsfeat.matrix_t(1,p,h,g.data),b=new jsfeat.matrix_t(p,p,h,m.data);if(0==s)jsfeat.matmath.transpose(v,n);else{for(c=0;c<l*u;c++)v.data[c]=n.data[c];for(;c<p*d;c++)v.data[c]=0}if(function(n,r,o,a,i,s,c,u){for(var l=10*jsfeat.EPSILON,d=jsfeat.FLT_MIN,p=0,h=0,f=0,g=0,m=Math.max(s,30),v=0,y=0,b=0,w=0,_=0,x=0,k=0,P=0,S=0,C=0,D=0,E=0,j=0,A=0,I=0,O=0,q=0,R=4660,T=0,B=0,M=0,N=jsfeat.cache.get_buffer(c<<3),L=N.f64;p<c;p++){for(f=0,D=0;f<s;f++)D+=(P=n[p*r+f])*P;if(L[p]=D,a){for(f=0;f<c;f++)a[p*i+f]=0;a[p*i+p]=1}}for(;g<m;g++){for(_=0,p=0;p<c-1;p++)for(h=p+1;h<c;h++){for(v=p*r|0,y=h*r|0,I=L[p],O=0,q=L[h],f=3,O+=n[v]*n[y],O+=n[v+1]*n[y+1],O+=n[v+2]*n[y+2];f<s;f++)O+=n[v+f]*n[y+f];if(!(Math.abs(O)<=l*Math.sqrt(I*q))){if(j=t(O*=2,E=I-q),E<0?(A=.5*(j-E),x=O/(j*(k=Math.sqrt(A/j))*2)):(k=O/(j*(x=Math.sqrt((j+E)/(2*j)))*2),A=O*O*.5/(j+E)),L[p]+=A,L[h]-=A,1&g&&L[p]>0&&L[h]>0)for(f=3,S=x*n[v]+k*n[y],C=-k*n[v]+x*n[y],n[v]=S,n[y]=C,S=x*n[v+1]+k*n[y+1],C=-k*n[v+1]+x*n[y+1],n[v+1]=S,n[y+1]=C,S=x*n[v+2]+k*n[y+2],C=-k*n[v+2]+x*n[y+2],n[v+2]=S,n[y+2]=C;f<s;f++)S=x*n[v+f]+k*n[y+f],C=-k*n[v+f]+x*n[y+f],n[v+f]=S,n[y+f]=C;else{for(I=q=0,f=3,S=x*n[v]+k*n[y],C=-k*n[v]+x*n[y],n[v]=S,n[y]=C,I+=S*S,q+=C*C,S=x*n[v+1]+k*n[y+1],C=-k*n[v+1]+x*n[y+1],n[v+1]=S,n[y+1]=C,I+=S*S,q+=C*C,S=x*n[v+2]+k*n[y+2],C=-k*n[v+2]+x*n[y+2],n[v+2]=S,n[y+2]=C,I+=S*S,q+=C*C;f<s;f++)S=x*n[v+f]+k*n[y+f],C=-k*n[v+f]+x*n[y+f],n[v+f]=S,n[y+f]=C,I+=S*S,q+=C*C;L[p]=I,L[h]=q}if(_=1,a)for(w=h*i|0,f=3,S=x*a[b=p*i|0]+k*a[w],C=-k*a[b]+x*a[w],a[b]=S,a[w]=C,S=x*a[b+1]+k*a[w+1],C=-k*a[b+1]+x*a[w+1],a[b+1]=S,a[w+1]=C,S=x*a[b+2]+k*a[w+2],C=-k*a[b+2]+x*a[w+2],a[b+2]=S,a[w+2]=C;f<c;f++)S=x*a[b+f]+k*a[w+f],C=-k*a[b+f]+x*a[w+f],a[b+f]=S,a[w+f]=C}}if(0==_)break}for(p=0;p<c;p++){for(f=0,D=0;f<s;f++)D+=(P=n[p*r+f])*P;L[p]=Math.sqrt(D)}for(p=0;p<c-1;p++){for(h=p,f=p+1;f<c;f++)L[h]<L[f]&&(h=f);if(p!=h&&(e(L,p,h,D),a)){for(f=0;f<s;f++)e(n,p*r+f,h*r+f,P);for(f=0;f<c;f++)e(a,p*i+f,h*i+f,P)}}for(p=0;p<c;p++)o[p]=L[p];if(a){for(p=0;p<u;p++){for(D=p<c?L[p]:0;D<=d;){for(B=1/s,f=0;f<s;f++)T=0!=(256&(R=214013*R+2531011)>>16)?B:-B,n[p*r+f]=T;for(g=0;g<2;g++)for(h=0;h<p;h++){for(D=0,f=0;f<s;f++)D+=n[p*r+f]*n[h*r+f];for(M=0,f=0;f<s;f++)P=n[p*r+f]-D*n[h*r+f],n[p*r+f]=P,M+=Math.abs(P);for(M=M?1/M:0,f=0;f<s;f++)n[p*r+f]*=M}for(D=0,f=0;f<s;f++)D+=(P=n[p*r+f])*P;D=Math.sqrt(D)}for(k=1/D,f=0;f<s;f++)n[p*r+f]*=k}jsfeat.cache.put_buffer(N)}else jsfeat.cache.put_buffer(N)}(v.data,d,y.data,b.data,p,d,p,d),r){for(c=0;c<p;c++)r.data[c]=y.data[c];for(;c<l;c++)r.data[c]=0}if(0==s){if(o&&i&jsfeat.SVD_U_T)for(c=d*d;--c>=0;)o.data[c]=v.data[c];else o&&jsfeat.matmath.transpose(o,v);if(a&&i&jsfeat.SVD_V_T)for(c=p*p;--c>=0;)a.data[c]=b.data[c];else a&&jsfeat.matmath.transpose(a,b)}else{if(o&&i&jsfeat.SVD_U_T)for(c=p*p;--c>=0;)o.data[c]=b.data[c];else o&&jsfeat.matmath.transpose(o,b);if(a&&i&jsfeat.SVD_V_T)for(c=d*d;--c>=0;)a.data[c]=v.data[c];else a&&jsfeat.matmath.transpose(a,v)}jsfeat.cache.put_buffer(f),jsfeat.cache.put_buffer(g),jsfeat.cache.put_buffer(m)},svd_solve:function(e,t,n){var r,o=0,a=0,i=0,s=0,c=0,u=e.rows,l=e.cols,d=0,p=0,h=e.type|jsfeat.C1_t,f=jsfeat.cache.get_buffer(u*u<<3),g=jsfeat.cache.get_buffer(l<<3),m=jsfeat.cache.get_buffer(l*l<<3),v=new jsfeat.matrix_t(u,u,h,f.data),y=new jsfeat.matrix_t(1,l,h,g.data),b=new jsfeat.matrix_t(l,l,h,m.data),w=n.data,_=v.data,x=y.data,k=b.data;for(this.svd_decompose(e,y,v,b,0),r=jsfeat.EPSILON*x[0]*l;o<l;o++,c+=l){for(p=0,a=0;a<l;a++)if(x[a]>r){for(i=0,d=0,s=0;i<u;i++,s+=l)d+=_[s+a]*w[i];p+=d*k[c+a]/x[a]}t.data[o]=p}jsfeat.cache.put_buffer(f),jsfeat.cache.put_buffer(g),jsfeat.cache.put_buffer(m)},svd_invert:function(e,t){var n,r=0,o=0,a=0,i=0,s=0,c=0,u=t.rows,l=t.cols,d=0,p=t.type|jsfeat.C1_t,h=jsfeat.cache.get_buffer(u*u<<3),f=jsfeat.cache.get_buffer(l<<3),g=jsfeat.cache.get_buffer(l*l<<3),m=new jsfeat.matrix_t(u,u,p,h.data),v=new jsfeat.matrix_t(1,l,p,f.data),y=new jsfeat.matrix_t(l,l,p,g.data),b=e.data,w=m.data,_=v.data,x=y.data;for(this.svd_decompose(t,v,m,y,0),n=jsfeat.EPSILON*_[0]*l;r<l;r++,s+=l)for(o=0,i=0;o<u;o++,c++){for(a=0,d=0;a<l;a++,i++)_[a]>n&&(d+=x[s+a]*w[i]/_[a]);b[c]=d}jsfeat.cache.put_buffer(h),jsfeat.cache.put_buffer(f),jsfeat.cache.put_buffer(g)},eigenVV:function(n,r,o){for(var a=n.cols,i=a*a,s=n.type|jsfeat.C1_t,c=jsfeat.cache.get_buffer(a*a<<3),u=jsfeat.cache.get_buffer(a<<3),l=new jsfeat.matrix_t(a,a,s,c.data),d=new jsfeat.matrix_t(1,a,s,u.data);--i>=0;)l.data[i]=n.data[i];if(function(n,r,o,a,i,s){var c=jsfeat.EPSILON,u=0,l=0,d=0,p=0,h=0,f=0,g=0,m=0,v=0,y=s*s*30,b=0,w=0,_=0,x=0,k=0,P=0,S=0,C=0,D=0,E=jsfeat.cache.get_buffer(s<<2),j=jsfeat.cache.get_buffer(s<<2),A=E.i32,I=j.i32;if(a)for(;u<s;u++){for(d=u*i,l=0;l<s;l++)a[d+l]=0;a[d+u]=1}for(d=0;d<s;d++){if(o[d]=n[(r+1)*d],d<s-1){for(p=d+1,b=Math.abs(n[r*d+p]),u=d+2;u<s;u++)b<(w=Math.abs(n[r*d+u]))&&(b=w,p=u);A[d]=p}if(d>0){for(p=0,b=Math.abs(n[d]),u=1;u<d;u++)b<(w=Math.abs(n[r*u+d]))&&(b=w,p=u);I[d]=p}}if(s>1)for(;v<y;v++){for(d=0,b=Math.abs(n[A[0]]),u=1;u<s-1;u++)b<(w=Math.abs(n[r*u+A[u]]))&&(b=w,d=u);for(h=A[d],u=1;u<s;u++)b<(w=Math.abs(n[r*I[u]+u]))&&(b=w,d=I[u],h=u);if(_=n[r*d+h],Math.abs(_)<=c)break;for(x=.5*(o[h]-o[d]),S=(k=Math.abs(x)+t(_,x))/(P=t(_,k)),P=_/P,k=_/k*_,x<0&&(P=-P,k=-k),n[r*d+h]=0,o[d]-=k,o[h]+=k,u=0;u<d;u++)m=r*u+h,C=n[g=r*u+d],D=n[m],n[g]=C*S-D*P,n[m]=C*P+D*S;for(u=d+1;u<h;u++)m=r*u+h,C=n[g=r*d+u],D=n[m],n[g]=C*S-D*P,n[m]=C*P+D*S;for(g=r*d+(u=h+1),m=r*h+u;u<s;u++,g++,m++)C=n[g],D=n[m],n[g]=C*S-D*P,n[m]=C*P+D*S;if(a)for(g=i*d,m=i*h,u=0;u<s;u++,g++,m++)C=a[g],D=a[m],a[g]=C*S-D*P,a[m]=C*P+D*S;for(l=0;l<2;l++){if((f=0==l?d:h)<s-1){for(p=f+1,b=Math.abs(n[r*f+p]),u=f+2;u<s;u++)b<(w=Math.abs(n[r*f+u]))&&(b=w,p=u);A[f]=p}if(f>0){for(p=0,b=Math.abs(n[f]),u=1;u<f;u++)b<(w=Math.abs(n[r*u+f]))&&(b=w,p=u);I[f]=p}}}for(d=0;d<s-1;d++){for(p=d,u=d+1;u<s;u++)o[p]<o[u]&&(p=u);if(d!=p&&(e(o,p,d,b),a))for(u=0;u<s;u++)e(a,i*p+u,i*d+u,b)}jsfeat.cache.put_buffer(E),jsfeat.cache.put_buffer(j)}(l.data,a,d.data,r?r.data:null,a,a),o)for(;--a>=0;)o.data[a]=d.data[a];jsfeat.cache.put_buffer(c),jsfeat.cache.put_buffer(u)}}}();e.linalg=t}(jsfeat),function(e){e.transform={affine_3point_transform:function(e,t,n,r,o,a,i,s,c,u,l,d,p){},perspective_4point_transform:function(e,t,n,r,o,a,i,s,c,u,l,d,p,h,f,g,m){var v=t,y=u,b=i,w=v*y*b,_=f,x=v*_,k=y*x,P=l,S=v*P,C=a,D=n,E=h,j=D*E,A=j*C,I=E*C*P,O=E*b,q=E*P,R=y*b,T=_*y,B=_*C,M=P*C,N=1/(O-q-R+T-B+M),L=v*E,F=D*C,G=b*v,U=_*G,z=D*y,W=j*P,$=D*P*C,V=b*_*y,H=_*D,J=-(k-w+S*C-C*x-j*y+A-I+O*y)*N,Q=(w-k-L*b+L*P+A-y*F+B*y-I)*N,X=v,Y=(-P*x+U+z*b-j*b+W-$+B*P-V)*N,K=(G*P-U-H*y+W-$+H*C+V-O*P)*N,Z=D,ee=(-S+G+z-F+q-O-T+B)*N,te=(-x+S+j-z+B-M-O+R)*N,ne=-((k=(y=d)*(x=(v=r)*(_=m)))-(w=v*y*(b=c))+(S=v*(P=p))*(C=s)-C*x-(j=(D=o)*(E=g))*y+(A=j*C)-(I=E*C*P)+(O=E*b)*y)*(N=1/(O-(q=E*P)-(R=y*b)+(T=_*y)-(B=_*C)+(M=P*C))),re=(w-k-(L=v*E)*b+L*P+A-y*(F=D*C)+B*y-I)*N,oe=v,ae=(-P*x+(U=_*(G=b*v))+(z=D*y)*b-j*b+(W=j*P)-($=D*P*C)+B*P-(V=b*_*y))*N,ie=(G*P-U-(H=_*D)*y+W-$+H*C+V-O*P)*N,se=D,ce=(-S+G+z-F+q-O-T+B)*N,ue=(-x+S+j-z+B-M-O+R)*N,le=X*ee;A=Z*ee-Y;var de=-Y*te+K*ee,pe=J-le;F=J*te-(S=Q*ee);var he=(w=J*Z)-(k=X*Y),fe=(b=J*K)-(x=Y*Q);$=(y=K-te*Z)*(E=1/(b-w*te-x+k*te+S*Z-le*K));var ge=(M=X*te-Q)*E,me=(G=-Q*Z+X*K)*E;e[0]=ne*$+re*(A*E)-oe*(de*E),e[1]=ne*ge+re*(pe*E)-oe*(F*E),e[2]=-ne*me-re*(he*E)+oe*(fe*E),e[3]=ae*$+ie*(A*E)-se*(de*E),e[4]=ae*ge+ie*(pe*E)-se*(F*E),e[5]=-ae*me-ie*(he*E)+se*(fe*E),e[6]=ce*$+ue*(A*E)-de*E,e[7]=ce*ge+ue*(pe*E)-F*E,e[8]=-ce*me-ue*(he*E)+fe*E},invert_affine_transform:function(e,t){var n=e[0],r=e[1],o=e[2],a=e[3],i=e[4],s=e[5],c=1/(n*i-r*a);t[0]=c*i,t[1]=c*-r,t[2]=c*(r*s-o*i),t[3]=c*-a,t[4]=c*n,t[5]=c*(o*a-n*s)},invert_perspective_transform:function(e,t){var n=e[0],r=e[1],o=e[2],a=e[3],i=e[4],s=e[5],c=e[6],u=e[7],l=e[8],d=1/(n*(i*l-s*u)-r*(a*l-s*c)+o*(a*u-i*c));t[0]=d*(i*l-s*u),t[1]=d*(o*u-r*l),t[2]=d*(r*s-o*i),t[3]=d*(s*c-a*l),t[4]=d*(n*l-o*c),t[5]=d*(o*a-n*s),t[6]=d*(a*u-i*c),t[7]=d*(r*c-n*u),t[8]=d*(n*i-r*a)}}}(jsfeat),function(e){var t={grayscale:function(e,t){for(var n=0|e.length,r=n-16|0,o=0,a=4899,i=9617,s=1868,c=0;c<=r;c+=16,o+=4)t[o]=e[c]*a+e[c+1]*i+e[c+2]*s+8192>>14,t[o+1]=e[c+4]*a+e[c+5]*i+e[c+6]*s+8192>>14,t[o+2]=e[c+8]*a+e[c+9]*i+e[c+10]*s+8192>>14,t[o+3]=e[c+12]*a+e[c+13]*i+e[c+14]*s+8192>>14;for(;c<n;c+=4,++o)t[o]=e[c]*a+e[c+1]*i+e[c+2]*s+8192>>14},resample:function(e,t,n,r){var o=e.rows,a=e.cols;o>r&&a>n&&(e.type&jsfeat.U8_t&&t.type&jsfeat.U8_t&&o*a/(r*n)<256?function(e,t,n,r){for(var o=[],a=0,i=e.channel,s=e.cols,c=e.rows,u=e.data,l=t.data,d=s/n,p=c/r,h=d*p*65536|0,f=0,g=0,m=0,v=0,y=0,b=0,w=0,_=0,x=0,k=0,P=0,S=0,C=0,D=0,E=0,j=0,A=jsfeat.cache.get_buffer(n*i<<2),I=jsfeat.cache.get_buffer(n*i<<2),O=A.i32,q=I.i32;f<n;f++){for(y=1+(x=f*d)-1e-6|0,b=0|(k=x+d),y=Math.min(y,s-1),b=Math.min(b,s-1),y>x&&(o[a++]={si:(y-1)*i|0,di:f*i|0,alpha:256*(y-x)|0}),m=y;m<b;m++)o[a++]={si:m*i|0,di:f*i|0,alpha:256};k-b>.001&&(o[a++]={si:b*i|0,di:f*i|0,alpha:256*(k-b)|0})}for(f=0;f<n*i;f++)O[f]=q[f]=0;for(g=0,v=0;v<c;v++){for(P=s*v,_=0;_<a;_++)for(C=o[_].di,D=o[_].alpha,y=o[_].si,w=0;w<i;w++)O[C+w]+=u[P+y+w]*D;if((g+1)*p<=v+1||v==c-1){if(j=256-(E=256*Math.max(v+1-(g+1)*p,0)|0),S=n*g,E<=0)for(f=0;f<n*i;f++)l[S+f]=Math.min(Math.max((q[f]+256*O[f])/h,0),255),q[f]=O[f]=0;else for(f=0;f<n*i;f++)l[S+f]=Math.min(Math.max((q[f]+O[f]*j)/h,0),255),q[f]=O[f]*E,O[f]=0;g++}else for(f=0;f<n*i;f++)q[f]+=256*O[f],O[f]=0}jsfeat.cache.put_buffer(I),jsfeat.cache.put_buffer(A)}(e,t,n,r):function(e,t,n,r){for(var o=[],a=0,i=e.channel,s=e.cols,c=e.rows,u=e.data,l=t.data,d=s/n,p=c/r,h=1/(d*p),f=0,g=0,m=0,v=0,y=0,b=0,w=0,_=0,x=0,k=0,P=0,S=0,C=0,D=0,E=0,j=0,A=jsfeat.cache.get_buffer(n*i<<2),I=jsfeat.cache.get_buffer(n*i<<2),O=A.f32,q=I.f32;f<n;f++){for(y=1+(x=f*d)-1e-6|0,b=0|(k=x+d),y=Math.min(y,s-1),b=Math.min(b,s-1),y>x&&(o[a++]={si:(y-1)*i|0,di:f*i|0,alpha:(y-x)*h}),m=y;m<b;m++)o[a++]={si:m*i|0,di:f*i|0,alpha:h};k-b>.001&&(o[a++]={si:b*i|0,di:f*i|0,alpha:(k-b)*h})}for(f=0;f<n*i;f++)O[f]=q[f]=0;for(g=0,v=0;v<c;v++){for(P=s*v,_=0;_<a;_++)for(C=o[_].di,D=o[_].alpha,y=o[_].si,w=0;w<i;w++)O[C+w]+=u[P+y+w]*D;if((g+1)*p<=v+1||v==c-1){if(j=1-(E=Math.max(v+1-(g+1)*p,0)),S=n*g,Math.abs(E)<.001)for(f=0;f<n*i;f++)l[S+f]=q[f]+O[f],q[f]=O[f]=0;else for(f=0;f<n*i;f++)l[S+f]=q[f]+O[f]*j,q[f]=O[f]*E,O[f]=0;g++}else for(f=0;f<n*i;f++)q[f]+=O[f],O[f]=0}jsfeat.cache.put_buffer(I),jsfeat.cache.put_buffer(A)}(e,t,n,r))},box_blur_gray:function(e,t,n,r){void 0===r&&(r=0);var o=e.cols,a=e.rows,i=a<<1,s=o<<1,c=0,u=0,l=0,d=0,p=1+(n<<1)|0,h=n+1|0,f=h+1|0,g=8192,m=r&jsfeat.BOX_BLUR_NOSCALE?1:16384/(p*p)+.5|0,v=jsfeat.cache.get_buffer(o*a<<2),y=0,b=0,w=0,_=0,x=0,k=v.i32,P=e.data,S=0;for(l=0;l<a;++l){for(b=l,y=h*P[w],c=w+1|0,d=w+n|0;c<=d;++c)y+=P[c];for(_=w+h|0,S=P[x=w],u=0;u<n;++u,b+=a)k[b]=y,y+=P[_]-S,_++;for(;u<o-f;u+=2,b+=i)k[b]=y,y+=P[_]-P[x],k[b+a]=y,y+=P[_+1]-P[x+1],_+=2,x+=2;for(;u<o-h;++u,b+=a)k[b]=y,y+=P[_]-P[x],_++,x++;for(S=P[_-1];u<o;++u,b+=a)k[b]=y,y+=S-P[x],x++;w+=o}if(w=0,P=t.data,1==m)for(l=0;l<o;++l){for(b=l,y=h*k[w],c=w+1|0,d=w+n|0;c<=d;++c)y+=k[c];for(_=w+h,S=k[x=w],u=0;u<n;++u,b+=o)P[b]=y,y+=k[_]-S,_++;for(;u<a-f;u+=2,b+=s)P[b]=y,y+=k[_]-k[x],P[b+o]=y,y+=k[_+1]-k[x+1],_+=2,x+=2;for(;u<a-h;++u,b+=o)P[b]=y,y+=k[_]-k[x],_++,x++;for(S=k[_-1];u<a;++u,b+=o)P[b]=y,y+=S-k[x],x++;w+=a}else for(l=0;l<o;++l){for(b=l,y=h*k[w],c=w+1|0,d=w+n|0;c<=d;++c)y+=k[c];for(_=w+h,S=k[x=w],u=0;u<n;++u,b+=o)P[b]=y*m+g>>14,y+=k[_]-S,_++;for(;u<a-f;u+=2,b+=s)P[b]=y*m+g>>14,y+=k[_]-k[x],P[b+o]=y*m+g>>14,y+=k[_+1]-k[x+1],_+=2,x+=2;for(;u<a-h;++u,b+=o)P[b]=y*m+g>>14,y+=k[_]-k[x],_++,x++;for(S=k[_-1];u<a;++u,b+=o)P[b]=y*m+g>>14,y+=S-k[x],x++;w+=a}jsfeat.cache.put_buffer(v)},gaussian_blur:function(e,t,n,r){void 0===r&&(r=0),void 0===n&&(n=0);var o,a,i=(n=0==n?2*Math.max(1,4*r+1-1e-8)+1|0:n)>>1,s=e.cols,c=e.rows,u=e.type,l=u&jsfeat.U8_t,d=e.data,p=t.data,h=n+Math.max(c,s)|0,f=jsfeat.cache.get_buffer(h<<2),g=jsfeat.cache.get_buffer(n<<2);l?(o=f.u8,a=g.i32):u&jsfeat.S32_t?(o=f.i32,a=g.f32):(o=f.f32,a=g.f32),jsfeat.math.get_gaussian_kernel(n,r,a,u),l?function(e,t,n,r,o,a,i,s){for(var c=0,u=0,l=0,d=0,p=0,h=0,f=0,g=0,m=0,v=a[0],y=0,b=r<<1,w=3*r,_=r<<2;c<o;++c){for(h=t[d],u=0;u<s;++u)e[u]=h;for(u=0;u<=r-2;u+=2)e[u+s]=t[d+u],e[u+s+1]=t[d+u+1];for(;u<r;++u)e[u+s]=t[d+u];for(h=t[d+r-1],u=r;u<s+r;++u)e[u+s]=h;for(u=0;u<=r-4;u+=4){for(h=e[u]*v,f=e[u+1]*v,g=e[u+2]*v,m=e[u+3]*v,l=1;l<i;++l)y=a[l],h+=e[l+u]*y,f+=e[l+u+1]*y,g+=e[l+u+2]*y,m+=e[l+u+3]*y;n[p+u]=h>>8,n[p+u+1]=f>>8,n[p+u+2]=g>>8,n[p+u+3]=m>>8}for(;u<r;++u){for(h=e[u]*v,l=1;l<i;++l)h+=e[l+u]*a[l];n[p+u]=h>>8}d+=r,p+=r}for(c=0;c<r;++c){for(h=n[c],u=0;u<s;++u)e[u]=h;for(l=c,u=0;u<=o-2;u+=2,l+=b)e[u+s]=n[l],e[u+s+1]=n[l+r];for(;u<o;++u,l+=r)e[u+s]=n[l];for(h=n[(o-1)*r+c],u=o;u<s+o;++u)e[u+s]=h;for(p=c,u=0;u<=o-4;u+=4,p+=_){for(h=e[u]*v,f=e[u+1]*v,g=e[u+2]*v,m=e[u+3]*v,l=1;l<i;++l)y=a[l],h+=e[l+u]*y,f+=e[l+u+1]*y,g+=e[l+u+2]*y,m+=e[l+u+3]*y;n[p]=h>>8,n[p+r]=f>>8,n[p+b]=g>>8,n[p+w]=m>>8}for(;u<o;++u,p+=r){for(h=e[u]*v,l=1;l<i;++l)h+=e[l+u]*a[l];n[p]=h>>8}}}(o,d,p,s,c,a,n,i):function(e,t,n,r,o,a,i,s){for(var c=0,u=0,l=0,d=0,p=0,h=0,f=0,g=0,m=0,v=a[0],y=0,b=r<<1,w=3*r,_=r<<2;c<o;++c){for(h=t[d],u=0;u<s;++u)e[u]=h;for(u=0;u<=r-2;u+=2)e[u+s]=t[d+u],e[u+s+1]=t[d+u+1];for(;u<r;++u)e[u+s]=t[d+u];for(h=t[d+r-1],u=r;u<s+r;++u)e[u+s]=h;for(u=0;u<=r-4;u+=4){for(h=e[u]*v,f=e[u+1]*v,g=e[u+2]*v,m=e[u+3]*v,l=1;l<i;++l)y=a[l],h+=e[l+u]*y,f+=e[l+u+1]*y,g+=e[l+u+2]*y,m+=e[l+u+3]*y;n[p+u]=h,n[p+u+1]=f,n[p+u+2]=g,n[p+u+3]=m}for(;u<r;++u){for(h=e[u]*v,l=1;l<i;++l)h+=e[l+u]*a[l];n[p+u]=h}d+=r,p+=r}for(c=0;c<r;++c){for(h=n[c],u=0;u<s;++u)e[u]=h;for(l=c,u=0;u<=o-2;u+=2,l+=b)e[u+s]=n[l],e[u+s+1]=n[l+r];for(;u<o;++u,l+=r)e[u+s]=n[l];for(h=n[(o-1)*r+c],u=o;u<s+o;++u)e[u+s]=h;for(p=c,u=0;u<=o-4;u+=4,p+=_){for(h=e[u]*v,f=e[u+1]*v,g=e[u+2]*v,m=e[u+3]*v,l=1;l<i;++l)y=a[l],h+=e[l+u]*y,f+=e[l+u+1]*y,g+=e[l+u+2]*y,m+=e[l+u+3]*y;n[p]=h,n[p+r]=f,n[p+b]=g,n[p+w]=m}for(;u<o;++u,p+=r){for(h=e[u]*v,l=1;l<i;++l)h+=e[l+u]*a[l];n[p]=h}}}(o,d,p,s,c,a,n,i),jsfeat.cache.put_buffer(f),jsfeat.cache.put_buffer(g)},pyrdown:function(e,t){var n=e.cols,r=n>>1,o=e.rows>>1,a=0,i=0,s=0,c=0,u=0,l=e.data,d=t.data;for(i=0;i<o;++i){for(c=s,a=0;a<=r-2;a+=2,u+=2,c+=4)d[u]=l[c]+l[c+1]+l[c+n]+l[c+n+1]+2>>2,d[u+1]=l[c+2]+l[c+3]+l[c+n+2]+l[c+n+3]+2>>2;for(;a<r;++a,++u,c+=2)d[u]=l[c]+l[c+1]+l[c+n]+l[c+n+1]+2>>2;s+=n<<1}},scharr_derivatives:function(e,t){var n,r,o,a,i,s,c,u,l=e.cols,d=e.rows,p=l<<1,h=0,f=0,g=0,m=0,v=0,y=0,b=0,w=e.data,_=jsfeat.cache.get_buffer(l+2<<2),x=jsfeat.cache.get_buffer(l+2<<2);for(e.type&jsfeat.U8_t||e.type&jsfeat.S32_t?(c=_.i32,u=x.i32):(c=_.f32,u=x.f32);f<d;++f,v+=l){for(m=(f>0?f-1:1)*l|0,y=(f<d-1?f+1:d-2)*l|0,b=f*p|0,h=0,g=1;h<=l-2;h+=2,g+=2)n=w[m+h],r=w[y+h],c[g]=3*(n+r)+10*w[v+h],u[g]=r-n,n=w[m+h+1],r=w[y+h+1],c[g+1]=3*(n+r)+10*w[v+h+1],u[g+1]=r-n;for(;h<l;++h,++g)n=w[m+h],r=w[y+h],c[g]=3*(n+r)+10*w[v+h],u[g]=r-n;for(h=l+1|0,c[0]=c[1],c[h]=c[l],u[0]=u[1],u[h]=u[l],h=0;h<=l-4;h+=4)n=u[h+2],r=u[h+1],o=u[h+3],a=u[h+4],i=c[h+2],s=c[h+3],t[b++]=i-c[h],t[b++]=3*(n+u[h])+10*r,t[b++]=s-c[h+1],t[b++]=3*(o+r)+10*n,t[b++]=c[h+4]-i,t[b++]=3*(a+n)+10*o,t[b++]=c[h+5]-s,t[b++]=3*(u[h+5]+o)+10*a;for(;h<l;++h)t[b++]=c[h+2]-c[h],t[b++]=3*(u[h+2]+u[h])+10*u[h+1]}jsfeat.cache.put_buffer(_),jsfeat.cache.put_buffer(x)},sobel_derivatives:function(e,t){var n,r,o,a,i,s,c,u,l=e.cols,d=e.rows,p=l<<1,h=0,f=0,g=0,m=0,v=0,y=0,b=0,w=e.data,_=jsfeat.cache.get_buffer(l+2<<2),x=jsfeat.cache.get_buffer(l+2<<2);for(e.type&jsfeat.U8_t||e.type&jsfeat.S32_t?(c=_.i32,u=x.i32):(c=_.f32,u=x.f32);f<d;++f,v+=l){for(m=(f>0?f-1:1)*l|0,y=(f<d-1?f+1:d-2)*l|0,b=f*p|0,h=0,g=1;h<=l-2;h+=2,g+=2)n=w[m+h],r=w[y+h],c[g]=n+r+2*w[v+h],u[g]=r-n,n=w[m+h+1],r=w[y+h+1],c[g+1]=n+r+2*w[v+h+1],u[g+1]=r-n;for(;h<l;++h,++g)n=w[m+h],r=w[y+h],c[g]=n+r+2*w[v+h],u[g]=r-n;for(h=l+1|0,c[0]=c[1],c[h]=c[l],u[0]=u[1],u[h]=u[l],h=0;h<=l-4;h+=4)n=u[h+2],r=u[h+1],o=u[h+3],a=u[h+4],i=c[h+2],s=c[h+3],t[b++]=i-c[h],t[b++]=n+u[h]+2*r,t[b++]=s-c[h+1],t[b++]=o+r+2*n,t[b++]=c[h+4]-i,t[b++]=a+n+2*o,t[b++]=c[h+5]-s,t[b++]=u[h+5]+o+2*a;for(;h<l;++h)t[b++]=c[h+2]-c[h],t[b++]=u[h+2]+u[h]+2*u[h+1]}jsfeat.cache.put_buffer(_),jsfeat.cache.put_buffer(x)},compute_integral_image:function(e,t,n,r){var o=0|e.cols,a=0|e.rows,i=e.data,s=o+1|0,c=0,u=0,l=0,d=0,p=0,h=0,f=0,g=0;if(t&&n){for(;p<s;++p)t[p]=0,n[p]=0;for(l=s+1|0,d=1,p=0,g=0;p<a;++p,++l,++d){for(c=u=0,h=0;h<=o-2;h+=2,g+=2,l+=2,d+=2)c+=f=i[g],u+=f*f,t[l]=t[d]+c,n[l]=n[d]+u,c+=f=i[g+1],u+=f*f,t[l+1]=t[d+1]+c,n[l+1]=n[d+1]+u;for(;h<o;++h,++g,++l,++d)c+=f=i[g],u+=f*f,t[l]=t[d]+c,n[l]=n[d]+u}}else if(t){for(;p<s;++p)t[p]=0;for(l=s+1|0,d=1,p=0,g=0;p<a;++p,++l,++d){for(c=0,h=0;h<=o-2;h+=2,g+=2,l+=2,d+=2)c+=i[g],t[l]=t[d]+c,c+=i[g+1],t[l+1]=t[d+1]+c;for(;h<o;++h,++g,++l,++d)c+=i[g],t[l]=t[d]+c}}else if(n){for(;p<s;++p)n[p]=0;for(l=s+1|0,d=1,p=0,g=0;p<a;++p,++l,++d){for(u=0,h=0;h<=o-2;h+=2,g+=2,l+=2,d+=2)u+=(f=i[g])*f,n[l]=n[d]+u,u+=(f=i[g+1])*f,n[l+1]=n[d+1]+u;for(;h<o;++h,++g,++l,++d)u+=(f=i[g])*f,n[l]=n[d]+u}}if(r){for(p=0;p<s;++p)r[p]=0;for(l=s+1|0,d=0,p=0,g=0;p<a;++p,++l,++d){for(h=0;h<=o-2;h+=2,g+=2,l+=2,d+=2)r[l]=i[g]+r[d],r[l+1]=i[g+1]+r[d+1];for(;h<o;++h,++g,++l,++d)r[l]=i[g]+r[d]}for(l=s+o|0,d=o,p=0;p<a;++p,l+=s,d+=s)r[l]+=r[d];for(h=o-1;h>0;--h)for(d=(l=h+a*s)-s,p=a;p>0;--p,l-=s,d-=s)r[l]+=r[d]+r[d+1]}},equalize_histogram:function(e,t){var n,r,o=e.cols,a=e.rows,i=e.data,s=t.data,c=o*a,u=0,l=0,d=jsfeat.cache.get_buffer(1024);for(n=d.i32;u<256;++u)n[u]=0;for(u=0;u<c;++u)++n[i[u]];for(l=n[0],u=1;u<256;++u)l=n[u]+=l;for(r=255/c,u=0;u<c;++u)s[u]=n[i[u]]*r+.5|0;jsfeat.cache.put_buffer(d)},canny:function(e,t,n,r){var o=e.cols,a=e.rows,i=(e.data,t.data),s=0,c=0,u=0,l=o<<1,d=0,p=0,h=0,f=0,g=0,m=0,v=0,y=0,b=jsfeat.cache.get_buffer(a*l<<2),w=jsfeat.cache.get_buffer(3*(o+2)<<2),_=jsfeat.cache.get_buffer((a+2)*(o+2)<<2),x=jsfeat.cache.get_buffer(a*o<<2),k=w.i32,P=_.i32,S=x.i32,C=b.i32,D=1,E=o+2+1|0,j=2*(o+2)+1|0,A=o+2|0,I=A+1|0,O=0;for(this.sobel_derivatives(e,C),n>r&&(s=n,n=r,r=s),s=3*(o+2)|0;--s>=0;)k[s]=0;for(s=(a+2)*(o+2)|0;--s>=0;)P[s]=0;for(;c<o;++c,u+=2)f=C[u],g=C[u+1],k[E+c]=(f^f>>31)-(f>>31)+((g^g>>31)-(g>>31));for(s=1;s<=a;++s,u+=l){if(s==a)for(c=j+o;--c>=j;)k[c]=0;else for(c=0;c<o;c++)f=C[u+(c<<1)],g=C[u+(c<<1)+1],k[j+c]=(f^f>>31)-(f>>31)+((g^g>>31)-(g>>31));for(d=u-l|0,P[I-1]=0,p=0,c=0;c<o;++c,d+=2){if((h=k[E+c])>n)if(m=(f=C[d])^(g=C[d+1]),g=(g^g>>31)-(g>>31)|0,y=(v=13573*(f=(f^f>>31)-(f>>31)|0))+(f+f<<15),(g<<=15)<v){if(h>k[E+c-1]&&h>=k[E+c+1]){h>r&&!p&&2!=P[I+c-A]?(P[I+c]=2,p=1,S[O++]=I+c):P[I+c]=1;continue}}else if(g>y){if(h>k[D+c]&&h>=k[j+c]){h>r&&!p&&2!=P[I+c-A]?(P[I+c]=2,p=1,S[O++]=I+c):P[I+c]=1;continue}}else if(h>k[D+c-(m=m<0?-1:1)]&&h>k[j+c+m]){h>r&&!p&&2!=P[I+c-A]?(P[I+c]=2,p=1,S[O++]=I+c):P[I+c]=1;continue}P[I+c]=0,p=0}P[I+o]=0,I+=A,c=D,D=E,E=j,j=c}for(c=I-A-1,s=0;s<A;++s,++c)P[c]=0;for(;O>0;)I=S[--O],1==P[I-=A+1]&&(P[I]=2,S[O++]=I),1==P[I+=1]&&(P[I]=2,S[O++]=I),1==P[I+=1]&&(P[I]=2,S[O++]=I),1==P[I+=A]&&(P[I]=2,S[O++]=I),1==P[I-=2]&&(P[I]=2,S[O++]=I),1==P[I+=A]&&(P[I]=2,S[O++]=I),1==P[I+=1]&&(P[I]=2,S[O++]=I),1==P[I+=1]&&(P[I]=2,S[O++]=I);for(I=A+1,D=0,s=0;s<a;++s,I+=A)for(c=0;c<o;++c)i[D++]=255*(2==P[I+c]);jsfeat.cache.put_buffer(b),jsfeat.cache.put_buffer(w),jsfeat.cache.put_buffer(_),jsfeat.cache.put_buffer(x)},warp_perspective:function(e,t,n,r){void 0===r&&(r=0);for(var o=e.cols,a=e.rows,i=t.cols,s=t.rows,c=e.data,u=t.data,l=0,d=0,p=0,h=0,f=0,g=0,m=0,v=0,y=0,b=0,w=0,_=0,x=0,k=0,P=0,S=n[0],C=n[1],D=n[2],E=n[3],j=n[4],A=n[5],I=n[6],O=n[7],q=n[8],R=0;d<s;++d)for(v=C*d+D,y=j*d+A,b=O*d+q,l=0;l<i;++l,++R,v+=S,y+=E,b+=I)h=0|(g=v*(w=1/b)),f=0|(m=y*w),g>0&&m>0&&h<o-1&&f<a-1?(_=Math.max(g-h,0),x=Math.max(m-f,0),k=c[p=o*f+h]+_*(c[p+1]-c[p]),P=c[p+o]+_*(c[p+o+1]-c[p+o]),u[R]=k+x*(P-k)):u[R]=r},warp_affine:function(e,t,n,r){void 0===r&&(r=0);for(var o=e.cols,a=e.rows,i=t.cols,s=t.rows,c=e.data,u=t.data,l=0,d=0,p=0,h=0,f=0,g=0,m=0,v=0,y=0,b=0,w=0,_=n[0],x=n[1],k=n[2],P=n[3],S=n[4],C=n[5],D=0;d<s;++d)for(g=x*d+k,m=S*d+C,l=0;l<i;++l,++D,g+=_,m+=P)h=0|g,f=0|m,g>0&&m>0&&h<o-1&&f<a-1?(v=Math.max(g-h,0),y=Math.max(m-f,0),b=c[p=o*f+h]+v*(c[p+1]-c[p]),w=c[p+o]+v*(c[p+o+1]-c[p+o]),u[D]=b+y*(w-b)):u[D]=r}};e.imgproc=t}(jsfeat),function(e){var t=function(){var e=new Int32Array([0,3,1,3,2,2,3,1,3,0,3,-1,2,-2,1,-3,0,-3,-1,-3,-2,-2,-3,-1,-3,0,-3,1,-2,2,-1,3]),t=new Uint8Array(512),n=new Int32Array(25),r=new Int32Array(25),o=function(e,t,n,r,o){for(var a=0,i=e[t],s=o,c=0,u=0,l=0;a<25;++a)r[a]=i-e[t+n[a]];for(a=0;a<16;a+=2)c=Math.min(r[a+1],r[a+2]),(c=Math.min(c,r[a+3]))<=s||(c=Math.min(c,r[a+4]),c=Math.min(c,r[a+5]),c=Math.min(c,r[a+6]),c=Math.min(c,r[a+7]),c=Math.min(c,r[a+8]),s=Math.max(s,Math.min(c,r[a])),s=Math.max(s,Math.min(c,r[a+9])));for(u=-s,a=0;a<16;a+=2)l=Math.max(r[a+1],r[a+2]),l=Math.max(l,r[a+3]),l=Math.max(l,r[a+4]),(l=Math.max(l,r[a+5]))>=u||(l=Math.max(l,r[a+6]),l=Math.max(l,r[a+7]),l=Math.max(l,r[a+8]),u=Math.min(u,Math.max(l,r[a])),u=Math.min(u,Math.max(l,r[a+9])));return-u-1},a=20;return{set_threshold:function(e){a=Math.min(Math.max(e,0),255);for(var n=-255;n<=255;++n)t[n+255]=n<-a?1:n>a?2:0;return a},detect:function(i,s,c){void 0===c&&(c=3);var u,l=i.data,d=i.cols,p=i.rows,h=0,f=0,g=0,m=0,v=0,y=jsfeat.cache.get_buffer(3*d),b=jsfeat.cache.get_buffer(3*(d+1)<<2),w=y.u8,_=b.i32,x=n,k=r,P=Math.max(3,c),S=Math.min(p-2,p-c),C=Math.max(3,c),D=Math.min(d-3,d-c),E=0,j=0,A=o,I=t,O=a,q=0,R=0,T=0,B=0,M=0,N=0,L=0,F=0,G=0,U=0,z=0,W=0;!function(t,n,r){for(var o=0,a=e;o<16;++o)t[o]=a[o<<1]+a[1+(o<<1)]*n;for(;o<25;++o)t[o]=t[o-16]}(x,d);var $=x[0],V=x[1],H=x[2],J=x[3],Q=x[4],X=x[5],Y=x[6],K=x[7],Z=x[8],ee=x[9],te=x[10],ne=x[11],re=x[12],oe=x[13],ae=x[14],ie=x[15];for(h=0;h<3*d;++h)w[h]=0;for(h=P;h<S;++h){for(L=h*d+C|0,N=(v=(h-3)%3)*d|0,M=v*(d+1)|0,f=0;f<d;++f)w[N+f]=0;if(B=0,h<S-1)for(f=C;f<D;++f,++L)if(0!=(T=I[(R=255-(q=l[L]))+l[L+$]]|I[R+l[L+Z]])&&(T&=I[R+l[L+H]]|I[R+l[L+te]],T&=I[R+l[L+Q]]|I[R+l[L+re]],0!=(T&=I[R+l[L+Y]]|I[R+l[L+ae]]))){if(T&=I[R+l[L+V]]|I[R+l[L+ee]],T&=I[R+l[L+J]]|I[R+l[L+ne]],T&=I[R+l[L+X]]|I[R+l[L+oe]],1&(T&=I[R+l[L+K]]|I[R+l[L+ie]]))for(m=q-O,E=0,g=0;g<25;++g)if(l[L+x[g]]<m){if(++E>8){_[M+ ++B]=f,w[N+f]=A(l,L,x,k,O);break}}else E=0;if(2&T)for(m=q+O,E=0,g=0;g<25;++g)if(l[L+x[g]]>m){if(++E>8){_[M+ ++B]=f,w[N+f]=A(l,L,x,k,O);break}}else E=0}if(_[M+d]=B,h!=P)for(F=(v=(h-4+3)%3)*d|0,M=v*(d+1)|0,G=(v=(h-5+3)%3)*d|0,B=_[M+d],g=0;g<B;++g)U=(f=_[M+g])+1|0,z=f-1|0,(W=w[F+f])>w[F+U]&&W>w[F+z]&&W>w[G+z]&&W>w[G+f]&&W>w[G+U]&&W>w[N+z]&&W>w[N+f]&&W>w[N+U]&&((u=s[j]).x=f,u.y=h-1,u.score=W,j++)}return jsfeat.cache.put_buffer(y),jsfeat.cache.put_buffer(b),j}}}();e.fast_corners=t,t.set_threshold(20)}(jsfeat),function(e){var t=function(){var e=function(e,t,n,r,o,a,i){var s=-2*e[t]+e[t+r]+e[t-r],c=-2*e[t]+e[t+o]+e[t-o],u=e[t+a]+e[t-a]-e[t+i]-e[t-i],l=0|Math.sqrt((s-c)*(s-c)+4*u*u);return Math.min(Math.abs(n-l),Math.abs(-(n+l)))};return{laplacian_threshold:30,min_eigen_value_threshold:25,detect:function(t,n){var r,o=0,a=0,i=t.cols,s=t.rows,c=t.data,u=5*i|0,l=3+3*i|0,d=3-3*i|0,p=jsfeat.cache.get_buffer(i*s<<2),h=p.i32,f=0,g=0,m=0,v=0,y=0,b=this.laplacian_threshold,w=this.min_eigen_value_threshold;for(o=i*s;--o>=0;)h[o]=0;for(function(e,t,n,r,o,a){var i=0,s=0,c=5*n|0,u=c;for(i=5;i<r-5;++i,u=c+=n)for(s=n-5;s>=5;--s)t[u]=-4*e[u]+e[u+5]+e[u-5]+e[u+a]+e[u-a],++u}(c,h,i,s,0,u),g=i+1|0,a=1;a<s-1;++a,g+=i)for(o=1,m=g;o<i-1;++o,++m)((f=h[m])<-b&&f<h[m-1]&&f<h[m+1]&&f<h[m-i]&&f<h[m+i]&&f<h[m-i-1]&&f<h[m+i-1]&&f<h[m-i+1]&&f<h[m+i+1]||f>b&&f>h[m-1]&&f>h[m+1]&&f>h[m-i]&&f>h[m+i]&&f>h[m-i-1]&&f>h[m+i-1]&&f>h[m-i+1]&&f>h[m+i+1])&&(v=e(c,m,f,5,u,l,d))>w&&((r=n[y]).x=o,r.y=a,r.score=v,++y,++o,++m);return jsfeat.cache.put_buffer(p),y}}}();e.yape06=t}(jsfeat),function(e){var t=function(){var e=function(e,t,n){var r=0;return 0!=e[t+1]&&r++,0!=e[t-1]&&r++,0!=e[t+n]&&r++,0!=e[t+n+1]&&r++,0!=e[t+n-1]&&r++,0!=e[t-n]&&r++,0!=e[t-n+1]&&r++,0!=e[t-n-1]&&r++,r},t=function(e,t,n,r,o){var a,i;if(n>0)for(t-=r*o,i=-o;i<=o;++i){for(a=-o;a<=o;++a)if(e[t+a]>n)return!1;t+=r}else for(t-=r*o,i=-o;i<=o;++i){for(a=-o;a<=o;++a)if(e[t+a]<n)return!1;t+=r}return!0},n=function(e,t,n,r,o,a,i,s){var c=0,u=0,l=i-1|0,d=0,p=0,h=0,f=0,g=0;if((d=e[t+a[u]])<=o)if(d>=r)if((p=e[t+a[l]])<=o){if(p>=r)return void(n[t]=0);if((h=e[t+a[++l]])>o)if((f=e[t+a[++l]])>o)g=3;else{if(!(f<r))return void(n[t]=0);g=6}else if((f=e[t+a[++l]])>o)g=7;else{if(!(f<r))return void(n[t]=0);g=2}}else if((h=e[t+a[++l]])>o)if((f=e[t+a[++l]])>o)g=3;else{if(!(f<r))return void(n[t]=0);g=6}else{if(!(h<r))return void(n[t]=0);if((f=e[t+a[++l]])>o)g=7;else{if(!(f<r))return void(n[t]=0);g=2}}else{if((p=e[t+a[l]])>o)return void(n[t]=0);if((h=e[t+a[++l]])>o)return void(n[t]=0);if((f=e[t+a[++l]])>o)return void(n[t]=0);g=1}else{if((p=e[t+a[l]])<r)return void(n[t]=0);if((h=e[t+a[++l]])<r)return void(n[t]=0);if((f=e[t+a[++l]])<r)return void(n[t]=0);g=0}for(u=1;u<=i;u++)switch(d=e[t+a[u]],g){case 0:if(d>o){if(h=f,(f=e[t+a[++l]])<r)return void(n[t]=0);c-=d+h,g=0;break}if(d<r){if(h>o)return void(n[t]=0);if(f>o)return void(n[t]=0);if(h=f,(f=e[t+a[++l]])>o)return void(n[t]=0);c-=d+h,g=8;break}if(h<=o)return void(n[t]=0);if(f<=o)return void(n[t]=0);if(h=f,(f=e[t+a[++l]])>o){c-=d+h,g=3;break}if(f<r){c-=d+h,g=6;break}return void(n[t]=0);case 1:if(d<r){if(h=f,(f=e[t+a[++l]])>o)return void(n[t]=0);c-=d+h,g=1;break}if(d>o){if(h<r)return void(n[t]=0);if(f<r)return void(n[t]=0);if(h=f,(f=e[t+a[++l]])<r)return void(n[t]=0);c-=d+h,g=9;break}if(h>=r)return void(n[t]=0);if(f>=r)return void(n[t]=0);if(h=f,(f=e[t+a[++l]])<r){c-=d+h,g=2;break}if(f>o){c-=d+h,g=7;break}return void(n[t]=0);case 2:if(d>o)return void(n[t]=0);if(h=f,f=e[t+a[++l]],d<r){if(f>o)return void(n[t]=0);c-=d+h,g=4;break}if(f>o){c-=d+h,g=7;break}if(f<r){c-=d+h,g=2;break}return void(n[t]=0);case 3:if(d<r)return void(n[t]=0);if(h=f,f=e[t+a[++l]],d>o){if(f<r)return void(n[t]=0);c-=d+h,g=5;break}if(f>o){c-=d+h,g=3;break}if(f<r){c-=d+h,g=6;break}return void(n[t]=0);case 4:if(d>o)return void(n[t]=0);if(d<r){if(h=f,(f=e[t+a[++l]])>o)return void(n[t]=0);c-=d+h,g=1;break}if(f>=r)return void(n[t]=0);if(h=f,(f=e[t+a[++l]])<r){c-=d+h,g=2;break}if(f>o){c-=d+h,g=7;break}return void(n[t]=0);case 5:if(d<r)return void(n[t]=0);if(d>o){if(h=f,(f=e[t+a[++l]])<r)return void(n[t]=0);c-=d+h,g=0;break}if(f<=o)return void(n[t]=0);if(h=f,(f=e[t+a[++l]])>o){c-=d+h,g=3;break}if(f<r){c-=d+h,g=6;break}return void(n[t]=0);case 7:if(d>o)return void(n[t]=0);if(d<r)return void(n[t]=0);if(h=f,(f=e[t+a[++l]])>o){c-=d+h,g=3;break}if(f<r){c-=d+h,g=6;break}return void(n[t]=0);case 6:if(d>o)return void(n[t]=0);if(d<r)return void(n[t]=0);if(h=f,(f=e[t+a[++l]])<r){c-=d+h,g=2;break}if(f>o){c-=d+h,g=7;break}return void(n[t]=0);case 8:if(d>o){if(f<r)return void(n[t]=0);if(h=f,(f=e[t+a[++l]])<r)return void(n[t]=0);c-=d+h,g=9;break}if(d<r){if(h=f,(f=e[t+a[++l]])>o)return void(n[t]=0);c-=d+h,g=1;break}return void(n[t]=0);case 9:if(d<r){if(f>o)return void(n[t]=0);if(h=f,(f=e[t+a[++l]])>o)return void(n[t]=0);c-=d+h,g=8;break}if(d>o){if(h=f,(f=e[t+a[++l]])<r)return void(n[t]=0);c-=d+h,g=0;break}return void(n[t]=0)}n[t]=c+s*e[t]},r=function(e,t,n){this.dirs=new Int32Array(1024),this.dirs_count=0|function(e,t,n){var r,o,a=0;for(r=n,o=0;o<r;o++,a++)r=Math.sqrt(n*n-o*o)+.5|0,t[a]=r+e*o;for(r--;r<o&&r>=0;r--,a++)o=Math.sqrt(n*n-r*r)+.5|0,t[a]=r+e*o;for(;-r<o;r--,a++)o=Math.sqrt(n*n-r*r)+.5|0,t[a]=r+e*o;for(o--;o>=0;o--,a++)r=-Math.sqrt(n*n-o*o)-.5|0,t[a]=r+e*o;for(;o>r;o--,a++)r=-Math.sqrt(n*n-o*o)-.5|0,t[a]=r+e*o;for(r++;r<=0;r++,a++)o=-Math.sqrt(n*n-r*r)-.5|0,t[a]=r+e*o;for(;r<-o;r++,a++)o=-Math.sqrt(n*n-r*r)-.5|0,t[a]=r+e*o;for(o++;o<0;o++,a++)r=Math.sqrt(n*n-o*o)+.5|0,t[a]=r+e*o;return t[a]=t[0],t[a+1]=t[1],a}(e,this.dirs,n),this.scores=new Int32Array(e*t),this.radius=0|n};return{level_tables:[],tau:7,init:function(e,t,n,o){var a;for(void 0===o&&(o=1),n=Math.min(n,7),n=Math.max(n,3),a=0;a<o;++a)this.level_tables[a]=new r(e>>a,t>>a,n)},detect:function(r,o,a){void 0===a&&(a=4);var i,s=this.level_tables[0],c=0|s.radius,u=c-1|0,l=s.dirs,d=0|s.dirs_count,p=d>>1,h=r.data,f=0|r.cols,g=0|r.rows,m=f>>1,v=s.scores,y=0,b=0,w=0,_=0,x=0,k=0,P=0,S=0,C=0|this.tau,D=0,E=0|Math.max(c+1,a),j=0|Math.max(c+1,a),A=0|Math.min(f-c-2,f-a),I=0|Math.min(g-c-2,g-a);for(w=j*f+E|0,b=j;b<I;++b,w+=f)for(y=E,_=w;y<A;++y,++_)x=h[_]+C,(k=h[_]-C)<h[_+c]&&h[_+c]<x&&k<h[_-c]&&h[_-c]<x?v[_]=0:n(h,_,v,k,x,l,p,d);for(w=j*f+E|0,b=j;b<I;++b,w+=f)for(y=E,_=w;y<A;++y,++_)S=v[_],(P=Math.abs(S))<5?(++y,++_):e(v,_,f)>=3&&t(v,_,S,m,c)&&((i=o[D]).x=y,i.y=b,i.score=P,++D,y+=u,_+=u);return D}}}();e.yape=t}(jsfeat),function(e){var t=function(){var e=jsfeat.imgproc.scharr_derivatives;return{track:function(t,n,r,o,a,i,s,c,u,l){void 0===s&&(s=30),void 0===c&&(c=new Uint8Array(a)),void 0===u&&(u=.01),void 0===l&&(l=1e-4);var d=.5*(i-1),p=i*i|0,h=p<<1,f=t.data,g=n.data,m=f[0].data,v=g[0].data,y=f[0].cols,b=f[0].rows,w=0,_=0,x=jsfeat.cache.get_buffer(p<<2),k=jsfeat.cache.get_buffer(h<<2),P=jsfeat.cache.get_buffer(b*(y<<1)<<2),S=x.i32,C=k.i32,D=P.i32,E=0,j=0,A=0,I=0,O=0,q=0,R=0,T=0,B=0,M=0,N=0,L=0,F=0,G=0,U=0,z=0,W=0,$=0,V=0,H=0,J=0,Q=0,X=0,Y=0,K=0,Z=0,ee=0,te=0,ne=0,re=0,oe=0,ae=0,ie=16384,se=1/(1<<20),ce=0,ue=0,le=0,de=0,pe=0,he=0,fe=0,ge=0,me=0,ve=0,ye=0;for(u*=u;H<a;++H)c[H]=1;var be=t.levels-1|0;for(Y=be;Y>=0;--Y)for(R=1/(1<<Y),_=b>>Y,E=(w=y>>Y)<<1,m=f[Y].data,v=g[Y].data,ee=w-i|0,te=_-i|0,e(f[Y],D),K=0;K<a;++K)if(J=1+(H=K<<1),T=r[H]*R,B=r[J]*R,Y==be?(M=T,N=B):(M=2*o[H],N=2*o[J]),o[H]=M,o[J]=N,0==(Q=(z=0|(T-=d))<=0|z>=ee|(W=0|(B-=d))<=0|W>=te)){for(de=ie-(ce=(1-(ne=T-z))*(1-(re=B-W))*ie+.5|0)-(ue=ne*(1-re)*ie+.5|0)-(le=(1-ne)*re*ie+.5|0),ge=0,me=0,ve=0,X=0;X<i;++X)for(A=(j=(X+W)*w+z|0)<<1,O=(I=X*i|0)<<1,Q=0;Q<i;++Q,++j,++I,A+=2)pe=256+(pe=m[j]*ce+m[j+1]*ue+m[j+w]*le+m[j+w+1]*de)>>9,he=8192+(he=D[A]*ce+D[A+2]*ue+D[A+E]*le+D[A+E+2]*de)>>14,fe=8192+(fe=D[A+1]*ce+D[A+3]*ue+D[A+E+1]*le+D[A+E+3]*de)>>14,S[I]=pe,C[O++]=he,C[O++]=fe,ge+=he*he,me+=he*fe,ve+=fe*fe;if(ye=(ge*=se)*(ve*=se)-(me*=se)*me,(ve+ge-Math.sqrt((ge-ve)*(ge-ve)+4*me*me))/h<l||ye<1.1920929e-7)0==Y&&(c[K]=0);else for(ye=1/ye,M-=d,N-=d,L=0,F=0,Z=0;Z<s;++Z){if(0!=(Q=($=0|M)<=0|$>=ee|(V=0|N)<=0|V>=te)){0==Y&&(c[K]=0);break}for(de=ie-(ce=(1-(ne=M-$))*(1-(re=N-V))*ie+.5|0)-(ue=ne*(1-re)*ie+.5|0)-(le=(1-ne)*re*ie+.5|0),oe=0,ae=0,X=0;X<i;++X)for(q=(X+V)*w+$|0,O=(I=X*i|0)<<1,Q=0;Q<i;++Q,++q,++I)pe=256+(pe=v[q]*ce+v[q+1]*ue+v[q+w]*le+v[q+w+1]*de)>>9,oe+=(pe-=S[I])*C[O++],ae+=pe*C[O++];if(M+=G=(me*(ae*=se)-ve*(oe*=se))*ye,N+=U=(me*oe-ge*ae)*ye,o[H]=M+d,o[J]=N+d,G*G+U*U<=u)break;if(Z>0&&Math.abs(G+L)<.01&&Math.abs(U+F)<.01){o[H]-=.5*G,o[J]-=.5*U;break}L=G,F=U}}else 0==Y&&(c[K]=0);jsfeat.cache.put_buffer(x),jsfeat.cache.put_buffer(k),jsfeat.cache.put_buffer(P)}}}();e.optical_flow_lk=t}(jsfeat),function(e){var t=function(){var e=function(e,t){var n=.25*e.width+.5|0;return t.x<=e.x+n&&t.x>=e.x-n&&t.y<=e.y+n&&t.y>=e.y-n&&t.width<=1.5*e.width+.5|0&&1.5*t.width+.5|0>=e.width};return{edges_density:.07,detect_single_scale:function(e,t,n,r,o,a,i,s){var c,u,l,d,p,h,f,g,m,v,y,b,w,_,x,k,P,S,C,D,E,j,A,I,O,q=s.size[0]*i|0,R=s.size[1]*i|0,T=.5*i+1.5|0,B=T,M=o-q|0,N=a-R|0,L=o+1|0,F=1/(q*R),G=!0,U=0,z=q,W=R*L,$=W+q,V=q*R*255*this.edges_density|0,H=[];for(p=0;p<N;p+=B)for(U=p*L,d=0;d<M;d+=T,U+=T)if(h=e[U]-e[U+z]-e[U+W]+e[U+$],r&&(r[U]-r[U+z]-r[U+W]+r[U+$]<V||h<20))d+=T,U+=T;else{for(h*=F,g=(f=(t[U]-t[U+z]-t[U+W]+t[U+$])*F-h*h)>0?Math.sqrt(f):1,w=(m=s.complexClassifiers).length,G=!0,c=0;c<w;++c){for(k=(v=m[c]).threshold,_=(y=v.simpleClassifiers).length,P=0,u=0;u<_;++u){if(S=0,x=(D=(b=y[u]).features).length,1===b.tilted)for(l=0;l<x;++l)E=~~(d+(C=D[l])[0]*i)+~~(p+C[1]*i)*L,j=(I=~~(C[2]*i))*L,A=(O=~~(C[3]*i))*L,S+=(n[E]-n[E+I+j]-n[E-O+A]+n[E+I-O+j+A])*C[4];else for(l=0;l<x;++l)E=~~(d+(C=D[l])[0]*i)+~~(p+C[1]*i)*L,I=~~(C[2]*i),A=(O=~~(C[3]*i))*L,S+=(e[E]-e[E+I]-e[E+A]+e[E+A+I])*C[4];P+=S*F<b.threshold*g?b.left_val:b.right_val}if(P<k){G=!1;break}}G&&(H.push({x:d,y:p,width:q,height:R,neighbor:1,confidence:P}),d+=T,U+=T)}return H},detect_multi_scale:function(e,t,n,r,o,a,i,s,c){void 0===s&&(s=1.2),void 0===c&&(c=1);for(var u=i.size[0],l=i.size[1],d=[];c*u<o&&c*l<a;)d=d.concat(this.detect_single_scale(e,t,n,r,o,a,c,i)),c*=s;return d},group_rectangles:function(t,n){void 0===n&&(n=1);var r,o,a=t.length,i=[];for(r=0;r<a;++r)i[r]={parent:-1,element:t[r],rank:0};for(r=0;r<a;++r)if(i[r].element){for(var s=r;-1!=i[s].parent;)s=i[s].parent;for(o=0;o<a;++o)if(r!=o&&i[o].element&&e(i[r].element,i[o].element)){for(var c=o;-1!=i[c].parent;)c=i[c].parent;if(c!=s){i[s].rank>i[c].rank?i[c].parent=s:(i[s].parent=c,i[s].rank==i[c].rank&&i[c].rank++,s=c);for(var u,l=o;-1!=i[l].parent;)u=l,l=i[l].parent,i[u].parent=s;for(l=r;-1!=i[l].parent;)u=l,l=i[l].parent,i[u].parent=s}}}var d=[],p=0;for(r=0;r<a;r++){o=-1;var h=r;if(i[h].element){for(;-1!=i[h].parent;)h=i[h].parent;i[h].rank>=0&&(i[h].rank=~p++),o=~i[h].rank}d[r]=o}var f=[];for(r=0;r<p+1;++r)f[r]={neighbors:0,x:0,y:0,width:0,height:0,confidence:0};for(r=0;r<a;++r){var g=t[r],m=d[r];0==f[m].neighbors&&(f[m].confidence=g.confidence),++f[m].neighbors,f[m].x+=g.x,f[m].y+=g.y,f[m].width+=g.width,f[m].height+=g.height,f[m].confidence=Math.max(f[m].confidence,g.confidence)}var v=[];for(r=0;r<p;++r)(a=f[r].neighbors)>=n&&v.push({x:(2*f[r].x+a)/(2*a),y:(2*f[r].y+a)/(2*a),width:(2*f[r].width+a)/(2*a),height:(2*f[r].height+a)/(2*a),neighbors:f[r].neighbors,confidence:f[r].confidence});var y=[];for(a=v.length,r=0;r<a;++r){g=v[r];var b=!0;for(o=0;o<a;++o){var w=v[o],_=.25*w.width+.5|0;if(r!=o&&g.x>=w.x-_&&g.y>=w.y-_&&g.x+g.width<=w.x+w.width+_&&g.y+g.height<=w.y+w.height+_&&(w.neighbors>Math.max(3,g.neighbors)||g.neighbors<3)){b=!1;break}}b&&y.push(g)}return y}}}();e.haar=t}(jsfeat),function(e){var t=function(){var e=function(e,t){var n=.25*e.width+.5|0;return t.x<=e.x+n&&t.x>=e.x-n&&t.y<=e.y+n&&t.y>=e.y-n&&t.width<=1.5*e.width+.5|0&&1.5*t.width+.5|0>=e.width};return{interval:4,scale:1.1486,next:5,scale_to:1,prepare_cascade:function(e){for(var t=e.stage_classifier.length,n=0;n<t;n++)for(var r=e.stage_classifier[n].feature,o=e.stage_classifier[n].count,a=e.stage_classifier[n]._feature=new Array(o),i=0;i<o;i++)a[i]={size:r[i].size,px:new Array(r[i].size),pz:new Array(r[i].size),nx:new Array(r[i].size),nz:new Array(r[i].size)}},build_pyramid:function(e,t,n,r,o){if(void 0===r&&(r=4),void 0===o&&(o=!0),o){var a=e.getContext("2d"),i=e.width*e.height,s=a.getImageData(0,0,e.width,e.height),c=s.data,u=new Uint32Array(c.buffer),l=jsfeat.cache.get_buffer(i),d=l.u8;jsfeat.imgproc.grayscale(c,d);for(var p=i,h=0;--p>=0;)h=d[p],u[p]=-16777216|h<<16|h<<8|h;a.putImageData(s,0,0),jsfeat.cache.put_buffer(l)}this.interval=r,this.scale=Math.pow(2,1/(this.interval+1)),this.next=this.interval+1|0,this.scale_to=Math.log(Math.min(e.width/t,e.height/n))/Math.log(this.scale)|0;var f=document.createElement("canvas");f.width=e.width,f.height=e.height;var g,m,v=f.getContext("2d"),y=new Array(4*(this.scale_to+2*this.next));for(y[0]={width:e.width,height:e.height,data:e.getContext("2d").getImageData(0,0,e.width,e.height).data},p=1;p<=this.interval;++p)g=e.width/Math.pow(this.scale,p)|0,m=e.height/Math.pow(this.scale,p)|0,v.drawImage(e,0,0,e.width,e.height,0,0,g,m),y[4*p]={width:g,height:m,data:v.getImageData(0,0,g,m).data};for(p=this.next;p<this.scale_to+2*this.next;++p)g=y[4*p-4*this.next].width>>1,m=y[4*p-4*this.next].height>>1,v.drawImage(e,0,0,e.width,e.height,0,0,g,m),y[4*p]={width:g,height:m,data:v.getImageData(0,0,g,m).data};for(p=2*this.next;p<this.scale_to+2*this.next;++p)g=y[4*p-4*this.next].width>>1,m=y[4*p-4*this.next].height>>1,v.drawImage(e,1,0,e.width-1,e.height,0,0,g-2,m),y[4*p+1]={width:g,height:m,data:v.getImageData(0,0,g,m).data},v.drawImage(e,0,1,e.width,e.height-1,0,0,g,m-2),y[4*p+2]={width:g,height:m,data:v.getImageData(0,0,g,m).data},v.drawImage(e,1,1,e.width-1,e.height-1,0,0,g-2,m-2),y[4*p+3]={width:g,height:m,data:v.getImageData(0,0,g,m).data};return y},detect:function(e,t){this.interval;var n,r,o,a,i,s=this.scale,c=this.next,u=this.scale_to,l=0,d=0,p=0,h=0,f=0,g=0,m=0,v=0,y=0,b=0,w=0,_=0,x=0,k=0,P=0,S=0,C=0,D=0,E=!0,j=!0,A=1,I=1,O=[0,1,0,1],q=[0,0,1,1],R=[],T=[],B=[0,0,0],M=[0,0,0],N=[0,0,0];for(l=0;l<u;l++){for(S=e[(P=l<<2)+(c<<3)].width-(t.width>>2),C=e[P+(c<<3)].height-(t.height>>2),M[0]=e[P].width<<2,M[1]=e[P+(c<<2)].width<<2,M[2]=e[P+(c<<3)].width<<2,N[0]=(e[P].width<<4)-(S<<4),N[1]=(e[P+(c<<2)].width<<3)-(S<<3),N[2]=(e[P+(c<<3)].width<<2)-(S<<2),v=t.stage_classifier.length,d=0;d<v;d++)for(o=t.stage_classifier[d].feature,r=t.stage_classifier[d]._feature,y=t.stage_classifier[d].count,p=0;p<y;p++)for(a=r[p],b=0|(i=o[p]).size,m=0;m<b;m++)a.px[m]=(i.px[m]<<2)+i.py[m]*M[i.pz[m]],a.pz[m]=i.pz[m],a.nx[m]=(i.nx[m]<<2)+i.ny[m]*M[i.nz[m]],a.nz[m]=i.nz[m];for(T[0]=e[P].data,T[1]=e[P+(c<<2)].data,m=0;m<4;m++)for(T[2]=e[P+(c<<3)+m].data,B[0]=(O[m]<<3)+q[m]*(e[P].width<<3),B[1]=(O[m]<<2)+q[m]*(e[P+(c<<2)].width<<2),B[2]=0,g=0;g<C;g++){for(f=0;f<S;f++){for(D=0,E=!0,v=t.stage_classifier.length,d=0;d<v;d++){for(D=0,n=t.stage_classifier[d].alpha,r=t.stage_classifier[d]._feature,y=t.stage_classifier[d].count,p=0;p<y;p++)if((_=T[(a=r[p]).pz[0]][B[a.pz[0]]+a.px[0]])<=(x=T[a.nz[0]][B[a.nz[0]]+a.nx[0]]))D+=n[p<<1];else{for(j=!0,b=a.size,k=0;k<b;k++){if(a.pz[k]>=0&&(w=T[a.pz[k]][B[a.pz[k]]+a.px[k]])<_){if(w<=x){j=!1;break}_=w}if(a.nz[k]>=0&&(h=T[a.nz[k]][B[a.nz[k]]+a.nx[k]])>x){if(_<=h){j=!1;break}x=h}}D+=j?n[1+(p<<1)]:n[p<<1]}if(D<t.stage_classifier[d].threshold){E=!1;break}}E&&R.push({x:(4*f+2*O[m])*A,y:(4*g+2*q[m])*I,width:t.width*A,height:t.height*I,neighbor:1,confidence:D}),B[0]+=16,B[1]+=8,B[2]+=4}B[0]+=N[0],B[1]+=N[1],B[2]+=N[2]}A*=s,I*=s}return R},group_rectangles:function(t,n){void 0===n&&(n=1);var r,o,a=t.length,i=[];for(r=0;r<a;++r)i[r]={parent:-1,element:t[r],rank:0};for(r=0;r<a;++r)if(i[r].element){for(var s=r;-1!=i[s].parent;)s=i[s].parent;for(o=0;o<a;++o)if(r!=o&&i[o].element&&e(i[r].element,i[o].element)){for(var c=o;-1!=i[c].parent;)c=i[c].parent;if(c!=s){i[s].rank>i[c].rank?i[c].parent=s:(i[s].parent=c,i[s].rank==i[c].rank&&i[c].rank++,s=c);for(var u,l=o;-1!=i[l].parent;)u=l,l=i[l].parent,i[u].parent=s;for(l=r;-1!=i[l].parent;)u=l,l=i[l].parent,i[u].parent=s}}}var d=[],p=0;for(r=0;r<a;r++){o=-1;var h=r;if(i[h].element){for(;-1!=i[h].parent;)h=i[h].parent;i[h].rank>=0&&(i[h].rank=~p++),o=~i[h].rank}d[r]=o}var f=[];for(r=0;r<p+1;++r)f[r]={neighbors:0,x:0,y:0,width:0,height:0,confidence:0};for(r=0;r<a;++r){var g=t[r],m=d[r];0==f[m].neighbors&&(f[m].confidence=g.confidence),++f[m].neighbors,f[m].x+=g.x,f[m].y+=g.y,f[m].width+=g.width,f[m].height+=g.height,f[m].confidence=Math.max(f[m].confidence,g.confidence)}var v=[];for(r=0;r<p;++r)(a=f[r].neighbors)>=n&&v.push({x:(2*f[r].x+a)/(2*a),y:(2*f[r].y+a)/(2*a),width:(2*f[r].width+a)/(2*a),height:(2*f[r].height+a)/(2*a),neighbors:f[r].neighbors,confidence:f[r].confidence});var y=[];for(a=v.length,r=0;r<a;++r){g=v[r];var b=!0;for(o=0;o<a;++o){var w=v[o],_=.25*w.width+.5|0;if(r!=o&&g.x>=w.x-_&&g.y>=w.y-_&&g.x+g.width<=w.x+w.width+_&&g.y+g.height<=w.y+w.height+_&&(w.neighbors>Math.max(3,g.neighbors)||g.neighbors<3)){b=!1;break}}b&&y.push(g)}return y}}}();e.bbf=t}(jsfeat),global=jsfeat.haar,global.frontalface={complexClassifiers:[{simpleClassifiers:[{features:[[3,7,14,4,-1],[3,9,14,2,2]],threshold:.004014195874333382,right_val:.8378106951713562,left_val:.0337941907346249},{features:[[1,2,18,4,-1],[7,2,6,4,3]],threshold:.0151513395830989,right_val:.7488812208175659,left_val:.1514132022857666},{features:[[1,7,15,9,-1],[1,10,15,3,3]],threshold:.004210993181914091,right_val:.6374819874763489,left_val:.0900492817163467}],threshold:.822689414024353},{simpleClassifiers:[{features:[[5,6,2,6,-1],[5,9,2,3,2]],threshold:.0016227109590545297,right_val:.7110946178436279,left_val:.0693085864186287},{features:[[7,5,6,3,-1],[9,5,2,3,3]],threshold:.002290664939209819,right_val:.6668692231178284,left_val:.1795803010463715},{features:[[4,0,12,9,-1],[4,3,12,3,3]],threshold:.005002570804208517,right_val:.6554006934165955,left_val:.1693672984838486},{features:[[6,9,10,8,-1],[6,13,10,4,2]],threshold:.007965989410877228,right_val:.0914145186543465,left_val:.5866332054138184},{features:[[3,6,14,8,-1],[3,10,14,4,2]],threshold:-.003522701095789671,right_val:.6031895875930786,left_val:.1413166970014572},{features:[[14,1,6,10,-1],[14,1,3,10,2]],threshold:.0366676896810532,right_val:.7920318245887756,left_val:.3675672113895416},{features:[[7,8,5,12,-1],[7,12,5,4,3]],threshold:.009336147457361221,right_val:.2088509947061539,left_val:.6161385774612427},{features:[[1,1,18,3,-1],[7,1,6,3,3]],threshold:.008696131408214569,right_val:.6360273957252502,left_val:.2836230993270874},{features:[[1,8,17,2,-1],[1,9,17,1,2]],threshold:.0011488880263641477,right_val:.5800700783729553,left_val:.2223580926656723},{features:[[16,6,4,2,-1],[16,7,4,1,2]],threshold:-.002148468978703022,right_val:.5787054896354675,left_val:.2406464070081711},{features:[[5,17,2,2,-1],[5,18,2,1,2]],threshold:.002121906029060483,right_val:.136223703622818,left_val:.5559654831886292},{features:[[14,2,6,12,-1],[14,2,3,12,2]],threshold:-.0939491465687752,right_val:.4717740118503571,left_val:.8502737283706665},{features:[[4,0,4,12,-1],[4,0,2,6,2],[6,6,2,6,2]],threshold:.0013777789426967502,right_val:.2834529876708984,left_val:.5993673801422119},{features:[[2,11,18,8,-1],[8,11,6,8,3]],threshold:.0730631574988365,right_val:.7060034275054932,left_val:.4341886043548584},{features:[[5,7,10,2,-1],[5,8,10,1,2]],threshold:.00036767389974556863,right_val:.6051574945449829,left_val:.3027887940406799},{features:[[15,11,5,3,-1],[15,12,5,1,3]],threshold:-.0060479710809886456,right_val:.5675256848335266,left_val:.17984339594841}],threshold:6.956608772277832},{simpleClassifiers:[{features:[[5,3,10,9,-1],[5,6,10,3,3]],threshold:-.0165106896311045,right_val:.1424857974052429,left_val:.6644225120544434},{features:[[9,4,2,14,-1],[9,11,2,7,2]],threshold:.002705249935388565,right_val:.1288477033376694,left_val:.6325352191925049},{features:[[3,5,4,12,-1],[3,9,4,4,3]],threshold:.002806986914947629,right_val:.6193193197250366,left_val:.1240288019180298},{features:[[4,5,12,5,-1],[8,5,4,5,3]],threshold:-.0015402400167658925,right_val:.5670015811920166,left_val:.1432143002748489},{features:[[5,6,10,8,-1],[5,10,10,4,2]],threshold:-.0005638627917505801,right_val:.5905207991600037,left_val:.1657433062791824},{features:[[8,0,6,9,-1],[8,3,6,3,3]],threshold:.0019253729842603207,right_val:.5738824009895325,left_val:.2695507109165192},{features:[[9,12,1,8,-1],[9,16,1,4,2]],threshold:-.005021484103053808,right_val:.5782774090766907,left_val:.1893538981676102},{features:[[0,7,20,6,-1],[0,9,20,2,3]],threshold:.0026365420781075954,right_val:.5695425868034363,left_val:.2309329062700272},{features:[[7,0,6,17,-1],[9,0,2,17,3]],threshold:-.0015127769438549876,right_val:.5956642031669617,left_val:.2759602069854736},{features:[[9,0,6,4,-1],[11,0,2,4,3]],threshold:-.0101574398577213,right_val:.5522047281265259,left_val:.1732538044452667},{features:[[5,1,6,4,-1],[7,1,2,4,3]],threshold:-.011953660286963,right_val:.5559014081954956,left_val:.1339409947395325},{features:[[12,1,6,16,-1],[14,1,2,16,3]],threshold:.004885949194431305,right_val:.6188849210739136,left_val:.3628703951835632},{features:[[0,5,18,8,-1],[0,5,9,4,2],[9,9,9,4,2]],threshold:-.0801329165697098,right_val:.5475944876670837,left_val:.0912110507488251},{features:[[8,15,10,4,-1],[13,15,5,2,2],[8,17,5,2,2]],threshold:.0010643280111253262,right_val:.5711399912834167,left_val:.3715142905712128},{features:[[3,1,4,8,-1],[3,1,2,4,2],[5,5,2,4,2]],threshold:-.0013419450260698795,right_val:.331809788942337,left_val:.5953313708305359},{features:[[3,6,14,10,-1],[10,6,7,5,2],[3,11,7,5,2]],threshold:-.0546011403203011,right_val:.5602846145629883,left_val:.1844065934419632},{features:[[2,1,6,16,-1],[4,1,2,16,3]],threshold:.0029071690514683723,right_val:.6131715178489685,left_val:.3594244122505188},{features:[[0,18,20,2,-1],[0,19,20,1,2]],threshold:.0007471871795132756,right_val:.3459562957286835,left_val:.5994353294372559},{features:[[8,13,4,3,-1],[8,14,4,1,3]],threshold:.004301380831748247,right_val:.6990845203399658,left_val:.4172652065753937},{features:[[9,14,2,3,-1],[9,15,2,1,3]],threshold:.004501757211983204,right_val:.7801457047462463,left_val:.4509715139865875},{features:[[0,12,9,6,-1],[0,14,9,2,3]],threshold:.0241385009139776,right_val:.1319826990365982,left_val:.5438212752342224}],threshold:9.498542785644531},{simpleClassifiers:[{features:[[5,7,3,4,-1],[5,9,3,2,2]],threshold:.001921223010867834,right_val:.6199870705604553,left_val:.1415266990661621},{features:[[9,3,2,16,-1],[9,11,2,8,2]],threshold:-.00012748669541906565,right_val:.1884928941726685,left_val:.6191074252128601},{features:[[3,6,13,8,-1],[3,10,13,4,2]],threshold:.0005140993162058294,right_val:.5857927799224854,left_val:.1487396955490112},{features:[[12,3,8,2,-1],[12,3,4,2,2]],threshold:.004187860991805792,right_val:.6359239816665649,left_val:.2746909856796265},{features:[[8,8,4,12,-1],[8,12,4,4,3]],threshold:.005101571790874004,right_val:.2175628989934921,left_val:.5870851278305054},{features:[[11,3,8,6,-1],[15,3,4,3,2],[11,6,4,3,2]],threshold:-.002144844038411975,right_val:.2979590892791748,left_val:.5880944728851318},{features:[[7,1,6,19,-1],[9,1,2,19,3]],threshold:-.0028977119363844395,right_val:.5876647233963013,left_val:.2373327016830444},{features:[[9,0,6,4,-1],[11,0,2,4,3]],threshold:-.0216106791049242,right_val:.5194202065467834,left_val:.1220654994249344},{features:[[3,1,9,3,-1],[6,1,3,3,3]],threshold:-.004629931878298521,right_val:.5817409157752991,left_val:.263123095035553},{features:[[8,15,10,4,-1],[13,15,5,2,2],[8,17,5,2,2]],threshold:.000593937118537724,right_val:.5698544979095459,left_val:.363862007856369},{features:[[0,3,6,10,-1],[3,3,3,10,2]],threshold:.0538786612451077,right_val:.7559366226196289,left_val:.4303531050682068},{features:[[3,4,15,15,-1],[3,9,15,5,3]],threshold:.0018887349870055914,right_val:.561342716217041,left_val:.2122603058815002},{features:[[6,5,8,6,-1],[6,7,8,2,3]],threshold:-.0023635339457541704,right_val:.2642767131328583,left_val:.563184916973114},{features:[[4,4,12,10,-1],[10,4,6,5,2],[4,9,6,5,2]],threshold:.0240177996456623,right_val:.2751705944538117,left_val:.5797107815742493},{features:[[6,4,4,4,-1],[8,4,2,4,2]],threshold:.00020543030404951423,right_val:.575256884098053,left_val:.2705242037773132},{features:[[15,11,1,2,-1],[15,12,1,1,2]],threshold:.0008479019743390381,right_val:.2334876954555512,left_val:.5435624718666077},{features:[[3,11,2,2,-1],[3,12,2,1,2]],threshold:.0014091329649090767,right_val:.2063155025243759,left_val:.5319424867630005},{features:[[16,11,1,3,-1],[16,12,1,1,3]],threshold:.0014642629539594054,right_val:.3068861067295075,left_val:.5418980717658997},{features:[[3,15,6,4,-1],[3,15,3,2,2],[6,17,3,2,2]],threshold:.0016352549428120255,right_val:.6112868189811707,left_val:.3695372939109802},{features:[[6,7,8,2,-1],[6,8,8,1,2]],threshold:.0008317275205627084,right_val:.6025236248970032,left_val:.3565036952495575},{features:[[3,11,1,3,-1],[3,12,1,1,3]],threshold:-.0020998890977352858,right_val:.5362827181816101,left_val:.1913982033729553},{features:[[6,0,12,2,-1],[6,1,12,1,2]],threshold:-.0007421398186124861,right_val:.552931010723114,left_val:.3835555016994476},{features:[[9,14,2,3,-1],[9,15,2,1,3]],threshold:.0032655049581080675,right_val:.7101895809173584,left_val:.4312896132469177},{features:[[7,15,6,2,-1],[7,16,6,1,2]],threshold:.0008913499186746776,right_val:.6391963958740234,left_val:.3984830975532532},{features:[[0,5,4,6,-1],[0,7,4,2,3]],threshold:-.0152841797098517,right_val:.5433713793754578,left_val:.2366732954978943},{features:[[4,12,12,2,-1],[8,12,4,2,3]],threshold:.004838141147047281,right_val:.3239189088344574,left_val:.5817500948905945},{features:[[6,3,1,9,-1],[6,6,1,3,3]],threshold:-.0009109317907132208,right_val:.2911868989467621,left_val:.5540593862533569},{features:[[10,17,3,2,-1],[11,17,1,2,3]],threshold:-.006127506028860807,right_val:.5196629166603088,left_val:.1775255054235458},{features:[[9,9,2,2,-1],[9,10,2,1,2]],threshold:-.00044576259097084403,right_val:.5533593893051147,left_val:.3024170100688934},{features:[[7,6,6,4,-1],[9,6,2,4,3]],threshold:.0226465407758951,right_val:.6975377202033997,left_val:.4414930939674377},{features:[[7,17,3,2,-1],[8,17,1,2,3]],threshold:-.0018804960418492556,right_val:.5497952103614807,left_val:.2791394889354706},{features:[[10,17,3,3,-1],[11,17,1,3,3]],threshold:.007088910788297653,right_val:.2385547012090683,left_val:.5263199210166931},{features:[[8,12,3,2,-1],[8,13,3,1,2]],threshold:.0017318050377070904,right_val:.6983600854873657,left_val:.4319379031658173},{features:[[9,3,6,2,-1],[11,3,2,2,3]],threshold:-.006848270073533058,right_val:.5390920042991638,left_val:.3082042932510376},{features:[[3,11,14,4,-1],[3,13,14,2,2]],threshold:-15062530110299122e-21,right_val:.3120366036891937,left_val:.552192211151123},{features:[[1,10,18,4,-1],[10,10,9,2,2],[1,12,9,2,2]],threshold:.0294755697250366,right_val:.1770603060722351,left_val:.5401322841644287},{features:[[0,10,3,3,-1],[0,11,3,1,3]],threshold:.008138732984662056,right_val:.121101900935173,left_val:.5178617835044861},{features:[[9,1,6,6,-1],[11,1,2,6,3]],threshold:.0209429506212473,right_val:.3311221897602081,left_val:.5290294289588928},{features:[[8,7,3,6,-1],[9,7,1,6,3]],threshold:-.009566552937030792,right_val:.4451968967914581,left_val:.7471994161605835}],threshold:18.4129695892334},{simpleClassifiers:[{features:[[1,0,18,9,-1],[1,3,18,3,3]],threshold:-.00028206960996612906,right_val:.6076732277870178,left_val:.2064086049795151},{features:[[12,10,2,6,-1],[12,13,2,3,2]],threshold:.00167906004935503,right_val:.1255383938550949,left_val:.5851997137069702},{features:[[0,5,19,8,-1],[0,9,19,4,2]],threshold:.0006982791237533092,right_val:.5728961229324341,left_val:.094018429517746},{features:[[7,0,6,9,-1],[9,0,2,9,3]],threshold:.0007895901217125356,right_val:.5694308876991272,left_val:.1781987994909287},{features:[[5,3,6,1,-1],[7,3,2,1,3]],threshold:-.002856049919500947,right_val:.5788664817810059,left_val:.1638399064540863},{features:[[11,3,6,1,-1],[13,3,2,1,3]],threshold:-.0038122469559311867,right_val:.5508564710617065,left_val:.2085440009832382},{features:[[5,10,4,6,-1],[5,13,4,3,2]],threshold:.0015896620461717248,right_val:.1857215017080307,left_val:.5702760815620422},{features:[[11,3,6,1,-1],[13,3,2,1,3]],threshold:.0100783398374915,right_val:.2189770042896271,left_val:.5116943120956421},{features:[[4,4,12,6,-1],[4,6,12,2,3]],threshold:-.0635263025760651,right_val:.4043813049793243,left_val:.7131379842758179},{features:[[15,12,2,6,-1],[15,14,2,2,3]],threshold:-.009103149175643921,right_val:.54639732837677,left_val:.2567181885242462},{features:[[9,3,2,2,-1],[10,3,1,2,2]],threshold:-.002403500024229288,right_val:.559097409248352,left_val:.1700665950775147},{features:[[9,3,3,1,-1],[10,3,1,1,3]],threshold:.001522636041045189,right_val:.2619054019451141,left_val:.5410556793212891},{features:[[1,1,4,14,-1],[3,1,2,14,2]],threshold:.0179974399507046,right_val:.6535220742225647,left_val:.3732436895370483},{features:[[9,0,4,4,-1],[11,0,2,2,2],[9,2,2,2,2]],threshold:-.00645381910726428,right_val:.5537446141242981,left_val:.2626481950283051},{features:[[7,5,1,14,-1],[7,12,1,7,2]],threshold:-.0118807600811124,right_val:.5544745922088623,left_val:.2003753930330277},{features:[[19,0,1,4,-1],[19,2,1,2,2]],threshold:.0012713660253211856,right_val:.303197592496872,left_val:.5591902732849121},{features:[[5,5,6,4,-1],[8,5,3,4,2]],threshold:.0011376109905540943,right_val:.5646508932113647,left_val:.2730407118797302},{features:[[9,18,3,2,-1],[10,18,1,2,3]],threshold:-.00426519988104701,right_val:.5461820960044861,left_val:.1405909061431885},{features:[[8,18,3,2,-1],[9,18,1,2,3]],threshold:-.0029602861031889915,right_val:.5459290146827698,left_val:.1795035004615784},{features:[[4,5,12,6,-1],[4,7,12,2,3]],threshold:-.008844822645187378,right_val:.280921995639801,left_val:.5736783146858215},{features:[[3,12,2,6,-1],[3,14,2,2,3]],threshold:-.006643068976700306,right_val:.5503826141357422,left_val:.2370675951242447},{features:[[10,8,2,12,-1],[10,12,2,4,3]],threshold:.003999780863523483,right_val:.3304282128810883,left_val:.5608199834823608},{features:[[7,18,3,2,-1],[8,18,1,2,3]],threshold:-.004122172016650438,right_val:.5378993153572083,left_val:.1640105992555618},{features:[[9,0,6,2,-1],[11,0,2,2,3]],threshold:.0156249096617103,right_val:.2288603931665421,left_val:.5227649211883545},{features:[[5,11,9,3,-1],[5,12,9,1,3]],threshold:-.0103564197197557,right_val:.4252927899360657,left_val:.7016193866729736},{features:[[9,0,6,2,-1],[11,0,2,2,3]],threshold:-.008796080946922302,right_val:.5355830192565918,left_val:.2767347097396851},{features:[[1,1,18,5,-1],[7,1,6,5,3]],threshold:.1622693985700607,right_val:.744257926940918,left_val:.434224009513855},{features:[[8,0,4,4,-1],[10,0,2,2,2],[8,2,2,2,2]],threshold:.0045542530715465546,right_val:.2582125067710877,left_val:.5726485848426819},{features:[[3,12,1,3,-1],[3,13,1,1,3]],threshold:-.002130920998752117,right_val:.5361018776893616,left_val:.2106848061084747},{features:[[8,14,5,3,-1],[8,15,5,1,3]],threshold:-.0132084200158715,right_val:.4552468061447144,left_val:.7593790888786316},{features:[[5,4,10,12,-1],[5,4,5,6,2],[10,10,5,6,2]],threshold:-.0659966766834259,right_val:.5344039797782898,left_val:.125247597694397},{features:[[9,6,9,12,-1],[9,10,9,4,3]],threshold:.007914265617728233,right_val:.5601043105125427,left_val:.3315384089946747},{features:[[2,2,12,14,-1],[2,2,6,7,2],[8,9,6,7,2]],threshold:.0208942797034979,right_val:.2768838107585907,left_val:.5506049990653992}],threshold:15.324139595031738},{simpleClassifiers:[{features:[[4,7,12,2,-1],[8,7,4,2,3]],threshold:.0011961159761995077,right_val:.6156241297721863,left_val:.1762690991163254},{features:[[7,4,6,4,-1],[7,6,6,2,2]],threshold:-.0018679830245673656,right_val:.1832399964332581,left_val:.6118106842041016},{features:[[4,5,11,8,-1],[4,9,11,4,2]],threshold:-.00019579799845814705,right_val:.5723816156387329,left_val:.0990442633628845},{features:[[3,10,16,4,-1],[3,12,16,2,2]],threshold:-.0008025565766729414,right_val:.2377282977104187,left_val:.5579879879951477},{features:[[0,0,16,2,-1],[0,1,16,1,2]],threshold:-.0024510810617357492,right_val:.5858935117721558,left_val:.2231457978487015},{features:[[7,5,6,2,-1],[9,5,2,2,3]],threshold:.0005036185029894114,right_val:.5794103741645813,left_val:.2653993964195252},{features:[[3,2,6,10,-1],[3,2,3,5,2],[6,7,3,5,2]],threshold:.0040293349884450436,right_val:.2484865039587021,left_val:.5803827047348022},{features:[[10,5,8,15,-1],[10,10,8,5,3]],threshold:-.0144517095759511,right_val:.5484204888343811,left_val:.1830351948738098},{features:[[3,14,8,6,-1],[3,14,4,3,2],[7,17,4,3,2]],threshold:.0020380979403853416,right_val:.6051092743873596,left_val:.3363558948040009},{features:[[14,2,2,2,-1],[14,3,2,1,2]],threshold:-.0016155190533027053,right_val:.5441246032714844,left_val:.2286642044782639},{features:[[1,10,7,6,-1],[1,13,7,3,2]],threshold:.0033458340913057327,right_val:.2392338067293167,left_val:.5625913143157959},{features:[[15,4,4,3,-1],[15,4,2,3,2]],threshold:.0016379579901695251,right_val:.5964621901512146,left_val:.3906993865966797},{features:[[2,9,14,6,-1],[2,9,7,3,2],[9,12,7,3,2]],threshold:.0302512105554342,right_val:.1575746983289719,left_val:.524848222732544},{features:[[5,7,10,4,-1],[5,9,10,2,2]],threshold:.037251990288496,right_val:.6748418807983398,left_val:.4194310903549194},{features:[[6,9,8,8,-1],[6,9,4,4,2],[10,13,4,4,2]],threshold:-.0251097902655602,right_val:.5473451018333435,left_val:.1882549971342087},{features:[[14,1,3,2,-1],[14,2,3,1,2]],threshold:-.005309905856847763,right_val:.5227110981941223,left_val:.133997306227684},{features:[[1,4,4,2,-1],[3,4,2,2,2]],threshold:.0012086479691788554,right_val:.6109635829925537,left_val:.3762088119983673},{features:[[11,10,2,8,-1],[11,14,2,4,2]],threshold:-.0219076797366142,right_val:.5404006838798523,left_val:.266314297914505},{features:[[0,0,5,3,-1],[0,1,5,1,3]],threshold:.0054116579703986645,right_val:.2232273072004318,left_val:.5363578796386719},{features:[[2,5,18,8,-1],[11,5,9,4,2],[2,9,9,4,2]],threshold:.069946326315403,right_val:.2453698068857193,left_val:.5358232855796814},{features:[[6,6,1,6,-1],[6,9,1,3,2]],threshold:.00034520021290518343,right_val:.5376930236816406,left_val:.2409671992063522},{features:[[19,1,1,3,-1],[19,2,1,1,3]],threshold:.0012627709656953812,right_val:.3155693113803864,left_val:.5425856709480286},{features:[[7,6,6,6,-1],[9,6,2,6,3]],threshold:.0227195098996162,right_val:.6597865223884583,left_val:.4158405959606171},{features:[[19,1,1,3,-1],[19,2,1,1,3]],threshold:-.001811100053600967,right_val:.5505244731903076,left_val:.2811253070831299},{features:[[3,13,2,3,-1],[3,14,2,1,3]],threshold:.0033469670452177525,right_val:.1891465038061142,left_val:.526002824306488},{features:[[8,4,8,12,-1],[12,4,4,6,2],[8,10,4,6,2]],threshold:.00040791751234792173,right_val:.3344210088253021,left_val:.5673509240150452},{features:[[5,2,6,3,-1],[7,2,2,3,3]],threshold:.0127347996458411,right_val:.2395612001419067,left_val:.5343592166900635},{features:[[6,1,9,10,-1],[6,6,9,5,2]],threshold:-.007311972789466381,right_val:.4022207856178284,left_val:.6010890007019043},{features:[[0,4,6,12,-1],[2,4,2,12,3]],threshold:-.0569487512111664,right_val:.4543190896511078,left_val:.8199151158332825},{features:[[15,13,2,3,-1],[15,14,2,1,3]],threshold:-.005011659115552902,right_val:.5357710719108582,left_val:.2200281023979187},{features:[[7,14,5,3,-1],[7,15,5,1,3]],threshold:.006033436860889196,right_val:.7181751132011414,left_val:.4413081109523773},{features:[[15,13,3,3,-1],[15,14,3,1,3]],threshold:.0039437441155314445,right_val:.2791733145713806,left_val:.547886073589325},{features:[[6,14,8,3,-1],[6,15,8,1,3]],threshold:-.0036591119132936,right_val:.3989723920822144,left_val:.635786771774292},{features:[[15,13,3,3,-1],[15,14,3,1,3]],threshold:-.0038456181064248085,right_val:.5300664901733398,left_val:.3493686020374298},{features:[[2,13,3,3,-1],[2,14,3,1,3]],threshold:-.007192626129835844,right_val:.5229672789573669,left_val:.1119614988565445},{features:[[4,7,12,12,-1],[10,7,6,6,2],[4,13,6,6,2]],threshold:-.0527989417314529,right_val:.54534512758255,left_val:.2387102991342545},{features:[[9,7,2,6,-1],[10,7,1,6,2]],threshold:-.007953766733407974,right_val:.4439376890659332,left_val:.7586917877197266},{features:[[8,9,5,2,-1],[8,10,5,1,2]],threshold:-.0027344180271029472,right_val:.5489321947097778,left_val:.2565476894378662},{features:[[8,6,3,4,-1],[9,6,1,4,3]],threshold:-.0018507939530536532,right_val:.4252474904060364,left_val:.6734347939491272},{features:[[9,6,2,8,-1],[9,10,2,4,2]],threshold:.0159189198166132,right_val:.2292661964893341,left_val:.548835277557373},{features:[[7,7,3,6,-1],[8,7,1,6,3]],threshold:-.0012687679845839739,right_val:.4022389948368073,left_val:.6104331016540527},{features:[[11,3,3,3,-1],[12,3,1,3,3]],threshold:.006288391072303057,right_val:.1536193042993546,left_val:.5310853123664856},{features:[[5,4,6,1,-1],[7,4,2,1,3]],threshold:-.0062259892001748085,right_val:.524160623550415,left_val:.1729111969470978},{features:[[5,6,10,3,-1],[5,7,10,1,3]],threshold:-.0121325999498367,right_val:.4325182139873505,left_val:.659775972366333}],threshold:21.010639190673828},{simpleClassifiers:[{features:[[7,3,6,9,-1],[7,6,6,3,3]],threshold:-.0039184908382594585,right_val:.1469330936670303,left_val:.6103435158729553},{features:[[6,7,9,1,-1],[9,7,3,1,3]],threshold:.0015971299726516008,right_val:.5896466970443726,left_val:.2632363140583038},{features:[[2,8,16,8,-1],[2,12,16,4,2]],threshold:.0177801102399826,right_val:.1760361939668655,left_val:.587287425994873},{features:[[14,6,2,6,-1],[14,9,2,3,2]],threshold:.0006533476989716291,right_val:.5596066117286682,left_val:.1567801982164383},{features:[[1,5,6,15,-1],[1,10,6,5,3]],threshold:-.00028353091329336166,right_val:.5732036232948303,left_val:.1913153976202011},{features:[[10,0,6,9,-1],[10,3,6,3,3]],threshold:.0016104689566418529,right_val:.5623080730438232,left_val:.2914913892745972},{features:[[6,6,7,14,-1],[6,13,7,7,2]],threshold:-.0977506190538406,right_val:.5648233294487,left_val:.194347694516182},{features:[[13,7,3,6,-1],[13,9,3,2,3]],threshold:.0005518235848285258,right_val:.5504639744758606,left_val:.3134616911411285},{features:[[1,8,15,4,-1],[6,8,5,4,3]],threshold:-.0128582203760743,right_val:.5760142803192139,left_val:.253648191690445},{features:[[11,2,3,10,-1],[11,7,3,5,2]],threshold:.004153023939579725,right_val:.36597740650177,left_val:.5767722129821777},{features:[[3,7,4,6,-1],[3,9,4,2,3]],threshold:.0017092459602281451,right_val:.5918939113616943,left_val:.2843191027641296},{features:[[13,3,6,10,-1],[15,3,2,10,3]],threshold:.007521735969930887,right_val:.6183109283447266,left_val:.4052427113056183},{features:[[5,7,8,10,-1],[5,7,4,5,2],[9,12,4,5,2]],threshold:.0022479810286313295,right_val:.3135401010513306,left_val:.578375518321991},{features:[[4,4,12,12,-1],[10,4,6,6,2],[4,10,6,6,2]],threshold:.0520062111318111,right_val:.1916636973619461,left_val:.5541312098503113},{features:[[1,4,6,9,-1],[3,4,2,9,3]],threshold:.0120855299755931,right_val:.6644591093063354,left_val:.4032655954360962},{features:[[11,3,2,5,-1],[11,3,1,5,2]],threshold:14687820112158079e-21,right_val:.5709382891654968,left_val:.3535977900028229},{features:[[7,3,2,5,-1],[8,3,1,5,2]],threshold:7139518857002258e-21,right_val:.5610269904136658,left_val:.3037444949150085},{features:[[10,14,2,3,-1],[10,15,2,1,3]],threshold:-.0046001640148460865,right_val:.4580326080322266,left_val:.7181087136268616},{features:[[5,12,6,2,-1],[8,12,3,2,2]],threshold:.0020058949012309313,right_val:.2953684031963348,left_val:.5621951818466187},{features:[[9,14,2,3,-1],[9,15,2,1,3]],threshold:.004505027085542679,right_val:.7619017958641052,left_val:.4615387916564941},{features:[[4,11,12,6,-1],[4,14,12,3,2]],threshold:.0117468303069472,right_val:.1772529035806656,left_val:.5343837141990662},{features:[[11,11,5,9,-1],[11,14,5,3,3]],threshold:-.0583163388073444,right_val:.5340772271156311,left_val:.1686245948076248},{features:[[6,15,3,2,-1],[6,16,3,1,2]],threshold:.00023629379575140774,right_val:.6026803851127625,left_val:.3792056143283844},{features:[[11,0,3,5,-1],[12,0,1,5,3]],threshold:-.007815618067979813,right_val:.5324323773384094,left_val:.151286706328392},{features:[[5,5,6,7,-1],[8,5,3,7,2]],threshold:-.0108761601150036,right_val:.5319945216178894,left_val:.2081822007894516},{features:[[13,0,1,9,-1],[13,3,1,3,3]],threshold:-.0027745519764721394,right_val:.5210328102111816,left_val:.4098246991634369},{features:[[3,2,4,8,-1],[3,2,2,4,2],[5,6,2,4,2]],threshold:-.0007827638182789087,right_val:.3478842079639435,left_val:.5693274140357971},{features:[[13,12,4,6,-1],[13,14,4,2,3]],threshold:.0138704096898437,right_val:.2257698029279709,left_val:.5326750874519348},{features:[[3,12,4,6,-1],[3,14,4,2,3]],threshold:-.0236749108880758,right_val:.5200707912445068,left_val:.1551305055618286},{features:[[13,11,3,4,-1],[13,13,3,2,2]],threshold:-14879409718560055e-21,right_val:.3820176124572754,left_val:.5500566959381104},{features:[[4,4,4,3,-1],[4,5,4,1,3]],threshold:.00361906411126256,right_val:.6639748215675354,left_val:.4238683879375458},{features:[[7,5,11,8,-1],[7,9,11,4,2]],threshold:-.0198171101510525,right_val:.5382357835769653,left_val:.2150038033723831},{features:[[7,8,3,4,-1],[8,8,1,4,3]],threshold:-.0038154039066284895,right_val:.4215297102928162,left_val:.6675711274147034},{features:[[9,1,6,1,-1],[11,1,2,1,3]],threshold:-.0049775829538702965,right_val:.5386328101158142,left_val:.2267289012670517},{features:[[5,5,3,3,-1],[5,6,3,1,3]],threshold:.002244102070108056,right_val:.6855735778808594,left_val:.4308691024780273},{features:[[0,9,20,6,-1],[10,9,10,3,2],[0,12,10,3,2]],threshold:.0122824599966407,right_val:.3467479050159454,left_val:.5836614966392517},{features:[[8,6,3,5,-1],[9,6,1,5,3]],threshold:-.002854869933798909,right_val:.4311453998088837,left_val:.7016944885253906},{features:[[11,0,1,3,-1],[11,1,1,1,3]],threshold:-.0037875669077038765,right_val:.5224946141242981,left_val:.2895345091819763},{features:[[4,2,4,2,-1],[4,3,4,1,2]],threshold:-.0012201230274513364,right_val:.5481644868850708,left_val:.2975570857524872},{features:[[12,6,4,3,-1],[12,7,4,1,3]],threshold:.010160599835217,right_val:.8182697892189026,left_val:.4888817965984345},{features:[[5,0,6,4,-1],[7,0,2,4,3]],threshold:-.0161745697259903,right_val:.5239992737770081,left_val:.1481492966413498},{features:[[9,7,3,8,-1],[10,7,1,8,3]],threshold:.0192924607545137,right_val:.7378190755844116,left_val:.4786309897899628},{features:[[9,7,2,2,-1],[10,7,1,2,2]],threshold:-.003247953951358795,right_val:.4470643997192383,left_val:.7374222874641418},{features:[[6,7,14,4,-1],[13,7,7,2,2],[6,9,7,2,2]],threshold:-.009380348026752472,right_val:.5537996292114258,left_val:.3489154875278473},{features:[[0,5,3,6,-1],[0,7,3,2,3]],threshold:-.0126061299815774,right_val:.5315443277359009,left_val:.2379686981439591},{features:[[13,11,3,4,-1],[13,13,3,2,2]],threshold:-.0256219301372766,right_val:.5138769745826721,left_val:.1964688003063202},{features:[[4,11,3,4,-1],[4,13,3,2,2]],threshold:-7574149640277028e-20,right_val:.3365853130817413,left_val:.5590522885322571},{features:[[5,9,12,8,-1],[11,9,6,4,2],[5,13,6,4,2]],threshold:-.0892108827829361,right_val:.516263484954834,left_val:.0634046569466591},{features:[[9,12,1,3,-1],[9,13,1,1,3]],threshold:-.002767048077657819,right_val:.4490706026554108,left_val:.732346773147583},{features:[[10,15,2,4,-1],[10,17,2,2,2]],threshold:.0002715257869567722,right_val:.5985518097877502,left_val:.411483496427536}],threshold:23.918790817260742},{simpleClassifiers:[{features:[[7,7,6,1,-1],[9,7,2,1,3]],threshold:.001478621968999505,right_val:.6643316745758057,left_val:.266354501247406},{features:[[12,3,6,6,-1],[15,3,3,3,2],[12,6,3,3,2]],threshold:-.001874165958724916,right_val:.2518512904644013,left_val:.6143848896026611},{features:[[0,4,10,6,-1],[0,6,10,2,3]],threshold:-.001715100952424109,right_val:.2397463023662567,left_val:.5766341090202332},{features:[[8,3,8,14,-1],[12,3,4,7,2],[8,10,4,7,2]],threshold:-.0018939269939437509,right_val:.2529144883155823,left_val:.5682045817375183},{features:[[4,4,7,15,-1],[4,9,7,5,3]],threshold:-.005300605203956366,right_val:.5556079745292664,left_val:.1640675961971283},{features:[[12,2,6,8,-1],[15,2,3,4,2],[12,6,3,4,2]],threshold:-.0466625317931175,right_val:.4762830138206482,left_val:.6123154163360596},{features:[[2,2,6,8,-1],[2,2,3,4,2],[5,6,3,4,2]],threshold:-.000794313324149698,right_val:.2839404046535492,left_val:.5707858800888062},{features:[[2,13,18,7,-1],[8,13,6,7,3]],threshold:.0148916700854898,right_val:.6006367206573486,left_val:.4089672863483429},{features:[[4,3,8,14,-1],[4,3,4,7,2],[8,10,4,7,2]],threshold:-.0012046529445797205,right_val:.2705289125442505,left_val:.5712450742721558},{features:[[18,1,2,6,-1],[18,3,2,2,3]],threshold:.006061938125640154,right_val:.3262225985527039,left_val:.526250422000885},{features:[[9,11,2,3,-1],[9,12,2,1,3]],threshold:-.0025286648888140917,right_val:.4199256896972656,left_val:.6853830814361572},{features:[[18,1,2,6,-1],[18,3,2,2,3]],threshold:-.005901021882891655,right_val:.5434812903404236,left_val:.3266282081604004},{features:[[0,1,2,6,-1],[0,3,2,2,3]],threshold:.005670276004821062,right_val:.2319003939628601,left_val:.5468410849571228},{features:[[1,5,18,6,-1],[1,7,18,2,3]],threshold:-.003030410036444664,right_val:.2708238065242767,left_val:.557066798210144},{features:[[0,2,6,7,-1],[3,2,3,7,2]],threshold:.002980364952236414,right_val:.5890625715255737,left_val:.3700568974018097},{features:[[7,3,6,14,-1],[7,10,6,7,2]],threshold:-.0758405104279518,right_val:.5419948101043701,left_val:.2140070050954819},{features:[[3,7,13,10,-1],[3,12,13,5,2]],threshold:.0192625392228365,right_val:.2726590037345886,left_val:.5526772141456604},{features:[[11,15,2,2,-1],[11,16,2,1,2]],threshold:.00018888259364757687,right_val:.6017209887504578,left_val:.3958011865615845},{features:[[2,11,16,4,-1],[2,11,8,2,2],[10,13,8,2,2]],threshold:.0293695498257875,right_val:.1435758024454117,left_val:.5241373777389526},{features:[[13,7,6,4,-1],[16,7,3,2,2],[13,9,3,2,2]],threshold:.0010417619487270713,right_val:.5929983258247375,left_val:.3385409116744995},{features:[[6,10,3,9,-1],[6,13,3,3,3]],threshold:.0026125640142709017,right_val:.3021597862243652,left_val:.5485377907752991},{features:[[14,6,1,6,-1],[14,9,1,3,2]],threshold:.0009697746718302369,right_val:.553203284740448,left_val:.3375276029109955},{features:[[5,10,4,1,-1],[7,10,2,1,2]],threshold:.0005951265920884907,right_val:.3359399139881134,left_val:.563174307346344},{features:[[3,8,15,5,-1],[8,8,5,5,3]],threshold:-.1015655994415283,right_val:.5230425000190735,left_val:.0637350380420685},{features:[[1,6,5,4,-1],[1,8,5,2,2]],threshold:.0361566990613937,right_val:.1029528975486755,left_val:.5136963129043579},{features:[[3,1,17,6,-1],[3,3,17,2,3]],threshold:.003462414024397731,right_val:.5558289289474487,left_val:.3879320025444031},{features:[[6,7,8,2,-1],[10,7,4,2,2]],threshold:.0195549800992012,right_val:.1875859946012497,left_val:.5250086784362793},{features:[[9,7,3,2,-1],[10,7,1,2,3]],threshold:-.0023121440317481756,right_val:.4679641127586365,left_val:.667202889919281},{features:[[8,7,3,2,-1],[9,7,1,2,3]],threshold:-.001860528951510787,right_val:.4334670901298523,left_val:.7163379192352295},{features:[[8,9,4,2,-1],[8,10,4,1,2]],threshold:-.0009402636205777526,right_val:.5650203227996826,left_val:.302136093378067},{features:[[8,8,4,3,-1],[8,9,4,1,3]],threshold:-.005241833161562681,right_val:.5250256061553955,left_val:.1820009052753449},{features:[[9,5,6,4,-1],[9,5,3,4,2]],threshold:.00011729019752237946,right_val:.544597327709198,left_val:.3389188051223755},{features:[[8,13,4,3,-1],[8,14,4,1,3]],threshold:.0011878840159624815,right_val:.6253563165664673,left_val:.4085349142551422},{features:[[4,7,12,6,-1],[10,7,6,3,2],[4,10,6,3,2]],threshold:-.0108813596889377,right_val:.5700082778930664,left_val:.3378399014472961},{features:[[8,14,4,3,-1],[8,15,4,1,3]],threshold:.0017354859737679362,right_val:.6523038744926453,left_val:.4204635918140411},{features:[[9,7,3,3,-1],[9,8,3,1,3]],threshold:-.00651190523058176,right_val:.5428143739700317,left_val:.2595216035842896},{features:[[7,4,3,8,-1],[8,4,1,8,3]],threshold:-.0012136430013924837,right_val:.3977893888950348,left_val:.6165143847465515},{features:[[10,0,3,6,-1],[11,0,1,6,3]],threshold:-.010354240424931,right_val:.5219504833221436,left_val:.1628028005361557},{features:[[6,3,4,8,-1],[8,3,2,8,2]],threshold:.0005585883045569062,right_val:.5503574013710022,left_val:.3199650943279266},{features:[[14,3,6,13,-1],[14,3,3,13,2]],threshold:.0152996499091387,right_val:.6122388243675232,left_val:.4103994071483612},{features:[[8,13,3,6,-1],[8,16,3,3,2]],threshold:-.021588210016489,right_val:.519738495349884,left_val:.103491298854351},{features:[[14,3,6,13,-1],[14,3,3,13,2]],threshold:-.1283462941646576,right_val:.4893102943897247,left_val:.8493865132331848},{features:[[0,7,10,4,-1],[0,7,5,2,2],[5,9,5,2,2]],threshold:-.0022927189711481333,right_val:.5471575260162354,left_val:.3130157887935638},{features:[[14,3,6,13,-1],[14,3,3,13,2]],threshold:.0799151062965393,right_val:.6073989272117615,left_val:.4856320917606354},{features:[[0,3,6,13,-1],[3,3,3,13,2]],threshold:-.0794410929083824,right_val:.462453305721283,left_val:.8394674062728882},{features:[[9,1,4,1,-1],[9,1,2,1,2]],threshold:-.00528000108897686,right_val:.5306698083877563,left_val:.1881695985794067},{features:[[8,0,2,1,-1],[9,0,1,1,2]],threshold:.0010463109938427806,right_val:.2583065927028656,left_val:.5271229147911072},{features:[[10,16,4,4,-1],[12,16,2,2,2],[10,18,2,2,2]],threshold:.00026317298761568964,right_val:.5735440850257874,left_val:.4235304892063141},{features:[[9,6,2,3,-1],[10,6,1,3,2]],threshold:-.0036173160187900066,right_val:.4495444893836975,left_val:.6934396028518677},{features:[[4,5,12,2,-1],[8,5,4,2,3]],threshold:.0114218797534704,right_val:.4138193130493164,left_val:.590092122554779},{features:[[8,7,3,5,-1],[9,7,1,5,3]],threshold:-.0019963278900831938,right_val:.4327239990234375,left_val:.6466382741928101}],threshold:24.52787971496582},{simpleClassifiers:[{features:[[6,4,8,6,-1],[6,6,8,2,3]],threshold:-.00996912457048893,right_val:.2482212036848068,left_val:.6142324209213257},{features:[[9,5,2,12,-1],[9,11,2,6,2]],threshold:.0007307305932044983,right_val:.2321965992450714,left_val:.5704951882362366},{features:[[4,6,6,8,-1],[4,10,6,4,2]],threshold:.0006404530140571296,right_val:.5814933180809021,left_val:.2112251967191696},{features:[[12,2,8,5,-1],[12,2,4,5,2]],threshold:.004542401991784573,right_val:.586631178855896,left_val:.2950482070446014},{features:[[0,8,18,3,-1],[0,9,18,1,3]],threshold:9247744310414419e-20,right_val:.5791326761245728,left_val:.2990990877151489},{features:[[8,12,4,8,-1],[8,16,4,4,2]],threshold:-.008660314604640007,right_val:.5635542273521423,left_val:.2813029885292053},{features:[[0,2,8,5,-1],[4,2,4,5,2]],threshold:.008051581680774689,right_val:.6054757237434387,left_val:.3535369038581848},{features:[[13,11,3,4,-1],[13,13,3,2,2]],threshold:.00043835240649059415,right_val:.2731510996818543,left_val:.5596532225608826},{features:[[5,11,6,1,-1],[7,11,2,1,3]],threshold:-981689736363478e-19,right_val:.3638561069965363,left_val:.5978031754493713},{features:[[11,3,3,1,-1],[12,3,1,1,3]],threshold:-.0011298790341243148,right_val:.5432729125022888,left_val:.2755252122879028},{features:[[7,13,5,3,-1],[7,14,5,1,3]],threshold:.006435615010559559,right_val:.7069833278656006,left_val:.4305641949176788},{features:[[11,11,7,6,-1],[11,14,7,3,2]],threshold:-.0568293295800686,right_val:.5294997096061707,left_val:.2495242953300476},{features:[[2,11,7,6,-1],[2,14,7,3,2]],threshold:.004066816996783018,right_val:.2497723996639252,left_val:.5478553175926208},{features:[[12,14,2,6,-1],[12,16,2,2,3]],threshold:481647984997835e-19,right_val:.5706356167793274,left_val:.3938601016998291},{features:[[8,14,3,3,-1],[8,15,3,1,3]],threshold:.00617950176820159,right_val:.7394766807556152,left_val:.440760612487793},{features:[[11,0,3,5,-1],[12,0,1,5,3]],threshold:.006498575210571289,right_val:.2479152977466583,left_val:.5445243120193481},{features:[[6,1,4,9,-1],[8,1,2,9,2]],threshold:-.0010211090557277203,right_val:.5338971018791199,left_val:.2544766962528229},{features:[[10,3,6,1,-1],[12,3,2,1,3]],threshold:-.005424752831459045,right_val:.5324069261550903,left_val:.2718858122825623},{features:[[8,8,3,4,-1],[8,10,3,2,2]],threshold:-.0010559899965301156,right_val:.553450882434845,left_val:.3178288042545319},{features:[[8,12,4,2,-1],[8,13,4,1,2]],threshold:.0006646580877713859,right_val:.6558194160461426,left_val:.4284219145774841},{features:[[5,18,4,2,-1],[5,19,4,1,2]],threshold:-.00027524109464138746,right_val:.3810262978076935,left_val:.5902860760688782},{features:[[2,1,18,6,-1],[2,3,18,2,3]],threshold:.004229320213198662,right_val:.5709385871887207,left_val:.381648987531662},{features:[[6,0,3,2,-1],[7,0,1,2,3]],threshold:-.0032868210691958666,right_val:.5259544253349304,left_val:.1747743934392929},{features:[[13,8,6,2,-1],[16,8,3,1,2],[13,9,3,1,2]],threshold:.0001561187964398414,right_val:.5725612044334412,left_val:.3601722121238709},{features:[[6,10,3,6,-1],[6,13,3,3,2]],threshold:-7362138148891972e-21,right_val:.3044497072696686,left_val:.540185809135437},{features:[[0,13,20,4,-1],[10,13,10,2,2],[0,15,10,2,2]],threshold:-.014767250046134,right_val:.5573434829711914,left_val:.3220770061016083},{features:[[7,7,6,5,-1],[9,7,2,5,3]],threshold:.0244895908981562,right_val:.6518812775611877,left_val:.4301528036594391},{features:[[11,0,2,2,-1],[11,1,2,1,2]],threshold:-.000376520911231637,right_val:.5598236918449402,left_val:.356458306312561},{features:[[1,8,6,2,-1],[1,8,3,1,2],[4,9,3,1,2]],threshold:736576885174145e-20,right_val:.556189775466919,left_val:.3490782976150513},{features:[[0,2,20,2,-1],[10,2,10,1,2],[0,3,10,1,2]],threshold:-.0150999398902059,right_val:.5335299968719482,left_val:.1776272058486939},{features:[[7,14,5,3,-1],[7,15,5,1,3]],threshold:-.0038316650316119194,right_val:.4221394062042236,left_val:.6149687767028809},{features:[[7,13,6,6,-1],[10,13,3,3,2],[7,16,3,3,2]],threshold:.0169254001230001,right_val:.2166585028171539,left_val:.5413014888763428},{features:[[9,12,2,3,-1],[9,13,2,1,3]],threshold:-.003047785023227334,right_val:.4354617893695831,left_val:.6449490785598755},{features:[[16,11,1,6,-1],[16,13,1,2,3]],threshold:.003214058931916952,right_val:.3523217141628265,left_val:.5400155186653137},{features:[[3,11,1,6,-1],[3,13,1,2,3]],threshold:-.004002320114523172,right_val:.5338417291641235,left_val:.2774524092674255},{features:[[4,4,14,12,-1],[11,4,7,6,2],[4,10,7,6,2]],threshold:.0074182129465043545,right_val:.3702817857265472,left_val:.567673921585083},{features:[[5,4,3,3,-1],[5,5,3,1,3]],threshold:-.008876458741724491,right_val:.4583688974380493,left_val:.7749221920967102},{features:[[12,3,3,3,-1],[13,3,1,3,3]],threshold:.002731173997744918,right_val:.3996661007404327,left_val:.5338721871376038},{features:[[6,6,8,3,-1],[6,7,8,1,3]],threshold:-.0025082379579544067,right_val:.377749890089035,left_val:.5611963272094727},{features:[[12,3,3,3,-1],[13,3,1,3,3]],threshold:-.008054107427597046,right_val:.5179182887077332,left_val:.291522890329361},{features:[[3,1,4,10,-1],[3,1,2,5,2],[5,6,2,5,2]],threshold:-.0009793881326913834,right_val:.3700192868709564,left_val:.5536432862281799},{features:[[5,7,10,2,-1],[5,7,5,2,2]],threshold:-.005874590948224068,right_val:.5679376125335693,left_val:.3754391074180603},{features:[[8,7,3,3,-1],[9,7,1,3,3]],threshold:-.00449367193505168,right_val:.4480949938297272,left_val:.7019699215888977},{features:[[15,12,2,3,-1],[15,13,2,1,3]],threshold:-.00543892290443182,right_val:.5313386917114258,left_val:.2310364991426468},{features:[[7,8,3,4,-1],[8,8,1,4,3]],threshold:-.0007509464048780501,right_val:.4129343032836914,left_val:.5864868760108948},{features:[[13,4,1,12,-1],[13,10,1,6,2]],threshold:14528800420521293e-21,right_val:.5619621276855469,left_val:.3732407093048096},{features:[[4,5,12,12,-1],[4,5,6,6,2],[10,11,6,6,2]],threshold:.0407580696046352,right_val:.2720521986484528,left_val:.5312091112136841},{features:[[7,14,7,3,-1],[7,15,7,1,3]],threshold:.006650593131780624,right_val:.6693493723869324,left_val:.4710015952587128},{features:[[3,12,2,3,-1],[3,13,2,1,3]],threshold:.0045759351924061775,right_val:.1637275964021683,left_val:.5167819261550903},{features:[[3,2,14,2,-1],[10,2,7,1,2],[3,3,7,1,2]],threshold:.0065269311890006065,right_val:.2938531935214996,left_val:.5397608876228333},{features:[[0,1,3,10,-1],[1,1,1,10,3]],threshold:-.0136603796854615,right_val:.453220009803772,left_val:.7086488008499146},{features:[[9,0,6,5,-1],[11,0,2,5,3]],threshold:.0273588690906763,right_val:.3589231967926025,left_val:.5206481218338013},{features:[[5,7,6,2,-1],[8,7,3,2,2]],threshold:.0006219755159690976,right_val:.5441123247146606,left_val:.3507075905799866},{features:[[7,1,6,10,-1],[7,6,6,5,2]],threshold:-.0033077080734074116,right_val:.402489185333252,left_val:.5859522819519043},{features:[[1,1,18,3,-1],[7,1,6,3,3]],threshold:-.0106311095878482,right_val:.4422602951526642,left_val:.6743267178535461},{features:[[16,3,3,6,-1],[16,5,3,2,3]],threshold:.0194416493177414,right_val:.1797904968261719,left_val:.5282716155052185}],threshold:27.153350830078125},{simpleClassifiers:[{features:[[6,3,7,6,-1],[6,6,7,3,2]],threshold:-.005505216773599386,right_val:.2626559138298035,left_val:.5914731025695801},{features:[[4,7,12,2,-1],[8,7,4,2,3]],threshold:.001956227933987975,right_val:.5741627216339111,left_val:.2312581986188889},{features:[[0,4,17,10,-1],[0,9,17,5,2]],threshold:-.008892478421330452,right_val:.5626654028892517,left_val:.1656530052423477},{features:[[3,4,15,16,-1],[3,12,15,8,2]],threshold:.0836383774876595,right_val:.1957294940948486,left_val:.5423449873924255},{features:[[7,15,6,4,-1],[7,17,6,2,2]],threshold:.0012282270472496748,right_val:.5992503762245178,left_val:.3417904078960419},{features:[[15,2,4,9,-1],[15,2,2,9,2]],threshold:.0057629169896245,right_val:.6079903841018677,left_val:.3719581961631775},{features:[[2,3,3,2,-1],[2,4,3,1,2]],threshold:-.0016417410224676132,right_val:.5576915740966797,left_val:.2577486038208008},{features:[[13,6,7,9,-1],[13,9,7,3,3]],threshold:.0034113149158656597,right_val:.5514171719551086,left_val:.2950749099254608},{features:[[8,11,4,3,-1],[8,12,4,1,3]],threshold:-.0110693201422691,right_val:.4477078914642334,left_val:.7569358944892883},{features:[[0,2,20,6,-1],[10,2,10,3,2],[0,5,10,3,2]],threshold:.0348659716546535,right_val:.2669621109962463,left_val:.5583708882331848},{features:[[3,2,6,10,-1],[3,2,3,5,2],[6,7,3,5,2]],threshold:.0006570109981112182,right_val:.2988890111446381,left_val:.5627313256263733},{features:[[13,10,3,4,-1],[13,12,3,2,2]],threshold:-.0243391301482916,right_val:.5108863115310669,left_val:.2771185040473938},{features:[[4,10,3,4,-1],[4,12,3,2,2]],threshold:.0005943520227447152,right_val:.3120341897010803,left_val:.5580651760101318},{features:[[7,5,6,3,-1],[9,5,2,3,3]],threshold:.0022971509024500847,right_val:.5679075717926025,left_val:.3330250084400177},{features:[[7,6,6,8,-1],[7,10,6,4,2]],threshold:-.0037801829166710377,right_val:.5344808101654053,left_val:.2990534901618958},{features:[[0,11,20,6,-1],[0,14,20,3,2]],threshold:-.13420669734478,right_val:.5392568111419678,left_val:.1463858932256699},{features:[[4,13,4,6,-1],[4,13,2,3,2],[6,16,2,3,2]],threshold:.0007522454834543169,right_val:.5692734718322754,left_val:.3746953904628754},{features:[[6,0,8,12,-1],[10,0,4,6,2],[6,6,4,6,2]],threshold:-.040545541793108,right_val:.5484297871589661,left_val:.2754747867584229},{features:[[2,0,15,2,-1],[2,1,15,1,2]],threshold:.0012572970008477569,right_val:.5756075978279114,left_val:.3744584023952484},{features:[[9,12,2,3,-1],[9,13,2,1,3]],threshold:-.007424994837492704,right_val:.4728231132030487,left_val:.7513859272003174},{features:[[3,12,1,2,-1],[3,13,1,1,2]],threshold:.0005090812919661403,right_val:.2932321131229401,left_val:.540489673614502},{features:[[9,11,2,3,-1],[9,12,2,1,3]],threshold:-.001280845026485622,right_val:.4273349046707153,left_val:.6169779896736145},{features:[[7,3,3,1,-1],[8,3,1,1,3]],threshold:-.0018348860321566463,right_val:.5206472277641296,left_val:.2048496007919312},{features:[[17,7,3,6,-1],[17,9,3,2,3]],threshold:.0274848695844412,right_val:.1675522029399872,left_val:.5252984762191772},{features:[[7,2,3,2,-1],[8,2,1,2,3]],threshold:.0022372419480234385,right_val:.2777658104896545,left_val:.5267782807350159},{features:[[11,4,5,3,-1],[11,5,5,1,3]],threshold:-.008863529190421104,right_val:.4812048971652985,left_val:.69545578956604},{features:[[4,4,5,3,-1],[4,5,5,1,3]],threshold:.004175397101789713,right_val:.6349195837974548,left_val:.4291887879371643},{features:[[19,3,1,2,-1],[19,4,1,1,2]],threshold:-.0017098189564421773,right_val:.5361248850822449,left_val:.2930536866188049},{features:[[5,5,4,3,-1],[5,6,4,1,3]],threshold:.006532854866236448,right_val:.7409694194793701,left_val:.4495325088500977},{features:[[17,7,3,6,-1],[17,9,3,2,3]],threshold:-.009537290781736374,right_val:.5416501760482788,left_val:.3149119913578033},{features:[[0,7,3,6,-1],[0,9,3,2,3]],threshold:.0253109894692898,right_val:.1311707943677902,left_val:.5121892094612122},{features:[[14,2,6,9,-1],[14,5,6,3,3]],threshold:.0364609695971012,right_val:.2591339945793152,left_val:.5175911784172058},{features:[[0,4,5,6,-1],[0,6,5,2,3]],threshold:.0208543296903372,right_val:.1582316011190414,left_val:.5137140154838562},{features:[[10,5,6,2,-1],[12,5,2,2,3]],threshold:-.0008720774785615504,right_val:.439897894859314,left_val:.5574309825897217},{features:[[4,5,6,2,-1],[6,5,2,2,3]],threshold:-15227000403683633e-21,right_val:.3708069920539856,left_val:.5548940896987915},{features:[[8,1,4,6,-1],[8,3,4,2,3]],threshold:-.0008431650931015611,right_val:.5554211139678955,left_val:.3387419879436493},{features:[[0,2,3,6,-1],[0,4,3,2,3]],threshold:.0036037859972566366,right_val:.3411171138286591,left_val:.5358061790466309},{features:[[6,6,8,3,-1],[6,7,8,1,3]],threshold:-.006805789191275835,right_val:.4345862865447998,left_val:.6125202775001526},{features:[[0,1,5,9,-1],[0,4,5,3,3]],threshold:-.0470216609537601,right_val:.519373893737793,left_val:.2358165979385376},{features:[[16,0,4,15,-1],[16,0,2,15,2]],threshold:-.0369541086256504,right_val:.4760943949222565,left_val:.7323111295700073},{features:[[1,10,3,2,-1],[1,11,3,1,2]],threshold:.0010439479956403375,right_val:.3411330878734589,left_val:.5419455170631409},{features:[[14,4,1,10,-1],[14,9,1,5,2]],threshold:-.00021050689974799752,right_val:.5554947257041931,left_val:.2821694016456604},{features:[[0,1,4,12,-1],[2,1,2,12,2]],threshold:-.0808315873146057,right_val:.4697434902191162,left_val:.9129930138587952},{features:[[11,11,4,2,-1],[11,11,2,2,2]],threshold:-.0003657905908767134,right_val:.3978292942047119,left_val:.6022670269012451},{features:[[5,11,4,2,-1],[7,11,2,2,2]],threshold:-.00012545920617412776,right_val:.384553998708725,left_val:.5613213181495667},{features:[[3,8,15,5,-1],[8,8,5,5,3]],threshold:-.0687864869832993,right_val:.5300496816635132,left_val:.2261611968278885},{features:[[0,0,6,10,-1],[3,0,3,10,2]],threshold:.0124157899990678,right_val:.5828812122344971,left_val:.4075691998004913},{features:[[11,4,3,2,-1],[12,4,1,2,3]],threshold:-.004717481788247824,right_val:.5267757773399353,left_val:.2827253937721252},{features:[[8,12,3,8,-1],[8,16,3,4,2]],threshold:.0381368584930897,right_val:.1023615971207619,left_val:.5074741244316101},{features:[[8,14,5,3,-1],[8,15,5,1,3]],threshold:-.0028168049175292253,right_val:.4359692931175232,left_val:.6169006824493408},{features:[[7,14,4,3,-1],[7,15,4,1,3]],threshold:.008130360394716263,right_val:.76060950756073,left_val:.4524433016777039},{features:[[11,4,3,2,-1],[12,4,1,2,3]],threshold:.006005601957440376,right_val:.185971200466156,left_val:.5240408778190613},{features:[[3,15,14,4,-1],[3,15,7,2,2],[10,17,7,2,2]],threshold:.0191393196582794,right_val:.2332071959972382,left_val:.5209379196166992},{features:[[2,2,16,4,-1],[10,2,8,2,2],[2,4,8,2,2]],threshold:.0164457596838474,right_val:.3264234960079193,left_val:.5450702905654907},{features:[[0,8,6,12,-1],[3,8,3,12,2]],threshold:-.0373568907380104,right_val:.4533241987228394,left_val:.6999046802520752},{features:[[5,7,10,2,-1],[5,7,5,2,2]],threshold:-.0197279006242752,right_val:.54128098487854,left_val:.2653664946556091},{features:[[9,7,2,5,-1],[10,7,1,5,2]],threshold:.0066972579807043076,right_val:.7138652205467224,left_val:.4480566084384918},{features:[[13,7,6,4,-1],[16,7,3,2,2],[13,9,3,2,2]],threshold:.0007445752853527665,right_val:.5471320152282715,left_val:.4231350123882294},{features:[[0,13,8,2,-1],[0,14,8,1,2]],threshold:.0011790640419349074,right_val:.3130455017089844,left_val:.5341702103614807},{features:[[13,7,6,4,-1],[16,7,3,2,2],[13,9,3,2,2]],threshold:.0349806100130081,right_val:.343053013086319,left_val:.5118659734725952},{features:[[1,7,6,4,-1],[1,7,3,2,2],[4,9,3,2,2]],threshold:.0005685979267582297,right_val:.5468639731407166,left_val:.3532187044620514},{features:[[12,6,1,12,-1],[12,12,1,6,2]],threshold:-.0113406497985125,right_val:.5348700881004333,left_val:.2842353880405426},{features:[[9,5,2,6,-1],[10,5,1,6,2]],threshold:-.00662281084805727,right_val:.4492664933204651,left_val:.6883640289306641},{features:[[14,12,2,3,-1],[14,13,2,1,3]],threshold:-.008016033098101616,right_val:.5224308967590332,left_val:.1709893941879273},{features:[[4,12,2,3,-1],[4,13,2,1,3]],threshold:.0014206819469109178,right_val:.299338310956955,left_val:.5290846228599548},{features:[[8,12,4,3,-1],[8,13,4,1,3]],threshold:-.002780171111226082,right_val:.4460499882698059,left_val:.6498854160308838},{features:[[5,2,2,4,-1],[5,2,1,2,2],[6,4,1,2,2]],threshold:-.0014747589593753219,right_val:.5388113260269165,left_val:.3260438144207001},{features:[[5,5,11,3,-1],[5,6,11,1,3]],threshold:-.0238303393125534,right_val:.4801219999790192,left_val:.7528941035270691},{features:[[7,6,4,12,-1],[7,12,4,6,2]],threshold:.00693697901442647,right_val:.3261427879333496,left_val:.5335165858268738},{features:[[12,13,8,5,-1],[12,13,4,5,2]],threshold:.008280625566840172,right_val:.5737829804420471,left_val:.458039402961731},{features:[[7,6,1,12,-1],[7,12,1,6,2]],threshold:-.0104395002126694,right_val:.5233827829360962,left_val:.2592320144176483}],threshold:34.55411148071289},{simpleClassifiers:[{features:[[1,2,6,3,-1],[4,2,3,3,2]],threshold:.0072006587870419025,right_val:.6849808096885681,left_val:.325888603925705},{features:[[9,5,6,10,-1],[12,5,3,5,2],[9,10,3,5,2]],threshold:-.002859358908608556,right_val:.2537829875946045,left_val:.5838881134986877},{features:[[5,5,8,12,-1],[5,5,4,6,2],[9,11,4,6,2]],threshold:.0006858052802272141,right_val:.2812424004077911,left_val:.5708081722259521},{features:[[0,7,20,6,-1],[0,9,20,2,3]],threshold:.007958019152283669,right_val:.5544260740280151,left_val:.2501051127910614},{features:[[4,2,2,2,-1],[4,3,2,1,2]],threshold:-.0012124150525778532,right_val:.5433350205421448,left_val:.2385368049144745},{features:[[4,18,12,2,-1],[8,18,4,2,3]],threshold:.00794261321425438,right_val:.6220757961273193,left_val:.3955070972442627},{features:[[7,4,4,16,-1],[7,12,4,8,2]],threshold:.0024630590341985226,right_val:.2992357909679413,left_val:.5639708042144775},{features:[[7,6,7,8,-1],[7,10,7,4,2]],threshold:-.006039659958332777,right_val:.541167676448822,left_val:.218651294708252},{features:[[6,3,3,1,-1],[7,3,1,1,3]],threshold:-.0012988339876756072,right_val:.5364584922790527,left_val:.23507060110569},{features:[[11,15,2,4,-1],[11,17,2,2,2]],threshold:.00022299369447864592,right_val:.572960615158081,left_val:.380411297082901},{features:[[3,5,4,8,-1],[3,9,4,4,2]],threshold:.0014654280385002494,right_val:.5258268713951111,left_val:.2510167956352234},{features:[[7,1,6,12,-1],[7,7,6,6,2]],threshold:-.0008121004211716354,right_val:.3851158916950226,left_val:.5992823839187622},{features:[[4,6,6,2,-1],[6,6,2,2,3]],threshold:-.0013836020370945334,right_val:.3636586964130402,left_val:.5681396126747131},{features:[[16,4,4,6,-1],[16,6,4,2,3]],threshold:-.0279364492744207,right_val:.5377560257911682,left_val:.1491317003965378},{features:[[3,3,5,2,-1],[3,4,5,1,2]],threshold:-.0004691955109592527,right_val:.5572484731674194,left_val:.3692429959774017},{features:[[9,11,2,3,-1],[9,12,2,1,3]],threshold:-.004982965998351574,right_val:.4532504081726074,left_val:.6758509278297424},{features:[[2,16,4,2,-1],[2,17,4,1,2]],threshold:.001881530974060297,right_val:.2932539880275726,left_val:.5368022918701172},{features:[[7,13,6,6,-1],[10,13,3,3,2],[7,16,3,3,2]],threshold:-.0190675500780344,right_val:.5330067276954651,left_val:.1649377048015595},{features:[[7,0,3,4,-1],[8,0,1,4,3]],threshold:-.0046906559728085995,right_val:.5119361877441406,left_val:.1963925957679749},{features:[[8,15,4,3,-1],[8,16,4,1,3]],threshold:.005977713968604803,right_val:.7008398175239563,left_val:.467117190361023},{features:[[0,4,4,6,-1],[0,6,4,2,3]],threshold:-.0333031304180622,right_val:.5104162096977234,left_val:.1155416965484619},{features:[[5,6,12,3,-1],[9,6,4,3,3]],threshold:.0907441079616547,right_val:.1306173056364059,left_val:.5149660110473633},{features:[[7,6,6,14,-1],[9,6,2,14,3]],threshold:.0009355589863844216,right_val:.543985903263092,left_val:.3605481088161469},{features:[[9,7,3,3,-1],[10,7,1,3,3]],threshold:.0149016501381993,right_val:.7687569856643677,left_val:.4886212050914764},{features:[[6,12,2,4,-1],[6,14,2,2,2]],threshold:.0006159411859698594,right_val:.3240939080715179,left_val:.5356813073158264},{features:[[10,12,7,6,-1],[10,14,7,2,3]],threshold:-.0506709888577461,right_val:.5230404138565063,left_val:.1848621964454651},{features:[[1,0,15,2,-1],[1,1,15,1,2]],threshold:.0006866574985906482,right_val:.5517945885658264,left_val:.3840579986572266},{features:[[14,0,6,6,-1],[14,0,3,6,2]],threshold:.008371243253350258,right_val:.6131753921508789,left_val:.4288564026355743},{features:[[5,3,3,1,-1],[6,3,1,1,3]],threshold:-.0012953069526702166,right_val:.528073787689209,left_val:.2913674116134644},{features:[[14,0,6,6,-1],[14,0,3,6,2]],threshold:-.0419416800141335,right_val:.4856030941009522,left_val:.7554799914360046},{features:[[0,3,20,10,-1],[0,8,20,5,2]],threshold:-.0235293805599213,right_val:.5256081223487854,left_val:.2838279902935028},{features:[[14,0,6,6,-1],[14,0,3,6,2]],threshold:.0408574491739273,right_val:.6277297139167786,left_val:.4870935082435608},{features:[[0,0,6,6,-1],[3,0,3,6,2]],threshold:-.0254068691283464,right_val:.4575029015541077,left_val:.7099707722663879},{features:[[19,15,1,2,-1],[19,16,1,1,2]],threshold:-.00041415440500713885,right_val:.5469412207603455,left_val:.4030886888504028},{features:[[0,2,4,8,-1],[2,2,2,8,2]],threshold:.0218241196125746,right_val:.6768701076507568,left_val:.4502024054527283},{features:[[2,1,18,4,-1],[11,1,9,2,2],[2,3,9,2,2]],threshold:.0141140399500728,right_val:.3791700005531311,left_val:.5442860722541809},{features:[[8,12,1,2,-1],[8,13,1,1,2]],threshold:6721459067193791e-20,right_val:.5873476266860962,left_val:.4200463891029358},{features:[[5,2,10,6,-1],[10,2,5,3,2],[5,5,5,3,2]],threshold:-.00794176384806633,right_val:.5585265755653381,left_val:.3792561888694763},{features:[[9,7,2,4,-1],[10,7,1,4,2]],threshold:-.00721444096416235,right_val:.4603548943996429,left_val:.7253103852272034},{features:[[9,7,3,3,-1],[10,7,1,3,3]],threshold:.002581733977422118,right_val:.5900238752365112,left_val:.4693301916122437},{features:[[4,5,12,8,-1],[8,5,4,8,3]],threshold:.1340931951999664,right_val:.1808844953775406,left_val:.5149213075637817},{features:[[15,15,4,3,-1],[15,16,4,1,3]],threshold:.0022962710354477167,right_val:.3717867136001587,left_val:.5399743914604187},{features:[[8,18,3,1,-1],[9,18,1,1,3]],threshold:-.002157584996894002,right_val:.5148863792419434,left_val:.2408495992422104},{features:[[9,13,4,3,-1],[9,14,4,1,3]],threshold:-.004919618833810091,right_val:.4738740026950836,left_val:.6573588252067566},{features:[[7,13,4,3,-1],[7,14,4,1,3]],threshold:.0016267469618469477,right_val:.6303114295005798,left_val:.4192821979522705},{features:[[19,15,1,2,-1],[19,16,1,1,2]],threshold:.00033413388882763684,right_val:.3702101111412048,left_val:.5540298223495483},{features:[[0,15,8,4,-1],[0,17,8,2,2]],threshold:-.0266980808228254,right_val:.5101410746574402,left_val:.1710917949676514},{features:[[9,3,6,4,-1],[11,3,2,4,3]],threshold:-.0305618792772293,right_val:.5168793797492981,left_val:.1904218047857285},{features:[[8,14,4,3,-1],[8,15,4,1,3]],threshold:.002851154888048768,right_val:.6313853859901428,left_val:.4447506964206696},{features:[[3,14,14,6,-1],[3,16,14,2,3]],threshold:-.0362114794552326,right_val:.5377349257469177,left_val:.2490727007389069},{features:[[6,3,6,6,-1],[6,6,6,3,2]],threshold:-.002411518944427371,right_val:.3664236962795258,left_val:.5381243228912354},{features:[[5,11,10,6,-1],[5,14,10,3,2]],threshold:-.0007725320174358785,right_val:.3541550040245056,left_val:.5530232191085815},{features:[[3,10,3,4,-1],[4,10,1,4,3]],threshold:.0002948172914329916,right_val:.5667243003845215,left_val:.4132699072360992},{features:[[13,9,2,2,-1],[13,9,1,2,2]],threshold:-.006233456078916788,right_val:.5198668837547302,left_val:.0987872332334518},{features:[[5,3,6,4,-1],[7,3,2,4,3]],threshold:-.0262747295200825,right_val:.5028107166290283,left_val:.0911274924874306},{features:[[9,7,3,3,-1],[10,7,1,3,3]],threshold:.005321226082742214,right_val:.6222720742225647,left_val:.4726648926734924},{features:[[2,12,2,3,-1],[2,13,2,1,3]],threshold:-.004112905822694302,right_val:.5137804746627808,left_val:.2157457023859024},{features:[[9,8,3,12,-1],[9,12,3,4,3]],threshold:.0032457809429615736,right_val:.3721776902675629,left_val:.5410770773887634},{features:[[3,14,4,6,-1],[3,14,2,3,2],[5,17,2,3,2]],threshold:-.0163597092032433,right_val:.4685291945934296,left_val:.7787874937057495},{features:[[16,15,2,2,-1],[16,16,2,1,2]],threshold:.00032166109303943813,right_val:.4240373969078064,left_val:.5478987097740173},{features:[[2,15,2,2,-1],[2,16,2,1,2]],threshold:.000644524407107383,right_val:.3501324951648712,left_val:.5330560803413391},{features:[[8,12,4,3,-1],[8,13,4,1,3]],threshold:-.0078909732401371,right_val:.4726569056510925,left_val:.6923521161079407},{features:[[0,7,20,1,-1],[10,7,10,1,2]],threshold:.048336211591959,right_val:.0757492035627365,left_val:.50559002161026},{features:[[7,6,8,3,-1],[7,6,4,3,2]],threshold:-.000751781277358532,right_val:.5538573861122131,left_val:.3783741891384125},{features:[[5,7,8,2,-1],[9,7,4,2,2]],threshold:-.002495391061529517,right_val:.5359612107276917,left_val:.3081651031970978},{features:[[9,7,3,5,-1],[10,7,1,5,3]],threshold:-.0022385010961443186,right_val:.4649342894554138,left_val:.663395881652832},{features:[[8,7,3,5,-1],[9,7,1,5,3]],threshold:-.0017988430336117744,right_val:.4347187876701355,left_val:.6596844792366028},{features:[[11,1,3,5,-1],[12,1,1,5,3]],threshold:.008786091580986977,right_val:.2315579950809479,left_val:.523183286190033},{features:[[6,2,3,6,-1],[7,2,1,6,3]],threshold:.003671538084745407,right_val:.2977376878261566,left_val:.520425021648407},{features:[[14,14,6,5,-1],[14,14,3,5,2]],threshold:-.0353364497423172,right_val:.4861505031585693,left_val:.7238878011703491},{features:[[9,8,2,2,-1],[9,9,2,1,2]],threshold:-.0006918924045749009,right_val:.5229824781417847,left_val:.3105022013187408},{features:[[10,7,1,3,-1],[10,8,1,1,3]],threshold:-.003394610946998,right_val:.5210173726081848,left_val:.3138968050479889},{features:[[6,6,2,2,-1],[6,6,1,1,2],[7,7,1,1,2]],threshold:.0009856928372755647,right_val:.6585097908973694,left_val:.4536580145359039},{features:[[2,11,18,4,-1],[11,11,9,2,2],[2,13,9,2,2]],threshold:-.0501631014049053,right_val:.5198916792869568,left_val:.1804454028606415},{features:[[6,6,2,2,-1],[6,6,1,1,2],[7,7,1,1,2]],threshold:-.0022367259953171015,right_val:.4651359021663666,left_val:.7255702018737793},{features:[[0,15,20,2,-1],[0,16,20,1,2]],threshold:.0007432628772221506,right_val:.5898545980453491,left_val:.4412921071052551},{features:[[4,14,2,3,-1],[4,15,2,1,3]],threshold:-.0009348518215119839,right_val:.5366017818450928,left_val:.3500052988529205},{features:[[8,14,4,3,-1],[8,15,4,1,3]],threshold:.0174979399889708,right_val:.8315284848213196,left_val:.4912194907665253},{features:[[8,7,2,3,-1],[8,8,2,1,3]],threshold:-.0015200000489130616,right_val:.537056028842926,left_val:.3570275902748108},{features:[[9,10,2,3,-1],[9,11,2,1,3]],threshold:.0007800394087098539,right_val:.5967335104942322,left_val:.4353772103786469}],threshold:39.1072883605957},{simpleClassifiers:[{features:[[5,4,10,4,-1],[5,6,10,2,2]],threshold:-.00999455526471138,right_val:.3054533004760742,left_val:.6162583231925964},{features:[[9,7,6,4,-1],[12,7,3,2,2],[9,9,3,2,2]],threshold:-.001108522992581129,right_val:.3155578076839447,left_val:.5818294882774353},{features:[[4,7,3,6,-1],[4,9,3,2,3]],threshold:.001036438043229282,right_val:.5692911744117737,left_val:.2552052140235901},{features:[[11,15,4,4,-1],[13,15,2,2,2],[11,17,2,2,2]],threshold:.000682113110087812,right_val:.5934931039810181,left_val:.3685089945793152},{features:[[7,8,4,2,-1],[7,9,4,1,2]],threshold:-.0006805734010413289,right_val:.5474792122840881,left_val:.2332392036914825},{features:[[13,1,4,3,-1],[13,1,2,3,2]],threshold:.0002606878988444805,right_val:.5667545795440674,left_val:.325745701789856},{features:[[5,15,4,4,-1],[5,15,2,2,2],[7,17,2,2,2]],threshold:.0005160737200640142,right_val:.5845472812652588,left_val:.3744716942310333},{features:[[9,5,4,7,-1],[9,5,2,7,2]],threshold:.0008500752155669034,right_val:.5522807240486145,left_val:.3420371115207672},{features:[[5,6,8,3,-1],[9,6,4,3,2]],threshold:-.0018607829697430134,right_val:.5375424027442932,left_val:.2804419994354248},{features:[[9,9,2,2,-1],[9,10,2,1,2]],threshold:-.001503397012129426,right_val:.5498952269554138,left_val:.2579050958156586},{features:[[7,15,5,3,-1],[7,16,5,1,3]],threshold:.0023478909861296415,right_val:.6313710808753967,left_val:.4175156056880951},{features:[[11,10,4,3,-1],[11,10,2,3,2]],threshold:-.00028880240279249847,right_val:.4052666127681732,left_val:.5865169763565063},{features:[[6,9,8,10,-1],[6,14,8,5,2]],threshold:.008940547704696655,right_val:.231865406036377,left_val:.5211141109466553},{features:[[10,11,6,2,-1],[10,11,3,2,2]],threshold:-.0193277392536402,right_val:.5241525769233704,left_val:.2753432989120483},{features:[[4,11,6,2,-1],[7,11,3,2,2]],threshold:-.0002020206011366099,right_val:.3677195906639099,left_val:.5722978711128235},{features:[[11,3,8,1,-1],[11,3,4,1,2]],threshold:.002117906929925084,right_val:.5542430877685547,left_val:.4466108083724976},{features:[[6,3,3,2,-1],[7,3,1,2,3]],threshold:-.0017743760254234076,right_val:.5300959944725037,left_val:.2813253104686737},{features:[[14,5,6,5,-1],[14,5,3,5,2]],threshold:.004223445896059275,right_val:.5795428156852722,left_val:.439970999956131},{features:[[7,5,2,12,-1],[7,11,2,6,2]],threshold:-.0143752200528979,right_val:.5292059183120728,left_val:.2981117963790894},{features:[[8,11,4,3,-1],[8,12,4,1,3]],threshold:-.0153491804376245,right_val:.4748171865940094,left_val:.7705215215682983},{features:[[4,1,2,3,-1],[5,1,1,3,2]],threshold:15152279956964776e-21,right_val:.5576897263526917,left_val:.3718844056129456},{features:[[18,3,2,6,-1],[18,5,2,2,3]],threshold:-.009129391983151436,right_val:.5286766886711121,left_val:.3615196049213409},{features:[[0,3,2,6,-1],[0,5,2,2,3]],threshold:.0022512159775942564,right_val:.3486298024654388,left_val:.5364704728126526},{features:[[9,12,2,3,-1],[9,13,2,1,3]],threshold:-.0049696918576955795,right_val:.4676836133003235,left_val:.6927651762962341},{features:[[7,13,4,3,-1],[7,14,4,1,3]],threshold:-.0128290103748441,right_val:.4660735130310059,left_val:.7712153792381287},{features:[[18,0,2,6,-1],[18,2,2,2,3]],threshold:-.009366006590425968,right_val:.5351287722587585,left_val:.3374983966350555},{features:[[0,0,2,6,-1],[0,2,2,2,3]],threshold:.0032452319283038378,right_val:.3289610147476196,left_val:.5325189828872681},{features:[[8,14,6,3,-1],[8,15,6,1,3]],threshold:-.0117235602810979,right_val:.4754300117492676,left_val:.6837652921676636},{features:[[7,4,2,4,-1],[8,4,1,4,2]],threshold:2925794069597032e-20,right_val:.5360502004623413,left_val:.357208788394928},{features:[[8,5,4,6,-1],[8,7,4,2,3]],threshold:-22244219508138485e-21,right_val:.3552064001560211,left_val:.5541427135467529},{features:[[6,4,2,2,-1],[7,4,1,2,2]],threshold:.005088150966912508,right_val:.1256462037563324,left_val:.5070844292640686},{features:[[3,14,14,4,-1],[10,14,7,2,2],[3,16,7,2,2]],threshold:.0274296794086695,right_val:.1625818014144898,left_val:.5269560217857361},{features:[[6,15,6,2,-1],[6,15,3,1,2],[9,16,3,1,2]],threshold:-.00641428679227829,right_val:.4584197103977203,left_val:.7145588994026184},{features:[[14,15,6,2,-1],[14,16,6,1,2]],threshold:.003347995923832059,right_val:.3494696915149689,left_val:.5398612022399902},{features:[[2,12,12,8,-1],[2,16,12,4,2]],threshold:-.0826354920864105,right_val:.5160226225852966,left_val:.2439192980527878},{features:[[7,7,7,2,-1],[7,8,7,1,2]],threshold:.0010261740535497665,right_val:.5767908096313477,left_val:.3886891901493073},{features:[[0,2,18,2,-1],[0,3,18,1,2]],threshold:-.0016307090409100056,right_val:.5347700715065002,left_val:.3389458060264587},{features:[[9,6,2,5,-1],[9,6,1,5,2]],threshold:.0024546680506318808,right_val:.638724684715271,left_val:.4601413905620575},{features:[[7,5,3,8,-1],[8,5,1,8,3]],threshold:-.0009947651997208595,right_val:.4120396077632904,left_val:.5769879221916199},{features:[[9,6,3,4,-1],[10,6,1,4,3]],threshold:.0154091902077198,right_val:.7089822292327881,left_val:.4878709018230438},{features:[[4,13,3,2,-1],[4,14,3,1,2]],threshold:.001178440055809915,right_val:.2895244956016541,left_val:.5263553261756897},{features:[[9,4,6,3,-1],[11,4,2,3,3]],threshold:-.0277019198983908,right_val:.5219606757164001,left_val:.149882897734642},{features:[[5,4,6,3,-1],[7,4,2,3,3]],threshold:-.0295053999871016,right_val:.4999816119670868,left_val:.024893319234252},{features:[[14,11,5,2,-1],[14,12,5,1,2]],threshold:.0004515943001024425,right_val:.4029662907123566,left_val:.5464622974395752},{features:[[1,2,6,9,-1],[3,2,2,9,3]],threshold:.007177263963967562,right_val:.5866296887397766,left_val:.4271056950092316},{features:[[14,6,6,13,-1],[14,6,3,13,2]],threshold:-.0741820484399796,right_val:.4919027984142304,left_val:.6874179244041443},{features:[[3,6,14,8,-1],[3,6,7,4,2],[10,10,7,4,2]],threshold:-.0172541607171297,right_val:.534873902797699,left_val:.3370676040649414},{features:[[16,0,4,11,-1],[16,0,2,11,2]],threshold:.0148515598848462,right_val:.6129904985427856,left_val:.4626792967319489},{features:[[3,4,12,12,-1],[3,4,6,6,2],[9,10,6,6,2]],threshold:.0100020002573729,right_val:.3423453867435455,left_val:.5346122980117798},{features:[[11,4,5,3,-1],[11,5,5,1,3]],threshold:.0020138120744377375,right_val:.5824304223060608,left_val:.4643830060958862},{features:[[4,11,4,2,-1],[4,12,4,1,2]],threshold:.0015135470312088728,right_val:.2856149971485138,left_val:.5196396112442017},{features:[[10,7,2,2,-1],[10,7,1,2,2]],threshold:.003138143103569746,right_val:.5958529710769653,left_val:.4838162958621979},{features:[[8,7,2,2,-1],[9,7,1,2,2]],threshold:-.005145044066011906,right_val:.4741412103176117,left_val:.8920302987098694},{features:[[9,17,3,2,-1],[10,17,1,2,3]],threshold:-.004473670851439238,right_val:.5337278842926025,left_val:.2033942937850952},{features:[[5,6,3,3,-1],[5,7,3,1,3]],threshold:.001962847076356411,right_val:.6725863218307495,left_val:.457163393497467},{features:[[10,0,3,3,-1],[11,0,1,3,3]],threshold:.005426045041531324,right_val:.2845670878887177,left_val:.5271108150482178},{features:[[5,6,6,2,-1],[5,6,3,1,2],[8,7,3,1,2]],threshold:.0004961146041750908,right_val:.5718597769737244,left_val:.4138312935829163},{features:[[12,16,4,3,-1],[12,17,4,1,3]],threshold:.009372878819704056,right_val:.2804847061634064,left_val:.5225151181221008},{features:[[3,12,3,2,-1],[3,13,3,1,2]],threshold:.0006050089723430574,right_val:.3314523994922638,left_val:.523676872253418},{features:[[9,12,3,2,-1],[9,13,3,1,2]],threshold:.0005679255118593574,right_val:.6276971101760864,left_val:.4531059861183167},{features:[[1,11,16,4,-1],[1,11,8,2,2],[9,13,8,2,2]],threshold:.0246443394571543,right_val:.2017143964767456,left_val:.5130851864814758},{features:[[12,4,3,3,-1],[12,5,3,1,3]],threshold:-.0102904504165053,right_val:.4876641035079956,left_val:.7786595225334167},{features:[[4,4,5,3,-1],[4,5,5,1,3]],threshold:.002062941901385784,right_val:.5881264209747314,left_val:.4288598895072937},{features:[[12,16,4,3,-1],[12,17,4,1,3]],threshold:-.005051948130130768,right_val:.5286008715629578,left_val:.3523977994918823},{features:[[5,4,3,3,-1],[5,5,3,1,3]],threshold:-.0057692620903253555,right_val:.4588094055652618,left_val:.6841086149215698},{features:[[9,0,2,2,-1],[9,1,2,1,2]],threshold:-.0004578994121402502,right_val:.5485978126525879,left_val:.356552004814148},{features:[[8,9,4,2,-1],[8,10,4,1,2]],threshold:-.0007591883768327534,right_val:.5254197120666504,left_val:.336879312992096},{features:[[8,8,4,3,-1],[8,9,4,1,3]],threshold:-.001773725962266326,right_val:.5454015135765076,left_val:.3422161042690277},{features:[[0,13,6,3,-1],[2,13,2,3,3]],threshold:-.008561046794056892,right_val:.4485856890678406,left_val:.6533612012863159},{features:[[16,14,3,2,-1],[16,15,3,1,2]],threshold:.0017277270089834929,right_val:.3925352990627289,left_val:.5307580232620239},{features:[[1,18,18,2,-1],[7,18,6,2,3]],threshold:-.0281996093690395,right_val:.4588584005832672,left_val:.685745894908905},{features:[[16,14,3,2,-1],[16,15,3,1,2]],threshold:-.001778110978193581,right_val:.5369856953620911,left_val:.4037851095199585},{features:[[1,14,3,2,-1],[1,15,3,1,2]],threshold:.00033177141449414194,right_val:.3705750107765198,left_val:.539979875087738},{features:[[7,14,6,3,-1],[7,15,6,1,3]],threshold:.0026385399978607893,right_val:.6452730894088745,left_val:.4665437042713165},{features:[[5,14,8,3,-1],[5,15,8,1,3]],threshold:-.0021183069329708815,right_val:.4064677059650421,left_val:.5914781093597412},{features:[[10,6,4,14,-1],[10,6,2,14,2]],threshold:-.0147732896730304,right_val:.5294762849807739,left_val:.3642038106918335},{features:[[6,6,4,14,-1],[8,6,2,14,2]],threshold:-.0168154407292604,right_val:.5144972801208496,left_val:.2664231956005096},{features:[[13,5,2,3,-1],[13,6,2,1,3]],threshold:-.006337014026939869,right_val:.4852097928524017,left_val:.6779531240463257},{features:[[7,16,6,1,-1],[9,16,2,1,3]],threshold:-44560048991115764e-21,right_val:.4153054058551788,left_val:.5613964796066284},{features:[[9,12,3,3,-1],[9,13,3,1,3]],threshold:-.0010240620467811823,right_val:.4566304087638855,left_val:.5964478254318237},{features:[[7,0,3,3,-1],[8,0,1,3,3]],threshold:-.00231616897508502,right_val:.5188159942626953,left_val:.2976115047931671},{features:[[4,0,16,18,-1],[4,9,16,9,2]],threshold:.5321757197380066,right_val:.220263198018074,left_val:.5187839269638062},{features:[[1,1,16,14,-1],[1,8,16,7,2]],threshold:-.1664305031299591,right_val:.5060343146324158,left_val:.1866022944450378},{features:[[3,9,15,4,-1],[8,9,5,4,3]],threshold:.112535297870636,right_val:.1185022965073586,left_val:.5212125182151794},{features:[[6,12,7,3,-1],[6,13,7,1,3]],threshold:.009304686449468136,right_val:.6826149225234985,left_val:.4589937031269074},{features:[[14,15,2,3,-1],[14,16,2,1,3]],threshold:-.004625509958714247,right_val:.5225008726119995,left_val:.3079940974712372},{features:[[2,3,16,14,-1],[2,3,8,7,2],[10,10,8,7,2]],threshold:-.1111646965146065,right_val:.5080801844596863,left_val:.2101044058799744},{features:[[16,2,4,18,-1],[18,2,2,9,2],[16,11,2,9,2]],threshold:-.0108884396031499,right_val:.4790464043617249,left_val:.5765355229377747},{features:[[4,15,2,3,-1],[4,16,2,1,3]],threshold:.005856430158019066,right_val:.1563598960638046,left_val:.5065100193023682},{features:[[16,2,4,18,-1],[18,2,2,9,2],[16,11,2,9,2]],threshold:.0548543892800808,right_val:.7230510711669922,left_val:.49669149518013},{features:[[1,1,8,3,-1],[1,2,8,1,3]],threshold:-.0111973397433758,right_val:.5098798274993896,left_val:.2194979041814804},{features:[[8,11,4,3,-1],[8,12,4,1,3]],threshold:.004406907130032778,right_val:.6770902872085571,left_val:.4778401851654053},{features:[[5,11,5,9,-1],[5,14,5,3,3]],threshold:-.0636652931571007,right_val:.5081024169921875,left_val:.1936362981796265},{features:[[16,0,4,11,-1],[16,0,2,11,2]],threshold:-.009808149188756943,right_val:.4810341000556946,left_val:.599906325340271},{features:[[7,0,6,1,-1],[9,0,2,1,3]],threshold:-.0021717099007219076,right_val:.5235472917556763,left_val:.3338333964347839},{features:[[16,3,3,7,-1],[17,3,1,7,3]],threshold:-.0133155202493072,right_val:.4919213056564331,left_val:.6617069840431213},{features:[[1,3,3,7,-1],[2,3,1,7,3]],threshold:.002544207964092493,right_val:.6082184910774231,left_val:.4488744139671326},{features:[[7,8,6,12,-1],[7,12,6,4,3]],threshold:.0120378397405148,right_val:.3292432129383087,left_val:.540939211845398},{features:[[0,0,4,11,-1],[2,0,2,11,2]],threshold:-.0207010507583618,right_val:.4594995975494385,left_val:.6819120049476624},{features:[[14,0,6,20,-1],[14,0,3,20,2]],threshold:.0276082791388035,right_val:.5767282843589783,left_val:.4630792140960693},{features:[[0,3,1,2,-1],[0,4,1,1,2]],threshold:.0012370620388537645,right_val:.2635016143321991,left_val:.5165379047393799},{features:[[5,5,10,8,-1],[10,5,5,4,2],[5,9,5,4,2]],threshold:-.037669338285923,right_val:.5278980135917664,left_val:.2536393105983734},{features:[[4,7,12,4,-1],[4,7,6,2,2],[10,9,6,2,2]],threshold:-.0018057259730994701,right_val:.5517500042915344,left_val:.3985156118869782}],threshold:50.61048126220703},{simpleClassifiers:[{features:[[2,1,6,4,-1],[5,1,3,4,2]],threshold:.004429902881383896,right_val:.633522629737854,left_val:.2891018092632294},{features:[[9,7,6,4,-1],[12,7,3,2,2],[9,9,3,2,2]],threshold:-.0023813319858163595,right_val:.3477487862110138,left_val:.621178925037384},{features:[[5,6,2,6,-1],[5,9,2,3,2]],threshold:.0022915711160749197,right_val:.5582118034362793,left_val:.2254412025213242},{features:[[9,16,6,4,-1],[12,16,3,2,2],[9,18,3,2,2]],threshold:.0009945794008672237,right_val:.5930070877075195,left_val:.3711710870265961},{features:[[9,4,2,12,-1],[9,10,2,6,2]],threshold:.0007716466789133847,right_val:.334799587726593,left_val:.565172016620636},{features:[[7,1,6,18,-1],[9,1,2,18,3]],threshold:-.001138641033321619,right_val:.5508630871772766,left_val:.3069126009941101},{features:[[4,12,12,2,-1],[8,12,4,2,3]],threshold:-.0001640303962631151,right_val:.3699047863483429,left_val:.576282799243927},{features:[[8,8,6,2,-1],[8,9,6,1,2]],threshold:29793529392918572e-21,right_val:.5437911152839661,left_val:.2644244134426117},{features:[[8,0,3,6,-1],[9,0,1,6,3]],threshold:.008577490225434303,right_val:.1795724928379059,left_val:.5051138997077942},{features:[[11,18,3,2,-1],[11,19,3,1,2]],threshold:-.0002603268949314952,right_val:.4446826875209808,left_val:.5826969146728516},{features:[[1,1,17,4,-1],[1,3,17,2,2]],threshold:-.006140463054180145,right_val:.5346971750259399,left_val:.3113852143287659},{features:[[11,8,4,12,-1],[11,8,2,12,2]],threshold:-.0230869501829147,right_val:.533119797706604,left_val:.32779461145401},{features:[[8,14,4,3,-1],[8,15,4,1,3]],threshold:-.0142436502501369,right_val:.4588063061237335,left_val:.7381709814071655},{features:[[12,3,2,17,-1],[12,3,1,17,2]],threshold:.0194871295243502,right_val:.2274471968412399,left_val:.5256630778312683},{features:[[4,7,6,1,-1],[6,7,2,1,3]],threshold:-.0009668110869824886,right_val:.3815006911754608,left_val:.5511230826377869},{features:[[18,3,2,3,-1],[18,4,2,1,3]],threshold:.003147470997646451,right_val:.2543726861476898,left_val:.5425636768341064},{features:[[8,4,3,4,-1],[8,6,3,2,2]],threshold:-.00018026070029009134,right_val:.3406304121017456,left_val:.5380191802978516},{features:[[4,5,12,10,-1],[4,10,12,5,2]],threshold:-.006026626098901033,right_val:.54205721616745,left_val:.3035801947116852},{features:[[5,18,4,2,-1],[7,18,2,2,2]],threshold:.00044462960795499384,right_val:.5660110116004944,left_val:.3990997076034546},{features:[[17,2,3,6,-1],[17,4,3,2,3]],threshold:.002260976005345583,right_val:.3940688073635101,left_val:.5562806725502014},{features:[[7,7,6,6,-1],[9,7,2,6,3]],threshold:.0511330589652061,right_val:.7118561863899231,left_val:.4609653949737549},{features:[[17,2,3,6,-1],[17,4,3,2,3]],threshold:-.0177863091230392,right_val:.5322144031524658,left_val:.2316166013479233},{features:[[8,0,3,4,-1],[9,0,1,4,3]],threshold:-.004967962857335806,right_val:.5122029185295105,left_val:.233077198266983},{features:[[9,14,2,3,-1],[9,15,2,1,3]],threshold:.002066768938675523,right_val:.6455488204956055,left_val:.4657444059848785},{features:[[0,12,6,3,-1],[0,13,6,1,3]],threshold:.007441376801580191,right_val:.236163392663002,left_val:.5154392123222351},{features:[[8,14,4,3,-1],[8,15,4,1,3]],threshold:-.003627727972343564,right_val:.4476661086082459,left_val:.6219773292541504},{features:[[3,12,2,3,-1],[3,13,2,1,3]],threshold:-.005353075917810202,right_val:.5102208256721497,left_val:.1837355047464371},{features:[[5,6,12,7,-1],[9,6,4,7,3]],threshold:.1453091949224472,right_val:.1535930931568146,left_val:.5145987272262573},{features:[[0,2,3,6,-1],[0,4,3,2,3]],threshold:.0024394490756094456,right_val:.3624661862850189,left_val:.5343660116195679},{features:[[14,6,1,3,-1],[14,7,1,1,3]],threshold:-.003128339070826769,right_val:.4845592081546783,left_val:.6215007901191711},{features:[[2,0,3,14,-1],[3,0,1,14,3]],threshold:.0017940260004252195,right_val:.5824198126792908,left_val:.4299261868000031},{features:[[12,14,5,6,-1],[12,16,5,2,3]],threshold:.0362538211047649,right_val:.1439467966556549,left_val:.5260334014892578},{features:[[4,14,5,6,-1],[4,16,5,2,3]],threshold:-.005174672231078148,right_val:.5287045240402222,left_val:.350653886795044},{features:[[11,10,2,2,-1],[12,10,1,1,2],[11,11,1,1,2]],threshold:.0006538329762406647,right_val:.6122040152549744,left_val:.4809640944004059},{features:[[5,0,3,14,-1],[6,0,1,14,3]],threshold:-.0264802295714617,right_val:.5045586228370667,left_val:.1139362007379532},{features:[[10,15,2,3,-1],[10,16,2,1,3]],threshold:-.0030440660193562508,right_val:.4794734120368958,left_val:.6352095007896423},{features:[[0,2,2,3,-1],[0,3,2,1,3]],threshold:.0036993520334362984,right_val:.2498510926961899,left_val:.5131118297576904},{features:[[5,11,12,6,-1],[5,14,12,3,2]],threshold:-.0003676293126773089,right_val:.3709532022476196,left_val:.54213947057724},{features:[[6,11,3,9,-1],[6,14,3,3,3]],threshold:-.041382260620594,right_val:.5081691741943359,left_val:.1894959956407547},{features:[[11,10,2,2,-1],[12,10,1,1,2],[11,11,1,1,2]],threshold:-.0010532729793339968,right_val:.4783608913421631,left_val:.645436704158783},{features:[[5,6,1,3,-1],[5,7,1,1,3]],threshold:-.0021648600231856108,right_val:.449982613325119,left_val:.6215031147003174},{features:[[4,9,13,3,-1],[4,10,13,1,3]],threshold:-.0005674774874933064,right_val:.5419334769248962,left_val:.3712610900402069},{features:[[1,7,15,6,-1],[6,7,5,6,3]],threshold:.173758402466774,right_val:.1215742006897926,left_val:.5023643970489502},{features:[[4,5,12,6,-1],[8,5,4,6,3]],threshold:-.0029049699660390615,right_val:.5381883978843689,left_val:.3240267932415009},{features:[[8,10,4,3,-1],[8,11,4,1,3]],threshold:.0012299539521336555,right_val:.5703486204147339,left_val:.4165507853031158},{features:[[15,14,1,3,-1],[15,15,1,1,3]],threshold:-.0005432923790067434,right_val:.554754912853241,left_val:.3854042887687683},{features:[[1,11,5,3,-1],[1,12,5,1,3]],threshold:-.008329725824296474,right_val:.5097082853317261,left_val:.2204494029283524},{features:[[7,1,7,12,-1],[7,7,7,6,2]],threshold:-.00010417630255687982,right_val:.4303036034107208,left_val:.560706615447998},{features:[[0,1,6,10,-1],[0,1,3,5,2],[3,6,3,5,2]],threshold:.0312047004699707,right_val:.6982004046440125,left_val:.4621657133102417},{features:[[16,1,4,3,-1],[16,2,4,1,3]],threshold:.007894350215792656,right_val:.226906806230545,left_val:.5269594192504883},{features:[[5,5,2,3,-1],[5,6,2,1,3]],threshold:-.004364531021565199,right_val:.4537956118583679,left_val:.6359223127365112},{features:[[12,2,3,5,-1],[13,2,1,5,3]],threshold:.007679305970668793,right_val:.274048388004303,left_val:.5274767875671387},{features:[[0,3,4,6,-1],[0,5,4,2,3]],threshold:-.0254311393946409,right_val:.5071732997894287,left_val:.2038519978523254},{features:[[8,12,4,2,-1],[8,13,4,1,2]],threshold:.0008200060110539198,right_val:.6119868159294128,left_val:.4587455093860626},{features:[[8,18,3,1,-1],[9,18,1,1,3]],threshold:.002928460016846657,right_val:.2028204947710037,left_val:.5071274042129517},{features:[[11,10,2,2,-1],[12,10,1,1,2],[11,11,1,1,2]],threshold:4525647091213614e-20,right_val:.5430821776390076,left_val:.4812104105949402},{features:[[7,10,2,2,-1],[7,10,1,1,2],[8,11,1,1,2]],threshold:.0013158309739083052,right_val:.6779323220252991,left_val:.4625813961029053},{features:[[11,11,4,4,-1],[11,13,4,2,2]],threshold:.0015870389761403203,right_val:.3431465029716492,left_val:.5386291742324829},{features:[[8,12,3,8,-1],[9,12,1,8,3]],threshold:-.0215396601706743,right_val:.5003222823143005,left_val:.025942500680685},{features:[[13,0,6,3,-1],[13,1,6,1,3]],threshold:.014334480278194,right_val:.1590632945299149,left_val:.5202844738960266},{features:[[8,8,3,4,-1],[9,8,1,4,3]],threshold:-.008388138376176357,right_val:.4648044109344482,left_val:.728248119354248},{features:[[5,7,10,10,-1],[10,7,5,5,2],[5,12,5,5,2]],threshold:.00919068418443203,right_val:.3923191130161285,left_val:.556235671043396},{features:[[3,18,8,2,-1],[3,18,4,1,2],[7,19,4,1,2]],threshold:-.005845305975526571,right_val:.4629127979278565,left_val:.6803392767906189},{features:[[10,2,6,8,-1],[12,2,2,8,3]],threshold:-.0547077991068363,right_val:.5206125974655151,left_val:.2561671137809753},{features:[[4,2,6,8,-1],[6,2,2,8,3]],threshold:.009114277549088001,right_val:.3053877055644989,left_val:.518962025642395},{features:[[11,0,3,7,-1],[12,0,1,7,3]],threshold:-.0155750000849366,right_val:.5169094800949097,left_val:.1295074969530106},{features:[[7,11,2,1,-1],[8,11,1,1,2]],threshold:-.0001205060034408234,right_val:.4230825006961823,left_val:.5735098123550415},{features:[[15,14,1,3,-1],[15,15,1,1,3]],threshold:.0012273970060050488,right_val:.4079791903495789,left_val:.5289878249168396},{features:[[7,15,2,2,-1],[7,15,1,1,2],[8,16,1,1,2]],threshold:-.0012186600361019373,right_val:.4574409127235413,left_val:.6575639843940735},{features:[[15,14,1,3,-1],[15,15,1,1,3]],threshold:-.0033256649039685726,right_val:.5195019841194153,left_val:.3628047108650208},{features:[[6,0,3,7,-1],[7,0,1,7,3]],threshold:-.0132883097976446,right_val:.504348874092102,left_val:.1284265965223312},{features:[[18,1,2,7,-1],[18,1,1,7,2]],threshold:-.0033839771058410406,right_val:.475750595331192,left_val:.6292240023612976},{features:[[2,0,8,20,-1],[2,10,8,10,2]],threshold:-.2195422053337097,right_val:.5065013766288757,left_val:.148773193359375},{features:[[3,0,15,6,-1],[3,2,15,2,3]],threshold:.004911170806735754,right_val:.5665838718414307,left_val:.425610214471817},{features:[[4,3,12,2,-1],[4,4,12,1,2]],threshold:-.00018744950648397207,right_val:.5586857199668884,left_val:.4004144072532654},{features:[[16,0,4,5,-1],[16,0,2,5,2]],threshold:-.00521786417812109,right_val:.4812706112861633,left_val:.6009116172790527},{features:[[7,0,3,4,-1],[8,0,1,4,3]],threshold:-.0011111519997939467,right_val:.5287089943885803,left_val:.3514933884143829},{features:[[16,0,4,5,-1],[16,0,2,5,2]],threshold:.004403640050441027,right_val:.5924085974693298,left_val:.4642275869846344},{features:[[1,7,6,13,-1],[3,7,2,13,3]],threshold:.1229949966073036,right_val:.0691524818539619,left_val:.5025529265403748},{features:[[16,0,4,5,-1],[16,0,2,5,2]],threshold:-.0123135102912784,right_val:.4934012889862061,left_val:.5884591937065125},{features:[[0,0,4,5,-1],[2,0,2,5,2]],threshold:.004147103987634182,right_val:.589347779750824,left_val:.4372239112854004},{features:[[14,12,3,6,-1],[14,14,3,2,3]],threshold:-.003550264984369278,right_val:.5396270155906677,left_val:.4327551126480103},{features:[[3,12,3,6,-1],[3,14,3,2,3]],threshold:-.0192242693156004,right_val:.5068330764770508,left_val:.1913134008646011},{features:[[16,1,4,3,-1],[16,2,4,1,3]],threshold:.0014395059552043676,right_val:.424353301525116,left_val:.5308178067207336},{features:[[8,7,2,10,-1],[8,7,1,5,2],[9,12,1,5,2]],threshold:-.00677519990131259,right_val:.4540086090564728,left_val:.6365395784378052},{features:[[11,11,4,4,-1],[11,13,4,2,2]],threshold:.007011963054537773,right_val:.302619993686676,left_val:.5189834237098694},{features:[[0,1,4,3,-1],[0,2,4,1,3]],threshold:.005401465110480785,right_val:.2557682991027832,left_val:.5105062127113342},{features:[[13,4,1,3,-1],[13,5,1,1,3]],threshold:.0009027498890645802,right_val:.5861827731132507,left_val:.4696914851665497},{features:[[7,15,3,5,-1],[8,15,1,5,3]],threshold:.0114744501188397,right_val:.152717798948288,left_val:.5053645968437195},{features:[[9,7,3,5,-1],[10,7,1,5,3]],threshold:-.006702343001961708,right_val:.4890604019165039,left_val:.6508980989456177},{features:[[8,7,3,5,-1],[9,7,1,5,3]],threshold:-.0020462959073483944,right_val:.4514600038528442,left_val:.6241816878318787},{features:[[10,6,4,14,-1],[10,6,2,14,2]],threshold:-.009995156899094582,right_val:.5400953888893127,left_val:.3432781100273132},{features:[[0,5,5,6,-1],[0,7,5,2,3]],threshold:-.0357007086277008,right_val:.5074077844619751,left_val:.1878059059381485},{features:[[9,5,6,4,-1],[9,5,3,4,2]],threshold:.0004558456130325794,right_val:.5402569770812988,left_val:.3805277049541473},{features:[[0,0,18,10,-1],[6,0,6,10,3]],threshold:-.0542606003582478,right_val:.4595097005367279,left_val:.6843714714050293},{features:[[10,6,4,14,-1],[10,6,2,14,2]],threshold:.0060600461438298225,right_val:.450052797794342,left_val:.5502905249595642},{features:[[6,6,4,14,-1],[8,6,2,14,2]],threshold:-.006479183211922646,right_val:.5310757160186768,left_val:.3368858098983765},{features:[[13,4,1,3,-1],[13,5,1,1,3]],threshold:-.0014939469983801246,right_val:.4756175875663757,left_val:.6487640142440796},{features:[[5,1,2,3,-1],[6,1,1,3,2]],threshold:14610530342906713e-21,right_val:.5451064109802246,left_val:.403457909822464},{features:[[18,1,2,18,-1],[19,1,1,9,2],[18,10,1,9,2]],threshold:-.00723219383507967,right_val:.4824739992618561,left_val:.6386873722076416},{features:[[2,1,4,3,-1],[2,2,4,1,3]],threshold:-.004064581822603941,right_val:.5157335996627808,left_val:.2986421883106232},{features:[[18,1,2,18,-1],[19,1,1,9,2],[18,10,1,9,2]],threshold:.0304630808532238,right_val:.7159956097602844,left_val:.5022199749946594},{features:[[1,14,4,6,-1],[1,14,2,3,2],[3,17,2,3,2]],threshold:-.008054491132497787,right_val:.4619275033473969,left_val:.6492452025413513},{features:[[10,11,7,6,-1],[10,13,7,2,3]],threshold:.0395051389932632,right_val:.2450613975524902,left_val:.5150570869445801},{features:[[0,10,6,10,-1],[0,10,3,5,2],[3,15,3,5,2]],threshold:.008453020825982094,right_val:.6394037008285522,left_val:.4573669135570526},{features:[[11,0,3,4,-1],[12,0,1,4,3]],threshold:-.0011688120430335402,right_val:.548366129398346,left_val:.3865512013435364},{features:[[5,10,5,6,-1],[5,13,5,3,2]],threshold:.002807067008689046,right_val:.2701480090618134,left_val:.5128579139709473},{features:[[14,6,1,8,-1],[14,10,1,4,2]],threshold:.000473652093205601,right_val:.5387461185455322,left_val:.4051581919193268},{features:[[1,7,18,6,-1],[1,7,9,3,2],[10,10,9,3,2]],threshold:.0117410803213716,right_val:.3719413876533508,left_val:.5295950174331665},{features:[[9,7,2,2,-1],[9,7,1,2,2]],threshold:.0031833238899707794,right_val:.6895126104354858,left_val:.4789406955242157},{features:[[5,9,4,5,-1],[7,9,2,5,2]],threshold:.0007024150108918548,right_val:.3918080925941467,left_val:.5384489297866821}],threshold:54.62007141113281},{simpleClassifiers:[{features:[[7,6,6,3,-1],[9,6,2,3,3]],threshold:.0170599296689034,right_val:.7142534852027893,left_val:.3948527872562408},{features:[[1,0,18,4,-1],[7,0,6,4,3]],threshold:.0218408405780792,right_val:.6090016961097717,left_val:.3370316028594971},{features:[[7,15,2,4,-1],[7,17,2,2,2]],threshold:.00024520049919374287,right_val:.5987902283668518,left_val:.3500576019287109},{features:[[1,0,19,9,-1],[1,3,19,3,3]],threshold:.008327260613441467,right_val:.5697240829467773,left_val:.3267528116703033},{features:[[3,7,3,6,-1],[3,9,3,2,3]],threshold:.0005714829894714057,right_val:.5531656742095947,left_val:.3044599890708923},{features:[[13,7,4,4,-1],[15,7,2,2,2],[13,9,2,2,2]],threshold:.0006737398798577487,right_val:.567263126373291,left_val:.3650012016296387},{features:[[3,7,4,4,-1],[3,7,2,2,2],[5,9,2,2,2]],threshold:3468159047770314e-20,right_val:.5388727188110352,left_val:.3313541114330292},{features:[[9,6,10,8,-1],[9,10,10,4,2]],threshold:-.005856339819729328,right_val:.5498778820037842,left_val:.2697942852973938},{features:[[3,8,14,12,-1],[3,14,14,6,2]],threshold:.00851022731512785,right_val:.2762879133224487,left_val:.5269358158111572},{features:[[6,5,10,12,-1],[11,5,5,6,2],[6,11,5,6,2]],threshold:-.0698172077536583,right_val:.5259246826171875,left_val:.2909603118896484},{features:[[9,11,2,3,-1],[9,12,2,1,3]],threshold:-.0008611367084085941,right_val:.4073697924613953,left_val:.5892577171325684},{features:[[9,5,6,5,-1],[9,5,3,5,2]],threshold:.0009714924963191152,right_val:.5415862202644348,left_val:.3523564040660858},{features:[[9,4,2,4,-1],[9,6,2,2,2]],threshold:-1472749045206001e-20,right_val:.3503156006336212,left_val:.5423017740249634},{features:[[9,5,6,5,-1],[9,5,3,5,2]],threshold:.0484202913939953,right_val:.3411195874214172,left_val:.51939457654953},{features:[[5,5,6,5,-1],[8,5,3,5,2]],threshold:.0013257140526548028,right_val:.5335376262664795,left_val:.315776914358139},{features:[[11,2,6,1,-1],[13,2,2,1,3]],threshold:1492214960308047e-20,right_val:.5536553859710693,left_val:.4451299905776978},{features:[[3,2,6,1,-1],[5,2,2,1,3]],threshold:-.002717339899390936,right_val:.5248088836669922,left_val:.3031741976737976},{features:[[13,5,2,3,-1],[13,6,2,1,3]],threshold:.0029219500720500946,right_val:.6606041789054871,left_val:.4781453013420105},{features:[[0,10,1,4,-1],[0,12,1,2,2]],threshold:-.0019804988987743855,right_val:.5287625193595886,left_val:.3186308145523071},{features:[[13,5,2,3,-1],[13,6,2,1,3]],threshold:-.004001210909336805,right_val:.4749928116798401,left_val:.6413596868515015},{features:[[8,18,3,2,-1],[9,18,1,2,3]],threshold:-.004349199123680592,right_val:.5098996758460999,left_val:.1507498025894165},{features:[[6,15,9,2,-1],[6,16,9,1,2]],threshold:.0013490889687091112,right_val:.5881167054176331,left_val:.4316158890724182},{features:[[8,14,4,3,-1],[8,15,4,1,3]],threshold:.0185970701277256,right_val:.9089794158935547,left_val:.4735553860664368},{features:[[18,4,2,4,-1],[18,6,2,2,2]],threshold:-.001856237999163568,right_val:.5577837228775024,left_val:.3553189039230347},{features:[[5,5,2,3,-1],[5,6,2,1,3]],threshold:.002294043079018593,right_val:.6580877900123596,left_val:.4500094950199127},{features:[[15,16,3,2,-1],[15,17,3,1,2]],threshold:.00029982850537635386,right_val:.3975878953933716,left_val:.5629242062568665},{features:[[0,0,3,9,-1],[0,3,3,3,3]],threshold:.0035455459728837013,right_val:.3605485856533051,left_val:.5381547212600708},{features:[[9,7,3,3,-1],[9,8,3,1,3]],threshold:.009610472247004509,right_val:.1796745955944061,left_val:.5255997180938721},{features:[[8,7,3,3,-1],[8,8,3,1,3]],threshold:-.0062783220782876015,right_val:.5114030241966248,left_val:.227285698056221},{features:[[9,5,2,6,-1],[9,5,1,6,2]],threshold:.0034598479978740215,right_val:.6608219146728516,left_val:.4626308083534241},{features:[[8,6,3,4,-1],[9,6,1,4,3]],threshold:-.0013112019514665008,right_val:.4436857998371124,left_val:.6317539811134338},{features:[[7,6,8,12,-1],[11,6,4,6,2],[7,12,4,6,2]],threshold:.002687617903575301,right_val:.4054022133350372,left_val:.5421109795570374},{features:[[5,6,8,12,-1],[5,6,4,6,2],[9,12,4,6,2]],threshold:.003911816980689764,right_val:.3273454904556274,left_val:.5358477830886841},{features:[[12,4,3,3,-1],[12,5,3,1,3]],threshold:-.014206450432539,right_val:.4975781142711639,left_val:.7793576717376709},{features:[[2,16,3,2,-1],[2,17,3,1,2]],threshold:.0007170552853494883,right_val:.3560903966426849,left_val:.5297319889068604},{features:[[12,4,3,3,-1],[12,5,3,1,3]],threshold:.001663501956500113,right_val:.5816481709480286,left_val:.467809408903122},{features:[[2,12,6,6,-1],[2,14,6,2,3]],threshold:.0033686188980937004,right_val:.3446420133113861,left_val:.5276734232902527},{features:[[7,13,6,3,-1],[7,14,6,1,3]],threshold:.0127995302900672,right_val:.7472159266471863,left_val:.4834679961204529},{features:[[6,14,6,3,-1],[6,15,6,1,3]],threshold:.0033901201095432043,right_val:.6401721239089966,left_val:.4511859118938446},{features:[[14,15,5,3,-1],[14,16,5,1,3]],threshold:.004707077983766794,right_val:.355522096157074,left_val:.533565878868103},{features:[[5,4,3,3,-1],[5,5,3,1,3]],threshold:.0014819339849054813,right_val:.5772724151611328,left_val:.4250707030296326},{features:[[14,15,5,3,-1],[14,16,5,1,3]],threshold:-.0069995759986341,right_val:.5292900204658508,left_val:.3003320097923279},{features:[[5,3,6,2,-1],[7,3,2,2,3]],threshold:.0159390103071928,right_val:.1675581932067871,left_val:.5067319273948669},{features:[[8,15,4,3,-1],[8,16,4,1,3]],threshold:.007637734990566969,right_val:.7085601091384888,left_val:.4795069992542267},{features:[[1,15,5,3,-1],[1,16,5,1,3]],threshold:.006733404006808996,right_val:.2162470072507858,left_val:.5133113265037537},{features:[[8,13,4,6,-1],[10,13,2,3,2],[8,16,2,3,2]],threshold:-.012858809903264,right_val:.525137186050415,left_val:.1938841938972473},{features:[[7,8,3,3,-1],[8,8,1,3,3]],threshold:-.0006227080011740327,right_val:.419786810874939,left_val:.5686538219451904},{features:[[12,0,5,4,-1],[12,2,5,2,2]],threshold:-.0005265168147161603,right_val:.5429695844650269,left_val:.4224168956279755},{features:[[0,2,20,2,-1],[0,2,10,1,2],[10,3,10,1,2]],threshold:.0110750999301672,right_val:.2514517903327942,left_val:.5113775134086609},{features:[[1,0,18,4,-1],[7,0,6,4,3]],threshold:-.0367282517254353,right_val:.4849618971347809,left_val:.7194662094116211},{features:[[4,3,6,1,-1],[6,3,2,1,3]],threshold:-.00028207109426148236,right_val:.539444625377655,left_val:.3840261995792389},{features:[[4,18,13,2,-1],[4,19,13,1,2]],threshold:-.0027489690110087395,right_val:.4569182097911835,left_val:.593708872795105},{features:[[2,10,3,6,-1],[2,12,3,2,3]],threshold:.0100475195795298,right_val:.2802298069000244,left_val:.5138576030731201},{features:[[14,12,6,8,-1],[17,12,3,4,2],[14,16,3,4,2]],threshold:-.008149784058332443,right_val:.4636121094226837,left_val:.6090037226676941},{features:[[4,13,10,6,-1],[4,13,5,3,2],[9,16,5,3,2]],threshold:-.006883388850837946,right_val:.5254660248756409,left_val:.3458611071109772},{features:[[14,12,1,2,-1],[14,13,1,1,2]],threshold:-140393603942357e-19,right_val:.4082083106040955,left_val:.5693104267120361},{features:[[8,13,4,3,-1],[8,14,4,1,3]],threshold:.001549841952510178,right_val:.5806517004966736,left_val:.4350537061691284},{features:[[14,12,2,2,-1],[14,13,2,1,2]],threshold:-.006784149911254644,right_val:.5182775259017944,left_val:.1468873023986816},{features:[[4,12,2,2,-1],[4,13,2,1,2]],threshold:.00021705629478674382,right_val:.345617413520813,left_val:.5293524265289307},{features:[[8,12,9,2,-1],[8,13,9,1,2]],threshold:.00031198898795992136,right_val:.5942413806915283,left_val:.4652450978755951},{features:[[9,14,2,3,-1],[9,15,2,1,3]],threshold:.005450753029435873,right_val:.7024846076965332,left_val:.4653508961200714},{features:[[11,10,3,6,-1],[11,13,3,3,2]],threshold:-.00025818689027801156,right_val:.3768967092037201,left_val:.5497295260429382},{features:[[5,6,9,12,-1],[5,12,9,6,2]],threshold:-.0174425393342972,right_val:.5457497835159302,left_val:.3919087946414948},{features:[[11,10,3,6,-1],[11,13,3,3,2]],threshold:-.045343529433012,right_val:.5154908895492554,left_val:.1631357073783875},{features:[[6,10,3,6,-1],[6,13,3,3,2]],threshold:.0019190689781680703,right_val:.2791895866394043,left_val:.514589786529541},{features:[[5,4,11,3,-1],[5,5,11,1,3]],threshold:-.006017786916345358,right_val:.4756332933902741,left_val:.6517636179924011},{features:[[7,1,5,10,-1],[7,6,5,5,2]],threshold:-.004072073847055435,right_val:.4092685878276825,left_val:.5514652729034424},{features:[[2,8,18,2,-1],[2,9,18,1,2]],threshold:.00039855059003457427,right_val:.5285550951957703,left_val:.316524088382721},{features:[[7,17,5,3,-1],[7,18,5,1,3]],threshold:-.0065418570302426815,right_val:.4652808904647827,left_val:.6853377819061279},{features:[[5,9,12,1,-1],[9,9,4,1,3]],threshold:.003484508953988552,right_val:.4502759873867035,left_val:.5484588146209717},{features:[[0,14,6,6,-1],[0,14,3,3,2],[3,17,3,3,2]],threshold:-.0136967804282904,right_val:.4572555124759674,left_val:.6395779848098755},{features:[[5,9,12,1,-1],[9,9,4,1,3]],threshold:-.017347140237689,right_val:.5181614756584167,left_val:.2751072943210602},{features:[[3,9,12,1,-1],[7,9,4,1,3]],threshold:-.004088542889803648,right_val:.5194984078407288,left_val:.3325636088848114},{features:[[14,10,6,7,-1],[14,10,3,7,2]],threshold:-.009468790143728256,right_val:.485181987285614,left_val:.5942280888557434},{features:[[1,0,16,2,-1],[1,1,16,1,2]],threshold:.0017084840219467878,right_val:.5519806146621704,left_val:.4167110919952393},{features:[[10,9,10,9,-1],[10,12,10,3,3]],threshold:.009480909444391727,right_val:.4208514988422394,left_val:.5433894991874695},{features:[[0,1,10,2,-1],[5,1,5,2,2]],threshold:-.004738965071737766,right_val:.4560655057430267,left_val:.6407189965248108},{features:[[17,3,2,3,-1],[17,4,2,1,3]],threshold:.006576105020940304,right_val:.2258227020502091,left_val:.5214555263519287},{features:[[1,3,2,3,-1],[1,4,2,1,3]],threshold:-.0021690549328923225,right_val:.5156704783439636,left_val:.3151527941226959},{features:[[9,7,3,6,-1],[10,7,1,6,3]],threshold:.014660170301795,right_val:.668994128704071,left_val:.4870837032794952},{features:[[6,5,4,3,-1],[8,5,2,3,2]],threshold:.00017231999663636088,right_val:.5251078009605408,left_val:.3569748997688294},{features:[[7,5,6,6,-1],[9,5,2,6,3]],threshold:-.0218037609010935,right_val:.496632993221283,left_val:.8825920820236206},{features:[[3,4,12,12,-1],[3,4,6,6,2],[9,10,6,6,2]],threshold:-.0947361066937447,right_val:.5061113834381104,left_val:.1446162015199661},{features:[[9,2,6,15,-1],[11,2,2,15,3]],threshold:.0055825551971793175,right_val:.4238066077232361,left_val:.5396478772163391},{features:[[2,2,6,17,-1],[4,2,2,17,3]],threshold:.001951709040440619,right_val:.5497786998748779,left_val:.4170410931110382},{features:[[14,10,6,7,-1],[14,10,3,7,2]],threshold:.0121499001979828,right_val:.5664274096488953,left_val:.4698367118835449},{features:[[0,10,6,7,-1],[3,10,3,7,2]],threshold:-.007516962010413408,right_val:.4463135898113251,left_val:.6267772912979126},{features:[[9,2,6,15,-1],[11,2,2,15,3]],threshold:-.0716679096221924,right_val:.5221003293991089,left_val:.3097011148929596},{features:[[5,2,6,15,-1],[7,2,2,15,3]],threshold:-.0882924199104309,right_val:.5006365180015564,left_val:.0811238884925842},{features:[[17,9,3,6,-1],[17,11,3,2,3]],threshold:.0310630798339844,right_val:.1282255947589874,left_val:.5155503749847412},{features:[[6,7,6,6,-1],[8,7,2,6,3]],threshold:.0466218404471874,right_val:.736396074295044,left_val:.4699777960777283},{features:[[1,10,18,6,-1],[10,10,9,3,2],[1,13,9,3,2]],threshold:-.0121894897893071,right_val:.5518996715545654,left_val:.3920530080795288},{features:[[0,9,10,9,-1],[0,12,10,3,3]],threshold:.0130161102861166,right_val:.3685136139392853,left_val:.5260658264160156},{features:[[8,15,4,3,-1],[8,16,4,1,3]],threshold:-.003495289944112301,right_val:.4716280996799469,left_val:.6339294910430908},{features:[[5,12,3,4,-1],[5,14,3,2,2]],threshold:-4401503974804655e-20,right_val:.3776184916496277,left_val:.5333027243614197},{features:[[3,3,16,12,-1],[3,9,16,6,2]],threshold:-.1096649020910263,right_val:.5198346972465515,left_val:.1765342056751251},{features:[[1,1,12,12,-1],[1,1,6,6,2],[7,7,6,6,2]],threshold:-.0009027955820783973,right_val:.3838908076286316,left_val:.5324159860610962},{features:[[10,4,2,4,-1],[11,4,1,2,2],[10,6,1,2,2]],threshold:.0007112664170563221,right_val:.5755224227905273,left_val:.4647929966449738},{features:[[0,9,10,2,-1],[0,9,5,1,2],[5,10,5,1,2]],threshold:-.003125027986243367,right_val:.5166770815849304,left_val:.323670893907547},{features:[[9,11,3,3,-1],[9,12,3,1,3]],threshold:.002414467977359891,right_val:.6459717750549316,left_val:.4787439107894898},{features:[[3,12,9,2,-1],[3,13,9,1,2]],threshold:.00044391240226104856,right_val:.6010255813598633,left_val:.4409308135509491},{features:[[9,9,2,2,-1],[9,10,2,1,2]],threshold:-.0002261118934256956,right_val:.5493255853652954,left_val:.4038113951683044}],threshold:50.16973114013672},{simpleClassifiers:[{features:[[3,4,13,6,-1],[3,6,13,2,3]],threshold:-.0469012893736362,right_val:.3743801116943359,left_val:.660017192363739},{features:[[9,7,6,4,-1],[12,7,3,2,2],[9,9,3,2,2]],threshold:-.001456834957934916,right_val:.3437797129154205,left_val:.578399121761322},{features:[[1,0,6,8,-1],[4,0,3,8,2]],threshold:.005559836979955435,right_val:.5908216238021851,left_val:.3622266948223114},{features:[[9,5,2,12,-1],[9,11,2,6,2]],threshold:.0007317048730328679,right_val:.2873558104038239,left_val:.550041913986206},{features:[[4,4,3,10,-1],[4,9,3,5,2]],threshold:.001331800944171846,right_val:.5431019067764282,left_val:.267316997051239},{features:[[6,17,8,3,-1],[6,18,8,1,3]],threshold:.00024347059661522508,right_val:.574138879776001,left_val:.3855027854442596},{features:[[0,5,10,6,-1],[0,7,10,2,3]],threshold:-.0030512469820678234,right_val:.3462845087051392,left_val:.5503209829330444},{features:[[13,2,3,2,-1],[13,3,3,1,2]],threshold:-.0006865719915367663,right_val:.5429509282112122,left_val:.3291221857070923},{features:[[7,5,4,5,-1],[9,5,2,5,2]],threshold:.001466820016503334,right_val:.5351811051368713,left_val:.3588382005691528},{features:[[12,14,3,6,-1],[12,16,3,2,3]],threshold:.0003202187072020024,right_val:.5700234174728394,left_val:.429684191942215},{features:[[1,11,8,2,-1],[1,12,8,1,2]],threshold:.0007412218837998807,right_val:.3366870880126953,left_val:.5282164812088013},{features:[[7,13,6,3,-1],[7,14,6,1,3]],threshold:.0038330298848450184,right_val:.6257336139678955,left_val:.4559567868709564},{features:[[0,5,3,6,-1],[0,7,3,2,3]],threshold:-.0154564399272203,right_val:.512945294380188,left_val:.2350116968154907},{features:[[13,2,3,2,-1],[13,3,3,1,2]],threshold:.002679677912965417,right_val:.4155062139034271,left_val:.5329415202140808},{features:[[4,14,4,6,-1],[4,14,2,3,2],[6,17,2,3,2]],threshold:.0028296569362282753,right_val:.5804538130760193,left_val:.4273087978363037},{features:[[13,2,3,2,-1],[13,3,3,1,2]],threshold:-.0039444249123334885,right_val:.5202686190605164,left_val:.2912611961364746},{features:[[8,2,4,12,-1],[8,6,4,4,3]],threshold:.002717955969274044,right_val:.3585677146911621,left_val:.5307688117027283},{features:[[14,0,6,8,-1],[17,0,3,4,2],[14,4,3,4,2]],threshold:.005907762795686722,right_val:.5941585898399353,left_val:.470377504825592},{features:[[7,17,3,2,-1],[8,17,1,2,3]],threshold:-.004224034957587719,right_val:.5088796019554138,left_val:.2141567021608353},{features:[[8,12,4,2,-1],[8,13,4,1,2]],threshold:.0040725888684391975,right_val:.6841061115264893,left_val:.4766413867473602},{features:[[6,0,8,12,-1],[6,0,4,6,2],[10,6,4,6,2]],threshold:.0101495301350951,right_val:.3748497068881989,left_val:.5360798835754395},{features:[[14,0,2,10,-1],[15,0,1,5,2],[14,5,1,5,2]],threshold:-.00018864999583456665,right_val:.3853805065155029,left_val:.5720130205154419},{features:[[5,3,8,6,-1],[5,3,4,3,2],[9,6,4,3,2]],threshold:-.0048864358104765415,right_val:.5340958833694458,left_val:.3693122863769531},{features:[[14,0,6,10,-1],[17,0,3,5,2],[14,5,3,5,2]],threshold:.0261584799736738,right_val:.6059989929199219,left_val:.4962374866008759},{features:[[9,14,1,2,-1],[9,15,1,1,2]],threshold:.0004856075975112617,right_val:.6012468934059143,left_val:.4438945949077606},{features:[[15,10,4,3,-1],[15,11,4,1,3]],threshold:.0112687097862363,right_val:.1840388029813767,left_val:.5244250297546387},{features:[[8,14,2,3,-1],[8,15,2,1,3]],threshold:-.0028114619199186563,right_val:.4409897029399872,left_val:.6060283780097961},{features:[[3,13,14,4,-1],[10,13,7,2,2],[3,15,7,2,2]],threshold:-.005611272994428873,right_val:.5589237213134766,left_val:.3891170918941498},{features:[[1,10,4,3,-1],[1,11,4,1,3]],threshold:.008568009361624718,right_val:.2062619030475617,left_val:.5069345831871033},{features:[[9,11,6,1,-1],[11,11,2,1,3]],threshold:-.00038172779022715986,right_val:.41926109790802,left_val:.5882201790809631},{features:[[5,11,6,1,-1],[7,11,2,1,3]],threshold:-.00017680290329735726,right_val:.400336891412735,left_val:.5533605813980103},{features:[[3,5,16,15,-1],[3,10,16,5,3]],threshold:.006511253770440817,right_val:.5444191098213196,left_val:.3310146927833557},{features:[[6,12,4,2,-1],[8,12,2,2,2]],threshold:-6594868318643421e-20,right_val:.3944905996322632,left_val:.5433831810951233},{features:[[4,4,12,10,-1],[10,4,6,5,2],[4,9,6,5,2]],threshold:.006993905175477266,right_val:.4192714095115662,left_val:.5600358247756958},{features:[[8,6,3,4,-1],[9,6,1,4,3]],threshold:-.0046744439750909805,right_val:.4604960978031158,left_val:.6685466766357422},{features:[[8,12,4,8,-1],[10,12,2,4,2],[8,16,2,4,2]],threshold:.0115898502990603,right_val:.2926830053329468,left_val:.5357121229171753},{features:[[8,14,4,3,-1],[8,15,4,1,3]],threshold:.013007840141654,right_val:.730746328830719,left_val:.4679817855358124},{features:[[12,2,3,2,-1],[13,2,1,2,3]],threshold:-.0011008579749614,right_val:.5415065288543701,left_val:.3937501013278961},{features:[[8,15,3,2,-1],[8,16,3,1,2]],threshold:.0006047264905646443,right_val:.5604041218757629,left_val:.4242376089096069},{features:[[6,0,9,14,-1],[9,0,3,14,3]],threshold:-.0144948400557041,right_val:.5293182730674744,left_val:.3631210029125214},{features:[[9,6,2,3,-1],[10,6,1,3,2]],threshold:-.005305694881826639,right_val:.4621821045875549,left_val:.686045229434967},{features:[[10,8,2,3,-1],[10,9,2,1,3]],threshold:-.00081829127157107,right_val:.542043924331665,left_val:.3944096863269806},{features:[[0,9,4,6,-1],[0,11,4,2,3]],threshold:-.0190775208175182,right_val:.5037891864776611,left_val:.1962621957063675},{features:[[6,0,8,2,-1],[6,1,8,1,2]],threshold:.00035549470339901745,right_val:.5613973140716553,left_val:.4086259007453919},{features:[[6,14,7,3,-1],[6,15,7,1,3]],threshold:.0019679730758070946,right_val:.5926123261451721,left_val:.448912113904953},{features:[[8,10,8,9,-1],[8,13,8,3,3]],threshold:.006918914150446653,right_val:.3728385865688324,left_val:.5335925817489624},{features:[[5,2,3,2,-1],[6,2,1,2,3]],threshold:.002987277926877141,right_val:.2975643873214722,left_val:.5111321210861206},{features:[[14,1,6,8,-1],[17,1,3,4,2],[14,5,3,4,2]],threshold:-.006226461846381426,right_val:.4824537932872772,left_val:.5541489720344543},{features:[[0,1,6,8,-1],[0,1,3,4,2],[3,5,3,4,2]],threshold:.013353300280869,right_val:.6414797902107239,left_val:.4586423933506012},{features:[[1,2,18,6,-1],[10,2,9,3,2],[1,5,9,3,2]],threshold:.0335052385926247,right_val:.3429994881153107,left_val:.5392425060272217},{features:[[9,3,2,1,-1],[10,3,1,1,2]],threshold:-.0025294460356235504,right_val:.5013315081596375,left_val:.1703713983297348},{features:[[13,2,4,6,-1],[15,2,2,3,2],[13,5,2,3,2]],threshold:-.001280162949115038,right_val:.4697405099868774,left_val:.5305461883544922},{features:[[5,4,3,3,-1],[5,5,3,1,3]],threshold:.007068738806992769,right_val:.643650472164154,left_val:.4615545868873596},{features:[[13,5,1,3,-1],[13,6,1,1,3]],threshold:.0009688049904070795,right_val:.6043894290924072,left_val:.4833599030971527},{features:[[2,16,5,3,-1],[2,17,5,1,3]],threshold:.003964765928685665,right_val:.323181688785553,left_val:.5187637209892273},{features:[[13,2,4,6,-1],[15,2,2,3,2],[13,5,2,3,2]],threshold:-.022057730704546,right_val:.520098090171814,left_val:.4079256951808929},{features:[[3,2,4,6,-1],[3,2,2,3,2],[5,5,2,3,2]],threshold:-.0006690631271339953,right_val:.3815600872039795,left_val:.533160924911499},{features:[[13,5,1,2,-1],[13,6,1,1,2]],threshold:-.0006700932863168418,right_val:.4688901901245117,left_val:.5655422210693359},{features:[[5,5,2,2,-1],[5,6,2,1,2]],threshold:.000742845528293401,right_val:.6287400126457214,left_val:.4534381031990051},{features:[[13,9,2,2,-1],[13,9,1,2,2]],threshold:.0022227810695767403,right_val:.3303655982017517,left_val:.5350633263587952},{features:[[5,9,2,2,-1],[6,9,1,2,2]],threshold:-.005413052160292864,right_val:.500543475151062,left_val:.1113687008619309},{features:[[13,17,3,2,-1],[13,18,3,1,2]],threshold:-14520040167553816e-21,right_val:.4325133860111237,left_val:.5628737807273865},{features:[[6,16,4,4,-1],[6,16,2,2,2],[8,18,2,2,2]],threshold:.00023369169502984732,right_val:.5447791218757629,left_val:.4165835082530975},{features:[[9,16,2,3,-1],[9,17,2,1,3]],threshold:.004289454780519009,right_val:.6778649091720581,left_val:.4860391020774841},{features:[[0,13,9,6,-1],[0,15,9,2,3]],threshold:.0059103150852024555,right_val:.3612113893032074,left_val:.52623051404953},{features:[[9,14,2,6,-1],[9,17,2,3,2]],threshold:.0129005396738648,right_val:.32502880692482,left_val:.5319377183914185},{features:[[9,15,2,3,-1],[9,16,2,1,3]],threshold:.004698297940194607,right_val:.6665925979614258,left_val:.461824506521225},{features:[[1,10,18,6,-1],[1,12,18,2,3]],threshold:.0104398597031832,right_val:.3883604109287262,left_val:.550567090511322},{features:[[8,11,4,2,-1],[8,12,4,1,2]],threshold:.0030443191062659025,right_val:.7301844954490662,left_val:.4697853028774262},{features:[[7,9,6,2,-1],[7,10,6,1,2]],threshold:-.0006159375188872218,right_val:.5464984178543091,left_val:.3830839097499847},{features:[[8,8,2,3,-1],[8,9,2,1,3]],threshold:-.0034247159492224455,right_val:.5089530944824219,left_val:.256630003452301},{features:[[17,5,3,4,-1],[18,5,1,4,3]],threshold:-.009353856556117535,right_val:.49407958984375,left_val:.6469966173171997},{features:[[1,19,18,1,-1],[7,19,6,1,3]],threshold:.0523389987647533,right_val:.787877082824707,left_val:.4745982885360718},{features:[[9,0,3,2,-1],[10,0,1,2,3]],threshold:.0035765620414167643,right_val:.2748498022556305,left_val:.5306664705276489},{features:[[1,8,1,6,-1],[1,10,1,2,3]],threshold:.0007155531784519553,right_val:.4041908979415894,left_val:.541312575340271},{features:[[12,17,8,3,-1],[12,17,4,3,2]],threshold:-.0105166798457503,right_val:.4815283119678497,left_val:.6158512234687805},{features:[[0,5,3,4,-1],[1,5,1,4,3]],threshold:.007734792772680521,right_val:.7028980851173401,left_val:.4695805907249451},{features:[[9,7,2,3,-1],[9,8,2,1,3]],threshold:-.004322677850723267,right_val:.5304684042930603,left_val:.2849566042423248},{features:[[7,11,2,2,-1],[7,11,1,1,2],[8,12,1,1,2]],threshold:-.0025534399319440126,right_val:.4688892066478729,left_val:.7056984901428223},{features:[[11,3,2,5,-1],[11,3,1,5,2]],threshold:.00010268510231981054,right_val:.5573464035987854,left_val:.3902932107448578},{features:[[7,3,2,5,-1],[8,3,1,5,2]],threshold:7139518857002258e-21,right_val:.526398777961731,left_val:.368423193693161},{features:[[15,13,2,3,-1],[15,14,2,1,3]],threshold:-.0016711989883333445,right_val:.5387271046638489,left_val:.3849175870418549},{features:[[5,6,2,3,-1],[5,7,2,1,3]],threshold:.004926044959574938,right_val:.7447251081466675,left_val:.4729771912097931},{features:[[4,19,15,1,-1],[9,19,5,1,3]],threshold:.0043908702209591866,right_val:.5591921806335449,left_val:.4809181094169617},{features:[[1,19,15,1,-1],[6,19,5,1,3]],threshold:-.0177936293184757,right_val:.4676927030086517,left_val:.6903678178787231},{features:[[15,13,2,3,-1],[15,14,2,1,3]],threshold:.002046966925263405,right_val:.3308162093162537,left_val:.5370690226554871},{features:[[5,0,4,15,-1],[7,0,2,15,2]],threshold:.0298914890736341,right_val:.3309059143066406,left_val:.5139865279197693},{features:[[9,6,2,5,-1],[9,6,1,5,2]],threshold:.0015494900289922953,right_val:.6078342795372009,left_val:.466023713350296},{features:[[9,5,2,7,-1],[10,5,1,7,2]],threshold:.001495696953497827,right_val:.5863919854164124,left_val:.4404835999011993},{features:[[16,11,3,3,-1],[16,12,3,1,3]],threshold:.0009588592802174389,right_val:.4208523035049439,left_val:.5435971021652222},{features:[[1,11,3,3,-1],[1,12,3,1,3]],threshold:.0004964370164088905,right_val:.4000622034072876,left_val:.5370578169822693},{features:[[6,6,8,3,-1],[6,7,8,1,3]],threshold:-.00272808107547462,right_val:.4259642958641052,left_val:.5659412741661072},{features:[[0,15,6,2,-1],[0,16,6,1,2]],threshold:.0023026480339467525,right_val:.3350869119167328,left_val:.5161657929420471},{features:[[1,0,18,6,-1],[7,0,6,6,3]],threshold:.2515163123607636,right_val:.714730978012085,left_val:.4869661927223206},{features:[[6,0,3,4,-1],[7,0,1,4,3]],threshold:-.004632802214473486,right_val:.5083789825439453,left_val:.27274489402771},{features:[[14,10,4,10,-1],[16,10,2,5,2],[14,15,2,5,2]],threshold:-.0404344908893108,right_val:.5021767020225525,left_val:.6851438879966736},{features:[[3,2,3,2,-1],[4,2,1,2,3]],threshold:14972220014897175e-21,right_val:.5522555112838745,left_val:.428446501493454},{features:[[11,2,2,2,-1],[11,3,2,1,2]],threshold:-.00024050309730228037,right_val:.5390074849128723,left_val:.4226118922233582},{features:[[2,10,4,10,-1],[2,10,2,5,2],[4,15,2,5,2]],threshold:.0236578397452831,right_val:.7504366040229797,left_val:.4744631946086884},{features:[[0,13,20,6,-1],[10,13,10,3,2],[0,16,10,3,2]],threshold:-.00814491044729948,right_val:.5538362860679626,left_val:.424505889415741},{features:[[0,5,2,15,-1],[1,5,1,15,2]],threshold:-.003699213033542037,right_val:.4529713094234467,left_val:.5952357053756714},{features:[[1,7,18,4,-1],[10,7,9,2,2],[1,9,9,2,2]],threshold:-.0067718601785600185,right_val:.5473399758338928,left_val:.4137794077396393},{features:[[0,0,2,17,-1],[1,0,1,17,2]],threshold:.004266953095793724,right_val:.5797994136810303,left_val:.4484114944934845},{features:[[2,6,16,6,-1],[10,6,8,3,2],[2,9,8,3,2]],threshold:.0017791989957913756,right_val:.4432444870471954,left_val:.5624858736991882},{features:[[8,14,1,3,-1],[8,15,1,1,3]],threshold:.0016774770338088274,right_val:.63642418384552,left_val:.4637751877307892},{features:[[8,15,4,2,-1],[8,16,4,1,2]],threshold:.0011732629500329494,right_val:.5914415717124939,left_val:.4544503092765808},{features:[[5,2,8,2,-1],[5,2,4,1,2],[9,3,4,1,2]],threshold:.000869981711730361,right_val:.3885917961597443,left_val:.5334752798080444},{features:[[6,11,8,6,-1],[6,14,8,3,2]],threshold:.0007637834060005844,right_val:.374494194984436,left_val:.5398585200309753},{features:[[9,13,2,2,-1],[9,14,2,1,2]],threshold:.00015684569370932877,right_val:.5614616274833679,left_val:.4317873120307922},{features:[[18,4,2,6,-1],[18,6,2,2,3]],threshold:-.0215113703161478,right_val:.5185542702674866,left_val:.1785925030708313},{features:[[9,12,2,2,-1],[9,13,2,1,2]],threshold:.00013081369979772717,right_val:.5682849884033203,left_val:.4342499077320099},{features:[[18,4,2,6,-1],[18,6,2,2,3]],threshold:.021992040798068,right_val:.2379394024610519,left_val:.5161716938018799},{features:[[9,13,1,3,-1],[9,14,1,1,3]],threshold:-.0008013650076463819,right_val:.4466426968574524,left_val:.598676323890686},{features:[[18,4,2,6,-1],[18,6,2,2,3]],threshold:-.008273609913885593,right_val:.5251057147979736,left_val:.410821795463562},{features:[[0,4,2,6,-1],[0,6,2,2,3]],threshold:.0036831789184361696,right_val:.339751809835434,left_val:.5173814296722412},{features:[[9,12,3,3,-1],[9,13,3,1,3]],threshold:-.007952568121254444,right_val:.4845924079418182,left_val:.6888983249664307},{features:[[3,13,2,3,-1],[3,14,2,1,3]],threshold:.0015382299898192286,right_val:.3454113900661469,left_val:.5178567171096802},{features:[[13,13,4,3,-1],[13,14,4,1,3]],threshold:-.0140435304492712,right_val:.518866777420044,left_val:.1678421050310135},{features:[[5,4,3,3,-1],[5,5,3,1,3]],threshold:.0014315890148282051,right_val:.5655773878097534,left_val:.436825692653656},{features:[[5,2,10,6,-1],[5,4,10,2,3]],threshold:-.0340142287313938,right_val:.4959217011928558,left_val:.7802296280860901},{features:[[3,13,4,3,-1],[3,14,4,1,3]],threshold:-.0120272999629378,right_val:.503223180770874,left_val:.1585101038217545},{features:[[3,7,15,5,-1],[8,7,5,5,3]],threshold:.1331661939620972,right_val:.2755128145217896,left_val:.5163304805755615},{features:[[3,7,12,2,-1],[7,7,4,2,3]],threshold:-.0015221949433907866,right_val:.5214552283287048,left_val:.372831791639328},{features:[[10,3,3,9,-1],[11,3,1,9,3]],threshold:-.000939292716793716,right_val:.4511165022850037,left_val:.5838379263877869},{features:[[8,6,4,6,-1],[10,6,2,6,2]],threshold:.0277197398245335,right_val:.7331544756889343,left_val:.4728286862373352},{features:[[9,7,4,3,-1],[9,8,4,1,3]],threshold:.003103015013039112,right_val:.4101563096046448,left_val:.5302202105522156},{features:[[0,9,4,9,-1],[2,9,2,9,2]],threshold:.0778612196445465,right_val:.127296194434166,left_val:.4998334050178528},{features:[[9,13,3,5,-1],[10,13,1,5,3]],threshold:-.0158549398183823,right_val:.5165656208992004,left_val:.0508333593606949},{features:[[7,7,6,3,-1],[9,7,2,3,3]],threshold:-.00497253006324172,right_val:.4684231877326965,left_val:.6798133850097656},{features:[[9,7,3,5,-1],[10,7,1,5,3]],threshold:-.0009767650626599789,right_val:.4788931906223297,left_val:.6010771989822388},{features:[[5,7,8,2,-1],[9,7,4,2,2]],threshold:-.0024647710379213095,right_val:.5220503807067871,left_val:.3393397927284241},{features:[[5,9,12,2,-1],[9,9,4,2,3]],threshold:-.006793770007789135,right_val:.5239663124084473,left_val:.4365136921405792},{features:[[5,6,10,3,-1],[10,6,5,3,2]],threshold:.0326080210506916,right_val:.2425214946269989,left_val:.505272388458252},{features:[[10,12,3,1,-1],[11,12,1,1,3]],threshold:-.0005851442110724747,right_val:.4758574068546295,left_val:.5733973979949951},{features:[[0,1,11,15,-1],[0,6,11,5,3]],threshold:-.0296326000243425,right_val:.5263597965240479,left_val:.3892289102077484}],threshold:66.66912078857422},{simpleClassifiers:[{features:[[1,0,18,6,-1],[7,0,6,6,3]],threshold:.0465508513152599,right_val:.6240522861480713,left_val:.3276950120925903},{features:[[7,7,6,1,-1],[9,7,2,1,3]],threshold:.007953712716698647,right_val:.6942939162254333,left_val:.4256485104560852},{features:[[5,16,6,4,-1],[5,16,3,2,2],[8,18,3,2,2]],threshold:.0006822156137786806,right_val:.59007328748703,left_val:.3711487054824829},{features:[[6,5,9,8,-1],[6,9,9,4,2]],threshold:-.00019348249770700932,right_val:.53005450963974,left_val:.2041133940219879},{features:[[5,10,2,6,-1],[5,13,2,3,2]],threshold:-.0002671050897333771,right_val:.3103179037570953,left_val:.5416126251220703},{features:[[7,6,8,10,-1],[11,6,4,5,2],[7,11,4,5,2]],threshold:.0027818060480058193,right_val:.3467069864273071,left_val:.5277832746505737},{features:[[5,6,8,10,-1],[5,6,4,5,2],[9,11,4,5,2]],threshold:-.000467790785478428,right_val:.3294492065906525,left_val:.5308231115341187},{features:[[9,5,2,2,-1],[9,6,2,1,2]],threshold:-30335160772665404e-21,right_val:.3852097094058991,left_val:.577387273311615},{features:[[5,12,8,2,-1],[5,13,8,1,2]],threshold:.0007803800981491804,right_val:.6150057911872864,left_val:.4317438900470734},{features:[[10,2,8,2,-1],[10,3,8,1,2]],threshold:-.004255385138094425,right_val:.5324292778968811,left_val:.2933903932571411},{features:[[4,0,2,10,-1],[4,0,1,5,2],[5,5,1,5,2]],threshold:-.0002473561035003513,right_val:.3843030035495758,left_val:.5468844771385193},{features:[[9,10,2,2,-1],[9,11,2,1,2]],threshold:-.00014724259381182492,right_val:.5755587220191956,left_val:.4281542897224426},{features:[[2,8,15,3,-1],[2,9,15,1,3]],threshold:.0011864770203828812,right_val:.5471466183662415,left_val:.374730110168457},{features:[[8,13,4,3,-1],[8,14,4,1,3]],threshold:.0023936580400913954,right_val:.6111528873443604,left_val:.4537783861160278},{features:[[7,2,3,2,-1],[8,2,1,2,3]],threshold:-.0015390539774671197,right_val:.518953800201416,left_val:.2971341907978058},{features:[[7,13,6,3,-1],[7,14,6,1,3]],threshold:-.007196879014372826,right_val:.4726476967334747,left_val:.6699066758155823},{features:[[9,9,2,2,-1],[9,10,2,1,2]],threshold:-.0004149978922214359,right_val:.5260317921638489,left_val:.3384954035282135},{features:[[17,2,3,6,-1],[17,4,3,2,3]],threshold:.004435983020812273,right_val:.3920140862464905,left_val:.539912223815918},{features:[[1,5,3,4,-1],[2,5,1,4,3]],threshold:.0026606200262904167,right_val:.6119617819786072,left_val:.4482578039169312},{features:[[14,8,4,6,-1],[14,10,4,2,3]],threshold:-.0015287200221791863,right_val:.5340266227722168,left_val:.3711237907409668},{features:[[1,4,3,8,-1],[2,4,1,8,3]],threshold:-.0047397250309586525,right_val:.4455145001411438,left_val:.603108823299408},{features:[[8,13,4,6,-1],[8,16,4,3,2]],threshold:-.0148291299119592,right_val:.5341861844062805,left_val:.2838754057884216},{features:[[3,14,2,2,-1],[3,15,2,1,2]],threshold:.0009227555710822344,right_val:.3361653983592987,left_val:.5209547281265259},{features:[[14,8,4,6,-1],[14,10,4,2,3]],threshold:.0835298076272011,right_val:.0811644494533539,left_val:.5119969844818115},{features:[[2,8,4,6,-1],[2,10,4,2,3]],threshold:-.0007563314866274595,right_val:.5189831256866455,left_val:.331712007522583},{features:[[10,14,1,6,-1],[10,17,1,3,2]],threshold:.009840385988354683,right_val:.233495905995369,left_val:.524759829044342},{features:[[7,5,3,6,-1],[8,5,1,6,3]],threshold:-.0015953830443322659,right_val:.4295622110366821,left_val:.5750094056129456},{features:[[11,2,2,6,-1],[12,2,1,3,2],[11,5,1,3,2]],threshold:34766020689858124e-21,right_val:.5564029216766357,left_val:.4342445135116577},{features:[[6,6,6,5,-1],[8,6,2,5,3]],threshold:.0298629105091095,right_val:.6579188108444214,left_val:.4579147100448608},{features:[[17,1,3,6,-1],[17,3,3,2,3]],threshold:.0113255903124809,right_val:.3673888146877289,left_val:.5274311900138855},{features:[[8,7,3,5,-1],[9,7,1,5,3]],threshold:-.008782864548265934,right_val:.4642167091369629,left_val:.7100368738174438},{features:[[9,18,3,2,-1],[10,18,1,2,3]],threshold:.004363995976746082,right_val:.2705877125263214,left_val:.5279216170310974},{features:[[8,18,3,2,-1],[9,18,1,2,3]],threshold:.004180472809821367,right_val:.2449083030223846,left_val:.5072525143623352},{features:[[12,3,5,2,-1],[12,4,5,1,2]],threshold:-.0004566851130221039,right_val:.5548691153526306,left_val:.4283105134963989},{features:[[7,1,5,12,-1],[7,7,5,6,2]],threshold:-.0037140368949621916,right_val:.4103653132915497,left_val:.5519387722015381},{features:[[1,0,18,4,-1],[7,0,6,4,3]],threshold:-.025304289534688,right_val:.48698890209198,left_val:.6867002248764038},{features:[[4,2,2,2,-1],[4,3,2,1,2]],threshold:-.0003445408074185252,right_val:.528769314289093,left_val:.3728874027729034},{features:[[11,14,4,2,-1],[13,14,2,1,2],[11,15,2,1,2]],threshold:-.0008393523166887462,right_val:.4616062045097351,left_val:.6060152053833008},{features:[[0,2,3,6,-1],[0,4,3,2,3]],threshold:.0172800496220589,right_val:.1819823980331421,left_val:.5049635767936707},{features:[[9,7,2,3,-1],[9,8,2,1,3]],threshold:-.006359507795423269,right_val:.5232778787612915,left_val:.1631239950656891},{features:[[5,5,1,3,-1],[5,6,1,1,3]],threshold:.0010298109846189618,right_val:.6176549196243286,left_val:.446327805519104},{features:[[10,10,6,1,-1],[10,10,3,1,2]],threshold:.0010117109632119536,right_val:.4300698935985565,left_val:.5473384857177734},{features:[[4,10,6,1,-1],[7,10,3,1,2]],threshold:-.010308800265193,right_val:.5000867247581482,left_val:.1166985034942627},{features:[[9,17,3,3,-1],[9,18,3,1,3]],threshold:.005468201823532581,right_val:.6719213724136353,left_val:.4769287109375},{features:[[4,14,1,3,-1],[4,15,1,1,3]],threshold:-.0009169646073132753,right_val:.5178164839744568,left_val:.3471089899539948},{features:[[12,5,3,3,-1],[12,6,3,1,3]],threshold:.002392282010987401,right_val:.6216310858726501,left_val:.4785236120223999},{features:[[4,5,12,3,-1],[4,6,12,1,3]],threshold:-.007557381875813007,right_val:.4410085082054138,left_val:.5814796090126038},{features:[[9,8,2,3,-1],[9,9,2,1,3]],threshold:-.0007702403236180544,right_val:.546572208404541,left_val:.387800008058548},{features:[[4,9,3,3,-1],[5,9,1,3,3]],threshold:-.00871259905397892,right_val:.4995836019515991,left_val:.1660051047801971},{features:[[6,0,9,17,-1],[9,0,3,17,3]],threshold:-.0103063201531768,right_val:.5274233818054199,left_val:.4093391001224518},{features:[[9,12,1,3,-1],[9,13,1,1,3]],threshold:-.002094097901135683,right_val:.4572280049324036,left_val:.6206194758415222},{features:[[9,5,2,15,-1],[9,10,2,5,3]],threshold:.006809905171394348,right_val:.4155600070953369,left_val:.5567759275436401},{features:[[8,14,2,3,-1],[8,15,2,1,3]],threshold:-.0010746059706434608,right_val:.4353024959564209,left_val:.5638927817344666},{features:[[10,14,1,3,-1],[10,15,1,1,3]],threshold:.0021550289820879698,right_val:.6749758124351501,left_val:.4826265871524811},{features:[[7,1,6,5,-1],[9,1,2,5,3]],threshold:.0317423194646835,right_val:.188324898481369,left_val:.5048379898071289},{features:[[0,0,20,2,-1],[0,0,10,2,2]],threshold:-.0783827230334282,right_val:.5260158181190491,left_val:.2369548976421356},{features:[[2,13,5,3,-1],[2,14,5,1,3]],threshold:.005741511937230825,right_val:.2776469886302948,left_val:.5048828721046448},{features:[[9,11,2,3,-1],[9,12,2,1,3]],threshold:-.0029014600440859795,right_val:.4693317115306854,left_val:.6238604784011841},{features:[[2,5,9,15,-1],[2,10,9,5,3]],threshold:-.0026427931152284145,right_val:.5169777274131775,left_val:.3314141929149628},{features:[[5,0,12,10,-1],[11,0,6,5,2],[5,5,6,5,2]],threshold:-.1094966009259224,right_val:.5183441042900085,left_val:.2380045056343079},{features:[[5,1,2,3,-1],[6,1,1,3,2]],threshold:7407591328956187e-20,right_val:.5362150073051453,left_val:.406963586807251},{features:[[10,7,6,1,-1],[12,7,2,1,3]],threshold:-.0005059380200691521,right_val:.437459409236908,left_val:.5506706237792969},{features:[[3,1,2,10,-1],[3,1,1,5,2],[4,6,1,5,2]],threshold:-.0008213177789002657,right_val:.4209375977516174,left_val:.5525709986686707},{features:[[13,7,2,1,-1],[13,7,1,1,2]],threshold:-60276539443293586e-21,right_val:.4748266041278839,left_val:.5455474853515625},{features:[[4,13,4,6,-1],[4,15,4,2,3]],threshold:.006806514225900173,right_val:.3424577116966248,left_val:.5157995820045471},{features:[[13,7,2,1,-1],[13,7,1,1,2]],threshold:.0017202789895236492,right_val:.6331263780593872,left_val:.5013207793235779},{features:[[5,7,2,1,-1],[6,7,1,1,2]],threshold:-.0001301692973356694,right_val:.4226869940757752,left_val:.5539718270301819},{features:[[2,12,18,4,-1],[11,12,9,2,2],[2,14,9,2,2]],threshold:-.004801638890057802,right_val:.5430780053138733,left_val:.4425095021724701},{features:[[5,7,2,2,-1],[5,7,1,1,2],[6,8,1,1,2]],threshold:-.002539931097999215,right_val:.4697605073451996,left_val:.7145782113075256},{features:[[16,3,4,2,-1],[16,4,4,1,2]],threshold:-.0014278929447755218,right_val:.539960503578186,left_val:.4070445001125336},{features:[[0,2,2,18,-1],[0,2,1,9,2],[1,11,1,9,2]],threshold:-.0251425504684448,right_val:.4747352004051209,left_val:.7884690761566162},{features:[[1,2,18,4,-1],[10,2,9,2,2],[1,4,9,2,2]],threshold:-.0038899609353393316,right_val:.5577110052108765,left_val:.4296191930770874},{features:[[9,14,1,3,-1],[9,15,1,1,3]],threshold:.004394745919853449,right_val:.702394425868988,left_val:.4693162143230438},{features:[[2,12,18,4,-1],[11,12,9,2,2],[2,14,9,2,2]],threshold:.0246784202754498,right_val:.3812510073184967,left_val:.5242322087287903},{features:[[0,12,18,4,-1],[0,12,9,2,2],[9,14,9,2,2]],threshold:.0380476787686348,right_val:.1687828004360199,left_val:.5011739730834961},{features:[[11,4,5,3,-1],[11,5,5,1,3]],threshold:.007942486554384232,right_val:.6369568109512329,left_val:.4828582108020783},{features:[[6,4,7,3,-1],[6,5,7,1,3]],threshold:-.0015110049862414598,right_val:.4487667977809906,left_val:.5906485915184021},{features:[[13,17,3,3,-1],[13,18,3,1,3]],threshold:.0064201741479337215,right_val:.2990570068359375,left_val:.5241097807884216},{features:[[8,1,3,4,-1],[9,1,1,4,3]],threshold:-.0029802159406244755,right_val:.5078489780426025,left_val:.3041465878486633},{features:[[11,4,2,4,-1],[11,4,1,4,2]],threshold:-.0007458007894456387,right_val:.5256826281547546,left_val:.4128139019012451},{features:[[0,17,9,3,-1],[3,17,3,3,3]],threshold:-.0104709500446916,right_val:.4494296014308929,left_val:.5808395147323608},{features:[[11,0,2,8,-1],[12,0,1,4,2],[11,4,1,4,2]],threshold:.009336920455098152,right_val:.265894889831543,left_val:.524655282497406},{features:[[0,8,6,12,-1],[0,8,3,6,2],[3,14,3,6,2]],threshold:.0279369000345469,right_val:.7087256908416748,left_val:.4674955010414124},{features:[[10,7,4,12,-1],[10,13,4,6,2]],threshold:.007427767850458622,right_val:.3758518099784851,left_val:.5409486889839172},{features:[[5,3,8,14,-1],[5,10,8,7,2]],threshold:-.0235845092684031,right_val:.5238550901412964,left_val:.3758639991283417},{features:[[14,10,6,1,-1],[14,10,3,1,2]],threshold:.0011452640173956752,right_val:.5804247260093689,left_val:.4329578876495361},{features:[[0,4,10,4,-1],[0,6,10,2,2]],threshold:-.0004346866044215858,right_val:.3873069882392883,left_val:.5280618071556091},{features:[[10,0,5,8,-1],[10,4,5,4,2]],threshold:.0106485402211547,right_val:.5681251883506775,left_val:.4902113080024719},{features:[[8,1,4,8,-1],[8,1,2,4,2],[10,5,2,4,2]],threshold:-.0003941805043723434,right_val:.4318251013755798,left_val:.5570880174636841},{features:[[9,11,6,1,-1],[11,11,2,1,3]],threshold:-.00013270479394122958,right_val:.4343554973602295,left_val:.5658439993858337},{features:[[8,9,3,4,-1],[9,9,1,4,3]],threshold:-.002012551063671708,right_val:.4537523984909058,left_val:.6056739091873169},{features:[[18,4,2,6,-1],[18,6,2,2,3]],threshold:.0024854319635778666,right_val:.4138010144233704,left_val:.5390477180480957},{features:[[8,8,3,4,-1],[9,8,1,4,3]],threshold:.0018237880431115627,right_val:.5717188715934753,left_val:.4354828894138336},{features:[[7,1,13,3,-1],[7,2,13,1,3]],threshold:-.0166566595435143,right_val:.521612286567688,left_val:.3010913133621216},{features:[[7,13,6,1,-1],[9,13,2,1,3]],threshold:.0008034955826587975,right_val:.3818396925926209,left_val:.5300151109695435},{features:[[12,11,3,6,-1],[12,13,3,2,3]],threshold:.003417037893086672,right_val:.4241400063037872,left_val:.5328028798103333},{features:[[5,11,6,1,-1],[7,11,2,1,3]],threshold:-.00036222729249857366,right_val:.418697714805603,left_val:.5491728186607361},{features:[[1,4,18,10,-1],[10,4,9,5,2],[1,9,9,5,2]],threshold:-.1163002029061317,right_val:.522645115852356,left_val:.1440722048282623},{features:[[8,6,4,9,-1],[8,9,4,3,3]],threshold:-.0146950101479888,right_val:.4715717136859894,left_val:.7747725248336792},{features:[[8,6,4,3,-1],[8,7,4,1,3]],threshold:.0021972130052745342,right_val:.3315644860267639,left_val:.5355433821678162},{features:[[8,7,3,3,-1],[9,7,1,3,3]],threshold:-.00046965209185145795,right_val:.4458136856555939,left_val:.5767235159873962},{features:[[14,15,4,3,-1],[14,16,4,1,3]],threshold:.006514499895274639,right_val:.3647888898849487,left_val:.5215674042701721},{features:[[5,10,3,10,-1],[6,10,1,10,3]],threshold:.0213000606745481,right_val:.1567950993776321,left_val:.4994204938411713},{features:[[8,15,4,3,-1],[8,16,4,1,3]],threshold:.0031881409231573343,right_val:.6287270188331604,left_val:.4742200076580048},{features:[[0,8,1,6,-1],[0,10,1,2,3]],threshold:.0009001977741718292,right_val:.394375205039978,left_val:.5347954034805298},{features:[[10,15,1,3,-1],[10,16,1,1,3]],threshold:-.005177227780222893,right_val:.5013138055801392,left_val:.6727191805839539},{features:[[2,15,4,3,-1],[2,16,4,1,3]],threshold:-.004376464989036322,right_val:.5128793120384216,left_val:.3106675148010254},{features:[[18,3,2,8,-1],[19,3,1,4,2],[18,7,1,4,2]],threshold:.002629996044561267,right_val:.5755215883255005,left_val:.488631010055542},{features:[[0,3,2,8,-1],[0,3,1,4,2],[1,7,1,4,2]],threshold:-.002045868895947933,right_val:.4558076858520508,left_val:.6025794148445129},{features:[[3,7,14,10,-1],[10,7,7,5,2],[3,12,7,5,2]],threshold:.0694827064871788,right_val:.2185259014368057,left_val:.5240747928619385},{features:[[0,7,19,3,-1],[0,8,19,1,3]],threshold:.0240489393472672,right_val:.2090622037649155,left_val:.501186728477478},{features:[[12,6,3,3,-1],[12,7,3,1,3]],threshold:.003109534038230777,right_val:.7108548283576965,left_val:.4866712093353272},{features:[[0,6,1,3,-1],[0,7,1,1,3]],threshold:-.00125032605137676,right_val:.5156195163726807,left_val:.3407891094684601},{features:[[12,6,3,3,-1],[12,7,3,1,3]],threshold:-.0010281190043315291,right_val:.443943202495575,left_val:.557557225227356},{features:[[5,6,3,3,-1],[5,7,3,1,3]],threshold:-.008889362215995789,right_val:.4620442092418671,left_val:.6402000784873962},{features:[[8,2,4,2,-1],[8,3,4,1,2]],threshold:-.0006109480164013803,right_val:.5448899865150452,left_val:.3766441941261292},{features:[[6,3,4,12,-1],[8,3,2,12,2]],threshold:-.005768635775893927,right_val:.5133677124977112,left_val:.3318648934364319},{features:[[13,6,2,3,-1],[13,7,2,1,3]],threshold:.0018506490159779787,right_val:.6406934857368469,left_val:.4903570115566254},{features:[[0,10,20,4,-1],[0,12,20,2,2]],threshold:-.0997994691133499,right_val:.5015562176704407,left_val:.1536051034927368},{features:[[2,0,17,14,-1],[2,7,17,7,2]],threshold:-.3512834906578064,right_val:.5174378752708435,left_val:.0588231310248375},{features:[[0,0,6,10,-1],[0,0,3,5,2],[3,5,3,5,2]],threshold:-.0452445708215237,right_val:.4677872955799103,left_val:.6961488723754883},{features:[[14,6,6,4,-1],[14,6,3,4,2]],threshold:.0714815780520439,right_val:.1038092970848084,left_val:.5167986154556274},{features:[[0,6,6,4,-1],[3,6,3,4,2]],threshold:.0021895780228078365,right_val:.5532060861587524,left_val:.4273078143596649},{features:[[13,2,7,2,-1],[13,3,7,1,2]],threshold:-.0005924265133216977,right_val:.5276389122009277,left_val:.46389439702034},{features:[[0,2,7,2,-1],[0,3,7,1,2]],threshold:.0016788389766588807,right_val:.3932034969329834,left_val:.530164897441864},{features:[[6,11,14,2,-1],[13,11,7,1,2],[6,12,7,1,2]],threshold:-.0022163488902151585,right_val:.4757033884525299,left_val:.5630694031715393},{features:[[8,5,2,2,-1],[8,5,1,1,2],[9,6,1,1,2]],threshold:.00011568699846975505,right_val:.5535702705383301,left_val:.4307535886764526},{features:[[13,9,2,3,-1],[13,9,1,3,2]],threshold:-.007201728876680136,right_val:.5193064212799072,left_val:.144488200545311},{features:[[1,1,3,12,-1],[2,1,1,12,3]],threshold:.0008908127201721072,right_val:.5593621134757996,left_val:.4384432137012482},{features:[[17,4,1,3,-1],[17,5,1,1,3]],threshold:.00019605009583756328,right_val:.4705956876277924,left_val:.5340415835380554},{features:[[2,4,1,3,-1],[2,5,1,1,3]],threshold:.0005202214233577251,right_val:.3810079097747803,left_val:.5213856101036072},{features:[[14,5,1,3,-1],[14,6,1,1,3]],threshold:.0009458857239224017,right_val:.6130738854408264,left_val:.4769414961338043},{features:[[7,16,2,3,-1],[7,17,2,1,3]],threshold:916984718060121e-19,right_val:.5429363250732422,left_val:.4245009124279022},{features:[[8,13,4,6,-1],[10,13,2,3,2],[8,16,2,3,2]],threshold:.002183320000767708,right_val:.419107586145401,left_val:.5457730889320374},{features:[[5,5,1,3,-1],[5,6,1,1,3]],threshold:-.0008603967144154012,right_val:.4471659958362579,left_val:.5764588713645935},{features:[[16,0,4,20,-1],[16,0,2,20,2]],threshold:-.0132362395524979,right_val:.4695009887218475,left_val:.6372823119163513},{features:[[5,1,2,6,-1],[5,1,1,3,2],[6,4,1,3,2]],threshold:.0004337670106906444,right_val:.394582986831665,left_val:.5317873954772949}],threshold:67.69892120361328},{simpleClassifiers:[{features:[[5,4,10,4,-1],[5,6,10,2,2]],threshold:-.024847149848938,right_val:.3873311877250671,left_val:.6555516719818115},{features:[[15,2,4,12,-1],[15,2,2,12,2]],threshold:.006134861148893833,right_val:.5973997712135315,left_val:.374807208776474},{features:[[7,6,4,12,-1],[7,12,4,6,2]],threshold:.006449849810451269,right_val:.2548811137676239,left_val:.542549192905426},{features:[[14,5,1,8,-1],[14,9,1,4,2]],threshold:.0006349121103994548,right_val:.5387253761291504,left_val:.2462442070245743},{features:[[1,4,14,10,-1],[1,4,7,5,2],[8,9,7,5,2]],threshold:.0014023890253156424,right_val:.3528657853603363,left_val:.5594322085380554},{features:[[11,6,6,14,-1],[14,6,3,7,2],[11,13,3,7,2]],threshold:.0003004400059580803,right_val:.576593816280365,left_val:.3958503901958466},{features:[[3,6,6,14,-1],[3,6,3,7,2],[6,13,3,7,2]],threshold:.00010042409849120304,right_val:.5534998178482056,left_val:.3698996901512146},{features:[[4,9,15,2,-1],[9,9,5,2,3]],threshold:-.005084149073809385,right_val:.5547800064086914,left_val:.3711090981960297},{features:[[7,14,6,3,-1],[7,15,6,1,3]],threshold:-.0195372607558966,right_val:.4579297006130219,left_val:.7492755055427551},{features:[[6,3,14,4,-1],[13,3,7,2,2],[6,5,7,2,2]],threshold:-7453274065483129e-21,right_val:.390406996011734,left_val:.5649787187576294},{features:[[1,9,15,2,-1],[6,9,5,2,3]],threshold:-.0036079459823668003,right_val:.5267801284790039,left_val:.3381088078022003},{features:[[6,11,8,9,-1],[6,14,8,3,3]],threshold:.002069750102236867,right_val:.3714388906955719,left_val:.5519291162490845},{features:[[7,4,3,8,-1],[8,4,1,8,3]],threshold:-.0004646384040825069,right_val:.4113566875457764,left_val:.5608214735984802},{features:[[14,6,2,6,-1],[14,9,2,3,2]],threshold:.0007549045258201659,right_val:.532935619354248,left_val:.3559206128120422},{features:[[5,7,6,4,-1],[5,7,3,2,2],[8,9,3,2,2]],threshold:-.0009832223877310753,right_val:.3763205111026764,left_val:.5414795875549316},{features:[[1,1,18,19,-1],[7,1,6,19,3]],threshold:-.0199406407773495,right_val:.4705299139022827,left_val:.634790301322937},{features:[[1,2,6,5,-1],[4,2,3,5,2]],threshold:.0037680300883948803,right_val:.5563716292381287,left_val:.3913489878177643},{features:[[12,17,6,2,-1],[12,18,6,1,2]],threshold:-.009452850557863712,right_val:.5215116739273071,left_val:.2554892897605896},{features:[[2,17,6,2,-1],[2,18,6,1,2]],threshold:.002956084907054901,right_val:.3063920140266419,left_val:.5174679160118103},{features:[[17,3,3,6,-1],[17,5,3,2,3]],threshold:.009107873775064945,right_val:.2885963022708893,left_val:.5388448238372803},{features:[[8,17,3,3,-1],[8,18,3,1,3]],threshold:.0018219229532405734,right_val:.58521968126297,left_val:.4336043000221252},{features:[[10,13,2,6,-1],[10,16,2,3,2]],threshold:.0146887395530939,right_val:.2870005965232849,left_val:.5287361741065979},{features:[[7,13,6,3,-1],[7,14,6,1,3]],threshold:-.0143879903480411,right_val:.4647370874881744,left_val:.701944887638092},{features:[[17,3,3,6,-1],[17,5,3,2,3]],threshold:-.0189866498112679,right_val:.5247011780738831,left_val:.2986552119255066},{features:[[8,13,2,3,-1],[8,14,2,1,3]],threshold:.0011527639580890536,right_val:.593166172504425,left_val:.4323473870754242},{features:[[9,3,6,2,-1],[11,3,2,2,3]],threshold:.0109336702153087,right_val:.3130319118499756,left_val:.5286864042282104},{features:[[0,3,3,6,-1],[0,5,3,2,3]],threshold:-.0149327302351594,right_val:.508407711982727,left_val:.2658419013023377},{features:[[8,5,4,6,-1],[8,7,4,2,3]],threshold:-.0002997053961735219,right_val:.374072402715683,left_val:.5463526844978333},{features:[[5,5,3,2,-1],[5,6,3,1,2]],threshold:.004167762119323015,right_val:.7435721755027771,left_val:.4703496992588043},{features:[[10,1,3,4,-1],[11,1,1,4,3]],threshold:-.00639053201302886,right_val:.5280538201332092,left_val:.2069258987903595},{features:[[1,2,5,9,-1],[1,5,5,3,3]],threshold:.004502960946410894,right_val:.348354309797287,left_val:.518264889717102},{features:[[13,6,2,3,-1],[13,7,2,1,3]],threshold:-.009204036556184292,right_val:.4932360053062439,left_val:.680377721786499},{features:[[0,6,14,3,-1],[7,6,7,3,2]],threshold:.0813272595405579,right_val:.2253051996231079,left_val:.5058398842811584},{features:[[2,11,18,8,-1],[2,15,18,4,2]],threshold:-.150792807340622,right_val:.5264679789543152,left_val:.2963424921035767},{features:[[5,6,2,3,-1],[5,7,2,1,3]],threshold:.0033179009333252907,right_val:.7072932124137878,left_val:.4655495882034302},{features:[[10,6,4,2,-1],[12,6,2,1,2],[10,7,2,1,2]],threshold:.0007740280125290155,right_val:.5668237805366516,left_val:.4780347943305969},{features:[[6,6,4,2,-1],[6,6,2,1,2],[8,7,2,1,2]],threshold:.0006819954141974449,right_val:.5722156763076782,left_val:.4286996126174927},{features:[[10,1,3,4,-1],[11,1,1,4,3]],threshold:.0053671570494771,right_val:.3114621937274933,left_val:.5299307107925415},{features:[[7,1,2,7,-1],[8,1,1,7,2]],threshold:9701866656541824e-20,right_val:.5269461870193481,left_val:.3674638867378235},{features:[[4,2,15,14,-1],[4,9,15,7,2]],threshold:-.1253408938646317,right_val:.5245791077613831,left_val:.2351492047309876},{features:[[8,7,3,2,-1],[9,7,1,2,3]],threshold:-.005251626949757338,right_val:.4693767130374908,left_val:.7115936875343323},{features:[[2,3,18,4,-1],[11,3,9,2,2],[2,5,9,2,2]],threshold:-.007834210991859436,right_val:.5409085750579834,left_val:.4462651014328003},{features:[[9,7,2,2,-1],[10,7,1,2,2]],threshold:-.001131006982177496,right_val:.4417662024497986,left_val:.5945618748664856},{features:[[13,9,2,3,-1],[13,9,1,3,2]],threshold:.0017601120052859187,right_val:.3973453044891357,left_val:.5353249907493591},{features:[[5,2,6,2,-1],[7,2,2,2,3]],threshold:-.00081581249833107,right_val:.5264726877212524,left_val:.3760268092155457},{features:[[9,5,2,7,-1],[9,5,1,7,2]],threshold:-.003868758911266923,right_val:.4749819934368134,left_val:.6309912800788879},{features:[[5,9,2,3,-1],[6,9,1,3,2]],threshold:.0015207129763439298,right_val:.3361223936080933,left_val:.5230181813240051},{features:[[6,0,14,18,-1],[6,9,14,9,2]],threshold:.545867383480072,right_val:.1172635033726692,left_val:.5167139768600464},{features:[[2,16,6,3,-1],[2,17,6,1,3]],threshold:.0156501904129982,right_val:.1393294930458069,left_val:.4979439079761505},{features:[[9,7,3,6,-1],[10,7,1,6,3]],threshold:-.0117318602278829,right_val:.4921196103096008,left_val:.7129650712013245},{features:[[7,8,4,3,-1],[7,9,4,1,3]],threshold:-.006176512222737074,right_val:.5049701929092407,left_val:.2288102954626083},{features:[[7,12,6,3,-1],[7,13,6,1,3]],threshold:.0022457661107182503,right_val:.6048725843429565,left_val:.4632433950901032},{features:[[9,12,2,3,-1],[9,13,2,1,3]],threshold:-.005191586911678314,right_val:.4602192938327789,left_val:.6467421054840088},{features:[[7,12,6,2,-1],[9,12,2,2,3]],threshold:-.0238278806209564,right_val:.5226079225540161,left_val:.1482000946998596},{features:[[5,11,4,6,-1],[5,14,4,3,2]],threshold:.0010284580057486892,right_val:.3375957012176514,left_val:.5135489106178284},{features:[[11,12,7,2,-1],[11,13,7,1,2]],threshold:-.0100788502022624,right_val:.5303567051887512,left_val:.2740561068058014},{features:[[6,10,8,6,-1],[6,10,4,3,2],[10,13,4,3,2]],threshold:.002616893034428358,right_val:.3972454071044922,left_val:.533267080783844},{features:[[11,10,3,4,-1],[11,12,3,2,2]],threshold:.000543853675480932,right_val:.4063411951065064,left_val:.5365604162216187},{features:[[9,16,2,3,-1],[9,17,2,1,3]],threshold:.005351051222532988,right_val:.6889045834541321,left_val:.4653759002685547},{features:[[13,3,1,9,-1],[13,6,1,3,3]],threshold:-.0015274790348485112,right_val:.3624723851680756,left_val:.5449501276016235},{features:[[1,13,14,6,-1],[1,15,14,2,3]],threshold:-.0806244164705276,right_val:.5000287294387817,left_val:.1656087040901184},{features:[[13,6,1,6,-1],[13,9,1,3,2]],threshold:.0221920292824507,right_val:.2002808004617691,left_val:.5132731199264526},{features:[[0,4,3,8,-1],[1,4,1,8,3]],threshold:.007310063112527132,right_val:.6366536021232605,left_val:.4617947936058044},{features:[[18,0,2,18,-1],[18,0,1,18,2]],threshold:-.006406307220458984,right_val:.4867860972881317,left_val:.5916250944137573},{features:[[2,3,6,2,-1],[2,4,6,1,2]],threshold:-.0007641504053026438,right_val:.5315797924995422,left_val:.388840913772583},{features:[[9,0,8,6,-1],[9,2,8,2,3]],threshold:.0007673448999412358,right_val:.5605279803276062,left_val:.4159064888954163},{features:[[6,6,1,6,-1],[6,9,1,3,2]],threshold:.0006147450185380876,right_val:.5120148062705994,left_val:.3089022040367127},{features:[[14,8,6,3,-1],[14,9,6,1,3]],threshold:-.005010527092963457,right_val:.5207306146621704,left_val:.3972199857234955},{features:[[0,0,2,18,-1],[1,0,1,18,2]],threshold:-.008690913207828999,right_val:.4608575999736786,left_val:.6257408261299133},{features:[[1,18,18,2,-1],[10,18,9,1,2],[1,19,9,1,2]],threshold:-.016391459852457,right_val:.5242266058921814,left_val:.2085209935903549},{features:[[3,15,2,2,-1],[3,16,2,1,2]],threshold:.00040973909199237823,right_val:.3780320882797241,left_val:.5222427248954773},{features:[[8,14,5,3,-1],[8,15,5,1,3]],threshold:-.002524228999391198,right_val:.4611890017986298,left_val:.5803927183151245},{features:[[8,14,2,3,-1],[8,15,2,1,3]],threshold:.0005094531225040555,right_val:.5846015810966492,left_val:.4401271939277649},{features:[[12,3,3,3,-1],[13,3,1,3,3]],threshold:.001965641975402832,right_val:.4184590876102448,left_val:.5322325229644775},{features:[[7,5,6,2,-1],[9,5,2,2,3]],threshold:.0005629889783449471,right_val:.5234565734863281,left_val:.3741844892501831},{features:[[15,5,5,2,-1],[15,6,5,1,2]],threshold:-.0006794679793529212,right_val:.5356478095054626,left_val:.4631041884422302},{features:[[0,5,5,2,-1],[0,6,5,1,2]],threshold:.007285634987056255,right_val:.2377564013004303,left_val:.5044670104980469},{features:[[17,14,1,6,-1],[17,17,1,3,2]],threshold:-.0174594894051552,right_val:.5050435066223145,left_val:.7289121150970459},{features:[[2,9,9,3,-1],[5,9,3,3,3]],threshold:-.0254217498004436,right_val:.4678100049495697,left_val:.6667134761810303},{features:[[12,3,3,3,-1],[13,3,1,3,3]],threshold:-.0015647639520466328,right_val:.532362699508667,left_val:.4391759037971497},{features:[[0,0,4,18,-1],[2,0,2,18,2]],threshold:.0114443600177765,right_val:.5680012106895447,left_val:.4346440136432648},{features:[[17,6,1,3,-1],[17,7,1,1,3]],threshold:-.0006735255010426044,right_val:.5296812057495117,left_val:.44771409034729},{features:[[2,14,1,6,-1],[2,17,1,3,2]],threshold:.009319420903921127,right_val:.7462607026100159,left_val:.4740200042724609},{features:[[19,8,1,2,-1],[19,9,1,1,2]],threshold:.00013328490604180843,right_val:.475213497877121,left_val:.536506175994873},{features:[[5,3,3,3,-1],[6,3,1,3,3]],threshold:-.007881579920649529,right_val:.5015255212783813,left_val:.1752219051122665},{features:[[9,16,2,3,-1],[9,17,2,1,3]],threshold:-.005798568017780781,right_val:.4896200895309448,left_val:.7271236777305603},{features:[[2,6,1,3,-1],[2,7,1,1,3]],threshold:-.0003892249951604754,right_val:.5344941020011902,left_val:.4003908932209015},{features:[[12,4,8,2,-1],[16,4,4,1,2],[12,5,4,1,2]],threshold:-.0019288610201328993,right_val:.4803955852985382,left_val:.5605612993240356},{features:[[0,4,8,2,-1],[0,4,4,1,2],[4,5,4,1,2]],threshold:.008421415463089943,right_val:.7623608708381653,left_val:.4753246903419495},{features:[[2,16,18,4,-1],[2,18,18,2,2]],threshold:.008165587671101093,right_val:.419164389371872,left_val:.5393261909484863},{features:[[7,15,2,4,-1],[7,17,2,2,2]],threshold:.00048280550981871784,right_val:.5399821996688843,left_val:.4240800142288208},{features:[[4,0,14,3,-1],[4,1,14,1,3]],threshold:-.002718663075938821,right_val:.5424923896789551,left_val:.4244599938392639},{features:[[0,0,4,20,-1],[2,0,2,20,2]],threshold:-.0125072300434113,right_val:.4550411105155945,left_val:.5895841717720032},{features:[[12,4,4,8,-1],[14,4,2,4,2],[12,8,2,4,2]],threshold:-.0242865197360516,right_val:.518917977809906,left_val:.2647134959697723},{features:[[6,7,2,2,-1],[6,7,1,1,2],[7,8,1,1,2]],threshold:-.0029676330741494894,right_val:.4749749898910523,left_val:.734768271446228},{features:[[10,6,2,3,-1],[10,7,2,1,3]],threshold:-.0125289997085929,right_val:.5177599787712097,left_val:.2756049931049347},{features:[[8,7,3,2,-1],[8,8,3,1,2]],threshold:-.0010104000102728605,right_val:.5144724249839783,left_val:.3510560989379883},{features:[[8,2,6,12,-1],[8,8,6,6,2]],threshold:-.0021348530426621437,right_val:.466731995344162,left_val:.5637925863265991},{features:[[4,0,11,12,-1],[4,4,11,4,3]],threshold:.0195642597973347,right_val:.6137639880180359,left_val:.4614573121070862},{features:[[14,9,6,11,-1],[16,9,2,11,3]],threshold:-.0971463471651077,right_val:.5193555951118469,left_val:.2998378872871399},{features:[[0,14,4,3,-1],[0,15,4,1,3]],threshold:.00450145686045289,right_val:.3045755922794342,left_val:.5077884793281555},{features:[[9,10,2,3,-1],[9,11,2,1,3]],threshold:.006370697170495987,right_val:.6887500882148743,left_val:.486101895570755},{features:[[5,11,3,2,-1],[5,12,3,1,2]],threshold:-.009072152897715569,right_val:.5017563104629517,left_val:.1673395931720734},{features:[[9,15,3,3,-1],[10,15,1,3,3]],threshold:-.005353720858693123,right_val:.524263322353363,left_val:.2692756950855255},{features:[[8,8,3,4,-1],[9,8,1,4,3]],threshold:-.0109328404068947,right_val:.4736028909683228,left_val:.7183864116668701},{features:[[9,15,3,3,-1],[10,15,1,3,3]],threshold:.008235607296228409,right_val:.2389862984418869,left_val:.5223966836929321},{features:[[7,7,3,2,-1],[8,7,1,2,3]],threshold:-.0010038160253316164,right_val:.4433943033218384,left_val:.5719355940818787},{features:[[2,10,16,4,-1],[10,10,8,2,2],[2,12,8,2,2]],threshold:.004085912834852934,right_val:.4148836135864258,left_val:.5472841858863831},{features:[[2,3,4,17,-1],[4,3,2,17,2]],threshold:.1548541933298111,right_val:.0610615983605385,left_val:.4973812103271484},{features:[[15,13,2,7,-1],[15,13,1,7,2]],threshold:.00020897459762636572,right_val:.542388916015625,left_val:.4709174036979675},{features:[[2,2,6,1,-1],[5,2,3,1,2]],threshold:.0003331699117552489,right_val:.5300992131233215,left_val:.4089626967906952},{features:[[5,2,12,4,-1],[9,2,4,4,3]],threshold:-.0108134001493454,right_val:.4957334101200104,left_val:.6104369759559631},{features:[[6,0,8,12,-1],[6,0,4,6,2],[10,6,4,6,2]],threshold:.0456560105085373,right_val:.2866660058498383,left_val:.5069689154624939},{features:[[13,7,2,2,-1],[14,7,1,1,2],[13,8,1,1,2]],threshold:.0012569549726322293,right_val:.631817102432251,left_val:.484691709280014},{features:[[0,12,20,6,-1],[0,14,20,2,3]],threshold:-.120150700211525,right_val:.4980959892272949,left_val:.0605261400341988},{features:[[14,7,2,3,-1],[14,7,1,3,2]],threshold:-.00010533799650147557,right_val:.4708042144775391,left_val:.5363109707832336},{features:[[0,8,9,12,-1],[3,8,3,12,3]],threshold:-.2070319056510925,right_val:.497909814119339,left_val:.059660330414772},{features:[[3,0,16,2,-1],[3,0,8,2,2]],threshold:.00012909180077258497,right_val:.5377997756004333,left_val:.4712977111339569},{features:[[6,15,3,3,-1],[6,16,3,1,3]],threshold:.000388185289921239,right_val:.5534191131591797,left_val:.4363538026809692},{features:[[8,15,6,3,-1],[8,16,6,1,3]],threshold:-.0029243610333651304,right_val:.4825215935707092,left_val:.5811185836791992},{features:[[0,10,1,6,-1],[0,12,1,2,3]],threshold:.0008388233254663646,right_val:.403813898563385,left_val:.5311700105667114},{features:[[10,9,4,3,-1],[10,10,4,1,3]],threshold:-.0019061550265178084,right_val:.526001513004303,left_val:.3770701885223389},{features:[[9,15,2,3,-1],[9,16,2,1,3]],threshold:.00895143486559391,right_val:.7682183980941772,left_val:.4766167998313904},{features:[[5,7,10,1,-1],[5,7,5,1,2]],threshold:.0130834598094225,right_val:.3062222003936768,left_val:.5264462828636169},{features:[[4,0,12,19,-1],[10,0,6,19,2]],threshold:-.2115933001041412,right_val:.4695810079574585,left_val:.6737198233604431},{features:[[0,6,20,6,-1],[10,6,10,3,2],[0,9,10,3,2]],threshold:.0031493250280618668,right_val:.4386953115463257,left_val:.5644835233688354},{features:[[3,6,2,2,-1],[3,6,1,1,2],[4,7,1,1,2]],threshold:.00039754100725986063,right_val:.5895630121231079,left_val:.4526061117649078},{features:[[15,6,2,2,-1],[16,6,1,1,2],[15,7,1,1,2]],threshold:-.0013814480043947697,right_val:.4942413866519928,left_val:.6070582270622253},{features:[[3,6,2,2,-1],[3,6,1,1,2],[4,7,1,1,2]],threshold:-.0005812218878418207,right_val:.4508252143859863,left_val:.5998213291168213},{features:[[14,4,1,12,-1],[14,10,1,6,2]],threshold:-.002390532987192273,right_val:.5223848223686218,left_val:.420558899641037},{features:[[2,5,16,10,-1],[2,5,8,5,2],[10,10,8,5,2]],threshold:.0272689294070005,right_val:.3563301861286163,left_val:.5206447243690491},{features:[[9,17,3,2,-1],[10,17,1,2,3]],threshold:-.0037658358924090862,right_val:.5218814015388489,left_val:.3144704103469849},{features:[[1,4,2,2,-1],[1,5,2,1,2]],threshold:-.0014903489500284195,right_val:.5124437212944031,left_val:.338019609451294},{features:[[5,0,15,5,-1],[10,0,5,5,3]],threshold:-.0174282304942608,right_val:.4919725954532623,left_val:.5829960703849792},{features:[[0,0,15,5,-1],[5,0,5,5,3]],threshold:-.0152780301868916,right_val:.4617887139320374,left_val:.6163144707679749},{features:[[11,2,2,17,-1],[11,2,1,17,2]],threshold:.0319956094026566,right_val:.171276405453682,left_val:.5166357159614563},{features:[[7,2,2,17,-1],[8,2,1,17,2]],threshold:-.003825671039521694,right_val:.5131387710571289,left_val:.3408012092113495},{features:[[15,11,2,9,-1],[15,11,1,9,2]],threshold:-.00851864367723465,right_val:.4997941851615906,left_val:.6105518937110901},{features:[[3,11,2,9,-1],[4,11,1,9,2]],threshold:.0009064162150025368,right_val:.5582311153411865,left_val:.4327270984649658},{features:[[5,16,14,4,-1],[5,16,7,4,2]],threshold:.0103448498994112,right_val:.5452420115470886,left_val:.4855653047561646}],threshold:69.22987365722656},{simpleClassifiers:[{features:[[1,4,18,1,-1],[7,4,6,1,3]],threshold:.007898182608187199,right_val:.5946462154388428,left_val:.333252489566803},{features:[[13,7,6,4,-1],[16,7,3,2,2],[13,9,3,2,2]],threshold:.0016170160379260778,right_val:.5577868819236755,left_val:.3490641117095947},{features:[[9,8,2,12,-1],[9,12,2,4,3]],threshold:-.0005544974119402468,right_val:.3291530013084412,left_val:.5542566180229187},{features:[[12,1,6,6,-1],[12,3,6,2,3]],threshold:.001542898011393845,right_val:.5545979142189026,left_val:.3612579107284546},{features:[[5,2,6,6,-1],[5,2,3,3,2],[8,5,3,3,2]],threshold:-.0010329450014978647,right_val:.5576140284538269,left_val:.3530139029026032},{features:[[9,16,6,4,-1],[12,16,3,2,2],[9,18,3,2,2]],threshold:.0007769815856590867,right_val:.5645321011543274,left_val:.3916778862476349},{features:[[1,2,18,3,-1],[7,2,6,3,3]],threshold:.143203005194664,right_val:.7023633122444153,left_val:.4667482078075409},{features:[[7,4,9,10,-1],[7,9,9,5,2]],threshold:-.007386649027466774,right_val:.5289257764816284,left_val:.3073684871196747},{features:[[5,9,4,4,-1],[7,9,2,4,2]],threshold:-.0006293674232438207,right_val:.4037049114704132,left_val:.562211811542511},{features:[[11,10,3,6,-1],[11,13,3,3,2]],threshold:.0007889352855272591,right_val:.3557874858379364,left_val:.5267661213874817},{features:[[7,11,5,3,-1],[7,12,5,1,3]],threshold:-.0122280502691865,right_val:.4625549912452698,left_val:.6668320894241333},{features:[[7,11,6,6,-1],[10,11,3,3,2],[7,14,3,3,2]],threshold:.0035420239437371492,right_val:.3869673013687134,left_val:.5521438121795654},{features:[[0,0,10,9,-1],[0,3,10,3,3]],threshold:-.0010585320414975286,right_val:.5320926904678345,left_val:.3628678023815155},{features:[[13,14,1,6,-1],[13,16,1,2,3]],threshold:14935660146875307e-21,right_val:.5363323092460632,left_val:.4632444977760315},{features:[[0,2,3,6,-1],[0,4,3,2,3]],threshold:.005253770854324102,right_val:.3265708982944489,left_val:.5132231712341309},{features:[[8,14,4,3,-1],[8,15,4,1,3]],threshold:-.008233802393078804,right_val:.4774140119552612,left_val:.6693689823150635},{features:[[6,14,1,6,-1],[6,16,1,2,3]],threshold:2186681012972258e-20,right_val:.5457931160926819,left_val:.405386209487915},{features:[[9,15,2,3,-1],[9,16,2,1,3]],threshold:-.0038150229956954718,right_val:.4793178141117096,left_val:.645499587059021},{features:[[6,4,3,3,-1],[7,4,1,3,3]],threshold:.0011105879675596952,right_val:.3529678881168366,left_val:.5270407199859619},{features:[[9,0,11,3,-1],[9,1,11,1,3]],threshold:-.005770768970251083,right_val:.5352957844734192,left_val:.3803547024726868},{features:[[0,6,20,3,-1],[0,7,20,1,3]],threshold:-.003015833906829357,right_val:.3887133002281189,left_val:.533940315246582},{features:[[10,1,1,2,-1],[10,2,1,1,2]],threshold:-.0008545368909835815,right_val:.5273603796958923,left_val:.3564616143703461},{features:[[9,6,2,6,-1],[10,6,1,6,2]],threshold:.0110505102202296,right_val:.6849737763404846,left_val:.4671907126903534},{features:[[5,8,12,1,-1],[9,8,4,1,3]],threshold:.0426058396697044,right_val:.0702200904488564,left_val:.51514732837677},{features:[[3,8,12,1,-1],[7,8,4,1,3]],threshold:-.0030781750101596117,right_val:.5152602195739746,left_val:.3041661083698273},{features:[[9,7,3,5,-1],[10,7,1,5,3]],threshold:-.005481572821736336,right_val:.4897229969501495,left_val:.6430295705795288},{features:[[3,9,6,2,-1],[6,9,3,2,2]],threshold:.003188186092302203,right_val:.3826209902763367,left_val:.5307493209838867},{features:[[12,9,3,3,-1],[12,10,3,1,3]],threshold:.00035947180003859103,right_val:.5421904921531677,left_val:.4650047123432159},{features:[[7,0,6,1,-1],[9,0,2,1,3]],threshold:-.004070503171533346,right_val:.5079116225242615,left_val:.2849679887294769},{features:[[12,9,3,3,-1],[12,10,3,1,3]],threshold:-.0145941702648997,right_val:.5128461718559265,left_val:.2971645891666412},{features:[[7,10,2,1,-1],[8,10,1,1,2]],threshold:-.00011947689927183092,right_val:.4343082010746002,left_val:.563109815120697},{features:[[6,4,9,13,-1],[9,4,3,13,3]],threshold:-.0006934464909136295,right_val:.5359959006309509,left_val:.4403578042984009},{features:[[6,8,4,2,-1],[6,9,4,1,2]],threshold:14834799912932795e-21,right_val:.5164697766304016,left_val:.3421008884906769},{features:[[16,2,4,6,-1],[16,2,2,6,2]],threshold:.009029698558151722,right_val:.6114075183868408,left_val:.4639343023300171},{features:[[0,17,6,3,-1],[0,18,6,1,3]],threshold:-.008064081892371178,right_val:.5075494050979614,left_val:.2820158898830414},{features:[[10,10,3,10,-1],[10,15,3,5,2]],threshold:.0260621197521687,right_val:.2688778042793274,left_val:.5208905935287476},{features:[[8,7,3,5,-1],[9,7,1,5,3]],threshold:.0173146594315767,right_val:.6738539934158325,left_val:.4663713872432709},{features:[[10,4,4,3,-1],[10,4,2,3,2]],threshold:.0226666405797005,right_val:.2212723940610886,left_val:.5209349989891052},{features:[[8,4,3,8,-1],[9,4,1,8,3]],threshold:-.002196592977270484,right_val:.4538190066814423,left_val:.6063101291656494},{features:[[6,6,9,13,-1],[9,6,3,13,3]],threshold:-.009528247639536858,right_val:.5247430801391602,left_val:.4635204970836639},{features:[[6,0,8,12,-1],[6,0,4,6,2],[10,6,4,6,2]],threshold:.00809436198323965,right_val:.3913882076740265,left_val:.5289440155029297},{features:[[14,2,6,8,-1],[16,2,2,8,3]],threshold:-.0728773325681686,right_val:.4990234971046448,left_val:.7752001881599426},{features:[[6,0,3,6,-1],[7,0,1,6,3]],threshold:-.006900952197611332,right_val:.5048090219497681,left_val:.2428039014339447},{features:[[14,2,6,8,-1],[16,2,2,8,3]],threshold:-.0113082397729158,right_val:.4842376112937927,left_val:.5734364986419678},{features:[[0,5,6,6,-1],[0,8,6,3,2]],threshold:.0596132017672062,right_val:.2524977028369904,left_val:.5029836297035217},{features:[[9,12,6,2,-1],[12,12,3,1,2],[9,13,3,1,2]],threshold:-.0028624620754271746,right_val:.4898459911346436,left_val:.6073045134544373},{features:[[8,17,3,2,-1],[9,17,1,2,3]],threshold:.00447814492508769,right_val:.2220316976308823,left_val:.5015289187431335},{features:[[11,6,2,2,-1],[12,6,1,1,2],[11,7,1,1,2]],threshold:-.001751324045471847,right_val:.4933868944644928,left_val:.6614428758621216},{features:[[1,9,18,2,-1],[7,9,6,2,3]],threshold:.0401634201407433,right_val:.3741044998168945,left_val:.5180878043174744},{features:[[11,6,2,2,-1],[12,6,1,1,2],[11,7,1,1,2]],threshold:.0003476894926279783,right_val:.5818032026290894,left_val:.4720416963100433},{features:[[3,4,12,8,-1],[7,4,4,8,3]],threshold:.00265516503714025,right_val:.5221335887908936,left_val:.3805010914802551},{features:[[13,11,5,3,-1],[13,12,5,1,3]],threshold:-.008770627900958061,right_val:.5231295228004456,left_val:.294416606426239},{features:[[9,10,2,3,-1],[9,11,2,1,3]],threshold:-.005512209143489599,right_val:.4722816944122315,left_val:.7346177101135254},{features:[[14,7,2,3,-1],[14,7,1,3,2]],threshold:.0006867204210720956,right_val:.424241304397583,left_val:.5452876091003418},{features:[[5,4,1,3,-1],[5,5,1,1,3]],threshold:.0005601966986432672,right_val:.5601285099983215,left_val:.439886212348938},{features:[[13,4,2,3,-1],[13,5,2,1,3]],threshold:.0024143769405782223,right_val:.6136621832847595,left_val:.4741686880588532},{features:[[5,4,2,3,-1],[5,5,2,1,3]],threshold:-.0015680900542065501,right_val:.4516409933567047,left_val:.604455292224884},{features:[[9,8,2,3,-1],[9,9,2,1,3]],threshold:-.0036827491130679846,right_val:.5294982194900513,left_val:.2452459037303925},{features:[[8,9,2,2,-1],[8,10,2,1,2]],threshold:-.000294091907562688,right_val:.5251451134681702,left_val:.3732838034629822},{features:[[15,14,1,4,-1],[15,16,1,2,2]],threshold:.00042847759323194623,right_val:.4065535068511963,left_val:.5498809814453125},{features:[[3,12,2,2,-1],[3,13,2,1,2]],threshold:-.004881707020103931,right_val:.4999957084655762,left_val:.2139908969402313},{features:[[12,15,2,2,-1],[13,15,1,1,2],[12,16,1,1,2]],threshold:.00027272020815871656,right_val:.581342875957489,left_val:.465028703212738},{features:[[9,13,2,2,-1],[9,14,2,1,2]],threshold:.00020947199664078653,right_val:.5572792887687683,left_val:.4387486875057221},{features:[[4,11,14,9,-1],[4,14,14,3,3]],threshold:.0485011897981167,right_val:.3212889134883881,left_val:.5244972705841064},{features:[[7,13,4,3,-1],[7,14,4,1,3]],threshold:-.004516641143709421,right_val:.4545882046222687,left_val:.605681300163269},{features:[[15,14,1,4,-1],[15,16,1,2,2]],threshold:-.0122916800901294,right_val:.5152214169502258,left_val:.2040929049253464},{features:[[4,14,1,4,-1],[4,16,1,2,2]],threshold:.0004854967992287129,right_val:.3739503026008606,left_val:.5237604975700378},{features:[[14,0,6,13,-1],[16,0,2,13,3]],threshold:.0305560491979122,right_val:.5938246250152588,left_val:.4960533976554871},{features:[[4,1,2,12,-1],[4,1,1,6,2],[5,7,1,6,2]],threshold:-.00015105320198927075,right_val:.4145204126834869,left_val:.5351303815841675},{features:[[11,14,6,6,-1],[14,14,3,3,2],[11,17,3,3,2]],threshold:.0024937440175563097,right_val:.5514941215515137,left_val:.4693366885185242},{features:[[3,14,6,6,-1],[3,14,3,3,2],[6,17,3,3,2]],threshold:-.012382130138576,right_val:.4681667983531952,left_val:.6791396737098694},{features:[[14,17,3,2,-1],[14,18,3,1,2]],threshold:-.005133346188813448,right_val:.5229160189628601,left_val:.3608739078044891},{features:[[3,17,3,2,-1],[3,18,3,1,2]],threshold:.0005191927775740623,right_val:.3633613884449005,left_val:.5300073027610779},{features:[[14,0,6,13,-1],[16,0,2,13,3]],threshold:.1506042033433914,right_val:.2211782038211823,left_val:.515731692314148},{features:[[0,0,6,13,-1],[2,0,2,13,3]],threshold:.007714414969086647,right_val:.5776609182357788,left_val:.4410496950149536},{features:[[10,10,7,6,-1],[10,12,7,2,3]],threshold:.009444352239370346,right_val:.375665009021759,left_val:.5401855111122131},{features:[[6,15,2,2,-1],[6,15,1,1,2],[7,16,1,1,2]],threshold:.00025006249779835343,right_val:.5607374906539917,left_val:.4368270933628082},{features:[[6,11,8,6,-1],[10,11,4,3,2],[6,14,4,3,2]],threshold:-.003307715058326721,right_val:.551823079586029,left_val:.4244799017906189},{features:[[7,6,2,2,-1],[7,6,1,1,2],[8,7,1,1,2]],threshold:.0007404891075566411,right_val:.5900576710700989,left_val:.4496962130069733},{features:[[2,2,16,6,-1],[10,2,8,3,2],[2,5,8,3,2]],threshold:.0440920516848564,right_val:.3156355023384094,left_val:.5293493270874023},{features:[[5,4,3,3,-1],[5,5,3,1,3]],threshold:.0033639909233897924,right_val:.5848662257194519,left_val:.4483296871185303},{features:[[11,7,3,10,-1],[11,12,3,5,2]],threshold:-.003976007923483849,right_val:.5483639240264893,left_val:.4559507071971893},{features:[[6,7,3,10,-1],[6,12,3,5,2]],threshold:.0027716930489987135,right_val:.3792484104633331,left_val:.534178614616394},{features:[[10,7,3,2,-1],[11,7,1,2,3]],threshold:-.00024123019829858094,right_val:.4576973021030426,left_val:.5667188763618469},{features:[[8,12,4,2,-1],[8,13,4,1,2]],threshold:.0004942566738463938,right_val:.5628787279129028,left_val:.4421244859695435},{features:[[10,1,1,3,-1],[10,2,1,1,3]],threshold:-.0003887646889779717,right_val:.5391063094139099,left_val:.4288370907306671},{features:[[1,2,4,18,-1],[1,2,2,9,2],[3,11,2,9,2]],threshold:-.0500488989055157,right_val:.4703742861747742,left_val:.6899513006210327},{features:[[12,4,4,12,-1],[12,10,4,6,2]],threshold:-.0366354808211327,right_val:.5191826224327087,left_val:.2217779010534287},{features:[[0,0,1,6,-1],[0,2,1,2,3]],threshold:.0024273579474538565,right_val:.3497397899627686,left_val:.5136224031448364},{features:[[9,11,2,3,-1],[9,12,2,1,3]],threshold:.001955803018063307,right_val:.640838086605072,left_val:.4826192855834961},{features:[[8,7,4,3,-1],[8,8,4,1,3]],threshold:-.0017494610510766506,right_val:.5272685289382935,left_val:.3922835886478424},{features:[[10,7,3,2,-1],[11,7,1,2,3]],threshold:.0139550799503922,right_val:.8416504859924316,left_val:.507820188999176},{features:[[7,7,3,2,-1],[8,7,1,2,3]],threshold:-.00021896739781368524,right_val:.4314234852790833,left_val:.5520489811897278},{features:[[9,4,6,1,-1],[11,4,2,1,3]],threshold:-.0015131309628486633,right_val:.5382571220397949,left_val:.3934605121612549},{features:[[8,7,2,3,-1],[9,7,1,3,2]],threshold:-.004362280014902353,right_val:.4736475944519043,left_val:.7370628714561462},{features:[[12,7,8,6,-1],[16,7,4,3,2],[12,10,4,3,2]],threshold:.0651605874300003,right_val:.328159511089325,left_val:.5159279704093933},{features:[[0,7,8,6,-1],[0,7,4,3,2],[4,10,4,3,2]],threshold:-.0023567399475723505,right_val:.5172886252403259,left_val:.3672826886177063},{features:[[18,2,2,10,-1],[19,2,1,5,2],[18,7,1,5,2]],threshold:.0151466596871614,right_val:.6687604188919067,left_val:.5031493902206421},{features:[[0,2,6,4,-1],[3,2,3,4,2]],threshold:-.0228509604930878,right_val:.4709596931934357,left_val:.676751971244812},{features:[[9,4,6,1,-1],[11,4,2,1,3]],threshold:.004886765033006668,right_val:.4059878885746002,left_val:.5257998108863831},{features:[[7,15,2,2,-1],[7,15,1,1,2],[8,16,1,1,2]],threshold:.0017619599821045995,right_val:.6688278913497925,left_val:.4696272909641266},{features:[[11,13,1,6,-1],[11,16,1,3,2]],threshold:-.0012942519970238209,right_val:.5344281792640686,left_val:.4320712983608246},{features:[[8,13,1,6,-1],[8,16,1,3,2]],threshold:.0109299495816231,right_val:.1637486070394516,left_val:.4997706115245819},{features:[[14,3,2,1,-1],[14,3,1,1,2]],threshold:2995848990394734e-20,right_val:.5633224248886108,left_val:.4282417893409729},{features:[[8,15,2,3,-1],[8,16,2,1,3]],threshold:-.0065884361974895,right_val:.4700526893138886,left_val:.677212119102478},{features:[[12,15,7,4,-1],[12,17,7,2,2]],threshold:.0032527779694646597,right_val:.4536148905754089,left_val:.531339704990387},{features:[[4,14,12,3,-1],[4,15,12,1,3]],threshold:-.00404357397928834,right_val:.4413388967514038,left_val:.5660061836242676},{features:[[10,3,3,2,-1],[11,3,1,2,3]],threshold:-.0012523540062829852,right_val:.5356451869010925,left_val:.3731913864612579},{features:[[4,12,2,2,-1],[4,13,2,1,2]],threshold:.00019246719602961093,right_val:.3738811016082764,left_val:.5189986228942871},{features:[[10,11,4,6,-1],[10,14,4,3,2]],threshold:-.038589671254158,right_val:.51888108253479,left_val:.2956373989582062},{features:[[7,13,2,2,-1],[7,13,1,1,2],[8,14,1,1,2]],threshold:.0001548987056594342,right_val:.5509533286094666,left_val:.4347135126590729},{features:[[4,11,14,4,-1],[11,11,7,2,2],[4,13,7,2,2]],threshold:-.0337638482451439,right_val:.5195475816726685,left_val:.3230330049991608},{features:[[1,18,18,2,-1],[7,18,6,2,3]],threshold:-.008265706710517406,right_val:.4552114009857178,left_val:.5975489020347595},{features:[[11,18,2,2,-1],[12,18,1,1,2],[11,19,1,1,2]],threshold:14481440302915871e-21,right_val:.5497426986694336,left_val:.4745678007602692},{features:[[7,18,2,2,-1],[7,18,1,1,2],[8,19,1,1,2]],threshold:14951299817766994e-21,right_val:.5480644106864929,left_val:.4324473142623901},{features:[[12,18,8,2,-1],[12,19,8,1,2]],threshold:-.018741799518466,right_val:.517853319644928,left_val:.1580052971839905},{features:[[7,14,6,2,-1],[7,15,6,1,2]],threshold:.0017572239739820361,right_val:.5773764252662659,left_val:.4517636895179749},{features:[[8,12,4,8,-1],[10,12,2,4,2],[8,16,2,4,2]],threshold:-.0031391119118779898,right_val:.5460842251777649,left_val:.4149647951126099},{features:[[4,9,3,3,-1],[4,10,3,1,3]],threshold:6665677938144654e-20,right_val:.5293084979057312,left_val:.4039090871810913},{features:[[7,10,6,2,-1],[9,10,2,2,3]],threshold:.006774342153221369,right_val:.612195611000061,left_val:.4767651855945587},{features:[[5,0,4,15,-1],[7,0,2,15,2]],threshold:-.0073868161998689175,right_val:.5187280774116516,left_val:.3586258888244629},{features:[[8,6,12,14,-1],[12,6,4,14,3]],threshold:.0140409301966429,right_val:.5576155781745911,left_val:.4712139964103699},{features:[[5,16,3,3,-1],[5,17,3,1,3]],threshold:-.005525832995772362,right_val:.5039281249046326,left_val:.2661027014255524},{features:[[8,1,12,19,-1],[12,1,4,19,3]],threshold:.3868423998355866,right_val:.2525899112224579,left_val:.5144339799880981},{features:[[3,0,3,2,-1],[3,1,3,1,2]],threshold:.0001145924034062773,right_val:.5423371195793152,left_val:.4284994900226593},{features:[[10,12,4,5,-1],[10,12,2,5,2]],threshold:-.0184675697237253,right_val:.5213062167167664,left_val:.3885835111141205},{features:[[6,12,4,5,-1],[8,12,2,5,2]],threshold:-.0004590701137203723,right_val:.4235909879207611,left_val:.541256308555603},{features:[[11,11,2,2,-1],[12,11,1,1,2],[11,12,1,1,2]],threshold:.0012527540093287826,right_val:.6624091267585754,left_val:.4899305105209351},{features:[[0,2,3,6,-1],[0,4,3,2,3]],threshold:.001491060946136713,right_val:.4040051996707916,left_val:.5286778211593628},{features:[[11,11,2,2,-1],[12,11,1,1,2],[11,12,1,1,2]],threshold:-.0007543556275777519,right_val:.4795120060443878,left_val:.6032990217208862},{features:[[7,6,4,10,-1],[7,11,4,5,2]],threshold:-.0069478838704526424,right_val:.5373504161834717,left_val:.408440113067627},{features:[[11,11,2,2,-1],[12,11,1,1,2],[11,12,1,1,2]],threshold:.0002809292054735124,right_val:.5759382247924805,left_val:.4846062958240509},{features:[[2,13,5,2,-1],[2,14,5,1,2]],threshold:.0009607371757738292,right_val:.3554979860782623,left_val:.5164741277694702},{features:[[11,11,2,2,-1],[12,11,1,1,2],[11,12,1,1,2]],threshold:-.0002688392996788025,right_val:.4731765985488892,left_val:.5677582025527954},{features:[[7,11,2,2,-1],[7,11,1,1,2],[8,12,1,1,2]],threshold:.0021599370520561934,right_val:.7070567011833191,left_val:.4731487035751343},{features:[[14,13,3,3,-1],[14,14,3,1,3]],threshold:.005623530130833387,right_val:.2781791985034943,left_val:.5240243077278137},{features:[[3,13,3,3,-1],[3,14,3,1,3]],threshold:-.005024399142712355,right_val:.5062304139137268,left_val:.2837013900279999},{features:[[9,14,2,3,-1],[9,15,2,1,3]],threshold:-.009761163964867592,right_val:.4934569001197815,left_val:.7400717735290527},{features:[[8,7,3,3,-1],[8,8,3,1,3]],threshold:.004151510074734688,right_val:.3407008051872253,left_val:.5119131207466125},{features:[[13,5,3,3,-1],[13,6,3,1,3]],threshold:.006246508099138737,right_val:.6579058766365051,left_val:.4923788011074066},{features:[[0,9,5,3,-1],[0,10,5,1,3]],threshold:-.007059747818857431,right_val:.503284215927124,left_val:.2434711009263992},{features:[[13,5,3,3,-1],[13,6,3,1,3]],threshold:-.0020587709732353687,right_val:.469508707523346,left_val:.590031087398529},{features:[[9,12,2,8,-1],[9,12,1,4,2],[10,16,1,4,2]],threshold:-.0024146060459315777,right_val:.5189201831817627,left_val:.3647317886352539},{features:[[11,7,2,2,-1],[12,7,1,1,2],[11,8,1,1,2]],threshold:-.0014817609917372465,right_val:.4940128028392792,left_val:.6034948229789734},{features:[[0,16,6,4,-1],[3,16,3,4,2]],threshold:-.0063016400672495365,right_val:.4560427963733673,left_val:.5818989872932434},{features:[[10,6,2,3,-1],[10,7,2,1,3]],threshold:.00347634288482368,right_val:.3483993113040924,left_val:.5217475891113281},{features:[[9,5,2,6,-1],[9,7,2,2,3]],threshold:-.0222508702427149,right_val:.5032082796096802,left_val:.2360700070858002},{features:[[12,15,8,4,-1],[12,15,4,4,2]],threshold:-.030612550675869,right_val:.4914919137954712,left_val:.6499186754226685},{features:[[0,14,8,6,-1],[4,14,4,6,2]],threshold:.013057479634881,right_val:.5683764219284058,left_val:.4413323104381561},{features:[[9,0,3,2,-1],[10,0,1,2,3]],threshold:-.0006009574281051755,right_val:.5333483219146729,left_val:.4359731078147888},{features:[[4,15,4,2,-1],[6,15,2,2,2]],threshold:-.0004151425091549754,right_val:.4326060116291046,left_val:.550406277179718},{features:[[12,7,3,13,-1],[13,7,1,13,3]],threshold:-.013776290230453,right_val:.5201548933982849,left_val:.4064112901687622},{features:[[5,7,3,13,-1],[6,7,1,13,3]],threshold:-.0322965085506439,right_val:.4977194964885712,left_val:.0473519712686539},{features:[[9,6,3,9,-1],[9,9,3,3,3]],threshold:.0535569787025452,right_val:.666693925857544,left_val:.4881733059883118},{features:[[4,4,7,12,-1],[4,10,7,6,2]],threshold:.008188954554498196,right_val:.4240820109844208,left_val:.5400037169456482},{features:[[12,12,2,2,-1],[13,12,1,1,2],[12,13,1,1,2]],threshold:.00021055320394225419,right_val:.5563852787017822,left_val:.4802047908306122},{features:[[6,12,2,2,-1],[6,12,1,1,2],[7,13,1,1,2]],threshold:-.00243827304802835,right_val:.4773685038089752,left_val:.7387793064117432},{features:[[8,9,4,2,-1],[10,9,2,1,2],[8,10,2,1,2]],threshold:.003283557016402483,right_val:.3171291947364807,left_val:.5288546085357666},{features:[[3,6,2,2,-1],[3,6,1,1,2],[4,7,1,1,2]],threshold:.00237295706756413,right_val:.7060170769691467,left_val:.4750812947750092},{features:[[16,6,3,2,-1],[16,7,3,1,2]],threshold:-.0014541699783876538,right_val:.533073902130127,left_val:.3811730146408081}],threshold:79.24907684326172},{simpleClassifiers:[{features:[[0,7,19,4,-1],[0,9,19,2,2]],threshold:.0557552389800549,right_val:.6806036829948425,left_val:.4019156992435455},{features:[[10,2,10,1,-1],[10,2,5,1,2]],threshold:.002473024884238839,right_val:.5965719819068909,left_val:.3351148962974548},{features:[[9,4,2,12,-1],[9,10,2,6,2]],threshold:-.00035031698644161224,right_val:.3482286930084229,left_val:.5557708144187927},{features:[[12,18,4,1,-1],[12,18,2,1,2]],threshold:.0005416763015091419,right_val:.5693380832672119,left_val:.426085889339447},{features:[[1,7,6,4,-1],[1,7,3,2,2],[4,9,3,2,2]],threshold:.0007719367858953774,right_val:.5433688759803772,left_val:.3494240045547485},{features:[[12,0,6,13,-1],[14,0,2,13,3]],threshold:-.0015999219613149762,right_val:.5484359264373779,left_val:.4028499126434326},{features:[[2,0,6,13,-1],[4,0,2,13,3]],threshold:-.00011832080053864047,right_val:.5425465106964111,left_val:.3806901872158051},{features:[[10,5,8,8,-1],[10,9,8,4,2]],threshold:.0003290903114248067,right_val:.5429521799087524,left_val:.262010008096695},{features:[[8,3,2,5,-1],[9,3,1,5,2]],threshold:.0002951810893137008,right_val:.5399264097213745,left_val:.379976898431778},{features:[[8,4,9,1,-1],[11,4,3,1,3]],threshold:9046671038959175e-20,right_val:.5440226197242737,left_val:.4433645009994507},{features:[[3,4,9,1,-1],[6,4,3,1,3]],threshold:15007190086180344e-21,right_val:.5409119725227356,left_val:.3719654977321625},{features:[[1,0,18,10,-1],[7,0,6,10,3]],threshold:.1393561065196991,right_val:.4479042887687683,left_val:.552539587020874},{features:[[7,17,5,3,-1],[7,18,5,1,3]],threshold:.0016461990308016539,right_val:.5772169828414917,left_val:.4264501035213471},{features:[[7,11,6,1,-1],[9,11,2,1,3]],threshold:.0004998443182557821,right_val:.5685871243476868,left_val:.4359526038169861},{features:[[2,2,3,2,-1],[2,3,3,1,2]],threshold:-.001097128028050065,right_val:.5205408930778503,left_val:.3390136957168579},{features:[[8,12,4,2,-1],[8,13,4,1,2]],threshold:.0006691989256069064,right_val:.598065972328186,left_val:.4557456076145172},{features:[[6,10,3,6,-1],[6,13,3,3,2]],threshold:.0008647104259580374,right_val:.2944033145904541,left_val:.5134841203689575},{features:[[11,4,2,4,-1],[11,4,1,4,2]],threshold:-.0002718259929679334,right_val:.5377181172370911,left_val:.3906578123569489},{features:[[7,4,2,4,-1],[8,4,1,4,2]],threshold:3024949910468422e-20,right_val:.5225688815116882,left_val:.3679609894752502},{features:[[9,6,2,4,-1],[9,6,1,4,2]],threshold:-.008522589690983295,right_val:.4892365038394928,left_val:.7293102145195007},{features:[[6,13,8,3,-1],[6,14,8,1,3]],threshold:.0016705560265108943,right_val:.5696138143539429,left_val:.43453249335289},{features:[[9,15,3,4,-1],[10,15,1,4,3]],threshold:-.0071433838456869125,right_val:.5225623846054077,left_val:.2591280043125153},{features:[[9,2,2,17,-1],[10,2,1,17,2]],threshold:-.0163193698972464,right_val:.4651575982570648,left_val:.6922279000282288},{features:[[7,0,6,1,-1],[9,0,2,1,3]],threshold:.004803426098078489,right_val:.3286302983760834,left_val:.5352262854576111},{features:[[8,15,3,4,-1],[9,15,1,4,3]],threshold:-.0075421929359436035,right_val:.5034546256065369,left_val:.2040544003248215},{features:[[7,13,7,3,-1],[7,14,7,1,3]],threshold:-.0143631100654602,right_val:.4889059066772461,left_val:.6804888844490051},{features:[[8,16,3,3,-1],[9,16,1,3,3]],threshold:.0008906358852982521,right_val:.3895480930805206,left_val:.5310695767402649},{features:[[6,2,8,10,-1],[6,7,8,5,2]],threshold:-.004406019113957882,right_val:.4372426867485046,left_val:.5741562843322754},{features:[[2,5,8,8,-1],[2,9,8,4,2]],threshold:-.0001886254030978307,right_val:.5098205208778381,left_val:.2831785976886749},{features:[[14,16,2,2,-1],[14,17,2,1,2]],threshold:-.0037979281041771173,right_val:.5246580243110657,left_val:.3372507989406586},{features:[[4,16,2,2,-1],[4,17,2,1,2]],threshold:.00014627049677073956,right_val:.391171008348465,left_val:.5306674242019653},{features:[[10,11,4,6,-1],[10,14,4,3,2]],threshold:-49164638767251745e-21,right_val:.3942720890045166,left_val:.5462496280670166},{features:[[6,11,4,6,-1],[6,14,4,3,2]],threshold:-.0335825011134148,right_val:.5048211812973022,left_val:.2157824039459229},{features:[[10,14,1,3,-1],[10,15,1,1,3]],threshold:-.0035339309833943844,right_val:.4872696995735169,left_val:.6465312242507935},{features:[[8,14,4,3,-1],[8,15,4,1,3]],threshold:.005014411173760891,right_val:.6248074769973755,left_val:.4617668092250824},{features:[[10,0,4,6,-1],[12,0,2,3,2],[10,3,2,3,2]],threshold:.0188173707574606,right_val:.2000052034854889,left_val:.5220689177513123},{features:[[0,3,20,2,-1],[0,4,20,1,2]],threshold:-.001343433978036046,right_val:.53016197681427,left_val:.4014537930488586},{features:[[12,0,8,2,-1],[16,0,4,1,2],[12,1,4,1,2]],threshold:.001755796023644507,right_val:.5653169751167297,left_val:.4794039130210877},{features:[[2,12,10,8,-1],[2,16,10,4,2]],threshold:-.0956374630331993,right_val:.5006706714630127,left_val:.2034195065498352},{features:[[17,7,2,10,-1],[18,7,1,5,2],[17,12,1,5,2]],threshold:-.0222412291914225,right_val:.5046340227127075,left_val:.7672473192214966},{features:[[1,7,2,10,-1],[1,7,1,5,2],[2,12,1,5,2]],threshold:-.0155758196488023,right_val:.4755851030349731,left_val:.7490342259407043},{features:[[15,10,3,6,-1],[15,12,3,2,3]],threshold:.005359911825507879,right_val:.4004670977592468,left_val:.5365303754806519},{features:[[4,4,6,2,-1],[6,4,2,2,3]],threshold:-.0217634998261929,right_val:.4964174926280975,left_val:.0740154981613159},{features:[[0,5,20,6,-1],[0,7,20,2,3]],threshold:-.165615901350975,right_val:.5218086242675781,left_val:.2859103083610535},{features:[[0,0,8,2,-1],[0,0,4,1,2],[4,1,4,1,2]],threshold:.0001646132004680112,right_val:.5380793213844299,left_val:.4191615879535675},{features:[[1,0,18,4,-1],[7,0,6,4,3]],threshold:-.008907750248908997,right_val:.4877404868602753,left_val:.6273192763328552},{features:[[1,13,6,2,-1],[1,14,6,1,2]],threshold:.0008634644909761846,right_val:.3671025931835175,left_val:.5159940719604492},{features:[[10,8,3,4,-1],[11,8,1,4,3]],threshold:-.0013751760125160217,right_val:.4579083919525147,left_val:.5884376764297485},{features:[[6,1,6,1,-1],[8,1,2,1,3]],threshold:-.0014081239933148026,right_val:.5139945149421692,left_val:.3560509979724884},{features:[[8,14,4,3,-1],[8,15,4,1,3]],threshold:-.003934288863092661,right_val:.466427206993103,left_val:.5994288921356201},{features:[[1,6,18,2,-1],[10,6,9,2,2]],threshold:-.0319669283926487,right_val:.5144183039665222,left_val:.3345462083816528},{features:[[15,11,1,2,-1],[15,12,1,1,2]],threshold:-15089280168467667e-21,right_val:.441405713558197,left_val:.5582656264305115},{features:[[6,5,1,2,-1],[6,6,1,1,2]],threshold:.0005199447041377425,right_val:.6168993711471558,left_val:.4623680114746094},{features:[[13,4,1,3,-1],[13,5,1,1,3]],threshold:-.0034220460802316666,right_val:.4974805116653442,left_val:.6557074785232544},{features:[[2,15,1,2,-1],[2,16,1,1,2]],threshold:.00017723299970384687,right_val:.3901908099651337,left_val:.5269501805305481},{features:[[12,4,4,3,-1],[12,5,4,1,3]],threshold:.0015716759953647852,right_val:.5790457725524902,left_val:.4633373022079468},{features:[[0,0,7,3,-1],[0,1,7,1,3]],threshold:-.00890413299202919,right_val:.5053591132164001,left_val:.2689608037471771},{features:[[9,12,6,2,-1],[9,12,3,2,2]],threshold:.00040677518700249493,right_val:.4329898953437805,left_val:.5456603169441223},{features:[[5,4,2,3,-1],[5,5,2,1,3]],threshold:.0067604780197143555,right_val:.6689761877059937,left_val:.4648993909358978},{features:[[18,4,2,3,-1],[18,5,2,1,3]],threshold:.0029100088868290186,right_val:.3377839922904968,left_val:.5309703946113586},{features:[[3,0,8,6,-1],[3,2,8,2,3]],threshold:.0013885459629818797,right_val:.5349133014678955,left_val:.4074738919734955},{features:[[0,2,20,6,-1],[10,2,10,3,2],[0,5,10,3,2]],threshold:-.0767642632126808,right_val:.522824227809906,left_val:.1992176026105881},{features:[[4,7,2,4,-1],[5,7,1,4,2]],threshold:-.00022688310127705336,right_val:.4253072142601013,left_val:.5438501834869385},{features:[[3,10,15,2,-1],[8,10,5,2,3]],threshold:-.006309415213763714,right_val:.5378909707069397,left_val:.4259178936481476},{features:[[3,0,12,11,-1],[9,0,6,11,2]],threshold:-.1100727990269661,right_val:.4721749126911163,left_val:.6904156804084778},{features:[[13,0,2,6,-1],[13,0,1,6,2]],threshold:.0002861965913325548,right_val:.5548306107521057,left_val:.4524914920330048},{features:[[0,19,2,1,-1],[1,19,1,1,2]],threshold:2942532955785282e-20,right_val:.4236463904380798,left_val:.5370373725891113},{features:[[16,10,4,10,-1],[18,10,2,5,2],[16,15,2,5,2]],threshold:-.0248865708708763,right_val:.4969303905963898,left_val:.6423557996749878},{features:[[4,8,10,3,-1],[4,9,10,1,3]],threshold:.0331488512456417,right_val:.1613811999559403,left_val:.4988475143909454},{features:[[14,12,3,3,-1],[14,13,3,1,3]],threshold:.0007849169196560979,right_val:.4223009049892426,left_val:.541602611541748},{features:[[0,10,4,10,-1],[0,10,2,5,2],[2,15,2,5,2]],threshold:.004708718974143267,right_val:.6027557849884033,left_val:.4576328992843628},{features:[[18,3,2,6,-1],[18,5,2,2,3]],threshold:.0024144479539245367,right_val:.4422498941421509,left_val:.530897319316864},{features:[[6,6,1,3,-1],[6,7,1,1,3]],threshold:.0019523180089890957,right_val:.666332483291626,left_val:.4705634117126465},{features:[[7,7,7,2,-1],[7,8,7,1,2]],threshold:.0013031980488449335,right_val:.5526962280273438,left_val:.4406126141548157},{features:[[0,3,2,6,-1],[0,5,2,2,3]],threshold:.004473549779504538,right_val:.3301498889923096,left_val:.5129023790359497},{features:[[11,1,3,1,-1],[12,1,1,1,3]],threshold:-.002665286883711815,right_val:.5175036191940308,left_val:.3135471045970917},{features:[[5,0,2,6,-1],[6,0,1,6,2]],threshold:.0001366677024634555,right_val:.530687689781189,left_val:.4119370877742767},{features:[[1,1,18,14,-1],[7,1,6,14,3]],threshold:-.0171264503151178,right_val:.4836578965187073,left_val:.6177806258201599},{features:[[4,6,8,3,-1],[8,6,4,3,2]],threshold:-.0002660143072716892,right_val:.5169736742973328,left_val:.3654330968856812},{features:[[9,12,6,2,-1],[9,12,3,2,2]],threshold:-.022932380437851,right_val:.5163992047309875,left_val:.349091500043869},{features:[[5,12,6,2,-1],[8,12,3,2,2]],threshold:.0023316550068557262,right_val:.3709389865398407,left_val:.5166299939155579},{features:[[10,7,3,5,-1],[11,7,1,5,3]],threshold:.016925660893321,right_val:.8053988218307495,left_val:.501473605632782},{features:[[7,7,3,5,-1],[8,7,1,5,3]],threshold:-.008985882624983788,right_val:.465702086687088,left_val:.6470788717269897},{features:[[13,0,3,10,-1],[14,0,1,10,3]],threshold:-.0118746999651194,right_val:.5258755087852478,left_val:.3246378898620606},{features:[[4,11,3,2,-1],[4,12,3,1,2]],threshold:.00019350569345988333,right_val:.3839643895626068,left_val:.5191941857337952},{features:[[17,3,3,6,-1],[18,3,1,6,3]],threshold:.005871349014341831,right_val:.6187043190002441,left_val:.4918133914470673},{features:[[1,8,18,10,-1],[1,13,18,5,2]],threshold:-.2483879029750824,right_val:.4988150000572205,left_val:.1836802959442139},{features:[[13,0,3,10,-1],[14,0,1,10,3]],threshold:.0122560001909733,right_val:.3632029891014099,left_val:.5227053761482239},{features:[[9,14,2,3,-1],[9,15,2,1,3]],threshold:.0008399017970077693,right_val:.5774148106575012,left_val:.4490250051021576},{features:[[16,3,3,7,-1],[17,3,1,7,3]],threshold:.002540736924856901,right_val:.5858299136161804,left_val:.4804787039756775},{features:[[4,0,3,10,-1],[5,0,1,10,3]],threshold:-.0148224299773574,right_val:.5023537278175354,left_val:.2521049976348877},{features:[[16,3,3,7,-1],[17,3,1,7,3]],threshold:-.005797395948320627,right_val:.4853715002536774,left_val:.5996695756912231},{features:[[0,9,1,2,-1],[0,10,1,1,2]],threshold:.000726621481589973,right_val:.3671779930591583,left_val:.5153716802597046},{features:[[18,1,2,10,-1],[18,1,1,10,2]],threshold:-.0172325801104307,right_val:.4994656145572662,left_val:.6621719002723694},{features:[[0,1,2,10,-1],[1,1,1,10,2]],threshold:.007862408645451069,right_val:.6256101727485657,left_val:.4633395075798035},{features:[[10,16,3,4,-1],[11,16,1,4,3]],threshold:-.004734362009912729,right_val:.5281885266304016,left_val:.3615573048591614},{features:[[2,8,3,3,-1],[3,8,1,3,3]],threshold:.0008304847870022058,right_val:.5550957918167114,left_val:.4442889094352722},{features:[[11,0,2,6,-1],[12,0,1,3,2],[11,3,1,3,2]],threshold:.00766021991148591,right_val:.2613354921340942,left_val:.5162935256958008},{features:[[7,0,2,6,-1],[7,0,1,3,2],[8,3,1,3,2]],threshold:-.004104837775230408,right_val:.5019031763076782,left_val:.2789632081985474},{features:[[16,3,3,7,-1],[17,3,1,7,3]],threshold:.004851257894188166,right_val:.5661668181419373,left_val:.4968984127044678},{features:[[1,3,3,7,-1],[2,3,1,7,3]],threshold:.0009989645332098007,right_val:.5551813244819641,left_val:.4445607960224152},{features:[[14,1,6,16,-1],[16,1,2,16,3]],threshold:-.2702363133430481,right_val:.515131413936615,left_val:.0293882098048925},{features:[[0,1,6,16,-1],[2,1,2,16,3]],threshold:-.0130906803533435,right_val:.4447459876537323,left_val:.5699399709701538},{features:[[2,0,16,8,-1],[10,0,8,4,2],[2,4,8,4,2]],threshold:-.009434279054403305,right_val:.5487895011901855,left_val:.4305466115474701},{features:[[6,8,5,3,-1],[6,9,5,1,3]],threshold:-.0015482039889320731,right_val:.512808084487915,left_val:.3680317103862763},{features:[[9,7,3,3,-1],[10,7,1,3,3]],threshold:.005374613218009472,right_val:.6101555824279785,left_val:.4838916957378388},{features:[[8,8,4,3,-1],[8,9,4,1,3]],threshold:.0015786769799888134,right_val:.4118548035621643,left_val:.5325223207473755},{features:[[9,6,2,4,-1],[9,6,1,4,2]],threshold:.003685605013743043,right_val:.6252303123474121,left_val:.4810948073863983},{features:[[0,7,15,1,-1],[5,7,5,1,3]],threshold:.009388701990246773,right_val:.3629410862922669,left_val:.520022988319397},{features:[[8,2,7,9,-1],[8,5,7,3,3]],threshold:.0127926301211119,right_val:.673801600933075,left_val:.4961709976196289},{features:[[1,7,16,4,-1],[1,7,8,2,2],[9,9,8,2,2]],threshold:-.003366104094311595,right_val:.5283598899841309,left_val:.4060279130935669},{features:[[6,12,8,2,-1],[6,13,8,1,2]],threshold:.00039771420415490866,right_val:.5900775194168091,left_val:.4674113988876343},{features:[[8,11,3,3,-1],[8,12,3,1,3]],threshold:.0014868030557408929,right_val:.6082053780555725,left_val:.4519116878509522},{features:[[4,5,14,10,-1],[11,5,7,5,2],[4,10,7,5,2]],threshold:-.0886867493391037,right_val:.5180991888046265,left_val:.2807899117469788},{features:[[4,12,3,2,-1],[4,13,3,1,2]],threshold:-7429611287079751e-20,right_val:.408762514591217,left_val:.5295584201812744},{features:[[9,11,6,1,-1],[11,11,2,1,3]],threshold:-14932939848222304e-21,right_val:.4538542926311493,left_val:.5461400151252747},{features:[[4,9,7,6,-1],[4,11,7,2,3]],threshold:.005916223861277103,right_val:.4192134141921997,left_val:.5329161286354065},{features:[[7,10,6,3,-1],[7,11,6,1,3]],threshold:.001114164013415575,right_val:.5706217288970947,left_val:.4512017965316773},{features:[[9,11,2,2,-1],[9,12,2,1,2]],threshold:8924936264520511e-20,right_val:.5897638201713562,left_val:.4577805995941162},{features:[[0,5,20,6,-1],[0,7,20,2,3]],threshold:.0025319510605186224,right_val:.3357639014720917,left_val:.5299603939056396},{features:[[6,4,6,1,-1],[8,4,2,1,3]],threshold:.0124262003228068,right_val:.1346601992845535,left_val:.4959059059619904},{features:[[9,11,6,1,-1],[11,11,2,1,3]],threshold:.0283357501029968,right_val:.0006104363710619509,left_val:.5117079019546509},{features:[[5,11,6,1,-1],[7,11,2,1,3]],threshold:.006616588216274977,right_val:.7011628150939941,left_val:.4736349880695343},{features:[[10,16,3,4,-1],[11,16,1,4,3]],threshold:.008046876639127731,right_val:.3282819986343384,left_val:.5216417908668518},{features:[[8,7,3,3,-1],[9,7,1,3,3]],threshold:-.001119398046284914,right_val:.4563739001750946,left_val:.5809860825538635},{features:[[2,12,16,8,-1],[2,16,16,4,2]],threshold:.0132775902748108,right_val:.4103901088237763,left_val:.5398362278938293},{features:[[0,15,15,2,-1],[0,16,15,1,2]],threshold:.0004879473999608308,right_val:.5410590767860413,left_val:.424928605556488},{features:[[15,4,5,6,-1],[15,6,5,2,3]],threshold:.0112431701272726,right_val:.3438215851783752,left_val:.526996374130249},{features:[[9,5,2,4,-1],[10,5,1,4,2]],threshold:-.0008989666821435094,right_val:.4456613063812256,left_val:.5633075833320618},{features:[[8,10,9,6,-1],[8,12,9,2,3]],threshold:.006667715962976217,right_val:.4362679123878479,left_val:.5312889218330383},{features:[[2,19,15,1,-1],[7,19,5,1,3]],threshold:.0289472993463278,right_val:.657579779624939,left_val:.4701794981956482},{features:[[10,16,3,4,-1],[11,16,1,4,3]],threshold:-.0234000496566296,right_val:.5137398838996887,left_val:0},{features:[[0,15,20,4,-1],[0,17,20,2,2]],threshold:-.0891170501708984,right_val:.4942430853843689,left_val:.0237452797591686},{features:[[10,16,3,4,-1],[11,16,1,4,3]],threshold:-.0140546001493931,right_val:.511751115322113,left_val:.3127323091030121},{features:[[7,16,3,4,-1],[8,16,1,4,3]],threshold:.008123939856886864,right_val:.2520025968551636,left_val:.50090491771698},{features:[[9,16,3,3,-1],[9,17,3,1,3]],threshold:-.004996465053409338,right_val:.4927811920642853,left_val:.6387143731117249},{features:[[8,11,4,6,-1],[8,14,4,3,2]],threshold:.0031253970228135586,right_val:.3680452108383179,left_val:.5136849880218506},{features:[[9,6,2,12,-1],[9,10,2,4,3]],threshold:.006766964215785265,right_val:.4363631904125214,left_val:.5509843826293945},{features:[[8,17,4,3,-1],[8,18,4,1,3]],threshold:-.002371144015341997,right_val:.4586946964263916,left_val:.6162335276603699},{features:[[9,18,8,2,-1],[13,18,4,1,2],[9,19,4,1,2]],threshold:-.005352279171347618,right_val:.4920490980148315,left_val:.6185457706451416},{features:[[1,18,8,2,-1],[1,19,8,1,2]],threshold:-.0159688591957092,right_val:.4983252882957459,left_val:.1382617950439453},{features:[[13,5,6,15,-1],[15,5,2,15,3]],threshold:.004767606034874916,right_val:.5490046143531799,left_val:.4688057899475098},{features:[[9,8,2,2,-1],[9,9,2,1,2]],threshold:-.002471469109877944,right_val:.5003952980041504,left_val:.2368514984846115},{features:[[9,5,2,3,-1],[9,5,1,3,2]],threshold:-.0007103378884494305,right_val:.4721533060073853,left_val:.5856394171714783},{features:[[1,5,6,15,-1],[3,5,2,15,3]],threshold:-.1411755979061127,right_val:.4961591064929962,left_val:.0869000628590584},{features:[[4,1,14,8,-1],[11,1,7,4,2],[4,5,7,4,2]],threshold:.1065180972218514,right_val:.1741005033254623,left_val:.5138837099075317},{features:[[2,4,4,16,-1],[2,4,2,8,2],[4,12,2,8,2]],threshold:-.0527447499334812,right_val:.4772881865501404,left_val:.7353636026382446},{features:[[12,4,3,12,-1],[12,10,3,6,2]],threshold:-.00474317604675889,right_val:.5292701721191406,left_val:.3884406089782715},{features:[[4,5,10,12,-1],[4,5,5,6,2],[9,11,5,6,2]],threshold:.0009967676596716046,right_val:.4003424048423767,left_val:.5223492980003357},{features:[[9,14,2,3,-1],[9,15,2,1,3]],threshold:.00802841316908598,right_val:.7212964296340942,left_val:.4959106147289276},{features:[[5,4,2,3,-1],[5,5,2,1,3]],threshold:.0008602585876360536,right_val:.55384761095047,left_val:.4444884061813355},{features:[[12,2,4,10,-1],[14,2,2,5,2],[12,7,2,5,2]],threshold:.0009319150121882558,right_val:.4163244068622589,left_val:.539837121963501},{features:[[6,4,7,3,-1],[6,5,7,1,3]],threshold:-.002508206060156226,right_val:.456250011920929,left_val:.5854265093803406},{features:[[2,0,18,2,-1],[11,0,9,1,2],[2,1,9,1,2]],threshold:-.0021378761157393456,right_val:.5280259251594543,left_val:.4608069062232971},{features:[[0,0,18,2,-1],[0,0,9,1,2],[9,1,9,1,2]],threshold:-.002154604997485876,right_val:.5255997180938721,left_val:.3791126906871796},{features:[[13,13,4,6,-1],[15,13,2,3,2],[13,16,2,3,2]],threshold:-.007621400989592075,right_val:.4952073991298676,left_val:.5998609066009521},{features:[[3,13,4,6,-1],[3,13,2,3,2],[5,16,2,3,2]],threshold:.002205536002293229,right_val:.5588530898094177,left_val:.4484206140041351},{features:[[10,12,2,6,-1],[10,15,2,3,2]],threshold:.0012586950324475765,right_val:.4423840939998627,left_val:.5450747013092041},{features:[[5,9,10,10,-1],[5,9,5,5,2],[10,14,5,5,2]],threshold:-.005092672072350979,right_val:.5263035893440247,left_val:.4118275046348572},{features:[[11,4,4,2,-1],[13,4,2,1,2],[11,5,2,1,2]],threshold:-.0025095739401876926,right_val:.4998494982719421,left_val:.5787907838821411},{features:[[7,12,6,8,-1],[10,12,3,8,2]],threshold:-.0773275569081306,right_val:.481112003326416,left_val:.8397865891456604},{features:[[12,2,4,10,-1],[14,2,2,5,2],[12,7,2,5,2]],threshold:-.041485819965601,right_val:.5176993012428284,left_val:.240861102938652},{features:[[8,11,2,1,-1],[9,11,1,1,2]],threshold:.00010355669655837119,right_val:.5417054295539856,left_val:.4355360865592957},{features:[[10,5,1,12,-1],[10,9,1,4,3]],threshold:.0013255809899419546,right_val:.4894095063209534,left_val:.5453971028327942},{features:[[0,11,6,9,-1],[3,11,3,9,2]],threshold:-.00805987324565649,right_val:.4577918946743012,left_val:.5771024227142334},{features:[[12,2,4,10,-1],[14,2,2,5,2],[12,7,2,5,2]],threshold:.019058620557189,right_val:.3400475084781647,left_val:.5169867873191833},{features:[[4,2,4,10,-1],[4,2,2,5,2],[6,7,2,5,2]],threshold:-.0350578911602497,right_val:.5000503063201904,left_val:.2203243970870972},{features:[[11,4,4,2,-1],[13,4,2,1,2],[11,5,2,1,2]],threshold:.005729605909436941,right_val:.6597570776939392,left_val:.5043408274650574},{features:[[0,14,6,3,-1],[0,15,6,1,3]],threshold:-.0116483299061656,right_val:.4996652901172638,left_val:.2186284959316254},{features:[[11,4,4,2,-1],[13,4,2,1,2],[11,5,2,1,2]],threshold:.0014544479781761765,right_val:.5503727793693542,left_val:.5007681846618652},{features:[[6,1,3,2,-1],[7,1,1,2,3]],threshold:-.00025030909455381334,right_val:.524167001247406,left_val:.4129841029644013},{features:[[11,4,4,2,-1],[13,4,2,1,2],[11,5,2,1,2]],threshold:-.000829072727356106,right_val:.4974496066570282,left_val:.541286826133728},{features:[[5,4,4,2,-1],[5,4,2,1,2],[7,5,2,1,2]],threshold:.0010862209601327777,right_val:.5879228711128235,left_val:.460552990436554},{features:[[13,0,2,12,-1],[14,0,1,6,2],[13,6,1,6,2]],threshold:.0002000050008064136,right_val:.4705209136009216,left_val:.5278854966163635},{features:[[6,0,3,10,-1],[7,0,1,10,3]],threshold:.0029212920926511288,right_val:.375553697347641,left_val:.5129609704017639},{features:[[3,0,17,8,-1],[3,4,17,4,2]],threshold:.0253874007612467,right_val:.5790768265724182,left_val:.4822691977024078},{features:[[0,4,20,4,-1],[0,6,20,2,2]],threshold:-.00319684692658484,right_val:.3962840139865875,left_val:.5248395204544067}],threshold:87.69602966308594},{simpleClassifiers:[{features:[[0,3,8,2,-1],[4,3,4,2,2]],threshold:.005803173873573542,right_val:.596198320388794,left_val:.3498983979225159},{features:[[8,11,4,3,-1],[8,12,4,1,3]],threshold:-.009000306949019432,right_val:.4478552043437958,left_val:.6816636919975281},{features:[[5,7,6,4,-1],[5,7,3,2,2],[8,9,3,2,2]],threshold:-.00115496595390141,right_val:.3578251004219055,left_val:.5585706233978271},{features:[[8,3,4,9,-1],[8,6,4,3,3]],threshold:-.0011069850297644734,right_val:.3050428032875061,left_val:.5365036129951477},{features:[[8,15,1,4,-1],[8,17,1,2,2]],threshold:.00010308309720130637,right_val:.5344635844230652,left_val:.363909512758255},{features:[[4,5,12,7,-1],[8,5,4,7,3]],threshold:-.005098483990877867,right_val:.5504264831542969,left_val:.2859157025814056},{features:[[4,2,4,10,-1],[4,2,2,5,2],[6,7,2,5,2]],threshold:.0008257220033556223,right_val:.3476041853427887,left_val:.5236523747444153},{features:[[3,0,17,2,-1],[3,1,17,1,2]],threshold:.009978332556784153,right_val:.621964693069458,left_val:.4750322103500366},{features:[[2,2,16,15,-1],[2,7,16,5,3]],threshold:-.0374025292694569,right_val:.527806282043457,left_val:.334337592124939},{features:[[15,2,5,2,-1],[15,3,5,1,2]],threshold:.0048548257909715176,right_val:.3700444102287293,left_val:.5192180871963501},{features:[[9,3,2,2,-1],[10,3,1,2,2]],threshold:-.001866447040811181,right_val:.5091944932937622,left_val:.2929843962192535},{features:[[4,5,16,15,-1],[4,10,16,5,3]],threshold:.0168888904154301,right_val:.5431225895881653,left_val:.3686845898628235},{features:[[7,13,5,6,-1],[7,16,5,3,2]],threshold:-.005837262142449617,right_val:.5221335887908936,left_val:.3632183969020844},{features:[[10,7,3,2,-1],[11,7,1,2,3]],threshold:-.00147137395106256,right_val:.4700650870800018,left_val:.5870683789253235},{features:[[8,3,3,1,-1],[9,3,1,1,3]],threshold:-.0011522950371727347,right_val:.5140954256057739,left_val:.3195894956588745},{features:[[9,16,3,3,-1],[9,17,3,1,3]],threshold:-.004256030078977346,right_val:.4814921021461487,left_val:.6301859021186829},{features:[[0,2,5,2,-1],[0,3,5,1,2]],threshold:-.006737829186022282,right_val:.5025808215141296,left_val:.1977048069238663},{features:[[12,5,4,3,-1],[12,6,4,1,3]],threshold:.0113826701417565,right_val:.6867045760154724,left_val:.495413213968277},{features:[[1,7,12,1,-1],[5,7,4,1,3]],threshold:.005179470870643854,right_val:.3350647985935211,left_val:.5164427757263184},{features:[[7,5,6,14,-1],[7,12,6,7,2]],threshold:-.1174378991127014,right_val:.5234413743019104,left_val:.2315246015787125},{features:[[0,0,8,10,-1],[0,0,4,5,2],[4,5,4,5,2]],threshold:.0287034492939711,right_val:.6722521185874939,left_val:.4664297103881836},{features:[[9,1,3,2,-1],[10,1,1,2,3]],threshold:.004823103081434965,right_val:.2723532915115356,left_val:.5220875144004822},{features:[[8,1,3,2,-1],[9,1,1,2,3]],threshold:.0026798530016094446,right_val:.2906948924064636,left_val:.5079277157783508},{features:[[12,4,3,3,-1],[12,5,3,1,3]],threshold:.008050408214330673,right_val:.6395021080970764,left_val:.4885950982570648},{features:[[7,4,6,16,-1],[7,12,6,8,2]],threshold:.004805495962500572,right_val:.365666389465332,left_val:.5197256803512573},{features:[[12,4,3,3,-1],[12,5,3,1,3]],threshold:-.0022420159075409174,right_val:.4763701856136322,left_val:.6153467893600464},{features:[[2,3,2,6,-1],[2,5,2,2,3]],threshold:-.0137577103450894,right_val:.5030903220176697,left_val:.2637344896793366},{features:[[14,2,6,9,-1],[14,5,6,3,3]],threshold:-.1033829972147942,right_val:.5182461142539978,left_val:.2287521958351135},{features:[[5,4,3,3,-1],[5,5,3,1,3]],threshold:-.009443208575248718,right_val:.4694949090480804,left_val:.6953303813934326},{features:[[9,17,3,2,-1],[10,17,1,2,3]],threshold:.0008027118165045977,right_val:.4268783926963806,left_val:.5450655221939087},{features:[[5,5,2,3,-1],[5,6,2,1,3]],threshold:-.004194566980004311,right_val:.4571642875671387,left_val:.6091387867927551},{features:[[13,11,3,6,-1],[13,13,3,2,3]],threshold:.0109422104433179,right_val:.3284547030925751,left_val:.5241063237190247},{features:[[3,14,2,6,-1],[3,17,2,3,2]],threshold:-.0005784106906503439,right_val:.4179368913173676,left_val:.5387929081916809},{features:[[14,3,6,2,-1],[14,4,6,1,2]],threshold:-.002088862005621195,right_val:.5301715731620789,left_val:.4292691051959992},{features:[[0,8,16,2,-1],[0,9,16,1,2]],threshold:.0032383969519287348,right_val:.5220744013786316,left_val:.379234790802002},{features:[[14,3,6,2,-1],[14,4,6,1,2]],threshold:.004907502792775631,right_val:.4126757979393005,left_val:.5237283110618591},{features:[[0,0,5,6,-1],[0,2,5,2,3]],threshold:-.0322779417037964,right_val:.4994502067565918,left_val:.1947655975818634},{features:[[12,5,4,3,-1],[12,6,4,1,3]],threshold:-.008971123024821281,right_val:.4929032027721405,left_val:.6011285185813904},{features:[[4,11,3,6,-1],[4,13,3,2,3]],threshold:.0153210898861289,right_val:.2039822041988373,left_val:.5009753704071045},{features:[[12,5,4,3,-1],[12,6,4,1,3]],threshold:.002085556974634528,right_val:.5721694827079773,left_val:.4862189888954163},{features:[[9,5,1,3,-1],[9,6,1,1,3]],threshold:.005061502102762461,right_val:.1801805943250656,left_val:.5000218749046326},{features:[[12,5,4,3,-1],[12,6,4,1,3]],threshold:-.0037174751050770283,right_val:.4897592961788178,left_val:.5530117154121399},{features:[[6,6,8,12,-1],[6,12,8,6,2]],threshold:-.0121705001220107,right_val:.5383723974227905,left_val:.4178605973720551},{features:[[12,5,4,3,-1],[12,6,4,1,3]],threshold:.004624839872121811,right_val:.5761327147483826,left_val:.4997169971466065},{features:[[5,12,9,2,-1],[8,12,3,2,3]],threshold:-.0002104042941937223,right_val:.4097681045532227,left_val:.5331807136535645},{features:[[12,5,4,3,-1],[12,6,4,1,3]],threshold:-.0146417804062366,right_val:.5051776170730591,left_val:.5755925178527832},{features:[[4,5,4,3,-1],[4,6,4,1,3]],threshold:.00331994891166687,right_val:.6031805872917175,left_val:.4576976895332336},{features:[[6,6,9,2,-1],[9,6,3,2,3]],threshold:.003723687957972288,right_val:.541588306427002,left_val:.4380396902561188},{features:[[4,11,1,3,-1],[4,12,1,1,3]],threshold:.0008295116131193936,right_val:.3702219128608704,left_val:.5163031816482544},{features:[[14,12,6,6,-1],[14,12,3,6,2]],threshold:-.0114084901288152,right_val:.4862565100193024,left_val:.6072946786880493},{features:[[7,0,3,7,-1],[8,0,1,7,3]],threshold:-.004532012157142162,right_val:.5088962912559509,left_val:.3292475938796997},{features:[[9,8,3,3,-1],[10,8,1,3,3]],threshold:.00512760179117322,right_val:.6122708916664124,left_val:.4829767942428589},{features:[[8,8,3,3,-1],[9,8,1,3,3]],threshold:.00985831581056118,right_val:.6556177139282227,left_val:.4660679996013641},{features:[[5,10,11,3,-1],[5,11,11,1,3]],threshold:.036985918879509,right_val:.1690472066402435,left_val:.5204849243164062},{features:[[5,7,10,1,-1],[10,7,5,1,2]],threshold:.004649116192013025,right_val:.3725225031375885,left_val:.5167322158813477},{features:[[9,7,3,2,-1],[10,7,1,2,3]],threshold:-.004266470205038786,right_val:.4987342953681946,left_val:.6406493186950684},{features:[[8,7,3,2,-1],[9,7,1,2,3]],threshold:-.0004795659042429179,right_val:.4464873969554901,left_val:.5897293090820312},{features:[[11,9,4,2,-1],[11,9,2,2,2]],threshold:.0036827160511165857,right_val:.347266286611557,left_val:.5441560745239258},{features:[[5,9,4,2,-1],[7,9,2,2,2]],threshold:-.0100598800927401,right_val:.500482976436615,left_val:.2143162935972214},{features:[[14,10,2,4,-1],[14,12,2,2,2]],threshold:-.0003036184061784297,right_val:.4590323865413666,left_val:.538642406463623},{features:[[7,7,3,2,-1],[8,7,1,2,3]],threshold:-.0014545479789376259,right_val:.4497095048427582,left_val:.5751184225082397},{features:[[14,17,6,3,-1],[14,18,6,1,3]],threshold:.0016515209572389722,right_val:.4238520860671997,left_val:.5421937704086304},{features:[[4,5,12,12,-1],[4,5,6,6,2],[10,11,6,6,2]],threshold:-.007846863940358162,right_val:.5258157253265381,left_val:.4077920913696289},{features:[[6,9,8,8,-1],[10,9,4,4,2],[6,13,4,4,2]],threshold:-.005125985015183687,right_val:.5479453206062317,left_val:.422927588224411},{features:[[0,4,15,4,-1],[5,4,5,4,3]],threshold:-.0368909612298012,right_val:.4674678146839142,left_val:.6596375703811646},{features:[[13,2,4,1,-1],[13,2,2,1,2]],threshold:.0002403563994448632,right_val:.5573202967643738,left_val:.4251135885715485},{features:[[4,12,2,2,-1],[4,13,2,1,2]],threshold:-15150169929256663e-21,right_val:.4074114859104157,left_val:.5259246826171875},{features:[[8,13,4,3,-1],[8,14,4,1,3]],threshold:.0022108471021056175,right_val:.5886352062225342,left_val:.4671722948551178},{features:[[9,13,2,3,-1],[9,14,2,1,3]],threshold:-.0011568620102480054,right_val:.4487161934375763,left_val:.5711066126823425},{features:[[13,11,2,3,-1],[13,12,2,1,3]],threshold:.004999629221856594,right_val:.2898327112197876,left_val:.5264198184013367},{features:[[7,12,4,4,-1],[7,12,2,2,2],[9,14,2,2,2]],threshold:-.0014656189596280456,right_val:.5197871923446655,left_val:.3891738057136536},{features:[[10,11,2,2,-1],[11,11,1,1,2],[10,12,1,1,2]],threshold:-.0011975039960816503,right_val:.4927955865859985,left_val:.5795872807502747},{features:[[8,17,3,2,-1],[9,17,1,2,3]],threshold:-.0044954330660402775,right_val:.5012555122375488,left_val:.2377603054046631},{features:[[10,11,2,2,-1],[11,11,1,1,2],[10,12,1,1,2]],threshold:.00014997160178609192,right_val:.5617607831954956,left_val:.4876626133918762},{features:[[0,17,6,3,-1],[0,18,6,1,3]],threshold:.002639150945469737,right_val:.3765509128570557,left_val:.516808807849884},{features:[[10,11,2,2,-1],[11,11,1,1,2],[10,12,1,1,2]],threshold:-.0002936813107226044,right_val:.4874630868434906,left_val:.5446649193763733},{features:[[8,11,2,2,-1],[8,11,1,1,2],[9,12,1,1,2]],threshold:.0014211760135367513,right_val:.669133186340332,left_val:.4687897861003876},{features:[[12,5,8,4,-1],[12,5,4,4,2]],threshold:.0794276371598244,right_val:.273294597864151,left_val:.5193443894386292},{features:[[0,5,8,4,-1],[4,5,4,4,2]],threshold:.0799375027418137,right_val:.1782083958387375,left_val:.4971731007099152},{features:[[13,2,4,1,-1],[13,2,2,1,2]],threshold:.0110892597585917,right_val:.3209475874900818,left_val:.5165994763374329},{features:[[3,2,4,1,-1],[5,2,2,1,2]],threshold:.00016560709627810866,right_val:.5307276248931885,left_val:.4058471918106079},{features:[[10,0,4,2,-1],[12,0,2,1,2],[10,1,2,1,2]],threshold:-.0053354292176663876,right_val:.5158129930496216,left_val:.3445056974887848},{features:[[7,12,3,1,-1],[8,12,1,1,3]],threshold:.0011287260567769408,right_val:.6075533032417297,left_val:.4594863057136536},{features:[[8,11,4,8,-1],[10,11,2,4,2],[8,15,2,4,2]],threshold:-.0219692196696997,right_val:.5228595733642578,left_val:.1680400967597961},{features:[[9,9,2,2,-1],[9,10,2,1,2]],threshold:-.00021775320055894554,right_val:.5215672850608826,left_val:.3861596882343292},{features:[[3,18,15,2,-1],[3,19,15,1,2]],threshold:.00020200149447191507,right_val:.4363039135932922,left_val:.5517979264259338},{features:[[2,6,2,12,-1],[2,6,1,6,2],[3,12,1,6,2]],threshold:-.0217331498861313,right_val:.4789851009845734,left_val:.7999460101127625},{features:[[9,8,2,3,-1],[9,9,2,1,3]],threshold:-.0008439993252977729,right_val:.5374773144721985,left_val:.4085975885391235},{features:[[7,10,3,2,-1],[8,10,1,2,3]],threshold:-.00043895249837078154,right_val:.4366143047809601,left_val:.5470405220985413},{features:[[11,11,3,1,-1],[12,11,1,1,3]],threshold:.0015092400135472417,right_val:.5842149257659912,left_val:.4988996982574463},{features:[[6,11,3,1,-1],[7,11,1,1,3]],threshold:-.003554783994331956,right_val:.4721005856990814,left_val:.6753690242767334},{features:[[9,2,4,2,-1],[11,2,2,1,2],[9,3,2,1,2]],threshold:.00048191400128416717,right_val:.4357109069824219,left_val:.541585385799408},{features:[[4,12,2,3,-1],[4,13,2,1,3]],threshold:-.00602643983438611,right_val:.499188095331192,left_val:.2258509993553162},{features:[[2,1,18,3,-1],[8,1,6,3,3]],threshold:-.0116681400686502,right_val:.4927498996257782,left_val:.625655472278595},{features:[[5,1,4,14,-1],[7,1,2,14,2]],threshold:-.0028718370012938976,right_val:.524580180644989,left_val:.3947784900665283},{features:[[8,16,12,3,-1],[8,16,6,3,2]],threshold:.0170511696487665,right_val:.5794224143028259,left_val:.4752511084079742},{features:[[1,17,18,3,-1],[7,17,6,3,3]],threshold:-.0133520802482963,right_val:.4544535875320435,left_val:.6041104793548584},{features:[[9,14,2,6,-1],[9,17,2,3,2]],threshold:-.0003930180100724101,right_val:.5544905066490173,left_val:.4258275926113129},{features:[[9,12,1,8,-1],[9,16,1,4,2]],threshold:.0030483349692076445,right_val:.3780272901058197,left_val:.5233420133590698},{features:[[9,14,2,3,-1],[9,15,2,1,3]],threshold:-.00435792887583375,right_val:.4838674068450928,left_val:.6371889114379883},{features:[[9,6,2,12,-1],[9,10,2,4,3]],threshold:.0056661018170416355,right_val:.4163666069507599,left_val:.5374705791473389},{features:[[12,9,3,3,-1],[12,10,3,1,3]],threshold:6067733920644969e-20,right_val:.5311625003814697,left_val:.4638795852661133},{features:[[0,1,4,8,-1],[2,1,2,8,2]],threshold:.0367381609976292,right_val:.6466524004936218,left_val:.4688656032085419},{features:[[9,1,6,2,-1],[12,1,3,1,2],[9,2,3,1,2]],threshold:.008652813732624054,right_val:.2188657969236374,left_val:.5204318761825562},{features:[[1,3,12,14,-1],[1,10,12,7,2]],threshold:-.1537135988473892,right_val:.4958840012550354,left_val:.1630371958017349},{features:[[8,12,4,2,-1],[10,12,2,1,2],[8,13,2,1,2]],threshold:-.00041560421232134104,right_val:.4696458876132965,left_val:.577445924282074},{features:[[1,9,10,2,-1],[1,9,5,1,2],[6,10,5,1,2]],threshold:-.0012640169588848948,right_val:.5217198133468628,left_val:.3977175951004028},{features:[[8,15,4,3,-1],[8,16,4,1,3]],threshold:-.003547334112226963,right_val:.480831503868103,left_val:.6046528220176697},{features:[[6,8,8,3,-1],[6,9,8,1,3]],threshold:3001906952704303e-20,right_val:.5228201150894165,left_val:.3996723890304565},{features:[[9,15,5,3,-1],[9,16,5,1,3]],threshold:.00131130195222795,right_val:.5765997767448425,left_val:.4712158143520355},{features:[[8,7,4,3,-1],[8,8,4,1,3]],threshold:-.0013374709524214268,right_val:.5253170132637024,left_val:.4109584987163544},{features:[[7,7,6,2,-1],[7,8,6,1,2]],threshold:.0208767093718052,right_val:.1757981926202774,left_val:.5202993750572205},{features:[[5,7,8,2,-1],[5,7,4,1,2],[9,8,4,1,2]],threshold:-.007549794856458902,right_val:.4694975018501282,left_val:.6566609740257263},{features:[[12,9,3,3,-1],[12,10,3,1,3]],threshold:.0241885501891375,right_val:.3370220959186554,left_val:.5128673911094666},{features:[[4,7,4,2,-1],[4,8,4,1,2]],threshold:-.002935882890596986,right_val:.4694541096687317,left_val:.658078670501709},{features:[[14,2,6,9,-1],[14,5,6,3,3]],threshold:.0575579293072224,right_val:.2775259912014008,left_val:.5146445035934448},{features:[[4,9,3,3,-1],[5,9,1,3,3]],threshold:-.0011343370424583554,right_val:.5192667245864868,left_val:.3836601972579956},{features:[[12,9,3,3,-1],[12,10,3,1,3]],threshold:.0168169997632504,right_val:.6177260875701904,left_val:.5085592865943909},{features:[[0,2,6,9,-1],[0,5,6,3,3]],threshold:.005053517874330282,right_val:.3684791922569275,left_val:.5138763189315796},{features:[[17,3,3,6,-1],[18,3,1,6,3]],threshold:-.004587471019476652,right_val:.4835202097892761,left_val:.5989655256271362},{features:[[0,3,3,6,-1],[1,3,1,6,3]],threshold:.001688246033154428,right_val:.5723056793212891,left_val:.4509486854076386},{features:[[17,14,1,2,-1],[17,15,1,1,2]],threshold:-.0016554000321775675,right_val:.5243319272994995,left_val:.3496770858764648},{features:[[4,9,4,3,-1],[6,9,2,3,2]],threshold:-.0193738006055355,right_val:.496871292591095,left_val:.1120536997914314},{features:[[12,9,3,3,-1],[12,10,3,1,3]],threshold:.0103744501248002,right_val:.4395213127136231,left_val:.5148196816444397},{features:[[5,9,3,3,-1],[5,10,3,1,3]],threshold:.00014973050565458834,right_val:.526988685131073,left_val:.4084999859333038},{features:[[9,5,6,8,-1],[12,5,3,4,2],[9,9,3,4,2]],threshold:-.042981930077076,right_val:.501850426197052,left_val:.6394104957580566},{features:[[5,5,6,8,-1],[5,5,3,4,2],[8,9,3,4,2]],threshold:.008306593634188175,right_val:.6698353290557861,left_val:.470755398273468},{features:[[16,1,4,6,-1],[16,4,4,3,2]],threshold:-.0041285790503025055,right_val:.5323647260665894,left_val:.4541369080543518},{features:[[1,0,6,20,-1],[3,0,2,20,3]],threshold:.0017399420030415058,right_val:.5439866185188293,left_val:.433396190404892},{features:[[12,11,3,2,-1],[13,11,1,2,3]],threshold:.00011739750334527344,right_val:.5543426275253296,left_val:.4579687118530273},{features:[[5,11,3,2,-1],[6,11,1,2,3]],threshold:.00018585780344437808,right_val:.5426754951477051,left_val:.4324643909931183},{features:[[9,4,6,1,-1],[11,4,2,1,3]],threshold:.005558769218623638,right_val:.3550611138343811,left_val:.525722086429596},{features:[[0,0,8,3,-1],[4,0,4,3,2]],threshold:-.007985156029462814,right_val:.4630635976791382,left_val:.6043018102645874},{features:[[15,0,2,5,-1],[15,0,1,5,2]],threshold:.0006059412262402475,right_val:.55331951379776,left_val:.4598254859447479},{features:[[4,1,3,2,-1],[5,1,1,2,3]],threshold:-.0002298304025316611,right_val:.5322461128234863,left_val:.4130752086639404},{features:[[7,0,6,15,-1],[9,0,2,15,3]],threshold:.0004374021082185209,right_val:.5409289002418518,left_val:.4043039977550507},{features:[[6,11,3,1,-1],[7,11,1,1,3]],threshold:.0002948202018160373,right_val:.5628852248191833,left_val:.4494963884353638},{features:[[12,0,3,4,-1],[13,0,1,4,3]],threshold:.0103126596659422,right_val:.2704316973686218,left_val:.5177510976791382},{features:[[5,4,6,1,-1],[7,4,2,1,3]],threshold:-.007724110968410969,right_val:.4980553984642029,left_val:.1988019049167633},{features:[[12,7,3,2,-1],[12,8,3,1,2]],threshold:-.004679720848798752,right_val:.5018296241760254,left_val:.6644750237464905},{features:[[0,1,4,6,-1],[0,4,4,3,2]],threshold:-.005075545981526375,right_val:.5185269117355347,left_val:.3898304998874664},{features:[[12,7,3,2,-1],[12,8,3,1,2]],threshold:.00224797404371202,right_val:.5660336017608643,left_val:.4801808893680573},{features:[[2,16,3,3,-1],[2,17,3,1,3]],threshold:.0008332700817845762,right_val:.3957188129425049,left_val:.5210919976234436},{features:[[13,8,6,10,-1],[16,8,3,5,2],[13,13,3,5,2]],threshold:-.0412793308496475,right_val:.5007054209709167,left_val:.6154541969299316},{features:[[0,9,5,2,-1],[0,10,5,1,2]],threshold:-.0005093018990010023,right_val:.5228403806686401,left_val:.3975942134857178},{features:[[12,11,2,2,-1],[13,11,1,1,2],[12,12,1,1,2]],threshold:.0012568780221045017,right_val:.5939183235168457,left_val:.4979138076305389},{features:[[3,15,3,3,-1],[3,16,3,1,3]],threshold:.008004849776625633,right_val:.1633366048336029,left_val:.4984497129917145},{features:[[12,7,3,2,-1],[12,8,3,1,2]],threshold:-.0011879300000146031,right_val:.4942624866962433,left_val:.5904964804649353},{features:[[5,7,3,2,-1],[5,8,3,1,2]],threshold:.0006194895249791443,right_val:.5328726172447205,left_val:.4199557900428772},{features:[[9,5,9,9,-1],[9,8,9,3,3]],threshold:.006682985927909613,right_val:.490588903427124,left_val:.5418602824211121},{features:[[5,0,3,7,-1],[6,0,1,7,3]],threshold:-.0037062340416014194,right_val:.5138000249862671,left_val:.3725939095020294},{features:[[5,2,12,5,-1],[9,2,4,5,3]],threshold:-.0397394113242626,right_val:.5050346851348877,left_val:.6478961110115051},{features:[[6,11,2,2,-1],[6,11,1,1,2],[7,12,1,1,2]],threshold:.0014085009461268783,right_val:.6377884149551392,left_val:.4682339131832123},{features:[[15,15,3,2,-1],[15,16,3,1,2]],threshold:.0003932268882635981,right_val:.415048211812973,left_val:.5458530187606812},{features:[[2,15,3,2,-1],[2,16,3,1,2]],threshold:-.0018979819724336267,right_val:.5149704217910767,left_val:.3690159916877747},{features:[[14,12,6,8,-1],[17,12,3,4,2],[14,16,3,4,2]],threshold:-.0139704402536154,right_val:.4811357855796814,left_val:.6050562858581543},{features:[[2,8,15,6,-1],[7,8,5,6,3]],threshold:-.1010081991553307,right_val:.4992361962795258,left_val:.2017080038785934},{features:[[2,2,18,17,-1],[8,2,6,17,3]],threshold:-.0173469204455614,right_val:.4899486005306244,left_val:.5713148713111877},{features:[[5,1,4,1,-1],[7,1,2,1,2]],threshold:.000156197595060803,right_val:.5392642021179199,left_val:.4215388894081116},{features:[[5,2,12,5,-1],[9,2,4,5,3]],threshold:.1343892961740494,right_val:.3767612874507904,left_val:.5136151909828186},{features:[[3,2,12,5,-1],[7,2,4,5,3]],threshold:-.0245822407305241,right_val:.4747906923294067,left_val:.7027357816696167},{features:[[4,9,12,4,-1],[10,9,6,2,2],[4,11,6,2,2]],threshold:-.0038553720805794,right_val:.5427716970443726,left_val:.4317409098148346},{features:[[5,15,6,2,-1],[5,15,3,1,2],[8,16,3,1,2]],threshold:-.002316524973139167,right_val:.4618647992610931,left_val:.594269871711731},{features:[[10,14,2,3,-1],[10,15,2,1,3]],threshold:-.004851812031120062,right_val:.4884895086288452,left_val:.6191568970680237},{features:[[0,13,20,2,-1],[0,13,10,1,2],[10,14,10,1,2]],threshold:.002469993894919753,right_val:.4017199873924255,left_val:.5256664752960205},{features:[[4,9,12,8,-1],[10,9,6,4,2],[4,13,6,4,2]],threshold:.0454969592392445,right_val:.2685773968696594,left_val:.5237867832183838},{features:[[8,13,3,6,-1],[8,16,3,3,2]],threshold:-.0203195996582508,right_val:.4979738891124725,left_val:.213044598698616},{features:[[10,12,2,2,-1],[10,13,2,1,2]],threshold:.0002699499891605228,right_val:.5543122291564941,left_val:.481404185295105},{features:[[9,12,2,2,-1],[9,12,1,1,2],[10,13,1,1,2]],threshold:-.0018232699949294329,right_val:.4709989130496979,left_val:.6482579708099365},{features:[[4,11,14,4,-1],[11,11,7,2,2],[4,13,7,2,2]],threshold:-.006301579065620899,right_val:.5306236147880554,left_val:.4581927955150604},{features:[[8,5,4,2,-1],[8,6,4,1,2]],threshold:-.0002413949987385422,right_val:.4051763117313385,left_val:.5232086777687073},{features:[[10,10,6,3,-1],[12,10,2,3,3]],threshold:-.001033036969602108,right_val:.4789193868637085,left_val:.5556201934814453},{features:[[2,14,1,2,-1],[2,15,1,1,2]],threshold:.0001804116036510095,right_val:.4011810123920441,left_val:.5229442715644836},{features:[[13,8,6,12,-1],[16,8,3,6,2],[13,14,3,6,2]],threshold:-.0614078603684902,right_val:.5010703206062317,left_val:.62986820936203},{features:[[1,8,6,12,-1],[1,8,3,6,2],[4,14,3,6,2]],threshold:-.0695439130067825,right_val:.4773184061050415,left_val:.7228280901908875},{features:[[10,0,6,10,-1],[12,0,2,10,3]],threshold:-.0705426633358002,right_val:.5182529091835022,left_val:.2269513010978699},{features:[[5,11,8,4,-1],[5,11,4,2,2],[9,13,4,2,2]],threshold:.0024423799477517605,right_val:.4098151028156281,left_val:.5237097144126892},{features:[[10,16,8,4,-1],[14,16,4,2,2],[10,18,4,2,2]],threshold:.0015494349645450711,right_val:.5468043088912964,left_val:.4773750901222229},{features:[[7,7,6,6,-1],[9,7,2,6,3]],threshold:-.0239142198115587,right_val:.4783824980258942,left_val:.7146975994110107},{features:[[10,2,4,10,-1],[10,2,2,10,2]],threshold:-.0124536901712418,right_val:.5241122841835022,left_val:.2635296881198883},{features:[[6,1,4,9,-1],[8,1,2,9,2]],threshold:-.00020760179904755205,right_val:.5113608837127686,left_val:.3623757064342499},{features:[[12,19,2,1,-1],[12,19,1,1,2]],threshold:29781080229440704e-21,right_val:.5432801842689514,left_val:.4705932140350342}],threshold:90.25334930419922},{simpleClassifiers:[{features:[[1,2,4,9,-1],[3,2,2,9,2]],threshold:.0117727499455214,right_val:.6421167254447937,left_val:.3860518932342529},{features:[[7,5,6,4,-1],[9,5,2,4,3]],threshold:.0270375702530146,right_val:.675403892993927,left_val:.4385654926300049},{features:[[9,4,2,4,-1],[9,6,2,2,2]],threshold:-3641950024757534e-20,right_val:.34233158826828,left_val:.5487101078033447},{features:[[14,5,2,8,-1],[14,9,2,4,2]],threshold:.001999540952965617,right_val:.5400317907333374,left_val:.3230532109737396},{features:[[7,6,5,12,-1],[7,12,5,6,2]],threshold:.0045278300531208515,right_val:.2935043871402741,left_val:.5091639757156372},{features:[[14,6,2,6,-1],[14,9,2,3,2]],threshold:.00047890920541249216,right_val:.5344064235687256,left_val:.4178153872489929},{features:[[4,6,2,6,-1],[4,9,2,3,2]],threshold:.0011720920447260141,right_val:.5132070779800415,left_val:.2899182140827179},{features:[[8,15,10,4,-1],[13,15,5,2,2],[8,17,5,2,2]],threshold:.0009530570241622627,right_val:.5560845136642456,left_val:.428012490272522},{features:[[6,18,2,2,-1],[7,18,1,2,2]],threshold:15099150004971307e-21,right_val:.5404760241508484,left_val:.4044871926307678},{features:[[11,3,6,2,-1],[11,4,6,1,2]],threshold:-.0006081790197640657,right_val:.5503466129302979,left_val:.4271768927574158},{features:[[2,0,16,6,-1],[2,2,16,2,3]],threshold:.003322452073916793,right_val:.5369734764099121,left_val:.3962723910808563},{features:[[11,3,6,2,-1],[11,4,6,1,2]],threshold:-.0011037490330636501,right_val:.5237749814987183,left_val:.4727177917957306},{features:[[4,11,10,3,-1],[4,12,10,1,3]],threshold:-.0014350269921123981,right_val:.4223509132862091,left_val:.5603008270263672},{features:[[11,3,6,2,-1],[11,4,6,1,2]],threshold:.0020767399109899998,right_val:.4732725918292999,left_val:.5225917100906372},{features:[[3,3,6,2,-1],[3,4,6,1,2]],threshold:-.00016412809782195836,right_val:.5432739853858948,left_val:.3999075889587402},{features:[[16,0,4,7,-1],[16,0,2,7,2]],threshold:.008830243721604347,right_val:.6027327179908752,left_val:.4678385853767395},{features:[[0,14,9,6,-1],[0,16,9,2,3]],threshold:-.0105520701035857,right_val:.5213974714279175,left_val:.3493967056274414},{features:[[9,16,3,3,-1],[9,17,3,1,3]],threshold:-.00227316003292799,right_val:.4749062955379486,left_val:.6185818910598755},{features:[[4,6,6,2,-1],[6,6,2,2,3]],threshold:-.0008478633244521916,right_val:.3843482136726379,left_val:.5285341143608093},{features:[[15,11,1,3,-1],[15,12,1,1,3]],threshold:.0012081359745934606,right_val:.3447335958480835,left_val:.536064088344574},{features:[[5,5,2,3,-1],[5,6,2,1,3]],threshold:.002651273040100932,right_val:.6193962097167969,left_val:.4558292031288147},{features:[[10,9,2,2,-1],[10,10,2,1,2]],threshold:-.0011012479662895203,right_val:.5327628254890442,left_val:.368023008108139},{features:[[3,1,4,3,-1],[5,1,2,3,2]],threshold:.0004956151824444532,right_val:.5274940729141235,left_val:.396059513092041},{features:[[16,0,4,7,-1],[16,0,2,7,2]],threshold:-.0439017713069916,right_val:.4992839097976685,left_val:.7020444869995117},{features:[[0,0,20,1,-1],[10,0,10,1,2]],threshold:.0346903502941132,right_val:.276660293340683,left_val:.5049164295196533},{features:[[15,11,1,3,-1],[15,12,1,1,3]],threshold:-.002744219033047557,right_val:.5274971127510071,left_val:.2672632932662964},{features:[[0,4,3,4,-1],[1,4,1,4,3]],threshold:.003331658896058798,right_val:.6001101732254028,left_val:.4579482972621918},{features:[[16,3,3,6,-1],[16,5,3,2,3]],threshold:-.0200445707887411,right_val:.523571789264679,left_val:.3171594142913818},{features:[[1,3,3,6,-1],[1,5,3,2,3]],threshold:.0013492030557245016,right_val:.4034324884414673,left_val:.5265362858772278},{features:[[6,2,12,6,-1],[12,2,6,3,2],[6,5,6,3,2]],threshold:.0029702018946409225,right_val:.4571984112262726,left_val:.5332456827163696},{features:[[8,10,4,3,-1],[8,11,4,1,3]],threshold:.006303998176008463,right_val:.6034635901451111,left_val:.4593310952186585},{features:[[4,2,14,6,-1],[11,2,7,3,2],[4,5,7,3,2]],threshold:-.0129365902394056,right_val:.5372971296310425,left_val:.4437963962554932},{features:[[9,11,2,3,-1],[9,12,2,1,3]],threshold:.004014872945845127,right_val:.6437833905220032,left_val:.4680323898792267},{features:[[15,13,2,3,-1],[15,14,2,1,3]],threshold:-.002640167949721217,right_val:.5314332842826843,left_val:.3709631860256195},{features:[[8,12,4,3,-1],[8,13,4,1,3]],threshold:.0139184398576617,right_val:.713080883026123,left_val:.4723555147647858},{features:[[15,11,1,3,-1],[15,12,1,1,3]],threshold:-.00045087869511917233,right_val:.5370404124259949,left_val:.4492394030094147},{features:[[7,13,5,2,-1],[7,14,5,1,2]],threshold:.00025384349282830954,right_val:.5514402985572815,left_val:.4406864047050476},{features:[[7,12,6,3,-1],[7,13,6,1,3]],threshold:.002271000063046813,right_val:.5967984199523926,left_val:.4682416915893555},{features:[[5,11,4,4,-1],[5,13,4,2,2]],threshold:.002412077970802784,right_val:.3018598854541779,left_val:.5079392194747925},{features:[[11,4,3,3,-1],[12,4,1,3,3]],threshold:-3602567085181363e-20,right_val:.4471096992492676,left_val:.560103714466095},{features:[[6,4,3,3,-1],[7,4,1,3,3]],threshold:-.0074905529618263245,right_val:.4989944100379944,left_val:.2207535058259964},{features:[[16,5,3,6,-1],[17,5,1,6,3]],threshold:-.017513120546937,right_val:.5017648935317993,left_val:.6531215906143188},{features:[[3,6,12,7,-1],[7,6,4,7,3]],threshold:.1428163051605225,right_val:.1482062041759491,left_val:.4967963099479675},{features:[[16,5,3,6,-1],[17,5,1,6,3]],threshold:.005534526892006397,right_val:.5954223871231079,left_val:.4898946881294251},{features:[[3,13,2,3,-1],[3,14,2,1,3]],threshold:-.0009632359142415226,right_val:.519607424736023,left_val:.3927116990089417},{features:[[16,5,3,6,-1],[17,5,1,6,3]],threshold:-.0020370010752230883,right_val:.4884858131408691,left_val:.5613325238227844},{features:[[1,5,3,6,-1],[2,5,1,6,3]],threshold:.0016614829655736685,right_val:.5578880906105042,left_val:.4472880065441132},{features:[[1,9,18,1,-1],[7,9,6,1,3]],threshold:-.0031188090797513723,right_val:.5397477746009827,left_val:.3840532898902893},{features:[[0,9,8,7,-1],[4,9,4,7,2]],threshold:-.006400061771273613,right_val:.4533218145370483,left_val:.5843983888626099},{features:[[12,11,8,2,-1],[12,12,8,1,2]],threshold:.0003131960111204535,right_val:.4234727919101715,left_val:.5439221858978271},{features:[[0,11,8,2,-1],[0,12,8,1,2]],threshold:-.0182220991700888,right_val:.4958404898643494,left_val:.1288464963436127},{features:[[9,13,2,3,-1],[9,14,2,1,3]],threshold:.008796924725174904,right_val:.7153480052947998,left_val:.49512979388237},{features:[[4,10,12,4,-1],[4,10,6,2,2],[10,12,6,2,2]],threshold:-.004239507019519806,right_val:.5194936990737915,left_val:.3946599960327148},{features:[[9,3,3,7,-1],[10,3,1,7,3]],threshold:.009708627127110958,right_val:.6064900159835815,left_val:.4897503852844238},{features:[[7,2,3,5,-1],[8,2,1,5,3]],threshold:-.003993417136371136,right_val:.5060828924179077,left_val:.3245440125465393},{features:[[9,12,4,6,-1],[11,12,2,3,2],[9,15,2,3,2]],threshold:-.0167850591242313,right_val:.5203778743743896,left_val:.1581953018903732},{features:[[8,7,3,6,-1],[9,7,1,6,3]],threshold:.018272090703249,right_val:.6626979112625122,left_val:.4680935144424439},{features:[[15,4,4,2,-1],[15,5,4,1,2]],threshold:.00568728381767869,right_val:.3512184917926788,left_val:.5211697816848755},{features:[[8,7,3,3,-1],[9,7,1,3,3]],threshold:-.0010739039862528443,right_val:.4529845118522644,left_val:.5768386125564575},{features:[[14,2,6,4,-1],[14,4,6,2,2]],threshold:-.00370938703417778,right_val:.5313581228256226,left_val:.4507763087749481},{features:[[7,16,6,1,-1],[9,16,2,1,3]],threshold:-.0002111070934915915,right_val:.4333376884460449,left_val:.5460820198059082},{features:[[15,13,2,3,-1],[15,14,2,1,3]],threshold:.0010670139454305172,right_val:.4078390896320343,left_val:.5371856093406677},{features:[[8,7,3,10,-1],[9,7,1,10,3]],threshold:.0035943021066486835,right_val:.5643836259841919,left_val:.4471287131309509},{features:[[11,10,2,6,-1],[11,12,2,2,3]],threshold:-.005177603103220463,right_val:.5280330181121826,left_val:.4499393105506897},{features:[[6,10,4,1,-1],[8,10,2,1,2]],threshold:-.00025414369883947074,right_val:.4407708048820496,left_val:.5516173243522644},{features:[[10,9,2,2,-1],[10,10,2,1,2]],threshold:.006352256052196026,right_val:.2465227991342545,left_val:.5194190144538879},{features:[[8,9,2,2,-1],[8,10,2,1,2]],threshold:-.00044205080484971404,right_val:.5139682292938232,left_val:.3830705881118774},{features:[[12,7,2,2,-1],[13,7,1,1,2],[12,8,1,1,2]],threshold:.0007448872784152627,right_val:.5974786877632141,left_val:.4891090989112854},{features:[[5,7,2,2,-1],[5,7,1,1,2],[6,8,1,1,2]],threshold:-.0035116379149258137,right_val:.4768764972686768,left_val:.7413681745529175},{features:[[13,0,3,14,-1],[14,0,1,14,3]],threshold:-.0125409103929996,right_val:.5252826809883118,left_val:.3648819029331207},{features:[[4,0,3,14,-1],[5,0,1,14,3]],threshold:.009493185207247734,right_val:.362958699464798,left_val:.5100492835044861},{features:[[13,4,3,14,-1],[14,4,1,14,3]],threshold:.0129611501470208,right_val:.4333561062812805,left_val:.5232442021369934},{features:[[9,14,2,3,-1],[9,15,2,1,3]],threshold:.004720944911241531,right_val:.6331052780151367,left_val:.4648149013519287},{features:[[8,14,4,3,-1],[8,15,4,1,3]],threshold:-.0023119079414755106,right_val:.4531058073043823,left_val:.5930309891700745},{features:[[4,2,3,16,-1],[5,2,1,16,3]],threshold:-.002826229901984334,right_val:.5257101058959961,left_val:.3870477974414825},{features:[[7,2,8,10,-1],[7,7,8,5,2]],threshold:-.0014311339473351836,right_val:.4561854898929596,left_val:.552250325679779},{features:[[6,14,7,3,-1],[6,15,7,1,3]],threshold:.0019378310535103083,right_val:.5736966729164124,left_val:.4546220898628235},{features:[[9,2,10,12,-1],[14,2,5,6,2],[9,8,5,6,2]],threshold:.00026343559147790074,right_val:.4571875035762787,left_val:.5345739126205444},{features:[[6,7,8,2,-1],[6,8,8,1,2]],threshold:.0007825752254575491,right_val:.5220187902450562,left_val:.3967815935611725},{features:[[8,13,4,6,-1],[8,16,4,3,2]],threshold:-.0195504408329725,right_val:.5243508219718933,left_val:.282964289188385},{features:[[6,6,1,3,-1],[6,7,1,1,3]],threshold:.00043914958951063454,right_val:.589909017086029,left_val:.4590066969394684},{features:[[16,2,4,6,-1],[16,4,4,2,3]],threshold:.0214520003646612,right_val:.2855378985404968,left_val:.523141086101532},{features:[[6,6,4,2,-1],[6,6,2,1,2],[8,7,2,1,2]],threshold:.0005897358059883118,right_val:.550642192363739,left_val:.4397256970405579},{features:[[16,2,4,6,-1],[16,4,4,2,3]],threshold:-.0261576101183891,right_val:.5189175009727478,left_val:.3135079145431519},{features:[[0,2,4,6,-1],[0,4,4,2,3]],threshold:-.0139598604291677,right_val:.5040717720985413,left_val:.3213272988796234},{features:[[9,6,2,6,-1],[9,6,1,6,2]],threshold:-.006369901821017265,right_val:.4849506914615631,left_val:.6387544870376587},{features:[[3,4,6,10,-1],[3,9,6,5,2]],threshold:-.008561382070183754,right_val:.5032019019126892,left_val:.2759132087230682},{features:[[9,5,2,6,-1],[9,5,1,6,2]],threshold:.000966229010373354,right_val:.5834879279136658,left_val:.4685640931129456},{features:[[3,13,2,3,-1],[3,14,2,1,3]],threshold:.0007655026856809855,right_val:.389642208814621,left_val:.5175207257270813},{features:[[13,13,3,2,-1],[13,14,3,1,2]],threshold:-.008183334022760391,right_val:.5208122134208679,left_val:.2069136947393417},{features:[[2,16,10,4,-1],[2,16,5,2,2],[7,18,5,2,2]],threshold:-.009397693909704685,right_val:.4641222953796387,left_val:.6134091019630432},{features:[[5,6,10,6,-1],[10,6,5,3,2],[5,9,5,3,2]],threshold:.004802898038178682,right_val:.439521998167038,left_val:.5454108119010925},{features:[[7,14,1,3,-1],[7,15,1,1,3]],threshold:-.003568056970834732,right_val:.4681093990802765,left_val:.6344485282897949},{features:[[14,16,6,3,-1],[14,17,6,1,3]],threshold:.0040733120404183865,right_val:.4015620052814484,left_val:.5292683243751526},{features:[[5,4,3,3,-1],[5,5,3,1,3]],threshold:.0012568129459396005,right_val:.5452824831008911,left_val:.4392988085746765},{features:[[7,4,10,3,-1],[7,5,10,1,3]],threshold:-.0029065010603517294,right_val:.4863379895687103,left_val:.5898832082748413},{features:[[0,4,5,4,-1],[0,6,5,2,2]],threshold:-.00244093406945467,right_val:.5247421860694885,left_val:.4069364964962006},{features:[[13,11,3,9,-1],[13,14,3,3,3]],threshold:.0248307008296251,right_val:.3682524859905243,left_val:.5182725787162781},{features:[[4,11,3,9,-1],[4,14,3,3,3]],threshold:-.0488540083169937,right_val:.496128112077713,left_val:.1307577937841415},{features:[[9,7,2,1,-1],[9,7,1,1,2]],threshold:-.001611037994734943,right_val:.4872662127017975,left_val:.6421005725860596},{features:[[5,0,6,17,-1],[7,0,2,17,3]],threshold:-.0970094799995422,right_val:.495098888874054,left_val:.0477693490684032},{features:[[10,3,6,3,-1],[10,3,3,3,2]],threshold:.0011209240183234215,right_val:.5354745984077454,left_val:.4616267085075378},{features:[[2,2,15,4,-1],[7,2,5,4,3]],threshold:-.001306409016251564,right_val:.4638805985450745,left_val:.626185417175293},{features:[[8,2,8,2,-1],[12,2,4,1,2],[8,3,4,1,2]],threshold:.00045771620352752507,right_val:.4646640121936798,left_val:.5384417772293091},{features:[[8,1,3,6,-1],[8,3,3,2,3]],threshold:-.0006314995116554201,right_val:.51302570104599,left_val:.3804047107696533},{features:[[9,17,2,2,-1],[9,18,2,1,2]],threshold:.0001450597046641633,right_val:.5664461851119995,left_val:.4554310142993927},{features:[[0,0,2,14,-1],[1,0,1,14,2]],threshold:-.0164745505899191,right_val:.4715859889984131,left_val:.6596958041191101},{features:[[12,0,7,3,-1],[12,1,7,1,3]],threshold:.0133695797994733,right_val:.3035964965820313,left_val:.519546627998352},{features:[[1,14,1,2,-1],[1,15,1,1,2]],threshold:.00010271780047332868,right_val:.4107066094875336,left_val:.522917628288269},{features:[[14,12,2,8,-1],[15,12,1,4,2],[14,16,1,4,2]],threshold:-.0055311559699475765,right_val:.4960907101631165,left_val:.6352887749671936},{features:[[1,0,7,3,-1],[1,1,7,1,3]],threshold:-.0026187049224972725,right_val:.5140984058380127,left_val:.3824546039104462},{features:[[14,12,2,8,-1],[15,12,1,4,2],[14,16,1,4,2]],threshold:.005083426833152771,right_val:.6220818758010864,left_val:.4950439929962158},{features:[[6,0,8,12,-1],[6,0,4,6,2],[10,6,4,6,2]],threshold:.0798181593418121,right_val:.1322475969791412,left_val:.4952335953712463},{features:[[6,1,8,9,-1],[6,4,8,3,3]],threshold:-.0992265865206718,right_val:.5008416771888733,left_val:.7542728781700134},{features:[[5,2,2,2,-1],[5,3,2,1,2]],threshold:-.0006517401780001819,right_val:.5130121111869812,left_val:.3699302971363068},{features:[[13,14,6,6,-1],[16,14,3,3,2],[13,17,3,3,2]],threshold:-.018996849656105,right_val:.4921202957630158,left_val:.6689178943634033},{features:[[0,17,20,2,-1],[0,17,10,1,2],[10,18,10,1,2]],threshold:.0173468999564648,right_val:.1859198063611984,left_val:.4983300864696503},{features:[[10,3,2,6,-1],[11,3,1,3,2],[10,6,1,3,2]],threshold:.0005508210160769522,right_val:.5522121787071228,left_val:.4574424028396606},{features:[[5,12,6,2,-1],[8,12,3,2,2]],threshold:.002005605027079582,right_val:.3856469988822937,left_val:.5131744742393494},{features:[[10,7,6,13,-1],[10,7,3,13,2]],threshold:-.007768819108605385,right_val:.5434309244155884,left_val:.4361700117588043},{features:[[5,15,10,5,-1],[10,15,5,5,2]],threshold:.0508782789111137,right_val:.6840639710426331,left_val:.4682720899581909},{features:[[10,4,4,10,-1],[10,4,2,10,2]],threshold:-.0022901780903339386,right_val:.5306099057197571,left_val:.4329245090484619},{features:[[5,7,2,1,-1],[6,7,1,1,2]],threshold:-.00015715380141045898,right_val:.4378164112567902,left_val:.5370057225227356},{features:[[10,3,6,7,-1],[10,3,3,7,2]],threshold:.1051924005150795,right_val:.0673614665865898,left_val:.5137274265289307},{features:[[4,3,6,7,-1],[7,3,3,7,2]],threshold:.002719891956076026,right_val:.5255665183067322,left_val:.4112060964107513},{features:[[1,7,18,5,-1],[7,7,6,5,3]],threshold:.0483377799391747,right_val:.4438967108726502,left_val:.5404623746871948},{features:[[3,17,4,3,-1],[5,17,2,3,2]],threshold:.0009570376132614911,right_val:.5399510860443115,left_val:.4355969130992889},{features:[[8,14,12,6,-1],[14,14,6,3,2],[8,17,6,3,2]],threshold:-.0253712590783834,right_val:.5031024813652039,left_val:.5995175242424011},{features:[[0,13,20,4,-1],[0,13,10,2,2],[10,15,10,2,2]],threshold:.0524579510092735,right_val:.1398351043462753,left_val:.4950287938117981},{features:[[4,5,14,2,-1],[11,5,7,1,2],[4,6,7,1,2]],threshold:-.0123656298965216,right_val:.496410608291626,left_val:.639729917049408},{features:[[1,2,10,12,-1],[1,2,5,6,2],[6,8,5,6,2]],threshold:-.1458971947431564,right_val:.494632214307785,left_val:.1001669988036156},{features:[[6,1,14,3,-1],[6,2,14,1,3]],threshold:-.0159086007624865,right_val:.5208340883255005,left_val:.3312329947948456},{features:[[8,16,2,3,-1],[8,17,2,1,3]],threshold:.00039486068999394774,right_val:.5426102876663208,left_val:.4406363964080811},{features:[[9,17,3,2,-1],[10,17,1,2,3]],threshold:-.0052454001270234585,right_val:.5189967155456543,left_val:.2799589931964874},{features:[[5,15,4,2,-1],[5,15,2,1,2],[7,16,2,1,2]],threshold:-.005042179953306913,right_val:.4752142131328583,left_val:.6987580060958862},{features:[[10,15,1,3,-1],[10,16,1,1,3]],threshold:.0029812189750373363,right_val:.6307479739189148,left_val:.4983288943767548},{features:[[8,16,4,4,-1],[8,16,2,2,2],[10,18,2,2,2]],threshold:-.007288430817425251,right_val:.5026869773864746,left_val:.298233300447464},{features:[[6,11,8,6,-1],[6,14,8,3,2]],threshold:.0015094350092113018,right_val:.3832970857620239,left_val:.5308442115783691},{features:[[2,13,5,2,-1],[2,14,5,1,2]],threshold:-.009334079921245575,right_val:.4969817101955414,left_val:.2037964016199112},{features:[[13,14,6,6,-1],[16,14,3,3,2],[13,17,3,3,2]],threshold:.0286671407520771,right_val:.6928027272224426,left_val:.5025696754455566},{features:[[1,9,18,4,-1],[7,9,6,4,3]],threshold:.1701968014240265,right_val:.1476442962884903,left_val:.4960052967071533},{features:[[13,14,6,6,-1],[16,14,3,3,2],[13,17,3,3,2]],threshold:-.003261447884142399,right_val:.4826056063175201,left_val:.5603063702583313},{features:[[0,2,1,6,-1],[0,4,1,2,3]],threshold:.0005576927796937525,right_val:.4129633009433746,left_val:.5205562114715576},{features:[[5,0,15,20,-1],[5,10,15,10,2]],threshold:.3625833988189697,right_val:.3768612146377564,left_val:.5221652984619141},{features:[[1,14,6,6,-1],[1,14,3,3,2],[4,17,3,3,2]],threshold:-.0116151301190257,right_val:.4637489914894104,left_val:.6022682785987854},{features:[[8,14,4,6,-1],[10,14,2,3,2],[8,17,2,3,2]],threshold:-.004079519771039486,right_val:.5337479114532471,left_val:.4070447087287903},{features:[[7,11,2,1,-1],[8,11,1,1,2]],threshold:.0005720430053770542,right_val:.5900393128395081,left_val:.4601835012435913},{features:[[9,17,3,2,-1],[10,17,1,2,3]],threshold:.000675433489959687,right_val:.4345428943634033,left_val:.5398252010345459},{features:[[8,17,3,2,-1],[9,17,1,2,3]],threshold:.0006329569732770324,right_val:.4051358997821808,left_val:.5201563239097595},{features:[[12,14,4,6,-1],[14,14,2,3,2],[12,17,2,3,2]],threshold:.00124353205319494,right_val:.5547441244125366,left_val:.4642387926578522},{features:[[4,14,4,6,-1],[4,14,2,3,2],[6,17,2,3,2]],threshold:-.004736385773867369,right_val:.4672552049160004,left_val:.6198567152023315},{features:[[13,14,2,6,-1],[14,14,1,3,2],[13,17,1,3,2]],threshold:-.006465846206992865,right_val:.5019000768661499,left_val:.6837332844734192},{features:[[5,14,2,6,-1],[5,14,1,3,2],[6,17,1,3,2]],threshold:.000350173213519156,right_val:.5363622903823853,left_val:.4344803094863892},{features:[[7,0,6,12,-1],[7,4,6,4,3]],threshold:.00015754920605104417,right_val:.5732020735740662,left_val:.4760079085826874},{features:[[0,7,12,2,-1],[4,7,4,2,3]],threshold:.009977436624467373,right_val:.3635039925575256,left_val:.5090985894203186},{features:[[10,3,3,13,-1],[11,3,1,13,3]],threshold:-.0004146452993154526,right_val:.4593802094459534,left_val:.5570064783096313},{features:[[7,3,3,13,-1],[8,3,1,13,3]],threshold:-.00035888899583369493,right_val:.4339134991168976,left_val:.5356845855712891},{features:[[10,8,6,3,-1],[10,9,6,1,3]],threshold:.0004046325047966093,right_val:.5436776876449585,left_val:.4439803063869476},{features:[[3,11,3,2,-1],[4,11,1,2,3]],threshold:-.0008218478760682046,right_val:.5176299214363098,left_val:.4042294919490814},{features:[[13,12,6,8,-1],[16,12,3,4,2],[13,16,3,4,2]],threshold:.005946741905063391,right_val:.5633779764175415,left_val:.4927651882171631},{features:[[7,6,6,5,-1],[9,6,2,5,3]],threshold:-.0217533893883228,right_val:.480084091424942,left_val:.8006293773651123},{features:[[17,11,2,7,-1],[17,11,1,7,2]],threshold:-.0145403798669577,right_val:.5182222723960876,left_val:.3946054875850678},{features:[[3,13,8,2,-1],[7,13,4,2,2]],threshold:-.0405107699334621,right_val:.4935792982578278,left_val:.0213249903172255},{features:[[6,9,8,3,-1],[6,10,8,1,3]],threshold:-.0005845826817676425,right_val:.5314025282859802,left_val:.4012795984745026},{features:[[4,3,4,3,-1],[4,4,4,1,3]],threshold:.005515180062502623,right_val:.5896260738372803,left_val:.4642418920993805},{features:[[11,3,4,3,-1],[11,4,4,1,3]],threshold:-.006062622182071209,right_val:.5016477704048157,left_val:.6502159237861633},{features:[[1,4,17,12,-1],[1,8,17,4,3]],threshold:.0945358425378799,right_val:.4126827120780945,left_val:.5264708995819092},{features:[[11,3,4,3,-1],[11,4,4,1,3]],threshold:.004731505177915096,right_val:.5892447829246521,left_val:.4879199862480164},{features:[[4,8,6,3,-1],[4,9,6,1,3]],threshold:-.0005257147131487727,right_val:.5189412832260132,left_val:.391728013753891},{features:[[12,3,5,3,-1],[12,4,5,1,3]],threshold:-.002546404954046011,right_val:.498570591211319,left_val:.5837599039077759},{features:[[1,11,2,7,-1],[2,11,1,7,2]],threshold:-.0260756891220808,right_val:.4955821931362152,left_val:.1261983960866928},{features:[[15,12,2,8,-1],[16,12,1,4,2],[15,16,1,4,2]],threshold:-.00547797093167901,right_val:.5010265707969666,left_val:.5722513794898987},{features:[[4,8,11,3,-1],[4,9,11,1,3]],threshold:.005133774131536484,right_val:.4226376116275787,left_val:.527326226234436},{features:[[9,13,6,2,-1],[12,13,3,1,2],[9,14,3,1,2]],threshold:.000479449809063226,right_val:.5819587111473083,left_val:.4450066983699799},{features:[[6,13,4,3,-1],[6,14,4,1,3]],threshold:-.0021114079281687737,right_val:.451171487569809,left_val:.5757653117179871},{features:[[9,12,3,3,-1],[10,12,1,3,3]],threshold:-.0131799904629588,right_val:.5160734057426453,left_val:.1884381026029587},{features:[[5,3,3,3,-1],[5,4,3,1,3]],threshold:-.004796809982508421,right_val:.4736118912696838,left_val:.6589789986610413},{features:[[9,4,2,3,-1],[9,5,2,1,3]],threshold:.0067483168095350266,right_val:.3356395065784454,left_val:.5259429812431335},{features:[[0,2,16,3,-1],[0,3,16,1,3]],threshold:.0014623369788751006,right_val:.4264092147350311,left_val:.5355271100997925},{features:[[15,12,2,8,-1],[16,12,1,4,2],[15,16,1,4,2]],threshold:.004764515906572342,right_val:.5786827802658081,left_val:.5034406781196594},{features:[[3,12,2,8,-1],[3,12,1,4,2],[4,16,1,4,2]],threshold:.0068066660314798355,right_val:.6677829027175903,left_val:.475660502910614},{features:[[14,13,3,6,-1],[14,15,3,2,3]],threshold:.0036608621012419462,right_val:.4311546981334686,left_val:.5369611978530884},{features:[[3,13,3,6,-1],[3,15,3,2,3]],threshold:.0214496403932571,right_val:.1888816058635712,left_val:.4968641996383667},{features:[[6,5,10,2,-1],[11,5,5,1,2],[6,6,5,1,2]],threshold:.004167890176177025,right_val:.5815368890762329,left_val:.4930733144283295},{features:[[2,14,14,6,-1],[2,17,14,3,2]],threshold:.008646756410598755,right_val:.4132595062255859,left_val:.5205205082893372},{features:[[10,14,1,3,-1],[10,15,1,1,3]],threshold:-.0003611407882999629,right_val:.4800927937030792,left_val:.5483555197715759},{features:[[4,16,2,2,-1],[4,16,1,1,2],[5,17,1,1,2]],threshold:.0010808729566633701,right_val:.6041421294212341,left_val:.4689902067184448},{features:[[10,6,2,3,-1],[10,7,2,1,3]],threshold:.005771995987743139,right_val:.3053277134895325,left_val:.5171142220497131},{features:[[0,17,20,2,-1],[0,17,10,1,2],[10,18,10,1,2]],threshold:.001572077046148479,right_val:.4178803861141205,left_val:.5219978094100952},{features:[[13,6,1,3,-1],[13,7,1,1,3]],threshold:-.0019307859474793077,right_val:.4812920093536377,left_val:.5860369801521301},{features:[[8,13,3,2,-1],[9,13,1,2,3]],threshold:-.007892627269029617,right_val:.497173398733139,left_val:.1749276965856552},{features:[[12,2,3,3,-1],[13,2,1,3,3]],threshold:-.002222467912361026,right_val:.521284818649292,left_val:.434258908033371},{features:[[3,18,2,2,-1],[3,18,1,1,2],[4,19,1,1,2]],threshold:.0019011989934369922,right_val:.689205527305603,left_val:.4765186905860901},{features:[[9,16,3,4,-1],[10,16,1,4,3]],threshold:.0027576119173318148,right_val:.4337486028671265,left_val:.5262191295623779},{features:[[6,6,1,3,-1],[6,7,1,1,3]],threshold:.005178744904696941,right_val:.7843729257583618,left_val:.4804069101810455},{features:[[13,1,5,2,-1],[13,2,5,1,2]],threshold:-.0009027334162965417,right_val:.5353423953056335,left_val:.412084698677063},{features:[[7,14,6,2,-1],[7,14,3,1,2],[10,15,3,1,2]],threshold:.005179795902222395,right_val:.6425960063934326,left_val:.4740372896194458},{features:[[11,3,3,4,-1],[12,3,1,4,3]],threshold:-.0101140001788735,right_val:.5175017714500427,left_val:.2468792051076889},{features:[[1,13,12,6,-1],[5,13,4,6,3]],threshold:-.0186170600354671,right_val:.4628978967666626,left_val:.5756294131278992},{features:[[14,11,5,2,-1],[14,12,5,1,2]],threshold:.0059225959703326225,right_val:.3214271068572998,left_val:.5169625878334045},{features:[[2,15,14,4,-1],[2,15,7,2,2],[9,17,7,2,2]],threshold:-.006294507998973131,right_val:.5141636729240417,left_val:.3872014880180359},{features:[[3,7,14,2,-1],[10,7,7,1,2],[3,8,7,1,2]],threshold:.0065353019163012505,right_val:.6310489773750305,left_val:.4853048920631409},{features:[[1,11,4,2,-1],[1,12,4,1,2]],threshold:.0010878399480134249,right_val:.3723258972167969,left_val:.5117315053939819},{features:[[14,0,6,14,-1],[16,0,2,14,3]],threshold:-.0225422400981188,right_val:.4887112975120544,left_val:.5692740082740784},{features:[[4,11,1,3,-1],[4,12,1,1,3]],threshold:-.003006566083058715,right_val:.5003992915153503,left_val:.2556012868881226},{features:[[14,0,6,14,-1],[16,0,2,14,3]],threshold:.007474127225577831,right_val:.5675926804542542,left_val:.4810872972011566},{features:[[1,10,3,7,-1],[2,10,1,7,3]],threshold:.0261623207479715,right_val:.1777237057685852,left_val:.4971194863319397},{features:[[8,12,9,2,-1],[8,13,9,1,2]],threshold:.0009435273823328316,right_val:.549125075340271,left_val:.4940010905265808},{features:[[0,6,20,1,-1],[10,6,10,1,2]],threshold:.0333632417023182,right_val:.2790724039077759,left_val:.5007612109184265},{features:[[8,4,4,4,-1],[8,4,2,4,2]],threshold:-.0151186501607299,right_val:.4973031878471375,left_val:.7059578895568848},{features:[[0,0,2,2,-1],[0,1,2,1,2]],threshold:.0009864894673228264,right_val:.3776761889457703,left_val:.5128620266914368}],threshold:104.74919891357422},{simpleClassifiers:[{features:[[5,3,10,9,-1],[5,6,10,3,3]],threshold:-.0951507985591888,right_val:.4017286896705627,left_val:.6470757126808167},{features:[[15,2,4,10,-1],[15,2,2,10,2]],threshold:.006270234007388353,right_val:.574644923210144,left_val:.399982213973999},{features:[[8,2,2,7,-1],[9,2,1,7,2]],threshold:.000300180894555524,right_val:.5538809895515442,left_val:.355877012014389},{features:[[7,4,12,1,-1],[11,4,4,1,3]],threshold:.0011757409665733576,right_val:.5382617712020874,left_val:.425653487443924},{features:[[3,4,9,1,-1],[6,4,3,1,3]],threshold:4423526843311265e-20,right_val:.5589926838874817,left_val:.3682908117771149},{features:[[15,10,1,4,-1],[15,12,1,2,2]],threshold:-29936920327600092e-21,right_val:.4020367860794067,left_val:.5452470183372498},{features:[[4,10,6,4,-1],[7,10,3,4,2]],threshold:.003007319988682866,right_val:.3317843973636627,left_val:.5239058136940002},{features:[[15,9,1,6,-1],[15,12,1,3,2]],threshold:-.0105138896033168,right_val:.5307983756065369,left_val:.4320689141750336},{features:[[7,17,6,3,-1],[7,18,6,1,3]],threshold:.008347682654857635,right_val:.6453298926353455,left_val:.4504637122154236},{features:[[14,3,2,16,-1],[15,3,1,8,2],[14,11,1,8,2]],threshold:-.0031492270063608885,right_val:.5370525121688843,left_val:.4313425123691559},{features:[[4,9,1,6,-1],[4,12,1,3,2]],threshold:-1443564997316571e-20,right_val:.381797194480896,left_val:.5326603055000305},{features:[[12,1,5,2,-1],[12,2,5,1,2]],threshold:-.00042855090578086674,right_val:.5382009744644165,left_val:.430516391992569},{features:[[6,18,4,2,-1],[6,18,2,1,2],[8,19,2,1,2]],threshold:.00015062429883982986,right_val:.5544965267181396,left_val:.4235970973968506},{features:[[2,4,16,10,-1],[10,4,8,5,2],[2,9,8,5,2]],threshold:.0715598315000534,right_val:.2678802907466888,left_val:.5303059816360474},{features:[[6,5,1,10,-1],[6,10,1,5,2]],threshold:.0008409518050029874,right_val:.5205433964729309,left_val:.3557108938694},{features:[[4,8,15,2,-1],[9,8,5,2,3]],threshold:.0629865005612373,right_val:.2861376106739044,left_val:.5225362777709961},{features:[[1,8,15,2,-1],[6,8,5,2,3]],threshold:-.0033798629883676767,right_val:.5201697945594788,left_val:.3624185919761658},{features:[[9,5,3,6,-1],[9,7,3,2,3]],threshold:-.00011810739670181647,right_val:.3959893882274628,left_val:.547447681427002},{features:[[5,7,8,2,-1],[9,7,4,2,2]],threshold:-.0005450560129247606,right_val:.5215715765953064,left_val:.3740422129631043},{features:[[9,11,2,3,-1],[9,12,2,1,3]],threshold:-.0018454910023137927,right_val:.4584448933601379,left_val:.5893052220344543},{features:[[1,0,16,3,-1],[1,1,16,1,3]],threshold:-.0004383237101137638,right_val:.5385351181030273,left_val:.4084582030773163},{features:[[11,2,7,2,-1],[11,3,7,1,2]],threshold:-.002400083001703024,right_val:.5293580293655396,left_val:.377745509147644},{features:[[5,1,10,18,-1],[5,7,10,6,3]],threshold:-.0987957417964935,right_val:.5070089101791382,left_val:.2963612079620361},{features:[[17,4,3,2,-1],[18,4,1,2,3]],threshold:.0031798239797353745,right_val:.6726443767547607,left_val:.4877632856369019},{features:[[8,13,1,3,-1],[8,14,1,1,3]],threshold:.00032406419632025063,right_val:.5561109781265259,left_val:.4366911053657532},{features:[[3,14,14,6,-1],[3,16,14,2,3]],threshold:-.0325472503900528,right_val:.5308616161346436,left_val:.31281578540802},{features:[[0,2,3,4,-1],[1,2,1,4,3]],threshold:-.007756113074719906,right_val:.4639872014522553,left_val:.6560224890708923},{features:[[12,1,5,2,-1],[12,2,5,1,2]],threshold:.0160272493958473,right_val:.3141897916793823,left_val:.5172680020332336},{features:[[3,1,5,2,-1],[3,2,5,1,2]],threshold:710023505234858e-20,right_val:.5336294770240784,left_val:.4084446132183075},{features:[[10,13,2,3,-1],[10,14,2,1,3]],threshold:.007342280820012093,right_val:.660346508026123,left_val:.4966922104358673},{features:[[8,13,2,3,-1],[8,14,2,1,3]],threshold:-.0016970280557870865,right_val:.4500182867050171,left_val:.5908237099647522},{features:[[14,12,2,3,-1],[14,13,2,1,3]],threshold:.0024118260480463505,right_val:.3599720895290375,left_val:.5315160751342773},{features:[[7,2,2,3,-1],[7,3,2,1,3]],threshold:-.005530093796551228,right_val:.4996814131736755,left_val:.2334040999412537},{features:[[5,6,10,4,-1],[10,6,5,2,2],[5,8,5,2,2]],threshold:-.0026478730142116547,right_val:.4684734046459198,left_val:.5880935788154602},{features:[[9,13,1,6,-1],[9,16,1,3,2]],threshold:.0112956296652555,right_val:.1884590983390808,left_val:.4983777105808258},{features:[[10,12,2,2,-1],[11,12,1,1,2],[10,13,1,1,2]],threshold:-.000669528788421303,right_val:.4799019992351532,left_val:.5872138142585754},{features:[[4,12,2,3,-1],[4,13,2,1,3]],threshold:.0014410680159926414,right_val:.350101113319397,left_val:.5131189227104187},{features:[[14,4,6,6,-1],[14,6,6,2,3]],threshold:.0024637870956212282,right_val:.4117639064788818,left_val:.5339372158050537},{features:[[8,17,2,3,-1],[8,18,2,1,3]],threshold:.0003311451873742044,right_val:.5398246049880981,left_val:.4313383102416992},{features:[[16,4,4,6,-1],[16,6,4,2,3]],threshold:-.0335572697222233,right_val:.5179154872894287,left_val:.26753368973732},{features:[[0,4,4,6,-1],[0,6,4,2,3]],threshold:.0185394193977118,right_val:.2317177057266235,left_val:.4973869919776917},{features:[[14,6,2,3,-1],[14,6,1,3,2]],threshold:-.00029698139405809343,right_val:.4643664062023163,left_val:.552970826625824},{features:[[4,9,8,1,-1],[8,9,4,1,2]],threshold:-.0004557725915219635,right_val:.4469191133975983,left_val:.5629584193229675},{features:[[8,12,4,3,-1],[8,13,4,1,3]],threshold:-.0101589802652597,right_val:.4925918877124786,left_val:.6706212759017944},{features:[[5,12,10,6,-1],[5,14,10,2,3]],threshold:-22413829356082715e-21,right_val:.3912901878356934,left_val:.5239421725273132},{features:[[11,12,1,2,-1],[11,13,1,1,2]],threshold:7203496352303773e-20,right_val:.5501788854598999,left_val:.4799438118934631},{features:[[8,15,4,2,-1],[8,16,4,1,2]],threshold:-.006926720961928368,right_val:.4698084890842438,left_val:.6930009722709656},{features:[[6,9,8,8,-1],[10,9,4,4,2],[6,13,4,4,2]],threshold:-.007699783891439438,right_val:.5480883121490479,left_val:.409962385892868},{features:[[7,12,4,6,-1],[7,12,2,3,2],[9,15,2,3,2]],threshold:-.007313054986298084,right_val:.5057886242866516,left_val:.3283475935459137},{features:[[10,11,3,1,-1],[11,11,1,1,3]],threshold:.0019650589674711227,right_val:.6398249864578247,left_val:.4978047013282776},{features:[[9,7,2,10,-1],[9,7,1,5,2],[10,12,1,5,2]],threshold:.007164760027080774,right_val:.6222137212753296,left_val:.4661160111427307},{features:[[8,0,6,6,-1],[10,0,2,6,3]],threshold:-.0240786392241716,right_val:.5222162008285522,left_val:.2334644943475723},{features:[[3,11,2,6,-1],[3,13,2,2,3]],threshold:-.0210279691964388,right_val:.4938226044178009,left_val:.1183653995394707},{features:[[16,12,1,2,-1],[16,13,1,1,2]],threshold:.00036017020465806127,right_val:.4116711020469666,left_val:.5325019955635071},{features:[[1,14,6,6,-1],[1,14,3,3,2],[4,17,3,3,2]],threshold:-.0172197297215462,right_val:.4664269089698792,left_val:.6278762221336365},{features:[[13,1,3,6,-1],[14,1,1,6,3]],threshold:-.007867214269936085,right_val:.5249736905097961,left_val:.3403415083885193},{features:[[8,8,2,2,-1],[8,9,2,1,2]],threshold:-.000447773898486048,right_val:.5086259245872498,left_val:.3610411882400513},{features:[[9,9,3,3,-1],[10,9,1,3,3]],threshold:.005548601038753986,right_val:.6203498244285583,left_val:.4884265959262848},{features:[[8,7,3,3,-1],[8,8,3,1,3]],threshold:-.00694611482322216,right_val:.5011097192764282,left_val:.262593001127243},{features:[[14,0,2,3,-1],[14,0,1,3,2]],threshold:.00013569870498031378,right_val:.5628312230110168,left_val:.4340794980525971},{features:[[1,0,18,9,-1],[7,0,6,9,3]],threshold:-.0458802506327629,right_val:.4696274995803833,left_val:.6507998704910278},{features:[[11,5,4,15,-1],[11,5,2,15,2]],threshold:-.0215825606137514,right_val:.5287616848945618,left_val:.3826502859592438},{features:[[5,5,4,15,-1],[7,5,2,15,2]],threshold:-.0202095396816731,right_val:.5074477195739746,left_val:.3233368098735809},{features:[[14,0,2,3,-1],[14,0,1,3,2]],threshold:.005849671084433794,right_val:.4489670991897583,left_val:.5177603960037231},{features:[[4,0,2,3,-1],[5,0,1,3,2]],threshold:-5747637987951748e-20,right_val:.5246363878250122,left_val:.4020850956439972},{features:[[11,12,2,2,-1],[12,12,1,1,2],[11,13,1,1,2]],threshold:-.001151310047134757,right_val:.490515410900116,left_val:.6315072178840637},{features:[[7,12,2,2,-1],[7,12,1,1,2],[8,13,1,1,2]],threshold:.0019862831104546785,right_val:.6497151255607605,left_val:.4702459871768951},{features:[[12,0,3,4,-1],[13,0,1,4,3]],threshold:-.005271951202303171,right_val:.5227652788162231,left_val:.3650383949279785},{features:[[4,11,3,3,-1],[4,12,3,1,3]],threshold:.0012662699446082115,right_val:.387761801481247,left_val:.5166100859642029},{features:[[12,7,4,2,-1],[12,8,4,1,2]],threshold:-.006291944067925215,right_val:.5023847818374634,left_val:.737589418888092},{features:[[8,10,3,2,-1],[9,10,1,2,3]],threshold:.000673601112794131,right_val:.5495585799217224,left_val:.4423226118087769},{features:[[9,9,3,2,-1],[10,9,1,2,3]],threshold:-.0010523450328037143,right_val:.4859583079814911,left_val:.5976396203041077},{features:[[8,9,3,2,-1],[9,9,1,2,3]],threshold:-.00044216238893568516,right_val:.4398930966854096,left_val:.5955939292907715},{features:[[12,0,3,4,-1],[13,0,1,4,3]],threshold:.0011747940443456173,right_val:.4605058133602142,left_val:.5349888205528259},{features:[[5,0,3,4,-1],[6,0,1,4,3]],threshold:.005245743785053492,right_val:.2941577136516571,left_val:.5049191117286682},{features:[[4,14,12,4,-1],[10,14,6,2,2],[4,16,6,2,2]],threshold:-.0245397202670574,right_val:.5218586921691895,left_val:.2550177872180939},{features:[[8,13,2,3,-1],[8,14,2,1,3]],threshold:.0007379304151982069,right_val:.5490816235542297,left_val:.4424861073493958},{features:[[10,10,3,8,-1],[10,14,3,4,2]],threshold:.0014233799884095788,right_val:.4081355929374695,left_val:.5319514274597168},{features:[[8,10,4,8,-1],[8,10,2,4,2],[10,14,2,4,2]],threshold:-.0024149110540747643,right_val:.5238950252532959,left_val:.4087659120559692},{features:[[10,8,3,1,-1],[11,8,1,1,3]],threshold:-.0012165299849584699,right_val:.4908052980899811,left_val:.567457914352417},{features:[[9,12,1,6,-1],[9,15,1,3,2]],threshold:-.0012438809499144554,right_val:.5256118178367615,left_val:.4129425883293152},{features:[[10,8,3,1,-1],[11,8,1,1,3]],threshold:.006194273941218853,right_val:.7313653230667114,left_val:.5060194134712219},{features:[[7,8,3,1,-1],[8,8,1,1,3]],threshold:-.0016607169527560472,right_val:.4596369862556458,left_val:.5979632139205933},{features:[[5,2,15,14,-1],[5,9,15,7,2]],threshold:-.0273162592202425,right_val:.5308842062950134,left_val:.4174365103244782},{features:[[2,1,2,10,-1],[2,1,1,5,2],[3,6,1,5,2]],threshold:-.00158455700147897,right_val:.4519486129283905,left_val:.56158047914505},{features:[[14,14,2,3,-1],[14,15,2,1,3]],threshold:-.0015514739789068699,right_val:.5360785126686096,left_val:.4076187014579773},{features:[[2,7,3,3,-1],[3,7,1,3,3]],threshold:.0003844655875582248,right_val:.5430442094802856,left_val:.4347293972969055},{features:[[17,4,3,3,-1],[17,5,3,1,3]],threshold:-.0146722598001361,right_val:.5146093964576721,left_val:.1659304946660996},{features:[[0,4,3,3,-1],[0,5,3,1,3]],threshold:.008160888217389584,right_val:.1884745955467224,left_val:.4961819052696228},{features:[[13,5,6,2,-1],[16,5,3,1,2],[13,6,3,1,2]],threshold:.0011121659772470593,right_val:.6093816161155701,left_val:.4868263900279999},{features:[[4,19,12,1,-1],[8,19,4,1,3]],threshold:-.007260377053171396,right_val:.4690375924110413,left_val:.6284325122833252},{features:[[12,12,2,4,-1],[12,14,2,2,2]],threshold:-.00024046430189628154,right_val:.4046044051647186,left_val:.5575000047683716},{features:[[3,15,1,3,-1],[3,16,1,1,3]],threshold:-.00023348190006799996,right_val:.5252848267555237,left_val:.4115762114524841},{features:[[11,16,6,4,-1],[11,16,3,4,2]],threshold:.005573648028075695,right_val:.5690100789070129,left_val:.4730072915554047},{features:[[2,10,3,10,-1],[3,10,1,10,3]],threshold:.0306237693876028,right_val:.1740095019340515,left_val:.4971886873245239},{features:[[12,8,2,4,-1],[12,8,1,4,2]],threshold:.0009207479888573289,right_val:.4354872107505798,left_val:.5372117757797241},{features:[[6,8,2,4,-1],[7,8,1,4,2]],threshold:-4355073906481266e-20,right_val:.4347316920757294,left_val:.5366883873939514},{features:[[10,14,2,3,-1],[10,14,1,3,2]],threshold:-.006645271088927984,right_val:.516053318977356,left_val:.3435518145561218},{features:[[5,1,10,3,-1],[10,1,5,3,2]],threshold:.0432219989597797,right_val:.7293652892112732,left_val:.4766792058944702},{features:[[10,7,3,2,-1],[11,7,1,2,3]],threshold:.0022331769578158855,right_val:.5633171200752258,left_val:.5029315948486328},{features:[[5,6,9,2,-1],[8,6,3,2,3]],threshold:.0031829739455133677,right_val:.5192136764526367,left_val:.4016092121601105},{features:[[9,8,2,2,-1],[9,9,2,1,2]],threshold:-.00018027749320026487,right_val:.5417919754981995,left_val:.4088315963745117},{features:[[2,11,16,6,-1],[2,11,8,3,2],[10,14,8,3,2]],threshold:-.0052934689447283745,right_val:.5243561863899231,left_val:.407567709684372},{features:[[12,7,2,2,-1],[13,7,1,1,2],[12,8,1,1,2]],threshold:.0012750959722325206,right_val:.6387010812759399,left_val:.4913282990455627},{features:[[9,5,2,3,-1],[9,6,2,1,3]],threshold:.004338532220572233,right_val:.2947346866130829,left_val:.5031672120094299},{features:[[9,7,3,2,-1],[10,7,1,2,3]],threshold:.00852507445961237,right_val:.6308869123458862,left_val:.4949789047241211},{features:[[5,1,8,12,-1],[5,7,8,6,2]],threshold:-.0009426635224372149,right_val:.4285649955272675,left_val:.5328366756439209},{features:[[13,5,2,2,-1],[13,6,2,1,2]],threshold:.0013609660090878606,right_val:.5941501259803772,left_val:.4991525113582611},{features:[[5,5,2,2,-1],[5,6,2,1,2]],threshold:.0004478250921238214,right_val:.5854480862617493,left_val:.4573504030704498},{features:[[12,4,3,3,-1],[12,5,3,1,3]],threshold:.001336005050688982,right_val:.584905207157135,left_val:.4604358971118927},{features:[[4,14,2,3,-1],[4,15,2,1,3]],threshold:-.0006096754805184901,right_val:.522942304611206,left_val:.3969388902187347},{features:[[12,4,3,3,-1],[12,5,3,1,3]],threshold:-.002365678083151579,right_val:.4898357093334198,left_val:.5808320045471191},{features:[[5,4,3,3,-1],[5,5,3,1,3]],threshold:.001073434017598629,right_val:.5470039248466492,left_val:.435121089220047},{features:[[9,14,2,6,-1],[10,14,1,3,2],[9,17,1,3,2]],threshold:.0021923359017819166,right_val:.3842903971672058,left_val:.535506010055542},{features:[[8,14,3,2,-1],[9,14,1,2,3]],threshold:.005496861878782511,right_val:.2827191948890686,left_val:.5018138885498047},{features:[[9,5,6,6,-1],[11,5,2,6,3]],threshold:-.0753688216209412,right_val:.5148826837539673,left_val:.1225076019763947},{features:[[5,5,6,6,-1],[7,5,2,6,3]],threshold:.0251344703137875,right_val:.702544629573822,left_val:.4731766879558563},{features:[[13,13,1,2,-1],[13,14,1,1,2]],threshold:-2935859993158374e-20,right_val:.465608686208725,left_val:.5430532097816467},{features:[[0,2,10,2,-1],[0,3,10,1,2]],threshold:-.0005835591000504792,right_val:.5190119743347168,left_val:.4031040072441101},{features:[[13,13,1,2,-1],[13,14,1,1,2]],threshold:-.0026639450807124376,right_val:.5161771178245544,left_val:.4308126866817474},{features:[[5,7,2,2,-1],[5,7,1,1,2],[6,8,1,1,2]],threshold:-.0013804089976474643,right_val:.4695515930652618,left_val:.621982991695404},{features:[[13,5,2,7,-1],[13,5,1,7,2]],threshold:.0012313219485804439,right_val:.4425831139087677,left_val:.5379363894462585},{features:[[6,13,1,2,-1],[6,14,1,1,2]],threshold:-14644179827882908e-21,right_val:.4222503006458283,left_val:.5281640291213989},{features:[[11,0,3,7,-1],[12,0,1,7,3]],threshold:-.0128188095986843,right_val:.5179932713508606,left_val:.2582092881202698},{features:[[0,3,2,16,-1],[0,3,1,8,2],[1,11,1,8,2]],threshold:.0228521898388863,right_val:.7609264254570007,left_val:.4778693020343781},{features:[[11,0,3,7,-1],[12,0,1,7,3]],threshold:.0008230597013607621,right_val:.4671724140644074,left_val:.5340992212295532},{features:[[6,0,3,7,-1],[7,0,1,7,3]],threshold:.0127701200544834,right_val:.1472366005182266,left_val:.4965761005878449},{features:[[11,16,8,4,-1],[11,16,4,4,2]],threshold:-.0500515103340149,right_val:.5016592144966125,left_val:.641499400138855},{features:[[1,16,8,4,-1],[5,16,4,4,2]],threshold:.0157752707600594,right_val:.5685362219810486,left_val:.4522320032119751},{features:[[13,5,2,7,-1],[13,5,1,7,2]],threshold:-.0185016207396984,right_val:.5137959122657776,left_val:.2764748930931091},{features:[[5,5,2,7,-1],[6,5,1,7,2]],threshold:.0024626250378787518,right_val:.3795408010482788,left_val:.5141941905021667},{features:[[18,6,2,14,-1],[18,13,2,7,2]],threshold:.0629161670804024,right_val:.658043384552002,left_val:.5060648918151855},{features:[[6,10,3,4,-1],[6,12,3,2,2]],threshold:-21648500478477217e-21,right_val:.401988685131073,left_val:.5195388197898865},{features:[[14,7,1,2,-1],[14,8,1,1,2]],threshold:.0021180990152060986,right_val:.5954458713531494,left_val:.4962365031242371},{features:[[0,1,18,6,-1],[0,1,9,3,2],[9,4,9,3,2]],threshold:-.0166348908096552,right_val:.517544686794281,left_val:.3757933080196381},{features:[[14,7,1,2,-1],[14,8,1,1,2]],threshold:-.002889947034418583,right_val:.5057178735733032,left_val:.6624013781547546},{features:[[0,6,2,14,-1],[0,13,2,7,2]],threshold:.076783262193203,right_val:.8047714829444885,left_val:.4795796871185303},{features:[[17,0,3,12,-1],[18,0,1,12,3]],threshold:.003917067777365446,right_val:.5719941854476929,left_val:.4937882125377655},{features:[[0,6,18,3,-1],[0,7,18,1,3]],threshold:-.0726706013083458,right_val:.4943903982639313,left_val:.0538945607841015},{features:[[6,0,14,16,-1],[6,8,14,8,2]],threshold:.5403950214385986,right_val:.1143338978290558,left_val:.5129774212837219},{features:[[0,0,3,12,-1],[1,0,1,12,3]],threshold:.0029510019812732935,right_val:.5698574185371399,left_val:.4528343975543976},{features:[[13,0,3,7,-1],[14,0,1,7,3]],threshold:.0034508369863033295,right_val:.4218730926513672,left_val:.5357726812362671},{features:[[5,7,1,2,-1],[5,8,1,1,2]],threshold:-.0004207793972454965,right_val:.4637925922870636,left_val:.5916172862052917},{features:[[14,4,6,6,-1],[14,6,6,2,3]],threshold:.0033051050268113613,right_val:.438204288482666,left_val:.5273385047912598},{features:[[5,7,7,2,-1],[5,8,7,1,2]],threshold:.0004773506079800427,right_val:.5181884765625,left_val:.4046528041362763},{features:[[8,6,6,9,-1],[8,9,6,3,3]],threshold:-.0259285103529692,right_val:.5089386105537415,left_val:.7452235817909241},{features:[[5,4,6,1,-1],[7,4,2,1,3]],threshold:-.002972979098558426,right_val:.5058795213699341,left_val:.3295435905456543},{features:[[13,0,6,4,-1],[16,0,3,2,2],[13,2,3,2,2]],threshold:.005850832909345627,right_val:.5793024897575378,left_val:.4857144057750702},{features:[[1,2,18,12,-1],[1,6,18,4,3]],threshold:-.0459675192832947,right_val:.5380653142929077,left_val:.4312731027603149},{features:[[3,2,17,12,-1],[3,6,17,4,3]],threshold:.1558596044778824,right_val:.1684713959693909,left_val:.5196170210838318},{features:[[5,14,7,3,-1],[5,15,7,1,3]],threshold:.0151648297905922,right_val:.6735026836395264,left_val:.4735757112503052},{features:[[10,14,1,3,-1],[10,15,1,1,3]],threshold:-.0010604249546304345,right_val:.4775702953338623,left_val:.5822926759719849},{features:[[3,14,3,3,-1],[3,15,3,1,3]],threshold:.006647629197686911,right_val:.231953501701355,left_val:.4999198913574219},{features:[[14,4,6,6,-1],[14,6,6,2,3]],threshold:-.0122311301529408,right_val:.5262982249259949,left_val:.4750893115997315},{features:[[0,4,6,6,-1],[0,6,6,2,3]],threshold:.005652888212352991,right_val:.3561818897724152,left_val:.5069767832756042},{features:[[12,5,4,3,-1],[12,6,4,1,3]],threshold:.0012977829901501536,right_val:.5619062781333923,left_val:.4875693917274475},{features:[[4,5,4,3,-1],[4,6,4,1,3]],threshold:.0107815898954868,right_val:.6782308220863342,left_val:.4750770032405853},{features:[[18,0,2,6,-1],[18,2,2,2,3]],threshold:.002865477930754423,right_val:.4290736019611359,left_val:.5305461883544922},{features:[[8,1,4,9,-1],[10,1,2,9,2]],threshold:.0028663428965955973,right_val:.5539351105690002,left_val:.4518479108810425},{features:[[6,6,8,2,-1],[6,6,4,2,2]],threshold:-.005198332015424967,right_val:.5434188842773438,left_val:.4149119853973389},{features:[[6,5,4,2,-1],[6,5,2,1,2],[8,6,2,1,2]],threshold:.005373999010771513,right_val:.6507657170295715,left_val:.471789687871933},{features:[[10,5,2,3,-1],[10,6,2,1,3]],threshold:-.0146415298804641,right_val:.5161777138710022,left_val:.2172164022922516},{features:[[9,5,1,3,-1],[9,6,1,1,3]],threshold:-15042580344015732e-21,right_val:.4298836886882782,left_val:.533738374710083},{features:[[9,10,2,2,-1],[9,11,2,1,2]],threshold:-.0001187566012958996,right_val:.5582447052001953,left_val:.4604594111442566},{features:[[0,8,4,3,-1],[0,9,4,1,3]],threshold:.0169955305755138,right_val:.0738800764083862,left_val:.4945895075798035},{features:[[6,0,8,6,-1],[6,3,8,3,2]],threshold:-.0350959412753582,right_val:.4977591037750244,left_val:.70055091381073},{features:[[1,0,6,4,-1],[1,0,3,2,2],[4,2,3,2,2]],threshold:.0024217350874096155,right_val:.5477694272994995,left_val:.4466265141963959},{features:[[13,0,3,7,-1],[14,0,1,7,3]],threshold:-.0009634033776819706,right_val:.5313338041305542,left_val:.4714098870754242},{features:[[9,16,2,2,-1],[9,17,2,1,2]],threshold:.00016391130338888615,right_val:.5342242121696472,left_val:.4331546127796173},{features:[[11,4,6,10,-1],[11,9,6,5,2]],threshold:-.0211414601653814,right_val:.5204498767852783,left_val:.2644700109958649},{features:[[0,10,19,2,-1],[0,11,19,1,2]],threshold:.0008777520270086825,right_val:.4152742922306061,left_val:.5208349823951721},{features:[[9,5,8,9,-1],[9,8,8,3,3]],threshold:-.0279439203441143,right_val:.5018811821937561,left_val:.6344125270843506},{features:[[4,0,3,7,-1],[5,0,1,7,3]],threshold:.006729737855494022,right_val:.3500863909721375,left_val:.5050438046455383},{features:[[8,6,4,12,-1],[10,6,2,6,2],[8,12,2,6,2]],threshold:.0232810396701097,right_val:.6968677043914795,left_val:.4966318011283875},{features:[[0,2,6,4,-1],[0,4,6,2,2]],threshold:-.0116449799388647,right_val:.5049629807472229,left_val:.3300260007381439},{features:[[8,15,4,3,-1],[8,16,4,1,3]],threshold:.0157643090933561,right_val:.7321153879165649,left_val:.4991598129272461},{features:[[8,0,3,7,-1],[9,0,1,7,3]],threshold:-.001361147966235876,right_val:.5160670876502991,left_val:.3911735117435455},{features:[[9,5,3,4,-1],[10,5,1,4,3]],threshold:-.0008152233785949647,right_val:.49497190117836,left_val:.5628911256790161},{features:[[8,5,3,4,-1],[9,5,1,4,3]],threshold:-.0006006627227179706,right_val:.4550595879554749,left_val:.585359513759613},{features:[[7,6,6,1,-1],[9,6,2,1,3]],threshold:.0004971551825292408,right_val:.5443599224090576,left_val:.4271470010280609},{features:[[7,14,4,4,-1],[7,14,2,2,2],[9,16,2,2,2]],threshold:.0023475370835512877,right_val:.3887656927108765,left_val:.5143110752105713},{features:[[13,14,4,6,-1],[15,14,2,3,2],[13,17,2,3,2]],threshold:-.008926156908273697,right_val:.497172087430954,left_val:.6044502258300781},{features:[[7,8,1,8,-1],[7,12,1,4,2]],threshold:-.013919910416007,right_val:.5000367760658264,left_val:.2583160996437073},{features:[[16,0,2,8,-1],[17,0,1,4,2],[16,4,1,4,2]],threshold:.0010209949687123299,right_val:.5560358166694641,left_val:.4857374131679535},{features:[[2,0,2,8,-1],[2,0,1,4,2],[3,4,1,4,2]],threshold:-.0027441629208624363,right_val:.464577704668045,left_val:.5936884880065918},{features:[[6,1,14,3,-1],[6,2,14,1,3]],threshold:-.0162001308053732,right_val:.5193495154380798,left_val:.3163014948368073},{features:[[7,9,3,10,-1],[7,14,3,5,2]],threshold:.004333198070526123,right_val:.3458878993988037,left_val:.5061224102973938},{features:[[9,14,2,2,-1],[9,15,2,1,2]],threshold:.0005849793087691069,right_val:.5870177745819092,left_val:.4779017865657806},{features:[[7,7,6,8,-1],[7,11,6,4,2]],threshold:-.0022466450463980436,right_val:.5374773144721985,left_val:.4297851026058197},{features:[[9,7,3,6,-1],[9,10,3,3,2]],threshold:.0023146099410951138,right_val:.4640969932079315,left_val:.5438671708106995},{features:[[7,13,3,3,-1],[7,14,3,1,3]],threshold:.008767912164330482,right_val:.6771789789199829,left_val:.472689300775528},{features:[[9,9,2,2,-1],[9,10,2,1,2]],threshold:-.00022448020172305405,right_val:.5428048968315125,left_val:.4229173064231873},{features:[[0,1,18,2,-1],[6,1,6,2,3]],threshold:-.007433602120727301,right_val:.4683673977851868,left_val:.6098880767822266},{features:[[7,1,6,14,-1],[7,8,6,7,2]],threshold:-.0023189240600913763,right_val:.4424242079257965,left_val:.5689436793327332},{features:[[1,9,18,1,-1],[7,9,6,1,3]],threshold:-.0021042178850620985,right_val:.5187087059020996,left_val:.3762221038341522},{features:[[9,7,2,2,-1],[9,7,1,2,2]],threshold:.000460348412161693,right_val:.5771207213401794,left_val:.4699405133724213},{features:[[9,3,2,9,-1],[10,3,1,9,2]],threshold:.0010547629790380597,right_val:.5601701736450195,left_val:.4465216994285584},{features:[[18,14,2,3,-1],[18,15,2,1,3]],threshold:.0008714881842024624,right_val:.3914709091186523,left_val:.544980525970459},{features:[[7,11,3,1,-1],[8,11,1,1,3]],threshold:.00033364820410497487,right_val:.5645738840103149,left_val:.4564009010791779},{features:[[10,8,3,4,-1],[11,8,1,4,3]],threshold:-.0014853250468149781,right_val:.4692778885364533,left_val:.5747377872467041},{features:[[7,14,3,6,-1],[8,14,1,6,3]],threshold:.0030251620337367058,right_val:.3762814104557037,left_val:.5166196823120117},{features:[[10,8,3,4,-1],[11,8,1,4,3]],threshold:.005028074141591787,right_val:.6151527166366577,left_val:.5002111792564392},{features:[[7,8,3,4,-1],[8,8,1,4,3]],threshold:-.0005816451157443225,right_val:.4390751123428345,left_val:.5394598245620728},{features:[[7,9,6,9,-1],[7,12,6,3,3]],threshold:.0451415292918682,right_val:.206303596496582,left_val:.5188326835632324},{features:[[0,14,2,3,-1],[0,15,2,1,3]],threshold:-.001079562003724277,right_val:.5137907266616821,left_val:.3904685080051422},{features:[[11,12,1,2,-1],[11,13,1,1,2]],threshold:.00015995999274309725,right_val:.5427504181861877,left_val:.4895322918891907},{features:[[4,3,8,3,-1],[8,3,4,3,2]],threshold:-.0193592701107264,right_val:.4773507118225098,left_val:.6975228786468506},{features:[[0,4,20,6,-1],[0,4,10,6,2]],threshold:.207255095243454,right_val:.3034991919994354,left_val:.5233635902404785},{features:[[9,14,1,3,-1],[9,15,1,1,3]],threshold:-.00041953290929086506,right_val:.4460186064243317,left_val:.5419396758079529},{features:[[8,14,4,3,-1],[8,15,4,1,3]],threshold:.0022582069505006075,right_val:.6027408838272095,left_val:.4815764129161835},{features:[[0,15,14,4,-1],[0,17,14,2,2]],threshold:-.0067811207845807076,right_val:.5183305740356445,left_val:.3980278968811035},{features:[[1,14,18,6,-1],[1,17,18,3,2]],threshold:.0111543098464608,right_val:.4188759922981262,left_val:.543123185634613},{features:[[0,0,10,6,-1],[0,0,5,3,2],[5,3,5,3,2]],threshold:.0431624315679073,right_val:.6522961258888245,left_val:.4738228023052216}],threshold:105.76110076904297}],size:[20,20],tilted:!1};var jsfeat_face=function(e){var t,n,r,o,a,i,s=e.width,c=e.height;"VIDEO"==e.tagName||"IMG"==e.tagName?((n=document.createElement("canvas")).height=c,n.width=s,r=n.getContext("2d")):"CANVAS"==e.tagName&&(r=e.getContext("2d")),t=new jsfeat.matrix_t(s,c,jsfeat.U8_t|jsfeat.C1_t),o=new Int32Array((s+1)*(c+1)),a=new Int32Array((s+1)*(c+1)),i=new Int32Array((s+1)*(c+1));var u=jsfeat.haar.frontalface;this.findFace=function(){"VIDEO"!=e.tagName&&"IMG"!=e.tagName||r.drawImage(e,0,0);var n=r.getImageData(0,0,s,c);jsfeat.imgproc.grayscale(n.data,t.data),jsfeat.imgproc.equalize_histogram(t,t),jsfeat.imgproc.compute_integral_image(t,o,a,null);var l=jsfeat.haar.detect_multi_scale(o,a,i,null,t.cols,t.rows,u,1.15,2),d=(l=jsfeat.haar.group_rectangles(l,1)).length;if(d>0){for(var p=l[0],h=1;h<d;h++)(l[h].neighbors>p.neighbors||l[h].neighbors==p.neighbors&&l[h].confidence>p.confidence)&&(p=l[h]);return[p]}return!1}};function mosseFilter(e){var t,n,r,o,a,i,s,c,u,l;this.psr_prev=void 0,this.peak_prev=void 0;var d=!1;if(e||(e={}),void 0===e.drawResponse)e.drawResponse=!1;else if("CANVAS"!=e.drawResponse.tagName)e.drawResponse=!1;else var p=e.drawResponse.getContext("2d");void 0===e.psrThreshold&&(e.psrThreshold=10),void 0===e.eta&&(e.eta=.1),void 0===e.convertToGrayscale&&(e.convertToGrayscale=!0),this.load=function(e){a=e.width,i=e.height,c=a*i,t=[e.real,e.imag],e.top&&e.bottom&&(d=!0,n=[e.top.real,e.top.imag],r=[e.bottom.real,e.bottom.imag]),(o=new FFT).init(e.width),"undefined"!=typeof Float64Array?(s=new Float64Array(c),l=new Float64Array(c)):(s=new Array(c),l=new Array(c));var p=document.createElement("canvas");p.setAttribute("width",a),p.setAttribute("height",i),u=p.getContext("2d")},this.init=function(e,l){c=(a=e)*(i=l),t=[[],[]],n=[[],[]],r=[[],[]];for(var p=0;p<c;p++)t[0][p]=0,t[1][p]=0,n[0][p]=0,n[1][p]=0,r[0][p]=0,r[1][p]=0;d=!0,(o=new FFT).init(e),s="undefined"!=typeof Float64Array?new Float64Array(c):new Array(c);var h=document.createElement("canvas");h.setAttribute("width",a),h.setAttribute("height",i),u=h.getContext("2d")},this.fft=function(e){for(var t=new Array(c),n=0;n<c;n++)t[n]=0;return o.fft2d(e,t),[e,t]},this.fft_inplace=function(e){for(var t=0;t<c;t++)s[t]=0;return o.fft2d(e,s),[e,s]},this.ifft=function(e,t){return o.ifft2d(e,t),e},this.psr=function(e){for(var t,n=0,r=0,o=[],s=0,c=0;c<a;c++)for(var u=0;u<i;u++)n+=t=e[u*a+c],s+=t*t,r<t&&(r=t,o=[c,u]);for(c=-5;c<6;c++)for(u=-5;u<6;u++)Math.sqrt(c*c+u*u)<5&&(s-=(t=e[(o[1]+u)*a+(o[0]+c)])*t,n-=t);var l=n/e.length;return(r-l)/Math.sqrt(s/e.length-l*l)},this.getResponse=function(e){var n=h(e);n=f(n);var r=this.fft_inplace(n);return m(r,t),this.ifft(r[0],r[1])},this.track=function(o,s,m,b,w,_,x,k){if(!t)return console.log("Mosse-filter needs to be initialized or trained before starting tracking."),!1;if("VIDEO"==o.tagName||"IMG"==o.tagName){var P=Math.round(s/o.width*o.videoWidth),S=Math.round(m/o.height*o.videoHeight),C=Math.round(b/o.width*o.videoWidth),D=Math.round(w/o.height*o.videoHeight);u.drawImage(o,P,S,C,D,0,0,a,i)}else"CANVAS"==o.tagName&&u.drawImage(o,s,m,b,w,0,0,a,i);var E=u.getImageData(0,0,a,i).data;if(e.convertToGrayscale)for(var j=0;j<c;j++)l[j]=.3*E[4*j],l[j]+=.59*E[4*j+1],l[j]+=.11*E[4*j+2];else for(j=0;j<c;j++)l[j]=E[4*j];var A=h(l);A=f(A);var I=this.fft_inplace(A),O=g(I,t),q=this.ifft(O[0],O[1]),R=0,T=0,B=[];if(x)for(var M,N,L,F=0;F<a;F++)for(var G=0;G<i;G++)N=F-a/2,L=G-i/2,M=Math.exp(-.5*(N*N+L*L)/128),q[G*a+F]*M>R&&(R=q[G*a+F]*M,B=[F,G]),q[G*a+F]<T&&(T=q[G*a+F]);else for(F=0;F<a;F++)for(G=0;G<i;G++)q[G*a+F]>R&&(R=q[G*a+F],B=[F,G]),q[G*a+F]<T&&(T=q[G*a+F]);if(this.peak_prev=R,e.drawResponse){var U=R-T,z=document.createElement("canvas");z.setAttribute("width",32),z.setAttribute("height",32);for(var W=z.getContext("2d"),$=W.createImageData(32,32),V=$.data,H=0;H<1024;H++){var J=q[H];J=Math.round((J+Math.abs(T))*(255/U)),V[4*H]=J,V[4*H+1]=J,V[4*H+2]=J,V[4*H+3]=255}W.putImageData($,0,0),p.drawImage(z,s,m,b,b)}if(k&&(this.psr_prev=this.psr(q)),_)if(d){if(k)var Q=this.psr_prev;else Q=this.psr(q);if(Q>e.psrThreshold){var X=[],Y=B[0],K=B[1];for(F=0;F<a;F++)for(G=0;G<i;G++)X[G*a+F]=Math.exp(-((F-Y)*(F-Y)+(G-K)*(G-K))/4);X=this.fft(X);var Z=v(I),ee=g(X,Z),te=g(I,Z),ne=e.eta;for(j=0;j<c;j++)n[0][j]=ne*ee[0][j]+(1-ne)*n[0][j],n[1][j]=ne*ee[1][j]+(1-ne)*n[1][j],r[0][j]=ne*te[0][j]+(1-ne)*r[0][j],r[1][j]=ne*te[1][j]+(1-ne)*r[1][j];t=y(n,r)}}else console.log("The loaded filter does not support updating. Ignoring parameter 'updateFilter'.");return B[0]=B[0]*(b/a),B[1]=B[1]*(b/i),!(R<0)&&B},this.train=function(o,s,p,m,b){if(!d)return console.log("The loaded filter does not support updating. Unable to do training."),!1;if("VIDEO"==o.tagName||"IMG"==o.tagName){var w=Math.round(s/o.width*o.videoWidth),_=Math.round(p/o.height*o.videoHeight),x=Math.round(m/o.width*o.videoWidth),k=Math.round(b/o.height*o.videoHeight);u.drawImage(o,w,_,x,k,0,0,a,i)}else"CANVAS"==o.tagName&&u.drawImage(o,s,p,m,b,0,0,a,i);for(var P=u.getImageData(0,0,a,i).data,S=0;S<c;S++)l[S]=.3*P[4*S],l[S]+=.59*P[4*S+1],l[S]+=.11*P[4*S+2];var C=h(l);C=f(C);for(var D=[],E=a/2,j=i/2,A=0;A<a;A++)for(var I=0;I<i;I++)D[I*a+A]=Math.exp(-((A-E)*(A-E)+(I-j)*(I-j))/4);D=this.fft(D);var O=this.fft(C),q=v(O),R=g(D,q),T=g(O,q),B=e.eta;for(S=0;S<c;S++)n[0][S]=B*R[0][S]+(1-B)*n[0][S],n[1][S]=B*R[1][S]+(1-B)*n[1][S],r[0][S]=B*T[0][S]+(1-B)*r[0][S],r[1][S]=B*T[1][S]+(1-B)*r[1][S];return t=y(n,r),!0};var h=function(e){for(var t=0;t<c;t++)e[t]=Math.log(e[t]+1);var n=0;for(t=0;t<c;t++)n+=e[t];for(n/=c,t=0;t<c;t++)e[t]-=n;var r=0;for(t=0;t<c;t++)r+=e[t]*e[t];for(r=Math.sqrt(r),t=0;t<c;t++)e[t]/=r;return e},f=function(e){for(var t=0,n=0;n<a;n++)for(var r=0;r<i;r++){var o=Math.sin(Math.PI*n/(a-1)),s=Math.sin(Math.PI*r/(i-1));e[t]=Math.min(o,s)*e[t],t++}return e},g=function(e,t){for(var n=[new Array(a),new Array(a)],r=0;r<c;r++)n[0][r]=e[0][r]*t[0][r]-e[1][r]*t[1][r],n[1][r]=e[0][r]*t[1][r]+e[1][r]*t[0][r];return n},m=function(e,t){for(var n,r,o=0;o<c;o++)n=e[0][o]*t[0][o]-e[1][o]*t[1][o],r=e[0][o]*t[1][o]+e[1][o]*t[0][o],e[0][o]=n,e[1][o]=r},v=function(e){for(var t=[[],[]],n=0;n<c;n++)t[0][n]=e[0][n],t[1][n]=-e[1][n];return t},y=function(e,t){for(var n=[[],[]],r=0;r<c;r++)n[0][r]=(e[0][r]*t[0][r]+e[1][r]*t[1][r])/(t[0][r]*t[0][r]+t[1][r]*t[1][r]),n[1][r]=(e[1][r]*t[0][r]-e[0][r]*t[1][r])/(t[0][r]*t[0][r]+t[1][r]*t[1][r]);return n}}function FFT(){var e,t,n=0,r=null,o=null;function a(e,t,a){for(var i,s,c,u,l,d,p,h,f,g=n>>2,m=0;m<n;m++)m<(u=r[m])&&(l=e[m],e[m]=e[u],e[u]=l,l=t[m],t[m]=t[u],t[u]=l);for(var v=1;v<n;v<<=1){s=0,i=n/(v<<1);for(var y=0;y<v;y++){d=o[s+g],p=a*o[s];for(var b=y;b<n;b+=v<<1)h=d*e[c=b+v]+p*t[c],f=d*t[c]-p*e[c],e[c]=e[b]-h,e[b]+=h,t[c]=t[b]-f,t[b]+=f;s+=i}}}this.init=function(a){if(0===a||0!=(a&a-1))throw new Error("init: radix-2 required");n=a,r="undefined"!=typeof Uint8Array?new Uint8Array(n):new Array(n),"undefined"!=typeof Float64Array?(o=new Float64Array(1.25*n),e=new Float64Array(n*n),t=new Float64Array(n*n)):(o=new Array(1.25*n),e=new Array(n*n),t=new Array(n*n)),function(){var e=0,t=0,o=0;for(r[0]=0;++e<n;){for(o=n>>1;o<=t;)t-=o,o>>=1;t+=o,r[e]=t}}(),function(){var e=n>>1,t=n>>2,r=n>>3,a=e+t,i=Math.sin(Math.PI/n),s=2*i*i,c=Math.sqrt(s*(2-s)),u=o[t]=1,l=o[0]=0;i=2*s;for(var d=1;d<r;d++)s+=i*(u-=s),c-=i*(l+=c),o[d]=l,o[t-d]=u;0!==r&&(o[r]=Math.sqrt(.5));for(var p=0;p<t;p++)o[e-p]=o[p];for(var h=0;h<a;h++)o[h+e]=-o[h]}()},this.fft1d=function(e,t){a(e,t,1)},this.ifft1d=function(e,t){var r=1/n;a(e,t,-1);for(var o=0;o<n;o++)e[o]*=r,t[o]*=r},this.fft2d=function(r,o){for(var a=0,i=0;i<n;i++){a=i*n;for(var s=0;s<n;s++)e[s]=r[s+a],t[s]=o[s+a];this.fft1d(e,t);for(var c=0;c<n;c++)r[c+a]=e[c],o[c+a]=t[c]}for(var u=0;u<n;u++){for(var l=0;l<n;l++)a=u+l*n,e[l]=r[a],t[l]=o[a];this.fft1d(e,t);for(var d=0;d<n;d++)r[a=u+d*n]=e[d],o[a]=t[d]}},this.ifft2d=function(r,o){for(var a=0,i=0;i<n;i++){a=i*n;for(var s=0;s<n;s++)e[s]=r[s+a],t[s]=o[s+a];this.ifft1d(e,t);for(var c=0;c<n;c++)r[c+a]=e[c],o[c+a]=t[c]}for(var u=0;u<n;u++){for(var l=0;l<n;l++)a=u+l*n,e[l]=r[a],t[l]=o[a];this.ifft1d(e,t);for(var d=0;d<n;d++)r[a=u+d*n]=e[d],o[a]=t[d]}}}module.exports=clm},27804:e=>{e.exports={scoring:{size:[20,22],bias:-1.3970965781063711,coef:[-.019443206312618266,-.008462655136937398,-.0056439963412376806,-.0030632716896851417,.00505819387986131,.003867199969294663,.007378142189325282,.008408844556368901,.002107991667489747,.008802151798966045,.008463420285129255,.00913418810487556,.0021677708519095705,.005790582602295826,.01002704292430879,.010018015835686447,.011074574130386098,-.0006169578361774428,-.0060840083569450205,-.009448767880890366,-.012441209862965338,-.0038650406223106025,-.00031049888008515014,.003187872856386012,.007818302118092636,.010960251877128001,.012100913210202307,.012289318801648701,.012872315936395949,.0134197639066574,.012863004278393353,.012570470005854794,.0144288424245574,.01333943052400528,.013248442014867023,.012998181709015256,.008056198630310941,.0014670228332206666,-.011928206846124195,-.009790927665988413,-.019951337591485003,-.014601516863452837,-.013174779761633797,-.006051490369656748,-.0010407140556988824,.005465099755534548,.010448591237341475,.014061216421035866,.015918382919452134,.016360925963435087,.02175676516818845,.017301016139781272,.014195207612699818,.012452400847919372,.010454129710215853,.004088301926982683,-.0014194361456059026,-.003849859914217695,-.010769873280441659,-.011758097810167857,-.004692730262498565,-.002213411234938204,-.003980443406752217,-.012186682535867691,-.011886732829841436,-.008198434083715244,.0028353930104073055,.007082018952877583,.012238372017639833,.016348014515026394,.02098025121015047,.01731275318263429,.01186526524722499,.007237133559106634,.002878758237322798,-.007467321804467685,-.012293394385884527,-.014833951237083715,-.00838863948674114,-.001277206299448029,-.004323776226736641,-.0007999555489078964,-.009044693937783461,-.015715154398522533,-.01637435302016491,-.018048467332774626,-.012034275948581882,-.00724304399758809,.0005125240784108197,.01309194391257256,.01857040908507438,.013098815816852492,.0008591564011330168,-.0064555113363009954,-.014574145037132261,-.018221531408352937,-.01805986873321162,-.01666595999261013,-.016742981997331947,-.012862200876738698,-.03740877678221599,-.02683031532226969,-.03669286789535555,-.0347880739448974,-.0218850319679039,-.024484660949111742,-.028068870569776663,-.018631752402912666,.0003386250226657851,.01559117928255003,.021178968053305464,.015184030917486158,.002942909802540911,-.014374637994945122,-.025568052116952664,-.025717989966112242,-.023218559873459776,-.043064179414035626,-.04224466749057232,-.04056098939759206,-.029282249261991376,-.03709718041495928,-.05020937144504969,-.043175446636272506,-.038799263945784764,-.03791335031217714,-.024596940746816367,-.013391546719824746,.0026176056292311106,.0161600431397954,.021950494557360537,.018824694902420232,.006927363884398058,-.006709974776830696,-.018258612142465137,-.031150030943545643,-.030987027023796063,-.033628054995754796,-.04343705380087554,-.034534827602693656,-.0027688241949539527,-.004549275180497156,-.0029637241504820444,-.003406700423480626,-.005815867591608318,-.0050003474884839725,-.005218902767395339,-.003509430269612119,.004807586605047698,.015230282965296896,.017877023790346995,.015060123226282708,.006830114845501906,-.0007473542577977511,-.004712922425024908,-.002017247560106044,-.002873371575985725,-3216525956375969e-20,.005257631846099062,.0043528918718454875,.016945619656148794,.015930900625567117,.013751773645422991,.010130474427749569,.008048089829708472,.006653967439781698,.006832470034884443,.006957704411470728,.004039912948910134,.011715241103133139,.017439724961211336,.014273924944517397,.006148597549223434,.00645013298676054,.00641548242674101,.008797261748865885,.008537108473799983,.008728211283033556,.011782866421798245,.016746943082334282,.022118218282678175,.020835875059091086,.018311801034637344,.01589801188949137,.01783342296051293,.01556573659143182,.014048773907766661,.009241576620658817,.008151842723012729,.011230814598071655,.01256801671117759,.012111623945116202,.00983817412742883,.007361162802690301,.009554115733366411,.011727533965135649,.018125902932239795,.01946924820706354,.017398513191690286,.021144199041044975,.021132145666912093,.019499184169656004,.019592876054570843,.02028149781228069,.01745060509084696,.01415914728419608,.006229051144510064,.0038367364618697264,.007020631149365693,.009656116146710875,.011406409148288063,.007327377475605029,.0046725824974188255,.005253560299244529,.0001875842284737577,.008152362961246195,.012760089024104778,.021600004613459223,.02330330354276354,.023745752734397885,.018230549428489853,.02001338863792708,.0198421711017051,.018799688221643948,.010638029835974899,.00047497591850582786,-.007177935918128386,-.0013492660142831474,.0015382005340972228,.0026091901041104195,.0005404682454971559,-.0004966422184611876,-.0004620349686195485,-.005244022876608114,-.005215235448209645,-.010002649985436339,.0014386382744505852,.012845063185194877,.020827676960957435,.02373841052172394,.01571668571346539,.01638066669873605,.014902611437895159,.007373035779786103,.0019356373041797752,-.006199971232118993,-.009116541477138968,-.008810991502401562,-.014849548271736901,-.002088752298238026,.005214097048844173,.0010527273675475608,-.010321625138183299,-.016207678046552692,-.012439252596672909,-.013087206027715756,-.002796996928583211,.0023632017053047227,.011157492323637063,.018368837091378775,.009522424063657664,.010552085697652452,.006561107470035311,-.0015314856230301123,-.003249203820988987,-.003132985735142634,-.0009277374824954263,-.0020968871213430215,-.002752601764726735,.0009438837129042068,5916433694984531e-20,-.001725467988837404,-.0034420772687673035,-.004577360958590432,-.0025304599008137956,-.0003821556159806081,.0005707858453624459,.003132596619556824,.006023783141733366,.01158476991744758,.0016262584963572593,.0032288122743198387,.0012532877511827127,.0006274779428878639,.002376673070768022,.0028182202873619686,.0023771129569157626,-.0033402786707182365,-.004895422636916792,.0030746977489523515,.006264859067042066,.005023115930404464,.00044657525636142406,-.004827090498873711,-.004023720007629251,.002498818345759046,.005458039465951253,.007288031192023364,.0036009634090189563,.010569246292394684,-.0045836905885612515,.0005793643998226257,.00102991877614139,.0030014799750564766,.003667515928752245,.004471800582196911,.006892742110051421,.0039124352937196984,.007139428500837236,.010304447674314087,.012609007891982103,.008958913992549505,.008603791251174015,.005540849488829477,.004672179031230026,.0047921200350865495,.005881820100455876,.005604722572404298,.005411245001991173,.007326498514953648,-.0027341865318231302,-.002724700534666883,-.003490049841464953,-.007995715468728556,-.004076110506711122,-.002077804850112882,-.0028478822594267903,-.0039662744056797195,-.00261612035304613,.0009261126741127569,.001742688698674802,.0005518705877623288,-.001372339198004937,-.004599586886222826,-.004201475995629732,-.005472177851887195,-.002341678055566526,-.002544084181193918,-.007877754680715537,5340267621167532e-20,.004687346571394124,.0021887942815206605,.0013036188253628853,-.001369820467079858,-.015804998363084376,-.016267691007421516,-.018900936626522147,-.01765945032079295,-.011812605534381678,-.0034436129735933847,-.00234833217156215,-.005011146346425207,-.005092238624051651,-.015030789874247219,-.020198024497642013,-.021620507739756673,-.018586140603325793,-.018723839025246693,-.005572269849920948,.006448045830050279,.002682265163248593,.006001001756989062,.003998624466137994,.005081325942641908,-.005911407232368929,-.027745788024718613,-.029251292823436387,-.023066523347947315,-.017210413752997977,-.015963112589643183,-.021075188283476324,-.023666705491108494,-.020005598090990763,-.019062969033403668,-.01779211719234862,-.025322677372927888,-.0209712403520562,-.003436645553932082,.004335089683955427,.008455718362753438,-.006321337322179261,-.0012841346959162978,-.0012350140140767124,.004020967306281667,.009227486761414333,.0045264965008091395,.004131589813441068,.0007710844545262394,.001758081991837795,-.0011577021001876594,-.0036195352433658614,-.003731990866591472,-.001666179302724247,.0031110879435167255,.0014906582671670387,.004844301505441868,.005999082929420393,.008475097921929535,.005582716891229391,.0025145315352065756,-.004631923000619128,-.007618251428388232,-.0046593775053102,-.0031253513278243637,.007465336752811483,.010125926733440484,.009474705361680475,.003565757195444251,.005783369506083248,.003888133034710705,.0019960148005530504,.0015056031401225207,.0011132050024144288,.005487654792876848,.004736573364903342,.007210635062716214,.01007774641754751,.0038570243972044947,-.003118757327733293,8694979275512165e-20,-.02144138726654334,-.007210297606987767,-.007835905822355455,-.00594066743311885,-.00161002982250586,.005345006481645826,.007104949657808108,.01019687544512947,.005757787329337457,.007457080004758256,.006273105317508202,.00762420836735205,.006843693093305499,.007002142239943064,.008725084064059078,.00899957896818086,.0034314447644411355,-.001989159567628072,-.007896602411841893,-.010924672368545567]},path:{normal:[[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],[15,16,17,18],[19,20,21,22],[23,63,24,64,25,65,26,66,23],[28,67,29,68,30,69,31,70,28],[34,35,36,42,37,43,38,39,40],[33,41,62],[44,45,46,47,48,49,50,51,52,53,54,55,44,56,57,58,50,59,60,61,44],27,32],vertices:[[0,1,23,0],[1,23,66,1],[1,2,66,1],[2,66,26,2],[2,26,35,2],[2,35,36,2],[2,36,3,2],[36,44,45,36],[3,4,44,3],[3,44,36,3],[4,44,55,4],[4,5,55,4],[5,55,54,5],[5,6,54,5],[6,53,54,6],[6,7,53,6],[7,8,53,7],[8,52,53,8],[8,9,52,8],[9,51,52,9],[9,10,51,9],[10,50,51,10],[10,11,50,10],[11,38,50,11],[11,12,38,11],[12,38,39,12],[12,31,39,12],[12,31,70,12],[12,13,70,12],[13,28,70,13],[13,14,28,13],[14,15,28,14],[15,28,67,15],[15,16,67,15],[16,67,29,16],[16,17,29,16],[17,68,29,17],[17,18,68,17],[18,68,30,18],[18,30,33,18],[30,40,69,30],[39,40,69,39],[39,31,69,39],[26,65,35,26],[34,35,65,34],[25,34,65,25],[22,25,33,22],[22,25,64,22],[21,22,64,21],[21,24,64,21],[20,21,24,20],[20,24,63,20],[19,20,63,19],[19,23,63,19],[19,23,0,19],[36,45,46,36],[36,42,46,36],[42,37,46,42],[37,46,47,37],[46,37,47,46],[37,47,48,37],[38,48,49,38],[37,43,48,37],[43,38,48,43],[38,49,50,38],[22,18,33,22],[40,41,30,40],[25,33,41,25],[33,41,30,33],[25,34,41,25],[41,40,62,41],[34,41,62,34],[34,35,62,34],[35,36,62,35],[36,42,62,36],[42,37,62,42],[37,43,62,37],[43,38,62,43],[38,39,62,38],[39,40,62,39],[44,45,61,44],[45,46,61,45],[46,47,61,46],[47,61,60,47],[47,59,60,47],[47,48,59,47],[48,49,59,48],[49,50,59,49],[50,51,58,50],[51,52,58,51],[52,57,58,52],[52,53,57,52],[53,54,57,53],[54,56,57,54],[54,55,56,54],[44,55,56,44],[23,63,27,23],[63,24,27,63],[24,64,27,24],[64,25,27,64],[25,65,27,25],[65,26,27,65],[26,66,27,26],[66,23,27,66],[28,67,32,28],[67,29,32,67],[29,68,32,29],[68,30,32,68],[30,69,32,30],[69,31,32,69],[31,70,32,31],[28,32,70,28]]},patchModel:{patchType:"SVM",bias:{raw:[-.964306520867,-1.03566919244,-.874989992149,-.916328634351,-.84503678968,-.844297101434,-.738523173234,-.808714131663,-.726541145855,-.843675312327,-.869822246614,-.917260263832,-.873711733476,-1.02671396751,-.98146088848,-.873014174242,-1.02044597636,-1.05803547484,-1.22124828051,-.881683950651,-1.03317042471,-1.05134750237,-1.24054665894,-1.16383797435,-1.06699587696,-1.23916761432,-1.18767751229,-1.12345203915,-1.13546600331,-1.08024044629,-1.24021266444,-1.16700091429,-1.11195019559,-.729540672833,-1.12391599663,-1.3005410545,-1.31472443469,-1.08705339489,-1.33623226644,-1.32469845456,-1.11491083141,-.762875763426,-1.12163285295,-1.09863140074,-1.29945157973,-1.27843894877,-1.00589316549,-.912330645934,-.962922353705,-1.25265133142,-1.29458347282,-1.15225762288,-1.00045652806,-.887710450269,-1.01416634829,-1.19650803217,-1.03872671577,-.86719070075,-1.008904644,-1.12379151191,-.950687461141,-1.12241433736,-.889224862634,-1.11762094609,-1.22489133968,-1.24702333407,-1.24517637612,-1.09819559472,-1.2104134101,-1.2217112657,-1.17731763127],sobel:[-.83934766225,-.62721260575,-.558840580329,-.699564404116,-.711116468654,-.800405507582,-.800598028802,-1.11367567263,-.800716892269,-.800194374505,-.719852733547,-.699662339749,-.583473094463,-.656586463686,-.82585939445,-.777588904797,-.772328358153,-.858083769483,-.819377339675,-.764279660704,-.799960100345,-.867018791717,-.823023270097,-.742640730114,-1.00863469391,-.717177931342,-.795282566734,-.882814402127,-.781504747967,-.996713581871,-.712255820555,-.811275119279,-.961002025204,-1.20550193802,-.862430611162,-.755762286162,-.788966054175,-.962730404866,-.785589168563,-.783168017095,-.891439881469,-1.08053052724,-.818953010952,-.823990582718,-.610975113014,-.706369334087,-.83607795072,-.86536700094,-.861887789379,-.706860677903,-.604669076545,-.638959509959,-.600205200156,-.601208908689,-.600265306283,-.666594192176,-.706937637112,-.806432197551,-.701267093778,-.697408794637,-.851407473703,-.696453841977,-1.00957402773,-.888081735997,-.883778307995,-.801014108655,-.802707601144,-.902478661063,-.867497240701,-.826525935114,-.828361611411],lbp:[-1.2775026474,-.801223028353,-.800091623644,-.800009851969,-.706840077597,-.771744181593,-.764756730848,-.668987349384,-.722732252285,-.669412768606,-.599571546235,-.799859783453,-.800085025062,-.800151690407,-.800453693963,-.770896454141,-.657297455691,-.599810309052,-.583090394926,-.952970571559,-.7654582373,-.799938792024,-.727414989246,-1.31723075305,-1.14076054405,-1.33781061842,-1.40029321489,-1.29006497698,-1.28367040173,-1.15693629435,-1.21680694398,-1.40041878805,-1.29047691479,-.928378863331,-.926795080454,-.921170431637,-.911039053934,-.843072087859,-.863356945439,-.975893430292,-.891645275689,-1.19772729821,-.994481526443,-.974741126221,-.796142704788,-.771301703397,-.911422811844,-.920856682866,-.865902542856,-.849751055127,-.806605497263,-1.05057278424,-1.21923288747,-1.3182935345,-1.30915908452,-.608079191461,-.939755202343,-1.10582615252,-1.02794612196,-.913831959238,-.874524304042,-.818753505759,-1.06509012802,-1.18557061801,-1.18891869024,-1.3461331468,-1.39693404573,-1.19088607628,-1.13830203374,-1.37361790282,-1.39128680085]},weights:{raw:[[-.00641929350098569,.029808749809618604,-.026783847528159686,-.022626445601288438,-.06769654478392964,-.3330801701058753,.028196651717386736,.18244853629138108,.015034328565348129,.06785273618154651,.06670760102804295,.04375774477293372,-.04943204693546423,.028764976579739795,-.023780221712776294,-.019043996534914023,-.1459760995456534,.07674812965123064,.10031267415956342,.022404267686006132,.03948930481064268,-.06917255594192799,.06445393061200727,-.03568078024136126,.029477578218046946,.013670321310075631,-.04008674643487946,-.16483725729324836,.060739714509717116,.1342127393151894,.02422269183439342,-.0231794397202719,-.023938362360883966,.0008056447282202492,-.020188203981491876,.035394353296754666,.0205064246422616,.02899344816440129,-.15875938903288647,.08638017630000529,.06961235394930866,-.005149628317893187,-.08621251663291626,-.11615256372599751,-.10171915312404266,.05044362294149464,-.010944856179506302,-.001993957790501183,-.08249632373737503,-.19805282268418445,.14503065839704138,.10472965706111854,-.05450410065575717,.058558989674775644,.02150968078817124,.01730546008925736,.05479743583896092,.08144986165856803,-.015926761159011912,-.0266458258524559,-.293957896046404,.26045433455042083,-.014750981039322313,.013565969503019568,-.05204369663142167,-.06850765601608066,.026714598423665525,.015030040573038209,-.0036695544345779346,.00383258647431671,-.029296334816602605,-.2168604461047042,.23218142341105868,-.00327038976446066,.0010937576464049442,.022865074396730092,-.0024710599676689565,.027138580199090406,-.01679885289520537,.05289654559111395,.006877363228005057,-.11534615443720748,-.20002833023471947,.26776687274414374,-.012990564848598472,.014507044952519324,-.028376794482919257,.00618216485194005,.0889219146062195,-.02926862382222637,.023549402065920405,.005011976866251447,-.10302390187256479,-.11265110616376864,.2362166399750627,-.023189771813893006,.0035722520614683423,-.03418213706662514,.05063039309457559,.010945258403000244,-.0026518946618147438,-.025155322122281942,.028530077090590744,-.13115618895267522,-.09325600139501289,.16420560614466395,-.010547265652414012,.03555013933252189,-.020259214475918323,.02246656772503501,.034170311222606,.11907609035635143,-.0015743444390024786,-.064020366156778,-.22057027736788293,-.07230997390748017,.3020467193547322,.023274069917025395,.063584377222265,.042978528220157006,.1184620505912367],[.1666751450718194,-.06105649607736628,.006921123396451054,.017084537322497012,-.2260817686595176,-.3734473319351409,.0799408682638239,.16478474110226196,.022649460741459224,.05289358066562716,.029321578215087005,-.06568683076912647,-.017175099236391184,.05342642508666981,.13196524692583625,-.03891597035567766,-.2214210563511815,.1701888918075543,.037968714516855254,.03243303857962143,.013114263754535838,-.004713976681790598,.01449378481921762,.016836144088159047,-.03538252197938949,.06459440929029997,-.1686419424136731,-.18183649747692435,.2201119970415321,.017097680726078424,.044439120834852616,-.06574464759714618,.1020917702829201,.012977428388828996,.01977596493630697,-.020715077614501087,.03753609961730282,.07318814378973455,-.2573933108232303,.17910460975300116,-.012201308491933793,-.012488637353357972,-.027937934041822002,.09083951985921551,.05606169228127485,-.02959213495132615,.08379737554962405,.02690901960800999,.02844725619429324,-.2672429524643786,.17601512398468455,.05747403764496381,-.02175445157089756,-.016094120395692652,.034960605520111765,-.06613609379939898,-.08682227581682511,.021267627399376515,.02491383906151458,.08335124804544296,-.2123391815448888,.14528347788592133,.05210322011013152,.00605269353127303,.004105795692207578,.07374252723173551,-.06315098228507052,.07170651328073925,.05027696784566078,.05947386035797521,.04109277684503734,-.23158549693983016,.03982435330236364,.03516809644185254,-.03932662577032886,-.04671341171222192,-.029438846368243326,.03037322262500354,.010642421674176408,.03544309823317393,-.06489736931049253,-.032863903246691833,-.15394029962311223,.011777952930909712,.17418487412288675,-.05475758571404693,.04792406601368864,.05434649000577907,-.0033548564463232317,.023589666170022047,-.024599944457705122,.06065500572988429,.13656620662733865,-.09366338113990888,-.04744440772227543,.06287271944447118,-.02272823079189625,-.02726612072929817,.1294937855467878,-.016064969466370635,-.029023009596784263,-.05570334330637803,-.0840107251201864,.06758267309536246,-.021201313484205356,-.12021659219227125,.09485936016857895,-.023785622470961085,-.031181057005649077,-.004546101199478264,-.0009687804195086802,.07543593802259964,.010017282477206416,.06897995798959812,.07714796080101254,.01605850787004124,-.19045442262141093,-.010877182945437318,.12221413195895285,-.0351155412356487,.06195748510363465],[.0011017024675275405,-.10082831174460544,8594795150784762e-20,-.004422049478273848,-.09673952628000249,-.13240523784777558,.13984373949584222,-.00313787541686765,.06839962137118966,.041644858137291046,.1246603542346705,.05746879604248942,.07361120898568357,-.010863604812754085,.004840634820014525,.01639620645886397,-.021671035744779854,.044733205419186794,.06792156583497788,-.01587229208239721,-.055943430884781355,.01970238776563854,.01861633041967882,-.005658956684688951,.03403751236246519,.03441147508211587,-.10871009154186473,-.08095953984145883,.0674276232825569,-.019879897471494754,-.01366520816807866,.035789793103949114,.06623139637196183,-.04591799977774408,-.00420191665726459,.021126802087625032,.040187642280355346,-.03666439487226949,-.030092902147062638,.008811740476730875,.0024160167750989087,-.03859253346469508,-.031144322454676222,.03504205275969649,-.018244427580942767,.0189160005658235,.0008242036653817869,.09247456507290092,.0732971691285424,-.024311595897201867,-.0027452015976400512,.06792073218745394,.0011865809331642052,-.02829414542225548,.04281208602061819,-.022452858987935732,.02261009594352785,-.028250777066103218,.04326259106400333,.0925323906952393,-.15324339008135635,.05021126046953936,.013929622339187875,-.0008978138468668517,-.06366120100595833,.004848552355720334,.0785800941235526,.02575794561866239,-.032352350433290294,.028485056134963452,.02362139569139944,-.2117470445371154,.10461485137190293,.047597936964786855,-.013272615927845698,-.060311993172769994,.02193128143972145,-.05466583518135374,.02458965449621621,-.05314264114611795,.04992839103128853,-.024452908798012384,-.13669941087219498,.013882012829174228,.1070905994912941,-.03027728857497334,.045488870557272854,.021158864845617006,.004550470470934022,.05214959922096879,-.03112491408752256,-.025892240716889583,.051505846702740755,-.15850714978032798,-.07743410057907743,.1444219758540272,.025520694414871425,-.013359740227537047,-.032691479720369884,-.05076075577061953,.006726712466217588,.053582968166709294,-.0660913290710981,.028319458261919814,-.023395468585636847,-.12189855936069849,.1264108145125255,.04107040225763695,-.038345327797452616,-.005103783589953988,.01115753611454251,-.025558001982792473,-.015803280214702852,-.014570255682172791,.058581784915518444,.048613151833675504,-.2965749163672431,-.06764565935277526,.13108882918808282,.05456992979648274,.06252397190390564],[-.025232963701757677,.022348786079614824,-.07225884031672042,-.18573054835716424,.06115371568490616,.16052559660045873,.03573522287613719,.03264581953820091,.04997287054493556,-.017744962590501873,.12327939069776968,-.0020676327098313324,.01746290767019347,.06278946307849151,-.11704698186369022,-.06525458717047697,.09452513318995885,.044950125896693824,-.028763679134251888,-.0075590072060936625,-.018042703509056443,-.042766926478698966,.006472665330244001,-.02449852894821654,.015095977860562756,.011479770091646538,-.22511989496614118,.1374997596027168,.0421743831469316,-.0009797392756477757,.005345865322224516,.006695870860846068,.05293878324449834,.02866288570467257,.008378826462652478,.00039142479042951484,.05893591963645446,-.20560278009245425,.07950278129895037,.10223896059315847,-.04113799190793238,.02733007338967257,-.010752121223537789,-.0022306851331074934,-.007924201477948527,-.008279495647935058,-.03208506233715542,.08612259920756052,-.12113263279497796,-.12790727680874353,.13902963426409898,.008853966604374208,-.035846424270882665,.004579108178465921,-.043586755702451435,-.02644030622989594,.012179387770686292,.07404187243630776,.01288390088442623,.0631378025037042,-.3001337956577562,.19884603307627666,.06381579707055893,.049734977180621504,-.059941845556548135,.06608231683752042,.018259553212376337,.017779633684347013,-.03063237250430595,-.05294008910372007,.12680914791412304,-.23860332882902754,-.07293743785631161,.12736775458078498,.0635659183412351,-.05117287506106216,.009779050114535295,-.004340704267483765,-.016155615544080057,-.009192392330326163,.050665742508667524,.006098472165673663,.017307742609543222,-.20367784360158347,.12046177714866035,.012913438963355811,-.009205184571941166,.03536275630143247,.030747952698754938,-.006848330425988862,.060769663776634064,-.024830671275067155,.03220482558814165,.08851298653495965,-.20132344254131007,.002548413815897023,.140122587765108,.01961859385120905,.030770253761956967,-.044844034190508676,.010829012004067717,-.01860457458041309,.004870118723122603,-.05383562252519328,.06565573244826663,-.08783449445825132,-.10019900548070505,.019098697970463,.032625675487211764,.013786208177970036,.01459298085632256,-.02245319975032244,.023627062323695644,.04456787584724979,.051820387537472895,.05896083203079447,.011808887606369993,-.24302913455395336,-.10331035325930389,.04312222197544385,.04478411411677549],[-.11131891807709643,-.14268474406555598,-.11319512819486531,.16616863430344642,.21669051126658584,.14580497808064175,.015659490036423723,.08129976577263026,-.024809345136602795,.04021044222676087,.1147788050575636,.018929993321792474,-.08089736615545767,-.05933670525564233,-.10482248256522532,.10573530196882865,.0631408717985007,.059506144939088096,-.10685781396759031,.03408209651191432,-.04492878624667285,-.023391401657096106,-.021033602025377948,.011729129297605986,-.12518841502550898,-.24524516894120252,.07503634089773896,.16915003534917084,-.01104335485702547,.01869801655833349,.008919381060601264,-.009574206883586497,.0749513760802387,.052515621176523086,.0007625567461485294,.14447253116659836,-.16116755572117158,-.2943535080561774,.21097730948472182,.1532239111676963,-.031396770107823796,-.07319949962206841,-.0005813891955292749,.03837364808790836,.07166124298300858,-.02522805699198942,.09435561905590027,-.005506626027510814,-.31676942832713584,-.17017797276453395,.20181171910078166,.03895103544935513,.020699071667054786,.007352495909389606,.01925107008541585,.02771336549368973,.022207504221021385,.017801567429584678,.1612676210022263,-.00979265416273932,-.39692367057618455,-.016344797834207933,.08433496504920006,.12332269298102864,.04685154450642956,.002636755382792469,-.01561848475266879,-.009436542015435909,-.02615768632490699,.09309181623129058,.015836673962272785,-.03610417595442539,-.2519463776351575,.06651888922706571,.08876872373304114,-.054177349140414666,.11363104423136496,-.07433609691566458,.026411919672457762,-.0069934713872144005,-.011837151565905812,.20495766925622727,.04065257446984291,-.1095170141673022,-.19525613842871348,-.026690291071139877,.025635090198280266,.0841424871807917,.08156051741344665,.03389958127434067,-.04177793659445489,-.009501675246059646,.014146738677450046,-.008345664039773965,.06615605391728069,-.13607639700339172,-.07520007682223616,-.0994873515069512,.097954762781141,-.06803133834165287,-.028816943621434,.06211656943949179,-.056509543958784436,-.01645775253059964,.07817870576774648,-.011547980097176877,.054587296091729326,-.01756300038547995,-.07269143851776608,-.03485607595050838,.05857371177073828,-.0602890204905569,-.012302959633281041,.05215547808996612,.07522769209224177,.05372691554672293,.0021832390619121317,-.002344923538649027,.06900194647824753,-.05514982572329348,-.1813815383750435],[-.23224131638764922,.07903469662446332,.2067918064109477,.17116975450055194,.06039325579902376,.07007210980485583,-.06190466024121998,.10747334033766655,.01433196398767149,-.03256186482121042,.09613665022049653,-.11702112011574746,-.1864804302468564,-.07263583233067163,.12519462388086205,.07088720261632298,-.03271329648281499,-.014132673438533166,.0038161968326955314,.06596606828134262,.02045739986512317,.05133413578390264,-.001116824372617925,-.08650385257532717,-.1785625235356172,-.024882107163551152,.17291742960211148,.07663613794861675,.09577626737118992,-.07664408368156322,-.054109190285893664,-.037610346895478264,.10646735039870757,.005106033165145046,.05630446848381131,-.02815452123015502,-.3172866921301339,-.058091370831929535,.11556013989779028,.06572349088657835,.030550971916660702,.04174710309339162,-.06958785825069148,.09246126396658998,.05229901039500466,-.010485795012401211,.011062345730906517,-.04525324732355647,-.23598087205664336,-.07089255746370644,.10680685304416297,.11990972610746585,-.020183291742381704,.0005727301827296999,.09656302661129444,.08439413274340078,.0061097222161349135,.052438465571679,.012127916344441741,-.0257064038739874,-.3742573188077962,-.1276874097835226,.057044219322174475,.11342314858398521,.08990901529141647,.08875860180043092,-.017367003795174522,.05857393693614622,.0024241782448618243,.08109965832409753,.07161451991128079,-.01563620268743912,-.21764039015095288,-.20280985898846876,-.10017064401745751,.07648124633085683,.07207247607484658,.07483195051351595,-.07166912711289458,.0033343139896645224,-.020106231127842517,.12484552374687989,.088741504624313,.01253935252290507,-.08037165138919668,-.20667576524399633,-.04282468905818822,-.041960654306219244,-.01131931097222521,.008735105318849586,-.00734658047955114,-.014035434722362766,.06098093434751581,.004495721964022023,.06013604234048665,.12862638541641686,-.04340711738426402,-.17199184431209702,-.12411968467220214,-.0678783666252617,-.01454311580267198,.01330421418710441,.0866161567100902,-.05086944418717247,.05903651637207552,-.03008247843263918,-.03915069183312177,-.013410175971461852,.08202413261695805,-.18429763963038856,.04381998829312517,.031005210064727645,.010111390046324928,-.0064173858317888854,.024542598321298154,.003326533057552636,.04021021589655824,.10549988851835322,.06646601329742752,.049201722388277136,-.0939321536148138],[-.12203267064152819,-.036980237066742305,.12682937376396922,.10063288694137082,.08215419826803332,.031376504219097656,.0761930646076317,.02964354031201931,.06719515773118173,.014606114158926237,.21693479369516466,-.09199099991065045,-.11495742760629782,-.05785437441465155,.02698330863563836,.05370374419050639,-.0273941556868533,.06205078188675167,-.014064800119151746,-.030464390345027792,.0502232298623065,.0695221694583664,-.04791508006637751,-.07631273807225611,-.10542836060878844,-.06996306274716022,.06388780976819086,.047703502973526726,.04962563211466377,7.937110578365436e-7,.06693802016800053,.0223312679300762,-.013204459193458515,-.051208345754393744,.017251686675046174,-.16855866147278023,-.08171836268720581,-.051493312235764005,.044258122147233556,.07986075057146982,.04025690490590825,.06116790096664046,-.04445412975620007,.07605855153730079,.02448453321308726,.0237388901616193,.022211385002816955,-.03909556756500325,-.26993986747191345,-.13809797457481326,.10638240754104332,.07416453466566666,.1361114507013107,.08862011177027157,.023942633928693842,.05945503505976131,.018810531601996444,.1333285511666898,.019080517712641562,.04095366870170747,-.19369280785037196,-.33096708018422843,-.3153716399945978,-.051011822183710684,.10153083596477822,.10646364340542763,.014630901225096263,-.0037911814153038514,-.031174186442994762,.12574438878630761,.08274660855089384,.13910378358879222,.015618015934354273,-.09701003161915218,-.25736850771835984,-.23890047875932624,-.3920141608141943,.014631649728319138,-.004957651679090035,.03224914217266181,.01990648283333149,.009003071269804548,.026111426002791746,.06289786783199448,.1463890162014621,.10175160175705127,-.008366542972654184,-.22694639696488025,.016644643336980125,.010640427487024477,-.033902595425888096,-.05887030600117281,.022391466116807472,.010861548153134476,.028661031141596176,-.00897323660083852,.05200412153695907,.030892998140363448,-.06629876851654298,-.045462972141964375,-.03653407501604951,.05825510998520326,-.09030077093272416,.08752918060369558,-.048367137056150394,-.02186992064128039,-.061934612997809474,.02284265461094593,.0870990153167514,-.038225524845750966,.042582590594014876,.04640395416303122,.0380440573383962,.013279662526628024,-.0244758709967295,.04264842707545879,.021205045270171127,.02354074407698388,-.007329919947495406,.00907767220495534,.07270438554369765],[.07613532294423606,.07592874232876966,.10248245044059716,.12142390869553117,.061858857352832766,.025464191080837695,.048676474818140573,.030285797856824295,.11128631305542007,.1945532737788299,.11002956054185524,.07460681426549293,.013898060531860643,-.012868505144617515,.03811974665790328,.007148462430406344,-.03738969490673246,.027891841345889026,-.004018077277820727,.05119166474350638,-.05141505993337936,-.06594790510444799,-.07721628063745908,.07879227456062733,-.014940451970767085,-.04242817117298531,-.02277362203587799,.009552105313378119,.0892249730187428,.0026288446459537393,.02779528927690774,-.011245376233293055,.00277897025591206,-.08464626341108711,.1085122984586782,.06478748838514646,.07177453301553025,.101565447736036,.13538683839366522,.022702180797543253,.08138250439122006,.10182220145207069,.1341459901576617,-.06725473581240397,-.25199554524555356,-.131377327178401,-.16365674311148973,-.018740825554245097,-.06288280746917164,-.022204060979254633,-.07230826470434813,-.06002150860570432,-.15902262422755242,-.2376226356188884,-.27876101597724223,-.040263587475045666,-.08015604055016233,-.054338910081926026,-.19775317420562621,-.28232046584273385,-.23353688528539848,-.2887146857983052,-.14101654202670044,-.1025403206842016,-.09107919131866912,-7602192051990307e-20,.08433377565121718,.02577687564589032,.027110928294315155,.12586947033203832,.1709457201826477,.12107947589739056,.23253719852668123,.02250844292994217,.10869072456768857,.1033561446413986,-.004469702938813581,-.01904362338576933,-.038539230833867344,.05962320530191288,-.02837250486063366,-.029359754569747713,.0008751651167976204,-.06591807220345962,-.06935624266520128,.023580387356890727,.021727207917053997,.0395706064528708,-.029876932333496215,.03870634021722194,.054322914583595866,-.04361035086891106,-.014678116576553712,-.03939690057342893,.028347288864635375,.13841137622066219,-.09066089747647116,.036895873473620874,-.03722916214694882,-.009894930351075984,-.0452390438366378,-.027744940547884053,.04194009544497118,.01055398542008456,-.12123151432640322,-.008749343949550598,-.022343273408815235,-.036722825249752025,-.07423504949617987,.13502817700337175,.046152107059304906,-.0008971308328727529,.05590475965294445,.07280055024298283,-.014134363015890009,.047445934632441455,.08585904743319968,.05507048598685206,.022278702781022022,.06417229339280382,-.07076569906072622],[.11799509004720471,.07821040962176024,.1281616951498617,-.020597034003169923,.014336534229225872,.11621450358247642,.08905643393668677,.05443846379640299,.040501447910613234,.07708874490871268,-.1658906017777812,.09832791591756529,-.02810333763323619,-.02658838870983915,.02405475335525964,.07281433646587437,-.012893740245567331,.08129422425099614,-.01963885112438346,-.05946135547166009,-.07071909172253173,-.1275944247901823,.02999311492449748,.001969744529841,.026356695570939392,.07745617703691782,-.006579905739970027,.034984205817837566,-.011141116727752032,.03720594351235931,-.07804833218835576,-.04293728091952059,-.127535289131475,.02845913050306173,-.02514121956008758,.03211084759065019,.04295176152957764,.11294381552310545,.02004775184404517,.05151590030912234,-.235725744910211,-.0723083822615434,-.019056219840507427,.003032114250306528,.09697112519659604,.07580971830316449,.1171582304881571,.10956914475118423,-.002478119754026231,-.06415838742812259,-.26848100360863303,-.05975449894120426,.061910526180559394,-.021664296531182625,.0861100259271432,.05323351302011188,.1717544124205841,.028047054519386466,-.08590298082104386,-.3361141075282763,-.2814411422220313,-.008033032578359078,.10513880861366756,-.016382627034826625,.06894681074416012,.03299796127286976,-.2575094211066173,-.14536580095096197,-.35542177348703685,-.31543540234741724,-.015389034147835323,.25815532917511536,.08960742973783267,.024873996600298487,.06881003961835548,.03489017570215826,.009440239145994206,-.3317042945602514,-.08402150713002367,.050999687890954576,.11407450625706317,.12380980581221895,.0615416857398525,.02453750806553323,-.05141269110053853,-.03796914500894999,-.08315921986961804,.06097402386871387,-.06968263999399987,.013136896914555662,.05433543614442471,.08637574960433275,.02576801827516423,-.03028474620608318,.004674564793187563,.014048250096520054,.0039043180440717223,-.013243528792716869,-.010234982174629259,-.03434871862675892,.08930669941750319,.023672596441143168,-.07406388091432402,-.03941626691223293,-.051467563793051355,.006651409176777756,-.00560210732348132,.037530284479276185,.022917723699947115,-.028514057580272867,.047001295013920974,.011663892903344658,.03157742912810527,.03674321708145567,.00016789538350847621,-.032412649376776737,.06117671525999013,-.014965782274795558,.027963582472569012,.04959601543222854,.01749369590499883],[.09511182747695554,-.06159820603503502,-.027848508902761582,.1628509117750848,.011485186070697095,.08822763141834358,.03347684156076733,.21311907036597436,.12562992528833603,.005658534272657195,-.1966929150915634,.12201627871631479,.0650038757477849,-.06463757847623203,.007601127043420197,-.014992832356838792,-.01371412582796748,.06518983519203567,.06050177288708594,-.007320488021864191,-.1583739057936029,-.11374672007199678,-.011219765388015224,-.037241451866588046,-.003534620740694161,.01418414744662963,-.018804529282363244,.0022002993190636394,.08630412389588042,.050730302973426275,-.19347784099407583,-.024336852899701306,-.022104084039211852,.11856239536141804,-.0040746848315117296,-.02163636804096198,.032834767679033816,.0800344731484097,.18177097586869298,.04019529190670533,-.2702679651504349,-.046764731646186594,.008852085437052834,-.009539810787766306,.07383822425025457,.0022341455913789526,.08094684201408663,.06491115331910723,.06885287564917604,.05292714860543306,-.410107120913947,-.0033883005740702465,-.07662046460696448,.02802671910476224,.076992030561193,.13499559219777985,.0010835539682531592,-.009452155890097347,.1189809113716918,-.10886395857171732,-.3183906210009257,-.07953657581636578,.08803540022726711,-.01994821470243107,.05503118151079713,.01735589174740365,.11548823748390151,.04731880261354447,.0035588736908875526,-.19090242902977161,-.16923224535916537,-.10343904409632039,.11611444215342794,.030139907826970232,.09203792773944927,-.0005281111654557753,-.0198996720404131,.11041139740159193,-.11354626622456132,-.13266289678027732,-.1682771948622956,-.03667619558596544,.07817736675850409,.06504914695853675,.06126589575010016,-.045421314698528795,.038673845042327876,.026641279640920345,-.10482185618696178,-.10700981328292422,-.06525874643904839,.10279723823243007,.025140628570866255,.07899525265930846,.05558624922961755,-.0282367233747758,-.0025877363105662674,.03312745537775298,-.028093023704546808,-.19114920828266518,-.0843724450404052,.03275218120073499,.04457342148390127,.07856958017781845,-.07616797315805927,-.011917584687660975,.03886281331675661,-.044585012472417355,-.041774790744191534,.06654393572162462,-.20856381862218065,.1683937797503331,.028096195344995425,.02974664466893967,-.028107306876337092,.040206628818593826,-.005022332794664606,.06168318096730564,.11123093181504413,.0025290457228258033,-.02120297614281566],[.09043563503585106,-.04229707907295113,.07943640034074831,.03842552427230031,.018479439174666504,.1518877271211962,.24325152032590197,.1180155679366982,-.0801567958141105,-.21178228375212024,-.1321898119943531,.01847519834858842,.09201844332333244,-.050722043815425485,-.06837456067208372,-.01537540593449041,.031479819423878536,.08735840730776676,-.06835423776229127,-.1466417272423975,-.00015826019866193447,.01568223599310714,.05170912892782582,.008747090174751185,-.08297559742427506,.06105929068549017,.055712846563533064,.11256404620171304,.12009580657518015,-.2412015915622755,-.014823455006292133,-.021320510868446968,-.006482678969039604,.011517249723710349,-.002937897815077306,-.03651189081303338,.040278214553535516,.0514440140450457,.17560605653482164,-.1655984657580802,-.17723807338794942,.06664090603454581,.02544398237775264,.01188465218452904,.0289513499031155,-.062269615752451546,.008151008187768163,.07413923996606689,.15951734948521942,-.023426085135995006,-.3978217497642247,-.10908536196954385,.198107190750192,-.03969354994135716,.07471723651890819,.06765746234109257,.0023721387419759488,.05010623382157028,.11669499140233328,.10445484529679147,-.18066291770941748,-.13732855962266888,.12305831238941373,.037248666546407946,.04039521027170892,-.013511371889906032,-.012463530395042041,-.011253154667815578,.05726371459440446,.06412373474273139,-.18290915356692017,-.2869372990564419,.16662290255364237,.052133698720201724,-.03451997264628831,-.0020692840094172008,.06741251393032432,.06937855150391262,.01734148416121529,.11249597819545545,-.12114447333731211,-.16394194327719122,.04261853427181071,.00824423904044877,.03221154330120412,.0013431370481797045,.05979357567988297,-.04185352167064698,.16141583247142297,.025290287768054538,-.09277195016263434,-.2215981176835778,-.017539993864623925,.04468468836207484,.07652630029505583,.056281907644482626,-.03832256952568285,-.024136451744282625,-.06372718452176626,.1019524390722753,-.11143716683774609,-.13769182869235727,.05085564633400147,.0118757042451966,.07578815217910018,-.07629006882364105,-.0814113136736546,.07294179897639616,.06876848468158583,-.033997564379039544,-.16790192551365551,-.13094257760158287,.030092743795544198,-.020741964391416696,.00030251423268644675,.0886427375796117,.052492146460725884,.08700777751717687,.024692689071073824,-.11263451468661019,.07566395763319325],[.10661930608242243,-.024041018022432886,.023732105856747315,.012547179712792927,.06620015268771856,.07288083873685963,.141959809755441,-.1884630302757157,-.10001494467301893,-.03039936470744807,.006508432539056433,.03539598055038491,-.016756476798346576,.0399634135437803,-.03292076128242971,-.005227900049309453,.1455513515779632,-.045218123785947764,-.15712918904629083,.019388410485656385,.06907342606271524,-.0298852890481313,-.013668142441217765,.03550729334105425,-.0339053532299763,-.06639806441685941,.06936725822695652,.09906846780184428,-.1617694660299022,-.04974368531705499,.04941732724894762,.11584329961758463,-.009976533533724782,-.005894615309377543,.024852267791530103,-.022953834411929233,.03536477637026525,.07091098453159729,.16506591436250806,-.20260600332750361,.004082260035043597,-.020994635237100143,-.01738045300747007,-.0681694778746119,-.016583306399167802,.01633535683844098,.017414685172079863,-.06550954477620465,.17533271724699692,-.07779762905043745,-.16426179882147435,.06799082437012988,.015164258343913037,.007850917795739223,.023952622885856464,-.022724061899056167,.006468972562307412,-.004686262441803951,.023956271557396727,.17796984486026562,-.14583559757339518,-.06427923090509419,.007285889169011656,.10176352460866914,-.05375838816707103,.031829796138471395,-.006931087788905416,.011744209650540821,-.022880287482633932,.06170435943557881,.07377432172162823,-.20953311948246117,.0228569133898398,.05472937737865659,-.019111901041743054,-.03021023886313212,.003031327469750489,.015874354673913807,-.006452292082758354,-.029379891777454897,.17844565039391092,-.07110452708435416,-.12962834428996683,.07450443681000475,.028226182768918535,.028593401178049288,-.01959147691077351,.02627469148789329,.04932937679184403,-.002525771203732069,.01518419078458555,.07937762244019535,-.19505648192438618,-.03458185384929216,.03928442530245542,-.06096185307071548,.03210462198422711,.001008720871932746,-.0029091919090189974,.001344468156507149,.005023713003350715,.10378546719878355,.022547607122337512,-.11488746863511244,-.022120532171003134,.04365532771842716,.006775696120825271,.025228229845891133,-.019273769704258592,.021906840282590274,.07611102221477332,.017667767612816868,-.01550884847076102,-.23798198014252242,-.10029292828221784,.06896242747818639,-.00958082155355134,.07180806987187889,.009692454495817494,.008957116977043107,-.008277462473503971],[.1471154036752462,.04870375978312018,.03828157145025493,.07333208261344225,.09260331466273668,-.0694062794405356,-.18039118017356837,.03046188792697367,-.07652780153927276,-.028459829410684742,.0039885048607745666,.09153106699799837,-.09704741860389973,-.021416261913473872,.022880799394652915,.11630110494121575,-.1109134904433731,.005260123748833667,-.0013446292981080382,.019772833215237998,-.01068052654249596,.08790171771830792,-.006232776333750578,-.022953022264458,-.011871195380737234,.005762706715319532,.09058996390258162,-.0325911561965106,-.028720174599054245,.018764947431906404,.03419839806504654,.09248312592865889,-.03903575783794387,.04606097164647015,-.031919717673297834,.0359756576146678,-.021429646453529204,.08731212903003346,-.10752464144662353,.00152080949832821,.010463878802001378,.01772082101834206,-.05437049272297912,-.04194883289533528,.025352619756942793,-.033214062148915535,-.021243138027047942,-.0008823990590214881,.12798500264531565,-.14587827997097436,.004915455687989331,.1154467113814605,.02439416473282259,.02683709160566132,-.007026041908772006,-.020081222854955234,.023704875110253917,.02295042461409627,-.05338528177481898,.0831341083498527,-.19190518676745988,.028255792687062964,.051622701485504116,.026882922200025916,.008377616973125737,-.005670991108533512,-.015187911842930016,-.052821700067161415,.00390644247145519,.005281151829406819,.10527786608533028,-.15535307659177727,.012627301510895916,.03327206086519928,-.016015509511655836,.04732339385165741,.02967603368046102,.06267237670914183,.020359709219910163,-.05632841301488273,.0620322629350282,.13944415500977614,-.1628837619018858,-.06273619582859068,.008907350651879399,-.0034474543722587785,-.01618817237363423,-.05835778037156301,-.038566049097796054,-.007742247801509866,-.04525485397522294,.13886799518652831,.08480154460363377,-.19493114682149953,.06796205402333232,-.03966925365228234,-.042999032230963616,.05692279356728236,.021310369562604587,.02365210042359392,.005385039849544027,-.03187215578986556,.12124236413591115,-.0967183304019613,-.09464086971309904,.0500533099786503,-.04109568378358891,.06766934251303211,-.013020222193800675,-.017936312558531065,.03088458798641326,.01794055692503145,.1231815166762023,.08261243140085138,-.19694230673329102,-.08458714194399125,-.003658775266082319,.04619076988589604,-.015214414660308498,-.037796750375678645,-.037660099586230414],[.028789729303638767,.024918790237205758,.04618374488536684,.11406524547975325,.12089401164677463,-.33167640134016596,-.3019921406198615,.07550502772956444,.015980848677207844,-.03024616910429527,.07077779981499352,.0217051545082647,-.014784416452853898,-.09279738694628449,.07338712132904485,.21513353226194643,-.13135516496728,-.041009990688083156,.0027232866435380892,.10443594986053156,.01923470231389363,.02666839309457343,.07745434217814501,.03770465398827287,.02834589176207839,-.009978163134861707,.1639247590037968,-.12998366709084602,-.16954434602341487,.044201694038575996,.022535303634435802,-.08057008558198017,.02832273196113292,.030852307058754604,-.05728126290696384,-.03064229252466788,.027439907981706396,.19418932496000404,-.21394127367168303,-.10822827097568048,.07877628685823149,-.05472648405401626,-.0018935512700742757,.02755405503595884,.12724208320232813,-.05340181008736572,.03257936953505483,-.005366876389614403,.14925943338428535,-.15555203727220704,.007001480168193544,.04759665424917628,.1576250635167004,-.0017752319114590492,-.07847953723896937,.0473805967808605,-.05401735337902787,-.01080960218579173,.031689669706736825,.23862777088364684,-.17967729863408127,-.0025414623844454364,-.004492274547398853,-.033450167802196534,.07325147963052886,-.0025312860424687696,.04727033427370148,-.018763729160332636,-.08570708165879015,.03745633447412122,.24243173611028618,-.2540866535861975,.04329414106499292,.04014814340000768,.013087435326473265,-.01985332459618848,-.02322582618398012,.03017700297747758,.030922203127136713,-.04095285821911897,-.005933061506276691,.059823934711038376,-.22840162828405616,.05383586489573299,.039215482051845246,-.019168216146914205,.036601452638986925,.007121698155200182,.005519491684324002,.017118320543367746,-.010329430802956993,.022891605120926584,.10730721508339976,-.08107168941575164,-.05273116873786587,.020938629685354523,.027472939746776587,.008732138872189002,-.0119734318888386,.029541130454324258,.02543753191678985,-.0032417425087455515,.09216900132169707,-.06348471226183452,-.08486420181923614,-.005545540001265031,.047829727088973206,-.03872852314389602,.02165612388923753,-.04840402618833343,.0811061440872816,-.050252564268459365,.06253850150864079,.050008949642628864,-.06683406976276449,-.22862797363149073,.13880779851328123,.0819568934706139,-.03653428459406832,-.0197239565455885,.07425296558847368],[.08097454476787322,.05652987009549951,.0325475746002,.10152684966806072,.0464353057497012,-.21467483931903908,-.20894615765238955,-.014892577371206056,.020894015871834565,-.0067217043883879,.03525206208069309,-.0060354856627079095,-.027461302429899262,.010095861403046108,.05459236563694944,.16828861382181534,-.17463234553413226,.021867928311703422,-.04139614121234397,.019379712333095322,.012675043495296218,-.02769514972624032,-.04124356774303546,.016051533116298963,-.00101868400485787,.1443779580581858,.07840763971617284,-.21215391984114734,-.05768089573932096,.12664817413140378,-.12395328524150205,.07177306687717147,.007574115007237647,-.05186632546637224,.03844472826365078,-.11281826148125848,-.013662478929553454,.21924860974778201,-.14332413200544142,-.054997300283757516,.0029602719156689994,.047502977291317666,-.028485684862829264,.020466736113513295,-.10612328436560343,.011155779036764471,.013002308851003064,.023295819752587626,.26377227907343925,-.2593114787690108,-.08109145681460468,-.0003967438491567221,.042663298620291695,-.002947897600341226,-.02670641642999412,-.08931025185163168,-.005043909355646095,-.005502048300267223,-.04536679903201592,.23013430030607201,-.09011555355216193,-.21358662268181244,.06901078184379858,.01987760740252234,.0044608961159714605,.029591032895087147,-.03501687061020328,-.016930134483468168,-.028665218589185693,-.01412651469531108,.2322333547477818,.02002227602869769,-.2510070762993298,.08930726728169826,-.007704470738758448,.033183418337549606,.009776425117414306,.034273315295213935,.020164835552348936,-.01004293041366619,.008413773164709273,.23502650629556968,-.024429730500986124,-.1683160553754982,.0005290142948826404,-.023487633169125,.096815945866332,-.03617787949756057,.002670053453748697,.0060485344731694285,-.03294986612777788,-.029843164527927693,.14655979582549006,.0353911847412616,-.20847127037801366,-.05789190603857196,-.01027014008034767,.07653773694218623,.08278152241511945,.11258631635960367,-.01659949953591877,-.0939475830037867,-.02515826814708777,.13710963679628882,.1328515249193337,-.22309506076529734,-.12553570046740603,.0251101088832225,-.03021547801359524,-.01174868668974658,.14400425060338853,.04316351632896839,.08594108251756169,.03518474139012809,.17622159819914116,.19444104428116626,-.23633459893577083,-.07738918159815503,.01463895746781499,.022800332745270047,.08354573665288247],[.12261253014406985,.16705127800103603,.19069455483447878,.06420078538135668,-.00016272403782892353,-.06594284936202306,-.007935106047411558,-.057893265858712836,-.05400622028081925,-.10458693453007292,-.0541799679401193,.06698967860824229,-.09921985327259494,.062446370884785274,.09094500180354774,.028277578410574628,-.04706939185341526,-.00715103160335491,-.050252538655332246,-.01470682832330765,.0954797205454355,-.11061849427089886,-.14255959604920565,.02685876773169789,-.1946544063779132,.18484819329409546,.17890314023634024,.15499366437705026,-.02824153524614157,.04479597904441586,-.05844408099644072,.013625007131520706,-.07969283436026622,-.11450496688056046,-.12377645767247314,-.06590643546844899,-.15742481688127266,.1298542504205754,.20266035853202718,.038497383031025165,-.025653639466894,.07572582376521164,-.022083431516520723,-.08548666750395979,.03208052290688007,-.1647946456821573,-.22037943812265476,-.2229737334363267,-.3806112513021312,.12775872709984104,.31739568607954666,-.01583423996906068,.055459428402900815,.011929160033288685,.02419312724618705,.0909706152760127,.16123203632279148,.008911780115480258,-.017294928512088706,-.3585408236670206,-.48144436153782677,.033786213483589664,.1209940431097762,-.022527387589338276,.049459009623695566,-.029490765269415273,.25612944261482823,.11469128278773146,.1280808496538225,.11403331019353928,.3050689704613208,-.19904848217033866,-.20053793259626246,.03964120520327791,-.04376670404571352,.033609985206833295,.00989966406617964,.11272141584817373,.18547440193507447,.1524434424661974,.06114521088463705,.11826241926353079,.12074606754768391,-.019667238146597897,-.00048386258516668057,-.12175688660479972,.036172066069231526,-.11868521523662726,-.1250203703417119,.03590491922718671,.017839906841583555,.060859449561677506,.09635166317000958,-.04921249262557434,-.04537260738200266,-.05589734571682231,-.0023764214791030455,-.03838286527828639,.006411603378155321,-.17558791205718122,.0023250224817987636,-.05172725980261646,-.057790529308374375,.013791061402471952,.13644846669520244,-.010155313334871414,-.017625717203356758,.07365290214345152,.0006932854524008755,-.050008478647772345,-.3192788812600195,-.18353351499079812,-.08553823582354872,-.07309629001232881,.0901901782107604,.10660823241153998,.09035141763949854,.132917195679079,-.01185735726791673,.052935295307996386,.043012618340511746],[.0636870265598327,-.02747449334477116,.04079252412326359,.03394429370263362,.06749399659832274,-.08420299053786681,-.024906649626728283,.00915836869445534,-.06882017046042568,.0031107283830948407,-.09710858504912417,.11878373624948577,.03710017079293685,-.0894027100464124,.021829275829537725,.05069263318004659,.012340313923680318,-.02368578576938657,-.026839662252448132,.034846261621930025,-.016166129228329065,-.02786495830089994,.12115538210609175,.0037368644565901332,.13531841970369599,.021592046315438054,.01817100573094571,.015072771881264005,.07040088369444276,.0022893852554199817,-.038531873505113653,.07341259725477861,-.029637114380846583,.14796659731395348,.12294211400056784,.06835532178907966,.1684693398714534,.09208858358733514,.124710416844108,.06941030055801004,.002828209679920146,.028941147392732833,-.08240586386178332,-.09934010666270433,-.0023105045076858566,-.044477583601388274,.0008809594027263945,-.08509910778848345,-.006458648569850088,-.04429511418026441,.10095939402980549,.1485911432241273,.14469873810179945,.07867563696833521,.04110277787821804,-.185748731574369,-.17064830498300138,-.17155221512879462,-.25171330168462724,-.27337273571997955,-.21265235556569007,-.17172557194975863,.02752712495534959,.05618012242699108,.12158172746105769,.0793384866287001,-.12195189294100098,-.13969446903752442,-.0265722227610123,-.0741704803065521,-.145127075010832,-.11500093509170173,-.18278877520622416,-.24714583432028586,-.1374776022980368,-.06839261036959236,.09867159287027971,-.1674030675690175,.07527407612466389,-.0044961465547186386,.13260037497576577,.3123405549781268,.15517911386484973,.06645992820391539,-.015467888667656748,-.030267329366836557,-.05625951840729994,-.03821591469125371,.06712871954308432,.12318688834042112,.18468566964642463,.0865250012197846,.09578353948499435,.1593076190452768,.07562987308980218,.11756704875720572,-.0760161520649867,-.011817169363246532,-.05195737709430641,.17488796559917713,.14148464642191833,.0869568383172606,.08105847566397013,.04695877234878462,.04918174254075236,.003410992382455305,.01558094374411114,.02651508429838243,-.06287888673146473,-.056347428448159036,-.09378127446608192,-.2396439753724413,-.13258713878159228,-.08436585933662782,-.12790680365138707,-.07008370693809016,-.04496190763532695,.04925129846530313,.07244661869675435,-.016196819754861112,.10029423625804029],[.022794829328282723,.03185540222137828,.02436717299490787,-.08829056624608388,.07232262276136471,-.06292516861381596,-.004086146110761454,-7972988029088246e-20,.01396609724411256,-.0251310357298712,.017075722683559433,.043144050114759525,-.07779117219058024,.048533511736318036,.007217025612539632,-.0354751368789569,.03569176722755009,-.005375235042171175,.04305370316223915,.03642594292131633,.026331797944731436,.018922402485978082,.0344245723793809,-.0433065305205069,-.02376931591851794,.0809939677232169,.0014022744912380036,.06800816187289091,.09510458708661795,.10798396936955548,.024411086728309606,.04370802516100046,.05651039482804686,.03801298940438935,-.016918964127942582,.1307634062004953,.11446285199173112,.2123910909324717,.28795590334995447,.0926874508077318,.09676400883214167,.07011596892193131,.04694467724843658,-.02810952172495436,.1864395624402158,.07787071989570529,.11792219460655051,-.03560826755933394,-.03664881215874992,-.13441333664206742,-.1209205303400708,-.1562438512284114,-.17025727483799705,-.12517931808717464,-.14934420137275992,.15932332483022202,.04839021776339017,-.10847969953324497,-.12255999835004713,-.19725754430522846,-.15715530383375914,-.21752678931536223,-.20062628687872636,-.09226733990822335,-.02057347231288091,-.07163667099809229,.06339759934382078,-.10020592169765151,-.1558036149028662,-.14943697528943115,-.11920849551682298,-.08120227653725197,-.11695355604037566,-.006728370826129856,-.04683793895431371,-.0077863170130979195,.019980965641957497,-.121667094665772,-.11522589823910821,-.05747177610963532,-.05222910064785673,-.04689107902121323,.06157405580787187,.11811240080682403,.17401725345189034,.1337150650275799,.1927256229810148,.13837697707498475,-.04368248952610823,-.035940773077983296,.011031099888345858,.06603510802719832,.16273538350576014,.1001587158991207,.15018677215060725,.05156079973064387,.05840588957394238,.020232732914280432,.08034215705932544,-.06688430472152501,.0430917720201435,.061075670741261745,.043764943962592874,.03137922924483363,-.005463533366559248,.039411450527978564,-.017169301013184327,-.027826140912018828,-.004714899656728756,.0361035243729722,.05466723031402954,.04623956359132372,-.04545606793086849,.04940225271078921,-.04766846057913162,-.014224514341087915,-.05950947149587994,-.13173838602104682,-.010384251552911242,-.08781221112410761,-.07760331144516386],[-.03235599468881076,.018326722847476676,.017295570021311088,-.027670634962396815,-.007680939104993054,-.04137668585653098,-.01506163061039549,-.04378113665897382,.03647714971239879,.044228566218286886,.18106239449231315,.042891343822209826,-.02085324572429434,-.024082163468429868,.041552139122004575,-.014678545508214125,-.04084197637584003,.01743202169508909,.0070216535002669556,.12929994168147696,.15511189221305455,.24789881463360725,.01524433890020907,-.016082932861742782,-.051589389728025764,-.09248737426657166,.04574401673887636,.05751681891908622,.16869815200400168,.2635471084233346,.13879401206280972,.1425191292736655,-.07845550913751209,.0045617718808213525,-.04996569794639541,.08036867162942538,.05014678092238277,.06747673498101589,.13151901964758053,.16708907133321474,.014140597465528995,-.09537822385677033,-.20288372470514504,-.39934020254115926,.01878272803339666,.055848444235998176,-.005273028114115508,.09488362821079908,.0926620841901206,.02634239108860291,-.08683895061096016,-.21345767462167456,-.282107822115785,-.14895903217754436,-.15887716612865338,.014524384805330928,.0641050616596199,.015209021241474052,.09483634647478044,.056562751972782294,-.16636322513631874,-.241320708765963,-.2596236883574559,-.1398205940714011,-.15531689505376495,.011694908155279474,.03201061104057169,-.037560894238744175,.06660778747741622,-.0076642057689953885,-.04070977708688811,-.04226030127644731,-.09001186030957144,.06926683868168232,.15114898488461287,.15845318802936526,.1565353536374282,.05796322755853696,-.03160324201159791,-.0055733045265627945,-.06334520571126113,.014274572871990451,.03168059960306968,.03982017671620115,.09341585936541662,.11919257043750534,.03989717150118903,.1715005214515096,.0032916843093048626,.004484666942523072,-.021098541490893137,.02580972076749155,-.13673281369087914,-12468117886521579e-21,.04530363098145215,-.0526550700395952,.020909495487494364,.08478967987071337,-.06333911092467263,.09137694505686653,.07252165751693404,-.07920992614819855,-.06729398745387948,-.04390991712744949,.029396455943145994,.023947405883684936,.0171670258216942,.030553476010320116,-.0586216899830546,-.00984268569256612,.20196311694537442,-.023668678155415387,-.014001946149787309,-.03728327654318217,-.023078128502029227,.015589706964187003,-.013168968136987605,-.031499036112030365,-.03978623603377021,.0545163256041528,-.04051296895686381],[-.11874501434881572,-.08229285106151511,-.0956081678686052,-.02057786834221975,-.05184628950761827,-.010859373167837721,-.022716678939708967,.12820642967693277,.20208152628630544,.10326830535107219,.19572108975580454,.018529266875907807,-.06234376403958489,.03617672535394453,.04106993308366061,.007976201268774658,-.10314299674810966,.006495517179795268,.12398900983956046,.024168115641601748,.030884610087337075,-.07499913799626025,-.04039994706996733,-.02634834152878826,-.0040063358136547406,-.0982142012530413,-.03343598299911335,.11941221649994889,.2555558860547529,.03896020421376146,-.07260447413235296,-.08030629503994723,-.10380646122757918,-.05732049324245034,.015515746045367804,.06255592200477092,-.07382948751156268,.09234710762260769,.19891060046749282,.1697336598168339,-.044617838703860296,-.17458925689074178,-.16855591416735904,-.12959176095156721,.0028653211948725388,.039281815318144675,.05181104086434815,.054229861553504496,.13870864137978747,.27288253125832607,-.3143878348089388,-.4393019728526426,-.1406383436455399,-.11423051269906785,.04779660456302437,-.06506150510615961,-.004260423637650848,.02946332359287078,.025104961380266577,.14743399932390186,-.34597564760602995,-.4201722978505261,.0350728315572825,.07959646999214702,.13322835735966732,.13339746737800906,-.0619576139450089,.06892042530749935,-.03853620657347431,.04721526298898002,-.1433449789679961,-.21161459673878405,.14176441081563174,.17098183292990443,.14174756095000518,.037859045933541086,.3108572822718966,-.02922935514410599,.015150100201128183,.034324197511492696,-.011781519634235918,-.07739711582860612,.0008248139395220372,.04253496183022143,.04985424198595359,.13020790077736055,.20732411001715473,.07004194288134588,-.03702686021725021,-.031791667690004716,-.06480616459090541,-.08258662171950007,-.07437530116242388,.01385894189294383,.15057409353019663,.13055028224014828,.023193912685637932,-.0793709118644385,-.07674722077519751,-.05651538715616186,.07066301035783962,-.08298069385057515,.03859091949287638,.03688503261834894,.10304253122200434,.02858154892479417,-.1138945464654084,-.023276097872029958,-.02020813146390732,-.14669512203229218,.02373056640770148,-.018262941034164024,.11113049123798203,.017809780077411436,.20203876814616534,.050784801616453046,.06146956758956332,-.007550751209127307,.00039041405665547757,-.1472153798567385,-.36919673052117485],[-.11817248565975272,.050807995924907354,.027086462019090568,-.05832408598310841,-.06975188697206569,-.021026807770255104,-.0010775384566174273,.07435038493842659,-.008399653634296178,.024897232303854835,.08743561284106252,-.01909898532346485,-.04609789190069946,-.03978145183433568,.008889473198062846,.007556922405348734,-.019310705820979837,.05536781248319076,.044255697213517686,.003269187287821218,-.010373408718694646,.07260112152530654,-.008100354989332079,-.024375359119167946,-.005175740470757712,-.007608303655937336,-.03860774568782323,.09247837502307099,.00029773934680776826,.041278394763053186,.08171588879027601,.024739987393328,.18485522219427483,-.0256447127811721,-.025676231567332224,-.06974714637606025,.054381153884765894,.049824898758326436,.13026732540299155,.17109724133509682,.059607917528576915,.0898551064946915,.09543727716276107,.1587642227085923,-.05913375761020232,.09097655659151871,.09510881397945067,.11556486887071599,.17970536904884052,.033055045328156785,-.035525492509829046,-.10877929753051407,-.05079396460228644,-.07639132244393337,-.05675798967236886,.1347731234822974,.12869357538617032,.13013531388087007,.006388712212117984,-.08972948672558663,-.31295031978607873,-.28325157301095855,-.22477218093756324,-.2145675780259611,-.13307930518541367,-.26981212419965894,.005016585566453173,-.08039808860717024,-.08521624861927016,-.18399362322745855,-.23965470437008415,-.12035412983362095,-.07698358306804472,-.018020432830199287,-.023775391914850265,-.10766179954942284,-.16700211823558328,.015040770227884616,.04251038144007874,-.1295843290841098,.029351080812140877,-.0197858882149356,.12163685368807528,.19449321821046042,.18157312421218158,.13917958348474402,.03625925982605473,-.05933035618988736,-.053816217365371406,-.05801219277539678,-.02499106046491168,-.0396560923543915,.16051410507047068,.14621181331244598,.0765292418848361,.2061768947045735,.08612988608968827,.23683312856300526,.17799588816524972,-.03156868591107587,-.011339033584039513,.007592900019644758,.036795050434868116,.033074275171315504,.02413735006868855,.025795926857207403,.01249666081014379,-.019552843326395453,.05284990813360595,.09051803542268566,-.012948046871117346,.07767191529914241,.03560950915943991,.07732824755456554,-.03709406667288549,-.004715107385355787,-.05921655824523059,-.13706040241569367,-.08499799651345004,-.2036404817250472,-.1023980466551825],[.0032466543865972697,-.005061914962075351,-.02181781055551349,.020873615011084853,-.023531149044787023,.03236851492334604,.023279668597308872,-.06907932017764035,.028858662573673435,-.02291220091069275,.03504956758463669,.021373318115011183,.0431771630216619,.031000576507821495,-.02272799250828532,-.04113033790693525,-.011956655086753407,-.0073657698466143146,.01951306245600455,.05648936597537918,-.0180069174946471,.023594044549755097,-.06097471095863413,.13275136748820646,-.02028861314235185,.0933234697534089,.183759358028883,.0933077625261312,.017002171822373846,.02900112839294272,-.032620309649792054,-.07714446633666172,-.026312985524931123,-.03637619977745446,.03001653999320339,.08106844871887645,.17134303640361637,.1454521161962567,.14411586594973091,.2508953402160685,.1895315775753576,.10961959096303461,.11868995411865033,.0976490741614215,.01753917806278653,-.1607658351969666,-.08944189051045412,-.1662700174191715,-.19945945515698124,-.12053950329957802,-.09997479716657263,-.0030787654511070864,.17592486845741467,.009404761123874367,.24137587097504254,-.10616945372175415,-.04129526390997809,-.18662857060598367,-.10128658810243146,-.15612237408478322,-.19263459821003462,-.26517496264532614,-.2107547873859761,-.15240183455933287,-.016383869315923158,.10147080642825733,.008766114310321066,.033117317571517424,.022841544673590577,-.12277060576748028,-.10456605790706747,-.04681087742708395,-.051309908127680354,-.12955150951531408,-.08588318728862879,-.21065306139257753,.06742355168622795,.07409025822200359,.08214740786947217,.09575687890732651,.12800788880163314,.19242466407747882,-.010488011809805561,.0024629531735309296,-.014172878937930886,-.06993883875353082,-.07193778845464721,-.07364200527100781,.03140427344801179,.1105219490341731,.08262921650452189,.0722242208307422,.08194142882250403,.14730626716129064,.1368836421937018,.09392788242913958,.026163487559181867,-.03421725273288698,-.09625367662647977,.052568923694275654,.058021118675766356,-.06948662344056641,.10387349833640262,.016885436566802817,.005752374710489408,-.03385762730057319,.09919971997827448,.002758758622581625,.02888308251792683,.007798772719153607,-.026129748383045506,-.10092939633783646,-.05972518155086229,-.16032203807483622,-.026295964226010465,-.08181702664666154,.019856334497422835,.011592637104098677,.03353573139538846,-.037190296797926556,.039208766263747495],[.1510565981517946,.0077705624895111625,.04042802168461637,-.0017942995443031018,-.041653694509876826,-.06859077437682252,.006298784217715708,.026863472745659034,-.032303950577093066,-.01903335591525457,.007997959526692383,.27835546979835657,.06863127471111802,.1003446445291738,.09687976547773058,-.0033597601637389563,.05432613468920053,-.05594167487163827,-.005418728541006751,-.007755238576383203,.004575943998333623,-.00017646288706738011,-.009475982818670042,.20486066918593301,.23125707799370063,.16313521549416574,.09853910567431817,-.00992570736879192,.05367234352995434,-.088888704815857,.023933003966042796,.012746466899076839,.013847645420023147,-.39203581787528585,-.21351183585569017,-.1791720163353998,.01068683181804335,.1669535291647476,.20160459511575174,.16448815854770155,.011414537180906403,-.026561248426133832,.00725645807883285,-.006350824391933685,-.1600711578168632,-.15188987832197204,-.22445870647203575,-.21974868512281032,-.14907696976575383,-.011673426129634679,.10655889056027106,.1667289488285415,.027289163008064776,-.008044546331004432,.07580932711770764,.02383788693419224,-.06031878412843887,-.15808704038753496,-.15079581692449417,-.21784799920378062,-.1841139188637343,-.034761650797478574,-.003078110011040372,.1443522382170338,.09819159401433701,.0188995113243184,.14330730009269013,.13334147887544215,.10003033854405316,-.011990871182064697,-.08118372537331713,-.09185322612857909,-.059061176343404506,-.03070241061676092,.009131792422277976,.030031451106893217,-.02916560965388293,.11124860010301604,.10478624646896353,.060405900026046816,.13088294144967497,.0944468233253217,.04688844062754824,-.09989417050319033,.00043866828312585926,-.07915901899077886,-.03095799592580474,.051180956797886826,.03653220034115198,-.026313715866520357,.0487715405583303,-.019626512408325483,.041811742473138486,.020274853199404738,-.03531125186149117,-.03570043534772557,.03777639113084559,-.015390360725990176,.10246466374888295,-.004494955166304659,.005158808183997554,.03834429330297548,.052952011747411765,-.02014141503088371,.03891118599786242,-.02580996905072971,-.054106671252965456,-.05908080867179331,-.019798138018163675,.05184924826995934,-.07376317515842332,-.03834091661300342,-.06687962421744942,-.018985614490330482,.04871042816996554,-.01980872890750089,.010561838400676829,-.02456274941936872,-.01514121795616151,-.04795833725693799,.21088916658617063],[-.1251912106765544,-.11688358418954034,-.05896115401747269,.04223537875473468,.027384636957009777,.0733784772929354,.19970246516712672,.18078323729328397,.17754089590649072,-.12635528181833747,.08320974959041295,.029824111195079443,-.0015424767491013895,-.016459376017527724,.07753356123704731,.00013267738458831377,.09375027916191704,-.04472699730074159,-.19635306229962388,-.22782377363617864,.1158824654511761,.2894446913107698,-.06877233841174803,.010802089827676834,-.007867632781378895,.07985107130712792,.21292640866678078,-.008978445378834802,-.06841787699813894,.022956354752557615,-.026211043907313703,.057828305945572214,-.07948302025407236,-.0161717155946158,.06268931522460307,-.021796237786981598,.12691374422028867,-.04752547764539633,-.04930128304103931,.0482064777494462,-.2171608705725426,.02813017983255572,.12406052692394327,-.0861311209500024,.07689460503666104,.03813505264063799,.011628762315091006,.07069849377635645,.008413533617812868,-.11267273154459259,-.3975484240537875,.07304069354916054,.16994373683501546,-.11001260539983146,-.24501206201543754,-.016540271332897986,.037588646441523585,.12220568704299391,.04683975277378849,-.19361692505980962,-.5034060728708488,-.4622460574539702,.3012728616783651,.3851257612605975,-.19298521871344812,-.5088287167621777,.0577662914811312,.0859156882107849,.0025825469644762365,-.15401989963515647,-.0810666445754652,.13998594331352224,.17360289429870265,-.008211331775624785,.03416443347671071,.033688177254881144,-.15383945741404872,-.0035717910256200143,.011347483637652627,-.017873166525061147,.03914679658772492,.1063684799467139,.07624763639976428,.13995849083497702,-.12176042704433512,-.06437548220810757,.022871601462242333,.20473954746266876,.014948129510764279,-.039363453803276216,.024752228243803808,.06253014347756412,.007827349934518012,.08753987689455507,-.03454293596457564,.0587464432839514,-.07512628597575663,.07659748512077515,.19454209279112086,.021682122234847927,-.07348869550130263,-.05808267910197129,.012328447567534092,.07603887813254051,-.03691347272445111,-.018862970847490845,-.07931652130403127,.01609398288094103,-.18419160468838913,.04922668323196122,-.06145731499091828,.0282830319555805,.10422016934925292,.018036735639772688,.06290511255874787,.07205279732777245,.01238787011781239,.09073002929031532,.1143934398810977,.10142758766032614,.19506458179923916],[-.03747154794061502,.07900305916888334,-.118094514839233,-.011575517807246187,-.04735483715894843,-.04381990508782336,-.02204068674980534,-.015582330906619458,-.060450140546324756,.005671070917878641,.08734219976791799,-.04748458685556487,.05557846862917353,.014640579783893624,.10885390788005234,.07256075044057561,.05363600621372138,-.017555923047039936,.04213350785318807,-.02906136252712694,-.12501847301134028,-.017196570903083498,-.01339795071661689,.011501218082141058,.02770235909099609,.02741155292168642,.029974564956617343,.07336426312558758,.010914273919724583,.07540989196611064,.13043893685947877,.023410994104295653,-.004825368563342529,.07497843221817937,.054355304633943134,.04204747510162269,-.0154640673353326,.022630801443203577,-.06388823754110312,-.04044630874727343,-.11272446316765139,-.07731188141641226,.01898064857748586,.07948412647314071,.042423015302388865,-.0006940351035240808,-.06922908845278616,.07743030379264013,.20473753110391857,.2871923796668266,.30503589992248753,.32550043922428146,.14073163480952872,-.015200746246803488,-.041860347134460144,.17135640555161447,.1527355824602927,.15944325028772327,-.04636067975835752,-.2227663558507864,-.343742026059417,-.3875625228553149,-.37352669157727963,-.17546418763106925,.02494184485831446,.03853348528230306,.12621571033694096,-.29897191326894157,-.47416602764115157,-.4053376998776362,-.044666674782561915,.12588265080168398,.1850321413968945,.07448172492372299,-.10021514102767744,-.3473176366872461,-.09928221388321762,-.2983750610269019,-.1866202358670671,.03565212625203349,.4013035269477947,.06080080045364062,-.020916204012535085,-.017432090909172804,.0064526884627329265,.314471233100664,.2781426659269365,-.042857339346656316,-.10711074543649843,.12304888506893627,.34204207221679617,.11781479381803128,-.09820750529246548,-.22534157766971744,-.173369554604215,.025185350745411,-.11167805937105306,.2142012132418766,-.04395005843596544,-.023906769270708315,-.06558463884581744,.0920406527523769,-.035310034547302485,-.13396895532331693,-.03899490443982933,-.12154265439434478,-.13006356630340574,-.17041731619250497,.11042010979150567,.09265124738716436,.13111238457685057,.058001891637747924,-.002652110312396515,.1572234782164298,.06607130870328556,.039488088992435756,.03927448274994905,.19071883885744992,.10773181848300134,-.02812558988695802,.05797883312162265],[.14781185661120058,-.039386331432373266,-.022921264342725164,.05388189603876585,.12598813182555718,.028202774466358597,.0346074867144123,-.04238131256263251,.03884963956920999,.03641008565585076,.16289756506012004,.08984523861558368,-.046052810070111194,-.08209578041456302,-.22396972511791116,-.11679212172424258,.10053680749504602,-.00823224882303256,-.01090733225309412,-.029537833982867273,.004945131369650824,.10219160122974023,.1866374510485118,.21337195182960642,.09692801730212781,.08222540149967027,-.042534134329079154,-.05225940644990682,-.02030912059550327,-.10672463441898887,-.08822130798732822,-.15579389025604545,.23092722621811365,-.079955537176635,-.13801119251604682,-.0569662885529685,-.28523441407005473,-.006823425984885539,.2637658797263801,.03525661052999585,-.0009694807897623753,-.13354739530762744,-.09529223469456388,.10809316225785848,-.22622473692942502,.1375096440563321,.3058868523607385,.47089738278075627,-.26225597341681434,-.2429165794956724,.22231836629884105,.09054374170971215,.0433012887700934,-.05519533311547409,.012450074560341884,-.483386622957673,-.41101568836876,.015182853563479719,.2686700361155807,-.18587591997040018,-.6574604765676167,-.3708028169924963,.26181673556057816,.20685619441423742,-.06291346653609113,-.0046315163613586535,-.3460271088384187,-.05787583147321959,-.0800736633904083,-.06073296828377071,-.06313172224047209,.33222972618047136,.1600402390728511,.08404710209986747,-.02976989350386039,.04542127487553971,.03450430416325412,.3753624233823881,.08893561816209909,.18255926007618903,.07993617252967636,.2352440711079648,.11129319261560268,.10974139035902221,-.04722071086520177,-.11616310797947724,-.06730980582471298,.03459913262322464,.23285705965606096,.1319034928296215,-.04174928439903445,-.18971912136060662,-.07031412451546298,-.04433981468312003,-.052799114165529494,-.12425748565008495,.04548785477452552,-.13703396222511421,.05917219535467702,-.05667902413997435,-.07418473669584665,-.09695247453613126,-.02183641852612041,-.06573120701236759,.021349416929545006,-.08341902593987408,.0525663677690868,-.0026602316535740966,.03873498024493624,.06817581722807808,.22646127086716095,.08289023239764355,.03539905465475633,.06732065297074195,.14239677197520148,.08513876908816612,.050369804354669645,.0010887532169456537,-.018280111009442837,-.01722592461817163,.08422037289529935],[.11800749409978381,.048641544731680905,-.10678911358350332,.005291117990921301,.23136181762806476,.17221088012028055,.17682279225882522,.20044631087373868,.05212243965219243,-.1402595079578749,.02243868573975058,-.01982804806120863,-.1373081753593374,.09257718698058398,.20995915555570394,-.16372378150074623,-.15700734079198975,-.1736927596916677,-.0580537721038506,-.0157237265316914,.01939859961370008,-.049310374137502805,-.11375225205060403,-.014247453019732223,.07073949494212364,-.0883277135102292,-.13682329114661984,-.07888847959680247,.053144758392313945,-.19437922851131084,-.0001706889902193115,.13424778030432938,.009332072526130886,-.18143139441084224,.12020647648261903,.2963908916390815,-.009097465083453715,.0398558854537292,-.08463057056034079,.03693155284069398,-.1478889489144798,.19686627422843606,.40663533420008574,-.1433628367370896,-.18437286091816663,-.0387524786508332,.29570661700880807,.05368898279511149,-.19564754353990196,-.3448638572850823,-.5012130700076909,-.40626297518108834,.13382493808540968,-.00028761919063780006,-.20091903070867112,.11021116432324056,-.18695906308384752,-.2395200513010894,-.18820014759183346,-.020408212645899093,-.10626227681963624,.10776229335456736,.19941878614236833,-.05827657288789745,.02752174113496536,.18134851852604528,.06869487900843496,.014109730230775254,.019795706580671063,-.06951944503242655,.08599870525279386,.2512168355426164,.24991886206451533,.20675478705920156,.09380246704308468,-.07150568358107444,.08395660862250853,.04266422246954499,-.04489797514980388,.0756332294513642,.18470969085810693,.09231209792140999,.1647712315503363,.0674074677084526,-.03539149215963413,-.1005117354806793,-.14948457456306743,-.0859115996358253,.11899616835413444,.02223203994893508,-.05960418036718538,-.08371413479598194,-.12267228192899818,-.07181755365520867,-.06136485403133418,-.03712235502712,-.024043277802218023,-.007718335058683745,-.027902500393156213,-.07022897684458969,.06728304821879091,-.022096929111434786,.030068653546629937,.016508794156056245,.007991022812565085,.053657963888500304,-.01697467785547141,.03788848360559102,-.10340431444912367,.0939470116916453,.17568681512805212,.05319327446333484,.08332828325168111,-.012241690018234677,.11152581385082602,8877751397590172e-20,-.005979464667969045,.07957622903533018,-.011219166299368227,.13062677267175682,.13093666750650848],[.14423093057173975,-.01008076678423761,.007377104459413508,.06526902731825053,.05584860582390246,.05236387975722907,-.022518577948855645,-.00998540544349874,.007488119357989409,-.007637027399657208,.09511536499739359,.007486862308122141,.015230162163870492,.04021789142515911,-.08536714963206432,-.17282741030837942,.011588285357803,-.05898200358863245,-.09121420159304248,-.05548553721852835,-.08505617995392528,-.012889357099271234,.08219150348451196,-.08821554146779652,-.17609926241410598,.020767875260274078,.2973162999706101,.3447305749860291,.35075038554356563,.1675765045908931,-.08431744533615992,-.08765032447768258,-.0293005697765467,.008219759797923734,-.14178517944724803,.2016378749777812,.30622658040655926,-.08983427255695514,-.3299115437753259,-.23770186950896088,.14059485558234217,.2293501884825727,-.06954897481239436,.13056609682447454,-.03149728621810852,.007927379146063895,.08481154415183993,-.2914627030183241,-.12913123455806388,.07096605105569494,-.08948667472649491,-.07685719628317632,-.03186671799932277,-.09490557138676806,-.07682123007601649,-.28837628451753605,.08779954200080047,.20019432782413554,-.17096915847133118,.015333878953658897,-.28908252284426406,-.02952668950598297,-.31385369627251253,.043040218080409316,.4557678194478584,-.1807055900807637,-.13846940283256665,.04262264840257386,.2723173783565324,-.1914801913205901,-.11016274974475865,-.1176991482916686,-.20542229438804735,-.34623488704400734,.23754568531606332,.2859997220700538,-.07796298777428269,.034879273993081605,-.026162450274433972,.12712327036253446,.14403182667963604,-.03414888705288188,-.08855082368809689,-.027745606072896507,.12772199691917124,.10001931959841266,-.18643104606782843,.041460676340255576,.05771435221180913,-.08388195420023732,-.08331277637087868,.02614741925611943,.057512048083849625,.09877685805254571,.20838336844764122,.08141626738643452,-.031359090867443505,.010864074615252003,.05416772437770708,.03633576655386271,-.03773405682796377,-.058460234722864275,-.050705505416570866,.07210000699293825,.0772373715279393,.03203418995256717,.08368828595046637,-.0187409316170321,-.06823692076172613,-.06725245236398913,.12643108826975322,.09241136185081472,-.03283218324214139,.1036074935038833,-.02064167472267718,.05039606128905021,.014052376131391174,-.02423136333623187,-.05009375566336979,.02935370249151292,.10979499165058046],[.06063756206193438,.01163357669854459,.114137229829593,.11754589579378544,.020855057347248462,.1097493044915731,-.04499029293678297,-.011032547892272426,-.053612766250269506,-.04475819760291194,-.10039035625686599,.1343544845920419,-.024159164234305225,-.08452442777970376,-.09196037551452901,.10788802496504861,.04599807823235408,.0552750050379892,.06435881986085769,.015789766512200487,.020929919215574633,.0408268323092314,.13163339908596128,.059409419123521795,-.026657113464773563,-.14316517070653423,-.105418542401858,.07323749589709133,.08243361011408763,.06259632374994317,-.003104446434026492,-.0858401391142894,-.05285515481307368,-.05803703807964217,.029721950798359945,.09266920936373313,-.14987389757269964,-.13353796595923728,.050257684298183,.014996004118443262,.11313878950895426,.052153057368792013,.010577754712894294,.013768087181216748,-.23145094612919812,-.06758686960983734,.14187556860642475,.21502139869877795,-.23699602207891432,-.28070386994651997,.02443305911955751,.017265628634335395,.017657686358856672,.026414327638663804,.08807797576864566,-.19378616438963833,-.33747330456037095,.10010384808690605,.3681340911471589,-.03425924318529136,-.5152900491931715,-.21455976987161104,-.029064252143607,.029684271548058694,.11428024956830421,.03599724323714473,-.3178054530585862,-.03893900280960352,.1708263110456912,-.01983209806788927,-.015434962482212933,.2106729777023667,-.062119854775684574,-.026936094188691473,-.05553110408369888,-.025879857930813016,-.05653702058897206,.0822515132533288,.13249378757784364,-.050895123398873254,-.023068884844874127,-.006580414354771538,-.029028619952673668,.16670678797071425,.03728723954927361,.032006611053345235,.02298554186851373,.0330979700612698,.25106958648152244,.05524767984135848,-.07842728617881933,-.06517953010256305,.001902992764642758,.015118472262848806,.03162932993377893,.0744705682056874,.032407934317240886,.033762676771467104,-.05510921371766836,.029518107237236926,-.00557251827090087,-.022571921481206444,.004978260357756517,-.03489286195148675,.03015227783836147,-.04631753619484458,.01721742444845621,-.09059543804766393,.010986708242086585,.01475361802999256,.11880942290428557,-.018853830715500133,.054570000910600755,.052880256948674695,.0833878827973407,.06829123863233161,.06359772129360039,.0518869232839437,.08308711624415947,.021602565983420394,-.059861424749677705],[.09080714473952173,.04477713049248769,-.006004236596012319,-.05036343325604714,-.038872008341752945,-.12117244583538275,.022973279126560026,-.0317124478295967,.03805414842795499,.004598740943125623,-.035659664256043694,-.035674765832077376,-.09299015020156876,-.03916261171227617,-.006904393089097821,.0138362499846926,.03066070836750659,.07054913875846983,.02941004691229679,-.012521892141359542,.051323314480405155,-.0037634551331882926,-.07001383105665589,.01086073225646847,.03272678318756453,.1374861322513778,.05818397355634958,.1375096932090067,.07872032070283921,.10378646515411444,-.02894911437094108,.06208158795328925,-.036944529962483555,.11289672176654392,.034425804553726264,.04491504898654261,-.05700718304868935,-.15438271229617534,-.08287102372873018,-.1298228276365384,-.04361166568800395,.06596435175319629,.036324136181226305,.06371398603755794,.02173517939440031,-.07825856376940868,-.03695665713662548,.1335536638973711,.2820127488291951,.3248715566879344,.3382707227204252,.1853812908283755,.07322333197701335,.019788327920499546,.13765137512483783,.07806827112667367,.08518024330180544,-.06912579487432846,-.09087857281110145,-.22904348013123638,-.33513853608255195,-.3410714482164571,-.3514787315094477,-.1429837248305727,.07534805803134563,.14776217747988318,-.0458557013057877,-.24152324430590322,-.21753420627734718,-.1309360208776029,.020511261336832037,.0976716577514131,.14601331736207362,-.12506767652167178,-.3725235767315107,-.4082390489365429,-.04590580754479254,-.1600759086755924,.07937818266133348,.3143974221346838,.19157945898080572,.02903065545276176,-.114833479865943,.0767261382297855,.3013511457136653,.27545746842581786,-.006862075032061946,-.3652247609294275,-.06701923494448854,.20620489038853418,.052499913955829466,-.1326523991171371,-.0789502460821889,-.206419805797655,-.24381499902372766,-.08679768063808978,.23653031161361043,.22019310254213031,-.036973082188424586,-.04916248284765505,.1462592159198925,.14505339243853665,-.22743035761938601,-.08206610455658943,-.12119372823467633,-.04318168254304364,-.09801604542519023,.029470016170797184,.1374726762360411,.006291702539247157,.16322306590540175,-.09136353558362603,.07328769661982434,.11422898762272718,.08521042286656524,.15331572095963925,-.07266053822766287,.20466593159451976,.026700931142256593,.03601107429783196,.07882770790371899],[.18112261990369827,.07330552477050538,.04073594357969182,-.030592173175515824,-.014723051663569992,-.009717724172896347,.12724950542153152,.03039707805193355,-.05888919817899542,-.026611166982695778,.06668104671222798,.06660808816758836,-.0719187452250616,-.008316532379624916,-.017286314033053696,.03860276428662211,.06708355106867812,-.07028210329075844,-.06969068677450957,-.025274574618584636,-.11014662057019094,.24938498020809974,.13937639935994262,-.05719784127987072,-.07333099431064974,-.1447911227660449,.052420027937541525,-.12934942016932524,.030685317385975658,.06161111711627355,-.10213214383142413,.2239301020176982,.11685706457732412,.16687464021324355,-.1111052075644686,-.17122260866286426,.05658186998329005,-.04893903568767982,.15917940910095132,.19178174933281159,-.34144279330828603,-.0002934693651933523,-.04690094735591402,-.19493783020620092,.0454123494907242,-.009503367612825525,-.02911712645509991,.04140979388731324,.23150478397061292,.05244868872817422,-.5672713598377552,.3002926921538524,.46090762088909437,.06831896235005604,-.37007579263516616,.042656412910046834,-.13943043649625064,.11478477562923234,.2674056989846191,-.10448691247946103,-.6682765409186954,-.28237532775707574,.17754279911041,.17370357234732237,-.172164890655841,-.47505336754415434,.05483627683056928,-.03016239745576678,.0684929075971628,.14670950434159008,.007173184059208887,.29965767091965445,.20250028242592366,-.1778433792734916,-.11561865754268655,-.1332395677790339,-.09722185347399298,-.028986446755459486,-.03580733604518049,-.10615355684023776,-.13901885393191493,.016240710560221847,.17310497729481505,.19618607123165227,.11531910216918494,.08586332648038018,.1662738713960034,.31073734902957373,.04635899062683328,-.006680554768541611,-.11949504899391879,.049149985727881776,-.11684899113755934,-.07762195316655388,-.15566484457471233,-.042823410792438815,-.07595852938904664,-.047231781924106236,.18266592599709178,.10710563631894213,-.03180444558515859,.06409971260243988,-.0833395715986823,.08860645005897541,-.049001943443667206,-.06079112950227804,-.01193856606819367,-.02896633660169206,-.020442949029082044,.030720122959175578,.060613751104797636,-.03989766326711776,.06370141812986851,.04736875093917328,.02939838110752288,.10605597723541271,.08701259983398457,.06714372555475887,-.01789226663164903,.06980756581123632,.20793552791413253],[-.03618525659164709,-.06842365139802556,.03394826901898129,.25798065842164275,.05575468840983275,.14928617791426527,.20629310863112724,.22367188663579815,-.04603354314311116,-.10954993360673064,.12202419922148086,.03368602518519828,-.11811717921720266,.12833540839950633,-.1289736286658285,-.05630428493998846,-.29473302723096206,-.0251960264590843,-.04980420634957777,.05295377195778636,-.06701949757192097,-.06822657644339594,-.047831454949617075,.026913257256672624,.08873411083890301,-.19263180519366901,-.011955075780035074,.08630641050648535,-.16802175795413904,-.0833792793293596,.08789596149715312,.12511813454172754,-.12767661265744493,-.21930070432606474,.4048499986447403,.2168179404643775,-.07267430101361208,-.08764912913266763,-.11089339548416925,.01529602176215343,-.11229804131529554,.29574346278635255,.08099137436155679,-.1694969856716752,-.09718111838701589,-.07648951845905894,.2409585525298908,-.24206344311267508,-.33278560146628966,-.40823989525531124,-.1698311866948436,-.11497220840475923,.28957955830284815,.028529279547082176,-.04802349179664002,.06300024473077781,-.03072187457794187,-.06696304681523214,-.01101372815939157,.07593151427854354,-.08086212076080368,-.16771239481709987,.10099670337031591,-.24229068894050565,-.3155489339818376,.03738906044904006,.15550442487747781,-.021450780534793025,.07802412591630939,.22670078648533437,.3000180336950578,.2480396752804122,.09553868166157423,-.03803456347604652,-.02863161982409773,.008302809789431043,.09655412538737305,-.09365578170734311,-.17003471525346986,-.046727860698759775,.05438730002622244,-.011590570354357996,.19038974433125128,.08009708874232974,.18123484236756301,.11932337787747498,.021024215763941437,.00924516718706997,.06740553047068025,.017941188287962664,-.040749800063489494,-.0824405264837239,-.11871195451512397,-.13318249702629348,-.05403632677909899,-.08100167732143712,-.02666368597188626,-.010406736043617935,.07620903935649641,.011611786985809086,-.005668402381206444,-.030538187745098727,.02057524731714261,.053927702112941525,.047348833795707576,-.03821865610616923,.03433663622575353,-.00018565997117961364,-.026356654841611753,.08069116291754706,.12906802891828614,.05459184679453908,.05656101126111417,.04819361188817354,-.03235204198972036,.015293367697285426,.016804531631558026,.13319266151582276,.003858408301107147,.11727652977520774,.10128996888306026],[.08703900182821628,-.08603086192239877,.02399938271861143,-.05500080253829832,-.04527545615333299,.02871882797765658,.023278548014906846,.007215412469654849,.07922698843858238,-.03263231259403387,.15267091964537238,.044269487995447235,.10051883763832034,-.11766420459825427,.06744641253041428,-.016434712072576442,.03005259848934051,.10105556654675149,-.10170349865733713,-.06647672300628357,.012013167877748929,.006246493542248601,-.05765997313132239,-.11952174430584045,-.014950531682345641,-.030954419784185765,.18711958320008767,.2158829444493494,.18760853314788856,.09582257029334881,-.0402218539555546,-.07324981058296466,.00427782188615114,.05578173796802546,.0821923573331367,-.012445928409250004,.1770510242908752,.1158017657021186,-.2410736481902913,-.08583678680040902,.1500735566893015,.2849842667051099,-.14535341708480665,.010094356111924016,.09591670670864094,-.29873458100190536,.1787464039020454,-.22302317330187477,-.1748799384747195,-.04371284561005248,-.11620374099610192,-.23806617911756578,.004300379571986694,.05421223197894738,-.11567683342313427,-.2933900664902095,.12100456390445283,.44189519506953484,-.15496760773507526,-.022722335616015554,-.21405336749991405,-.020547287844339426,-.27084401995117324,-.09504419903562081,.28060020656129225,-.27074453207286275,-.1368725199810682,.17055001589057026,.3385971361439663,-.27109736561922526,-.3558606466659258,-.2653473240178172,.08294313791592142,-.3584667824051136,.34730776588311096,.15494380599014224,-.10539865152649901,.09482805238671117,-.10941051423376011,.019908568726464734,.13261552724999176,-.04972481104338111,-.1069662016590855,-.2543870855366049,.17440858544741758,.106900230981372,-.07767114581696778,-.009371867736708964,.11752430326382256,.0257521198608271,.06802819580542684,.109859958346973,.19781198384741466,.20369617905172333,.17359025162546643,.16858127865343278,-.07158828773352177,-.02785843176203006,.02699518121637298,-.04796739911574098,-.1744826031817358,-.09643156876483198,-.07082085959804948,.12975749185900132,.10168587218941928,-.012905483555157513,-.007214488876249814,-.0763086595547202,-.07477688141721188,.049861846430829346,.13897204424792844,-.016419927285720337,.08786080203387957,-.03555942986073202,-.03426567268440027,-.04115834635724783,.11153373670141298,.021064007443562835,.06665374839578932,.03112257100450526,.21873333106656628],[.024271907098944792,.2115259074770901,.10968836638996259,.059160601041090916,-.04224950737739813,-.0874798377525959,-.010602704832708497,.08245487941116698,.12207559803506536,.17548011074082592,.04848664317003136,-.10566377044967423,.007271286441249761,.004826482494559969,-.03710832182179358,.03696918924262571,.05926595272339992,-.09112427948614352,.016031767906761155,-.026239172447726146,-.05902193542915756,-.0886727039049454,-.07726406615726103,.05627513322316084,-.05104738191599313,.02338781460654444,-.017324327411277735,.012251187743591036,.02566561133241816,-.020852848518282376,.006696834539652391,.07368626960106157,-.09990258345110824,-.12413190403188956,-.018048937015446576,-.018586297307219612,-.04479300570534413,.017307608148219817,.10244118561809155,.000327998002201714,.006467135179971887,-.1022459225049749,-.025294477732110757,-.03444156941877695,-.1278928232704679,-.022149310544806594,.014835263850125215,.12138287707221934,.03188295858123323,.032470116515611644,.009095652074956856,-.06347866160303998,.10606577340598457,-.0991694513237349,-.1638198945736264,-.14343340117378295,-.032182651726264416,-.05801804456528885,.02291614513355533,.04015014638434972,.1059135990465968,.1170336117688416,.051143184046495,.024664034757263892,.022331370571566023,-.14794372876832823,-.04622553224763706,-.05297556705197623,.01763335871577283,-.08308803979537915,.039154465132006294,.08355877555883494,.07437151644464061,-.010152289765342187,.0052220614930217485,-.09477730846615871,-.07107653498195644,-.019630080815721984,-.04040811670233907,-.04665257173207507,-.01262859087675526,.026326307291913,.057107467446696494,.09172417840424178,-.0027241597818778163,-.15413869342653225,.04417172095985869,-.037480373466733836,-.05858180541180702,-.10281951751655544,-.030064069517148434,-.030479321832951416,.09260783822417436,.04494467880990302,.04540409714496889,-.010356704162888877,.006004097299951078,-.0740531500924772,-.04177688565691491,-.0005014536555735596,-.03499091395166101,-.03612566084615568,-.04510043410920088,.02586124884961563,-.05321849606461524,.012117104458325631,.12779186353261135,-.16438404194145712,-.012740091450395306,.01918508147926716,.08477090641897354,.019614329268121566,-.03480721117425563,-.0017216001979017959,.15755321182059503,.005374991982287608,.03944387013558573,.14282549594886118,-.04793440470126041,-.10055944078648103,.08325739558742525],[-.12767186993116422,-.06241249849097049,-.09414071614574093,-.06479614654348836,-.01780983423676153,-.06909977220751642,-.023074608267024246,-.017483825565269805,-.0664528454354431,-.036871983239677726,.24167468985862534,-.043100584664250055,.08879797960904616,.07457891471218783,.041306113766767155,.04109954163943659,.054754800348057686,.0840866406961843,-.009724776925342373,-.049452947316442196,-.08113274209477493,.06480280977245492,.05833403551933676,.04885826397449831,.0030690275504097336,-.03772168814794402,.05419419343854186,.008135356718494746,.012381719155275236,-.008132915823203319,-.05345605868496609,-.0916530693946343,.06463035335955475,-.0018237773961607869,.07998316861203618,-.08516832162278348,.0788338200352338,-.03684140700570926,.14405274156018966,.015136780025423867,-.15091802612252794,-.03598558709040784,.07090091761370856,.0031644970002940084,.012721805049422611,.017055461026181423,.03574043553568611,.020664246268072436,.28800157393241543,-.04394647689774655,-.06990450386033469,-.028875975086598206,.013241447478979717,-.09393278013154133,.007354819070810997,.021222759365131662,.08867432010496162,.15572293451123756,.18553868377788824,.051415801134578276,-.3081375111639719,-.15349895484431902,.01561395969351688,.03325809279434146,.007274046671437939,.06854592169946613,.15637538018177105,.027911256742741787,.1847624277661041,.01747681129365855,-.3288251419976758,-.27338241826081056,-.08244213190925273,.04034605235864276,-.010354560475994028,.04833301714323619,.10853011009473441,.20222782945874304,.06016381619348406,-.016735356900245406,-.16834359646244612,-.29914164075483063,.034354440985680856,.045517620346114396,.02028784764878888,5420636718756616e-20,.055521485631890424,.07856131702031662,.16849991072472859,-.07018428877093495,-.07948858451510113,-.29650023726543373,.10263152418119534,.11173763966050175,.13931259707716614,.026570560269986006,.08165824214947512,.08182791954792654,.08309841695532953,.11143074354409321,-.13932942872613946,-.22917697770142686,-.06435192708336077,.16181167668638935,.2516725917047546,.04248064722329049,.08831818496302116,.10703227267716384,.09766745183982732,.24656917917661206,.0007754387716052205,-.20364545582535332,-.1289119075706024,.07437188613829426,.25015791541828036,-.0027411825679765148,-.09112970905373685,-.23136145870314523,-.30385031086279557,-.14845722077749013,-.10313261555912184],[.004730555686647375,-.025050870591785984,-.005842007282679279,.02307655688894711,-.0021831092635067884,.09320507166130654,.16891912625347902,.13474245274119315,-.019108929587973292,-.10105317234996111,.06261943633798375,.016839567168991848,.011719509323776495,-.00134875178646586,.03840722773166853,.05423056305140707,.20955349223966924,.05131056730763628,-.17892491374001546,-.15156726115951782,-.10802521892872952,.021081696304648248,.0505265958683242,.03702853564819125,.08408559663964328,.0971944530077457,.11629929727819752,.10291870790396596,-.16562571881514881,-.2921066043789103,-.05420291541114747,-.025850956821510424,.1369780722645214,-.07143272643021953,.10357501123134705,-.05826651239785307,.04189860720936701,.1230315434450864,-.1285936576462311,-.32801177977089907,-.028641152078696178,.13915118347077776,.07061244591556715,.1786319600769697,.03674048532849944,.08260422396030954,.0015218003492134188,.09369582535674857,-.11859178530895662,-.24264276329284795,-.17081519888982888,.3193726601204938,.10806272202525118,-.025075843766076897,.2890616633898619,.16912014921604904,-.005992530361836397,.11216887671301161,-.1176651180296165,-.05510479012461407,-.3507493830201991,.07552167121245068,.29101950812834954,.03292404572723242,.07392491000907583,.13285512889163054,.1103248869067967,.017465838707485977,-.008877070377960719,-.12337468108094925,-.026449945142423825,-.03257443380049248,-.17411766159108377,.27114933838313676,.1301898019063164,-.07233304955924891,-.22304228227998185,-.0049242594509487925,.062008119511538555,-.05484288082188994,-.07783669190067082,.0620964630329456,.21462918302865225,-.09288225705487943,-.2827276046512071,-.21340003804680172,-.1728612669484559,-.2332036825991265,.10997606955733633,-.0075161519634147494,-.11006988886634309,-.0034270246972780347,.0785910676375492,.1034985859689351,.2543107883765958,-.1592651072899461,-.2703360047929644,-.10635029202050295,.04893473787238945,-.021263028799828415,-.12238693572764943,.007005475481166264,-.04236502584618259,.06762340501699357,-.048466809027905976,.15102700530288016,.2213293088726995,.03973816092968011,-.08447965715835702,.05146220877494188,-7.755161048478287e-7,-.009743711957172663,-.011728655305820936,.09125484074111134,.030319653452282984,-.009868356036538815,-.004386704329111514,-.06374454349155942,.18971937116088505,.08390672246062883,.08162238154222203],[.353966373646464,.2234934652433919,.057983505942766994,-.17547583945845743,-.28193274673617186,-.03504651024167714,-.061419133419918656,.07306424533872763,.061645400882380796,.07730935757559629,.1738934451295475,.09258470374614886,-.19128325987736688,-.21873404610448355,-.15487049984698836,.14901919885041942,.20523341842652873,.08939779439350315,.029360736601431098,.18968274233971363,.06948137386920081,.22547823381719437,.09354627997783385,-.13281477240705325,-.1771612465057681,-.1334592215959362,.26005342174676893,.18501277795048918,.053589401248721524,-.047950155872760955,-.06845365886286399,.09067110082267779,.11835517359698741,.067373868734555,-.07958946496632971,.00040370973759143447,-.18012258798893063,.09018024865877883,.17515551139257118,.06670413647983608,-.32348954157841836,-.43601738248961186,-.1534376785143956,.078031085272144,.0026002087661166073,-.00683081689257263,.25009089531454276,.08659309491471537,-.2944999843548831,-.2805784904294457,-.21672085891086823,.0075953856677573595,-.05735734527500479,.0507856499257783,-.13227728339293254,.06381628014655549,-.024929518821545885,.10319690016698474,.2736185728743198,.10838211070562667,-.10088643508412568,-.3663610844763572,-.09977069874425773,.16157118049598923,.055579136554848696,-.12792118168652652,-.09778215315059746,.03895002926239646,-.011346882847028943,-.005784054092837325,.1616038060142092,.2273189551175043,.17202324199924374,.11473390762833699,-.02500974001443315,-.012532965249099831,-.1828653485672124,.005861998482054848,.08763706261945395,-.037284740577833916,-.02890657791152753,-.012640604713656682,.029752428424497962,.023715793388017523,.018978087051175017,-.06887159345950368,.06234408583728679,-.02972089599387552,-.027411765498387287,.09285676183975064,-.0170305764695348,-.04056883608692545,.028206942400903268,-.06699101433088019,.018045780660311594,.027421414987953724,.026028854880743246,-.012256884841293818,.07194600621797326,.13443066125142392,-.055826414183730286,.029494113298897784,.06766922491748559,-.09608377106190427,.02915667166871025,-.0005704450156028551,-.1012677530478366,-.02499949517149559,.11149857559031927,.0680801807269178,-.004536233801044023,-.02923546591451348,-.10839343595243112,-.03088096531015025,-.021535888254581387,.03491673509206554,-.05557277843848245,.14692935465907733,.05709297000138028,.07005377086717599,.09282952325090901],[.09030155279624164,-.03223350510005364,.0860114341421496,.05765604123897919,.08500173811685355,-.018556863703405688,.10987613215108859,.15413524848686627,.039385960963009475,.04734658874791156,.13260893050724268,.17209307394684362,.08797653562398965,.10797764580249691,.0630046346605018,-.025038437509689246,.0015666115477200454,.04229801081355139,-.010856979351061558,.03856503147764864,.09115043454113361,.07042935680799814,-.3396544044384905,-.2162661542877142,-.07979304930410006,.05248190409555156,.1173724758043013,.1235642779570921,.14985928358577055,.15132449797129932,-.02085384010086927,-.27884211234458556,-.36994374970749644,-.23348038589121675,-.35031284933769036,-.21235792854120503,-.009620330055204282,.168787422376413,.10884138052914208,.19509683780071668,-.022160352730551752,-.13795256421389535,-.3822999217754979,-.15708260361782242,.24650430788233268,.21040788017836443,.003888187609512664,-.15092402578388575,-.14972725998264072,-.2765782498853994,-.13642930996703762,-.20644056003736766,-.10322436864055039,.20311966005105042,.24971877621575894,.09878430703097159,.050021919690342045,.11216084960540927,.008212498111881836,-.15895814488393667,-.24966006782360367,-.22420253854921096,-.08186709645977171,.16097051245293995,.13084583517748466,.08977702362367761,.00955363650622601,-.045308319112909445,-.023384874480698578,.0572702815105712,.11323262469471058,.14403681369736615,.07651415697047916,.16610902479691686,.0012913967538901033,-.061224715322185846,.02333831592924522,.04630266176675936,.04650233773286035,.05308009267823177,-.022080323199307,-.016463338605887348,-.02458989511744046,.036155104538384816,.01685267226066283,.03835086922298872,-.0316232931305202,-.015008982063713011,-.002560016668288506,-.044171433583490446,.02013631082858025,.03892295204420082,.023164046669806176,.018929516041055958,.016294884187040823,-.026449976012229093,-.031755575007436365,.037952166059081735,.04783026936122837,.03908092702128371,.01265262678231073,.019181657421850795,.052408264758088366,.0677715824316517,.07108394325267388,-.03664644384012068,.13604484537303868,.010094694913875435,.020674151088393357,.050958350828004075,-.01728930686163349,-.021563726054119672,-.011484727923504814,-.07647678867464341,.002591246971674878,-.03505974264828875,.022443138066393878,-.022650773632337605,-.01342746115044742,-.08468406347695795,-.027860149727744976],[.22047100243692846,.13488498444135597,-.004531354429943388,-.027832268966114612,.003192790356583916,-.11096409714434197,-.14950903865889092,-.26496526299411616,-.004669726241513586,.18622994506205637,.4302664490904938,.083650446683214,.05711258633200342,.14220244940637913,.1016853991938502,.09773127609774497,.2161248251313766,.1544665764710919,-.13859854879935934,-.296593957844271,-.1749736404727628,.1981769863999281,.16783396706831674,.03535728114230485,-.028902513964357626,-.021290874734355772,.08722101311995752,.1695855748932285,.2927428283549552,-.06114659798081619,-.15119828846582967,-.14884448122495453,-.03918965843981135,.04540786676769229,-.07847145786098313,-.27300141965542785,-.386456981797718,-.05975952205649149,.17695994497522133,.15889943771092974,-.09004526718230733,-.0058036165937682405,-.029934384123982583,.053751431227512886,.037133238140849054,.04063469715995631,-.04801997048835674,-.2106977260916849,-.14410169096947742,-.1866709303028477,-.28265061246537715,-.00363691950510249,.2224073985185515,.03935330224080641,-.008678580780593678,-.1503774171375511,-.012859139058527952,.1563515063208134,.04229919735511681,-.2926762526373937,-.40523406706284226,.09651810449996288,.2315533468508727,.135427422332347,.01229163523628965,-.052368935922538475,-.13532074699031243,-.033103483521052836,.07332780226049335,.04465702260382873,.08615140353256832,.2738534610945499,.1626748458095355,.0615257386308546,-.019745008995468723,.10503228658291718,-.019420795585633283,-.10476767983876313,-.005174830751616261,-.06961208659767662,.013174971860819291,.0808472332726217,.06460137356274206,-.021748261542462316,-.009428880981830558,-.01628181963249114,-.03634446590498919,.03045941582072914,.056433611785583565,.11018103278275186,-.043666018041548925,-.004255561008099956,-.07312417510494831,.029156650518305273,-.0457823133053314,-.018177965266959403,-.026033702937208858,.06274239508732427,.057057268610088474,.11269084904432485,-.014280509829636322,.06609209338269165,-.026887244247685523,.015276292205476869,.007659209356699899,-.04890289344426344,-.10791896457597597,.09321014713625528,.028852996778161395,.032763059790276036,-.01149082145704293,.17616247675226981,.10570157158224326,.021852869595400226,-.0058603280864050755,.005249575575618989,.02060800110040724,.02646204855256118,-.0826182858214727,-.07935218525069834,-.012264971540938308],[.02446321233144179,-.027351907989107187,-.0232645712975229,.11579335581687163,.1254129410075328,.07165562039677403,.05907599632212859,-.02112538385802262,-.05219027448637403,-.0033401470291263557,-.00845371711306439,.08091240385900585,-.057403073303803696,-.1672123397226157,-.1580049626202198,.06375355403319963,.195605998224537,.07141394017031064,.11891901474904588,.03716110055836719,.07708690931238334,.03586257381477892,.13139726047159417,-.11150130163799671,-.040614316851042415,-.26027911447712615,-.1892555532237831,.06608252557511399,.13273683807010106,.03484859844309304,.019787968851060656,.014094611768949439,.062232334317776306,.14344093791872772,.04285605684136319,.10733309533450026,.009822385407151364,-.23833993172951007,-.21248877298655605,.08427358488784562,.008842342714184687,.03294820774049226,.07173397245537652,.006321699992033886,.19400277202336147,.014862104507331025,.10869294352091964,.19642768165098223,.010298200186124436,-.2922629400577431,-.08001915271679619,-.013688342983296166,.11310866378660053,.012927749370945735,.15630089388412413,.2579716446934899,.006868817642695951,.15135988266283087,.20516522088286016,.2237748670112354,-.3761870680703064,-.13386204003429708,-.02044096415441802,-.013775408344473918,.04057333580258529,.05518943736730181,-.12708652754184502,-.05820955144607966,-.008442005140080477,.1752271553524188,.03337012057051414,-.18112622842082776,.03421923310848149,-.11090094662237482,-.14629941730977009,-.006969888247914585,.09479625983069603,-.23704721824065272,-.15881064516551835,-.2284109786264935,-.054433255322752165,-.1747399426720595,.06764352517562967,.08591510219394204,.06346388421453882,-.02090061906722552,-.03839507219106326,.07198571261259104,-.05257094054098344,-.09266739122762524,-.13826762537196235,-.2490025436972389,.047882934688813134,.31223581965614494,.08826603319767183,-.06280990428624039,.034915131736476576,-.06970806334741436,-.001886525747319484,.09809542003362959,-.05581304445284347,-.060679329007625814,.05606187061664643,.17983405258220592,.07431375122226905,-.027044632224345715,-.00044358577837397273,-.067457849836666,-.04545314563040439,.04296890766427394,.0793811229032145,.058880837077551956,.16904284405336217,.010963007005239452,.04232145435063103,-.071452129585916,.043645640277912456,.07705838003488835,.08022355663312197,-.01756140110947707,-.04448196078210949],[.08454947106533715,.014073183835550993,-.1230740160197884,-.06106928366319017,.030869726497065195,-.09312115465442286,-.0251680854955023,.015403998680830158,-.05696565475512205,-.1083328369385506,-.16715071572866108,.12222148379971674,.013801001029832352,-.10225459810121829,.0023687253436320416,.08739415653391681,.04921800242896775,.029333823960360647,-.0008802610574126374,.11339493779706229,.07952956423592335,.06489349179476962,.07666930748413499,-.06308226484188081,.03702333889463327,-.059661049037454804,.016600380137564735,.09131425731989115,-.011485508114042087,-.09993245361952255,.0651595327623546,-.037572072667034676,.01446335550350343,.06762197858236785,.002545821510838972,.015802700036307044,-.10993602991728399,-.06941914935714077,.021295475983666365,.060596105301526815,.026423669980028666,.009900557896967158,.06538974328391674,.043327597311754604,.009551072791873144,-.07647475518702684,-.034130568923233656,-.07509892649043061,-.049786970498281125,-.004217944264050741,.20027598699372212,-.001573509922832908,.11546201651339859,-.0078019181260197,.047540267194441585,.0074073899524036285,-.003566145239787183,.05050567924482331,.07584713312149688,-.14425580282111874,-.24270846769727125,-.04607257822500753,.24352730974674286,.10854500954947886,.02131873964668131,.182084369062658,.0704651064976845,.030956011752212256,.021330978755012248,.016480979771810872,.008619823357056008,-.2974229047198671,-.41813209224239584,-.16138204950131452,.14572029672416026,.1694280555459074,.15422865108745415,.11272693480731671,.046495243397517025,-.023984750652771926,.12619529270753593,.029740806671949657,-.012887870344092549,-.11865448348338473,-.2593300591669442,-.10806327708697712,.041596362223892985,.1802209794471923,.10169601556475943,.018289098449946008,.13183884426091172,-.004465981018493832,.052209042897218866,.1723710149631174,.1489240004557414,-.11529855402495276,-.29240160552568695,-.13273718724417694,.14348887171904712,.12546368827384355,.1196988780241929,.0966060351971295,.08392920071045752,.24096145794638008,.1815913879707431,.21525720611281124,.09481713746061823,-.17303248008130043,-.1675082459920464,.05318863681832798,-.014842848833645155,-.1326281634090825,-.22760143827483528,-.2847413352046097,-.2674956904116588,-.11356293770181579,.12871811981161485,.2094039432720809,.03806786773053737,-.18388869167744798,-.09872177272560079],[-.2933214566389058,-.07667357016545112,-.030749933623699748,.12027682321697916,.12710910454233743,.05189666199799811,.13913969924673966,.11540205050551869,-.06812516368464866,-.009023820729079299,-.2910170972813963,-.061268943436541726,-.05450635008685455,.051033716593179984,.012541368369093815,-.006469324927334021,.017938091969742803,-.054229542502671674,.011335519373694994,-.025653575674649303,.04830030462684408,-.11406149945577017,-.024236484184631396,.09793951365593359,-.04313742435573863,-.07078625551451188,-.0684965936363334,.09685754375386202,-.06143218109610647,-.03806383239276817,.05707117474284797,-.035894598788348775,.015329272078617107,.05650425000529566,-.01033577367928705,.027053972547184557,-.034952760442069394,-.012868480551019405,.07634283343591436,.04732229831998288,-.0374625981610526,-.009397945142425035,-.014027283741116559,.06456217377265523,.05372171771661644,-.06759036201053721,.0139109516369285,-.016445194379612716,-.019461686721338484,.010439817092615947,.09941813341186459,-.09200305824622829,-.01811022986050546,-.06911649213921842,.0900852700931869,.054159665897273314,-.0018642885725487952,.004059758827055469,-.0859460118760888,.1086179140161275,.027099949435567414,.09914159471687442,.0006668208775746365,-.057660689819417535,.024056864968152455,.06822140018667797,.03672191197686131,-.001371709620556029,-.028205736414335034,-.04575999931494447,.053361593077059094,.05263111499428202,.009810392941796912,-.012203636403062709,-.16438519522356373,-.021001549026839584,.10556807205560682,.13827298919396377,-.007021314516612202,-.16276133871590864,-.18906392185671284,.05990413388935295,.10225970117457966,.07403976488270332,.004285185925191032,-.1845936659626026,-.06968379491636967,.14111364483842084,.12749376377877644,-.10699417534257408,-.058972794911818865,-.027184342145305414,.09229414727274587,.04273077259891042,.029013756855529385,.09155292463404226,-.07505670968340764,-.13842728606415003,.004980535912558804,.009737695191306493,-.17762638306662676,-.053055611222672334,.005121251385045832,-.03116006824631598,.018285642027540898,-.06298941054579099,.008767262260065106,.04540640740806459,-.15525094289000227,-.1042418032870643,-.3385946149081417,.0009293137713083342,.0715237990978847,.24813145448099272,.17764819914849853,.054741690878753094,.12448607192690106,.21578173215435317,.11743015273985927,.11810059765594877,-.27756282596086734],[.23860743861101838,.03722048139150523,.031909831457287416,-.14966246683358922,-.09854985223320224,-.09509134530775376,-.03080260476878982,-.04066312098825503,.017506583940867015,.028513850752452302,.0830596487648795,.0012190679580447311,-.03322879208763989,-.06314210534576002,.03554495240244422,-.02360819898883483,.022431271094160515,-.01882760371767553,.052735695833279514,.04158050289699862,.031033870999142746,-.020524724375181047,-.0743775543137551,-.05885156877786435,-.018416900291008273,-.020185360544406894,.056555515730563666,-.0026618188225642214,.052187819479918976,.12531509017121725,.019467695962588835,.09699328063194843,.05262931447147379,-.09566833700478698,-.10779966462682439,.04701333204652823,.1288079363853076,.1184985604004099,.0469385253190267,.011551507295904942,-.10251614984375894,.03481915394565334,.08999348560140583,.11883560873126586,-.026071450999984924,-.10858930623330341,-.02899296545303913,.12481231448842042,.240071552691944,.40869246369383216,.2610526030445546,.050071705679084866,-.009946724542624241,-.032287346107244264,-.03788110437515235,-.0425405367084845,.1804739272670992,.1072902350620442,.05624496816269857,-.45229392780009436,-.8393105202937271,-.32646697573387123,.14835849608015655,.1562873589444303,.14740464227965588,.04845550723214104,.08315696608407838,.09633095557582368,-.04253114222340426,.02499194757816174,-.13244791761311936,-.16920198721111196,-.4644054259116293,-.34744594651326566,-.04738004288146105,.01476231865355268,.05673622859242153,.03669477148484114,.013278997131524375,-.05424778359736634,-.01483859686236641,.16411279929712191,.2849931014187217,.3327015399151244,.0779326456118718,-.21057989235427169,-.1802826760596537,-.2879924712549247,.04902004026647146,-.03705750354431878,.005205481454092546,-.01712557992945455,-.00346994888954498,.11284391028265023,.050041748407580855,.039230018094625674,.08377861787041321,.0301096552457792,-.10733376231898197,.052780693840456264,.030825522124256793,.04821793526249081,-1217969571825489e-20,.037877834340168115,-.1130077331768389,.025972330279050104,-.040361720693582716,.06066255131600193,-.002917558867538264,.019233415533092907,-.023247268944077137,-.02426803365936525,-.04805095714874434,-.03910051253226012,.05572428616165724,.01959390543904424,.0019309926921863563,.05287495509962646,.11053404299243735,.059716361896183456,.06582938745587003],[.06703351499989466,.026572971026187026,.061902556598039754,-.05061268032779824,-.07124686056496743,-.061282119254154305,-.1324398852622981,-.07738291307031675,-.03298629915876127,.050994057269436274,.23205864835108797,-.01742647772753282,.016764191996464284,-.004526287312756019,.07267955193736919,.07214327666948436,-.025652321290280722,.011718912127102923,.015719207964445966,-.14235466059508073,-.012765609360204759,-.05581518967549461,.06222843069200659,.11098589289358554,.1277675820548782,.03905398744735568,-.010542995704417739,.05252155701041346,.04550010649059387,.004755199611933554,.040037242307058615,-.041869690382639844,-.07774364371048634,.03662275644957076,.026947327196116463,.00487126551883902,.011449791638995233,-.012157643728774703,.024207033059366057,.0832834587920158,.0798380024536907,.07361642149700239,-.0724124752971182,-.03988089295601278,.09027496435082809,-.005939762870456632,-.07968319294885341,-.055948766561327426,.16964650730513986,.4619422658594891,.274371381660658,.17637187708430974,.005575486968196396,-.04096932205649082,-.04839114608603749,.025694944612614096,.09998296774411645,.12605224667151532,.27677019407409076,-.09038245918831778,-.7236672936582023,-.665420163928323,-.09385060419247812,.12499856033014405,.09099751183736064,.01806746394072714,.02389578130798624,.11109874613217101,.03372618204276939,-.22604680738211497,-.5579844807375651,-.23540780599042138,-.09480450351325287,-.09120845911429162,.007777282093728341,.13248330185889684,.03986004692941836,-.25215810577191916,-.20250122934799764,-.17881248119439586,-.11431317224159114,.2967685677091049,.227171515318765,.2741046467956507,.04964877358081762,-.056866369619851614,-.06478477710546181,.03731336719388256,-.11706718911764522,-.05250186940095287,.047052857758273475,.024035553726984002,.13017390712450239,.05620612147178229,-.04023766931372118,.048845435975711976,-.010397341013248448,.005906105784847723,.038085874448897966,-.010126504089425892,-.011702353668809645,-.036778984080859556,.010230544538505373,.010568912857967669,-.005032312616026352,.002298236071386281,.017050551716730533,.016180147956727883,.04610299769637821,.010501996704126618,.09256731572088686,.07940094833931868,.10570431930113847,.10682942997287241,.05721856104500127,-.04967097657754896,.04269303935960564,-.03868401599168558,-.03950368263198317,-.020740434284436046,.014243631289787631],[.0628531917885396,.07071489693059246,.0043518201422265285,-.02666655406813033,.04452549232912813,.008860926522419946,-.05943194592026661,.12208756283717534,.10823813013338997,-.025642885151491657,.055452978682526785,-.030909671398170552,.004875453431961385,-.1108275207792192,-.028823536945349906,-.005046409915945169,-.002080191609223833,.06515373811494736,.004231808753945118,-.01650245863095516,.03936868171171452,.14469597694100828,.0361474181836422,-.025105477318655298,-.0029752642733928553,-.02723056752954177,-.02650028085601097,.05208373347532018,.1593909313365149,.02911085741998974,.005887954749810825,.07068365760062763,-.1050189134990479,-.012994883599022608,-.027730543376280184,-.038084041899524274,-.028850174915976398,.08889910768758223,.12716053788475778,.09387808681070002,.12445983906256813,-.06046361458863396,-.12925780819854998,.05885870825697016,.16394889767626275,.06625876498139954,.0403244530383884,-.035531467041199284,.07478276042279453,.027441833600079138,-.03454844586249447,-.1523754288892702,-.13604857549753155,.06514673541554891,-.007426474884044451,.0046040279752218305,.07835195010218919,.1297338379704709,.0956815791371677,.10648034656296729,-.471163369507132,-.7625405429183585,-.3582093555686478,-.013245699569145133,-.1330263189646133,-.10815491503392521,.012182904199392754,.014156573471716255,-.026231788982935246,-.04005988132301978,.013820645260828969,.24427073416124961,.3073995405209625,.05052759501270948,-.02309562329583871,.03293769077258174,.08587868851219474,.04110788258651937,-.0006755008402004326,.03830005820641175,-.054725024091938995,-.03259687179316071,.07823103165214763,.1687303908988761,.08515646972460937,-.07547738102066995,.07584584414979197,-.06561586880251555,.026372053076710963,-.012261443544603602,.018816373445303562,-.04602102643070516,.06367691185742902,.009164298437269125,.021381107032976132,.010298974711400581,.025836499120846023,-.003203403742612264,.09385994820963858,-.044506983815036136,-.00942753466249503,.014356944789664046,.0003773641960363172,-.047078136939779545,-.0009669706311834147,-.01014675428259769,.009951687280227148,-.0004165588952472349,-.035460419946042106,.013200958086152861,-.03459767773144218,-.04073574913457678,.051473603477795754,-.03068228734251964,.03380413458858601,.04377149062165768,.08986671687926767,.007630195440781043,.042985878682231804,.007334828402367863,.08949838726656334],[.1558856448193424,.01562994008350531,.07753118222162185,.035198943491464685,.09861500040811498,.06922036778641759,-.05101584537030045,.01353173349292082,-.16689427943715818,-.07793915572307779,.021709195750235555,.05142762271778331,-.06434889451670449,-.015227872851937468,.012758529221202047,-.012491873951225668,-.05254474415477606,-.06903989975126718,.05043125423098552,.03666359516598733,.10484513386583763,.0864155605488912,.050031783118376666,.05699360617899488,-.002548962981594405,-.0007907985441265586,.001499228924733878,-.1832893267901335,-.0010930528968453174,-.05199522065295656,.007617813274078844,.05013961775552819,.08366071886103055,-.028368100712067607,-.057670540943290494,-.024746519800128597,-.17552062616716269,-.053853554159497635,-.04949241504826227,.0280958047888709,.1665673976451451,.17516444743795742,.1107778641386053,.23647066109018683,-.019600601715928354,.0020068984825111352,-.10475575204030461,-.053073335318213274,.07898428406768707,.28336794782700825,.35165561151087343,.20795642216210236,-.00514228127184084,-.06619375962902396,-.04904726214441646,-.035658104876826635,-.05320185516400289,.0768025784616267,.29382065156517917,.27041543845259264,.32595175559668715,-.147970460039699,-.18679187035905376,-.049878575994829755,-.09967059890064993,-.04029577406911841,.02296184564424504,.11787385733947886,-.0725774376494295,.15220959346283963,-.11057067643262666,-.2750887317897437,-.22643642891650884,-.21711971918615147,-.0656735501900763,-.052040181244765185,-.09195969857115036,.052341425230670466,-.029014278335724536,-.02648664939513143,-.09917608123943031,-.11757437729038858,-.13254020998829666,-.07632698439949917,.07995522456749951,-.17744204932338672,.08037590540456921,-.07385621532757777,.08773958673979658,-.13914743753820652,.009984405808856886,-.058680483231997344,-.057028749498486214,-.07979372462974618,.0015768478264207159,-.004152634914412423,.03459730460531342,.008664587126902684,.05726941728243845,-.026265220900470704,.04809355192718936,.021793273125612952,-.11755126367641769,.0004993699577908323,-.09136988608727073,.17327200177522672,.03157285949795091,.022296920170734737,.002804071952933196,.1205545883355781,.22973360335482984,.053206330310550984,-.014610065818932663,.1166412205908703,.08275817531532122,-.08917179472851308,.0613094636224925,-.04112368177803037,.0013240930679478125,-.022404870056693074,.06651364833047835],[.10641476126921573,.09479186002008372,-.0315285745450013,-.0686627425673651,-.04558326470604901,-.044170709745188025,-.06237336850034459,-.04088203520378501,.03668066666622283,-.03189063917404211,-.088635427534217,.0724860558179567,.001791308761835142,.07161810650829248,-.1084084708991033,.05553720862803699,.02079069078849588,.05266823137740509,-.011257567794659987,-.0845031454727679,-.05535460216235832,.06947073679124802,-.028454654127522738,-.09220412520837246,-.05913864458612066,-.00886041918768854,.013755932301681914,.013007606849729902,.11916500018693715,-.005476677104839456,-.004638549694124777,.1060717732490861,.13190402522499708,.033044593081882234,-.0059853447957998185,-.06320300871293905,.042930422332914636,-.07752013732283718,.10193484761260346,-.1276802490146556,-.09156687259817076,-.057976474892979336,-.13595312824385677,-.048451573720558666,.011191570795142991,-.00688513805192606,-.09662145108891612,.08177243143586935,-.04900728572854625,.1976245378232617,.18536337530011557,.05445905362650444,-.08541554314837492,-.1103049477795886,.2678431056696512,-.04245325920849799,.07976003455399179,.15028246342565876,.27326896910753634,.2358435331414003,.02923823551667206,.14907460060498415,.31048708671669695,.40128067591951677,.38540963021580366,.27326818523111684,.15636736514996508,.14854725998180202,.13416742860268516,-.1553995297347727,-.21625457306714183,-.2818917855090248,-.25441318585728456,-.2439240989802351,-.045056214003550595,-.1358388455552396,-.360465262117296,.05410988196640397,-.27377967101430223,-.08756863130760863,-.027320638024760924,-.03926220394642365,.17562805271419396,.0038011471806441294,-.11815538049076468,-.14961832586766177,-.07103473733528481,-.11256171108967788,-.06734756701569736,.0433174953016065,-.1030173747997237,-.1512534418799959,-.04534821129294686,-.2275535515430907,.05019965344487859,-.029910369292175915,-.1088343982348304,-.0018044946393091232,-.1457567912675976,.009524471365601167,.017124703501667587,-.003512674529803056,-.058372842364167565,.0898400610688096,-.043367454110254694,.09673874674903568,.03700212707151404,.08699507184639746,.0198918856448589,.02114467720396908,-.09345703999410607,.0271127587491565,-.10194181462653785,.08387926250693878,.07507598385744273,.050127083431861647,.08865327972783277,.0205252376574786,.0861157887475191,-.005491408073156595,.14180153649129834],[-.023176335194873693,-.02454462131799809,-.03235787579333514,.06154831745087844,-.028031573107483762,-.11117017121562775,-.02855717336520522,.034625006110213255,-.07697264256777937,-.011745965892935112,-.009959765051347658,-.0542835516019904,.04796909671149692,-.058234554069283725,.03220334560199091,.03182887188613838,-.00859087753770603,-.018539673712725524,.0594933266712222,.03266716766061176,.011822214610879928,.011903166151583794,-.09130294980595315,.010420910286473448,.047573929466955864,-.010085595935941855,-.08213100141148173,-.035237661500281195,-.00953659972525775,-.002108262261587307,-.011204831036011803,-.10622317570891325,.008867306909228295,.08068204658678166,-.09053303518527786,.00920033185400368,.04757968064365228,-.00347364060163316,-.2609501387739116,-.1992357096012872,.12707903816980357,.07681711491674911,.008946773095926924,-.017430379757375963,.27183434461804845,.29540869945884163,.24001157736704778,.3283466672975648,.3045311934812409,.1573830891516765,.27144447211271683,.27186726673366013,.31737875140339933,.17968138137001657,.34963615466399944,.17947799656684207,-.19852203981785516,-.23131890333905614,-.30348558107287027,-.018142171891952316,.3280178945510914,.10087717573413153,-.2737313642446935,-.3440544835785095,-.10799042948918298,-.028605058848439946,-.19185111341784114,-.027745548740637616,-.010639473223188992,-.06235838944179839,-.22873300656916182,-.17306684979686754,-.10579424926972862,-.1259471270541468,.005213374464294457,-.033020737140507975,-.0719287337159639,-.0840423740133801,.03728925720093966,-.14901085254024224,-.05187797466416461,-.06244982997776256,-.14709231061360803,.018448830420891835,.00395213381123892,-.07925706662867615,-.06834198956830408,-.12331516121995928,-.09956349294129528,-.12282998155312592,-.0063813760831064326,.1523734333688188,.05622547857018989,-.004510692004970673,-.05758843640393062,.09840261205418808,.02709244060964458,-.005126527871872316,-.1788182638868932,.012716901548097112,.014254282884224326,.10921274021001333,.12698286341450832,-.04126909131947766,.08552049256409998,.04384704473182563,.024665056914998047,.12247197871922337,.1343982336574217,.05619986570933662,-.07048736575183942,.05011496173948175,-.0003055425117918717,-.002306678299941481,.054045599348802625,-.05888984896473381,.056481833161273906,-.07470125703659997,.05430658304758444,-.00244846915271469,-.12795957386439072],[-.008771942383881112,-.08790268555612359,-.0550523469305907,-.05389471931288859,-.021765025216602493,-.03249620127490992,-.05393652454524279,-.05960180358333237,.018682206945497708,-.02404185692664896,.18080120923175,.013387152203562694,-.019460024812665497,.08584050842604711,-.04295988833316678,.05613997974719091,-.007482261747828851,.07263795223017669,-.0457731161083395,-.007907437407252686,-.03961767159491197,.06200946857700187,.06967381700346785,-.0017890764951173505,-.017922949357011164,-.017328735082365487,.10429286568139526,-.07533656359298069,-.019897609787032887,.0664971323777355,-.041929713620319324,-.017542325191820356,-.04937505049725365,.04705546281032482,-.11658200494772165,-.050367703232498756,-.08774512274558624,.10296881777328262,.0010435280990956572,-.11190238889003506,-.058552489144718556,-.09360192242001669,-.058917359043089,.124279868888969,.2042198490820221,-.08692730923047455,-.15846153558915144,-.0442311502944039,.14028149426418587,.20301345397769968,.2099677015675084,.07836837351704316,.023616204532563738,.046474099815913654,-.1091873317264778,.34227918211166714,.40922200549215987,.32977893025607696,.35276397881502514,.17347731354344686,.04965405597947745,.046852605375659315,.18540273672730367,.2348705535220503,.07406602745660301,.09089532801383862,-.3563708193631316,-.1789009821684034,.06702378169407544,-.1450909663576207,-.2414525478367974,-.3135214310957382,-.2085394028841733,-.1694233082437144,-.05072999227745726,.07083911431869358,.11262033996513801,-.05565357077731857,-.18252807611047162,-.09511103368535778,-.20810789102436822,-.0852157922020671,-.0378083091325826,.20962708773356045,-.08751882809284073,-.008327094922276693,-.18306482243805655,.012319186741073546,-.16489228124607314,.07423361221491917,-.11013637802070915,.00018776862044833642,.0033474012470800438,.10043781830311685,-.2400961884572265,-.05521351245265479,-.09880639995530324,-.014981735119631731,-.1254106702918007,-.03586303805654162,.04621371745994664,-.11767772671757684,.07569695823851941,.25102280647850195,-.1506185088468181,.10273881268388778,-.14457410135153065,-.008431593022887443,.07382193598490527,.034203057734345316,.1299769597309955,.06494650143030745,.1003816513120292,-.04268279073187238,.034385732695719776,.1329989256859449,.08468051325324809,.16750112561515856,-.14488980909132015,.09722609048473656,-.17221966876845224],[-.032220950917092345,.008191729916867813,-.08028184906386833,-.08138138190483107,-.06384203481562005,-.015615271736948433,.10708665173062173,.0806513082282087,.05434529779137898,.027073639464279806,.16812503709317206,.1341526646829076,.0386310434951056,-.005550736776574361,.04233455589842684,-.028373758652471104,.003959858465034369,-.06359711746689202,.056587509472392425,-.027554813118545185,-.0017875113664636427,.004102569849982515,.09271899868558242,.008658513044341907,.10683629867740597,-.0741957582155177,-.06305739990406109,-.0215234426268935,.009234132026667993,-.1461035675941248,.014750802208444519,-.005216493259361257,.0032641614965498306,.09780683422134498,.12926590150531192,.06269754981180288,.2747542117642643,.09244606560871818,-.12768877877435683,-.14805761147879182,-.019825200460864806,-.008631459056792135,.01448064785908898,-.0089873586037066,.10470942538393144,-.11054476667297426,.007503550537864213,.060005840448526,.317102991916461,.323244401767086,.10720495398460449,-.058101525474285445,-.031760977729127976,-.1142935909746058,-.03155090370904701,.0017246932881514604,-.032140984544803027,-.01313116025549961,-.14824372987991144,-.10766487248252816,.10593875445284681,.4002122749634542,.19725349113949914,.08374752314487478,-.030750695721978777,-.028330043664018603,-.09987385017922976,-.2603924703966779,-.02597866375704655,-.07431355578907298,-.14253780748212694,-.27783688778439536,-.10552358523835495,-.011202718784634674,.12855854774382316,-.0003920736373502591,.0716967171985385,-.06071544811269014,.07955483422274615,-.04444953812945317,-.03623930280233029,-.05495011342047597,-.07587822560403587,-.13219044743679167,-.11463986228711373,-.014321816516995132,.05463305449331487,-.0021865578330653515,.04759921466679906,.07159056388055896,-.06180693135761069,-.09870327963970563,-.17720783806969967,-.05044458308894424,-.0881580915004552,.17305912499532888,-.18012041201202472,-.13789844469843426,.06965483931368788,.1066025347744837,.04299490598990669,.1324687310724105,.10691785253509371,.06392523123749476,.08494942418234978,-.14824978071410777,-.17981670747688494,.07988721651901637,.009987884496301742,.0916588094992,.003947580853707729,-.022988366514234783,-.025003961189405333,.022312743486262065,.03210612448956117,.006097804502443571,-.00910978092642118,.13841562948388741,.05721814889507093,.03424942423144969,.1416589548265959],[.07740308039110118,.002790278913536351,.08584865990894512,.08162158018334643,.044686861117663595,-.01072051215054455,.000766928295162006,.10466386076912294,-.015221602350874539,.0009621466382152971,.10250217221999841,.1010312655349861,-.028640249406738497,-.050144288137646154,.08802950942107401,-.03918429001904877,.02794217853450119,-.10921729182270348,-.0915511218863667,.038578400934963716,-.04708943707002815,.008224855691662966,-.01669805211816973,.14190580766416327,.023164625852484036,.07260330385813556,.11866577336553505,.014093258001003195,.004763860840952233,-.012686837885249339,-.036660213196534036,-.07741676763094042,.04926838576821911,-.044394153830466104,-.17871803212100118,.028784448095554194,-.0103622383273788,.15180646423700633,.21859707883104096,.11630023909217539,-.09258036855282813,-.019700955892187733,-.04586065984796202,.02999664377636277,.022719309002418732,.025101662257832447,-.08565056428112373,-.12410629154164783,-.18246293106608358,.0919660088126218,.08708100156944652,.10736116620783882,.028110496703318152,.11507649255715754,.038288111619517784,-.0748575383489467,.0003646230535695183,-.07572809524302741,-.2581164616498122,-.606915157176296,-.5773636654765935,-.1230196932349347,.10818482658632861,.016912673562240535,.13529133328209006,.09004414536044865,-.017373878996459924,.016143047062772586,.007470552573112604,.038153120918174875,.13808042440556922,.23128272372791026,.06221216678294059,-.0007810593524213635,-.008835248496889034,.01594835862972488,-.0005022452937268676,.1123236473438533,.01096161537525979,-.06396196854028567,.042697690474159465,.07569768323400101,.1879710839073851,-.03427071856083034,-.07601029239183162,.04071149796250454,.003927652671956227,-.008113852698322141,-.015998115624021494,-.06035618630647174,.025951586831793848,.042163344429453686,.08242572970835828,.14260227985381085,-.042848628451185186,-.06334146945950032,.009286345867861052,.0298638146904988,.006082389039917674,.059612446109644765,.03008202391345085,-.027239380162663276,-.007365870352607056,-.015225093891979673,.044419085486733505,-.00536911602886922,.022425434671702167,-.0082635729409229,-.04083689377986616,-.015422443671092656,.061348129149263644,-.052846129433506105,.0943655962480354,.014525718078802685,.0037072160051032756,.044122648659048434,.04579492559717612,-.030930673355086962,.017194230501010505,-.019462858484744144,.001243582445288452],[.08411366503492146,-.025621034960445016,-.023221811619521998,.05300805218847138,.1722413378552653,.012469440442448243,.07512154062252505,.04076344824912387,.09810078361457866,.041479003131258046,.126359775176814,.07029844401928054,-.05000724672049672,-.005484087070299931,.03040544684160737,-.0897546644621845,-.2154076640230436,.01723010217169227,-.1355698820582185,.09561822628692274,-.11059773025824354,.10124548152459008,-.07649806064651052,-.00028541240089785536,-.026245513796004843,-.019479552802034616,-.3977802512394253,-.06214359190225917,-.02434109216991953,-.012826724183031463,-.014661926972310418,-.11254901345954736,.16096037573300526,-.11227786126177444,-.06853253299267562,-.16356466589407062,-.19653804062868085,.031038393193058594,.13193348705643318,-.0834229630415911,-.04071568578732557,.013809808214387778,.03966584754536576,.009988774332939876,-.047952715523986306,.0006100311386056656,.10343067208630369,.24890751819447962,.3578226490040739,-.2093341264862744,-.03992638234909847,.19419655464006366,.03218836966881375,-.04050363309640448,-.00323484767842086,.17053386793770461,.35047600865548467,.24645797779268205,-.12388716569831495,.017230415937178875,-.20274807116351118,.13927324407566935,-.014868221439288953,-.11606370921716812,.0504068986996378,.052284706862743335,.2179885999524844,-.056957003125337274,-.20647158156376177,-.04577872257609619,-.174715212494163,.05273980569373052,.0991336755502916,.09436406062086941,-.06020237277551874,-.043715737000694935,.0563702907847852,-.008589032917977996,-.09605700522203697,.01976742575379628,.008912837788508238,-.043514983487809494,.07143401706926975,.03636602312918305,.013983885718858599,.07384754249140454,.0640699028180339,-.1243079073528052,-.07747339495112496,-.0030770402418191234,.01241157384951519,-.07723339546489952,.05221329816616044,.09848090118791958,-.044983495910957086,.009317544959183868,-.014435731895740433,-.01857466675654701,-.01664212446049934,-.20214085319841704,.0230001056663649,-.056257873953405604,-.01762107897153789,.019130131746270068,.020007586924534165,.03483339161645628,-.06663505896832214,.019122648234895845,.10427685298428223,.02651078540520231,.16286923233388592,.02793257220207912,.049606524388094764,.0500494914298579,.1019360210121309,-.025880325806131227,.05853446564641469,-.06118051935875887,.17253450900113493,-.13459923259367187,-.09040759731301262],[-.027550816137581063,.2055673522355854,.08213180283129054,-.04257032756369259,.01586831912703765,.009369833376479536,-.11462856052306328,.044711856850138204,-.15995802392503708,.11865990971326171,.0673921974401607,-.1386272184611748,-.24991581191756615,-.12741658368348494,-.04894224580807628,-.10908521327615617,-.015851721850914276,.030010677013469683,-.15749365231887502,-.053420943220933284,-.025662830013189836,-.01109292562794384,.058388641152087056,.08824456178100334,-.05372811700478099,-.068366341306591,.002650845805140495,.09781787269745365,.01689586977779997,.029099746903975626,.15597074244969705,-.017162667301283602,-.04785786758606349,-.06664135729164668,-.04104966548941642,-.02934190873579519,.18068461986324288,.23841021509849827,.10720477806483233,.0032504209495289177,-.16875590654789738,-.055651624441500805,.03786429305939924,.14496557145479333,.301650389285414,.21780633210507225,.2478067430020475,.2061143822397045,-.03050504538481298,-.22354863754123386,-.22057742020428542,.02616077723100449,-.014489792871384327,-.0013992789264812011,-.032142807111526076,.06985840449587952,.12952310052385177,.06213402466583354,-.09585019736978478,-.1500574228079729,-.04869042238772166,.027625676945502317,.08775153927655127,.05938206863631171,-.1554768555359688,-.008993040636737754,-.2169595372240255,-.20894528496184284,-.17492068880682238,-.10306183600146183,-.08325953472860717,.10865204818788957,.060744670090415315,.050196375528596446,.05934717394154612,.08055016301128984,.0960411834034681,-.1792150255632714,-.08635951576168496,-.1986163302647143,-.08530559536559432,.07340445346870429,-.0006091553528993349,.017864996966518068,.015229839479410548,-.028738700704038833,-.030631095956117516,.08354654237468648,-.015199467885082363,.007919656876690773,.10542259168905797,.04587959073812549,-.01617681752477279,-.0644040297730474,.05644952354136398,-.0011675857621973734,.001996187711647404,.06741670149782594,-.006887296475045754,.03485587005632951,.017610685547011118,-.06497452993906422,.07213511303965964,-.038534030205095104,-.014020364161441437,.0002936023904013124,.12282296947714948,-.08452607883924697,.07273352008210596,-.02619933777716406,.2622823203473173,.05646693764295346,.026818371415154252,.09399186859592003,.035828326553373244,.18170527988919383,-.015152288577127748,-.017615532167961634,-.003186157887469676,-.021179342150732736,-.1521371584686061],[-.1377452343640997,.038746368626390894,-.0007085704465362858,.049355010027965204,-.08827922532366628,.3384991916323753,-.06415478287260948,.013423151043787954,-.019629041697081684,-.07451448337699605,-.09035578126457038,.09694121671352816,-.11910664582618065,-.15100751467224666,-.013947233410068524,-.2874783493286283,-.37903665180179325,-.2028061966058827,-.1130350051672437,.025054091741846772,-.08101873700422167,.09255212771864864,.0008224646261129828,.24245844724477272,.12843614602564724,.13562020313059403,.08959454097829489,.23076896835282149,.17282137454049196,.15120139028220045,.2108003848913195,.13274188314172597,-.11296580760432726,-.23425804061193015,-.15388856567280207,.047550247591945885,.13675765224748537,.1497088750064109,-.014598687955070258,.02452413980077512,.15008479234563366,.021969575372334967,-.0172093144411839,-.1256658935629884,.05746214979358381,-.12422822668708502,.027717976800794235,.07647002845638551,.15084174315157894,.16363419431275902,.10314072255216514,.09860444551135499,-.07788908621899912,-.1661031133394909,-.01552372934979565,.033968447572520016,-.006428773323451792,-.07778412369454052,-.13138597183951684,-.1649253758470458,-.1370771806362736,-.24996598417430377,-.09938731567148065,-.04181627247096907,.06339279526203859,.08465679200332674,.07359611177518106,.009674275157159157,-.05618448490225525,-.09782611167515598,-.20167456268371736,-.035743089697776065,-.05385375421400665,-.09408860273308252,-.11120588730571836,-.03767166625239412,.031541190146133206,.09272555579809894,-.02405726855688603,.006010846171522255,.026069243416314662,.05295237846002254,-.000745387114251081,-.03941542133520414,.00012581754959352376,-.07480582090826393,.010523867284072515,.06240607752864875,.015813904262298846,-.06483823993809258,.031265967377395135,.027507834966997668,.00012699672107176554,.05079690966459828,.07896987791599193,.09831750590543942,.054192666869303546,-.013030640855035372,.04968331523000394,.08350897163216592,.011784477594072869,.0918716806710779,-.0066226790079174785,-.04795612370392129,-.017090317814363196,-.07874097948062875,-.04673070524082774,.01851394723831396,.07149989754335787,.06473669024793555,-.032650670337155206,.06136379490065435,-.039888121585693735,.06940981414444819,.07797729781948878,.06613371983371227,.05598211257429133,.072595488855595,-.05384452691395356,.09608563004350644,-.028805713693717965],[.044235218750753806,.03452490583678916,-.1304293688025541,-.03539195098364023,.017969397644679183,.03517803650463722,-.01078844355414521,-.0016502053765038854,.03915036425843466,.21472717137309544,-.0947995796191501,-.028715342944390494,.05486033756860608,-.03932379550394833,-.07194086090689658,-.11930894160210025,.007811767433128516,-.13496527011108017,-.22468220163734792,-.04196371662613939,-.1884031750999897,-.12848466572254685,.03276214663384305,-.002205615246800914,.10277613826454918,.0012177391079194258,.0777628448021851,.014832783378042141,.2549270879104647,-.14122761490223984,-.02812892511916594,-.09059342329139256,.07874630303010743,-.013334851815846885,-.01309841797683857,-.08599743156779172,.0011500587455686162,-.09629195757061756,.16218222843705965,-.026280879180661507,.4059162672347385,.2242570275495756,.08891480121909084,.08738093668566946,.04323574227105897,.10434670998406992,-.02968326553011473,-.096106796162175,-.16572721595924714,-.17366678905777666,-.030961339846240048,.05950555408116688,.049325908092511556,.12756582867533076,.23979790342729132,.12399889130520506,-.27711805486247987,.10320304516755278,.07136692347312475,.06613898533574539,-.017570740572059176,-.2184882103530213,-.09632573857873612,-.013236997628355902,.14099804783148318,.04865647605438084,.030847391971354002,.12062557790469333,.03194037828951044,.012663844222798573,.05303477801402277,.023358934432241123,.07360073866342859,-.10514949440993024,-.16524216303765682,-.2566907598845994,-.2689659488714767,.01856594608215354,.09358951276616725,.028127974684171123,.018696901200308494,-.015875163077901967,-.007937909761738419,.030609616137362825,-.015794143119850355,-.09523631283737082,-.02908738730552715,-.13651567962256067,-.07368305845021562,.05490162321896337,-.060990796740251554,.09317039578109665,-.002387120569026433,-.02619076519977723,-.04798880819540316,.01989179253677983,.05363228445470823,.02199641543685798,-.05848482961974336,-.008297166618256895,.08592298257318774,.007834953787222033,.007497274721557912,.033528171976771326,.034258795986853316,.040069268495681584,.01664217005217485,.033376554888908505,.009458989740060878,.05206455171706346,-.08492944446978946,-.09186129377429487,-.07233529310987354,.017511044864076567,.08382279108366908,.029829413251507158,.02267644856017263,.09282351274921564,.027104627928702215,.04993312794348181,.25204397185842226],[.04501707059571113,.0498642789949671,.08232096915601292,.11789478363532714,.11183772343297438,-.1253322045343096,.0730110893562333,.0770037215770574,-.03717900545496422,.11530429785134244,.05730001513322304,.0978487816702014,-.03060524384717013,-.006989918349842278,-.04381468916114001,-.041086107026221175,-.10156550268991253,-.03098425744620953,.06224227084282018,-.08565990211020953,-.031199205006548048,.09466362301479106,.1869636075210107,-.1661308799155149,-.009008549501699978,-.126066461725453,.06174431253445521,-.10058744884305808,-.3255438697933249,-.09397283393441772,-.08409967501745218,-.19412666055289363,-.0737528830414833,.09320666895036434,.053698626158480575,-.03050997649543366,.03549926506931229,-.08821841540993962,.14081935255976538,-.015418397657317465,-.14008063599426096,-.02141577110665445,.0730178872426362,-.1772662023908141,.04967098759114277,.034513230883957385,.10331367544756308,-.039224198145387315,.03200138764978423,-.3170993196754844,.3639474141807881,.15239466974253513,.12006928728376079,.012632970433185474,.13528479946899857,-.04326335129410329,-.04198638907336186,.06983905723759978,.001010584034370668,-.001177493293526035,-.011794825581052382,-.14348506855517926,.022137252763930207,-.039687582510860714,.2621815908699157,.19436953435957777,.11018262120789611,.02279144487223891,-.09737455097152174,-.016625841483821784,.159809384074366,.07956114879698994,-.07545184277034313,-.02802352727821577,-.12778377344107292,-.07060095297691774,.07585474550259086,-.06110411458322956,-.03425506534845529,.047000517227076224,.0859568504259988,.04282729750891924,.03582441766288798,-.006123191145355145,-.038509250299150546,.052491286674368046,-.012429025518286289,.02780241004668932,-.045633571810510726,.05732991916540041,-.074157742801149,.0012829945233095302,.04703190758387131,.024833428093670173,.037204577451850254,-.028766340858447596,.04836022604994912,-.0532700977375509,-.1225368009934108,.037120069768975875,-.08928400790752453,.06495529707871285,.07753906440902517,-.027111775203657915,.09566272146318118,-.024483731157729047,-.03621165014592378,-.09391579872500003,-.017320414345298095,-.10222122825099972,-.08839882935836986,.018021145195601808,.014346493014463765,-.0045931108148111605,-.04133099909611131,.03707125175822254,.03210908865075661,.1327316051894474,.0751095411672087,.02562779748474479,.14212920960470612],[.15729146952739428,-.052978575964526695,-.002625845437807875,.07899544804862188,.08204405612651289,-.13536453065722548,-.013649345776134983,-.013140590068438054,.01151285607422449,.05159617743029746,.0255502204738193,-.039487220487149505,-.03465828805821605,.07249054445839179,-.11567294550509376,.06786380161748312,.06865077339493647,.07398589069835013,-.16153712899081113,.040446464260465734,.07146643825094859,-.11469018047321458,.054050503923005255,-.04104301219121387,.14996547269454152,-.25422330965645823,.1969719351437533,.11290777964377821,-.020530641521012943,.12889998621276044,-.10368261923120013,.09609190196541599,.15324884079071813,.051489779311227196,.03355956220646843,-.20829917204727766,.022893590362530233,-.2624960431410919,.01920855427735553,.23588413973673644,.012602139087501865,.20972078789304485,.09256853638097748,.10590976891238137,.07421375809945621,.02827848613104754,-.034766214821145405,.025387015471766056,-.21114625235885243,-.18142723897056606,-.036903154611340375,.07454224421279146,-.0739427173333076,-.12923367863313379,-.10286993284460598,-.0020478562727464372,.0070327870476685345,.04165877026376459,-.030913879256598803,.20126029986072963,-.361494069722841,-.5918877032494142,-.34765190314312044,-.29917756970453346,-.04319546567921677,-.30777208287521557,-.05457087346476583,.03567745314425927,.03377903501088328,-.11152465910750621,.11790825287438664,.5074240277961515,.23855694673921737,.10488558912344918,.07481493616449232,-.010757602002390856,.09842217441789791,.06801151298652418,.04008106731763751,-.17815840391411603,.015218382958913604,-.04304478707274706,.06947878597880759,.2624834865643778,.1306172564649099,.15898046016824569,.09891308507712536,.16690881596534685,-.04545578838937801,-.051217783957418925,.08865176474629312,-.024238261127295962,-.12061118524458514,-.13932561033045077,-.0984478243981586,.08410412844353249,.03609504694316075,.06467717927085943,.019556502245895897,.05458483748926474,.011804485067672219,.04962752013073167,.03158019227826489,-.0421276060749001,-.03724684536620476,-.0009022803555269465,.05127558828330446,.017591411946701482,.020608297506701782,.12021482673005342,.03902195231667063,.021711754771879227,.04717219947996956,.11457521712485876,.06552926094190885,.057133065165575314,-.06414584331371753,-.07915357008973892,-.0842035889087247,-.13317811959911652,-.09719310872141479],[.016239054180390664,.003966272793749406,-.004554660848846634,.013554085633964541,.04287384927044155,-.15274614529097097,-.027274870950224753,.009662815968977459,.00030503272333276543,.03221825484285479,-.036021236700139334,-.042600552093793376,-.041216087356306746,.07022527918241118,.08825146379981735,-.11943869442811812,.01600941743312269,-.02589229623832287,.043718898111848606,.046349743840285895,-.045519881760365574,.05780246328619649,.03299849377053235,-.07478902796227593,.0856125736138434,-.08296703677200613,.12226353323600213,.05699564798388623,.22311371083336579,-.1289229263989481,.02871159759083955,-.08229481100611669,.07467088143614656,.024025896326078336,.07065603601313146,.052863436123422466,.13162507032318282,.08385001225280878,.019373316885252463,.06860118604540767,.1604542662376101,.14512299636928327,.09097198717670087,-.11720878638068641,-.10960101740165,-.2298993299842687,-.04037549365049509,-.20170065712267327,.2103219398545147,.02843676680847962,.06486878856813136,-.18348723541305237,-.17888322479271676,-.24993108343054868,-.1218218035048543,-.032694964791572315,-.0037869041619365135,-.2488566096487292,-.15602019937684342,-.42475936671170156,-.42360041816934524,-.3608016539425717,-.18904408350207366,-.05662803401652919,.0019947298303030075,.009984728877567475,.1075269031323472,.21965496214815466,.18511412087840118,.19939690136264532,.2370619476665271,.1585535076891107,.23755501089495354,.24026771887297607,.14806350471741694,.22743537801775957,.1250723276134384,-.12207706841814078,.04122540755875127,.12974091028573875,.1387734322212655,.09281907427262334,.0414569330167312,.1281097174245397,.08628227803965438,.04648215221462616,.03598526522115604,-.14999835453581617,-.0619947530635693,-.12774624354082473,-.05546853075465755,-.07205565632683267,-.031200201377666728,-.02169770596970337,-.02031960579447556,-.011808386343022212,-.10716560570031625,-.08234244918512784,-.019256109946120217,.06667881100363682,-.04153672357168933,-.04068751960092851,.04472457352709275,-.0683052168964735,.035585363893159354,.026945608802347733,-.011423097664885327,.061366414602964534,-.049741414287749496,.054484604133461456,.1424743669625888,.03770989015507005,.014814583813689983,-.12196638284522934,-.04085297097341757,-.004807269841994491,-.0938444533454384,-.11066938503473484,-.01308544267539942,.02000366128381234,.11572349318879958],[.02861973429703818,.054226325319119265,.01767875753214382,-.054622115279891297,.0006816615854381564,-.061011028044801754,.025449624542795035,.03924876355135573,-.017614050568012716,.08668906895517887,.129015781827036,-.059155840152992877,-.03365828707580499,-.11303253492598647,-.009440740328775697,.0383001060010507,-.024382057855670103,.13094817594507807,-.17637051833702583,-.04253643417939962,.024839476402364308,.025341112503526046,.0733792409158455,.1249039423629602,.0523345284024839,.01959442719741869,.014409551889643532,.06939173936687891,.10114636722821412,-.017834270494535995,-.005253874895870772,-.04944962911154373,-.018515125726140946,.02732694249374093,.09763594846358073,.13398387575020193,.028128579416720284,.10345916561982525,.14559912798485353,-.062225750838370064,-.04320538531304752,-.13615012492801842,.00945958022416611,.07764329328098614,-.01883839881610818,.040124806139584204,.04608276260496105,.11596384414343883,.041671199210061065,-.03525512383283549,-.24210069103686924,.1341304895480569,-.12174034267618312,-.002494033774044037,.019159096554587522,-.2859624847968232,-.06448621966076783,-.3159404613081046,-.3210369275565501,-.5270362132034808,-.523706814301239,-.2219710388945374,.07817795320959023,.03715277663413105,.0794293501758099,.05471087361571522,-.030973473678087608,-.1710933884130195,.09607172590451177,.02326460744017457,.18229765892428224,.5084153793392225,.3632713737575951,-.17442768533982334,-.07594077455705245,.08458269142045552,-.08264079354279294,.2407877830671493,.12327508787645428,30311214018877153e-21,.20734217619087927,.13348805342234585,.1420447853746671,-.01668300914372979,.0026274236589628186,-.05059978347067792,-.09350164253401919,.049346638059468484,.027169521962694204,.008806677564154888,.29974077633101837,-.017370887640425853,.06047261147506215,-.08327458013745889,-.04873436025865573,-.12258982430184573,.07453840474434334,.0016868192049145497,-.04667837568798733,.10225565600123501,.09641338261476909,-.08516767534491451,.011074699633376178,-.058526124313595766,-.03274311396661824,-.1722075038150731,.1062569945912887,.045122620395145224,.06315689942429545,-.023657194122683647,-.08618942142993294,-.09715567921688867,-.1177859601186664,-.0018160616946504698,-.01837453110222613,-.022154736774935388,.06907254318267533,.06184270109132414,.05741719116358045,.030372244451354793,.08978777546456254],[-.001637558807711853,-.01523399155873769,.033084196663500154,.010429688997138621,.02638730725610114,-.05549304953240504,-.08986798608277412,.03131836942976357,-.06021207204170201,.06034508162027746,.033637859079548624,.07490767444257655,.06734422144223931,.04540898533245702,-.016588163375265065,.11808910368697124,.10674593565355751,.014356560764954368,-.00029905420194112353,.03248992573614229,-.0796910048701078,.0021152438820417965,.12842998293419816,.027685506112132927,.051037174605280025,.009502773414105138,-.08857714395595993,.07241521761687471,.1875858733675072,-.046260082649078216,.03283445740031349,.00027333660832160045,-.005625872973384093,.05133522775792196,-.028997953896369527,.010803615722912593,.03927886287402181,.05993481823719196,-.036672818526105114,.0020455805172246433,.08420494892293047,.07872249743197642,.07292782932833436,.0029102454584164217,-.014711323072181468,.06197894952171591,-.005861364004429596,-.006509600464702996,.15462308680710604,.10998731441673203,.05511993976474949,.05724647785751881,.08467350723014512,.04541561483198189,-.027011213416260203,-.41690504010919505,-.2381619432525145,-.26802740977048395,-.4297396023947019,-.4712893669692756,-.4753811771185376,-.23332878411143415,-.02866052018803172,-.046785685844234697,-.01391066188194462,.06355734031900377,.20816618228755654,.1268039069069368,.19584967158175218,.24120710644978025,.34247879950952587,.22000223848712153,.03699358515317182,-.24940743884977212,-.12911855055552002,.006760778385861643,-.016380373357314598,.023975770224144183,.1728134079555655,.06774703585492528,.09934809469516141,.03539753804030679,-.03463166182179102,.1100865505604692,.005313191434559647,-.1852260149514699,-.015871161665418073,.008623043744521788,.03892375012569235,-.014894463369033356,-.015235500642311592,.0015905054090605206,-.02594208321337546,-.048032891124765054,.056968059211618904,-.005355047118697581,.0700413676970709,-.01990406337666332,.10013072647581948,-.030663141377206063,.01493648218721405,-.05337707766838567,-.04619114379822308,-.04973710460144862,-.03203494019210336,-.026289206287861282,-.00738021535276584,-.008577652107519318,-.067451013841573,.03696496979064143,.012119189183510626,-.01273226528095213,-.014067660545222016,.011208506370721377,-.003419775502049388,.12161984708872418,-.09096703322865128,.06206136765809177,-.023761385872915743,.11195006309284704,.10944483983918517],[-.0614292177676861,-.024854862147621323,.03753390059305069,.05305521847540143,-.029090391144677347,-.07660753258923039,-.056250478754706124,.03851333502343017,.009411112285780607,.02762775859881378,-.04048433394446757,.06257228413844763,.018534104488487108,.09995392307538145,-.011584012590548413,-.02705235445809122,-.005996134596044159,-.021253583302654644,-.03155182648452626,.1384156406272948,.004465498896228312,.07915857594998048,.09330712693847118,.021057360335951708,-.020072455903489106,.007834926199344353,.10646163879333373,.11394158834484362,.09562400708473465,-.0003797337300617959,-.01056664270801766,-.02122943319759627,.11951412079200276,.15658745914488753,.051156677361355526,-.06149908185714912,.08007784197043882,-.06031278155582331,.10862415451751303,.09083345714134636,.03774980229812818,.12669250756084155,.019289318800248804,.11166309161116607,-.1161166273753233,-.03827059678071661,-.013961859511050188,.05745637300788146,.035911303378527666,.1168536631662633,.020811499706270893,.04227481917429324,-.11786932199756393,-.20631689099465444,-.10339540502604118,-.03237104484552287,-.14327246772273436,-.25192334370553027,-.43351265016373064,-.322530105334642,-.39759972190268117,-.39288382422516366,-.39114382180517604,-.2466951151334749,-.08792059370029912,-.08861343277350736,-.15980594976718124,.187856441602355,.19150833663803338,.46363761289278804,.15919333829593552,.19352833505902622,.23198389189372812,.41944067807959584,.29116622643028034,.13265224163991357,-.04128087529606902,.024460830389148203,-.0586492458711208,-.0484310682254976,.07445852470398351,.03804830411581207,-.040110091881074464,.05986990292482574,.052511568070781466,-.009056215226947145,.023537459561038466,-.06819758275382648,-.05868207848921336,-.03143761270972536,.05728960562093009,.09631916110523682,-.010631903539778567,-.0724228306321863,.026755462358263725,.01866551389504969,-.03508272943464433,.0033658937666455023,-.025999751547288244,.05153059400512512,-.09587763934474401,-.07290350322473715,-.067948463067868,.00432611757225175,-.004011781154024653,-.005486415003636537,-.007040607698489056,-.023664491880765207,-.02134891455269128,-.05576494503770434,.07620346105654131,.057794773037288215,.004991409560975428,-.014553984524648442,-.029743957901801635,-.05716512536765295,-.0010086458792998715,-.03536175147104669,-.004753083205477092,-.011301320960084231,.11501077964365991],[.15173553770142628,-.014179130345110133,.016877350096463503,-.07720465698340188,.07810802077917843,-.13112570903713622,.002753461595534773,.051910634906651945,.02894784682477934,.05020881252165019,-.004579484116651808,-.1068451534743251,.011155331270464766,.06518611188126323,-.13027319256310377,-.08014430895919698,.10735864824242532,.04887972464555236,.015758793271349616,.12191464251681002,.09698466873189877,-.008083344199497508,.02070520927773202,-.0819378070896832,.004646536698726236,.05614793344286019,.16628267002053893,.04618252947477354,.07765799492206311,-.019960907459527263,-.09653834364365096,.07946604612246112,.25805196379884,.007762217116777187,.06951957517852637,.009523819637301936,.2615169383792941,.08678835064866287,-.03740226079816272,.06948574061480542,.07169472236220033,.13258033500501015,-.02145849038805818,.05604635052020862,-.00039374783734824614,.03222219258902316,.18458145122623904,-.0425397829560613,-.012963640462772971,.170102640969749,-.023561860478587326,.05115294828510181,-.1316626386662188,.02066528156095445,-.24022517587189773,.038647270662851535,-.025858147741203062,-.08145590938506822,-.11686693255496608,.04440129268023965,-.3573050560712243,-.6458048862282926,-.4058796460765634,-.3057125966673067,-.12682355113036897,-.3349793732242465,.015693363372025454,-.0787123262427005,-.043104245874849255,-.15482305108138567,-.23546372175602243,.11116967724198698,.4554474594999793,.18491255398354933,.29246815522355635,.196730228549847,.1971071562521477,.07329223993943043,.008241154297332805,-.1150654509172613,-.009769859408377483,-.10085941287032674,.0684199574716632,-.05433818455572499,.07743806985014343,.17116462221553444,.0012880410065990583,.13426211870566188,.11060346830231947,-.07324738364271675,.037258219358590916,-.012266626223890298,.07365939898386821,.04378341477475915,-.10714901521414893,.08665409577527164,-.0687630196871663,-.0587222961213732,.044547323244407605,-.05531794447013578,.033044549367641826,.057546028232389426,.001372219860547634,.024825635569633846,-.12204262640334872,-.10189632816975304,.054772548849134656,-.07957783281017018,-.03822925555621319,.03649472890803328,.13217334923490376,.057211373582709266,-.025832313366592516,-.05471628313966308,.013913569251103083,.1233331303710279,.0048703487927865205,.005174360919211619,.028390246160885126,-.021507757354650846,-.03467232955821534],[-.005638399019864418,-.034134669652071015,-.02298517127417314,-.06042490511676622,.054918574572591805,.0688808563980851,-.007013485383146376,-.00648857975984031,-.07499651415043673,-.002575895078660656,.023015025445107737,.008365293639519378,-.031176094638168075,.04257338372246873,-.0661088511417105,.029356311647627392,-.013291948615577448,.05636197405267865,.03421948261127945,-.012594934239664096,-.014011911140779154,-.06238097812075309,-.07113998097633528,.002419585241737937,-.035945491331999854,.0456380080016745,-.004718376331055318,.06674523587421312,.04530010627049259,-.04447867397014303,.08964050895430327,-.09649618199492596,-.027741072518757348,-.005716770675369451,.015013223612745458,-.024603266772382323,.0013274270991194131,-.035626865786564946,.017128923114182848,-.04597251722973113,.00700365315826125,-.04314749126071507,-.029564377599491043,-.02069536902039537,-.07978474654225476,.026833980742834287,-.0019308823001443487,.08325761674178708,.1073292905313316,.07487684328165595,.04849810672333138,.09169820062468502,.04818495710565103,.05209594899642121,.0076798336966644315,.1051949011075242,.022530132067634476,.12672233854609458,.059196502607268456,.07316560175671755,.11595348012337076,.0561543812261827,.12932878620836885,.08842436444709308,.03008655496417094,.06915562578899845,.12091856805585206,-.08993159870879548,-.01901478695671717,-.044734780540160696,.11875971731148252,.0019621703161090687,.09896262685457068,-.014935988916705181,-.05815665104963902,-.03028052756295238,.03900429075159827,-.08499089906358405,-.04601308312736738,-.014913760028022027,.021155606661541995,.06421560453257494,-.023980009754675097,.028088175416754846,-.015711319084152214,.05535467732664144,-.10471526203870407,-.0896827246271393,-.285340049872218,-.18318938265740103,-.08077353622648484,.00516649268446813,.057862500220190766,.06436392965987806,.08930527605764388,.033737553106247584,-.12462760155848271,-.15876787514393648,-.3559472010693181,.09512910727572213,-.14724808649647816,-.20315881235781566,-.0841426908653908,-.21320097373742838,-.18018782707193445,-.2119440854367126,-.10022760576175327,-.021533171965098907,-.03730908877302891,.12624286755807518,.22034948666962345,.18909901249809574,.15892762405783045,.012004127757768795,.05401853470010004,-.028528312561415387,.0032335748506411056,-.006627178039866982,.08469326627498211,.11628744535951219,.19103429211412726],[-.08632014587085493,-.04251610912847509,-.00877624577521903,.021241060023051747,.004785142683889937,-.035472062577375424,.0066937243438659755,-.00018713747041253226,.008276426093388398,.03873976801523668,-.06807775532448711,-.05024192857483541,.005362760135839445,-.04672304155801983,.0941592536360896,.0259868706565127,.028402847338834608,.12799263106977857,.052174185297818504,.03174223717567129,.043516542799932806,.10029999162817296,.009887971508390159,-.035094445123424634,-.007013648134597858,.06906108560461019,.09671072321105059,.08138116248657243,.057644504950450134,.011067196959459139,-.01838110668834969,-.08260170572994886,-.052683720386780014,-.019959970942575705,.019919134901318802,.07476413421487832,.003773354381044272,-.0014401279343240897,-.10890764410839328,-.05790156875359698,.06240285701799966,.10607261825733119,.09335586616638367,.16321573911501755,-.0443119052420356,-.006651931903878361,.024113039196997976,.06455344205631933,.1517128045863824,.3045776806070726,.08704170613240109,-.1300649085600688,-.11937696051908048,.026590394860137298,-.06187432805245787,.09997255193914875,.06382034869711367,.1176673091939654,.1041271101548924,-.06465138383635163,-.6483883244212054,-.5771868264045272,-.03625579288192479,.17483800093943763,-.08287899322519875,-.05289553791191878,.09345077929752676,.13222855504871267,-.003115895567640581,-.2050426388737532,-.5671309856064656,-.17042057724882412,.5127831574851569,.08057209143675742,-.06903481377819876,-.07649368600841486,-.008790831321444051,.06335917927728338,-.019296007009984323,-.2631077868691519,-.2643185488881028,.004389997491811792,.41748261831713607,.23966204304538938,-.07356228697618065,-.09550984819738148,-.23474683230766644,.02829833913410154,.06107471342323981,-.1617670664788456,-.002836662810929355,.09422220116207343,.1282749752649281,.1470689521208139,.07130221932440324,-.07473727988964095,-.2388522427596929,-.08502220429118704,-.07147003526069204,.00917906455872776,-.0009260579751391024,.08422396047774673,.07314989431319953,-.027624077571723846,-.10044220817006712,-.002887278419193756,.08486607958654896,.010310191760266263,-.0005486928083007075,.08421774232249293,.00540301472144504,.09530544860146802,.02141628298841297,.03209302388025993,.09515759978867049,-.0644210308822171,.02897465190310715,-.006988550471036609,.15811077547403324,.07738806251162884,.2228246896047446],[.07646808884176232,.09452548036967595,.013417457238376423,-.06541130247343482,.0022049098738461115,-.19542909991536384,-.01036325544715716,.0006824005641406505,-.025036329876752375,.10709994456938719,.1750934250468698,.14614357796041205,.05371808936012237,.03339878494049728,.05851426192031009,.10088626385947798,.123932599842568,.0003003679535087955,-.07250605302149415,-.05354946770191708,-.0689749450619817,.06814291076573938,-.0032046953892697905,-.023764344412627286,-.03305737261273434,-.04676939809650768,-.12086069080136047,.13198139059769748,.010909080970491494,.11805853563674065,.0005565448918684879,-.005804908679251972,.03599303672957467,-.008265716167325882,.06835085226718729,.030100108849902718,.11300169606234395,.04942335820173879,-.18768681794943032,-.08981622929146402,.12209444756370379,.0653983410219775,-.23087808851819352,.013400992883371765,-.09688703226527526,.09659335704424854,.08971453199525714,-.0038843040921827804,.12013144346588932,.3740423508496588,.21211466109416433,-.011527049200226763,-.04928358151693285,.018754604765659974,-.08264495139577743,.10817924171979713,-.058116213333392674,-.04976144143312866,.03846781052897595,-.27345429596810805,-.8464347571120541,-.2964510122739593,.08827559134332728,.11386954716890384,-.04324619613058804,.008036679746938918,-.10745428649421408,-.3104660594305501,-.04414792146240294,-.1780528735930817,.27176076889250983,.5237460398834308,-.3460333131926374,-.2555265202640044,.041698726893088206,.17631040231935152,.08900046345108938,-.03497190747260501,.015213546106438838,-.16155001168047278,-.004461612295541831,-.19608326491524342,.5239073730025521,.38353319497536614,-.18308498375136645,-.36865739333612096,-.05159976969809135,.18507587383644392,-.03905957968438431,-.11293732152378697,-.29448175156766543,-.24257847708785274,-.020336287901657812,.16460493865286885,.04202856070974578,-.03457877025452506,-.08062131133030623,.0023780590689402997,.09709014003611553,.2558741717766987,-.2528423785018282,.06161063026546784,.09606953110690702,-.0530490597234618,-.01615817882356896,-.05142755507875746,.15564444153816212,.18885757011599216,.008434900332647044,-.048989097338605264,.1771206856070406,.19164022835084701,.18133053179257821,.13611731878917838,.1652962851740026,-.029342409275796733,-.04278844315258058,-.05354612070195941,.04304847553991831,.00043498176350832696,.043391550136365135],[-.06739249619527954,.15603790499391812,.33005542485267503,.17019472884597617,-.009769894849549418,-.11247473585306066,-.0946396047616811,-.024494294275221998,-.003979234801726267,.10994471173246248,.034232693599063196,.17574157070401114,-.05830787394227463,-.08603561885055908,-.08937780302783849,.13060740524380768,.08334257877723908,.04558934315321972,-.02150019774465524,-.0396176985432692,-.04028289543604181,-.05490829999440229,-.02962070100561462,.033422070447237745,-.18107420807866342,.06262831004917643,-.15452481995687467,.1630239124577403,-.19245645289137592,.025898631717022558,.138019985248594,.04258082061725732,-.10231719535275768,-.04787866997999869,-.0846515395363138,-.10421201862848327,-.11475351378970063,-.07744751140730396,.1751315391960965,.31630961804401514,-.21234361067848667,-.13717780192340084,.0322563150273593,.16117460365654565,.12436610992083444,-.1960223209372981,-.10316972333420724,-.17989050580766375,-.030776595813913885,.36723472811894087,.2682282294834628,-.14255591471090923,-.3428439710747905,-.1686302689762979,.20717723978005761,-.0436102979406257,-.21591071858781744,-.35645281884894064,-.3591414517208855,-.356538210400283,-.22838433437597963,-.2541479444751975,-.027037660554611806,.10429938241738665,.07031310042281527,.19633410406749333,.011469003363448749,.056100652037588905,.20979311430234168,.31382740777390794,.3626609041849276,.15632710796745802,.04311821555373582,.15941891562233157,.1379981045600984,.08245654792292287,-.0973627067657066,.017535763817111305,.18875412500763653,.1322991804906124,.09315987867725894,.10015739152045183,.0417718281395823,-.1646122684692592,-.010269758847271757,-.016121723288740217,-.10277571356356704,-.09304291065640949,-.049186781888682446,.011398226094967184,-.0002700750754074388,.007439703510469686,-.200281126111086,-.11832761511884456,.015078283473006854,-.018452548998716053,-.03636517698179263,-.020537843773772754,.06746735860641695,.09898114873241157,-.005567440273129359,-.09202733157199142,-.011441078700565044,.04049342007394224,.0721069064339574,.047544507543730935,-.010627683042822508,.010378739620038546,-.03736112469411146,.04944072910180286,.23172672133978298,.0662240370661964,.053604258546808725,.07022403043169811,.00044743519172646407,-.024040752967206758,.01702740005498063,.08250217651753305,.04411754553266678,.09444575948019618,.026070122517550864],[-.014874410513740596,.006465269516725436,.18058268416301498,.10639801800645622,.1462435538011862,-.1854908571677263,-.11946585223026567,.13336875353850036,.1431606374421438,.2126832457834811,.074573037321912,-.02366332846738356,.0003016250518083352,.034923909748155624,.0004976437330811434,-.278607959140356,.019649427691563706,.2242872822116851,.10634587212193486,-.05574719156641576,-.1720320898158253,.14652429997383487,.08367806166302114,.08005999685354703,.1267699091356168,-.2096000474917565,-.11992969772303724,.07965105241880661,-7050015517075237e-20,-.13159968070216072,-.12185636491051369,-.12212386528350992,-.06347159979080245,.11591606931628659,-.0003121176220944738,-.1615853169207239,-.20509977937167723,-.015211020089078528,.33419363858602386,-.021197972311742794,.051573854058283256,-.08119082461245453,-.024248010908752227,.03195278614490318,.08988999412280829,-.05534767428796654,-.19026769408809097,-.20571271554392964,-.0034200030533805825,.4233706083448675,.2726093091939193,-.08499767431735698,-.2700903003356256,-.269846791820592,-.17357361480162312,.04962098882240612,-.0035750137874818316,.03659266345297582,.008635942409048396,-.27032750814312834,-.39994957932057346,-.17183609797060095,-.24083907079152436,-.20001978264666828,-.2526432903468412,.04388992532969703,-.06425983460410711,.07404393306025628,-.0141401497703907,.12916245281008937,.13074274654586848,.027929401203914232,.018943370061503276,.12690634935975603,.2876472565385513,.2888724236948665,.2999817956216291,-.03702797972780987,.049533958877091146,-.018197380038773844,.19754195456455448,-.004838219692821645,-.06700194220608034,.09532874300771776,-.0773285941177754,.09792160200102382,.11726746577896972,.05120619892319547,.014744273305796744,.07451554959247797,.07659473159347036,-.10212719204511148,-.01010359791820685,.05340526943316216,.02596768348900778,.04284255334511395,-.031649551549700956,-.10112182853935778,-.06200392753579289,.08099671084730073,-.09622742200248849,.0027222873646967627,.0032193461798180056,.028018068894715878,-.08039298406512714,-.06824368067567846,-.006576337726493846,-.10138976161964301,.0057770284685309745,-.001933310874106156,-.028478055121693616,.07814848124477439,.004671826940859908,.08652550552054145,.07514987579413773,.08091190400159867,.14299067937575605,.05825481165877586,.060032259045003374,.06930919820604647,.13733947078713762],[-.026403086547123783,-.020917609288306105,-.03510190404818561,-.014306912310371803,-.004297219536436386,-.058077881414638405,.03817856444432709,-.0028111815245872307,-.003894108451895112,.0018813296297546939,-.10078688565961993,.021583238308296865,.07351192637081023,.05452848256552978,.18987936161675673,.13986078152038808,.07294072514890901,.059256836874555796,.031090669459266307,-.015844740201760396,-.02361837940991314,-.06493720410953477,.07564298381185089,-.07946619582017297,-.02076901494464639,-.1040432783776685,-.03301296713352203,.07278846470181086,.10548105228938642,.001940545938049626,-.007042592457223856,-.028398618166747935,.04518643635595633,-.01918619986250676,.10714569627787791,.11822684975817753,.0385712171883888,-.027458148938472732,-.09826461163629269,.05639089468873522,.0401565173462511,.12886782282388654,-.031555895682836455,-.02313957239134061,.06912242744289229,.02510224988131035,.029789415685897214,-.07065287059550626,.01631478330110331,.2868868423095696,.1702619783984527,.012540634976734383,.07085086586162258,.0048605100782281585,.03319775346107286,-.09132869763063686,-.1509740873764873,-.024120509010246885,-.024570140846357655,-.4148094433546702,-.7768715321932411,-.27460992951941543,.13785951824037135,.13544781633672992,.13313817386432886,.08265280252024546,.0892378541549983,-.04408118699325547,-.07688310132127552,.12600419964023202,.4095936605238212,.08706928311680576,-.4662116815658208,-.43761485411451395,-.10812067804268631,.01768640051563608,.12729816882590003,-.06474744869465016,-.10763464536172436,-.08524826938436865,-.2315031932038772,.15315343856469926,.5561967810025037,.23774692046366147,-.1666896681928125,-.17715538120217467,-.16976838686613122,.025008504484853387,.06037757212092375,-.207132941454224,-.18646194822017553,-.08066176191384393,-.006108527904106376,.13478699831707003,.05663233125435585,.17462609841438137,.017491495363805537,-.015088475844073315,-.05179208029802235,.08667865349188252,-.04388543437840227,.048343192446375916,-.11502969777881612,.14059893815190727,-.06225829113308384,-.1133470132940385,-.06495391079798758,.027741435654062445,.11898150752091059,.030260843676813906,.1715435352553567,.05733311701306816,.16205339464116109,.0986088130067229,.07391231880159047,-.09081555366559062,-.010370607459546058,.09227572604484349,.11030039690306363,-.005880817865530123,.03315047782928856],[.265497784006023,-.001196563628947503,-.022916846645374064,.04242967231828259,-.13811673855846254,-.037430883372056925,-.04055976165522489,-.023933501028027243,.07925869079288599,-.03452188619865604,.1745046250935801,.041790623206738556,-.022740750277082458,-.0013539969792274592,-.10138864950556396,-.05330591399510319,.05890876091911343,.09337290317905102,.050140067951328054,.008453902706993435,.021166550278200705,.10388208219238029,.007634804692830455,.013138640062169096,-.07521733873467416,.015069141903176639,.24056352482102478,.06446432376128192,-.06152056570701016,-.08469410484337414,-.06805808373087846,-.010291588861849124,-.035798773818091045,-.04713757879339735,-.03026500105857148,.025114433975426814,.16953416528873916,-.0817543143366256,-.16483577488792853,-.0902156026048015,.19963523508019926,.18826320002737132,.0456147336838748,.1086113915966117,-.028328921848054453,-.1035162472195403,.07532162352055781,-.034012524380715156,-.05869582193122358,.44090992264428214,.08401925187495345,-.012849576849437369,-.04246094681649424,.13375661768225128,-.12950865617271876,.0026410719089161178,.044977821596146744,-.09031241110853559,.05573382619971841,.06006110600243948,-.7152771146839577,-.2823457778181207,.031272225391427405,.11880824524917351,-.004276759953008441,-.011347995604354372,.0023675469047975545,.0004348550966036674,.18958682252204556,-.08575981341015436,-.4525757422905344,.15961507301364802,.31736731659376055,-.06241231309053391,-.33746000415329924,-.24412114938634538,-.06141338958196621,.1307879363651085,.20848205264195724,-.20955124959973886,-.28812988786360966,.1444444314401861,.4681527258922822,.08513893261549756,-.22658732896395356,-.027717075192951288,-.16856281398342385,-.13753538355338668,.15059745895188464,.0007847737668332105,-.17890918828775537,-.06728879470102206,.11813620983475538,.1093966751655376,.10647641748777864,-.077849502674635,-.24214140318686445,-.15597210638677117,.01845193625122546,-.06530042705198695,.042693539088593954,.11063899895595043,.1345960282646932,.03073808878575153,-.014969922588453921,.03930721328436604,.041004905630175364,-.02833378555913796,.015742037834556716,.1142681683436582,.021003468182292317,.007722156555425588,-.0008480579679850803,.05639697053390247,-.11249629487295199,-.06403127972799066,.026888150461400945,.12621843363263308,.2506155533712283,.11067999815380504,.2625673114962656],[.07204136693885738,-.02294216842145158,.2065458637349623,.002151772315104397,-.14297221024604706,.0006065344407096968,-.058092024602730497,.13818306134022745,.17791598188652985,.1233364171367471,.004452851854572046,-.04605978546113265,-.07158630070162336,-.10073784448195211,-.07374001181908801,-.018045859949657725,-.11863305748309075,.17617564045249434,.1497784150689691,-.060747330352864684,-.002795567821259906,.16785791445724135,-.1069842654168507,.08299954323961768,.1290318983655246,.0472029159600786,-.030333770559695314,.09912149513807601,-.0517466008166365,-.20797950839871948,-.006052325355080657,-.24640179139614737,.0025429730685309904,.05667595309098608,.13754251807005335,-.07912609105408717,-.17638998336346334,.055182291054404795,.2999299991215481,-.12374985838286831,-.15473061907953733,-.015285688493998806,-.005413536155938592,-.08584047767716647,.22138328866134657,-.1312953691874637,-.331468720330966,-.21124338516694569,.24711637651267865,.4637243206427061,.002706170884996334,-.24160873975021052,-.10141666077006732,-.18322786018052334,.11158412852904591,.16760494025045042,.029994319879768874,.02568209912242493,-.11958702177240098,-.33142254026746104,-.15444906222705926,-.16381735574030895,-.18306921419313,-.40205221035750643,-.26593698021713486,-.15682020509672343,-.0002611999532893261,-.028755553239042705,.27424611760615036,.21592566014741185,.2548708412154177,.09766726443852504,.2003429726573298,.19878852497931995,.3068586161555329,.1724661104441013,.018739306158119473,-.031064357609991294,.02636646794424298,-.1877675901403973,-.1548117904943781,-.03742920818066736,-.11875155323060346,.1072645136817657,.17942453854019957,.11733499751282206,.005277889557191551,.239715757430863,.007970067197280564,-.05150273918961891,.05532003743668318,-.04000791210638338,-.09270810707710164,-.03147116641129902,-.09875931193346452,-.0929302236954023,.05551794898235975,-.037796492017755555,-.006342559497925185,.024882508886736474,.03498315663644572,.07193149606026825,-.03159247501458931,-.08635043298071296,-.00900169516689478,.07145747296891478,-.06072161509294199,-.14319100457707667,-.04832107159680491,.08148534066502974,-.028272073748030507,.06368387177606752,.005547975403340871,.11811279082577647,.1406537167258409,.0040600159105901035,-.01371930228275231,.1272415599265802,.0996273526994874,.13231658613798591,.13873127011038072],[-.027795762801489036,.19015374353251102,.09786449937030461,.1260265818055256,-.03326907462898673,-.08950071549954294,.04755987206442841,.07374106017939597,.10899124384412755,.010865871673477301,-.057265695902511626,.17802866217244057,-.06386667438683014,.018021373487705536,.025918690785187992,.05257574438698637,-.02127434335573966,-.13048583355248472,.029635938133951767,.02172060868160656,.07492647379441873,.05982963712461653,-.07690117928929213,-.026484578757325183,-.15053176420715175,-.13725487193154184,.08783323609942534,.06602307477877348,-.09194730471659307,-.2149017706218482,-.02002200413959808,.061471356479686365,.041399022424228,.03151238583282206,-.015300106252072884,.02606847025532051,-.033971179507359804,-.056571591160507355,.18971099504863476,.08899534885782014,-.15964206297954237,-.1658659652422706,-.11188281516561152,.12234793752765391,-.05230788663927277,-.3784533866593174,-.09661391326206117,-.06904822287997459,.06616884325249589,.4501083804430483,.11905472109942555,-.08909289493361428,-.12904510069418687,-.03652636132387262,.05482157876641917,.024810152389095064,-.2974723222653995,-.29999245801199964,-.3052508677798769,.020996924029338435,-.24088524064845188,-.24200960208227415,-.08979063621228703,.040398429108714586,.02526034075506383,.02738946668147809,.27071204540517796,.36231522138833033,.17799155604913797,.14461290644587801,.03918838067034987,-.12174172594558236,.06237969867131351,.053786808004118926,.07756536337785302,.08914298237579163,-.08291349820194119,.04793594103860757,.03222752136962408,.1350352800448287,.01205967148514378,-.004540301049576534,.04815794062847277,.08165162134080209,.0420055425519394,.0009471989558243119,.013451602816859323,.04615829282097319,-.08677011014133904,-.019510393108648688,-.011154645591627543,.027566377877780268,.06172844763368893,.01211458002765884,-.023208391928071358,-.03160731272004374,.05964254050869681,-.03676588913311459,-.01592889621276914,.006408090161429653,-.08189925434449696,-.029769584611185507,-.08882088193245963,-.028070658348809674,-.02369186063763514,-.019599361049671284,.05743812858231336,-.03819567161611324,-.011284460479520503,.039955132103732395,.0994475360757134,.06854955752169739,.07304758551276755,.062482862870410376,.026345779828657455,.05133517242772345,.05507457313109733,.05467724826002196,.0249056938059083,.045383956637533654,.03290849847519013]],sobel:[[.021622445358756535,-.0390444160061629,-.037053874418492755,-.07022176288405753,-.1427717878903811,.010719228314107376,.23521416713985532,.042585931839459745,-.06683861743458991,-.03578595224955572,-.04059161986118337,-.04764960919347714,.015365501205621496,-.008941291103032187,-.01809360705194145,-.041156433480069976,.05919352610154368,.03497012407302869,.008553519349948524,-.012132573309561322,.0371186042198053,.0111042284552757,.013666753799685936,.05711592790632492,-.039502379569608656,.0017172576948862456,-.10081077815789569,.037477947956047315,.16094952648226463,-.0671743911548443,-.03419754633951289,.043780102673210156,-.028950198305796655,-.07533857364442487,-.037953071524472706,.015621349282515417,-.006293662956530381,-.11863605824421611,.04918319370719824,.17069808619279628,-.019042518561221543,-.04243830041050764,-.017632482496080508,-.07573152098334562,.009532427173592498,.032929665395846554,-.014258152251170213,-.009896702557296536,-.08072755471094212,.0769505477203023,.1301045387299078,-.11441193151685329,.020647144228869374,.00749014842997215,.02952445728451479,-.012759212791825812,-.009358056202397089,-.005836205655333548,.06410438831050584,-.16470494179736736,.09441790187367777,.13506762949639728,-.044141557668112785,-.052786309985618965,-.01084112869678737,-.006663012542954316,-.023002077304622413,.028816328444530765,.04166077615413055,-.03202795718132918,-.061564972379557034,.13252072121529024,.13006898279253504,-.12914934815826734,.0036201984235415957,.03610542205997497,-.012106081202489141,.004058192101201268,-.061907628638589444,.007600367784796228,.03671952219823914,-.1410576836731265,.20291678804533386,.06038866116811876,-.09658956095157467,.05458913933858801,-.10018987380801381,.04112291504887511,-.036635205055412415,.11599660938438668,-.07295900961980108,.00583809207032291,-.08045918512870237,.15241049645522284,.06425812812905529,-.09976023757909988,-.03850852240843291,.0044401907717541295,-.027741747177757195,-.03436923493861925,-.015116464251280038,.0058884423068488005,.046096447137350165,-.05757678749304351,.10122734774744221,.07473544575211773,-.08287021420448253,.016464177481322798,-.03580810970765566,-.03475071464244962,-.003747381569910571,-.026826464835886445,.0056597480426354915,-.06776975169819949,.0568032112071548,.2204344679083607,.017122291321192216,-.14459243689689222,-.07900148882372424,-.044799531513801144,-.09998183610900521],[-.03942173319674756,-.057937375185619755,.07472938315329024,-.04804478632173838,-.03718790427316931,.052702736653325186,.2614265568109154,-.06194891259233615,-.10675064435044604,.03181210215084286,-.05138458731313046,-.006001020166593533,-.000758963231271774,-.005034712330520122,-.04106468549039451,-.017208529601601026,-.00959059876381125,.1312641811720012,-.05145780525032916,-824568465870798e-19,-.06300141610663909,.00662330181235226,.004505103028334206,-.00832061971740649,.03491261870366369,.012366610223709981,-.059276577400723146,.05228846208155291,.15469918793188286,-.05159177086372573,-.04577876556723351,-.007896035294524772,-.018756915070729453,-.09497130156345444,.06552949060396415,-.02915852966712413,.04686948866825649,-.07002482417194189,.06273064008554734,.12065622163679911,-.06865756120992836,-.019058676809837402,.007433748881822612,-.06712318925947033,.02052950643564122,.01304440247401717,.003508766683547923,-.012030134512047277,-.09718324129496053,.02850191391272701,.15192055414504166,-.07064017538379264,-.07574867617411588,.031913417912056846,-.03198191683603016,-.0230492148272136,-.030048256280766128,-.003272100719358767,.06000911662855034,-.10610745181060459,.07159991097201013,.029747261693937183,-.05575743675365958,.010540784627845606,-.03857943910359096,-.013055960468351072,-.046603955087347805,.04582465684306406,-.011912196563431354,-.011526854332901983,-.09532744148529379,.05183976113236992,.06949193683229409,-.07878846639780829,-.022076046119921762,.055685206611929355,-.02869018935857525,-.010750075363214893,-.03415858882057192,-.038029784044701004,.057878914546968016,-.13134480414052568,.0856079923756359,.12614414610906796,-.04482730622503464,-.049757164378562924,-.024712106659159953,-.07150714875938241,-.024192130054643594,.01362951330665179,.04843395308108374,.02435938666073026,-.005115510677492163,-.1051390039795366,.14444393915678838,-.008854843167052682,-.06877201694896912,.04154889078317525,-.03416715215551938,-.02158218803411909,.030182799067988354,-.004001462906150586,-.008366208163518175,.026868483822945988,-.022177672343113145,.08331376244831487,.010010211142558997,-.030072184867643174,.03784348921872213,-.0703839029107394,-.08354862092459728,-.03639193566116092,-.01661593760376544,.062407519296053184,-.09160202412195503,-.006843043428917624,.09508596316493824,.048338691169388215,-.027514079584110885,-.1310899111751886,-.09668378141294953],[.02652155293290502,-.04575770696844337,-.006541188406767798,-.0850611791651533,.14722881834024182,.047880871068860825,-.019733975062189213,-.051041982772424166,-.06667461611485706,-.018868367139866095,-.041407892531913994,-.1135165849534281,.06494420088328412,.02647152281327755,-.0009023323279171679,.012634138439591477,.016736706302279282,.006622967558128835,-.027195497182580936,-.013683547901060635,-.05313406694033209,-.03712665111485396,-.02263257568938737,-.0018942229311252846,.03346211015366675,-.1182492365861096,.020164248753763356,.11022756484626357,-.03439933132264335,-.004049118679745123,.01554080038394597,-.01876268414416564,.031382890856517,-.03490611065951857,.008409065294535818,-.04433470712905613,-.018500134350316173,-.03677441221924304,.11924665863029466,-.06655695631623004,-.0157217782738675,.008804996944793225,-.07306105742656663,.024309817051911063,-.0022227005091241224,-.027084812593866206,.11300564532044208,-.0896577241954244,-.06933069492567155,.1522788162456262,-.1181410719140571,.04152270594429727,-.055858865503919525,.03589699264499422,-.02283997385633508,-.06235905686569805,.017954041686744696,-.002351693056876304,.024292471256874525,-.020140941604535046,.1661637815621748,-.06054747904050768,-.09599363187714963,-.03517153185773671,.00017003372512303105,-.05448690490066162,.005104687483287511,-.024970809646617714,-.026948648737005924,.13211777318770576,-.015912595374394843,.14876817147359678,.0796408202313956,-.11230282633524796,-.009244179138250534,.05881906813164031,-.077920153621443,-.09048227175758561,.11102826856966876,.04262609405288573,-.002195518726305995,-.03612226711997726,.04714670601583837,.18615910807929142,-.06326936864527846,-.06350591196288817,-.029534950411274838,-.02998682138584287,-.01600285092423518,-.030794045583080902,.007041927810126417,-.03044439031995083,-.12718798875016957,.041134467878119835,.20405185525846614,-.02981115718000413,-.08705268526814279,-.016364346582207326,-.037891810417653854,-.026401963421238878,-.01377908482257758,-.013032137299750876,-.0535382795543113,-.05677960797001068,-.07937722305377937,.1823700488331369,.04187996112061794,-.046827200345602865,-.01941969694818884,-.03279614251473426,-.1704434512500123,-.05402585591400131,-.01264725681794126,-.06730558838276793,-.10224311399966124,-.3497190298002362,.21798581432121136,.3312151668296328,-.020319476107282762,-.12056665218545416,-.11656639490906624],[-.034745756067027414,.011922066572062268,-.09844929180493724,.18031082717496805,.17476539334005353,-.04651834678078855,-.10946016872645539,-.07572746991726476,-.004279528158131065,-.017696596899397482,-.0939835628640418,-.010800135732187889,-.004556932318507428,-.0313793616124137,-.11850675752648224,.2367012443070334,-.014785597277977354,-.06330233126223941,.0225368275762782,-.025071938686129294,-.0027915071853978554,-.020334914936012752,-.0260080270892961,.010703003018176116,-.04302986734354733,-.04719551951341225,.12321706281055818,.07178600528297852,-.06528227400456835,-.0676382212399581,-.030061503019037598,.0027284619191995756,-.03074601987445027,.034300317469793756,-.01548496672283399,.0006179721819279116,-.12212293111148122,.05002280333117751,.14679567560544277,-.0844548887536185,-.010415558440521971,.017746373390555303,-.037888913263606695,-.004245286137776923,-.07444532374647941,-.011522402982276407,.006531765327581377,-.09306768567122295,.0002576849794380092,.23352117567061204,-.004983968115974451,-.07096139483486509,-.040406385819728594,.0038935193964216783,-.06308769534344781,.002854920112929586,-.011365105715306072,-.005187184085771797,-.011323145685494362,-.15258276867230808,.10052717621074529,.12368458705231265,-.07784739054660597,-.05947141825026764,.028026328084379253,.048885641757861406,-.019665152356733828,-.017240548423916428,-.041027265162514856,.0011509894918183342,-.08224193528889252,.07860486788553207,.16228781290785055,-.01052370034412145,-.030965934865738454,-.04150395922722867,-.03971893854081693,-.038748556042536665,.05147042014917219,.030039107409380247,-.05146929592994629,-.06031302048942426,-.08141793665406812,.17732474397593703,.025219765376655087,-.012727987606368688,-.06452329607912104,-.013167312882832634,-.013895314055951707,-.04937557221951774,.014179550428987366,.0006231274166943537,.007284514890717856,-.10894474372759466,.027784507036578657,.19201834106729118,-.08503636154991112,.023988581116611958,-.02282810457170993,-.014372052338263167,-.026342474575395736,-.005546792145770824,-.019470544310970943,-.033931503651495665,-.009153654429471615,-.03673949260822036,.10446088448224827,.02096972633566819,.02477619301857615,-.07882973010453503,-.05324513285593391,-.01043331061186759,-.010210640679316214,-.0513080253985015,.037884008160365974,-.09932414289546485,-.12671107025252934,.08382856754313096,.12485291624334745,-.019875141138885395,.021159178415280137],[-.07381342857851532,.0455540146431333,.21317974541835555,.05448580409181898,-.10981511144389543,-.10268425646919861,-.04650116351920065,-.055663971820637946,-.020862778212020025,-.0016239951963715644,-.002629558452717437,.009997409413537085,-.1034433191717149,-.008081438535099912,.20536698014540328,.06126371127783943,-.059836319781441494,-.03879029447603735,-.053677695944028214,.01992364774611377,.0006753675996654038,-.03572620746404241,-.03544101559998049,-.024733560212268406,-.15079839806148979,.10615849316820197,.18684548267040532,-.06407028093214549,-.06708715087119563,-.0055311193006368775,-.08609293439519577,.061425846472940575,-.0352191555938125,-.039575091828705944,.049801600957609174,-.033980895382327146,-.11533858246663227,.18080146842113642,.12760232482142872,-.08327397929149902,.004050625643949118,-.009980892873738614,-.06775913770201022,.0026835543791823638,-.00803433817430127,.023532332559458254,.04311746952929076,-.14058656961156304,-.0016268330065314137,.1558532497649482,.06962658020587428,-.1243686355938375,-.02647962384653368,.02038319920383414,-.028768935662109356,-.006285770213208797,-.028321313745657696,-.01168709222463879,-.029152829240080027,-.09492216145725302,.05287227428314446,.11087851911197262,.05425160893742777,-.053296632141531824,-.02755855040578903,-.03854510047924891,.011349127429016066,-.026961940685359908,-.005884952735511401,.00206567265274352,-.06205567284106403,.02710712046861733,.07672022654060172,.009554614295410758,.06212095818042384,-.03262997618859226,-.02150746774468064,-.05278408473616569,.003042324765367102,-.00803157070172712,-.06392451109412368,-.00021021475214931008,-.10024981203982601,.1015512962019214,.06415755572356177,-.06991649277121507,.08210312205359811,-.04650333410340245,-.004884800731244601,-.02758565365129036,-.0140809555182348,.019042840231226918,-.033131129031483485,-.00891359281431682,-.054256262048008735,.11973166937117143,-.01826858015786499,-.023883645532026994,.04923183201129361,-.014577787660792423,.04612778717043076,-.0751102026691928,.04662688612671707,-.04174713495693605,-.03251487077000792,-.05433873340003095,.017222361404870275,.11676824759018707,-.026438027156220366,-.032102992542435496,-.055241109787953276,.05623591331540999,.009962320928060292,-.03247355703691324,-.019767314495135732,-.029422259501493818,-.05097365566473705,-.08644257971970679,.012598629009327726,.06612221542730885,.01211368001348305],[.0004667357969735525,.0005484962618241966,-.00013618713228205742,-.0001325308516655052,-.0008015746157093179,-2691133605066146e-20,-.0006576428843258145,-3657968399891406e-20,-5466011820027881e-20,.0001460463513297764,-.0001696182636010491,-.00015906228894248253,.00011235296245967744,.0005051823397537377,.00015356454550761702,-.0003132396323740176,-.000443009848644497,.0005320046122783456,23644509619358614e-21,-8483171427942043e-20,-.00027200405736615936,.00022416316434788062,-7119462531548662e-20,-.0001921201138109542,.0005739617778319649,.00035815207686277155,.00031159259445471095,-4693731115592045e-20,-.000655063269267907,-.00011995580027392686,-4234800514009546e-20,.00010587326804443578,-7932255000570351e-20,-23721764802441496e-21,-.0001704014757213674,-.0005759316542972587,.0006522217712101383,.0002665414702900902,.00035667127123066925,-7769177785828997e-20,-38172905741614115e-21,.00010049476721076365,-.00012168481580056376,-40491064147097386e-21,-4815954797536162e-20,-.00023287151964227542,-50225019821443275e-21,-.0008018262289789277,.0010438945255279268,619697064224538e-19,.00028901935081157955,.00010579037778190963,-.0002724803030345158,-.00018248333714674828,-9789360941573534e-20,5612226678763241e-20,-24109435187230215e-21,-8256402305014017e-20,12275769358770228e-21,-.0011837300475309662,.0010387599962857208,-.0003010645692578806,-8294294955041304e-20,.00046305034318953886,-34941522492179e-18,.0002604782638884796,800633144412387e-19,-.00023204308256855825,.00028043251942060473,-.00017992926522449743,.00024111256847714896,-.000777073687135317,.0008725867023055139,-.00047310681975866464,-4890356661830034e-20,.0003016510539483913,.0001523693782892032,-.0003214720006770571,.000145004901686719,-.00014868675403801115,-8406917150712012e-20,-11488930694997235e-21,-7310353847784362e-20,-.00027257580575307944,.0010045581248467467,-.0006063389015931106,-.00030283901680250476,.00023946215844236965,40874050688199964e-21,.0002066877668432881,4626416595003647e-20,.0002212022580360476,-.00025433190468929917,-6962082684627835e-20,-.00011541458342628763,-.00025522292698570287,.000908077213322929,-.0001479625967791515,-.00027356753032273425,-.00019226090250733943,.00015027389750788632,-.0001041059494256247,-.00012272487478783012,.0003376683677376868,-.00040885269632123106,14064712871159069e-21,-60893502923708986e-21,-1227014387847336e-20,.0004636730771513907,.00018271794499197247,-33562064556917105e-21,-.0001861452801387312,.0002474759769718931,-.0002203964126913302,-.0002655235806198683,-48267361401083814e-21,-.00013654454453562725,-.00016522236506379823,-9985241041834958e-20,-7308470539467734e-20,7649675181982088e-20],[.0001419249300921993,-10849997241092063e-21,.0001677566369007906,-.00011605018962013852,6675611545678417e-20,-.00015562939648154986,6416442818616905e-20,-.0001614403193715211,-11567201873632915e-21,-29389666004610293e-21,-.00018545690110512159,-.0001419296577092402,.00015688900011993565,-.000229871704751812,.0005060189485679434,1147904121199389e-20,-3535800418509594e-20,5415137837850442e-20,.0001162675133458968,3718585855791434e-20,5955359052348119e-20,31314783550819014e-21,12057174878739307e-21,-9669598794523337e-20,.0001044847847413502,-.000155071439923736,.00022022799757739214,8386688043080653e-20,-.00012962060856349517,-67578262074236e-18,-13555990987554334e-21,-3573770488207728e-20,-4580879555246553e-20,-6354878206941278e-21,-.00015612384897251141,7008522349730151e-20,.00029763597940726805,-.00010577343553129503,.00012730480076296458,12399248204064683e-21,18645837807265697e-21,.00024212785489370614,-.00015872860498579444,8370724121332246e-20,-.0003259753596085574,.00041133058083372975,-8868765658752442e-20,-.0004929644470749728,.00020605423444788884,9356117414315718e-20,.00024762885023246056,.00036524470776032325,-.00023688791970755824,.0003317223665558061,12629398500677014e-21,.00024080466741264323,-.0004006372668640644,-5956312920551987e-20,.00028033907001259045,-.00028345593539583214,.0001339187071822609,304935126049094e-20,-.00034838001372515526,.0005974623821075192,-9984648697297649e-20,.00041453928701537524,-.00023073595005270592,.0003420850861519109,-.00016580817990245744,3976576445351848e-20,-.00027830373100982964,.00012537929853667987,14736238159517717e-21,.0002756723723416135,-.0004888438970630446,8721286611335088e-21,-20493341142208132e-21,.00020499966401848688,-.00032257655852790945,.00032032979815644486,-.00024321547888298814,29086686149870644e-21,-.00028867101368240666,308253988305085e-19,-3679758949304973e-20,.0002922835678795463,.0005289131903343444,-.0002405873549854512,-.0002989896758484323,.00023190078400971148,-.0002429945590425725,.00012631644056069861,6836571335519515e-20,.00010549540200119334,-7322581853928811e-20,-.0001018216734522126,-7634194521848048e-20,-.00040021222480832175,.000518688311283471,.0004528227836673032,-.00025642054830855854,-5331243306501074e-20,-.00015071920454498566,.00026346273973178874,1572313523398594e-20,-.00010611552565827076,.00010030771494402846,-.00022901452791959653,.0002951541391374296,-.000378103168520591,-.00048426748955096577,.00022179377366644826,-6552153219173927e-20,.00033674118948758686,-.00046179298814816305,.0001050701224512944,-8138607593656533e-20,-8540917054615516e-20,-889958796901763e-19,-7585331122395705e-20,26564465721370945e-21],[-.010683117891894434,-.02620351731802986,-.03534863123446273,-.008903947669758876,-.07826483213345957,.014533495211292522,-.03973549743914442,.0028868136525013826,.008256343228267193,-.03687632798624772,.0019617637025766575,.05292419388952615,.03547852648387356,.021452215773512737,-.012058498396393419,.032415748027272206,.008148731343012645,-.008287843059112744,-.011301795333024143,.045191867790093425,.0443272347840628,.019363765884505585,.11356516329476325,-.03297909837716518,.07569751640913967,.019096851467574182,.008341756670470307,-.006060831718435461,-.024521250232898754,-.0062563950604268,-.01942454996601342,.042617826976536294,.11771045618920394,.14806853397919761,.07242131632098367,.05825312332492652,.036446775225891515,.06185042985131853,.049704669459738865,.05543056149812341,.07026667566078945,.10791776313079825,.05311703744365072,.12942596556811628,-.037520978380153586,.09370958660148157,.06757677036036652,.06872498144163033,.07612678330985373,.12311586010135872,.08341133633610057,.03938707776246564,.056425147284172514,.014237983090907416,.05663383500458416,-.007586313673593262,-.08304140447131836,-.03312998363135067,-.02763623864202023,-.047768510607462976,-.0632962042530323,-.0625787861890991,-.046277350408935075,-.0014999128228245229,.03590831793842944,-.15153224136771898,-.06746002500304579,.05297916353806439,-.025619303894120496,.037941615130038006,.0649108950810626,.02230202042681128,.05527075190732955,.09270549756162146,.018963378238524085,-.05397308646482572,.008330149548244339,-.021218159929265457,-.030570605486973344,-.0021454021899788445,-.026875831051993617,-.049042673990263554,.005126075452093991,-.0069454575735653475,-.05554130502902047,-.024578161869174033,.015168445899802574,-.06800332043927534,-.0004811209803101679,-.056520449187868235,.049669608030607104,.01631627846344143,-.03408574477458805,.06306672693556993,-.008003322830341992,.03338583748912691,-.04457596702970919,-.023441355247158995,-.04450920952691433,-.037161871027802405,.0073190175238074615,-.07315762665564123,-.011373417119033976,.07203060276007722,-.01801567006958655,-.00013858608242610544,.02837432120799207,-.02556727198730242,-.013903313076025374,.052807958873996745,-.03831841666326997,-.022987196513577734,.0062781886098834845,.029733530440722515,-.09023650482004696,.0094683723177513,-.06760687073712972,-.012207168455778569,.003949880911342205,.0017680506907682904,-.1320506501819677],[-.0004896583334386695,-9613383588834984e-20,9502440927711825e-20,-9483128665062346e-21,-.00027318400850575436,-12859674043262659e-21,-.00018753431578469315,.0002535982748430171,.00013593197045175948,.00010671640250792952,.0002520834422912871,.00030575486026798715,-18677323289251202e-21,-.0001359879426809929,-1.859672404264101e-7,.00018716058456554746,-29456499708931105e-21,1740372235658344e-20,.00029170983943693773,-16893395160838542e-21,.0002914265737280833,9820001306080905e-21,-.00012201675367805309,-.0001821511041478624,5872783585957053e-21,-23871151498152526e-21,-.00016916476120136525,-7717554238115265e-20,.0005388762586042359,-759543277033814e-19,.00047546289643572714,-.00048532553637742337,.0002524348829850197,-5288970316780217e-20,.00026631391925304587,-5706901207734594e-21,948050040261092e-20,.00012583697976619596,.00045284900761148605,-3792132542147775e-20,.00010519128394604477,-.00021574981428573378,.0001305879900506124,-.0005551202035402965,.0001429939062747021,-1537039116969452e-21,8065370761985158e-20,.0004067755777601087,.00038999196381222373,3687737451229384e-20,-26107472160714212e-21,-8558362711672332e-20,-.00015583615391241354,-.00011965945062380329,-36535280401381234e-21,.0005409408483182249,.00037630623255849316,.0005226965893515845,.0001311189140969643,-.0004006033211368873,-.0002699354254764169,-43072617173671446e-21,-4658295413017405e-20,.0001170409315355593,-.00025561950600206523,-9798859756077194e-21,.00028045364993524793,-.0001608395418377477,-.00025723583975659214,-.00046505036856739346,.0004039314021320739,.00034091132239879793,-.00019370884391506013,-.00012426188246242656,.00014610355538470163,4887463226376648e-20,-.00016902502798560315,-.00037191521627369384,-.00021579609440836728,.0003996153018098192,.0007981264512366137,6535068239886532e-20,-.0006637329476850487,14201540184693995e-21,-30668778868838537e-21,-.00013015400162084967,11834065800214733e-22,-6045268667183301e-20,.0004600310403380242,.0002964915299992765,-9742215850019886e-20,-.0005461539479859404,-.0005455504543375317,.00030505150102402845,-.000122823071145077,3104235413028261e-20,.0001268834643597741,-11535964674028176e-21,-.000176869063298763,.00011095223633189599,-.0005922445599075704,.00021684456404430508,-.00045799378668898855,.0005799531522856713,-.00013936531291453697,-.00021220643616092633,-5413656980053638e-20,3660890747885295e-20,45939329531563544e-21,.00021478664432446337,-.0003269975562177341,.0001268963426280592,-.0003423046849268599,.0003476774203064331,-.0006754907234843358,-41513304792857586e-21,.00018063222856385536,-.0001881377600047654,28973339703669554e-22,13507237580291653e-21,-.00041261401631562805],[-.0001343678115740335,.00012210804930180494,-824144225993334e-19,-5730186380512037e-20,-.0003073948625443232,-22492441595647894e-21,-.00017176271831247786,-771017116939221e-19,4710757033194596e-20,.00017636492999561354,.00032836342762108256,4108769956619879e-20,49949350228714606e-21,-.00011875800957268645,-.00023943950047199125,6100576503324101e-20,-5478607070270522e-20,-.00036631651977345886,.00016730329224556167,.00025493108839291095,22226604097883018e-21,-4460834588607826e-20,4891726226349813e-20,41964097110273185e-21,-6131431820233235e-20,.00022686166653692816,-8924793820791477e-20,-.00019302109650852495,.00023804561802531765,556913355820865e-19,.00016699837552209412,.00017965604481385428,-.00038349627139956134,3191863916031032e-20,-.0002191428537772662,.00033657077159139626,-.00015380926340578804,-.0001264037732578785,7844359819078606e-20,-25921418374194594e-21,.00038527701539335657,-14538798784193008e-21,-.0004928838914605993,.0001028736165327223,-6438312383352796e-20,.00023810111270487072,-.0003138610278263735,.0001400826247810147,-5891302942668403e-20,.00032747301458163625,.00039023015135071504,-7447541605180158e-20,-.00041729123414768754,-5226020210982729e-21,.00012735624759406539,3662905984705249e-20,6562876120307787e-20,.00021839305017589544,-.00011813071478151277,.0002169814330799935,9628751475676545e-20,-.00026080214823867576,-.00039654273422187053,.0001167125140248762,-4016262676008464e-20,-9660908197616641e-20,.00019201207703931078,3589467907609556e-20,-.0001321581580999917,-2203113921459693e-20,-9310837541985639e-20,.0002539171933422669,-40757163905339486e-22,-.00012808461454903692,-.00015139230658256335,.00022616830885492656,-.00010182951161811366,-2148301565258609e-20,.00028356599204855393,-.00028490640829138825,-4289175013874602e-20,.0004145591668924045,-.0001260379310736165,-.00039707365188554333,760334794278339e-19,.00029653613924018885,-.00021374066277618509,2327117911399279e-21,9516417231490021e-20,-.000680147729170702,.00037026320560729076,.00019251368934372626,.00013551091552941458,-.00031120640022949675,9684992877975057e-20,-.00011268464289018038,-.00023013062013480662,.00015401847444745237,6420534280956319e-20,-.0003497429765618107,.0006485339651306349,-44729954720712506e-21,.00021224544758897262,-.00034308486716421273,-37733988311935626e-21,-3886834937037731e-20,864986593905187e-19,.00014456882901125664,-.00014732698311536454,-2761325023053346e-20,.0002635436170520672,-9631500919806552e-20,-8032375598398395e-20,-.00018998607556105357,-5912725043037692e-20,.00014091011956727205,-.000129965375526217,-5035229587568163e-21,-.00015231914400671252,.00023099545000895144,-.00021587551857769893],[-.011113779995796793,-.03264498365428932,.03239332397703781,-.053019160588067986,-.05228963164641236,-.14090905182270536,-.10662971417607917,.0767432911258378,.19183514586283293,.09051278080603262,-.09834501649578946,-.011356541223655056,.036592642227365337,-.05386114520342726,.02133640185891116,-.047044247520027484,-.07954300486607012,.06913481526096213,.16070569312483246,.003845693903315633,-.08669557060029598,-.030081196583984296,.02266518207617302,-.023072771394334196,-.018331023996742943,.0011057635434971857,-.10917005303651976,-.046906120609124184,.10879721410619564,.17214824601663198,-.16345419009446593,.04738712977608745,-.05013066351126129,-.029615346796994284,-.03838162551818361,.0016626820450895159,-.03477979881909356,-.07094315047427265,.07790962934702458,.2301997612697828,-.14284459018595042,-.0333055990505881,-.012579026667957113,.008416322955214002,-.03299358057460782,-.048339483281004764,-.01952530866179105,-.06984453532422541,.014727444216795713,.14996686179447366,.07803165303386042,-.15724129008645732,-.0040330836908469385,.020646425620089916,-.010654017089976087,-.06865623112225558,.02429760117440692,-.00248772472321912,-.030227587432549025,.09022701473345793,.080842697753929,-.08665487622028453,.012959715152821044,.018917133744079905,-.04562303577648189,-.03273939111155515,-.036378708143565655,-.052934938098819245,.007262840131973619,.025315816651209383,.06535498883148017,.050830135881118316,-.051373434850408066,.012062843823364068,-.05392149517917579,.004169526857924672,-.00822648311683467,-.011220404620470506,-.007584883382162197,.05900004822275351,-.0399206568488865,.11125743952652592,-.02151903494012392,-.057332486848285534,.005525995387836064,-.004210488740013946,.009154376366908981,-.0295339965731944,-.004661891680095134,.08682679220521433,-.08790568197773525,.06004909473502472,.08223957443365432,-.06795099725920267,-.05283650885563538,-.08178791847111451,.043805514127629036,-.03591864415070863,.03094303412250326,.04887370765404538,-.07841929294906942,.036039114074194384,.15301950458013516,-.0020635318713273093,-.06214429501471075,-.004218297412045746,.01834272293845469,-.006300758423097505,-.011523161046205615,-.04725822724231044,-.028717665984571757,.07880162607227713,.0692019757290932,-.08005962691627755,-.14106514638245227,-.025481816722181624,-.02050899754304229,-.01550940323134436,-.009470541064192074,.014878235172793254,-.0034914923955158606],[-.04971843100034001,-.03575889242398292,-.02224283272765947,-.03562318295011419,-.06894626983188856,-.14441155948249546,.23465172605260556,.15846679355786267,-.0659719826581496,-.018535961144545934,-.024797174426993557,-.007636807485574512,.006622761255119671,-.017526536442783753,-.010789194077319021,-.04028603232029023,-.005696164031687334,.1397321836105699,-.04284104175594611,-.030912602586234482,-.05061285701670149,-.014451167351557435,-.033321133339262024,-.05328285157863482,.008495658270799577,-.03339861810668631,-.10205034437720886,.030196139746642148,.2111090058125159,-.08571158678594976,-.03076667731951701,.006500592107532695,-.03210762330314061,.010380556950672306,.03767059594921794,-.0562060877406645,-.03260370052730352,-.1561008405998785,.15115473184883424,.08746800240785815,-.07971426742988837,.018202271840872142,-.004510543134351204,.026832614720378654,-.043425866989209555,-.02606652386909608,-.02528972705916014,-.04209686959874565,-.07092572120010054,.2353047649955322,.011520678728863858,-.09581658456091145,-.018725466710660395,-.03704855812065811,-.02682191249783396,-.01958185753544785,.04467674875991068,.02880963595396352,-.05826188687569988,.024776575417213054,.12549740842491305,-.03592912939341686,-.08711888567377409,-.0026901477265302994,.004623747514651455,-.01805029602659732,.01677903389914825,-.012651134169698123,-.08994468500400721,-.061952592133401846,.10990524701743055,.15037999590612067,-.09016358068481367,-.035133862878716476,.019258114736171422,-.02301007896962138,-.02628302255772117,-.06621484314682742,.0036081782275008047,-.019205792810695364,-.020171831093293915,.1989806157237472,-.02415868145760247,-.04808238946626517,-.027408223538038137,-.07552513961268857,.06445412216125246,-.05857538201324869,-.008636818611504817,-.008603557448920447,-.06007705027057858,.045971736951263456,.1261833313396889,.02241086029687553,-.11049746928652586,.006961916938878258,-.009411296340127936,.015502770454642434,-.04843838105449936,-.04682917755552031,-.00022238890926721058,.0014117579120073859,.08952534381204688,.0791414649635066,-.09246249793068118,-.01804897261050772,.0014867057354299527,.004759547594927055,-.0017287964469103294,-.027304885422683407,-.03211096685661927,-.017611444082195685,.07341586774044973,.11601887154016219,-.04434827491478467,-.0984071844483927,-.00881828136321402,-.042990020804917144,-.03940265377754293,.014836527788627827,-.05063500634395848],[-.06870061977666025,-.032923512495656206,-.02868483865794043,-.027346807901848392,-.012437513369475654,.04530776482700738,.1414696366919664,-.024737285685323483,.021872256378449306,-.029614351891534337,.0014704403181207623,.0006144922740007053,-.065002449904544,.03664380823329959,-.032209783114478335,-.013719980201209792,.00426188928669817,.043978918430192894,-.046107785040272825,-.020623098141049494,.09266822988184892,-.08522650911863006,-.047326937943777285,.05689568993385545,-.03886774424531114,-.0917328495389379,-.0024675929250557657,.05478810995731871,.09232475402368089,-.08397650829996617,-.022272456922531034,-.0152787501100025,-.037660821714487036,.007948005039252179,.035560068131964134,-.05192514292376262,.004863455499818217,-.05161245009194064,.06992677022937326,.019603910194766427,-.058129948226766356,.03412046818670464,-.02278922943675725,.005680354742385249,-.011190673015587217,-.04520953921646584,.042701687889130674,-.027745655178843524,-.08307583567399829,.1566134871969524,-.028533516906845684,-.06401890449044573,.007163733294636168,.010946513456513277,-.026171760394870333,-.039176510971348735,-.052625382319528485,-.03261061584915651,-.024151118786911202,-.029592259235384895,.1436711807651598,-.017566095578734467,-.05465952396135736,.05715543878269193,.029811006572219523,-.06133985657961934,.040778203393560836,.011699351049567291,-.008824374183937844,-.13867569479385672,.0070547616779323835,.13839794109305759,.03459564127055502,.011188421962504996,.04842384205952972,.010037686002641197,-.001849752028092358,-.03785572945780738,-.043325856166240725,.008041188746280075,-.13690073357640112,.15427462008814505,.05318588242155513,-.0628488005805444,.0989080080739189,.024336051774163703,.0012517787347508663,-.02085091104539423,-.01045887168510497,-.013997622908016392,-.06299508039917381,-.1271771187032044,.18117010896522742,.12557740084057686,-.13691773676225652,-.022943723539645338,-.023607554390057763,-.005930858697200191,-.029008536818149494,-.11052936897449649,.01676636486201016,-.0299062367975718,-.010995032071071418,.17825885072525774,.052695253789213546,-.1585687154017169,.018373413764860413,-.0626192972782274,.02519282178146548,-.0018928521098937135,-.06784052805659943,-.050794234172886574,-.10116936098857549,.13362153032125096,.3407549635188265,-.12171874249866213,-.21070461874955115,-.08335948599574525,-.07847568766745316,-.029251874573081954,-.22249275032005275],[-.06557132981627023,.05738770283308524,-.13424650578557906,-.09589658463641701,.24651372455616202,.14475023251856034,-.10963067096889349,.025484984396096345,-.0066750222960001646,.018031088995289345,-.07282721762829031,.03072620730408979,-.044556908489582235,-.015540996433387919,-.05684501901116374,.08563323248437722,.10033013618746886,-.03742948303225134,-.062461794161772756,-.03392685415786098,.014833446973797017,-.031363558199583357,-.023246290106997476,-.0327584721013548,.02961216484574446,-.09820928377189234,.0779439521252258,.09567131375265248,-.0832456125771979,.02090571766159638,.050810743632591124,-.0391322080110265,.038703668840843024,-.040633395391036504,.0006752785313583094,.013989351386346478,-.13054119279823606,.04516367083208646,.11112335558160061,-.06373552516471757,.03778245134663255,.017424010888546733,.06158322351593924,-.06367375205409963,-.08535776536497154,.03471529887784667,-.0030215396455599607,-.07451461098895126,.12038888042278573,.11914516519976012,-.06649815958028849,-.05748981868984826,.02124787410688792,-.04339580161445786,.05609240585926381,-.05090562582130901,.030755476067636615,-.01704186923067369,-.08637267081993893,.04370717517162562,.07172909488097384,-.04617200925522033,-.12569107869407672,.06277755106184849,-.05487776937287737,.009849298301623788,.042534935799133616,-.025427465203307967,.004850414083161267,-.03453433126307495,.05714138711583339,.07182413008592944,-.0788566890824005,.04618658938424866,.01402194350192731,-.005972411899040125,-.059074101001239145,-.05231144745761093,-.018659392189258467,.01679541713523589,-.04857610065474247,.005696565881307656,.17000984187958204,-.14025171691578273,-.014920288189935977,-.02450105995756531,.06767970387277354,-.05264157700657106,-.07708134460423079,.04250499017663266,-.035988224869212784,-.0484505957175579,.04767468325269961,.055032983271467065,-.06476109655440714,.02029272112323993,.0052680731730131965,-.008724092125284879,-.06060669340950089,-.06911080849629166,.024795838594949066,-.02709793851891864,-.001238691496232761,.015076588937461598,.05587409661404934,-.027944142757713664,.005228808655026744,-.04832118189051454,.0859618445014223,-.0020462600675238323,-.11993808096408821,-.04960087738705985,-.09297380182954165,-.03198034913961813,.15102131486065962,.08275513010266165,-.05812569461482564,.041661463970234,-.03704705799323233,.000876268336261118,-.08028339097351245],[-.0340486219621066,-.013918394846682072,-.06548772211399817,-.04731007365314881,.23782208982702535,.10576669895809315,-.16563976884791567,-.0108553004703765,-.0788364106559585,-.050020076625922213,-.08231163698432487,.004622159286883381,.027970146226042773,.005895316254228362,-.04040394188418152,.08525380530113646,.028249211911977573,-.05679902522817456,-.038359856825438986,.0645616517837107,-.004954534081803498,-.00268722370959314,.015597774984475364,-.018251513667145277,-.059710086387074215,-.05715073284894628,.13137766031471873,.05684248925104454,-.02347708934561005,-.04715337162739789,.0008577029751011787,.011008761901938887,.005612370393199692,-.055914997492275034,-.028097049059282828,.04862452952582646,-.09611678916961594,.13044452791174554,.1272054903208456,-.12259017298086688,-.02244577462454636,.0076033086689639515,-.007813929706646499,-.040902985091359895,-.000980222289772098,.010151778602803127,-.05530879288878149,-.09226196374306854,.07871023494618042,.14963503373654086,-.05960116711405472,-.07591037274393221,.0697560193883311,-.012391419754460144,.016171610667790957,-.01017022339581132,-.009940859762634521,.05786281891442392,-.05350019383391824,.0023150521701103197,.24267633702175795,-.1627124626737711,.0030389904814953246,-.0019134583602005394,-.03193473372056354,.03124072934772428,-.013447900401826515,.018762854504427245,-.02719410349707868,-.06383461172931906,-.019315034866382974,.1729629692465321,.004777956656449228,-.04672408796801385,.0006375017978076832,.012018498525607005,-.04990623142803467,.0631023423942359,-.05911314871008452,-.0019439172858828069,-.014409167351918703,-.015148208183996925,.158027298534601,-.009547054530539667,-.14207668185762945,.10783009215784571,-.0293163415939047,.0049958861272639266,-.027229716588043594,-.027547849025221866,.011938104583316997,-.054219992876510435,-.09213502026012844,.2366571402781235,.04381912695915194,-.041978283190380716,-.005602932677075387,-.027255334727821774,.009614504323891875,-.04154993190319173,-.03406843633019107,-.012401382536206651,-.041537969321840174,-.04931433365199229,.16482326808377185,.042083362292458376,-.1097240094748354,.06603360181201932,-.007724959812059354,.0029248566859087777,-.08085063161269566,-.057690051594666086,-.037836445771667115,-.09375000983186849,-.14353454214499062,.17090805592445343,.14406736607449203,-.019806817871862357,-.037179860963505104,-.013199402310805103,-.04737800672527124],[-.08935579558985787,-.04359861333466415,-.04068549086934767,-.05631480149874235,-.06431725727173337,-.03630570340246155,.0871245497432262,-.025232182382037796,.06076258307108177,-.0169324426881141,-.04097456182492439,.0011692733530746166,-.023469947694595206,.03936015166522691,-.004433224342906196,-.014202479654525112,-.0704636648773633,.013142057597150633,.0033619826211813905,-.010205721175565105,.039510232304449916,.02016745030270929,.05693801155584716,.03417449164261989,-.06266677460391629,.08390039705725347,-.0039050936206950077,-.12023709783757955,-.01912747727787286,.0681952032045624,.004239692936547787,-.0247270685186844,.013195391150686318,.10092335285374379,.08373297809847169,.09360148822269915,-.028064279101364227,.1530929534721796,.01908068436728888,-.13458558446941826,-.04181911859599221,.023907908538223728,-.0036807630455928317,.007893862945026961,.06400696833171123,-.027474745577589776,-.014962346779522961,.01943103904009246,-.10421624372835411,.18788293784249166,.0038646939965042704,-.021850967831761797,-.07162000950390228,-.00733041969522252,.023479102591966762,-.03299246606173216,.07477193086079781,.11997396053811867,.16652757445893027,-.04345092572887981,-.19633494915962973,-.015120380697294114,.015595534851796003,-.04143571068691104,.07582665057516966,-.006269813566701522,-.1352326255832109,-.13542793759250013,-.07939999295566169,.013399321738180064,.2984644348332156,.12612688550553225,-.08208469016768857,.034499018867023584,-.06088746066634903,.028443725041023785,-.03612203963838308,.005128423199872348,-.04605609290697394,-.18431251645987262,-.209810670926456,-.12018234374910172,.09562380971931125,.012101575052632325,-.022524769880679987,-.04528247702805672,-.012822428753938651,.043771209187441484,.08044224153659445,.05368502763886268,.04066169032092117,-.010274132182098798,-.10557211882546326,-.07359578243436811,.038444068551446525,-.01907471602474492,.012245888918847134,-.0015393549215302338,-.02103651726593944,.05518243063690028,.0440936452282807,.028389644682731155,.00974360403842902,-.041472720807566095,-.05537768479039205,-.01699110904627927,-.008161761925085331,.007601624939662949,-.0066456574053765025,.04056509686862016,.08175131568741872,.050780047897429154,.1155676026022933,.05548306767964138,-.057897491813207046,-.1105898575072263,-.07182868196645323,.06197051129025689,-.030281369882132307,.01930483148357584,.05429693375685699],[-.2437388912119279,-.07231352508050291,-.04197198417546903,-.14300397257914568,.0615225969575571,-.030205439566140864,-.020864680638780005,-.04764788631907614,-.004129658790494567,.04027736046562435,.005909209292041959,-.06142621575884755,-.04922762165324958,-.07000433401936937,-.0642727614873787,-.026633980149117817,-.06574138461396309,-.0510503164030645,.004341077279830428,-.01611617835404172,-.03151537271021844,.037031195841364675,-.1228147574490851,-.030325889054245894,-.04712194689963531,.006945477959475678,-.12020262635091686,.033919560718345204,-.03650146838528817,-.02324945518003005,-.11560461380300818,.03838719766063929,-.0026532986572997824,.06160145270189432,.10391565419224812,.10819008673388165,.06868520306990575,.11775867403705874,.017679110509122742,-.05890182129315433,-.020290611595912264,.0001469059966410502,-.12261361036045612,-.010208071253787782,.25551979619962417,.13824223662087887,.1446794738346442,.13522961725652033,.19144244169061975,.3152710823580756,.11571778386301039,.11681561560364913,.032566473003269106,-.05027812834573525,-.13473831638652176,.00889663273590241,-.06668638820919999,-.10871364490994836,-.1865898629656108,-.34157171141342124,-.3463849380814918,-.011264008251140406,.029142444614928986,.12461122431395127,.10800578593966685,-.022809897357387282,-.04743159485324953,-.01606581136196815,-.012088172884114928,.13024386066616567,.16585917678227963,.08223171490137017,-.1807342728182353,-.23905771961269479,-.0034760942387594,-.0025528511815767485,-.008070327040005876,.035854903717420804,.06088980398458432,.05280523963556441,-.003315996418949821,.12385169566242266,.1882404204902328,.2921006004212733,.11943421064782488,-.07449416534755314,-.03746173468446186,-.02373764880104703,.07259857298818612,-.0004548609529310965,.000742982347122334,-.0015928557141097338,-.17246645124725063,-.15444027225745488,-.13465384352760257,.032776686516006764,.07085980921638423,-.0004770524214243281,-.032343629149890175,-.03998615774381613,-.0747523883878472,-.06985171147299116,-.08281924695145423,.03277817716203964,-.004293778232758214,-.015012757926196954,.01819273756147026,-56098151787711825e-21,.019859569434228445,.03307416609427032,.01657215652083551,.09196410641313665,.07337691110550851,.09847828591365677,.036105178755291706,.05086952098687199,.010385433683375911,.04024210563212227,-.07013475089051985,.002804107584466531,-.10929235377523264],[-.07611894920251742,-.019269106767557935,-.03175453504599139,-.04645565349145586,-.040704384737309626,-.050843290857606804,-.021973706618717698,-.025543401663111642,-.07416056040918946,-.013170588459795768,-.11347265323402626,-.05722789305562933,-.029590820633760687,-.03424362577024041,.006190533489689523,-.009464455719964258,-.04462566755515039,-.10436846800575,-.02868624932261281,-.04109001764788102,-.04615186981661845,.009832594893937292,-.06769577838509153,-.02801270141413941,-.07139685716526316,-.07535307217786064,-.10565554313610695,-.07552279458087882,-.02628396178676297,-.03103543937362352,.04598188141517205,-.029752407317735798,.011392587697051898,-.1039429255200454,-.03476444142769863,-.03784605600000727,.00012123885743986484,.09127870654753747,.14577205157542866,.1104215855219802,.18869952301023718,.10738370259626208,.13268927139759373,.010378228400827957,-.05273440542676597,.07627991587110855,.13003488750036463,.24685954687761555,.21183725748584104,.24704340387352622,.22867523573571288,.03692105718898259,-.028737222239043028,-.07038461578867175,.0055155357845693,.11568430941686651,.10660133014829948,.19511953592195094,.04542248983932193,-.0757682816724795,-.18361820859428674,-.3180407296251035,-.19549450758187809,-.0779951641446663,-.031296132745874644,-.07732791740627362,.1287056402740756,.04148651653515334,-.13922180905243858,-.20395686432544152,-.1572834919140717,-.07216672289336687,.08656396312924423,.10757801321268952,.0818090030611119,.06672406040192093,.047445258557963374,.01763919853891298,-.1058218276867447,-.05675437854673249,.04822435235570756,.14306872525152498,.12358807932424302,.07172675453500708,-.018593224747300865,.06924719407023926,.002973789338171648,-.0012683824671753524,.005861656242400579,-.03995517877699061,.06986818094196388,.014017003861568525,-.04660091093892585,-.04706833338566816,-.04668186328123152,-.024440679090069646,-.037553368502167325,-.05913830213731215,.03926952632374346,-.03380315978502683,-.016677251343357832,-.036287370622927695,-.03365315850639354,-.08105461811920786,.02244873177796554,-.05186460570451614,-.002256458892453801,.00655005685680992,.019613695988714784,.03567461915717384,-.08813793560494294,-.0498610068690889,-.04652333525032509,.015602894296518968,.07030267878057928,.025611762172576102,.06845737037990568,.035739036571478075,.014800222944481767,.028993857532204525,.0267735236457695],[-.05878986641924969,-.03992289616881476,-.010605417103711993,-.01849945772971233,-.004865080190320413,-.060301330529616955,.000318344693392425,-.12557104846760686,-.08000427404698846,-.13698273850528309,-.22799077610365462,-.025563254532452423,.031596931721125744,.034180802606017344,-.05037968319057705,-.03690057459729384,-.020122798822353932,-.11425996362570746,-.08244994909616676,-.12939384502163268,-.015453432533256775,.1652599896996217,.00547338995617791,-.021933035683807854,-.058344539474112764,.02296171324966527,-.03743706837426452,-.1277856597415159,-.02889063933688247,-.002891920932796374,.2694864672144822,.1755823507659644,.347335943805435,-.0990056047654185,-.03282593950620348,-.06517444533813571,-.02845735040351216,-.06260237229850985,.03202239758295789,.15695159271707296,.3415429967359971,.20280139720653914,.12458150522764966,-.09337572372774013,-.0722390206835535,.009094716391750565,-.04438901528392604,-.052574599103869434,.029479831254029615,.269248596916258,.22826750438753873,-.0022877017320989818,-.1114646531276304,-.13529114203352183,-.15036111092012305,-.08584275531476493,-.024536907507225265,.00868908074973005,.02194420964235891,.16653403493301283,.08152009064661242,-.14404674546435942,-.1499010254142704,-.11121323411132536,.0010729953777799395,.09809523451113474,-.03422119724863869,.004017596168495318,-.018012784825030465,.07321010680580091,-.007227210625433467,-.015972640001127802,-.06100368766466495,.05483342618811111,.06757633914572526,.07412701786597606,-.04242393057967831,-.03733736388249516,.022891392960963857,-.0034269311956898834,.04377607969407446,-.005555019886568348,-.06068485209626889,-.045928233440519814,-.008883095175340736,-.07757461777213527,-.07306857388940499,-.007584522491668699,-.05870405744262968,.03242972778850402,.11139987187807623,-.061069384823273565,-.022957481391546936,-.08145666831072357,.013486103859614872,-.10699268871745335,.026815142447461103,-.046958076560392775,-.009564367718198612,-.007812626535492735,.021325652288010453,.027800587316513206,.05672864586254596,-.07588999178312969,.001849623431887229,.02293374039398799,.013435613550251885,-.0308796268041236,-.00494685886235564,.004099219900474169,-.009140816111173159,.10871928144408688,.020712482757044768,-.030869482809578623,-.0019257988508574048,-.011927083397448635,-.08140574063448228,.0639221123679519,-.010456133387573327,.03707660212821462,.08883535592177383],[-.03664125917408396,-.02231878233881525,.024522274312524583,.03344049176094059,.08832531880509731,-.07844722319120005,-.047208492835296774,-.04725941667067688,-.025215781435357056,-.015414996185524978,-.09211510123803548,.04402413126160831,-.009115398771310443,.004897427090914452,.030833576332085333,-.02076523692106788,-.020723615749795563,-.012243854655765614,-.04628981737770624,.01859320434467141,.005145334732878801,.034378456965152134,-.060076223671287794,.05746226251504405,-.02960475988971381,-.03298476106224857,.01979381546009243,-.09180187834560868,-.03956459119173994,.14253192152349636,-.01806439485632861,.012289491688936907,.04911968723662781,.05713145555326994,-.005396850998742632,-.02777303740430507,-.004555343723759847,-.016293864219002016,-.1018126126459068,.2150785308613384,-.03923357354407525,-.01388758790666203,.04550692138583132,.12176852006259906,-.004958536521353366,.012483286148479648,.00022150651974826852,-.004748949499599517,-.05635960141439626,.17519663761795012,-.055694439201051764,-.08219683971653795,.06453774107784033,.04748422973872729,-.0028928449210207825,-.015338697146168576,.002703261150090952,.006749796318342771,-.04024813366872231,.07896814108081664,-.10963403655958821,-.17062543905350416,.22859560603386642,.07851962872419016,.008033015227410876,-.01142427708908322,-.015145649505435649,-.02353286828418851,.009965961234181087,-.02674309919977451,-.04241465458951302,-.049675570929287774,.29646343280477494,.025690805425905093,-.04851122793262243,-.10023827450589579,-.166470124185738,.026747181544677607,.03491899287778923,-.012381071612453791,.03132896084018424,-.03808798675298581,.13554403224476577,-.038600519161136035,-.15955152669761682,-.18650119722295797,-.05706215548943987,-.012769517962987352,.014753730819575053,-.034539139458789864,.006058740052616929,-.009810871341003483,.06911727762284098,-.07124414623757076,-.13192760007023469,-.03181589684860323,.027197733872446832,.044915537687674,.13641539907523023,.05154134410927202,-.023022917497770818,-.007502464706218043,.007530182665296141,-.0593475280116412,-.04423494728466312,-.011581128699856197,.0014665467844986665,.04713569829665076,.015656423092764042,.06601295637665004,.05820047335404656,-.015586985696736753,.0052092264230974294,.014817241711833552,.018388023474896837,-.08667587709882278,-.06704406352277273,-.0035215449899233878,.06416137393114985,.06531849854882125,.06725914898915135],[.0045060454140400386,.0456551203749645,-.006483070071701782,-.003262843608432653,-.010410124902832244,-.03702402040624643,-.03696326647414959,-.09109390602842458,-.11864573227941409,-.0642897976877913,-.19247581164633484,-.001736762598627155,-.0097469459578441,.0016447907097145286,-.040872882087491146,-.014221224057596007,-.03584268905350064,.016146856355897986,-.03984313919471384,-.09313042056065576,-.002374653898420077,-.13830477342208627,.02842845222473841,-.01369746807949367,-.11156935100514298,-.00898642064539835,-.08075286469116237,.012804209858369449,-.06240645031613498,-.01072588083421415,-.0334198537759676,-.013381072105187686,-.1260137612796078,-.001165141498430465,-.09630279416083432,-.03396083363654561,-.07271627207480294,.035903231272948394,-.0503667761298118,.039465836216112535,.08959524095799345,.08032372276092553,.1569423059368658,.13046741922551686,-.10541702655016309,-.05508012611731074,-.008104344189879431,.049795401559017696,.0850501178976381,.33220650657354384,.25591351064686196,.17170416430885482,.11686339946258112,.11405546450621301,.22946835883838218,-.012135608835537007,.08366532451625484,.13743718640771305,.20760286167445086,.024810385626267768,-.2548528703799036,-.3763512092744435,-.27148633180868637,-.10307518032579147,-.07375802107706905,.006322005152026515,-.007161424119159696,.02439463953541414,-.030595356710155303,-.22377146981167628,-.21688041618965234,-.06060439724464941,.18640642704652977,.1411775414679666,.0717157086049539,.013663567087826838,-.059637629532230764,-.07913330438108314,.05150110041211838,-.10958403078776109,.0403576535282537,.24551987265937023,.19850031772812765,.13276295660894386,-.0033277520526472926,.09571728127089923,.006075481161998112,.07021403207490051,-.06029573735270763,.023305858534584164,.03624168330198945,.09478519668470878,-.051030541969498217,-.04858206078396703,-.13620414142167206,-.042785196097045466,-.055491249841953014,.0010026144494500872,.011273492179008152,-.007041741738462531,-.02690303608673969,.012495419954788797,-.004965267489168652,.014207910106334196,-.05831635659918213,.020100992201083454,-.055565658068763756,-.05825785057728911,-.12154724005307756,.036276619232864585,-.11927424459722163,.1109090327897103,-.08720458924414443,-.002912921205281794,-.02502839026013983,.012106502056846706,.06861388637866325,.0713742951200057,.09812526384527692,.1403732243896444,-.002956042341701392],[-.08666670845132765,-.06556451914539954,-.023817463535297907,-.020440748189549322,-.07196961406511598,.0002866895100226141,-.04872757269467967,-.025160320872547617,-.07150219876728449,.009494008240030879,-.07238658909465089,-.02515378885894442,.02345985022475472,-.05950332009913685,-.04561531120543299,-.0835197702842417,-.08554321902563844,.013730208280768347,-.02114898129517523,-.007316258817724797,-.037712812535064255,-.0747738009766015,.03462239265337725,-.02547365067836567,.030186212545732116,-.019963247487852623,-.04969209404043104,-.11327298065324004,-.0745192272171176,-.12603792583344542,-.03706399784431323,-.024954205133118107,-.08373596490537769,.02475017354637457,.05933028270181469,.06220474996892193,.17133136972067453,.1612164822474685,.16387294452638612,.05830811732360376,.025830807003138445,-.04347998217618816,-.0416364296879362,-.12914102690849677,-.04010936033682415,.020146168363946934,-.0014664956647692795,.0913420164679114,.11971706786628006,.23880056181382195,.3099751928891531,.2462192594400915,.1858678558103501,.12052801882874073,-.0034211287368824117,-.030529992172357766,-.03229057765056662,-.07619354278341188,-.1960657681886227,-.20015100244650072,-.19677279724795954,-.18308786989283266,-.0005571348010621688,.1374350415823574,.12949126333024466,.20559599476304927,.02351134428016869,.016946777735827437,.07362396828619763,.06564932347225631,.06269941357959752,-.05017906172626907,-.0922520621441229,-.22544582106641978,-.144988552828773,.01919825020697947,.08296161046033787,-.019486237898005958,.011992512029289193,.04132998105832346,.07636271244077264,.031761554053674354,.15907477211435514,.1033646508693545,.03986612649674784,.021911878458555786,-.15923424669690406,-.013828911493878555,.07621409773017977,-.018094163035829308,-.02278410845419094,-.07576679032280903,-.00479472472165271,-.12287034163039613,.03115869695322046,-.051655022084203854,.0961873164812637,.009567098414075013,-.0316236624247789,-.05256799777879337,-.0031420233178607662,.02330873392779794,-.0023387082999069553,-.009448798609391264,-.04582399432870362,-.005481024602380563,-.08125791057512843,-.053087043188049285,-.0010084105650565306,-.10300285383556548,.05010294929397674,.039084033656922076,.0007826041668727857,.06658472055870629,.019512702741612473,.07854049370674819,.012933307469298647,.061861312662757253,-.03774862123595534,-.044013957061032435,-.058653414400645094],[-.23765593793991233,-.10644252010202958,-.14205331737791968,-.033409658821102896,-.05174652574003901,-.04902914905506061,-.010142689387288009,-.045800121111205794,.034452092003027894,-.037462523290761315,-.0526175683528874,.10954838938856398,-.13610118046500422,-.009547151192997195,-.1270613223195173,-.09222879836177242,.02126365188275801,-.08002764243120157,-.0100550311904971,-.021203318677089,.016576191285134906,-.028370386427869553,.3329100308690229,.2809010603820785,.12847553299199477,.03379276394257304,-.023904470117744384,-.16851016358623308,-.0060729181420751625,-.023245122034615213,-.056640550891660243,-.012010707479483837,-.09877409447514467,-.06450432755021224,.10265691959773923,.2555423371971479,.24276990386303868,.21966976582871933,.1109109095262635,-.10183584175603527,-.08745964479530179,-.0029720828981545685,-.00012924753214214532,-.02507997701344871,-.08643506110440782,-.1808754771319409,-.1135226786257817,.03288961120236014,.15787019926944854,.23051337575410985,.14879854133516468,.032437611765298205,-.05705919651139533,-.06930807765797053,-.08235606459943465,.04228548674166778,.04341292393318395,-.07226482693958322,-.166891794497269,-.16026349114722624,.0284748747846941,.1813119848910822,.041852912264988044,.004930652716399964,-.0008324974963782924,-.04783199637200942,.0010252465231246899,.017497628114831826,.0740319720382964,.05406275931212354,-.004878867885803946,-.1017614042122941,.018693005132704797,.007621049297355767,.008593458603581535,.029130058487575196,-.07672234087840843,-.04443504101988021,-.0419041810848098,-.04218165703359543,-.027448364698935662,.043452694941417874,-.014281471541844684,-.11364364120314924,.02162434276722493,.059887867734099376,.048249692701759446,-.025917915651940925,.02805763343822287,-.035965266748084215,.010590677166796214,-.0612326934312252,-.057899063583557495,-.08844340564057801,.001260097739806506,.015191608284153623,.014315608183696132,.039038170262391945,-.01107037296450485,.004467558279334817,.005152500191803518,-.07685640846438324,.024632015663543207,-.04693364754890696,-.004311800945201054,-.041968903018102854,-.01569526374931584,.013525540172630385,.04879677361470204,.00035467155966114033,.07190119836996509,.016274926781300325,.07092347738292792,-.00882484521729196,.043457848227967125,-.01463905425635062,-.013191689698509215,-.03752432074947305,.024708931479837257,.05708661405727926,.005857613973619061],[-.024541961538258487,.03267163162338621,.11772757167816214,-.0341742331687588,-.0717426324714492,-.16174536289395333,.014164562611569745,.019531072825155295,-.054978468415161165,-.0038956868428951796,-.09019611379000925,.06481225188516541,-.0472339389168712,-.019133679594543138,-.08094811594870567,-.1101849445159255,.10726549986933923,.11986161329611322,-.1389804237872641,.02946980586009676,-.0699411974612361,.10165481762063706,.0042591037232074525,-.04934754729797832,-.08366141657178541,-.08765584371719554,.020522117345934385,.08019181740581913,-.15728279592142505,-.028885847231444647,.07354432109552318,.2070634438107788,.06614427870545567,-.06963188166133302,-.0553872708879464,-.009915896052403297,-.03971779391566155,.14583324737347106,-.022727060768185453,.01771337471880642,.2806207518407471,.07576339464353285,-.15759577923577814,.12669291481079187,-.0065957965533044935,-.023038500644189407,-.016203548822575214,.011443563605701524,.031044733818071997,.09939000939660528,-.05047331939795989,-.03075072393685019,-.15956288120485115,.01286776308068685,-.1670547469453125,-.04796383196176479,-.07740295582740828,.025311426471354537,.040894848866229114,.09010852492868432,-.3117498185712026,.059978928418208476,.17392049002395632,.06821512672796996,.22655017146929168,-.11277740982522262,.015117918949874534,-.06289972480687755,-.06994549012447958,-.04490974228702188,.14433444462851913,.2923293722639599,.1955873798585851,-.05785071425898121,-.014726496195370711,.08884076116031449,.26941150721674784,-.05403377101100326,.0111591965306495,.024544359195103477,-.005010275987762103,.12289773365466525,-.042268194241055185,-.04507245610456721,-.023985660885704002,-.01877664162645465,-.06487210844107691,.17923288498496057,.017718431179447353,.012676757235305675,-.08414191856302267,.0927046391653705,-.14741704405082073,-.07740529352468248,-.041954355353188345,-.018944672617029513,.060652295217796734,-.04456309707948054,-.04624883612665029,.033353665903115184,-.0018617038323594237,-.06767774687847654,-.023333614214616976,.0136221936446786,-.012602435194539463,.05614191590875041,-.019617155818133693,-.09341602139109267,.025935720217831887,-.2107611868683418,.040245343412419005,-.07718887132622963,.01421259796769439,-.11506917731449372,-.08020994495632774,-.12403747829586499,-.034792135391462455,-.051307124154093234,-.04447890407041982,-.0424021340836127,-.07481694410337217],[.011580340758841009,.07646341230178315,.0007980340485847198,.048838428314634974,.12248324878819095,.013743650358534375,.01886113812138237,.011586008838870166,.04538974603279466,.03169337659425382,.07498964911220182,-.009866261755352353,-.10340488386695112,-.07157216043448571,.004378747473831513,-.07778860136521136,-.019559075604586286,.012039914910358105,.0018614793888236656,.017976562122428465,-.04708343149187328,-.007136790096560307,-.1755555075346009,-.0800290909454322,-.03180022376907658,-.05759734706966019,-.0225914309402037,-.024015557136778228,.020306356095828103,.007064686590984591,-.04974550929527993,.010918207861832434,-.007975957405642796,-.057844329934535914,.0404150927566851,.05051297898637875,-.02867983030295244,-.08887808505812922,-.11596341833461316,-.14726999841028157,-.12186458373388864,-.013719238451893214,.003233782779039059,-.10004453617576921,-.01778352056711716,-.043426790290178846,.002516237987708639,.031180239925685315,.0925649386768777,.021358915086836516,.17681853360539368,.06626948027510339,-.056798463424251405,.020214558939605977,-.08873014020716714,-.01904345584185504,.1214938649443671,.03967073622873205,.12658659654781676,.25102106759056364,.313616299442317,.22183627286461596,.1359746158531317,.10115711474812561,-.24302403404704537,.00972961252553064,.18356713494692423,-.026126940847291485,.03441669500112385,-.004751712035568109,-.19721799705664833,-.3026191738381685,-.3148196023147316,-.1434027289225949,.09324731668986243,.26017905533217356,-.15231835953736883,-.11886377910271781,-7950240878037973e-20,.1499516734816025,-.07737337854954085,-.01599863660324637,.2521561754016366,.22726143797909176,.05176193697442563,-.07037576738487816,.03930414272863277,.046344087243253736,-.018432448385731964,.22509099226938978,.05991765954553817,.046242964966830113,.11839665900852914,-.19506738398455795,-.14025844275720523,.057466302603268626,.11019012358572904,-.013541932475265537,.047028476991846445,.024667584373991497,-.0058190883316349695,-.08733652527364544,.08909615487577643,.06500967167977309,-.04333820555710416,-.019092524599200814,.14832868404659605,.07802106964087593,.07072421293402839,-.03135841096502585,-.07295871402641475,-.1311266808316646,-.08626374008281915,-.07284124228253856,.07704292723293696,.07756289974428618,.10315256178304716,-.05345771200065474,-.04582744733899361,-.02900391837847402,-.22848349838247778],[-.06905121549035584,-.13695919912679141,-.005656327528274977,.017174473739632906,.05475099046543196,-.059932166353439724,-.015330830129175563,-.006819228446751612,.0012622017178931346,-.019229773264106312,-.05976102432266391,.07869285696972217,.1089393724650921,-.07568139444402566,-.20952756667787314,-.005312913294763244,.10044708684084892,-.11640309355112993,.02435615957399239,-.0012586164900474876,.05069107388375764,670843932146694e-19,.20191076124513427,-.04518113305913338,.10144127341109486,.11705452040763065,-.22632970742930147,.0184688808155756,-.0013541832015389887,-.12017877991510166,.016842236983854095,.052652180804933044,.08314551113070343,.057329748095278965,-.04037471277618378,-.11575057028044615,.11707621621679364,.06967278501868657,-.13863634203166464,-.07960798308224916,-.022216919274236187,.033593966744265236,-.11362588566413499,.10269722191626784,-.24155215048670942,.018756954826990843,.2795615740189987,.039218371860729156,.07358848034574486,-.0448889991570369,.13769429349072093,.0032477373467352548,.022428521170885826,-.03846564053828194,.031154883554520594,-.16441653723937766,.23625286909405968,-.08142843240593813,-.011107263657897232,-.06266640020700553,-.17075494746168615,.27269490990139,.031157268147637196,-.055470185891144386,-.006952885879328791,-.05343628199397289,.4253706841445903,.018283114946247542,.13283560236845615,-.015069149158958085,.10328347994406929,.44999154699931465,-.0011928954570129824,-.16086510891352077,-.12774404557332408,-.04209917936869759,-.0018649195557395998,.24605932528385696,.07429826498160587,697844776116844e-19,-.05213562694105044,-.08674501781876036,-.22499073514863255,-.04534478939567861,.0331080659138004,.032025942933416617,-.05369969730872638,.03362435602342259,-.12434062876294572,-.13435098170091592,-.10102320426887956,-.10333974326967209,-.07274410409852337,.03002607925519314,-.027686487813203597,.0035344601119742178,-.0595921808234547,.0313533871549327,-.031956460680317295,-.18985564540590008,-.0666739375710196,-.030281628842088536,.015287505098408646,.010680344185151468,.04431667406026578,-.009200214429480782,.044711089149172344,.032936423173475296,-.028902000094102702,-.019831895072516134,-.1083289835481895,.017001459487365853,-.016581037303639058,-.04745248079680795,.01964408724082841,-.043525154566764424,.02279365672743948,-.031968227415916144,-.1191326261973889,-.012951530456903462,-.07794590627618334],[-.004218043520333323,-.177849827056837,.10345176940428125,.14691821176034053,.032856437685713946,.06990618872851263,-.006394511069391708,.012858674522952751,-.031362305638645026,.04878846413475773,-.21008276813725216,-.14262226241092743,.2735068267070019,.13675983935772454,-.29666625074261765,.1307319827053882,.05287935422186301,.2081906011712086,.05469233552333722,-.0707121892774517,-.007230298162275778,-.037876207980575435,.01620529896428768,.032611323558465855,-.21236590603680106,.19488138090854343,-.05018368888799876,-.10106171926311576,-.19451804410928483,-.09757027333480761,.14803373393480754,-.11936458691698297,.09035709161416731,.005992345500458018,.025455653887793486,-.019228242751246096,.08419178533389118,-.1088352303605908,-.1970966632622524,-.08465377782965226,-.08688814478949355,.36808967859442904,.10964208390108912,-.06453781682173701,.015795651214486534,.0372255583573948,.043017883593270814,.11952788902899536,.10395017914010175,.04553068266111155,.05441345422005224,.24912633653507255,.002223137297252974,-.10580881478072197,.09008761390657143,.16662136065460986,-.15730886509144254,-.09124852539366271,-.053757621594197856,.022178794252692133,.27116243919778504,.3386687989043923,.14040194814605061,-.051936697245067276,.013903415563632955,-.06567603955564724,-.128255822012439,.19222801891437483,.06617668613631897,.07380389825587082,.14569502232430348,.07116003048056466,-.009545659600963374,-.10489910337220464,-.0814579207091837,-.07898537959076238,-.11641729288088618,.02271274135586502,-.04078357320429621,-.005662258943002986,.003683593255068004,-.06678030919384308,-.12713315993774849,-.1586600519695244,-.06332858622223766,-.05575975878394748,-.03745808657448742,-.02246068529533081,-.022028900024817097,-.011882201801517509,-.046972799168275,-.1470120455163894,-.037217728702544514,-.08283121886988569,-.0016295615745458014,-.021758715372862947,.059906725662667415,-.013176728966978149,.06451884578598786,-.04090749352173143,-.02724481426696284,-.014614954526350594,.11052684024818323,.027444907166189095,.022162414399074806,.0024547001841418916,-.01609068146442251,-.058966580405083346,.021584412865348603,.0327652511050653,-.1716263843502637,.03852569660342458,-.10090104298395008,-.08275548039706716,-.12651405684060268,-.031346851498544215,-.051126139081003386,-.08804630534441346,-.003187155224522592,-.02711013335703315,-.11431300136421083],[-.06692422713534293,.041699164002372696,-.10385522794561593,.055675362062145774,-.07426047046232623,-.09118996048071717,-.045789683018577006,-.05340854661614097,.00164106322835709,-.010001962022561817,.021791861105379333,-.0519512913238683,-.07020062246220365,.09727987658203881,-.15048632688284508,.12149505097298019,.015842805768137305,.01783019614395083,.028679225099310354,-.1309301585947812,-.003272424996237158,-.0763925607801052,.023827921599709007,-.10048639075186741,.05764773480097791,.14769797654526404,-.058573134153914214,.03656647088725989,-.03811300125261728,-.035949645768287825,.1321495021982136,-.11750728810678948,-.027309528175229383,-.15554238984918572,.18384157344434507,.10897982741577553,-.055054919090396615,.23295461106984391,.16692460259498326,.3435082179560621,-.06181893528790025,-.024811829586858465,.07996342931317071,-.18727278866453625,.07713408949306179,.20554995099374251,-.02510860245457273,-.016911421678591866,.027522221377421628,-.18467242934043285,-.12870450689623072,.2705100330044119,-.23570033354568337,.1600690210988466,.06077273125729859,-.040057046042739526,.0061976917126070254,-.21240599027215282,.22776373257918395,-.24459850621169732,-.11110091474536704,-.32900610024199545,-.0659572745932869,.38918437667082284,-.03706198899848393,-.013214304459370309,.11361559841851943,-.1311609141686415,.26148934106645616,.13109860511874102,-.02559270333763761,-.10769559173489475,-.029541835495651814,.21030527945911404,.20083517469185433,-.15455102744651888,.09848594172144295,.0537591442107843,.082713231452363,-.24255028029402606,.0257336570472612,.17680889892790308,.23330773415315006,.2775277637359232,.17725610536084593,-.16258826629493126,-.17144766528315306,.08364442451113455,.016994501600820736,-.07147739754052639,.07491202436334046,-.07565486524045649,.021346987911851578,.122851568542261,.03174117674501058,-.07971191921163676,-.010975662352579296,.020719019955012588,-.14947464235426425,-.05912634010598853,.025068359943792605,-.07695432573770543,.01069978220983156,-.03572638016686003,.010452571251196202,-.02080143368776719,-.10029057450694524,-.05347120776294563,-.048791402971955875,-.04340697149663218,-.10411181696202407,-.009611579536761644,-.04012233817738498,-.046812122680620266,-.06405811241708922,-.14541168506254615,-.07567973026400644,-.03246673865673291,.007979069550343144,-.07581427323024105,.02030348516686146],[-709566052794347e-20,-.09505143818296452,-.08788157558086013,.004706240869816247,-.09802726327071064,-.0027616522983207395,-.0972271272799842,-.0630007371062122,.1183446266588927,.054456621706851616,-.009941350269921295,-.0701391953356735,.058249435624697594,.03289065810180454,-.07790879665087327,.12060553802938856,.041916937919234294,-.12018601094319402,.024991064566815515,-.15610551053004948,.02744736184155717,.006169180646906348,.2227792373999314,.07777153698627623,.15813994477460777,-.017009298898611493,-.14311974342433334,.17959497330783272,.05152575484703006,-.11409305598330613,.008734804721459079,-.11631550153784051,.014926258001363192,.035969081785568666,-.05362584353691356,-.023997302411323432,.19964826933410396,.03609677601766327,-.0492108086280641,.12245938533273446,.06061126929931415,-.09579693275136134,-.06951938657502774,-.050249772835886296,-.005837542816139126,-.012563499903927425,-.14780320613165895,.031772227910289275,.1340288392048273,-.15156587379880926,.12631446141014752,-.00528899530076795,-.001966825944666885,.05403033642006514,-.06363140317086635,-.3491984282017457,.08631600223051457,.1498086851219177,-.01958777908962751,.12206293626181336,-.19933801771288356,-.04802912870685339,.05260106817645469,.038693350122585096,-.09300705047400432,-.02556334426459282,.177347641964092,.22163601611492076,.09468068745167789,.03798535351360027,.00888763906212247,.3324882968804432,.16504809583361016,-.007867568306585793,-.004089442342142393,-.07388229257667839,-.023509082885282934,.38130178103352774,-.019291678040942513,-.08684344856036832,-.040173020823503824,-.04644318688990192,-.10185859440346755,.16438891805551265,.0026682289367386675,.07674917445874799,-.06794769221690736,-.0010386668473387935,-.1071413883705663,-.03057659181029552,.032786203858462565,-.005551088212040679,.020069023492512786,-.017109613552384946,-.1436550284492504,-.01671177936251748,-.06988612362481263,.011359667056578288,.0048980919655428265,-.07113085832567206,-.0655454347719733,-.07979468812911322,-.06972764987510671,.057019363580092276,-.021992787171872023,.015178002477788638,-.00020471363886212166,-.02551443073604223,-.026882894230500245,-.04529785380524637,-.1583259300662112,-.03142874931209887,-.006288840890221775,-.005780758329521199,-.08771917581213398,-.014850613830471766,-.09857015749334436,-.1178588681684648,-.058161768326308934,.02549633093721411,-.027500922923648384],[.03338587212363374,.029449410773330013,.05037316576022653,.03375955332056181,.04397821217557251,.08318007698295568,.07168667676840466,.026805901274190462,-.04021294852733876,.07445576589969213,-.015556797943286706,-.005234974918222002,-.0192416975214125,.05581160077211536,-.0615556921400091,.022157119108767706,-.03749977104188705,-.09184201339517832,.0021346112094529357,-.07752844587058055,-.07033956942792571,-.02184378008695914,-.028323350880137224,.00011164923792164605,-.06304367896930116,.0312281473289511,-.02781451796188883,-.023586402460836806,.014274870264679794,-.009911294862428394,-.03942160773539444,-.03612469475518851,-.14334911700158648,-.030906231546069748,.02645680536402054,-.055731905472351545,-.09979102306515067,-.11300163966955051,-.09670230764839448,-.14134937562707614,-.0957620993423668,.012996731697811542,.061452509807262426,-.10845706522050219,-.0959545356508271,-.026481658468726504,-.09342212328404359,.025974710463679895,.048411867352889076,.13854747029920722,.008987793963835353,.1412865429641629,.018873766998065353,.006861932826833013,.06602899875587977,-.0695769909258018,-.13630992697783664,.05326103549591463,.17932579331025728,.20451416645740492,.2541788583442864,.4279401171911464,.08044763293045501,.06080781290645063,.05097923191228729,.06872455106216999,-.07958512546717691,.16947242780377064,.07175039956474313,-.17602834598556363,-.20609506703378996,-.2758518326523662,-.45996207117951626,.04197708539224045,.14013188266658397,-.10129069427591146,.04203209765353061,.0010700558006018247,.033269813089743,.04526128415979727,.18492968093047082,.11250515788380208,.07914601199788789,.27604374526273284,-.2933737982490173,-.03240496208140364,.24482947691686244,-.11730122219590641,-.0003930817307346082,-.08285521046720493,.14722185737303153,-.050887412106644436,-.11313790447392723,-.04597183780354573,-.129764526821759,.36520902694991747,-.09182199979949662,.08586439033749481,.07651271554227465,.1029210140799042,.0027325839402362467,.07058671033367886,.10533730048009346,.11195874976952475,-.07214784390727155,.04958613688607464,-.03105073259803546,.14407295372271284,-.08558760630063905,.08722880414707304,-.1719062867308017,-.11561123789185015,-.09287516888956364,.02930881212576048,.03997500953017151,.12185883649720056,.10737184929932188,-.039136971459624983,-.08075374206140308,-.05337735427482881,-.19749855557352708],[-.07885663149000183,.0286097540412072,.028065667582647003,-.02183404125227629,-.07173164422917319,.04194350302169928,.0034420782526643334,.09985241677210488,-.07205432251463359,-.14404103188347261,-.09945327244261506,.030831458745725907,.029895496253457346,.0015406398850859385,.05063743421782619,-.06153637148212447,.02259540959954133,.05829928062976937,-.21504560821843677,-.10742200693101064,.13531193618860787,.1292569094640518,-.0232289536460595,.081512184345085,.0005579866070073835,-.09802380260257147,-.06693386993184158,.030281268644703027,-.19700701283846223,-.07452246871817525,.29428494587030196,-.01935717600415609,.0978856486314639,.08681975155019979,-.04323149220650484,-.018463852192367017,.06274538327106084,.009297134801895708,-.24863827359607188,.010777357730302948,.2316312466976955,-.08532957550855783,-.1144533554642945,.08380128540268185,.07583092703097156,-.01403260334241798,.049484524164173316,-.021590806395398253,.01544196314913996,.08616243293609659,-.04410273331478405,.12334022048862069,.0731644245704271,.1088690387955715,-.15316811061648344,-.07873748966775482,-.01728488820739873,-.039703575150386236,-.05690551916158362,.18660214037769024,-.023526673216460528,.009711910543003716,-.11068696302980902,-.003332212012764034,.2217120146816864,-.14381135593764638,-.04415943147544279,.05689928131533024,-.0625355584793738,-.09671566572438636,-.042463185527764596,.33605398681131693,.1277199996921095,.02930603789213919,.05296083974268942,.018388136003953504,.5836401595356645,.07836978200602936,-.1477401885678089,.07931057524689336,-.13568107571099638,.03372612864581227,-.19371960002191677,-.04892333637773401,-.07904827509549606,-.09345765767848567,.008468799104924943,.02446655940112101,.02407280777600001,.045654023909503204,-.049520678628329894,.11131277121530644,-.08267195966951263,-.01281734719311349,-.05843634673292153,-.09002706589088959,-.06129154716836275,-.12266871096386792,-.100840795703969,-.03868596960954555,-.034857542952191456,-.0006953168471420038,-.05711976301891046,.06589460663735189,.07684392713262432,-.009922191175709,.03838253342573381,-.0018487126462470374,-.03501906580527725,-.16441171510027652,-.08279114832431804,-.0660471349418349,-.08193261888661948,-.010547381209761031,-.05103836972697648,-.025578508207813648,.00959733436024926,.004953323058302567,-.06106280301756026,.033453744496612564,-.12571424039710155],[-.07943913690230883,-.09707485383450068,.06901363906242049,-.07450576106533434,.07501158747888118,.15666344682780237,-.08119350539206813,.09211868301161705,.1689488283829152,-.06430071189323708,-.10649892578590311,-.20661689203008798,.1403179918871823,-.13859623598009607,.15068161397003726,.0818655854637374,-.014124777365337841,.15933582287539705,-.05612295620026611,-.14961952361740766,.26418260048580505,.00014354663354841646,-.007354717737453671,.0793066834987079,.02092894146022027,-.10994253368145199,-.1737068099917021,-.02379067594900478,-.08691844514295496,-.004334967378948219,-.08595495488157225,-.029420848660444726,-.009050005850250002,.04153099950743196,-.06942356753438923,.24688351427911395,.20546023916088876,-.17598878843872648,-.24389316703559294,-.1901543977003906,.22071277516100238,.07721059904573113,.014424585107587845,.0067033339564058075,.1455775666622114,-.10028307012545846,-.04626376631068428,.17807074556144536,.2320736518816967,.06891900955018974,.13997442592318893,.08843295944139111,-.06619014796452205,.03995493032409315,.04442911147469998,-.08101096747844388,.06841095526480746,-.04805923478806473,-.005252312475646934,.19319439038918368,.22920446006103862,.08610106347614639,.031256459311461635,-.01776966858509721,-.08151486180422801,.05257244191659842,.006514680965800178,-.17665071040880326,-.019856913059721516,.08110204963368318,.043277973324065216,.1177242078686942,.11137298745761917,-.0007326154220056724,.09197829061899734,.0823894233129203,.03402252591269925,-.05309760977925895,.099288071298098,-.10854924126379789,-.17742490622599222,-.1788673671646884,-.14114600439166541,-.0640047728968173,-.0530848482065642,-.001659672063313692,-.07067687176460664,-.09880353864027858,-.055944765770140174,-.005275164418993845,.03200778095516948,.057629819382953605,-.019709560268588652,-.057823914219534894,-.06825696475667284,.027890820691469885,-.07665623931170103,-.02363197722992646,.01970554278030521,.06278002322832307,.00430808120124361,-.006853929899442522,-.06958545243479107,.05669894602505417,.04217344775125749,-.02598409561655364,-.03309760410899597,.009592182310081215,.041800833565904215,-.050819206523713883,-.10689758970874308,-.01584792905503407,-.060764599912676534,-.006217521991337155,-.08534731020245273,-.09747486944116751,-.059282139115269104,-.035577269192877056,-.07501416104561663,-.06053607928652331,-.11817678424233188],[-.02490608975726987,-.0020839929168818827,.03600621465641745,.0403881994066299,.004636782809577224,-.050097408580542964,-.019438803749024975,-.09939845419489737,-.039682250621000295,-.0028157838678664303,.003598249335640377,-.05409942588674063,.09875156736614263,-.13208302404353375,-.18035374659388975,-.004373211123337235,.052329318134350926,-.04335824692063206,.17086900465322874,-.08778890580987994,-.04498040557659065,-.03163490494923718,.07037693042008056,-.22835180537374491,-.05322868536812466,.20061806426747758,-.010253623864425198,.01591621537957571,.11152189577260957,-.12242970393701272,.20444421875737073,-.11370776685859571,-.07991394664261305,-.15288251066153316,.013009551196509275,.24933943719410992,-.15783799994383102,.14723844916068518,.12653772742745573,.08784453193760376,.15842166298167773,.048090301745894584,.3080112755740838,-.11761230465763839,-.09838866239110361,.21453595775800124,-.1423387911053251,-.005787503443497183,.14715035050010203,.03704725946747452,-.05084128184560635,.14408577985508386,-.2038513895714491,.12419113537768206,.16468328842666694,.012860540177512661,-.06025999185508847,.07514960246286088,.3270713887817316,-.40030305735760485,-.2693599411499121,-.27607955331013073,-.11367870913437449,.18759384386653338,-.1163031684096954,.011359887068835964,.09104201353611753,-.023930250513817877,.02714561670275309,.2686781075276697,-.04094404306984706,-.05118534644263647,-.0625551565727482,.1472213528555063,.17279204270125498,-.045587324746883026,.040778081769105995,.07730745420184884,-.04591786188539398,-.14679289792741518,.05885719281090503,.30472542738820174,.2683300390974695,.20924065894919816,.2122502057005108,-.22492319213360987,-.1053571313533698,.10129898309130989,-.05869965855648472,-.056962291919962646,-.05378456732345653,-.06419935629090436,-.023276261041638765,.1463492641852929,.1729800539768475,-.17279567370535234,-.028270599211786665,.05436900311469026,-.10106883014481371,-.14024347735480464,.018313526646667293,-.03798367362983118,-.06530166405225782,-.012949891765581065,-.0946041074239276,-.11534207274853202,.007667464400692849,.06632153982923492,-.050400969350873806,.007421954822023637,.02886957081162436,-.015979869180987795,.004754709812372182,-.02324202738303754,-.10363187962188126,-.08083238636814595,-.0383137546384923,-.08683960034898046,-.019540426477005362,.031333439883288614,-.15193982135608425],[.26630462964519636,.030128294989303788,-.11791438037260804,-.11737308015815517,-.06286110001712555,-.09676604610759919,-.08219931617239096,-.08602044544779823,-.0752465020528408,-.029806813487391677,.24281116497344327,.06704216540136453,-.007344555268005606,.019073705951446834,.02402774328620054,-.02203686579841367,-.041360734184431945,-.021551677954214206,-.020934734000922058,.0016783573161842508,.044653551257398255,.047330499149608574,.07032091853943666,.0049339384317501345,.06828435825594341,.0027795836778768818,-.0466896472535712,-.05577779733601799,-.053408170439317705,-.00010746082973150939,.05364712425175393,.014169718568750114,.02905438269701309,.023031619273586216,.0006672708130855,-.0005146298427244692,.005649120437861247,-.0020259322895197036,-.016498390040156383,-.02244294078666332,-.03502916496002524,.06384615482620433,.0446871850960326,.05866824674961167,-.04515714757144492,.06041887311954984,.04036881154133638,.09923249950644725,.048066185349036866,-.0463249530349005,-.000808878736984619,.11409453701686445,-.00033137478785196135,.03735595742910118,-.00796740767397426,-.049741034524289095,.13611114777264577,.023766455706096472,.05349768798834608,.015733350480013578,-.0638249332597969,.03333056808886371,.027844489959796326,.08169189984293256,.09714592419415595,-.06482817498523231,.01437395739678209,-.04733110712152277,.04419699990791139,.10629752929835162,.07354268917674926,-.04442637013096748,.049683512301096674,.06836545628600792,.08152300976829795,-.015087145755708103,-.001963811552551528,.039051783324939186,-.017850512607641256,.02370779603383788,.06201068601506067,.07378376682337442,-.09184480384092411,.010696782251581938,.08603651471846394,.09459620799914793,-.07405492786688277,.02791585737749322,-.03764201473979117,-.040193374604089255,.0024468858328299675,.1274974581652491,.009340435148458864,-.04037527607286821,-.09011460912780393,.10326418667261725,.02917729347842522,-.007704623160573315,-.030226724173417804,-.02693842944612336,.03299558344045618,.03765528081620828,.06038405550633466,-.011607343174437262,-.08845866375604955,-.008962113021522874,.04133521207951915,.025264577237378585,.032067053817915525,.02383046613771511,-.07934593163277476,-.11617934147005861,.035620949281212844,.10013927849222683,-.04880947594334495,-.11446551821055255,-.09581301797367174,.016305663265873432,.11707531676597775,-.06319976004011861,-.16222515899222084],[.056794304038679966,.10167830608861393,-.016503737435740885,.004676434791165973,-.015979430307930184,-.047920295093506274,-.055022283646318906,-.10379295727074533,-.04971786226231269,.10568238875466442,-.031174132439086774,.08370460395000427,-.09136813320075263,.05726930258403117,.018684874349729957,-.032113253507965796,-.001736967749467095,-.0720797561165174,-.09935581393877263,-.024667483850197125,.08617572294614978,.04004015564413592,-.15099062261616583,-.0006787230318979556,-.015247157304283773,-.05252356534475065,.04255130736990405,-.14444354746621113,-.006548704692133499,-.07184261018986163,-.012850025711011279,.014122793694046731,-.0033943022739370415,-.039640354001140646,-.0031247601407242975,-.04585791859357094,.0019020572673282693,-.12415842588927675,.07389632414409256,-.04501551975006842,-.042377317003355355,-.01887609579498299,.06619955327224475,-.03822941020165674,-.081067787682231,-.03945825059342991,-.02157368864848786,-.08753783022136527,.03336603607606486,.1364118549990795,-.0632052012606045,-.0012659096018193816,.0057982623571657815,-.01152673538233475,-.007925731132165229,-.1412609714094465,-.03496489640042434,-.05417735615198177,.09866273585454319,.3174433337913785,.03945230475818361,-.12302035212752997,.09030770219610496,-.018426534125878427,.00760699176695355,-.0637860179259612,-.13634861844502966,.021706398551087892,.08848919736411925,.24006998601480642,-.03857437629126144,-.20903973825035016,-.028547940107015453,.0885427264994885,-.021390725008154893,.044285016775694894,-.026993312698921287,-.06446598380331271,.12944644855572515,.1908924405658075,-.030480082660302492,-.11056842407420524,-.03093608697570601,.11334521747158818,-.03512914824806446,-.0860177650137933,-.0072168706451755035,-.10752750376129108,.04312283194476934,.16933458944871088,.04045539432256913,-.23664539634671644,.11812030967359738,.07593996965085485,-.10351739032237361,-.03030058989819629,.08687845689896989,.020132080229428105,-.023337176463668542,.1929319867081439,.022201478223351577,-.09910113527342805,.15510108808703874,.06372792445269923,-.2536830626984794,-.11398510745687342,-.06071410028837733,.014445183346757966,-.07806077611983483,.019868445241697584,.008179845346074192,-.058441780232701836,-.12524948970895577,-.042729684478892374,-.10578506496128201,.0827616996595974,.2261084299196532,.1947210740917512,.1377097045002212,.25212791464266937,.07349814208536735],[-.0913812414018817,-.05807962032884409,-.07653050462847574,-.0199353534219689,-.11698549667840648,-.04962140173828169,-.0771326216570162,.15067146207913978,-.050781047593468576,-.02068608682311579,-.07749948573069973,-.09675856739156244,.007757156089556787,-.009597940621244975,-.09956585908433706,.005160048200887023,-.052061725176615475,.21007930845912845,.06515115768429228,-.07131801809693715,.018812215208894742,-.0008644213540234952,-.046564358647237104,.013463679946637018,-.04976028918104694,-.07512005231588614,-.01620573060652171,.20370769256587995,.21631569735613507,-.216398981017269,-.010174498767059056,-.08074439548196942,.0006576254028179337,-.10941455592056311,.005191951424415878,-.06152725313918852,-.01884736889232981,.21787195260154674,.22243219444192475,-.1557520054725607,-.10816017929215728,.005188190760194403,.03178551363990694,-.11820319244612582,-.09195548183466382,-.06588600256520286,.04574145836470744,.1622906548481503,.18370330017469805,-.08132400811582229,-.09689944492584578,.11220947396556524,-.12652409273694068,-.05695408368513595,.003719836141433931,-.04059853236821579,.03930021853282334,.11791439151540004,.0326000042015889,-.021776978247445074,-.04052905478698086,.01854198366161787,-.08573279147037881,-.004251519029603433,.03108816563584514,.1094691647659708,-.030520300750865037,.024588867262970132,.031028281179074996,-.026058776582265818,-.03473986428220393,.04201593006676825,-.15813943081690485,.0988112751465362,.17664760200291613,.12060292796297431,.28365889513274267,-.00988193914791291,.020720424432064774,.04137304199129589,-.021038365304358167,-.09520266405881016,.14910980302517288,-.025721833368892062,-.12819902853565343,-.023631492175036073,-.031597247870627954,.10824280634239519,-.09117342522287061,.0635674456333351,.02172819298538886,-.10568636568278675,-.03165356681046462,-.008747241857215787,.14635866247530055,.137170585551738,.04090240321757112,-.017771123105949502,.038560203534045476,.03924527363234595,.05681529146256253,-.11183679663036641,.0648176591144581,-.0814319418691829,-.03407437639196588,-.11203464618304287,.15240885057308393,.1353372484972077,.06863368720362897,-.03663300646086139,-.0466929203646385,-.033281368663026875,.0071094850495891995,-.024376962431089298,-.08646414280048685,-.04846188250080284,-.08587237831676,-.17119204490022732,-.1254806517577571,-.10025652608610795,-.06772415071796854],[-.11048795383128253,.17729666058333263,.16552135430896192,.034404289623548884,-.0895887248460928,-.009895690839867577,-.092669573892881,-.06203414994882403,-.1302799060080277,-.02774126581005951,-.033782876400120204,.06848564219607128,.07598957414475493,-.03657137794305152,-.027073113771866435,.05135860594109221,-.12486678803139802,-.11937553330158295,.0002767000813357068,.03924294011480317,-.06534165858855753,-.03259120989293393,.009487399520951526,.07722880227650034,-.11978965646742909,.06517562209880016,-.004533068211414557,-.0932109574682729,.20829565218067517,.03440769551031344,.20900868773517667,.18059530210220634,.08054644989894323,.011691715187434483,-.1036261996342592,.08944033936134933,-.18290277626865079,-.17449211585023297,.20463646978781697,.16205227161355945,.1248389858520476,-.03392094388558964,.005053869622726779,.011335298516995454,-.001853830495579134,-.13334091118720467,.1324427244468483,.131632260424145,-.09594957419751209,-.1490575136117396,-.1371680896219323,.07800686073521007,.22398467991789892,.06007709135914392,.08045908915697139,-.044226547302833194,-.02641690246856537,-.02104723651581712,-.022107985555041423,.27081392806687543,.20243579723370436,.052508427611470655,-.08168694542402519,-.02800043752181265,-.06900441348845979,-.019947203774680143,-.06510852357159547,.08730486889571296,-.07707712069010778,-.18137313212262005,-.11403701580048946,.1344871234635103,.23244603542157677,.05512462348619507,-.06646374787611556,-.0914518320725403,.01884922519180683,-.02465434024807353,-.024966200161235935,-.0914245752012077,.07252783149930173,-.06521605983078903,-.11921754880632893,-.1733789390994794,-.05721923895214434,.006742253462665288,.011248995976294755,.06804781118362863,.049614879488339,-.09727584689881193,.008235856768488136,-.015023386519351074,-.05393300053662252,.022181719818654445,-.07860305628683724,-.09699016052027243,.05334168617956066,.03859265838135287,.07327389299047157,-.0027339150021431086,.008723634927276416,-.056654841529851035,.008992940655092693,-.04799211106946037,-.07247038296559916,.013556901031652455,-.0027078537211853854,-.02080896174546669,-.023685877670394262,-.08288532087532409,-.024581734079028472,.011675698399989887,.010268763903630733,.0002772702590928197,-.10403456880151318,-.03132863032055746,-.04876264136951453,.013870483338988132,.009776937951070902,-.0016096606912818917,-.11084797308275902],[-.30333471569576326,-.09815445036057074,.0015410657868983949,.04592945878055083,-.06535599812167714,-.13987052383343457,-.08308856138252664,.08266906631470228,.06190477969807374,-.11069374343220081,-.28290200253357906,.22673155788863875,.1859441593552484,.07185440250312018,-.030528580748157334,.028577245402910886,.03106098503085323,-.04386161528425456,-.04410517667745482,.022159810237959286,.21654680444315066,.302783163041325,.01221380529451033,.08612658552109748,.18984475627300115,.17496536348485808,-.0848622819078765,-.0814565428085887,.01832638457011089,.13673417025774948,.27284413141414504,.09461233565929886,-.07613963041950092,.06293340618732787,-.09744395825120561,-.0684039807496924,.009665552475408398,.09504055208625063,.15936905785590366,.07299508406405472,.03125276372546791,-.16546942109824656,-.16677751455927864,.12669754079805604,.22204531073147377,.1873578562466022,-.03762165890090354,-.15711170707975403,-.17298791364700297,-.08255527320001282,-.14455053081729527,-.22415305552359763,.04254240281544681,.1038139770409886,.20625177708368309,-.1588088902658842,-.07565886555863988,-.021485883747037457,.10891607713839715,.0910928974734542,-.010416568160451598,.06954385232578379,.16542830711077747,.065217336152304,-.0148176716125085,-.2052152901185288,-.14264824540169307,.019756071252460615,.0058040644663103075,.03964333476919486,.15659048313489107,.22864706757459258,.1425465081375903,.05707318638844937,-.05315219130738143,-.03447729148590034,-.07759839544257986,-.0667257839779382,-.06423032552558904,-.08999109750185139,.02828983038805128,-.06612915519164726,-.11896201994465391,-.08255817032611182,.012810697942117068,-.024384133696020396,.015087500169279289,-.13601461458960581,-.07523698032881145,.03901412101119553,.02815424125400038,-.05501391625928448,-.008254101582952672,.002655866524947384,-.02112502002565013,-.023746573840204926,-.04268316477702107,-.059495722156300584,-.01904269481794754,-.12936213546879713,-.026222299825073875,-.025812691605142032,-.041703863747776904,-.0661914684158392,-.09750606364252096,-.05839607258356189,-.08996126773909852,-.0037007256822108175,.0011179813727885506,-.10090477889016067,.06414029876710457,.010238148607735212,.06440364812729471,.07668454711557673,.039151433631154905,-.025802896171529727,-.00019835521728821248,.07184148624238545,.1312516201443394,.0460566582461709,.0534991577638457],[-.1296572420770151,-.037580246387615174,-.0676100817448661,-.10396968869944452,-.05014668114304158,-.11661839201437256,-.0134094248817632,-.003812121401652345,.1455188948721716,.20960814138138711,-.11572556521584892,.03819977177625247,.053736720825050086,-.03378037681353664,-.013778088995604357,-.12296410846003263,-.190779199296427,.06362318419367503,.07271994862581554,-.18712323706253348,.13564826018751774,.10041735856871029,.0663871462462544,.07587510062160498,.10518317164208223,.14542272105614312,.12359189084318592,-.03375064243041405,-.1168093845370131,.04736317769791438,-.0781151584923715,-.006807254606538901,.022330740883073977,.04334500060367369,.00617725620989517,.10018581879835563,.12543189326433035,.29106180455164443,.15950577579932912,-.04101661472873144,-.24664638490921542,.10243965713284461,-.02224934097641969,-.03998099582023288,-.054513454865913025,.10149283919617619,.12490712516373728,.024443018843315022,-.1715648928173428,.009820925644263762,-.0994644826770697,.10892786493077161,.10795471728528551,-.03038255212780229,-.05209374289031926,.08108228681746447,-.09627405093063877,-.03626743641754988,.07518534571363009,.09680822000074882,.02028571579311067,.33290510761917347,.01733913364880374,-.16522028580434994,-.00408970623814911,-.051775053344798386,.0656704707195409,-.03277288539381715,-.08505880848807384,-.11929889732683205,.09245593621503218,.256554614565362,-.13119179078724852,-.09986832974978488,-.03323866904038695,-.014474294906370588,.022015269325752353,-.00687063436342121,.030438728104146773,.03821529450571252,-9867120331248647e-21,-.13106943853344732,-.11029667516487467,-.05651270541297225,-.03509147854934727,-.021024591609859103,-.037796865064866875,.0024114282376300894,.06687276048057275,.06279809114300125,.01586027365169357,-.06641798455889694,-.044395452917304,-.05673927805744089,-.07449061450417463,-.0017445397987308903,-.001856208967092543,-.031296834327762674,-.08037901085504706,-.03293270220964989,-.03946602721463426,.026868758362947193,.05272046911146789,.017821499479210093,-.0812792524309323,-.009824346280975775,-.035827346651628185,-.018665339965729243,-.030414846245718247,-.02539775011840935,-.12699585584653394,-.05127004606259838,-.05949279770541247,-.012977814302096748,-.04020116106812974,-.006300325503666278,-.05957231407273672,-.06087339785707998,.025500546592364254,.056765099592826794,.012716285965905683],[-.05334278564689118,.00524567552363564,-.04737475337063818,.09478107425150373,-.04097674041356622,-.09655255445740196,-.0748818025977348,-.04665790623657751,-.09133063248974037,-.040717971184299956,-.0930767550584704,.0037318258071586674,.001297992392240016,-.07297130643505188,.05769901611225838,.21677924213445596,.06269207737522899,-.04409019581272937,-.023130229334030562,-.021606172607987695,-.016753725645425696,-.08911491869580349,-.018011910259290234,-.048665499037987205,-.03888346831521437,-.1600836076867248,.12324454290748962,.16213596071632191,.08189099901085871,-.026691379256621572,-.0789390997229003,-.035177884757280425,-.0705591930836643,-.08144962945674292,.04125449531039412,-.008240928398008981,-.06410405058088145,-.19223363085057119,.19698561203334053,.07545770589039805,.10168065244977331,-.01140796836176737,-.027454319260572038,-.09690925377089334,-.02776255170402757,-.09943183534992105,-.06580477803864637,.00795764190114884,-.031079452139909713,-.02525499831188102,.13286239727231575,.10025133561412032,.06563726922854993,-.003144015511429633,-.04438351451718005,.05543647864685072,.05989104825077051,-.009852621741650755,-.15354872527543872,.1700617723129286,-.1844295002128809,.06801442722168898,.029876275367864972,.10799501360998554,.08561819985013334,-.10413623068849565,.2446474961421388,.10562029167251738,.15464122158870292,.11486770498168064,-.16275359615761803,-.10100376605498677,.09513892429359119,-.10761116645534677,.017873153892635395,.11423888867213229,-.0018411500448220972,.08687414783248225,.16367347677496105,.0447333862925188,-.09476162327303775,-.14397973597021768,.21757349732675985,-.03452929329507209,-.12834039570251105,.039442131452955824,.052146536402598725,-.0027754429203348772,.09248677146658194,-.10000875137392633,.0219682748340118,.0760962405146528,.26484488873456774,-.06877899802173247,-.13150962876054156,.0011599240934269256,-.06809291370428305,-.02760433387457486,.005512136066048813,-.07484891501437754,.031133754790612762,.10057960203336513,.16473981410325628,-.02165925360167365,-.08482488271056601,-.016801310205887945,.022993395502963216,.017167179382408942,-.05637411208975411,-.032324211286495264,-.01805390985547957,-.05002376514920981,-.14089885860421936,-.13965160319931622,-.11870197019087025,-.062036231181908014,-.04101797266105614,-.05086728667080216,-.05857306982066217,.021580959803428883,-.0426993658359731],[.019902842485734224,.15561506976085307,-.028017485754111875,-.17651276038235375,-.039197701387862535,-.060229014076549556,.0404138970808625,.003932466397300313,.035474887918964,.08618712771613933,.06621142347023612,-.011482759449640119,.02171132608879823,.011537755053333605,-.03184318371407818,-.08491361323535157,-.023265192234759174,-.11448125258912051,.0391810673233314,-.0569989021823593,-.0647768185163115,.06373369278233973,-.0430751726058327,.05638433416632907,.025730822225084077,-.10729102468091503,-.04311799185503203,-.053657854256318194,.01584487603201426,.013290760860429117,.010200015604431685,-.003179387871218768,-.11412253559205487,.030883839158126154,.02146226913689821,.03496986423752155,-.07945610423084608,-.08503173767812817,.11503343538242178,-.10993782268920241,-.08957280215792442,-.003943109423640893,-.04578774281544791,-.029069481413135097,-.029312843103912124,-.0022281839533548724,-.01546117417346161,.08016859253876335,-.09641746585159496,.06816954310974893,.14488842713652675,-.020620161448456426,-.12127975627620319,.0035402670006761464,-.10860121905429683,-.02575902507091015,-.015907799649678353,-.019318209958923922,.027711942877274104,-.010691765460204925,-.11261913121914686,.2291912754369751,.1954724062108288,.0625766137140257,-.03243750875696748,-.17049052524689434,-.05488775942175029,-.008660696452757896,-.032470312195105946,.05011793511142371,.03840976548866489,-.1518186844101738,-.17238837635837911,.17800490245662465,.15774737196971728,.11238684789419333,-.11549538053161687,-.1051441923254989,.029627428418807066,.010047460882148362,-.03595190922317814,.015687349765215325,.10710721567720438,-.04127605106438434,-.23137836087848457,.10813840323639234,.20398998249936215,-.014741356900987223,-.06268340861017435,-.049411487995288605,-.035967710177904844,.041871499068939354,-.07218490385989747,-.08386387261744571,.0987343200723431,.11031868253657633,-.22002867944446203,.12779602690138148,.1421870701595465,-.0011896001696623804,.07936653037109748,.043588532242198656,-.03542457471856049,-.05460945564146506,-.16492582250638183,-.17557350746334122,.15889132124334202,.004150330789596243,-.10134763057667201,.19023517186356353,.08465959220809688,.11510279765301401,.16224249442600286,.1776357621035125,.2213390802482224,.1459621852939618,.02887144459288063,-.10378678936442846,-.06720569157117245,-.088716399430537,-.04110164115872819],[.15920136420084935,.060406604769127695,.05812234660507303,.00477008922714715,.019787104327780913,.087203596056315,.03026419967803773,.017304599070370644,.08557542947361962,.02395859131400433,.12884963809652478,.06859990546641195,-.04556715459324529,.06496044003945911,-.05721799313593516,-.02544770539534373,.0909487087326179,-.07976949894975081,.036730991722000075,-.038480072535680726,.006076468777062756,.062315581478503454,.002067988991471037,.006557971995562371,-.00435179253736372,.009628999934129703,.029116266207693448,.01426370898438685,.02969045715243926,-.08162738342787826,.04685054235054226,.006214888501193401,.018397271891386333,-.012561848571951174,-.04055161952690402,.028504081990583418,-.011486869296661643,-.059191179697348155,.022429209245582032,.07803905527712499,-.015415531651337386,.019964992266425875,-.06650382954835445,-.0013193086595682316,-.1084201925564642,-.03697337790527494,-.0205342616873516,.04074753970092,.053337194618316,-.00116709964776604,-.009560152849719152,.016298910205605192,.007727762688989535,.00037443623014628974,-.19227631613374657,-.13238394826418348,-.030124775371821032,-.015887858135493947,.025013961658704745,.027518775349448854,.024198826147774258,-.047760885812468984,.12256242261650652,-.05585221308136415,.06502609391787252,-.1285269471537781,-.05905811081727891,-.03231403701227359,-.050141311125915716,.08014056175866828,.03577592263971894,-.052897492514335016,.0028741733491999197,.08262808723197822,-.021869185345972597,-.06985407467550889,-.06857598821622574,-.06458470181901094,-.00693137015502477,-.06383573926778226,.06518389497058724,.08557988777332176,-.08978337177854848,.02413243559151125,.1223664563301936,-.00810312413900488,-.10893007981107913,-.04104752003254414,-.04048557535756673,-.018772198351639475,.024153345138070187,.10036333221955367,.06874030640700345,-.10245398888523655,-.016349166098083526,.007038000943865266,.12265704999147381,-.043113460086378494,.013370230023298443,.01672913680151488,-.039288684774408056,.05772847642599509,.04101263878667613,-.049978733723102124,-.03234750606396412,-.08817543486159464,.0998699443600312,.06560033169605944,-.015359581783002035,-.028528989655607573,-.03719905146013661,.15244521122136684,.18336254107941996,.05428784703506424,-.04636903284687951,-.1119122723959507,-.11519151048090097,-.022731910011617007,.11225252067886338,.28560328365377685,-.06798525202044266],[.058958788260075945,-.021876278629613638,.03761247925721169,-.0990051595759641,-.1165516680699821,.021078862330256215,.01595744461688453,.05964768591654922,-.06550559157581091,-.08339527717943346,-.1821393326554508,.08430523075152437,-.025710617818550302,-.0014530727721881326,.062922294533444,.010828617512124508,.0775051244978469,-.0662083607637095,-.05500269560874616,-.06151063081938088,.06890034543684466,-.05553914485788056,-.020784660567228427,.08939823359974229,.1288331620004711,-.12816590368747446,-.0096792212613234,-.11505461495101575,.07319559699956205,.013390797267512064,.06315710679645309,-.11664356591893797,-.0876774999759579,.06406852741285998,.08955232915921069,-.012366311546488887,-.08484181420948479,-.3099283808536747,-.3159112467280153,-.19715224674545362,.020969019898039606,.14193745471028157,.061843173279961985,.07393616820121955,-.01304258854189852,-.07497702247252562,-.20603881883896738,-.07094554080953577,.28309265451797216,.5774219945941598,.312620236031755,-.08366161905609895,-.0039166593479060124,-.007008189710296639,.040088156481113336,-.04939498483360669,-.029191264319536905,-.0811635084847374,.19268793954258898,.21144872967342784,-.29773471400507556,.12406492440813296,.3660537274903351,.09308241356731457,-.024580539876515733,.10110689340406492,-.0629105392741612,-.0034612665515367895,.029116324782821203,.0020626436307547343,.10964075240294091,.06415892337926407,-.21854402897708003,-.1292523299127749,-.07967520029164828,-.01811196962139593,.03595782728121295,-.04672641769659795,-.060929938641963624,.01119071426640683,.02353396464233623,.07256841830271213,.232706372262673,.33170083850101384,-.057955687348093615,-.12545830581187295,-.03926715840526838,-.05615524448023813,-.046609200143938004,.06049884936647405,-.04301666208475387,.02484177970157162,-.09936788476360509,-.16431861879138088,-.15146165000437428,-.001754402651548869,.17032294123573102,.06486764820629992,.15233819334655943,-.032910847411962485,-.007173196496394883,-.008138084970463425,-.05072430724859362,.011173233429224511,-.06210169914245127,-.05230881701781969,.0005165485585672085,-.007519204343792031,.039091511248705406,.07146588912975532,.006335994296771542,-.09563012456008428,-.025392132057811982,-.10041647140235001,-.09792800568202219,-.027282327996318675,-.03811213125147381,.012061424608286169,-.03559658850654168,-.052821862323290544,-.11313037428451306],[-.15324006372195415,-.06196561240414205,-.020864586176693893,-.0004281080429524662,.0730549833543368,-.06134765102497534,-.03146636400788565,-.10327863822100901,.05755843576675308,.011198077448874383,.045234383554630685,-.06471122499211768,-.06701115581177043,-.0057205043684774096,-.0286430154316026,-.037131071599513364,.05374888955175996,-.0541993046517875,.021887370672747687,.016189862073254922,-.019016514253116644,.11379602147808761,-.11165312886440776,-.008749620005268827,-.014474316621162608,-.02625163443537415,-.002710236678190989,-.03099024873740052,-.04127464832894278,-.11453289829380965,.047907282053055035,.03842197851581872,.015082505447196207,.028769815253706164,.01684473164289961,.0947271889151216,.20593647137919804,-.15159924031985617,-.24555118979497925,-.27707522357288905,-.1804892128057499,-.01130767799913598,.1144132283511689,-.014636046617138777,.0791981257095576,.012007403858779957,.007242850158786611,-.18640141319376874,.16780516380957566,.5682630668550082,.34085510546495534,.15391020895285537,-.22202084848747994,-.09319368101756968,-.005005130632420085,.08016678637196774,-.001085626957433243,.033973275724025434,.29561270160331643,.3648275867235803,-.31466398989768735,.06249709857265316,.2196885379838747,-.026684311034055108,-.054686227873073694,-.15194326555534887,.05427824086088953,.07409840320590326,.0050038364543305,-.11139002424195973,-.29694277435857414,-.002808352419852035,.08592149265900917,.05428329480793352,.0411597530101447,-.040069399672292144,.020583515255041856,-.03296830649846775,-.12400399212637832,-.12690204319933657,-.0878643358019853,.25943260806255236,.2546890168440809,.11148837097156279,.016197234685087623,-.035512335618043525,.062529085678797,-.06187636659039267,.042653661514922,.1456886858554321,.100266511239698,.0491063741303856,-.1692085663504731,-.15021472143352776,-.03643779012508594,-.09417454497077024,.05214270146935694,-.02443775761673006,-.04390447075557277,.09732225336579545,.02596334006058436,.04495779540761817,.015315696105485712,.028566823650113198,-.09980451302541923,-.05657460363336682,-.0025488357793481964,-.06692433986350617,.010193965172470135,-.006176595295437015,-.10526334482403006,-.06459141811863767,-.008227384684336793,-.02893758909705861,-.0021874049091571094,.006402070643468996,-.08247369715383637,-.10584367018509927,-.016046741087392458,-.06509616833600146,-.07661098919312584],[-.0395114284194176,-.008017333397127138,-.016551615434322393,.0756169606326558,-.02972213260367114,-.025034558630525398,-.07217122008767299,-.09247418212417383,-.07521187088066139,-.04436043047893565,-.06934898438225123,-.022490503780794903,-.005714731692690812,.052051258112528066,-.05460771691636738,-.05837262123870284,-.06077735354605972,-.07733680979439969,-.045476724941883415,.03077258241421535,-.11620967239502454,.10797792795409909,-.027779187806584747,.042775504075928825,-.029085091874604285,.07066507082342799,-.10670180015368308,-.12972554862345784,-.06118474678273948,.022941312169178836,-.01197768577248755,.1648708418427861,-.04834140930336611,-.026936350074678175,-.04805636203319719,.03247376246004253,-.13513407425749813,-.11294851883996024,.028315126778450446,.10779312846779725,.13718980587277638,.09482846553325999,-.02966219352241401,.1321112375584729,-.11093428808802747,.02916687414928116,-.06579282428442002,-.08256500281821627,.024708088751542928,.2229367558385418,.2388187319246808,.08490311118438629,.04020849703235033,.0765455738357576,-.06123753763864033,.006328444152585322,-.051374467063856455,.06282708429581385,-.036988261540257486,.22358537142740625,.04843740261111502,-.2535321419507542,-.1926104577983085,-.01942234055203377,-.06284764377196571,-.0368534961734199,-.12964946819383125,.044458755188555237,-.12226738775926,-.07599864777666435,-.0662850361984892,.2852615582722664,.3916662609406049,.21583615293103556,-.0005967176380167055,.028281927318908495,.1415042056057566,.029357515776456754,-.007365256806601578,-.018181855688694376,.004505654970761774,-.11281100988725729,-.12216102487292639,-.045821897312377555,.027683086807535735,.044114075431245875,.012960273742704111,-.01033045914794202,.017525421607595383,-.026815178240449843,-.038433562205767026,-.02317646605739193,.018238150229464657,-.10609098396328405,-.007836527408866603,-.1692715238790774,.055230115768598605,-.03859912120101314,-.03008312241420639,.03349878615087269,.06454927378510011,-.054456334956194834,-.000561624340477046,-.12305574145274481,-.052312038879843335,-.006255987324141468,.06665880864100848,-.08366141006543384,-.0050756577353415835,-.05394576278351597,-.0002704114069893293,-.02919342508998127,.0602433231945494,-.018406883366667015,-.031509946993241944,-.02305392310291406,-.14523023321109388,-.08339822087046184,.008380140183402655,-.05452717749885746,.005180865935989931],[-.06584861959480079,-.0532610791207804,.03547393338792408,-.043773076764098175,-.042948902519114054,-.03583976327558023,-.03670964756282482,-.035889928945933514,.00843034240350148,.07095993548137726,-.03999093783602076,.0006291957612527682,.02301560832911255,-.01209375762579383,.023507991177519026,-.004385258375902524,-.017754505089411822,-.09839345133908661,-.02559852615356971,-.09325351786982229,-.06008459884003483,-.00677329546120123,.004732234321798239,.009885455292119864,-.007934314589489084,-.048435067329455274,-.011810163769240992,-.04446827749908428,.02916153717583106,-.05237348591276701,-.012794443685316442,-.07399977065503117,-.11228628800766731,.0005371885615329149,.054814439087026594,-.05861186179557899,.03170476444812075,-.007650152416065134,-.10568592093548473,-.19589466237166098,-.12315650606608049,-.011442858954517257,.11925985331634427,.0010363876176450598,-.099823252161576,-.010168708525203837,-.07718787943746307,-.0660046955144084,-.28363396719594336,-.09330046294742925,.03526227396896657,.1315555866231668,.09198066269231853,-.008116054125121211,.12425322308370529,-.04316031938519874,-.010050897456012592,-.025512330079287684,-.054800141064251164,.0200039868099144,.3167243634082388,.2782630901307965,.13789936294639166,.0488336696047498,-.033553110848946716,-.04310511729017502,-.04698670598703379,-.007936569897325663,.048609259060924025,.09187992284758031,.23510886392711264,.016599220831810764,-.12371629321306805,-.06323456296281568,-.08997041582264578,.010187402027455342,.0722312763892501,.013954273076743703,.06191724514263754,-.04380281732368861,.043710574812090564,.034237891220848124,-.14964785672058278,-.021062558513936316,-.0065214932642196285,.10036739854860938,.025703084368196946,-.023339141967235796,.03996056214623274,-.0620232565046033,.01983931991841379,.12567284760581157,-.12435675118258002,.05104231359059292,.05395714565825474,-.01694635229337549,.04332098462941552,.03818482834599253,.06706481039603254,-.09250774508547983,.13190717572685476,.07881879268456271,-.08728730729390641,.1368221956639014,.022366303998031124,-.0032543902188911095,.11492942524291971,-.07029322141387719,-.009766170189666268,.07912022044149272,-.13762756714606011,-.026907508147589007,-.12733408978979363,.08600916431669958,.011950067353004187,-.008931583380912033,-.049144400030709225,-.0446933264862705,.01772819118739517,.012376530468464944,-.08535521105761325],[-.15926058536081383,.08489658481255542,.010352869323630227,.024130584286049,-.009902524763821266,.016912897049950096,.07309247598639541,.0823695012331621,.004302238435681671,.08385543214443546,.032979428566029964,-.034178053263341474,-.02983859063202409,-.10512208483111922,-.008974556089922564,.03681355915406209,-.02070817955988763,-.010090767452007834,-.07287919801876053,-.0016777678298555698,-.07674331451272545,.03639911970925817,-.02229204539129641,-.07982096771590114,-.031169859791016094,-.023949824087409338,-.09000717940002298,.04946389516649899,-.01162443307990568,-.01219009445713038,-.038313237174491976,-.013830623631471112,-.0491682247170063,-.08738024755846124,.03625321685783492,-.13554744530431564,.023838368099940645,.050095096402370184,-.05327159587273026,-.085011920306738,.006167606412710434,.0016709301712408975,-.013992899617507056,-.06274287658445159,-.056305160151194564,-.08072705967225394,-.04239028060299212,-.1477669216452329,-.09702130958596067,-.0707340447035216,-.01552687001837725,-.2258827744334686,-.12300661118492401,-.11675473231723006,-.16926423521447898,-.11923817183461347,-.012360787613125972,-.0532425661020737,.030546117724330767,.11823686169287259,.1835792066113906,.16422671841790268,.13230129923057396,-.06662694905882213,.034498938620505855,.23002917423607563,-.10642345721363024,.0957207144145648,.18783595134907466,.1135920030571944,.025587855512019128,-.06743973075994303,-.04765764814588825,.10204615431399511,.3058964473801503,.1207425327574773,-.019907430927027056,.07905279205115111,.09149722809232859,.05353493588338261,-.0018597176390167877,-.03633230199269511,-.0677533805583534,-.038232412213873655,.00853338124463092,-.16436890766057954,-.04148143796817002,-.02449800446478983,.10683536971967762,.011812992251597404,-.1175917440126058,-.012836857177767773,.001045728278908989,.07214734756576442,.12614593084743808,-.05528169296868963,-.0069995168866165275,.06020094104930038,.019190774932036525,-.0006895939857644584,-.015094903464007381,.08256495616839067,.02935269669932245,.02052763134499494,-.03124630208458217,-.05933274918515974,.09675303608835002,.037229564658005795,.02552939083091145,.05686124733111168,-.02345084554174042,-.023607393595097947,.01954177012013153,.019437963266884198,.04454845971328382,.038280883907943236,.061662221134642245,-.0881552015250302,.07930408278804488,-.051664305162406034,.07775786173146697],[-.06170837072054834,.047170428243489285,.012296886297672109,.004808643011588981,.08927303726173832,.03230033333916793,.009921092241579652,.07731496066383318,.0072189861909926,-.005789590161049744,-.027110780745009062,-.13988755144130377,-.056492694825430186,.04374068348472923,-.001146343682998166,-.08711354876016822,-.049878803860526635,-.04460141329529405,.0370267591368818,-.019657603932586268,.0018226974562157855,-.1371821008360329,-.02365446978277948,.023928892232900345,-.06122045854429186,-.029673384135270382,.020848245415982687,.07833644761260682,-.04087552894668449,-.039873516281161016,-.05558396740446255,.08091231776784741,-.15785957027200945,-.10648703433887595,-.13229515155412883,-.04331017164951326,-.10793874347611057,-.08752730601633155,-.10889258052047679,-.09420017439695903,-.06830613525170248,-.04422556269513133,-.13934687419321917,-.1704639053008461,-.21416865484332515,.05518332839364329,.11437493872756643,.20663278657310677,-.10572022382588278,-.17195276126460635,-.07075394516471956,.056465453539173864,.1409941593083615,.1946078610379961,-.08266010138036431,.18247573517682947,.11507042684035029,-.012083622193608423,.07174209396316973,.19214713056103003,.19212718354463745,.17144674880884414,.1544838654242087,-.010181744325890758,-.0751062207627339,.17626659048347,.07292961106227598,-.08536252150394184,-.101891980495703,-.09391093364121281,.0033217473718428897,-.0056858529460113855,.010932950962091154,-.1295062582171746,-.04696074990943846,.0032455130187898154,-.009071778109973158,.006837084042853422,.05201533751109651,.01835745774621482,.012669751254791792,-.07441118751571182,-.0639739998867464,-.029665290241513848,.058058821799073575,-.018533488843353246,.010601655483648394,.08106712495222596,.020392890895924158,-.022919324383815623,.12127224411021978,.007100146218042218,.12312966006288995,.13042358466157222,.04687683112373964,.04270416929413779,.06807842388684252,.04605385479651503,-.00678360169209874,.04506514027632265,.03249542988682407,-.043798472997901496,.03950442276853199,-.050502036141981343,-.02941424277017704,-.07235605231228699,.01041464254613065,-.0375953575506948,-.024335687688017353,.025902421447803838,-.006311817127618385,.028123124281161538,.02743154969855563,.008821990965175233,.010829518047857936,.021827682953003358,.043520974366854995,.0035936083619636447,.056883805856356655,.04087709228201788,.01595663636965281],[-.008350746862047918,.06163937199165411,.06304264111952332,-.015296208138174606,.10245170405475104,.00399856785335391,.0776520242166163,.03002124455464285,-.02183599493843747,.05639660365532269,-.15006956293703871,.010032941582169524,.005016376321868882,-.018546011439547875,.015951124664690213,-.0011364559207565524,.011706775239053238,-.05860401544266863,.0015384317043948658,-.09247607401600234,-.061290397480221234,-.06437213513504575,-.03622734267699597,-.027815877384510204,-.024540854835821482,-.03665117868630987,.01780819541762635,-.13330602418496687,.09382543977629512,-.06364733953480488,-.05029341755903363,.04049780785943634,-.09330711840631761,-.051282463447807104,-.013632758698631245,.005177251054892366,.028088081363910312,-.06949363772703296,.02916951131051442,-.06571475121012882,-.009579966428208467,-.007563195294288092,-.04668939846943813,-.03603730882489646,-.16326411718263986,-.06809043583401264,-.09040215941701694,-.189584820342072,-.10038557840858034,-.08140974208274328,-.053687695693256356,-.16229791121556614,-.053231203082402576,-.07500210943583041,-.12647068989268548,.18340634478038664,.016324182102231133,-.095198942566775,.046462085929464936,.1380455870759975,.26953073102703096,.10023542270642752,.0530132013465859,.043485094470545015,-.01214558910123813,-.05664856700450746,.022122779976736926,.1492504777946008,.20113371911375733,.15087642306265311,.08158993972192415,-.09439974726211436,-.0019980179561955858,.10064758348146532,.14323151379670465,.13388503720638026,-.01334574239904679,-.027656328955928452,-.09883742284906553,-.015845908439641777,-.029293403577799304,-.12585250537276885,-.0765340538545077,-.025133636251120382,-.0783490751293564,-.02574433170418873,.03856432698310645,.08435214462345794,.03497180059356594,.021597995522587295,-.0096451137676173,-.024148476054881025,.03543901889081724,.09483888820433625,.013834291541066517,.04741612038963228,-.05276337737818716,.09928655794773157,-.042715908236761815,.06542372056116463,.012164923448017582,.048080933808946395,.046868409986020515,.043736365228833965,.03354743790039413,-.04638166163345046,.06276514242870704,.024133154758299614,-.09756871705363893,.13228826368262767,.043959645127688234,.0069923806816005706,.029834519712280835,-.02842119488910682,-.04275877728028401,.050490465625002964,.05063814327270262,.044201806819942,.01592836691970404,.05028381973002847,-.09457881127496151],[-.009300234014682413,.06642068786464962,-.05798826182978668,.030467914093403506,-.08894263286311416,-.014873330866996408,-.06903000288081293,-.05977259337654181,-.024750165724362155,.07698058518451763,-.1121917763907885,-.00026098838462658425,-.1064332436563662,.04696612592015199,-.10536876322983255,-.07342934948027295,-.01725860008224613,-.009754908309039705,.028937359707606723,.0583201452293885,-.10852363274246603,.00930340192160292,.003239488675901011,-.11758435763177846,-.03071652417368076,-.012968473875358794,-.07243267658598825,-.02951516712700545,-.030306917069408162,-.010562351852173165,.0005934753265023915,.04590183634434822,.009959243815588284,-.1472695806957643,.10665865350902941,-.05828873586184857,-.08133214090697385,-.10522554630509694,-.09270611819370647,-.08044877692547871,-.05472226200412563,.03500394529307579,.01823385065438496,-.06468218471334246,.08255229855835836,.043969243290146544,.10735340934065053,.1755119874560888,.028146227406542355,-.09303225304953966,-.08099188308628323,-.17304587761466295,-.08397564913817572,-.0821869944510589,.026086345132597978,-.024523009144156466,.06183716547163987,-.003153257941411511,.0138867394019625,.22791162384791516,.17839063189638452,.16802924166508618,-.02242358838747683,-.07047864822552609,.07563100014347351,-.13496798278125824,.06191444357903691,-.013965499326545715,-.04028717399616462,.004944231423449817,-.14234850191040116,.13422797072590037,.0044641492895416265,.17884346888192523,.033152160970333064,-.08418601459388463,.022681908276631663,.06950316754649397,-.10838151310589246,.025867188572352328,.06272635068791883,.051958392475047875,-.15684747676320326,.13621424644871002,-.07763575706962209,.027664309706770987,.0994262520879166,-.02406648271724445,.018369096774303477,.11490785777152708,.017998296859149974,-.02458427507431256,-.07297092825082435,.07092322827813306,-.08429449051860263,.14548924260173943,-.08148857829488734,-.04688306757082058,.06557102383832157,.08257811486473536,-.03674333501858794,.05490971339490931,-.024501097951853828,.19599838240616638,-.04741439714573305,.0027762441038286303,.03026805935619377,.14718296789670926,.04311186683321203,-.04524266215902584,-.05666670192620306,.011024035468495882,-.03746967817840401,.03453920016874658,-.09346994614785557,-.030232213433933387,.09252607527276398,.0033730560801506935,-.07495488768457344,-.05630955348568156,-.12734695058277604],[-.07400840629255256,.059418218830081374,-.16185533770248933,-.09511377575181565,-.054156530748324355,-.09524659355343601,-.027700374104369613,.1309596769464464,-.08289814773057447,.04323633024834905,-.0732657658446774,-.010406688952704322,-.17908099782642803,.11214349559047893,.011254398841125272,-.07213174644946746,.011242646811143842,-.12960939072644068,.01738837182774236,.05208185061396447,-.016141307058450453,-.0031876314325390964,.0604762980771201,.12062873361043944,-.11552428611131449,.053112984787895695,-.11175835774514202,-.08534494276082714,-.10341778301339327,-.07751212851826152,.022696330581442322,-.06116622795890771,-.02680129950339076,-.013512513628398493,.0728716489119607,.21355653955799342,-.06105176975794184,.23221322645596984,-.006049593164551087,-.11934471718699403,-.0487348966412308,-.0037696701788163915,.0015806523808981135,-.05901624282153879,.1691633875802479,-.10636213299345615,.013867670987275399,.13029048317364064,.17375284613983333,.3609697497347413,.07255734683387557,-.05062242706109578,-.061396795580056514,.01202817039979849,-.05973887884350142,-.15920195495822725,.07352556416907685,.01066435580390359,-.12349031715778719,-.20862800209268534,-.24386438086421988,.222695461575821,.04698208213520101,-.10969479870317536,.04679388042937237,-.06782844391656809,.1529621897287679,-.07419514198821806,.042910924531490646,-.0147654055974203,.37959648332332935,.41757874715387594,.021898097003166472,-.11237855306165129,-.04315320783073595,-.0018388342246165729,-.06544880277545752,-.010369032880327395,.043814853347705546,-.009064346657087552,.10571938625442225,-.044969836340908724,-.06001709893042255,-.12351913057017941,.07288836755809402,-.07301558300277278,.024488919824195432,-.04699486258065857,.006102580480916678,.03298894100401292,-.05586087652942285,.033548851659122456,-.10250477896692914,-.08536966088800849,-.09144709776442657,-.07175297330523189,.006001598145138044,.004878028870187248,.09177774204439978,-.06391124327661979,-.10839434894029129,.14049866674905956,-.16291269836434877,.04922746080966731,-.0539566557007129,-.025757221007218452,-.05949850932725881,.02902178421128332,.037106210375188055,-.04318224281511984,.004468562587269839,.03789091486086652,-.12462488658167202,-.015315868709315207,-.09942156409415501,-.05791207313008667,-.07046307506797155,-.06934945677768675,.03622490416908307,-.009666917459053025,.0072113489889556875],[.0005400037781949458,.019228224673755647,-.0041211476935454,.010351942594428495,.006064413551663622,.030583158266134808,.018242859270646162,-.01148471491658012,-.012453527735116602,-.013982904116162584,-.07349494525613852,.000610039089874911,-.03545692573186138,.009198148198758704,-.007930642240669111,-.031346516850493486,.056360544230430694,.02226925518256564,.02097553828852184,.02159266724595807,.02229244757161712,-.03637635466667719,-.004893428694286564,.018803611912471426,.021642092128736024,.02297935260531075,.05727899187240622,-.0628468829571148,.0080146423492344,.001741066749290629,.02331626054937483,-.001969245483005422,-.009766350913334498,.02655260293968668,.019311702846604575,-.04047894912896902,.04296345656975245,-.005557204714366611,.040028541338850074,.039092247288585756,-.014760769957556222,.03928708395050497,-.028685719461485404,-.013542811096967075,.04279694192402748,.009326485295681163,.0711045731208288,-.01285502554472399,.004812097490178826,-.019345118328359015,-.0068647366946253605,.06002650436955327,-.05171021704764937,-.008803783541314746,.008593656232294026,.011216837793947578,.00436599551284661,-.05236548521635015,.018585701567693985,-.043301048775860274,.017257179405366647,.033163069502218985,-.06337187087282822,.022236310454164437,-.010282665078434856,-.029097248102949336,-.07292855786427224,-.006526386582500402,.02170794880550138,-.012869723919694227,-.036092446130363755,.049588404031142494,.0037685978390409776,-.0354492999119638,-.0174997172625617,.0017064827547835885,.027702634451048022,.010552265815024279,-.015110098334354602,.010755306598934415,-.042384518316625354,.055155751834777625,-.04634167814163758,-.025334054233096058,-.03180439146719122,.007446831416419553,.014822972242049056,-.04150177712089112,.05565976059693688,-.015163449841913621,-.033479207943135934,-.03807430074830388,.018025384518394062,-.0421878061699516,-.06845863066515746,.03254289254551393,-.04300024705489787,-.01704186701570433,.031343919493743794,-.07998819951145825,.016715851151657413,.032905055715790735,.07075045847869674,-.02652191057953172,.009794889281753288,-.008359095601141911,-.022132176548511583,-.010266695795141155,.027387007127093858,-.01945661327421618,.04747122989735239,.006463945249493418,-.03682061138814995,-.014924071652059345,-.04838145119030405,-.03540145720228079,-.0011683979389548946,-.054012963892719104,.07919096250210245,-.04604060764604696,.010260604991224952],[-.0001569077120156144,-.00010972965005487043,868213356645213e-19,.0002895918293708104,.0001333682010118062,-.00020448462499146614,.0004636545850201651,-.0001952429751545387,.0003324840807350654,.0002625042692584595,-9902279260287639e-20,.00023043331960011237,.0003325021559779928,.00015431271343276792,-.00017517735947227692,.00017580915476165387,-27857926473168204e-21,.00010573427076637082,-.000165480397259693,-.00010017127208199195,-9313858279300785e-20,7629718954399456e-20,8422483860534222e-20,-9328679851063754e-20,-.00028719968349017605,.00021350040915488894,-.0003150556862943979,.0004518855251356285,-.0005495709535034074,.0005457914675567402,4292665511661936e-20,.0005230825423930205,-.0006859803831355815,.00018154537313607583,-.00019968317282380993,.00023651893221749917,8502048011076527e-21,.0004909646746514007,-.0004119603837152569,.00037236304958472577,-.00014792807116663712,-.00020787769585125376,-.0003163192179676949,.0003509716053853168,-.0005302482775174575,.0001920548407972275,-.00035924357541414903,-.00014479534658806692,-8220562624946387e-20,-.0002676219455012979,-.00032865721811569347,-.00013872646247882828,.00019337977765215147,-2893078271500732e-20,-.00021530682683792296,.0005007558342280394,12869664429884797e-21,.0002877888733890388,2151668885594371e-20,-.0003850355075187134,.0002692398906111934,.0002012045588500183,7126990807145711e-20,.00025510516920475984,-.0005497530710414731,7080130020775677e-20,-.000314434949907981,7272781453938892e-20,-6764731777177124e-20,-.000105969532620806,.0002042525509826365,-22660407178250186e-21,-.00046405924788414654,.00029312274831753277,-.0005791064920290384,.00046348258977586126,-.0001892141960505231,-6831069283591215e-20,-.00011583420771371644,.00024261083736967087,-.00013788873457702688,.0004658190984066779,-.00037781566966009483,.0008716245230738773,-.0006364250227483409,.0001914635008269036,-.00030213932128696913,.0001548061422106152,.000359478662719067,.00034064528670862265,-.00013396590679365383,.0006282001548930799,-.000262816864256582,.0006290045675361594,-.0008356505374108175,.0005550125162077091,-.0003922153146351179,30416452512397468e-21,-.0002189561194486725,-.000250508136889635,7579225944163992e-20,.00032480822488636235,-.00028410221135238486,5019706084559428e-20,-7604971099685331e-20,.0002972254682679469,-.0005977100300826113,4813754973029272e-20,-.0001438309620388073,.00046738458634185825,-.00043149354775268156,-22304724232195816e-21,-.0005350635724875007,-.00011828488032837592,-.00021777877913900512,-.00010840223620667971,-.0008066009231476462,.00028972319720168074,-.00013991311235211912,.000435976304913481,-.00043607463640516625],[.0007992911504804828,-30120444183670547e-21,-9.668328629364176e-7,.000864945159989125,.0005030529484980062,-34861905346544875e-21,.00042196435679157235,.0006568174335126256,.00012927605196788594,-.00026826496297133184,.0007048572872881756,-.0004505423245168838,.0006284185275765297,.00021810609410295723,-.00022766549944826936,-.0005743718719742955,.0001667039981521068,-.0004550487105457676,-.0005189640648836646,.00016278501839328552,.0007846798866815302,-.00020117424541528373,.0008133233405210466,-.000546613347067848,-46455199192108054e-21,.0003925110134400944,.000890454317246242,.0004480326332934603,.0006725243981668128,.0003432395336075006,2970582797436061e-20,-.00033407540980814887,.00020838216438882895,-.0014686441499898312,.0013210643314603837,.0003622979708427093,-.00042100922626168297,-.0010662328062863852,-.00047868856534150767,-.0011025209542825376,-.00011142308623937613,.0003605454081693979,.000805368483283761,-.0010504288820343197,.0012459778440163868,-.00128894177690737,-.00010349556762601422,-.0003259874452417391,.0008195978542099927,-.0003286953750876037,.0007842790431124916,-.0003102789124236477,-.00013199686164484803,-.0012037863711194877,.0005696662674320799,-.0015831212285748082,.0012383789939280389,-.00020329286471698974,.0005444151777521458,-.00047971421799346964,.0003639802447524265,30135996240618357e-22,.0003463026791720031,-.00016208082819759925,.0007653100934952896,-.0004374341893310929,.00035576070800035636,-.00024010306236346007,.00021524875497277648,-.0006550476921478102,.00036034608435831644,-.00028137429763217675,-.00014369965739139887,-.00019791219870676433,-.0005036156937956865,.0005614487217727865,-.0002316208715137033,-.0004190557849820635,-4582427172821965e-20,-75822332618488e-18,.0008003140757002376,.000558399734893824,2226587692822843e-20,.0008977254633047785,-985806312324422e-19,.0011729728289751398,-.000527695784392275,-.0005609613348941597,.00010460229482414998,.0004749779920359999,.0007370880620039648,-56914197126341215e-21,-.0003102421576837294,.0008752411241001248,-.00044804418685771147,.0004955562848460542,-.0007026457904857168,.0008545564187135354,.00012341905578699096,-.000935467102831657,.000378222510539916,-.000329023094410295,.0005664691467672459,.0002521641764011316,-.00037243077631574,.0006157672055980331,-.0004852753855330537,.00051397678370688,-.0007636882120910741,-.0002717643717346516,-.0003651782273257267,-.0012782404754204373,-.00037035199188238405,-.0012045089669873877,-.0005111585661751218,-.00047596944593941704,-.0007216126068211506,-.00037669329780016733,-.0007539851576227469,.0001343282945602117,-.0005905901473275219],[-.00025150140763611817,.0002000543548479755,.00019417083739569404,-5792301095815244e-20,.0005586382076858193,-.00029404960975239897,.0004641898804350125,.00016919725054860514,-.0001365681365060609,.00014340737825123363,-27245579659461233e-21,-.00017462744794458128,.0004320870347869557,-.00024872373436234194,.00033850066080495095,-.0004282450008767239,.0004527458938356002,-.00033817558566411835,-.00015836618254124374,.00037188063032157683,4001322304792815e-20,.0002963813147966963,-11757971572848584e-22,-.0001744667552400006,.0001268511029074151,-.0002576099870121168,.00047735971540077606,-.0001583414507774425,.00011916420387451162,.00015943376359087678,9365002254130717e-20,.00013240084078796482,25813088587590515e-21,7753877679932738e-21,-.00041105076291241384,.0004545220478361274,-4040458358791927e-20,-.00042518565093397536,29496406138524887e-21,.00022369184176485946,-.00022326384816004656,-5969684765263074e-20,9590019958132271e-20,-.00021800428194160856,-6628557645497676e-20,.0006383470103711519,-.00035775911240443345,-.00043585234193858034,.0005552031141922574,-.0004686784852901424,-.0003666824099504886,.00044104545236546815,-.00016743491057120887,-.00015286382598361098,-.00042267651180960325,.00017696200882469978,-.0008795455641963257,.0004146582259312644,.0003045032458691716,6846537634285204e-21,.00021324027853833406,5544423373813733e-20,-.0004553872771715659,.00036257374232944806,5812612913741011e-20,.0004870109844424884,-.0010394561974651842,.0011088516063339896,-.0004744671038700055,-.00021639705414199396,-.0003026456545315232,-.00031876669624713905,.000182567936551101,.00022085306808071166,-.0004570847865470322,-.00016764562120866666,-.00038680711837089563,.0002346549695738001,-.0008905859234485335,27029323083889965e-21,-.00019392260432311614,.0004315957078649057,.0001466476034520035,.00020276998330380014,-.00016623775962797588,3377296016834441e-20,-6900085899646776e-21,.0003173325151770612,.00013183707157224346,-.000262754515962364,.00030496779772497273,-.00022988038412455076,-.0003441066296248881,.0003397409639967002,-9437034630983875e-20,.00015929656150039573,.0002208318439938517,.00023298688340578377,.0002668471841276376,-.0004223616661706703,.0010171866741304654,-.0006656074902465917,.00023102910516509278,-5110533473639173e-20,-.0002524743916937494,.00027604436336503557,-.00017760551435710054,-.00010325189793795159,8821495793360275e-20,-.00022473324648105992,-9108273748473011e-20,-.00032298641944957397,.0004976843507103613,8618913329085944e-20,-.0002727878126327788,-.00012650947795273654,-.0005222727775637999,-5214077958895502e-20,-.00031611240635322224,.00017884485805307976,-.0003794131877055966],[-.17866885726802303,-.01004627890548361,-.04258967548780557,-.06593466407442874,.052273011858990394,.03312160535571991,.02795049686644964,.03459701777139025,.04065340185643863,-.006028884452193628,.012100171644170557,-.005823115292745859,-.07582851399159081,.114669445133851,.020113986866166972,.06830239973025178,.0536675149057223,-.0019151045898751218,.0032161515425703988,-.02286773204984241,-.036064260364357094,.0030444356366628143,.005026825113180613,-.016159035960289652,.01343428575788129,.046278393980945166,-.01986357651860629,.03308155415261836,-.011511204742527398,-.02336066267834247,.04803053127169171,.07216286312764807,-.03470696526283394,.015742792044845896,-.04365784041015932,.05298988616021803,-.0005778284434646286,.05368524140978516,.05640961604342286,.031927074543435394,.07620825227690615,.03508474849876196,.016016932367084777,.09782925262644122,-.010932961737962918,-.057604724295680525,-.046117493596561435,.1158683536837223,.016630360691506946,-.07238061224123352,-.02721078987250658,.10400189079503686,-.04986370811184261,.013157090965211962,.0687580755933804,-.08609338291433159,.10550940203644331,-.05192563629392106,-.08457695827736228,-.023868518013074047,.11534819907311766,-.029927793894114596,-.09880532106573656,.08174885118680475,-.1060908740185344,.03131709572154953,-.028082259348080146,.079441855776121,-.09321417457265918,-.06985811657883463,.1070256004886421,-.07154792343865429,.06446512920421217,-.09916465105825018,-.013469569177392421,.03435227148056593,-.10594412155782011,-.03578650235512626,-.011063899652176858,.01837774789897521,-.03925360751263275,-.1401687891122919,-.03721312667737868,.011543278654149135,.004656475419833515,-.0760812186959124,.02161652285659742,.005696374724535533,-.05422545641286053,.03997648210328526,-.014191880258275905,-.05603875416223365,-.08595546789835705,.022657092076657198,-.0022047701913627767,.002351972464999623,-.008640836044051557,-.06488063850524677,-.005552341996716701,.07959598156789904,-.01118968911944192,.019694004932030575,-.009080162837764867,.0030332790803103706,-.11172688994501827,-.037768645256787345,.14407928948205997,.00854179600675923,.051063118511239784,-.01380913347995522,-.01880415226931162,-.07472568370647939,.06221295634359636,-.031173033698703514,.023265775517157146,-.013229707925293089,-.0880873919352723,-.16850726894231444,.014989271963221966,-.04579025515430985,.03830156993922969],[-.12471960559298051,.016331688001818473,.010132274081235342,.0072416673905218165,-.059929049564220245,.014888737012368864,-.05241879684518604,.022430681494682764,-.04370183268160943,.021372011063678874,-.06655186710593347,-.07675155144909322,.03145408506904994,.0005069862036388229,.04820853702090235,-.04360636063972682,-.026401547797884867,.11494953428588206,-.0008448799329897217,.0417632292750263,.01662088156180045,.09574359592256741,.016932325856871336,-.031217493839729042,.021554336392332216,-.06122835182723427,.08169620652750695,-.05509950017990012,-.0953015830246275,-.03135197233503784,-.035124606327755464,-.028837124821496515,-.04788471540883535,.06070242512625609,.08068456476164618,-.03962789913976757,.06470980341954596,.013113165039676609,.16301141390375,.12824898952567468,.07463647681415406,-.01689728599051447,.010567173254586882,.0033568218888065868,-.0412160894144045,.08378062128267277,.102189508322764,-.048555074093876056,.09549314269554934,-.12104629625143107,-.1493368753465891,-.0389467848305356,.05367087918131229,.10886118501283593,.0623983957252945,-.06400486156580862,-.0011642109155079912,-.017989480311898197,.10376420696530403,-.021666202371688252,.20636172793169102,.06751567674647355,.022594628822994373,-.1087504952317593,-.1536783883022896,-.10156435275826153,-.056219286606131964,.004893557738526164,.0805088399913846,-.048986994532721484,-.05467357353544683,.03441724157108168,.13788724353627765,.17933790589816131,.2269420687448924,.1671473728685338,.2888790147793218,-.004550503908508637,.12853746432697205,-.14688209250590184,.039803550389166095,.001161697593967297,-.19133864743440931,-.11485627148408395,-.04055611652925376,-.07701433461570141,-.06491913606734276,-.17402303487112258,-.06945190797766371,-.17069839255636562,.09755338124630543,-.012417013824468703,.008779997988951951,.033808465522018064,-.04032395286090812,-.12350740477425591,-.07110377503699353,-.032842030960087386,-.02525651113024763,-.13557637802150552,.13026525943758985,-.09897866100762497,.016539720299720638,-.05539382900312294,-.01747784521356558,.08253314208431616,-.005269279253446573,.023714959705274333,-.025127637792893034,-.05449360375807459,-.00652514795320968,-.19551796620580655,.0005153308443185747,-.12469764291808262,-.010402114917957516,-.04085437197022542,-.05009127773951896,.006171429783149627,-.022234206683905616,.02500462259196987,.053771861975124485],[-.06953146063004409,-.02785516739677247,.018198128969876097,.015264256008671422,-.021354522403683483,-.060614589679217915,.007426020566030832,.04490934257839589,-.02229010045780016,-.04503811421576148,-.055530719421861996,.0902442269939355,-.003808075241290537,.0018190374684997207,-.023994658931284905,.022637227704013697,.034385575661622605,-.004132342662778982,-.015239537988315635,.059722981968446186,.003544656555215908,.10857055311904133,.01582758789789633,.008987865811832016,.021416627127059842,-.02600036471546474,-.07205361608785835,.0067502383554667415,-.043797404208141606,-.08622211669101225,.001246921678646755,.0139677771449414,-.01880006926090451,.09110646933785663,.07148285793357623,.0531413345214016,.00914808213505889,.003218881297825424,.10531967232382244,.013069231097604272,.11321624512420622,.024085428042357526,.10571237447906545,.0972494307993253,-.04035677339102225,-.052072201970584105,.009483848744708569,.023224654347251975,.048982273381055874,-.07704737716893406,-.016369059725570845,-.0483990050185562,-.017518918630372055,-.04872526407833252,-.09069556505420186,.14584898982636468,.020202497107516055,.052473273376908665,-.005921018255039059,.002281302741017288,.01143131488424251,.0986017144258021,.035390606662767,.11802445684529828,.014488333933066366,.14985625484032264,-.08336508118286931,.02604166398390495,.05753622347531037,.10289686959448127,.13376253308792016,.09859927901539622,.11296262694625853,.0668115199475845,-.03039233221979165,.037677148170599,-.08046540901337987,-.013433044614551137,-.0790502723823431,-.08692778549134847,-.13723308506024745,-.16180861780403702,-.1559436708245299,-.15633705073107523,-.15765816424278123,-.019054153693685204,-.06642804134677276,-.04031539430037858,-.15529720969926392,.12101901933989367,.007373943349677788,-.0390423130063269,.044864452505471414,-.03107425775017513,-.037869139729967256,.02693566917864209,-.025703296599595565,.030655452436583908,-.008329491639230698,.030463719734315588,-.016822379770469454,.010025642600714306,.023941947007600384,.0037369192163097253,-.006206138277264052,.040478298614511805,.015199733590990229,.035362093609806654,.03511391355505986,-.10029441782907185,-.10610472749034416,-.05209994244567258,-.0037985170316418085,.029290155294759784,.020763196785263893,.03757429726054337,.05056819389164744,.0025948365095440178,-.03403336490460493,-.031897318483976964,-.07255287776479732],[-.07415076132698015,-.0006698640194668509,-.03851515813421434,-.023181050413543618,-.032101285996002565,-.016813865511960804,-.043281469336209986,-.034096544273423686,.01015713603552236,.03002720104435845,-.13569617378270427,.05532035184255174,.04142268330483252,.05423769347171173,.07515835251781103,-.004561163523117667,.004933683544835622,-.02780420573125888,.037859313146976444,-.010636484133250523,.04303907463414708,-.031109281470661186,-.026842848775607248,-.03367029747858763,.005308192649811985,-.03971982646619191,-.011433401479806288,.0018726799542050226,-.030624975101159628,-.002938065158242298,-.009598931969133029,-.013587888941593039,-.009022840695484109,.013981082758308103,-.027132225331696645,-.0667222603414114,.02999630756200286,.10810874336228038,.07393253694528595,.09459689128832147,.02132698978555572,.005189532728890431,.0906255149562725,-.0014967572066416635,.09569159602867722,.07103280678529231,.09312149403009169,.08641023342246706,-.08291182791329474,-.06331718873820169,.05804082822532146,.0941232801306275,.04828946243389934,.0065600637976757845,-.017978915242308827,-.10529465762835961,-.09950537690388492,-.11641428549809074,-.16336914552196619,-.03066309873006054,.03732730251873738,.021715752289796372,-.0369844279935826,.10584212495392706,-.03890083728428326,.04238866204055994,.15761090374525039,.14948261048000774,.15123269083375968,.26082790242726567,.24549601207125132,.20845042919094864,.014092314529055919,-.08154430543701509,-.12046457900197742,.19946559288633667,-.12279301434870472,.04314746533657727,-.00393594331492679,.04194450773788314,-.14662824409559153,-.16841554816441323,-.21746364722425923,-.1459359862602846,.12453643290997443,-.018239200160202453,-.09647557951641697,.09674495834816152,-.16116049604787364,-.10959035389321688,-.18407080190584757,.028717350720618054,.017940145844063823,.06771260942640141,.07042689944917004,-.11002871292121127,.09308361930716741,.015479935983498054,-.15557089262678336,-.014144367587187956,.0325121377548612,.05556774883075101,-.017472918751953406,-.029533628631708192,-.03882773130669309,-.03021232345401817,.045497082764698535,-.15437986410128418,.13419753386333874,-.20134066892161695,.06224915561780282,.02428428678083827,-.03696519035720307,.004665449800701868,.019888261193014966,-.0834679804094206,-.016566558945081397,-.08316017593013263,.004519218414108621,-.15565975294086548,-.09184237743852727],[-.06648937254575553,-.047718799252733826,-.09410351655788475,-.013599740258147358,-.04553070517144151,-.08506153834585709,-.06309353250648561,-.05382077809893387,-.1222176787662156,.04751789291790755,-.10543817119017407,-.12135417994296471,.020628638474339593,.038231355833956926,-.04339236513181432,.004422474945044738,-.03808507779541288,-.07983017408586837,-.028985978187303432,-.06550574897768958,-.08840251902141742,.007568562641850877,.014599611957773671,-.002205201743726584,.018238800652908803,.06619949508942785,.014132567520511584,-.018584781288268692,.009727516773610915,-.013372741092406291,-.13951730470879722,-.09945443912852887,.002453680221218517,.02332571755292307,.05227317987494949,-.007843378956858688,-.019449100540297075,-.03793640930232544,.006026659571149097,.040309888608414196,.06132376182771021,.12961234902069763,-.05246356331115444,-.09231662522646916,.12501372859645493,-.02351102454092214,.06869985550821425,.08117843045299462,.08163633162079212,.13284552600960509,.11443480169918706,.03113735679365959,.03957361525706285,.06420669386790767,-.02658562344144533,-.069602244432453,-.006882701260322803,-.08664220320189941,-.12201442995127351,-.08760260145312744,-.0970812896359051,-.14353417247406297,-.03240409236874564,.016664803245589305,-.028877650787150662,.04666075652467404,.1676934927534405,.08185669802196274,.1329811871153378,.15796978913910928,.1542064762948671,.235079415664451,.10845077567152385,-.02663613626038222,.10225924257045012,.07481564010539572,-.06748434569715259,.014558971240431304,-.03179694396991569,-.060628238131727054,-.09157524027700095,-.02183696621719987,-.1828633961798013,.09450167322221116,.013464938214634688,.017062888577847678,.04728200179219444,.10222149429615252,.003262680854284855,.014576952315965966,.05370026657403589,.04846835624654347,.0033060862248684986,.10214575008785104,-.07724239403128261,.018934507344396237,.0009841345168209795,.04721181791202195,-.04252362691862514,-.059478892430034694,-.043645446723720886,.0072259828467460575,-.04536439790469501,.0015257865026378006,.03394202044018976,-.06286854398915662,-.011162136740504053,-.02618150392846805,.11832542908426394,-.11894486304453102,.0030266795551997794,-.019806603799353117,-.020184767444436195,-.0019914632003974475,-.02834856785282462,-.0519362080807298,-.114547660653914,.016934758716036884,-.037824591697152236,-.01375883701059563,-.14176618903476443],[-.12379363868138007,-.02279316359625219,-.05657201620013585,-.03920111999111422,-.014505658462787643,-.14164430469555672,-.0667725258352778,-.01689199875955201,.01839534170622534,-.06025737381415314,-.11708273412158036,-.16991897990888952,.02268184312792898,-.037431787558444535,.0278362850257034,-.10391555593395135,-.02489579210400666,-.10240649559419762,.027892065133358145,.03703024029062255,.02526907686570492,-.18054736103209962,-.13783839666730963,.03215416365047865,.10446321758795965,.04211631934401537,.0035951247503783063,.06534657732969931,.022452948281901614,-.001375477826345138,-.030524202281055096,.030663561315706717,-.09877455975225044,.2112460708578492,.03192256244424359,-.03470538917349143,.03662198851388872,-.010853119077650658,-.007389034533970693,.005678291025571713,.02956678266410269,.09643352067543778,.02915776715566533,.2985689206411888,-.07919582633844692,.0002570386604299063,.030975751575185936,-.07756102771115816,.10470636569751657,.1428460407644222,.09940178110316888,-.04083658577975097,-.11174053722087644,-.0673083114110804,-.18341503352838884,.13979526699252226,-.041934973700445265,-.09286647159600744,.019653227675469925,-.0903901487415567,-.20734375167567454,-.07287790447233498,.0027432574380281405,.0061245885209975925,.0945981262283641,.15505695773274958,.041295097014746554,.006098921880011085,.20246902024512597,.18772782665817625,.14967157503073222,.29059802382753935,.1882338796896202,.15999395370095998,.11915607104783087,.05601772378459351,-.02792887117414139,.05667642719401925,.01438157734700335,-.04359233535860563,-.10690022762213068,-.06224823853094813,-.17877352623373868,-.09228816984117275,-.18022508861455536,-.06139877342060056,.0666828177706692,.09579682657519611,-.07561033691668714,.03348431078761514,.009071001729659606,.0023841350072704715,.012849690649430291,.0037371676082230965,.05650773991275465,.07182082663799436,.0741867215293506,-.02790525813071086,-.08413548818267128,.10542017164154836,.028027285290237042,.06544500747562648,.06416164108658168,.03294077475246366,.005402065754669991,.03571524120997059,.007712003967908311,-.035145762312081205,.09573050302184019,.06829334144455895,-.1743073123711078,-.053416372888697425,-.0430730980903595,-.07504208424012832,-.0026001415644313353,-.026744723242628617,-.014014546902059697,-.037147009442388884,-.029554069220702237,-.052552735398048014,-.20455065610576798],[-.08033671891432478,.0315429073280028,-.08033328455238642,-.16579677604599055,-.012897402202476056,-.10178589629685617,-.01789079587139132,-.04793217410188362,-.06957271428915822,-.013085371055274415,-.06403048933442046,-.04738918650528029,-.048253300258942214,.010624097533814846,-.08830385359970645,-.024800418220789627,-.017016233501825004,-.0731122923145789,.01795798282892851,.020031779934763197,.026270539591568495,-.10026542176987073,-.055354197675606544,-.019202819676109054,-.17886561336922624,-.047929449603121586,-.01547661115883896,-.03658093134111133,-.0013977731542055873,-.024379638918464477,-.013239317850851168,-.016219240360668748,.03345591096152817,.03128153409780385,-.11781030984741167,.08675961993407609,.09683826020183105,.0075779597881384594,.04020793008597133,.03979664174325498,-.007964327106749873,.05767522648102494,.06597316905270549,.07636867790410523,-.09433822004769502,.02758181066279606,.1767303609051717,.00802817958817817,.07973353630133304,.1471114604522918,.06691827252092541,.05033400929997261,.001155762195899003,.013615235385982936,.003014912242312588,-.0015609840824338042,.13349258506848927,-.0805265237713217,.05030675773238505,-.1374407044204264,-.07379630519336368,-.03188040097533147,-.05786700321566071,-.06521749177065808,-.06679414818176112,-.08825063794815392,.009684457243462015,-.042763801342421685,.09463793468623016,-.06620162650963077,.1355507715437378,.15162691406173393,.11508260905995207,.0912659651060293,.14083962832741773,.12798665154188912,.2063621060271425,.028581014482874013,.14481738942061018,-.06449340862870821,.14635053020889283,-.03932501773954096,-.04927780972188391,-.08022828865695547,.016307833788669575,-.0646514288965923,-.0779270812226531,-.02957415818047504,-.024416232437453507,-.1330534799520876,.13699379135763934,-.022414216362762814,-.005868709852490793,.004999194370079764,.07054027770987265,-.0003799065544888118,-.011858514238347152,.09475069188854386,.03218866406000742,-.08487470279745359,.14236331721498632,-.03552454595773424,-.025841070343849228,-.0789528097144718,.048317846092031,-.08202671916385867,.04336429450841743,.002704584477566117,-.02792065407881463,-.0719509262043451,-.09967971570584394,-.1207171044051677,.027685856470463906,-.06539657712071668,.041932056613189474,-.06347044193335785,.015317705347783588,-.0889546180036192,-.0024258796088682186,-.055981681173908476,.02502279163090345],[-.16063469325056712,-.05067950894114695,-.017602698377438247,-.0024719881205989246,.02562693678639221,.006447455809475942,.04090523226766232,-.019412107970519368,.010907705003810574,-.05700007695501437,-.16989061568410888,-.047847975558597475,.04577096045089714,.03660513100503897,-.034700480386556126,-.03881416504376744,.059925472084798384,-.04504159209742578,.004479134427212532,.010085652451881422,.017232862062283152,-.014699311623237801,-.03115852988681901,.054785786247363535,-.04501867135535772,.027938316028020466,-.050947638456247675,-.05802757432125461,-.018142649252876362,-.07346728199269882,.02976135808388572,.020105401337809463,-.03083009871677686,.008938452935937466,.009491788342519472,.03125749363817319,-.07432462189929744,.0475022932284969,-.08720288166855467,.019497480457585127,.018801723895544558,-.020783146883739074,.03740722625319719,.01202907895240941,-.08564017449754333,-.01250123023712826,-.027083881602897025,.012926155302517221,-.020812027426987748,-.14055809283539628,-.11374506591076419,.017924843458942127,-.02851651614594349,.04585868851160263,-.1311782838895033,-.17389092870879497,.053714156567446165,.032300075701893374,.057520195145752226,.05904654140586256,-.11508635724303731,.04356577639305207,.05953659426272473,.07659913376420743,.014207229570090983,-.1199427514262921,.003483041457215938,.08308252095344841,.06867294978233036,.06634459181806078,.08401256751467098,.10863093494536288,.03602168813629669,.12380137951173706,.04323657632804835,.05939964366565413,.04244530947463224,.12789338744678247,.014244324437140979,.06713624665094575,.08669910549260079,.059557262090246026,.01809855186232609,.010713420148594992,-.0005957988401005254,.06134346008396229,-.0001398559588360257,.22412677713663717,.08801367584779327,-.058215067302030736,-.0012260538656294895,.042305970671931085,.05206734479785617,.07541467470573086,.07747117691561765,.04571138261393291,.017695427073964477,-.0030658636257887804,-.02962365327526081,.12896765936351437,.04218386696081909,-.039394998979108344,-.041007428922027155,-.13390483965174424,-.04249981868450559,-.05819462525466032,-.09519971864692886,-.049990903182070265,-.03535942882078717,.15859976300873996,-.11702120905543276,.022050407195940078,.04819282357221995,-.005656504731963163,.055321599542422356,.003977112651243536,.00887914724524403,.03097294566737252,.03613661485122133,.07763665745575973,-.11747304066916951],[.0032106468813388467,.0888851727208101,.10096080668798724,.022292605842750123,-.07152545324795105,.00574314306889687,.06538100129442326,.008264090951624635,-.05229792363355525,.05506324915670348,.04213595616555499,-.002733728335111471,.061070962060578285,-.10701158010008113,-.05582795617315865,-.06503269483246488,-.011795338702579206,-.16486859585693212,.021281059707202635,.011339055054131499,.015607579889776426,-.08575044928288486,.004308712238907317,-.0028333671241141632,-.07570465195497533,-.09502363453231939,-.024443325177031752,-.004874293172570161,.05373563149718516,-.046164464204305776,-.0933941298749114,-.0894919021353083,-.07009406612481467,-.03476491199500557,-.11036613659441624,-.041699289757935284,.04855541410532404,.03731659433016587,-.009125849568234395,-.02483773607684505,-.10811625353969287,-.011196019395676729,.062000571065406324,-.030908870870323263,-.20817374216641296,.02840804114908593,-.03422871356001763,.015547093956459614,.042037769469384534,.14900049504903043,-.07782808133751604,.3334366712423407,.362683474566741,.18381088902743745,.18801989730141397,-.02676010791724115,.001051001635363081,.04098821271669377,.14354810186479433,.14720129753717756,-.22198578529791352,.31511902115816237,-.09793363128417329,-.34108764393991897,-.17922303207403625,-.07503751616248808,-.060600402883750376,-.01919095040080467,.16686302854511445,-.012989494224628011,-.34656568745617206,.1466824188567722,-.05355752905245408,-.24973215975275748,.24117194525976043,.06744086845556567,.11113519003246129,-.17424338350633975,.12201079994643065,-.09274695092708538,-.06579081793244057,.3585559632229108,.2260824611739266,-.11160227633029404,.3057247528769656,-.10906402198659501,-.157141031858704,.06839556583237981,-.04092177107811989,.0013632455963754134,.10794141319894564,.11370966065944016,.05701046666820303,-.08263447320388241,.0463277770499568,.0563969354020957,.02021230107199888,-.029754364902733033,.05446689213094416,-.01420748508089218,.09398894647188305,.04457207384512044,-.07356623266476506,-.15318361570533576,-.06121218533961417,.02671053100083461,.03645536395889876,.1387979230893424,.23979908542525458,.11099690466514582,-.12734356041026987,-.07092110761905882,-.08403148804245866,-.05291120499450527,.008027027948386938,-.04833738261890975,-.04031508739306439,-.0891092654488945,-.10259547678103018,-.091800365225333,-.21140522933050648],[-.07054189829438295,.055085384725324385,.10152834971804957,.023622039667971106,.029955712367899665,-.026059948581330213,.11064289610687274,.02448902262906564,.021970470387027496,.020456590772125735,-.04111669361053552,-.024812216615053395,.009570381328390706,-.048146399939075685,-.0415428906870009,-.004548704608621744,-.022900698211748033,-.10095741160721779,-.03265220853381959,.03709112546748977,.014636490326762966,-.010920356400900416,-.02620802388201364,-.1421492222591433,-.1328932262467217,-.0332508284486821,.005475158414530362,.0918543916074954,.03601219590470964,-.0802670470963445,-.02961991599551142,.02687273746606801,.02497615529992274,-.10102174245681092,.10923707161980402,.07065506196696225,-.10935696983924399,-.32088041870161305,-.20436936980030787,.050938666453356984,.04630596161678227,-.05262469115928802,-.10829047665507778,.09088284694126186,.1917406651566634,.12934192659574403,.11859841393368513,.26210791199518413,.4376037251205329,-.07385994715913412,-.07658367956951675,.10680813952910222,-.08997439100075179,-.06155539629137219,-.0923508416585247,.024140264345503374,.029438378546550566,-.01563817377224519,-.149531624982499,-.10876112523177132,.19097881484789375,-.04989629255693268,-.16239346086432074,.04670990819198012,-.03345249467404621,.00463106172132965,.00642168837302657,-.12476862042997607,-.03131370997821171,.004210302086046537,-.025365848313462613,.06368428162444703,.13395358129694848,-.06557813559801265,.05746392908406647,.17256882128548656,-.11823900246670159,.060333559941145434,.0037599080210207157,-.03820046216335691,.06627600448818086,.2563406900545755,-.09393503103173206,.13649945906964844,.0034794918389711334,-.07276171981231429,.029458016256965223,-.015677874033259744,.19131561225163415,-.12071257308516789,-.04939723442900703,.0771758420509144,-.030486255311673066,.04978316949894561,-.05753275286302707,.14083206176111882,.17408755180270033,.009344634962950172,-.12819205088510488,.09792179760220199,.1484657616745283,.2171978344734984,.04431560174124034,.11561949899769568,.0792765520234058,-.12048788468641375,-.04967266400627008,-.032827416046744835,.00900155383757955,-.13278686515158378,-.20143225012684127,-.012865208501911994,-.05226303626701382,-.05920262987618654,-.11792756657567573,-.18198524247067943,-.0007483837776589841,-.13713941392620788,-.061325425375407194,.019950339910709103,-.06214736571349857],[.051024887449384534,-.01922395718204893,-.009174461854633904,-.022468174999506808,.021117503507854546,-.017503811543560385,-.22284744975320528,.022524903374325514,-.002424496075792471,-.09669110978372604,-.02536087003748085,.0734346080832236,.15108583605808631,.11522226443939282,.12970385672228196,-.07892908141229386,.0971984257244444,.21130504158510516,-.24960514180766633,-.011817596006589312,.06452775261913146,-.0853478690093349,.049274344563864814,-.061577460717206725,.06300063698633242,-.04302334930536886,.06905146361996362,-.09609209741271528,-.061694173137081795,.18034406030249844,-.1666445086341438,-.05109356223869132,.06917571184956009,-.11903894138190432,-.08578984916300497,-.20469477506639042,-.037005982899997764,.03479873154153816,.06328330768692338,.1478972715952706,-.06693283066180533,.1370086179892735,.007180549013978707,-.062055289428567216,.22475761134030817,-.07322221407641237,-.08035792293619494,-.11455643304613655,.20483233186130478,.10475578834704286,.10684387147188838,-.10691746278338331,.018058380084354078,.12868991682224998,-.071026767781369,.04412991359728386,.12003274537827949,.14236952685647059,.2190537724998522,.06972281443294898,-.08245383109483935,-.10618366730381419,.07981740169235607,.17121755891446927,.11078325008253855,-.15750058347569248,-.026069272820390225,.1750146727921084,.19358075940702646,.15583357970340797,.1314463732378697,.10802544440564531,-.01580916665744024,-.06610829927750542,-.14852678093276445,-.054744536677585956,-.06521712872590539,-.026931855854101287,.017929035819714334,-.025775341056924528,-.12464418113700747,-.13001928465651194,-.23174171618582257,-.06690040758341231,-.03709918303218513,-.030813190076789343,.11264856069224632,-.03527958243203841,-.06628848394994874,-.09488551131695906,-.13366242376792553,-.07720989271153213,-.09436897350941438,.05333587816027376,.04107406795843098,-.0447150092155036,.14382963030480442,-.05498812596125935,-.0022013354694158885,.021968655062323525,.0329439993755763,-.00677692035378656,.05570262724455168,.05111435516912972,-.007148749241351409,-.050493456857222105,.11605609625221396,-.10773904713211513,-.017706549245958297,-.029669410521942108,-.16640935186157127,-.04875160020425902,-.07476982145547481,-.06622722600955352,-.10651310165824517,-.0009259202999153306,-.004589917738051818,-.04181250460220687,-.029841850511205213,.04002980807041698,-.11834854906365051],[-.1416112996871003,-.061296967431052014,.008152802197050005,.09580526115002841,-.1214127956380826,-.15258322744582525,.1445927030579454,.10275339944853681,-.07691119884141498,.010478075151826548,-.064039029125021,-.08481304352806315,.025051235358785943,.08718079453348203,-.20873218012341008,.00402987842713752,.3908263188881774,-.018288190749202606,-.19371161443949322,.21355438299293414,.19218769418470427,.051337448826137444,-.09999922975422756,.06560446225038871,-.03319662795708754,.07785737584463275,.22272869520521954,-.09660168373600628,-.13244590058883512,.22634536048380136,-.02375972162136081,-.16636289752872985,.024375919555805453,.01118486694572602,.009020288519323162,.01738778004965464,-.04308044705175586,-.06475241767687137,-.1537332549380958,.1030300818297557,-.08629596402176289,-.18748306121414288,-.08318754746590966,-.03706603563440538,-.09136333793445853,.04305649858582673,-.007622316436817565,-.07230025752872918,.1894925008401041,.09158289855115606,.09320983446495831,.07843331855262725,-.08607143419763086,-.16935758248124871,.21392186250732342,-.07688049468387215,.1402483451766991,.18838915415855717,.1152888395062736,-.16631002548138826,-.13317013948622,-.01945242561990119,.013015089132922257,.28543941281728724,.2388198484611219,.2392913757225344,-.02547786873886692,.0117330467833913,-.03132957329691152,.026405820579143084,.17735025822121503,.1538678068616058,.02287846002087459,.1542302335146502,.10953014299545374,.19864560710489487,-.10957662520495322,.004096363221989148,-.0032426759955409418,-.06495977109603226,.0023590326963191174,-.08244372846458639,-.08719294144345449,.005623424808332746,-.02409368738540575,-.12474400395578267,-.14738765659502367,-.1384339616668971,-.09473659901959969,.04347567453548735,-.022122242308695854,-.05800862114062226,.0741040946979994,.02746811155866092,-.06814597348439966,-.0863811984694129,-.0727547775413536,.01615999106259601,-.0950641791933353,-.05594427267665092,.02497006087889182,-.09215561876351584,.02048570000419307,-.0495383796436729,.06212742736945331,.010981352953109556,.0281069884335561,-.023412794627361646,-.011846497332482567,-.04146028359695411,-.12375563021141642,-.007547760161504144,-.035060694212351605,-.05438205070951038,-.1278750006993222,-.06311331594403119,-.0786704970157521,-.005247233965600208,-.027462118424014734,-.04814512084639927,-.09709510446399748],[.03545597743673724,.0128099428975251,.018180045357868893,-.0038058205145671403,-.0473391428905785,.008615195889998109,-.046294359253758216,.016896391023979114,.07340276062823946,.05785371895283696,.04680123991164366,.017572755691014366,-.023834114056900314,-.02800510880140695,-.06170353602256768,.004149251834100753,-.09993449140405691,-.07415143924934381,-.09713415783444079,-.050639923311780105,-.05191574061349387,.04633997176765096,-.1012934597135337,-.010697452082017556,-.13071299055096386,.06522431405188234,.035157185372583166,.07844423662993796,.020870147580858485,-.0830089239809709,-.041877105840284014,-.03251360922176908,-.06593863979190927,-.08137176665262073,-.042073049920613614,.11944084377042556,-.1937336181189347,-.14790789457158546,-.09187052041979342,-.02184032185490263,.047335657392996534,.06039693830283108,-.07953507862322387,-.04669220242777411,.19614607438362058,.15002481494362754,.22469015540171652,.4336980233057709,.1762683606847948,.08500299107454862,.17628001447054742,-.08979810484234299,-.10576233006915464,-.00490481488295888,-.06459170950469487,-.07650366146768013,-.048692615426703015,-.1959757066288356,-.2756929869078443,.2625475120947292,-.05687436219884044,-.10875561753818253,.2705215482381407,.2063604487272373,-.0015736429213762324,-.17758806144586672,-.0015425548641356899,.05084244703010095,.09266811280723988,.030409316616439044,-.43178847946646337,.3670160540730404,-.05915552713614603,-.34464726238122173,.10848868139611262,.10612621366138617,-.04925116048880603,.1601444515038647,-.12372249481679706,-.15509121511818685,.10449868648330295,.1609037713099512,-.14487084764912184,.43188545598260436,.11981190997739517,-.13832753618194632,.011269255569863787,-.08101222726930843,.17513077192869736,-.046057084014966006,.03371088310478956,-.01526891657845986,.1826204514940089,-.10024918536752747,-.09702107848010232,.06611097262664944,.1577502390596653,.10256401881259318,-.06527800895654612,.019464702453137826,.188208579856381,.07608051722555227,.2071145488595253,-.009713325447248497,-.06760102277029938,-.045103764368489015,-.047137892479800776,-.043049664063698055,.02993233671744614,.005679077431092652,-.17630517422062925,-.03088436961453281,-.020628025119333808,-.10197146214534561,-.11425424743932233,-.020673918969270674,-.024767884264564922,-.07442495050694051,-.055048990658499254,-.037227045102696574,-.16215779511908984],[-.07004854198277595,.08530066759995442,.0028140785761861914,.010033301281905325,.08986762359259767,.0529128072797385,-.050135511453302736,-.02228583900517109,.04530241460992952,-.030119412353457265,.021823370321703377,-.006085642883348384,.02312572806344996,.014528954043079753,-.001568379465944304,-.02799562401482144,-.16607590496950553,.07873010375424233,.03699424295397007,-.01614183061388401,.06880105102941908,-.043417173628397525,.03898116984593247,-.06654045740379662,.003103912767383826,-.01300877439285942,-.0925951215880664,.12644069271642389,.040772818622368645,-.08544840678502637,-.13739227291848727,-.13311138084893973,-.11021206177568971,.0707625808043871,.08026074315831877,-.16877857679840644,-.05206002447695942,.13425360508864773,-.10535134533195308,-.3373757349842388,-.07080829111345337,.057003657841298426,.09227991837255382,-.011615223103444766,-.05091285023944582,-.16069489160844241,-.04884780321779832,.07138912918565635,-.04363920243088329,-.13394293080575723,.3051554427853363,.2378825509835351,.20977385697294298,.12056019868772624,.252825166497261,-.0023561720800214826,-.035137059913897026,.04960472579867997,-.10416358483192441,-.14206356834350237,.25291808177088004,-.038235474676427975,-.05322667789675871,-.16540845786613148,-.014617042590940904,.02880120515663584,-.10096787597225529,.10737683950894401,.12267043383933657,-.058069637469088484,.07352676227256455,.010539954637614604,-.05168825690470079,-.07282455206762647,.11389405098260616,-.09976301394153517,-.099681076524514,-.008315492485143607,.02878172341423068,-.016643684462931133,-.10306462657645374,.17421739601581576,-.012649043926851018,.2602579418293007,.13061127474097123,-.13680683615114592,-.05587822675260603,.0986701444365247,-.1397026142526857,.029744590816758114,.07390705654095783,.1684324925668621,.08906251617397061,-.08125408387015486,.008056241239143305,.1543330950158167,.06177496919834771,-.05038568057644794,.19950920633649696,-.09557933307478758,-.0788481139143054,.06665690153364066,-.07772986657418926,-.0596875925692331,-.0023500722459320737,-.004628203808677193,.07546071468405292,.11777073451853808,.24712980105754503,-.021968024854625706,-.09377391043437706,-.011643488223564324,-.05525333705073233,-.06744624445549519,-.09785971149418887,-.06774706138183413,-.11419175135531312,-.15447612433882574,-.05391384760070791,-.07208253018814058,-.10185711157346036],[-.014135164933848525,-.08351620053083936,.02506177369695615,.07597731383733511,-.1543708822276642,-.04240467277326615,-.03452427885496658,.1318746103998901,-.018956619417625505,-.0026675236384224726,.10305833569336915,.04032989332488479,-.10561491356176617,.017365472828129225,-.1593697493161278,.032279086189098444,.10529509601866645,.07502773684291111,-.11928350111773782,.10401492407708587,.14421269322823677,.007128635131672029,-.07999230142858263,.014274946401273955,-.038729777215095025,-.1369496012325143,.186445386861957,-.06511068772461528,-.1410148340207185,.22619054701312596,-.0019016328709244301,-.04933121168492856,.014047517480666363,-.03385219568968647,-.028526407496796823,.08622983044935185,.10755614463917934,-.04037824355494923,.0401683364611443,.254423683384837,-.3499242547867164,-.11829463044440175,-.11321507805468442,-.03604040215384159,.009141892405151082,.015127629290737882,.048542079162587376,-.11506255204173602,.08169630774673198,.17250695232340318,.15415826584650585,.10510570127990954,-.21704507894326638,-.14596864247047642,.1970892398119917,-.12398828975192644,.1006649481373078,.12172147584675422,.12480836369060534,-.05598789461769488,-.2182875907330571,.08053808104260994,.23046289660391583,.3188307130696074,.20521924642268785,.008184293940090487,-.05433468049224699,-.11191127753279448,-.005694662513528959,-.04305552710584918,-.040460404096243685,.10030692443116394,-.06003655304519767,.1452733061685307,.2579075437158094,.16199120552860652,.04930945198956036,.004073909578384924,.11099001371044198,-.02069114395125136,-.11143944147535105,-.08109487565146697,-.11638633381884322,-.03895624919097286,-.1298485818109307,-.2236539925226012,-.005858846799339226,-.03608666892894484,-.07714404221145209,-.04740737716788778,.02742854885666174,.09959705342375114,.040004259955310414,-.07300667320953605,-.01763581250990936,-.07207223200520288,-.003164568505454733,-.06556721401175034,-.10478061295325353,.009440525764280297,.025831878010087357,-.03882003987257043,.027511569211728273,.0367513377238121,.0405623227423257,-.003866548091157558,.012355677864371528,-.053858176855473526,-.0006595635459506807,-.0026597994151184197,-.11895782317212758,.02214340071685932,-.046808396987253115,-.0749102218744493,.018173403762517575,-.06641276881651718,-.03312873600388673,-.12808543381027454,.005088055874176094,-.08821524190039703,-.11219840847108876],[-.036364274597361676,.05608389184762077,-.05461452843012937,.12841266882397054,.03469491513025793,-.09926883893735927,.03521836057773046,.0017050223771709963,-.053720515111571325,-.10469756632201047,-.057793517872112406,-.00795045861665619,.07907900137487663,.17475876751746433,-.07374553605560771,.14078752799492825,.1794528978247699,-.028798495109090064,-.05341395361001689,.08864249759394749,.006758819460119546,-.13125029810181102,.03217045565830174,-.07593804991299713,-.045683415387781846,.098321469102132,-.11054865427299748,-.0852516840999124,.19879712870261834,.020722064313346493,.022471477480525272,.08237578817308527,-.1157579046569217,.0328426457385551,-.0834841949715926,-.07733155072037588,-.11177282516936979,.02498427327318196,-.030403360600728728,-.029024515371594548,-.10371511880806172,.01170137824392217,.009327774798813021,.002431192271711265,.1500675723201423,-.21394797471762256,-.11853920458017891,-.0019533526563885917,.18177937076706377,.054954598440171316,.1551092512502385,.030060622456317722,-.019865094069587117,.0708509919696671,-.0004859623728606624,.17946399285467196,.3063856996663314,.146942416449439,.10067729378037348,-.07308124369958816,-.08339445345331284,-.13131133309870838,.02608780563916567,.15390102230569283,.1496570405635262,-.12432072266765236,-.055197512874001355,.23539003120249477,.23071437717412627,.1781500643390805,.032433010859872255,.08525021523699895,.100993857605809,.07603880964904731,-.013731917856005003,.0186901648513353,-.032924756112736785,-.22858777194216445,-.12675914211780165,-.11187142301820072,-.12231050055181397,-.022442794199238097,.014664186213991334,-.04970852405255431,-.03197136015018911,-.03211971771044804,.044761469162405726,-.048496783217227474,-.03589974376074885,-.05985345480378995,-.046858773572646534,-.05426850895959756,-.025596949047592216,-.05982046484213491,-.029518961263161905,.003629743164617852,-.02050906475466513,-.0015230193399059302,-.09000268059633068,-.026575598812970537,-.010828662191731439,-.00958826298559367,-.008904725696501983,.0029521526762387035,.003804200299764901,.061865649665059336,.03368981709684108,-.06606612846773154,-.02437191906735954,-.034185476570230244,-.10893624295233989,.0071168280186506665,-.09401277488927702,-.018408076739696223,-.057181782869844225,-.026056248846387006,-.0888896053651359,-.10212222492182724,-.043049828055051656,-.08505074774988258,-.026051110695555976]],lbp:[[-.027900321369488244,-.006044199455398492,-.029117905545804415,-.012327610537342652,.06185447666208187,.09567131789532429,.045971729446465374,.01553067346468753,-.012023121825700329,-.04029316502294227,-.03322173306652716,-.0035958268721606613,-.01385740637219859,-.03450377517429722,.017543175352255434,.03680790299409022,.0847701638561991,.060825220456424196,-.00935843747826113,-.04819258479124828,-.006594678414882305,-.030168034388727068,-.007336172112964571,-.04981223035149489,-.028525647622325873,-.008985143677856357,.037542932347811336,.07584997109273485,.04046362717652212,-.0202219777393636,-.010643448968773972,-.02597332435700083,-.029295410910686326,-.04958557380007504,-.016454172237658507,-.01348227645475572,-.034207328190167335,.06916911709301511,.04341473868302394,.06651463175082448,-.028013646641570675,-.002808516849433361,.01284602628352663,-.020229423320994658,.026363734996447397,-.02400313852588018,-.07141862886147399,.019799399074940063,.04796180221159682,.09039578917374613,.054870436486652595,-.015562181031975555,-.0052396854064607895,-.01338270347368932,-.0017450580356042078,.0009739701663268041,-.034245488638524155,-.029304216678874513,-.015762970169531754,.01232351078031502,.11024357683264789,.0052690576096130134,-.008271066449519145,.029191444997078354,.010481969078390848,.004867535658230967,-.004357914887196321,-.025720306996157922,-.06530772196855876,.016283145128269706,.042681321861108915,.07498524732130186,.016473247914334525,.013771073119619424,.002409271209863519,.02402373658667337,.03311091154698853,-.05687492377498366,-.02779707998033664,-.033810769624174404,.015078596551516596,.04820954520557273,.11415003087810688,-.005045314880618407,-.02453712965304819,-.00468780761366161,.030698630375551105,.03616439372074893,-.01765972731560144,-.02758989133869354,-.023775739038709096,-.0031653848755319783,.04385389272570933,.09352219252385076,-.0015598570273860773,-.019099238204545323,.04150064282791227,-.0029952551344066894,.02004832980498979,-.025805960318499716,-.014023218349180466,-.05204508933789034,-.008967676159698228,.05968818401249389,.08279211495839547,.021692573098100312,-.012200151839688603,-.004015872271331863,.04825409050791357,.005056525905835652,-.02977959275157679,-.045801516188543855,-.02221712686320438,-.02680636546639706,.08055750324533141,.11124706386872835,.024835176089393517,.013030726244874311,.026214268291071548,.009254142110422293,.054743249486413466],[-8733405863695955e-20,3744511793518819e-20,-16718852112379556e-21,2644971743018601e-20,.000264462374124046,.00018012006397465953,.0001307947973358814,-8923372716270438e-20,8777826143574648e-20,-2862970558377073e-20,.00019466262098214414,401751329527876e-19,-24470034822768327e-21,-553029953063288e-19,-946423652840641e-19,.00013992126181657828,.00025974343567526995,.00010836805931595294,-28508338861643612e-21,2061224391589761e-21,-5454650161993693e-20,.00011548126318818193,-.0001788968780262537,10106236414454163e-22,-16477072134012073e-21,-5446247916799025e-20,4605661321252204e-20,.00020886964911843303,-5986031362176236e-21,3914661702177774e-20,-.00015653886989401913,-5089337183815379e-20,8382851271535735e-20,-3925996520955967e-20,2902291352309405e-21,-5565629934778556e-20,-39745247630351005e-21,8272782580313887e-20,.0002161522182193877,.00016964902161820464,-.00015046509771197286,-3921198670451664e-20,-4180425775067442e-20,9894267364120909e-20,-37700357389545795e-21,-2177725722603708e-20,-.00010841746095995551,-.00011250296826445516,-28088672225879026e-21,.00024500271057997097,.00011698005994424145,.00013699860971772872,-.00011632402760545536,3875862751891168e-20,-5038359769517133e-20,-56491249769561463e-21,4185884009918865e-20,.00010510216324040138,-9590859027243034e-20,-8266645789113854e-20,.00014673240802820162,.00017376564896403636,-6678574946682864e-20,7611797237477933e-20,-.00016836279120163201,.00012436785920524364,2572483873684861e-20,-6233739114039019e-20,-.00015376902099116518,-2748263618047534e-20,-28455141653132252e-21,.0001245843209365903,.00015628289279003135,-24736989716003788e-21,-2091205958625747e-20,4322119151170013e-20,-10154715937089193e-21,-9984940135583913e-20,.00014166961818393338,-9975850346157812e-20,-53681414486151866e-21,24697228767074902e-21,18249672491638027e-21,.00019364243897489978,-7270865905296443e-20,3833503229743254e-20,-1941096106845841e-20,-3211589312954611e-20,5194800902761157e-20,-3828665286790579e-20,9718914766922854e-20,-.00011816184055358711,-.0001608951052632472,.00011623698043458554,4914609018877997e-20,.00010181714739832155,-14287799392848771e-21,4329186978297046e-20,-19967142031866378e-21,-17367657007066883e-21,-1958295690860596e-20,-3283281790984749e-20,-53813630280598324e-21,-56207569526993666e-21,-53241932910777154e-21,.000246150675620279,9755325673970752e-20,2184380833295408e-20,30258380552987147e-21,-536994548692854e-19,-25230762735903084e-21,-58324496095124025e-21,-4704951979198578e-20,36195180921022346e-21,-29440640435682286e-21,-6951691214569111e-20,.0001245682381541666,-35053968305372846e-21,2198652730018625e-20,-15332062580714734e-21,-23047309958091743e-21],[-3608404341198324e-20,-19306572941766697e-21,6646962740002819e-20,-6962670685985856e-20,5371768560670769e-20,863369060391736e-19,8214216469496285e-20,-8171114091498795e-20,4020583642892067e-20,784794006856715e-19,-4903957279393974e-20,57453551592964724e-21,-.00010018086975340998,-26147792389851886e-21,7119822499740576e-20,256826894427754e-19,.00011929111371736115,27860714214499385e-21,32654486739197575e-22,-5557377778477035e-20,-2404083623067446e-20,-3701581477554526e-20,-.00013308586174926723,1923769352976841e-20,-2744584321235158e-20,-1199439585908063e-20,3503221513237692e-20,9488962331498894e-20,41828095702725956e-21,-3414743435345598e-20,3169205730994438e-20,-.00012748342849396022,-15840876485394284e-21,4707381531842206e-20,-5421937970362389e-20,-2705782355519326e-20,1957250209402156e-21,-4288536254476449e-21,5178424749251176e-20,9761401759530303e-20,26206437789333403e-21,-3840723379957417e-20,-4362072745626999e-20,6128293160232842e-20,-4148454691484116e-20,-18991776069687133e-21,-38766273328664363e-21,2484202617520498e-20,1943116733871264e-20,5702208359950611e-20,3694337177818918e-20,-22802079412020948e-21,5853333390840043e-20,-3813407529522361e-20,-.00010733273350739298,-21349054282106955e-21,20212901591327992e-21,-10308234675579855e-21,-.00013178259714422685,9279272103850794e-21,-6406096160121999e-21,.00010489353656312206,-3697248644238607e-20,19205959162101743e-21,-2511990116356623e-20,6667792694283825e-21,-531731014322967e-19,15595662104549764e-21,42063861440242226e-21,-.00011208840161249227,-804760850466775e-19,8680420622040122e-20,8634418119911509e-20,2871909928729363e-20,-5315547640919859e-20,-545706460408045e-19,27740013315707968e-21,31290284801600062e-22,18897139614309187e-22,-.0001217910193286112,6684001979999701e-20,-.00010633851278423791,3585974050224726e-20,.00015372154099424235,9348210886095994e-20,-5125286229408369e-20,-11146007599487084e-21,-1974434348965201e-20,-7876897525998811e-20,-7589343500492146e-20,1.324648660373383e-7,-.00019713417520837023,-1337483475241652e-20,-3224358743243727e-20,4596303620339401e-20,13630966931021948e-22,6109082431611079e-20,-3706394435481347e-20,53774349412737815e-21,28714809252497475e-21,4306878791979218e-21,-5939860073451411e-20,9406447132680748e-20,-.00012585758504905786,5046091931880468e-20,.00013218227218045244,9039100886970575e-20,-6429921493615598e-20,6142853695939934e-20,7.239739626676775e-7,-6366839054444684e-20,4875875996353772e-20,1370601692269463e-21,-9797285675387216e-20,2971466240122016e-20,-.0001706545086223566,5.612942066759996e-7,.00013050423194534838,395126482290141e-19,-3085847469895715e-20,-8077273509681307e-20],[-.00010041713705304361,-7500442798199884e-20,7757883670955843e-20,.00015060096637672937,.00010272729354795368,-13455811985058075e-22,-8513816673568278e-20,9527795830454114e-21,-5125057113741175e-20,21937041723950335e-22,-29906736665197275e-21,-17822507535654366e-21,15920560761634173e-21,-4.261982569468692e-7,7562151950798492e-20,.0001239109032662375,-3722711977173065e-20,-51851912943837175e-21,-803596655161512e-19,765565067066483e-20,-29340700929650354e-21,821553152150125e-19,-6.016349855747852e-7,-9023135480878573e-20,-.00014677611474230284,5845918636756403e-20,.00012920305793076987,6872786215014054e-20,-5083503031854536e-20,-49057975777679064e-21,14667265166828924e-21,2286695792285548e-21,-4079314741480466e-20,3183308135739065e-20,-4613990727000831e-20,-.00013108954174256143,-4501484916721865e-21,.00013512478717948309,826930538492766e-19,3721284922523528e-20,-.00021401767748336522,12160803497153136e-21,9.952609802427875e-7,-4075124924977393e-20,-5336328559522527e-20,13589464997432535e-21,-345759529827485e-19,-8622627695634676e-20,.00012833142734719472,.00017949919377930994,-765882636792354e-19,-5944682094518802e-21,-33933589792761384e-21,590313072185069e-19,-2015941600058864e-20,68480128461272105e-22,-3508045003294022e-20,-.00010776252403311049,-600921381866161e-19,-2159187449902837e-20,.0002085712636860533,.00013308075647107918,-.0001903889494856842,-4831173646739281e-20,-44977282909152566e-21,90492245632956e-19,-53993236004005844e-21,3127550397951338e-20,-32914668064622926e-22,-.0001300625110249795,-6266645850235139e-20,54666608924943544e-21,.00011702845908493319,10892085020900236e-21,-.0001916205540711466,17055725050175042e-21,2974210675293909e-20,15551139561116503e-21,-4502371600243263e-20,-6583516855715454e-21,-.00012255723604855578,-3920737276867474e-20,5771958770709948e-20,.00026173109381898325,.00011301129674169685,-5080215699575707e-20,-.0001243869391549888,-.00011512378434027151,-3374354581756056e-20,-3513223524136323e-20,-4634590006692987e-20,15030465562238389e-21,-7910833311019355e-20,-.00013976057205664083,.00019173792465106837,.0002331493622096184,-3268225732732245e-20,-2227669270683898e-20,-.0001315957648230781,-53703861605495715e-21,4665197153655133e-21,-2972979099864076e-21,-7426673074854666e-20,-5389279737498141e-20,-1316760153250926e-20,-7308982049164525e-20,.00020790545462955686,.00015786906649726715,-6960744974618783e-20,-7326178037883428e-20,-14507107393861574e-21,13219651490949808e-21,-6593083565341155e-20,8711061818104937e-20,-6526758037324852e-20,-9101278128805738e-20,-519613620658093e-19,.0001223100464897317,.00015993077204011844,5.661236479985454e-7,-6648288869066455e-20],[-.018520133751243464,.033336491324542555,.06081972052702993,.0403234188341325,-.049047834696932316,-.06347096044284493,-.04169138568148076,-.044039608866153525,.011258972442574882,-.025539787514069722,.04310353541979861,-.028504032717188526,.021790396749209295,.04481318360580548,.0723426773739236,-.005458099176353502,-.06882073452470694,-.027963615041034923,-.043243973359288305,-.007841875469478926,.024040296276847006,-.035356451324435254,-.0008604274289066407,.009646784441390738,.029019444355814925,.0670228673130171,.0570295199495771,-.04387390211614425,-.07566337240739801,-.04686804669941795,-.018264867445612423,-.0074626900784457925,-.021262044142767906,-.008244104627304624,.0029955900266555547,-.00897292208556475,.06110079190021996,.09963612574284308,.01246798784414134,-.10296028529728725,-.05237128920245662,-.027534950783727603,-.02944553940547851,-.01443811042623852,-.020597801030636742,-.006919272938826654,-.006835391157824029,.04688884353545417,.09541942261577638,.11952740651114951,-.07175987915284258,-.09754334934777459,-.038581839090091406,-.011359375549234043,.00964142181655377,-.019377865703622918,-.027301905307660128,-.018976931848243853,-.00978742203227878,.0524944655238334,.13673694152340612,.07952283938161182,-.12204275357398138,-.08665908796412561,-.05078845296122016,-.0095706052201628,-.03186742656352511,.006540302317521961,-.013821229136400558,-.02584184447720775,.039927962074705635,.07878385751956893,.1450947970513433,.015223051588865631,-.15795321280384766,-.07811502424267372,-.03558611880595702,-.007443419814041202,-.003139865749646073,-.0037907036206188023,-.017030151899642937,-.028687071734543906,.03323129261766285,.07811298264506993,.14321815919795058,-.019232041974005604,-.14758943164396549,-.07987934896985584,-.0083758813479438,-.001332845218467535,-.006955522360264185,-.013965719003215596,-.008451714274353456,-.03063597972542298,.06256465713920223,.09748393378111853,.09839310949156199,-.07576570448441355,-.1345049705963265,.01408859066995908,-.011155752837349455,-.013224455473029723,.016020761294862018,-.009200938406151202,-.026044280280468072,-.008994262269942425,.04051199985592628,.13765939646555747,.019532039084030235,-.113685740386246,-.014674643494660689,.010068963393355071,-.0027238337107524657,-.029503771627642287,.023985321668865342,-.030691543491141608,.0007527324046454065,.01650943903238357,.052598123173995245,.09380740707326368,-.01016129896564169],[.022420101691410947,-.012639778282766856,-.05496752491430325,-.09678359828499591,-.029278797210954027,-.027140150032464422,-.009086276427296383,-.01436525543604809,-.003687496591271795,.046401379667166204,.06944892468679216,.04643760574981822,.054029149328551414,-.014720520773996864,-.06291613085606523,-.09877570015592266,-.04567817860486598,-.010326416710093567,.0033233465331775174,-.003408377595803285,.01848914529385009,.061679618222812545,.030027128801833766,.05634758692836747,.02544036002266721,-.007935323661302764,-.09041002155588418,-.1291963326158919,-.03453677250699974,-.018948700084980397,-.0010618822071395313,.013098312160546995,.03236384831317149,.050549191984487554,.031990411924285006,.050348641795340286,.055949633963116994,-.021494030157359074,-.10945006672723176,-.09734195910364446,-.06973361211604338,.00046788820631171735,.008809643251631341,.02199434250102591,.0027410119068893707,.03937245459175063,.046870579313232824,.06560087237985632,.050120908492025634,-.01648319597891807,-.12612174723616837,-.11190212135650279,-.047331697359264666,-.01726103679627998,.012596718517964785,-.007534987691347805,.003800587779043199,.051789101650355995,.056092751053536116,.08408229549261982,.07714876790536954,.01105027135906226,-.12128857542605344,-.12084191927896829,-.053176729528096434,-.02708040311428029,-.007567852199102276,-.01607121542877013,-.019007628063393803,.030912220436668407,.06118279351109974,.067857694007842,.11648893540497803,.0512344485487121,-.06204776879033164,-.12295702506362237,-.11728242791483995,-.00044317389712395395,-.0022492229405423753,-.027298027461083098,-.0037412679982248703,.018339305301497556,.014062213845781296,.04277676110368374,.12121831309988876,.04392224162907524,-.06079051210766134,-.14710686167847625,.01682921191415422,.009774321084507043,-.02655745267922931,.01411019215769007,.0015911500130474376,.0048095535457472055,.029093722335047395,.02204063036696597,.11057315594923375,.028480643798939262,-.10628170570505348,-.03590828412810325,.0133539331015953,-.002633742567859254,.0037217642215676694,.01211758091302224,-.017185123404806685,.03753956093170496,.021332506924666678,.03707666923018141,.03494429733533575,.0038125076728691906,-.011494533354137266,-.0025310349463153192,.017794319144349827,-.0060675629645619775,.006180238569289925,.02308753972166691,-.00907376454764161,.03951653694732021,.034463079883642105,.03244860091570109,.03440298478617001],[.006833664799623482,-.018868811143753335,-.05913603583224984,-.028733110863327534,-.04829617939991479,-.013674449873764477,.021589567751534984,-.011045509577009407,-9258630983010165e-20,-.01960482191389674,-.04355428178094816,-.006765420902067568,-.02068305720368354,-.03070186802345203,-.028849057542991427,-.017812677518967715,-.04503183248327566,-.060820037371985124,-.010178321392366178,.015937284977666402,-.01698509349521011,-.040648498140976104,.06280897878456403,.033289631093537754,.008634099432145863,-.010322738843516595,-.05903252336323617,-.06391120751890109,-.04096234057148166,-.027001415147463827,-.03498983294880336,-.028182307754725123,-.04299820329555072,.06917007261987672,.043703797355855584,.05282910539234762,.047980736517133415,-.06274650882720548,-.07875819635466827,-.0751276708793455,-.0671438769251954,-.06672639917254525,-.041696339372405265,-.06075015207955728,.024187583912489444,.0686409384492342,.04159853360684597,.07890656921433366,.08397942165203948,-.003826384504148673,-.12006341244852366,-.11316397468328382,-.13578926241060613,-.09303774206309338,-.09433132526637494,.03937483983702499,.0018502894554712629,.000984038845573007,.04325107519511976,.10289600250798445,.10139457516638843,.09829631821399298,.0015172138792846615,-.09135330947280887,-.1440860031190805,-.17601217218477397,.002721697853233701,.0050459512202331094,.013052368344425278,-.02268381542321192,.0018963147223881672,.058561197832169565,.10081746684744355,.1284091469146558,.08188906646407153,.020432446864236044,-.04116799001043432,-.005502874712895622,-.006594260156849684,.014863290940840906,.0037309761431811826,-.0055733957673353585,-.009515414176632847,-.008563542363006937,.01325304930824055,.04873259122927679,.06968257130273349,.04672070338900198,.017479981197113373,.013140374943216824,.00573389677019673,-.012003741816435577,.023955505761992523,-.030000657870097674,.04756330464976506,.007725961017352905,.03323790246434746,.017011399778159172,.06153392137062173,.020212718731567866,.01730531135395401,.0022897792857957105,.0016835294612028012,.0010206390840901067,.01747502317182413,-.017949934386931946,.016500074421584708,-.011803197631711164,.007137586575514963,.02011099182013329,.006651065061760698,-.0353549624782888,.027934388454869896,.0035907122794057167,-.011547179475815586,.022730843153114938,.006345055638745614,.06398828539043275,.033769980297886006,.019839431713957675,.040068406254536615],[-.09183594794624823,-.0466043876758261,-.04167687453198425,-.033930262028828845,-.03517587565580586,-.008045362654548874,-.009021658985160448,-.02121447197147619,-.06292548586295785,-.05369020745787989,-.0618588076252395,-.06937986410985425,-.02060369128265696,-.03483097193988242,-.01988932284646744,-.011468099868646962,-.009484774253505406,-.025059650809968075,-.013132163916809988,-.03437383180845529,-.02938879979144582,-.0546787384022234,-.040920673499650034,-.07902649047779237,-.03130123722693372,-.00718723412900148,.003445843327260077,-.04206580964438329,-.021031719352458608,-.001277101170823379,-.005576040960812231,-.04990522219778968,-.06783574597887165,-.025379854810453996,-.06049669189310318,-.09568385034463026,-.06689754291617617,-.06521449364129495,-.042633834046964025,-.07740133422043802,-.06922515967705593,-.04659656740582098,-.04853220277612018,-.039853128982711955,.05879198798647087,.019029808637362255,-.024286125044301457,-.03253634836244591,-.054850631234694594,-.029159852423518498,-.017140255241788596,-.025126219632764957,-.02186622142452392,.028552819914696353,.03999190078200991,.09774584592893341,.07500340541645678,.07430547425958485,.046933143764967475,.09859668083056936,.06983018450778086,.07664797155219553,.05500541911083007,.032350115276010255,.09666596274036102,.010918853676894331,.022113519271821657,.0523225365915608,-.012178262012994243,-.010455542631323735,-.01888044146641481,.004719973212097298,.0026889619208184806,.01898501972382094,-.002328472551695579,.006228653959377713,.02991543479514363,.03554504200969132,.031166989162956585,.023817329421070923,-.027070265784234368,.012571032012612495,-.010191882170487051,.03802797654560244,.02158393678645775,.004170973015102178,.005575382535277115,.01728290035888932,.012313387276719573,.014888890182775907,.0026555936507575845,.004149131184151679,.008924752394914795,-.03519222344913451,.014939222809458778,.014096628107623346,.003899474407467603,.0038988514456372763,.017266521138772535,.03424435600609853,.049763931691756066,-.005218910309326261,.026330780935207528,.0018007141228710017,.0402018419673863,.008387995416966193,.008967125049808011,.021011865402405266,.005380946747830254,.011462851184232362,-.006613398874329282,.04584134978530288,.0475920900891177,-.01138244385540027,-.0007092748000230714,.0074075056026355335,.001984700907982452,-.030303270976541313,.01851775398647603,.02621673416832952,.034368064491053237],[-.02753103743267269,-.04099006670908386,-.02696562329553056,-.012312380363310317,-.03944768652546398,-.03666523046247578,-.03744739031566407,-.022587619011761463,-.0625821001747217,-.03342350871319178,-.007637317988414916,-.033315735899947165,-.003948341269635777,-.01627351051013091,-.012992687546803472,-.03437263696625451,-.03435111582313348,-.0510893061833293,-.04626801483244626,.033800057143038305,-.007358659571581477,.019133386626946858,-.05829785436340175,-.031082988073954963,.008377250974495693,-.03707132419860096,-.023704461959529924,-.039291684655309064,-.04826391044850603,-.012347480993205387,.035773003788554164,.03715665941723243,.026570153340676375,-.037942266517026105,-.024176653665932857,-.03130706147406964,-.054205313513014206,-.06768275375230659,-.053316198087527286,-.010338522140239293,.029942502875344803,.014711352823963025,.04980563760374265,.05237150204962154,-.10703071666798925,-.04501119930425149,-.09273134834521438,-.08509334969421603,-.06361011095044078,-.009523520649299257,.04274236525114643,.043444162762555597,.04603648581621214,.02877888643752123,.04790715055446394,-.12009138239136509,-.11012922541438776,-.07879836373267819,-.01873724788103188,.031173984486382707,.09507464957619034,.060365097674145295,.0192205547976207,.01388973862340221,-.007666683391016546,.01633660664697714,-.008940205583487165,-.009503128569333559,.06964533578156246,.10401039886252086,.052459790243731555,-.026938277073398003,.004284176371855913,-.010856375573225323,.01605273011301905,-.02894886868907141,.00023294115249347658,.10367861418152627,.050069068200320935,.03685333261379678,.006503829118936898,.00554763216473721,-.001084420000763836,-.0013256537401329926,-.0055543179731149875,.04532956341916991,.006535607422749515,.0006077852420976783,.0720387039555034,.028968613954759095,.01396712994861575,-.0072270944036459395,.007223170941502544,.008856422903267491,-.012818406202984009,.0018158551557052593,-.011048631845851281,.008195206301087388,.012550415026440526,.03069656579488156,.06797584711521609,-.02220979552793179,.01737394610788519,-.005838170895901457,-.01693308811992302,-.020606794484921063,-.003704387174378517,.0029398368329221804,.009607897483483577,.004161932105397739,.0516685017960679,.003998946113622753,.031118179883235883,.026294533996712728,.01753286865508474,.025533735463243126,.015158623449280213,-.007948093099936132,.0038964542185176585,-.0053933087386399264,.021361178289641174],[.012975868416211518,.019239320212785932,.015861069262982933,-.050083983501051685,-.014830404072943748,-.0424289245308103,-.0546374523172155,-.0878762149438238,-.026658677207938124,-.015590232984336386,.03689943449493213,.024659476737796934,.0020171111101438682,.01792183479538166,-.027324028879693207,-.013180029299528148,-.05575312970217452,-.04908486985614233,-.022370349979819272,-.004286198645007025,.04158855875057531,.026714819884015438,.033049974332900536,.008952144881169272,-.017401493840176877,.007542824301934162,-.05929647739931365,-.055868974136098246,-.05766043388721309,-.04284635119162802,.014163595597386905,.01612640939175765,.045832162409125146,-.03439907801328182,.02414139532328007,-.03480844516109875,-.04034265201985267,-.0712113540832054,-.06622081461788189,-.021197302763752403,.04015424602323608,.026897565966803642,.041075505774253465,.013102896697572107,-.05480234757474079,-.03615843428627315,-.0256495795872312,-.03170930021161294,-.07192249463955766,.0018536114632540868,.06135675209286226,-.0047182623867055755,.04074858701900924,.013385521369616127,.022021140563933967,-.07134501745680569,-.032751414465768555,-.061368302060063384,-.07748401723316255,.04023545911315542,.06810335862563427,.05265230480605027,.03710998185032392,-.006950220716361566,.0099627248261238,-.013836396194806236,-.1076545781769893,-.055495023231610416,-.03496995103010396,.01121193007638921,.0718124994253257,.07345257959210601,.01148280537459053,.0046876216072186,-.018292746840584097,.034170522532356445,-.010280828511826764,-.11953193347980212,-.027928919333068614,.0391831675566509,.0547844453121025,.0583643920865288,.010347645401137313,.02438343669115889,-.03722491457626667,.018329010676908897,-.02136233863485139,.016317900816211706,-.036988609665871267,.02534543374576112,.04992907977420978,.04624311416244649,-.004960518245054349,.0034919992815497097,-.04484656903233744,.008315169342987538,-.0013347971554703852,-.03179501043076588,.008411224541488016,.04299524896058729,.010370090496971934,.032726802355203644,.01761362144315562,-.017879863195363097,.01304441155731989,.003124595073743172,.01780561320147782,-.008391127850107934,.006798248666313525,-.013767337935693395,.05600843124586649,.046170998183484704,-.006763094409893727,-.011002116865157521,.021424043858876557,.024102164398572545,.034701661533462574,.021782351862351945,-.020308680817982358,-.016830911622128797,-.00899775054774562],[-.0005328872292873488,.01181232486259727,-.0097595448326459,-.032900195859997115,-.0400553091181672,-.08766411824986632,-.05468227136762457,-.012138385460291765,.008135289535704207,.05824964665941917,.030708308006623514,-.015344928171805335,-.017993990035881716,.004920391091459728,-.013878741210342176,-.030835237792518008,-.057101218092033765,-.032671359607370866,-.0037749689752403365,.0469752598884856,.027796476796038583,.009252309128265579,-.018920714229260328,-.017057777895009705,-.0026666003038471045,-.03211973189641702,-.04497372299943663,-.05538368996902822,-.009123266518274652,.042052749594025995,.005945540402227178,.05219989282131953,.01392172979504619,-.019417768980458633,-.004212080572451191,-.01605947649722595,-.019873270609575895,-.0632108563907854,-.06190209155478818,.010727975525090354,.04880108856817372,.03739279703849559,.007267363268597712,.012809806033498544,-.0034510716108627883,.016898125070602375,-.02258964010499252,-.062363076360741024,-.06095458595932454,.018029070106769074,.07160099269491219,.03903485527346992,.02091899590499463,.016561765175755305,-.02386696149634271,-.027629495788895585,-.029461697539283106,-.05511122466510598,-.0689533243854774,-.03177643247751053,.03810851559309378,.03261623684462288,-.005689124686065222,.009569063385281198,-.019286757729714242,.006244612168707565,-.028641062503210957,-.044571632732540445,-.05624718810414903,-.03574975310289123,.07336553909199203,.0676553327913772,.026480919164869672,-.022367434017255376,-.006912534712572561,.009889915693673396,-.013395387566733363,-.05983754383467262,-.05507139597108082,-.05723468266875836,.026937252303024146,.05677800350182122,.04551233137743267,.01048979528057183,-.021873444057054492,.00025673627436038904,-.009198435994732329,-.0032360325511277127,-.0984539463761526,-.05663439057337742,.040879143636173176,.05370778846834311,.021417408905106447,.03366002971067647,-.024266957419143365,-.03972053131311021,.025845458247811957,-.003673727574750832,-.0019562811556378054,-.09207564398085624,.007153773261709066,.04823548820375423,.031953649727852425,.003989147112834171,.013123842004803394,.011507174787329752,.004859902547353662,-.028069938515581847,-.01371471244881068,.00445041420022059,.011633142638130397,.016824865792836985,.04401041904923399,.043598608889422096,.010461702283433252,-.011713831073031492,.02335003228067359,.02582450844413056,-.040208662190134595,.02222162447392509,-.018983577713146488],[-.00012902298195700823,-6203914310290437e-21,3270188625541584e-20,-31071238546384605e-21,-780123899081081e-19,-12260737746391803e-22,-9342863494700947e-21,7583394283932829e-20,1883802543940164e-20,38241995713984844e-21,-58626520388890824e-21,12707156678677667e-21,-20943050504294153e-21,7261809523898682e-20,-.00010859928908422273,-2898545662871621e-20,-.00016736251968167692,5813389186073992e-20,.00011171839620466306,17754895131873172e-21,-9451887160561584e-20,21444236751338823e-21,4686530062475956e-20,-4638768128616827e-20,-895608969877365e-20,29042840169843376e-21,-819428493777051e-19,-6123646677875594e-20,-11152819677964776e-21,.00010188996994199562,-2219289260330104e-20,-2286896213429812e-20,-.00011509542457514149,-4975805732385097e-20,-19393139160640838e-21,-9473436244123584e-20,-3080227941041269e-20,-11207452486435205e-21,-8874927481172215e-20,.0001330064684000598,-3592527180081018e-20,.00013742103255615784,-.00011808493242440599,2241467472778591e-20,23854116688329374e-21,-4532237684537477e-20,3457318004287946e-20,-46142794075512694e-21,-7534899474759271e-20,813877472354528e-19,3379655202032095e-20,8444712037840307e-20,-9027489545843093e-21,700808572933545e-19,-6146002971858106e-20,-5396774592323077e-20,22718206186092202e-21,-.00015616234415340852,-5694850548253194e-20,-7411583686896261e-20,-6348787135312256e-20,7544618472959952e-20,44606522477112776e-21,-.00010450123996736185,9575220196807177e-20,-4457919795537724e-20,9041480675917729e-20,73014201662433e-19,-6609443264028042e-20,-.00017393323793045423,.00014375964009427644,.0001411308038314421,-14170194328547159e-22,9805969688744115e-21,6525306061404236e-20,-.00013047653881412095,34993317070665386e-21,-.00010216225080474789,-8421970014757811e-20,-9702506200079787e-21,-8518306964659054e-20,-18574643331822427e-21,3863750428530015e-20,7924976063334796e-20,-9677401340536795e-20,-6275449754510574e-20,.00014663167384857193,17006970539279118e-21,5515067301717358e-21,-5171150202431564e-20,-.00014948514404445907,4859077783214705e-20,3882034565911435e-20,43569583440402574e-21,11474225398808158e-21,7315650444834551e-20,-3817228096697489e-21,-6370758050999042e-20,7265951093617107e-20,-.00010594170361082414,-6334462175296759e-20,-54025363748051725e-21,8306140391016459e-20,.00010798285789356821,-18400164812460568e-21,-4980449602800738e-20,36572621350011714e-21,-4748162217272853e-20,17943415993419156e-21,47690435629216266e-21,-12465656421243882e-21,-.0001963530594405287,248024743702141e-20,.00015032297597119496,953196115957497e-19,24341784711353828e-21,8413530791243073e-21,-10237800380508144e-21,1763976802500629e-20,-49211961308678887e-21,-64779795722128e-19],[-21081829939189364e-21,-8362088116248235e-20,-7932390148413155e-20,-5636956366645684e-20,-25225019111016402e-21,6703834026125543e-20,18979428320805604e-21,-3638366764309063e-20,6353538152980426e-20,5820117801163101e-20,41579935042042955e-21,-8024625708595318e-20,-7702454308859512e-20,8015274585669932e-20,-.00014513612413195485,-25225497027576353e-21,.00016501583478403825,26271142708690046e-21,25316005334570513e-21,-6710314871762046e-20,-11803827654757997e-21,-372807048148985e-19,52411115100495795e-22,19188281117332165e-22,-4146106415075894e-20,24848310095391263e-21,-.00010693164000688581,2629464942982779e-20,.00024742918857803727,-13795393578770743e-21,5782187472772732e-20,-6354620165343336e-20,7918485955484174e-21,-29438053918515172e-21,-51191789614749364e-21,-5229702720297184e-20,-.00015826280154122114,4470993391159778e-20,.00010006580584785707,-15725171825552758e-21,.00011394254284542574,-12176783409917694e-21,-6200618380580725e-21,16735056790493242e-21,-323212180565087e-19,7045531076459556e-20,-11204046406237695e-21,-3775925249514204e-20,-9670731384767844e-20,852803283836217e-19,.00010626012688529703,-7905952313793047e-20,8752635172308131e-20,-60072534243107534e-21,290057435677212e-20,-2231589629678437e-20,-6257719900576181e-20,5183460169959201e-20,-7817887703419856e-20,28746546782532946e-21,9119700973142172e-20,-852854351947735e-19,15505315731474678e-21,-4311767428466929e-20,51101985086758703e-21,-25995519087103932e-21,9540315959162202e-21,54456486999133005e-21,-.00012492021323487425,-8446861626216855e-20,-9000869760849206e-20,4617292956130177e-20,7131283142743387e-20,-.00011470771088624421,-14346991649049484e-21,9745371306241332e-20,-4103792364993058e-20,46700567506506845e-21,-39864452388190625e-21,28496279151997124e-21,-9066823994197191e-20,-4474333361753689e-20,28884441623257457e-21,.00010540785842768621,3850540540015733e-20,-.0001569862310024095,7333505863876388e-21,4980302809686615e-20,4761492243998699e-20,21925161837212364e-21,-6862967496700987e-20,-.00015530778840890948,-3100212558819124e-20,63968237768941e-18,-3110652125908053e-20,919348370598315e-19,26946272223389578e-21,-5428276280328463e-20,4019534042066982e-20,-29248092071432023e-21,27237642583656692e-21,9818576660706167e-20,-4238942943930724e-20,437933802041688e-19,1648143860304152e-20,9624841075065588e-20,-3311887572221084e-20,676991250226841e-20,18952909147867698e-21,2937141984699513e-20,18803983863591715e-21,-.0001918611946931155,-5361492348410202e-20,-6462519662564503e-20,6210164219470058e-20,.00011142710960054477,2759753442293722e-20,-25794525775165963e-21,6410204084775217e-21,4368327011048268e-21,-6805603078857605e-21],[8728842187032126e-20,-.00016058377648589737,42400373088111865e-21,-54107084248774395e-21,30344295765780732e-21,882360890899353e-19,.00018665417186519012,-1061795279790577e-20,4885846037776739e-20,25608835436190377e-21,-.00010410765791478177,7933387506242617e-20,.00011912193130779857,-.00017617567516805917,-.00011561862531249794,-.00015414695744926516,.00014088130997128717,.00016468128155683326,.00011507720929629026,-.00015709778676884618,.00010763417094498772,-9118060462058597e-20,-5508653999588783e-20,5947422083681987e-21,-8629107368620162e-20,-.00012420251221447246,-.00010346788082849325,935995936971781e-19,.0002625472927860578,6422276557765906e-21,7257266193700323e-20,-4033497396762134e-20,6790572474528467e-20,-293776948290119e-19,-23486357610992304e-21,-8391032420942423e-20,-.00020864486749087939,-6775559021569597e-20,.0001515708034109664,.00017533733335889368,9533289604529704e-20,-7861973811299286e-20,-19995583621156693e-21,-3961877552998566e-20,-.00010062395102337484,-4900729568497309e-20,-3336005837242979e-20,-6022956312257328e-20,-.00015274074428942797,5806326265090991e-20,.00017946285495735103,-13678668845418327e-21,-7875724604470129e-20,2392826356772957e-21,-2383934382830591e-20,-9248265240540364e-20,2977020663417606e-20,-.00014104067824765015,-48579147311816374e-21,-.00017751495448386015,.00018735013824282797,.00010606389466041302,.00010933903734035946,4326901515144788e-21,-7174356635997919e-20,7032101453665685e-20,-893257874152939e-19,-3459205239020324e-20,-.00011018808045150374,-.00019880825872508473,5.201874976688142e-7,8541038789584583e-20,.0002000466893309139,-22823030905125513e-21,-6622604266612233e-20,-14683429230855091e-21,-9083007354734884e-20,-7053308710326537e-20,-4315510408097855e-21,-6661208988538347e-20,-.00012962736237221795,-842055627210533e-19,.000190155191316624,46517997794389906e-21,6502991919084787e-20,2524813370562021e-20,4950666894367065e-20,5403438876258235e-20,-8582074360451155e-20,-9144084922746638e-20,-.0001351188219344602,-6056408504869371e-20,21193874455255248e-21,.00015210079798582028,.00017075069883851484,-9084479071910746e-20,5430280204265364e-20,.00010180348435486356,-60323087261991346e-21,-9446302123957586e-20,-3224049544122138e-20,-.00012010188056445995,-.00012404303956506726,44630583568044946e-21,5250706105822123e-20,.00017356731784019808,-7695969697162913e-21,-28710064423776577e-22,-3492564386190812e-20,6244744275625373e-20,-.00017903527875390193,-20437146053053435e-21,-.00018575226473759824,-.00012521765442334218,-2421730944221934e-20,.00014051754345432033,-8.203517133124547e-7,8747580275354105e-20,2493462166015104e-20,6484582516230675e-20,-639344425781499e-19],[3539459461619765e-20,-6807572297566275e-20,-60927166479846084e-21,-.00015316315161422248,7348022235523916e-20,975638084422803e-19,-12450172577060936e-21,-1450056866179883e-20,-739706645667415e-19,-4034038674748499e-21,-38654627032383426e-21,14379221778954175e-21,34687131743454946e-22,-.0001584469264043209,-7293108115569113e-20,-.0001177513938244723,7404759221750663e-20,.00013239001684919123,4708171521483617e-21,8909822757253993e-20,-34630714238897964e-22,5042105589911361e-20,26442780926408394e-21,8658255948354454e-21,-37941259438345476e-21,-.0001398658685568422,4014544385513852e-20,-5475776104105906e-20,2303092327018974e-20,1535566924483478e-20,-7.691516928087783e-7,26449624305313613e-21,3403617751376875e-21,3916281041301678e-20,.00015363454768414775,33088056267130406e-21,-.00016826406184210219,-.0001495230192519459,35498105323300555e-21,488793394428505e-20,4926996229755176e-20,3206760857812907e-21,6.99860966898308e-7,-57017488941165685e-21,.00012398343835970382,28576108184866222e-21,4499695773151069e-20,-7658195626030276e-20,-.00017982376102392873,7791398798695504e-20,9182050843792311e-20,20136049025466763e-21,59720574201015814e-21,-9117137830576272e-21,224210594417934e-19,9299194513786441e-20,1550468055199622e-20,7248685161027196e-20,-8918020321007324e-20,-.00025973470234600185,30931649627910485e-21,9134164132330595e-20,2313149558239025e-20,12246773344729012e-21,423692775682466e-19,5325208096997047e-20,.00012342596764605002,8766507672586937e-20,12940257800994875e-21,-8493070452110655e-20,-.00012907568039395578,-12681617590354355e-22,.0001043685768841035,.00013644771823127788,16057523568244192e-21,-4431808882615629e-20,-740650807439236e-19,8941127855649489e-20,4045965655820327e-20,47207547890018575e-22,-12596513258189557e-21,-.00010567536025424262,-9499190341778763e-20,27651247338847385e-21,7609666823792105e-20,-19995057402716343e-22,677643671833511e-19,3525467233374269e-20,32643123012973674e-21,21440245180040507e-21,38887571817136646e-21,-.00012810855432182633,-.00019782945249277595,-776629514004229e-19,.00014426765708057399,-21274432415119282e-21,.00012320100907245446,10102538176598452e-21,-1605497818817081e-20,5771493331788169e-20,-56046568401510455e-21,-17521004885695524e-21,27609299548841948e-21,-.00021782421795693563,-.00010669318029415953,.00020791845527659558,.00011483573627234234,13285234615884045e-22,3805947785653305e-20,-12194043980374991e-21,38422458442419205e-21,.00012682223060628273,-445517234718279e-19,-3696272757425234e-20,-.00019867893992770206,-7996969862225525e-20,34788527334016846e-21,.00019429872846807102,-9225825125490361e-21,-2.181413375351715e-7,7666894785413048e-20],[-.04098936140702843,-.07259292653030401,-.020477833122960813,-.02577764470512875,.02239764804642516,.0030979965185144592,-.025475041444791693,.0014983432415610135,.013473198352794237,.015343737042018784,.013699123091301883,-.042585561573300484,-.04138694292044983,-.08863283586901946,-.05801849461561919,.015073506060712692,.003959174481256907,-.0024599044551481515,.01853234287806428,-.007252089677180176,.039351067096824496,-.010583759958094123,.03165900899445179,.004945997889558851,-.023228219899002735,-.09892235152941961,-.0837522798385647,-.03839268248055243,-.008434337000713082,.007672852300525959,.04878518659190467,.01710432507390263,.02075449961475878,.04911231578276837,.05763971849416781,.019838597096741267,-.002711097174265778,-.10015290955737972,-.1320216915887979,-.062977989737249,.02582360220580037,.01587980808283511,.023625409629796024,-.0046384308741842795,.02611406055078139,.09131915361659512,.15889496663514957,.07789102355143179,.09577507429885068,-.12439872197360356,-.1416053696046287,-.07550986156352214,-.02844030015622347,.021985439206375433,.015548610852228811,-.002388905870217735,.03488803395378694,.07107345826311753,.14647023139119036,.20034906031914418,.16005422621447674,-.08676011804338055,-.13617760143493793,-.015931290696152286,.005887974985659461,.008443989529487148,-.09581603348754476,-.06971296020482845,-.017803306714053436,.027850106601549955,.099568377990366,.185760283063699,.10917191640951349,-.06436537698162387,-.05321633140925054,-.029502881465266584,-.009862263178754077,-.10680613413351928,-.14825732796410135,-.113470811766606,-.06406135390230733,.0027156666630031856,.0918096329652617,.11261031536840553,.04378350181609904,-.0270698877015552,-.022521165339643115,-.010411461095651862,-.06242949060253991,-.07846292269580729,-.09912668450796194,-.0979319005853432,-.053658802519860244,.02002686052339145,.09746751189691709,.04526915563779382,3498289214537431e-20,.0009620569309527205,-.004204666656807007,.012970749419225602,-.01837649647943919,-.044256889054004316,-.0761504339983559,-.03979031194724934,-.03211080346166089,.060508684856887124,.0660252431275845,.04369638966356963,-.006241143438045035,.0065600929269337555,.07087669200430785,.055992154723297945,.017986548813861334,-.003824158105117728,.011310267599780391,-.010487970918616498,.020902380949651758,-.002544688736208306,.05900443040473491,-.013398145289176891,.003544342872007042],[.030346036175779943,.006072929172062355,-.039343234393949156,.015518327303993051,.026091031799842485,.05707488929867742,-.007681010104796868,-.008070924885863945,.016419173022353517,.0028420019312691766,-.013730810525757281,-.01952233856199849,-.016220877105556714,.014953867372257727,-.03402190869608687,-.013762279640316323,.024752967636295586,.039530055629976274,.004583286407384743,.00837650620964974,.036851407285838494,.055084117544986336,-.05697557854410243,-.029317707997872627,-.02559469724371854,-.0209462093989107,-.05804040682240884,-.013577428197324267,-.010020990828990349,-.0018451035217218088,.02002541977978445,-.007591748940904006,.01563101192714106,-.08266561936957596,-.08055144866454374,-.05044050942046925,-.07277700604354,-.06263641593018619,-.07128881460152567,-.04426927230393782,-.019290397771040843,-.0006364356599073417,.035648090161244705,.008066556690149287,-.06997303230616364,-.07240578702187785,-.06281316159223141,-.06085909934186933,-.10296927011026999,-.07472683729892657,-.07715100410356593,-.08963211742325006,-.06020756186961184,-.036005373570064905,.030580152351007542,.018237066287994937,.02174043579052555,.026790712318865414,.07839467900542839,.07977445389185939,.04884459695304787,-.011284404445060854,-.04289265591912322,-.06046929142112568,-.07771702221123683,-.04176847682913615,.11044800435479082,.08445303318981631,.05871665847568938,.11796990936830279,.15001483899962584,.1468226515192372,.13948544434843163,.07190053553504941,.02295158262339964,-.03757300941076615,-.06449726751612082,.10514145685057832,.014295615161356343,.04794627645478916,-.018432919080500723,-.004860316065150354,.039432239140444,.09092544302484268,.07527813236641887,.08117065522466874,.007383367216880286,.00032987076164094076,.02281444999829907,-.008682768064850164,-.04852118304640604,-.01910874794430977,-.06556074583054006,-.08018299151836861,.0032263375068990836,-.0009965854756597125,.05242413573800021,.022385739723059378,.03912049292203021,-.031163626046383244,-.06393958956771652,-.07911716509669843,-.07891704049597995,-.0588805208288222,-.10110781394222774,-.05114064572351204,.01488413557237507,-.014461306825219532,.03609161945428291,.03986593513944536,-.02862511720937755,.02387850967371026,-.02520581913037356,-.023467115929623323,-.07618759848175716,-.04023340673218248,-.05199566090362245,-.04046833647674131,-.026854374302776318,.02699990498988876,.0702555834549778],[-.002803003215468877,.04075890489006727,4176786332854565e-21,.02026013854644316,-.0059647140070275915,.05181012213641132,.02634646200863381,.012264698464511966,-.010147315743495306,-.03354793984589477,-.019732136738390867,-.002257760378232977,-.0162619803111506,-.01731409933017604,.014344127941805743,.03797040839495286,-.01383697548566333,.016742082124341348,-.03012320080717837,-.027735921784170836,-.002268324918850477,-.01917565837724932,-.01569341160239931,.013113857326043843,-.036320774018331614,-.06304319241359191,.004961448697348825,-.03680462956903752,-.037438386219278155,-.023603350699011483,-.0072298451341650145,-.05986851568610403,-.041755559167967415,-.03410396676411325,-.03769538328404935,-.019865628782664548,-.037320716015948836,-.02961465787379973,-.062378820692505714,-.07772622741030955,-.06433026092017383,-.06762742484498561,-.06691133639170264,-.051813667955715265,-.06404442793239708,-.040497690544443715,-.068570648963838,-.06478169154823443,-.07746520430507217,-.059300747266943024,-.04572912163676844,-.03397331700931669,-.014236662779295712,-.005140367998130205,-.015748032805591644,-.12090686617751288,-.11592358261333773,-.04603582196444924,-.026967258372596087,-.0013908674792289851,.07081445649809462,.06929190049980583,.07181659013788588,.07460517208313797,.09541452418967944,.10748657093841106,-.09599583700976712,-.004097579463900171,.04530638627677719,.0755543958699812,.11845891486270177,.08477604080057179,.08426398723503584,.10125452225992537,.07397738859348121,.080838313693574,.05421147663810812,.020058468071589643,.0718773969832042,.07361403959884011,.09026996491612302,.04795591471093459,.0431470975174203,-.0011985739101095343,-.013094268546257911,-.030256147604258272,-.009536691838955792,.016708576234233975,.06114245873571649,.08121745111260578,.010385841248297306,.03777759541528004,-.018148165795748364,-.025190339821193043,-.04777179689436069,-.06185527688971809,-.05365271254041373,-.051551732136435637,-.03437423223016557,.019703032705119687,.04021466487620792,.009446263618920375,-.022748100395121915,.006918036677643638,-.015913447714255638,-.02702812779628725,-.01432931266945543,-.027715089020423824,-.062068298599209024,-.06201486380850502,-.021183572775251798,-.039143122374945834,.022829943433131737,.003203890994971162,.00034299573515796187,-.012230615709466378,-.00321123286886877,-.025262706824797615,-.0022994727249915775,-.027050395247399217,-.03954942076316456],[.06522093747547308,.025071384298351367,.019912107113077518,.01931289301864427,.02245659932841622,.038123430189094545,.0055996572848110715,-.012446229774174283,-.020127115717722095,-.01960839712326881,-.05192039153735018,-.003802076622644604,.02754021132514629,-.0313942592920469,-.018499328737516675,-.028503473075545686,.010984204362234747,-.0021914954953508982,-.019643099824274573,-.042421207289507476,-.08150780546124696,-.07224388933146775,-.0017841827891482871,-.01089297304793769,-.009480015803344372,-.004107064135008169,-.031710787864217896,-.02531694336802308,-.04890459852333841,-.03909793761645401,-.06626651885000522,-.05717044208892212,-.12354156377380103,.0019260014740339094,.010454913576309843,-.047326416677592284,-.01495404872484582,-.014952122468299345,-.06039889069893172,-.05148188990929769,-.05699870752835452,-.05627894012903209,-.00825317615090031,-.00472800146630642,-.02488926751653961,-.04632461441132044,-.027070396350913073,-.03551136665508927,-.04156202778006492,-.0424110717471443,-.058674084084012826,.022288023763534795,.04256448256964385,.09151065178139976,.10752994926292046,-.02319027683008374,-.016616935256775666,-.083807089690502,-.0582594888081729,-.07074223249458611,.025573920295602542,.11913595016311473,.12549016018794748,.12135882291557651,.11708353956070845,.08642271793529142,-.000306674038066352,-.03844014599380597,-.04940532140895877,-.09297544388190015,-.03284956400921088,.10352519252428011,.1495830558840523,.08608357621580195,.03583095834071556,.024742932326467473,.036726117488561486,-.002442216116411461,.00040112728912663695,-.05251865968907733,-.044570270280448174,-.034618820381680696,.04981854990282133,.002454808154399357,.026915963481285166,.00043142435222983527,.012653778112578708,-.051855646667650884,.030046740129158762,.000616408216881123,-.031155023683595174,-.04432306874670301,.004537317614961289,-.0071958412445839864,.0063657993250404304,.018539257939901993,-.03033092031256785,-.03177366654254281,-.008822813246182906,-.015163459489751625,-.058175569457230444,-.00401833097698279,.018491731360507427,.002289811628686786,-.025630328318981953,-.03189676612438975,.020493167081276655,-.006086677203911053,.007919476679841025,-.020676688933417536,-.03162466098372743,-.02835372690119846,-.05878024973072718,.016740816129427953,.026376082128799203,.01589123674459242,.048440426175221846,-.003250090563076194,.0044459428797915534,-.0166556712813878,.009649552481872083],[.03871219417843989,.012490504356042306,.025251907017849726,-.0006342900379393557,.03592838646617745,.023762703799074122,.040774989926937774,-.02341481156439147,-.048639833740482294,-.050012993742178324,-.06442923154764985,.021779562035487404,.04986151946122798,-.018288852383901953,.03588998869912234,.020066404067603016,.04956314226250248,.007752233750127707,-.055571126615815716,-.06851083559618402,-.057716925501775554,-.0349005804130335,.021956366706459132,.035414544709005326,.026124404566658876,.0017094541674472288,.034316099935257596,-.027522376974677576,-.09928902136993129,-.0726994240994115,-.04003368220141704,-.0025525135698269523,-.002910098811699801,.02151519986852707,.040227070486607036,.03647640760109133,.031515192940717834,-.008661570449345884,-.13841198674869082,-.1145851936176304,.010450235100959555,-.0035535572148689162,.07125327688639957,.042723571343138186,.009341658700365442,-.012870114338850977,.03254557667078638,-.0156254021203472,-.1166589992557556,-.14109288836317121,.06734840271729552,.0760931813416596,.11561514970947856,.05022549520576293,.04212426995007988,.02144480828358869,-.008478265810372282,-.012099681800612577,-.03095626225613321,-.11121071517451651,.08286092692880892,.14790102050186232,.10500772996280258,.04674843638997146,.019903102032436296,.030520336087391395,.018229439697434548,-.010089005330986278,.001308077365090185,-.04636617623437089,.044459976275507344,.10593917475179987,.07951875578711416,.019359952078597017,-.005288773156741304,-.0722621162644943,-.06310662779112301,-.003266660446347769,.0318601656444429,.01864598039125592,-.012064807733087081,.08495823890756518,.04802342664859964,.005601477454409115,-.07119535495038484,-.07033323539772537,-.10990854275232402,-.1177120894307484,.019377435122344126,.02670672888875142,.07358386241576796,.0541532780227323,.025448394821031554,.0040382013610863465,-.05467886328326996,-.0899329958233211,-.07199641702193692,-.06277029849943339,-.06522587546471413,.03839617104707502,.016151719170832315,.027022919493260036,.08290421500236499,.047186912351547414,-.0007951610725080438,-.09589103202259053,-.04946194943734483,-.07230469437919085,-.011679870201172761,-.03019370550552411,.014156325508013962,.05085959729622467,.03918995516095654,.061498796624547394,.022736333947648714,.015951433136659473,.015999485485705945,-.043222982001008485,-.024248450132379966,.040111753431796314,.06052477324917584],[.00247687597552753,.023654123616632314,.006590479076578087,.029715029129248505,.016981592598277626,.035002323306005056,.015060065696298572,.002377540646737661,.015462766613147202,.008250822853533138,.04520421189152657,.02909906297104954,.03737107394676825,.04854671720538914,.03967454651675656,.025867829117725033,.014831551938788254,-.007582094087609806,-.020930287111501134,-.032499439495609725,-.0018020463301167342,.04393796707879063,.028725701880571525,.0010439011442610552,.04258810822266976,.017847587041736074,.002279834822021626,-.004587349161816804,-.008842237437494037,-.040477333059008636,-.08483317919906787,-.07525359276823704,-.043639965989430526,.04883111043556526,.031624229858512876,.012489522167499711,-.04444740416264285,-.02379386136756309,-.09439256686884244,-.07203235960877619,-.0647083446116518,-.0642167118343325,-.11171103897265756,-.09873003053553736,.03479092404599714,-.006269626535213395,-.037764001610176845,-.06603160021869137,-.08565484948794656,-.05646144630012521,-.06782619165430687,-.06058757075258735,-.06035941463931936,-.0751011736397387,-.11166068555690369,-.04968264301191692,-.03223836180949827,-.08648433157942526,-.05427449076243909,.010712582267959646,.05148433045951871,.0727373081995406,.0661740108703821,.04705250427849877,.01457256785498192,-.037236312562938446,-.0389263538948529,-.04589284087910635,.010370006985215077,.11284308997633244,.12481359471847972,.11597764568809359,.11519355137781671,.11439984797014933,.11282552440063413,.07265236792149134,.0696330416762262,.01208106094914059,-.012907318992784259,.0781969520967658,.0848424334686746,.025448732267674412,.03331830161640717,-.0032466624596392407,-.0007791600472203397,.019237134849348372,.04046772922000219,.08182504059766227,.03217300859253294,.007224645957833578,.035145895408776745,.032218364331414756,-.004156953045711051,-.032283733334807226,-.04806381353222544,-.03630798056499317,-.008879632854209354,-.05064778668384444,-.00020999998824228205,.029706187708307435,.03209911489628096,.007789994154167285,-.005991216818439102,-.037977889970615276,-.03294263269483791,-.07482792910608133,-.08659379822525845,-.07029461615119986,-.021597866813346515,-.034674752012622045,.03914951845018877,.016074895570088787,.007248605861354326,-.021666046904459044,-.015742207167039945,-.05712862549021637,-.06982585777437281,-.04304681823818908,-.00021744057288860825,.0031613995838588056,-.005483972769325985],[.007858409180958724,.010417579110589992,.0158263555713989,.027799757333554075,.03750430163420848,.021889790101079235,.038404904299075615,.03382366229288322,-.01511054590043489,.020273256963547384,.03294300250767965,-.001252367162650564,-.020725236647321815,-.012427007685905524,.015267851215295052,.015474020823992577,.021471502743067288,.031768288951377815,.012185070684608057,.0036406626398330366,-.0025327193617110944,.007885357440556288,-.042335704666714866,-.05668345383684903,-.026575160075451746,-.028598384095741225,-.04265775277516078,-.04142391517902475,-.036798184223634865,-.03826280791510171,.001902666130327288,.0093814405628216,.008471594548958614,-.04503818265497045,-.07579175364122971,-.05937521946842811,-.06183166531196126,-.043298853126234195,-.04380078136584589,-.05161784216678796,-.06561103766772261,-.047247281088380666,-.05796831398610836,-.009692699740570312,-.0009781358811463553,-.0011437786713959204,-.03286534603195844,-.03543397020422262,-.07232893380021267,-.04023608262418721,-.06694954641402831,-.08212638803345869,-.06280385347893304,-.08149158305684044,-.06753217902943902,.09455840560652598,.05016039148008439,.08567883686723025,.04632336862514813,.055992607831429286,.0489119532211901,.031194793059301035,-.002645350709232691,-.04034357688424243,-.0970325935155229,-.1003870758516373,.0739805809466271,.04468078911838225,.04952955172182877,.11289040045432666,.07705264098090751,.08763910565106886,.09066077003110973,.08397777948088223,.0640490072177986,.02432712562725322,-.042320375772835706,-.002138881880432028,.005953890630444381,.0021758658789993446,-.009358776674297811,.02428998075376837,.02607694341280449,.07877278332411712,.09198220273244762,.06436138552891969,.08198413068027004,.02864633165778327,-.04260462618725064,-.03965930144868732,-.023542389520778348,-.044811266972915445,-.03704741703987133,-.027700762351676803,.003355014276908888,-.013100169049559234,.05927068198924744,.0462821833376071,.08735480009026986,-.05379015249494169,-.05215554204399524,-.05679486910467426,-.021944281329168733,-.031143592336575283,-.0324088397693377,-.013571281557370071,-.031193974331133204,-.024377807778057786,.02914875701245999,.030672698641111273,-.022977914200020516,-.011077006000089942,-.005511238658071696,-.016195245042137235,-.010223061193558224,-.0017693869577628148,-.016982213231712635,.023120107237225143,-.004644894416102455,-.005181666051378653,-.022733320422779334],[-.009042111480020307,.017452648291795582,-.01783182421034299,-.0037291040947286724,.03906496999831048,.02317336140566292,.017934159994940135,.01309845554867919,.045167700869445056,.04219440502524552,.040022284994525766,-.1296495384639129,-.09869597929559121,-.05779170191526593,-.036039163287215216,-.028193969502811,-.00542516367252327,-.006951249012165914,.020700356583589666,-.02765883917552498,.015383455695099066,.029921130490476885,-.10604073203109947,-.13745243530604678,-.10216024104657673,-.08204456097798316,-.06254235926555962,-.00602663143483341,-.03485631054184798,-.019904486880246444,.00031967817856416725,-.03238967420670709,.02439765120257871,.10508921937209786,-.013046874416846273,-.07774395531312853,-.12222903080184096,-.11250348266352571,-.07449642419639521,-.05669735065660934,-.041103845003295766,-.036650131470619435,-.010932005853568957,-.016449841939567944,.1562234845656341,.09672664230741305,.05404169057430391,-.0030989655565997892,-.046208134463465035,-.06592349335322237,-.06557891740309915,-.05950706712768644,.00880627987998698,-.037442732388913005,-.017902872235218317,.0929562185397642,.14428628109803446,.1546096989661699,.1048812845736138,.07465009416124645,.031358758882895854,-.04452428857515188,-.028002592637281058,-.07428550653439359,-.017952472566438823,-.023442772221301825,.0006703656583408046,.0482564517826233,.06411237793532709,.12605612565913182,.11963258828536688,.10488112893887513,.03367932768563389,-.06098033908627067,-.04366390205424773,-.0236172411193771,.010588509810459399,-.042280794649115334,-.02090390603937928,.004245459603364268,-.00023866951219775334,.03685527074938692,.06422611650730096,.058946958099653515,-.001571395041331261,-.009570744787560717,-.013147541392034126,.01220983149141934,-.05139007557791643,-.05520567262249433,-.03365107683439328,-.030728487231012208,-.006939575932425689,-.011575545867157727,.007368596506356143,.0697471456037057,-.01352110025060841,.006596012723473543,-.01952537196860976,-.017643912421121496,-.03698320858742948,-.032526065041563926,-.05954232866304939,-.021432558932001102,-.03620802826342076,.0008277217823815042,.048327127751533125,.05795080737741723,.00157328627865716,.0068908384829364025,.04482168429267052,-.0029221677687706754,.001555929650738838,.015954469458610742,-.025599595653019336,.04782729598618077,.006228894973325669,.02126713164270998,.0570357351754727,.018964085848628326,-.042249457791622765],[.08256740827572094,.055832613072691675,.03765639009108503,-.025000895212346053,-.028412812812500174,-.05016161909385189,-.06410879812322645,-.08532277377194247,-.01353721252260974,.013708942774828675,.018599027844067556,.07534748503062028,.06255934305524692,-.03128511392926582,-.042802981085729774,-.03142942071154579,-.07382676341608124,-.02422165797383803,.007641260114981077,.024211901395114054,-.059471082878315346,-.030880411920166984,.06796700954618969,.04082287464016688,.010013710465744799,-.07623822041053195,-.06820001414613261,-.03367028790032036,.0026545839293711116,-.0464833643306049,-.013765405332683583,-.027634708597073385,-.06182622302046557,.031594341220290985,.021366233937152687,-.013394045470305607,-.09475775644966944,-.04911896674688537,-.04555247808044965,-9110634761277069e-20,.007938346419856593,.011254760704320157,-.006576707889103077,-.047661893009333725,.04444616608719597,-.0009320642125219408,-.009539060421327156,-.05073285896493765,-.08683128061656673,.03252627969419809,.09270170728992475,.009408379888223123,-.023484064976748834,.00929344497650073,.02279135558872019,.03900280647827911,-.008609839726177404,-.034767835308972636,-.031883916942249346,.06642867522546965,.15091207989976943,.13215693372891743,-.05920084309238203,-.13695949641012162,.048045367981310844,.09872137352439717,.01240735426146681,.015256770812382667,.052010168560839946,.10320819909661162,.04245915005083583,.08872439999155989,.068938951136573,.01700823743506874,-.08531752502889244,-.018126337068159522,.1151877033509508,-.02501683859550265,.019451431676204792,.022494547242750674,.05260028373892524,.03386730293679828,.032216970357249304,.059359611168712786,.014140731647494846,-.025091371779791677,-.026683396681205493,.04095832858134641,-.050855525747530585,.004932375448121732,-.0004981671256791605,.0165528823762962,-.005958023826024899,.045306611135122,.0578976399561205,.04272605270247874,-.0017969310686201884,-.014382085486339657,-.037002141588783934,.02511069814608676,-.00016281815464665172,.02451544657586113,.02125875868430828,.02440056095349824,.036876396850616146,.03942292609844728,.040371042135130944,-.0009256230177198815,-.005262877919380821,.00932704972850165,-.011241199658509435,.0019912846764176652,-.025004542955752537,-.005608583586459839,.014352464943112106,.050873140541023154,.10004246984101947,.06468124913941524,.04619569563666195,.06930063028653265,.02951032763533087],[.031888415387708945,.017285328668591005,.042744527705477556,.03122774045587115,.025513813891834124,.023253690464280233,.017244825416223117,.009114399338920935,.06125478783517867,.028607811797974354,-.017058017936675305,.03126025001137327,-.02279872758399017,-.027837704295921042,-.03193752291907209,-.007942659510187761,.002278187485560282,-.002979051839869534,.014262174386869931,-.011888449098713878,.10179674598415357,.017490236098508173,-.02165996876082555,-.029500462768637277,-.017844168428477268,-.006592543678926418,-.055317992740958985,-.009073270159867055,.00041946738785142434,-.05649264369093172,-.07320182771948931,-.04664521751707891,.06208186916430718,-.03133901253116169,-.0654095728502457,-.02625974376094732,-.028514182658014458,.010511476228221489,.02613935213955948,.03308089327842027,.010410015030915412,.008359399473395174,-.06664840960045965,-.061126901668253825,-.0606603817088827,-.029413222816308055,-.014383044755888905,-.0611128396493715,-.086766346192871,-.11103482776376336,-.09555898737155176,-.06964802327565453,-.04442774742720511,.025755829147256798,.006956014842130313,-.0815876044161628,-.10519239832835522,-.07133578641876726,.0005704173411741065,.01381305071587418,.02671011460828427,.04981220055097216,.09358191801031149,-.021925041934278508,-.05549766034276781,.006515013373986245,-.05455411923442439,.00830487062795153,.13185407364756932,.1221341345788353,.011707416843401106,-.02590715389907114,-.02481974770322092,.0540108737334904,.13634127194350476,.1239665593358083,-.009468415295336208,.08236026367919669,.12981624266421773,.03824468200113923,-.028862798409555725,-.012401760304334902,-.029028735431258695,.006099184288709073,-.004029723086668271,-.04688451714216009,-.0033330755921011992,.05532623880862575,.1303088292739335,.01446714058473307,-.05952675673155153,-.024457345180703714,-.0011606998001983324,.049886658808720834,-.021188637788723458,.005342293132243284,.019766544177656983,-.07505148675119032,.0555814059557561,.11043646644803568,.07196493868758001,-.09066329859838264,-.035117192369403236,.04806949037357433,.04113355205281519,.08349384113646205,.02911080012345353,.0312666151706631,-.03950797252389278,.02749066244564201,.09228405522757988,.06669838963281167,.004677073871221618,-.057627559498254564,.03584209191212352,.08267768517946922,.09733185489825846,.05068201651983458,-.010180548751966102,-.03310063083308393,.006005322792119457],[-.017680769530502086,.005057535982528047,.02521583578435982,-.005025833247320491,-.05703325304593862,-.052107314429079093,-.045596915669796345,-.00665024670919076,-.00408902585366247,-.003602657066238215,.05426453374924283,-.04105475453763187,-.0014472636395811613,.03459697460655711,.06083562097062121,.029247288961593898,-.07214035288481521,-.07967275019313143,.006394394745092916,-.0007507875839106309,-.002417122766177648,.00014142207761613443,-.07190065738260579,-.07130997769260232,-.07094676785308972,-.033682470049253795,.059045673260628345,.09858933856538961,-.001245384846723381,-.01886197406327271,.0703849625383901,-.0038593266123758303,-.035716458393740325,-.028903911986307623,.02216913541780052,-.005637983325335064,.015211997809574936,-.07780142651874718,-.029803914664715693,.0194618063722383,.0668760222428867,.0743470403902915,.075531131612437,-.0473549174409698,.03823130423494889,-.014507685304722101,-.08843527849921418,-.10062367804515003,.06734349922220056,.024924241317476573,-.09254619573503409,-.014997924286342293,.027950457247449642,.06606376845151182,.021890400355813813,.13086032772885903,.09032515848711939,-.05134374305948901,-.10634460607642149,.04157715486030453,.18956400875634438,.15361519295302384,-.11769518397502723,-.06393113140682108,.0537654171830164,.012820707173704704,.167023415641573,.09188345945149638,.04606406687246399,.025159894360370735,.0711251036155198,.03542303599910505,-.002838856695844709,-.06288134460513693,-.07852379046310881,.006048894202759295,.03132431227969934,.057799944092782066,.035258713861660206,-.015525519214079311,-.05149067842695848,-.07099843868427236,-.08833954892641027,-.06325839638208344,.0005815794495872273,-.016398858534322075,.06347204287248717,.05944812998567754,-.07202298014311552,-.020115104672309998,.019270115460302426,.04304460819968159,.00016106438180805288,.009691999561702698,.00685563839782885,.04938094646020125,-.004523537998711136,.0329779425641062,.0312528099407361,.056899719241569,.02826264920751151,.03515237551913688,.03546188426225892,.03985204747464501,.019659199103084442,.03395829906030764,-.019839700512063366,.05903682414285811,.009726012486880643,-.014938126441501644,.019066829899126298,.07068190922078597,.06710229359092283,.06901299259461469,.010044929257701042,-.006389311428403606,.005095615442864804,-.04581782964624811,.058780525393498484,.015058802906741012,.009386870299746053],[-.0592474186075294,.00214326915846505,.003053764423463598,.00585551031972327,-.08563021705558058,-.07175649349554311,-.04245030597116317,-.04268914713843119,-.011110262401512888,-.007940533921773962,.02707902272566813,-.027546655085047056,.039877525719018654,-.032474059766464794,-.046922091139332156,.03361772181552276,-.0342878025687481,-.043372117290399935,.0416139780456222,-.0430951183316134,-.010110834614272646,.022894839712910425,.07538660993415952,.009212959623099537,-.08827817592255309,.03739765963534586,-.002226306674960765,.009924507523420757,-.020030347390232447,.05681115019836551,.007392839820689723,-.0781863011094375,-.008146425982962759,.07920352761263033,-.04919398403505887,-.10782004673639323,-.04109395354819578,.03688301343713144,.03766947356805052,.013220385631969353,.05340788816283997,-.02673360675351314,-.12858397516523337,.02107535533459986,.12903555239275516,.017326720125844478,-.14567221562979574,-.08247212156657831,.05895693874970116,.11485586936136895,.1285955897812025,.09551855274274643,-.061066124259299644,-.0067976743155836045,.11055046294774236,.11155870568673898,.11891259668944891,.017851730403568578,.0006281699962116943,-.005602233426512779,.07762480622394381,.060406967434973535,.059516586297504614,.027001848941292254,-.04441219877188887,-.02565017828887654,.06836333345927718,.06302056436681892,.05944449745877395,.010334144455870962,.042110605756137134,.0154145426818727,.0023343740302978946,-.02706276577100951,-.053547005048963876,.02449922475139186,-.05226763051205905,.08885699312143107,.02355792938393257,-.013779427079024981,-.02357916164851793,-.06275519086456116,-.07823410171510638,-.04428664124215103,-.05597874471510085,.0321553391123421,.05440069299288364,.04822961003119705,.045141190902855795,.03870479897678619,.08591139091910995,.004357866690440651,.012844338732011615,.010882943225392516,.028932161983739102,.06484149431471856,.00831504971815256,.028736590709835023,.052023311678142746,.03341405244842211,-.0015520060820524428,.04260668744673382,.022301779226108837,.022174303630313905,-.01943573783712184,-.0005039577329179201,-.00521398221219091,.03017407278550048,-.004640982451910802,.04975585443539535,.004832172486069264,.0526257454470927,-.004346985676271432,.024475775577038505,-.001455068923858334,.0025587670842842497,.02335062238389126,.0007594542019464037,.06706131243941268,.06672006490669222,-.036179831263457696],[-.05711166871452407,-.031888560395926815,-.020364646131771198,.0031373605136144483,.013436737732060224,.005951255332585495,.008022136225053373,-.0033221874193103476,-.004827846253580151,-.026659247927967398,-.06278317555424762,-.0769672767706773,-.033637293299445814,.026369958665574775,.01389980731687723,.04192095366654633,.050480088450960914,.04006195238019991,.04456452813083517,.006994111774792464,.03093737186111541,-.006243629054118058,-.04632090876103635,.011237053256609078,.03625881873734127,.008296320294636228,-.1031515218693514,-.1297840088264633,-.10762360396379125,-.028238442365860296,.07777490841591576,.05764520084188644,.020682314424331508,.015698799166135785,.023614524698368555,-.041771874129604925,-.12746951561572256,-.03128255065893184,-.012702497649368927,-.03100282126672181,-.05323312562334649,-.11694882872058675,.01991533378727624,.030434079899803762,.034286620375398126,-.042572007349056584,-.08421562414356842,.06986128783468853,-.012204622606775559,-.01889140683417556,.019639551076716097,.0777245048625558,-.08036649451368691,-.015106150328832637,.03458846930117904,.11597907830248098,-.022649572331124024,-.10542134577114659,.0649091642415309,-.0032238315195849358,.10106249830020778,.028244619862228884,.13831334399041184,-.02940613006050865,-.1747975534137946,.10110596129570967,.10656117039170004,.007723586370306457,-.14344418956701926,.050109495007546564,.08671574569290358,.09308968550103064,.12450293694496621,.1288423000359782,-.0704197795640918,-.12323154963040814,.07075348661301689,.12050632408764064,.01023362279869472,-.09773323390366313,-.05933117448538212,.05878289588065397,.08532608320057898,.07677585523500229,.029787153121228482,-.018648323277872803,-.02104125062301928,-.0003430486081355544,.08429824151697698,.05683502064817744,.053326494938013475,-.03963866345914492,-.0050145752734991195,.013779029282405111,-.010485661499173113,-.007234560404816931,-.011950044363487594,-.002596863452470205,-.03948195531279117,.09282981387556488,.04294346095881349,-.007541521800072615,.01831664591755916,-.03913011009425575,-.041539280566723305,-.027051679902780887,-.042059150111380464,.051858253540492213,-.038626104291501345,.08962165947507582,.07138907399524949,.0864493116989368,.055650817209077025,.013638815876452798,.017995842737628248,-.01801617871484959,.06345870533067252,.053363636563368205,.07474224897420911,.07077924647780946,.03802131210007967],[.016782329804763754,.02218400925475634,-.017610151854017764,-.08378928689892737,-.061012255632239214,-.049436805730274716,-.016010628978889538,-.0012930764671227057,.018100227337522104,.04220318891077436,.09111510772543861,-.03097316375308616,-.003219528605249891,.001675986093178733,-.014121001324428797,-.048981904044656924,-.010745318377515141,-.09765232651778044,-.082418824248892,-.008667563405891476,.038492534598761105,.038421970823334595,-.023684080137090627,-.04257121143938264,.02767445118866517,-.004584611981808415,-.029036296488781282,-.014288492306115716,-.03649248395374892,-.07318841940678658,-.0584739383062427,.06115735662845738,.03751313259987714,-.044262690874014056,.037080163847070004,.00886596082820771,.0008027268783415559,-.029635044582425114,-.06189039461962856,.003898593565581407,-.05558893218122148,-.06482591035840052,-.04045436474773354,.07193640264162318,.0514679572406173,.016629850744416953,-.040009434139141736,-.01911582981785656,.09190492104908579,.06837146364091487,-.03538166889608524,-.031695935446360804,-.023950933267367816,-.0394003966580148,.03763781004513285,.1197050728253103,.08954209195117589,-.0483218637920278,-.10361580068468161,.03196026187380821,.2270831804718556,.0969928026121238,.02670984690200131,-.043788789977080037,-.030431230119196698,-.03619909170822681,.11281418451835055,.05835379763863459,-.06497527658584784,-.06578144640058851,-.00844820385193381,.09124152377195137,.12717594497795892,.07643536530804047,.05263655140428726,-.011143586147963506,-.03613783908570618,.06912457884644944,.013398711580413412,.029824240574494128,-.003761299877294923,.0021895992476564027,.0634119585567549,.05214012614545932,.05038609451252047,.035324986438009076,-.021229516140167864,-.04148108277996894,-.02340383743107953,.025148825203493166,-.007105428813655779,.029757691086840125,.008526491918542104,.049978808930559324,.04760848594702115,.007387529728713386,.023177640471752005,-.034372485157573206,-.02211841910582997,-.03255077177054265,-.009536063280811415,.02395181727198023,.009716700281809123,.03356178063598422,.04458951798473178,.040595502460242246,.03265377980093393,.005764866830982122,-.015195338017169461,-.04482684339688519,.07120843129770589,.04189326395203394,.048927297048636464,.07382784431726473,.06524454222081513,-.0017292511368722507,.058389555203693405,.04649227271464686,-.04444859218183471,.0032057986445928333,-.08349182407350575],[-.021979451476262124,.04174953651046617,.03631748281849932,.019303759385788856,.04333110565873803,.03953245104448282,-.03647609905532502,.012807077503951922,.02271357612772286,.026792414564902785,.017780821834078364,.021847416207194322,.03554278855147352,.022495282054875682,-.019211730168732774,.046687383535703716,.03207320019718867,-.02868683209550463,-.06812268823509858,.001294075100742806,-.0345641458352986,.050972273139714794,.01734451138777801,.03561326116943138,-.04769858976802946,-.03362333136575686,-.03252126067861601,-.0013900797467142137,-.038202063259482284,-.031763114785061,-.04696074911195749,-.049070236071480984,.017434726053958804,-.030703215315142654,-.05716230179174553,-.0037112416196131703,.006069636736906937,.038135057103153125,.011368938851434945,.04381188631406782,-.03421758839049199,-.05354120670482268,-.039937408320660416,-.06176962677527169,-.03524035091512567,.0016450283116066916,-.019800744266528034,-.07722000486464739,-.07550237849427585,-.08759204909688985,-.11012945508577086,-.06123250301560537,-.0382298927655147,-.0642652778275334,-.05261454482215244,-.023205841324039467,.011034902978061789,-.0009788013549310928,.015271729427483255,.010026868737236877,.05798534803553121,.07084072997149143,.01903940304422439,-.041761958313936615,-.15551177552373613,-.07628198734805558,.01704717652939459,.09301475442178672,.09358145811047996,.04340258066263397,.006646103834755933,-.028933285567003395,.07146887030373177,.09920319196425997,.16737897607114252,.06904365792934095,-.07749686881409408,.09957337833447535,.04857127897909015,-.0641451014524268,-.017708931611072284,-.03377335742082772,-.03677034174495371,.02112529728746601,-.03253144131642647,.016179841472347585,.0905777502291546,.10585324720051341,.10393909903192404,-.03914692869215848,-.03044788518844467,-.0058756393399591045,.004920095500769162,.06501453594029019,.02355974270510458,.008686195281332368,-.06630429664117311,-.0023589044880598853,.10485324285454203,.041243799776074036,-.0046939490366109116,-.05026550547323008,.079897314990576,.05181186062917782,.05936381965465605,.06303860230911956,-.009655375056475478,-.06924255657633648,-.04705175927555823,.07105790345020195,-.0344270352725327,.033352431404995275,-.038713428810432646,.04054111752342275,.06751369421091795,.08280595489296431,.10708141658638523,.01792805681214686,.0011601162267517867,-.04367357751154875,.12867110066084922],[-.051871694661995885,-.019280829936621956,-.05468260775816461,.0009447920461082629,-.013017072859738549,-.012890228722627788,-.03561689429472437,.00145145137959953,.04288321773410216,-.01052037984919773,.007557764016209687,-.022057597937526343,-.029115164929706994,.0012528790852251032,.02326933842173219,-.06747451424185189,-.039425127112679564,.04718264333405233,.018571000663569977,-.03145324857978511,-.004262754471068235,-.06539080821308715,-.06230958857335078,-.00018350956129405474,.03407593431333647,.020712134681679213,-.01581641293554665,.036106476966187746,-.0057176038296621896,-.007803458127565726,.022001767580951286,-.07506308951528975,-.05683326947967647,-.07848781116927157,.05331499430015378,.08979192045945919,.06557973516327162,-.02013808088107881,-.06935471925961723,-.012900359094848712,.06749429214896617,.005209168998674131,-.00504458173784908,-.03401334054431385,-.04922062437796544,.036992846717020605,.07352716442216241,.023626785644426024,-.12668833039918156,-.049929820048297914,.13709290290146586,-.04308335985604635,-.11283440510072536,-.022957546531399264,-.01638036356783324,-.061480443278703056,.08372278920304206,.026145798642064663,-.10930012120125338,.0934854174621553,.21229414611822872,.12152486504801896,-.008514307871436694,-.11195109821400444,.008756959128361129,.11393373946480671,-.058279470412456076,-.008042166232599512,-.003712796463390816,-.09061146139231427,-.02375044583242448,-.0033262359419465592,.051599394503568374,.11794682063279016,.05218760955456582,.051040480785423475,.13055799836266763,-.01221412005055704,.03643178936804285,.03667070372044032,-.007801213769850798,-.08063718231962559,-.09844174757709723,-.03508837974768049,-.032648567450681995,-.016984796908047974,-.02753645816699232,.06115870091554932,-.005166923162184538,.05434661214643194,.04574675243977309,.06473944675012012,.04955271127537388,.018862295590649777,.04898318715355623,.06254198557673991,.0072514834621828835,-.023346720324739785,-.07560192616940235,-.057354038392425574,-.01763069649387416,.02294588190926191,.0908731117154223,.004298484273507161,.028246302042173196,.008760700624817428,.07435181540431253,.03500492744240232,.031603063242742584,.0345240046509334,-.07659016038739996,-.017921124400819347,.006298857410999787,-.013815145103657209,.08061645493285907,.019781761084500894,.07564773522909524,.04318952518565638,.07414909690419025,.04770033275626058,.08084015618691076],[.026722003554860107,.011659299846958612,-.030401027328402285,-.07893351640938032,-.025083013651028968,-.051258138411005405,-.0637381335973991,-.0453609789056629,-.00724545401294531,-.0016165196721033143,-.08985506460065436,.009720785483362793,.03256663253009212,-.06354648779701046,.004058650541230897,-.011780242044409216,.04662208252817727,-.0061913239369574095,-.00040805875755831446,-.038285077303976116,-.045803388237714085,.00013567048096911616,.07184101163623027,-.0035184890415564662,-.054904449860221666,.02924191756204008,-.01689557308935365,-.018744528704994677,.07571692682817674,.019648278025953467,-.04388565465695437,-.018293295448074808,.029236899127084933,.0794807536527237,-.10678554242785285,-.13518893526708742,-.002161773644551196,.05783942256780753,.04685296385285121,.010613998677874176,.03943968413178789,-.09285753056846846,-.05413777579109947,.04101520787327624,.06345089058106948,.04746993713227171,-.11150623495169829,.024332828493630963,.10456565053537453,.11492526729638461,.06434912266603923,.02496020720753244,-.12312652337245503,-.0357276852240003,.05635784594804886,.035122396434681416,.040853396388258245,.004817123777440064,-.018877573782764997,.06383422339455941,.09959443330448116,.10457424633849259,-.005932386081802512,.051540993351738555,.043792467918237224,.06682182319421423,-.02298136662633478,.012623816899516915,-.0274341836235511,-.03732016627308282,-.04076059976772345,.005431111277504214,.07785661288634199,.06102583266836097,.06291439314075388,.03927894562874965,.05155143621189468,.06822820698213786,.05379324325679899,.03311629479996953,-.08723056668996514,-.06241328356257889,-.08217938733697006,-.04940845861667763,-.05135975985689112,.01704176534606279,.008305262989467432,.05797318188985636,.049273067989623984,.05054911568008644,.054189519887507934,.07635745928264115,-.02015976461491653,-.01496772437088123,-.008318755358141354,.032399494222174856,.029724547489281376,.08116750370631132,.001076680509177766,.003132081148303891,.03959912217748029,.03266510186245229,-.007612388952312757,.01439000505445691,-.024144476806805197,.015900895762450868,.03646344965447804,.005998318217993153,.00737710859384821,.06875758897911102,.0018450028156024381,.05898331702127498,.06102266049341076,.019189271609420328,.052228673471552065,.022903569800211365,.009354573933779468,-.022264194312743783,.028742917273488648,.031821039680558945,.031024768487282525],[-.024931914403123902,.006737110259103195,-.007391490442242972,.017496948430487498,.023422622609065046,-.009492885212203268,-.021940305477306223,.00025349416488679166,-.04163342727184216,-.04628033097131569,-.06778901544234435,-.024673968258041953,-.029907852335896074,-.006344921502507664,.03882830280660768,.06846252343470445,.02720529623013877,.034295058790694666,.020017420759176036,-.0441476446464151,-.05987200542226702,-.051482095492071264,.011124069340270715,.016763058258717323,.05088684044262448,.02549815480352427,-.0939546655207978,-.09239118927766134,-.03247903215362791,.034462594953754824,.05996947494254595,.025584824798319902,-.054353591667338476,-.02150223875281966,.05154650145299272,-.03400786667540163,-.10294183533637649,-.06821438494596432,-.03609112863531143,-.03586220966849209,-.06695036990267186,-.0788669358196743,.01348990123782938,-.009299162793653773,.05124225459459572,.0631551203245305,-.05757404601522353,.01889038869900163,-.042698436177047515,.006389719019489579,.035993788676757676,.10789490348622735,-.0681802362576189,-.07588192982481591,-.01974750467266321,.10735747383087241,-.03869822606166641,-.15857079396383206,.07771169887895407,.0027821735741544867,.033503358473603,.0445293284383837,.11469939192954226,.03762916616171235,-.11802211992760672,.08981613120089463,.1409489675223105,-.021944857285476876,-.1862848822075786,.05722715554404334,.17885030648332761,.12350597080986565,.03287297640709165,.13094265605576585,-.0790542766901317,-.0988742849736581,.07103695210415123,.024172138802402793,.044359819339575904,-.05101250569856564,-.03906592355322967,.10490932756038186,.12042204998724948,.16359720010359963,-.008314168547253115,-.029805224335517175,-.023079186944148275,.059849592266809526,-.03542421754230089,-.025330293256378603,-.03424283036642321,-.06344183955508415,-.04696419252051626,.0007181593259586345,.022784193984670673,.009108569033323938,.0175442564906213,.028537852311277645,.08090346700239713,.06228800968357412,.04818971516345996,.021557195959710354,-.022313472699576162,-.09120395902913733,-.048678117782736216,-.018880976433473903,.02319770864597645,.011883122070171566,.040745024174235034,.055217772192963144,.0752915524448943,.1295068596040488,.03406673322807277,.05526333239219492,.0009295634002260966,.0025829434849187483,-.012623470754591415,.04504546623409229,.035721398778730123,.07325121561096606,.09493979978832112],[-.05469399676188347,-.03614225770942098,.012139987915473143,-.015154402745934992,.006846330221683817,-.009313685152198724,-.048684400948289616,-.04943037204636254,-.04106497122299951,-.07725384967515565,-.05265970158042071,.02644006417674272,-.03582580388162346,.00018949187702807166,.020886062450068934,-.0006594946059192835,.022071058438621102,.004031370860700177,-.03533302223613667,-.028226767346863704,-.01809822098267436,-.02023438256140576,.015320984616764413,-.0014404272920333708,.011179661842263149,.011479905349418697,.05041504628814836,.011825597601556187,-.005886157338115677,-.010693467291456787,-.05271180377675751,-.03958729553624821,-.015153382931397254,.02177617767728962,.018485275683894062,.017270703576438604,.025545107202705496,.003552691996951074,-.007207719262824763,-.01692777758575857,.01010327735896166,-.011396759513419105,-.05413599520729581,-.008775918099563268,.045428799230223,.026078742599032825,.018401462157094414,-.010304766106153093,.03117527378397096,-.022964877769659248,.007348845920109134,-.033664533213207795,.00401734882876538,.000731056999637672,.0009292076776340613,.03845556465762351,.0510271844642047,.032163653730152494,.003091909476963195,-.01805086224294028,-.03758060003421246,-.04298340492307988,-.03297383649051419,.003435703965453424,-.0029191330430502482,.04910211456862451,.045968351963145374,.03753303456561088,.053551748804077495,.0025191362420830836,-.04750855266321341,-.07278889625912804,-.06442733522484985,-.0412205236670294,-.026780660598796205,.04589302900490849,.043426979158010505,.0633532294221866,.05767580515884707,.04031026644948954,.041067495849464855,-.05102937433263888,-.08122284800217158,-.10623271352478328,-.040384319505111455,.012698889514418027,.027850330309453372,.07342260372963759,.013872383376783981,.08683721986851066,.07823149819628432,.025402065662503196,-.008595930472269307,-.1009426660553958,-.07977089663491069,-.08930757500600739,.015197805521062258,.0612893395940822,.06594861064187786,.0410355464349752,.05955782690964693,.08000623286398297,.07488260702905102,-.014113346378857847,-.03242074765334265,-.11384852443855065,-.10291516846863054,-.012980508793377513,.05222040610333936,.12082717968395887,.10605397357987933,.08625518328137505,.08321354397182873,.048514817007833,.044243911058542376,-.04257863034380657,-.10029735035508303,-.10409726347948557,-.08630781046809344,.03336904973909116,.16060915775050888],[.12273861405978125,.04281450875204562,.01806196647866125,.005306238394237821,.035823523447581954,.010649293754868217,.016551078536122706,.01489993969426269,.06744415250585613,.0014205983259976962,.017061484842956845,.10625529836546962,.03566036041809528,.002751078412191129,-.012307530679996168,-.013785633291103078,-.05132782373436337,-.0860003854958359,.051802568141879196,.03904805873472704,.047853825999159286,-.02626574754203364,.03074125545333123,.039406757558914624,-.008219197052029309,.00994496907304343,-.011588775094071746,-.06986333186263376,-.07121940102174677,.026730481405145667,.06436126667704024,.04996247813016806,-.024025875808116548,.0638093233647707,-.014373658398046024,.023604867877091828,-.04285661691231339,-.0300141813336174,-.09889712170449008,-.04373899159435149,.03430942416671824,.07134773641895255,.03761434445919945,-.0008217042394506255,.020111151000193242,-.002331074922981506,-.01592823887394037,-.02423171369688913,-.1221269192682253,-.07741156910078753,.0032849717401806887,-.010022001408555678,.08436673394784786,.06828408021395,.02710960296854332,-.03452082243214557,.00597056223211298,-.05440545217067908,-.05878256408463395,-.10071244219183988,.006729761904628304,.05232588319480447,.021602083823943383,.033365772587175026,.060449981481694115,.028671597117484994,-.06927556388493583,-.046529106869698536,-.07103102260182936,-.06887154107359562,.04665381137079572,.13893639005159752,.0882067152203733,.009134009183213193,.03384801809444657,.04738123882592317,.043417512003515984,-.09968279313996906,-.07292935685356114,-.07642090913055272,.03078200877785969,.1419444858039401,.1054078132040758,.05034361323715683,.04262781628250187,.001986940817932714,.002912892694045377,.03341792768934017,-.10626474257229218,-.08979736495452365,-.012630641916284824,.10656465605540676,.0817874442411395,.015706150749096585,-.008147489496057633,.017962048380179174,-.007682075324779908,-.018533162764163613,-.025747232327919242,-.06863640651652167,-.016416507375672674,.05202743487028412,.08441518809008719,-.031665719212890506,-.0813849345909397,-.042068123788522205,.0005300177935280582,-.0340275512891538,-.03605849757866894,-.09412659960792563,-.02872384593042173,.036956160575588454,.11399236758087031,.04778429384887606,-.0846179742925371,-.1041988894674926,-.09693066326663204,-.038842231479212945,-.019078175570027882,-.04597010269833886,-.1043619020843051],[.0657579411091922,.07477789750899144,.018292785286432484,.02817302033881495,-.008948344943660355,-.05254558038679702,-.1087949901255694,-.039787230769942346,.0030209786294805308,.043861504558306494,.020559045374589795,.04470571436425777,.012784570202518724,.016258299543353186,-.0381269066583065,-.03749794320270999,-.1176914965804748,-.048822632662462465,.039098390799118754,.06705564932984903,.07550007148393775,.07614552682771833,-.04103203468659232,.015971731655258753,-.037660696603424096,-.03882889344260633,-.10585017234815822,-.04977232998168482,.0044956232113971175,.11402219053620558,.09097041075809398,.08280647818477407,.059837386632622405,-.013124940068416517,-.02905984071441372,-.008593185946861898,-.05564222566554638,-.08586524174843943,-.010731942001337424,.1291059421706544,.033630584320905196,.03496934530589975,.022613172456202865,.023083805067396955,-.026126622747118175,-.036555728898516215,-.03454946027988387,-.009697212267244612,-.03948526086895662,.044563725924654886,.10334272388553382,-.022990981360463417,-.06846171192441487,-.02665064017831875,-.04235340979767379,-.06314341272481047,-.03867047986008568,-.032190500890796184,.0024621208503444285,.033854260568938976,.10018347106209433,.03904977954159966,-.14322204153577417,-.06792156608979899,-.0831740585430357,-.08698554339873987,-.04999667685809363,-.0696421621408377,-.017580665091978198,.04566660098194077,.06447454232298583,.06638132353246268,.04975912032340299,-.16687707277418293,-.10148113813854155,-.04565185060144628,-.025088926732828348,-.046920284310850276,-.06309136328211268,.009245686588623986,.038333207077261205,.06157812554096906,.05622995001355239,.07737253433374919,.04318613112863495,-.03831331202585952,.011391766806405483,.02908571767432378,-.08735795377362537,-.04574539559564571,.035034140501439034,.038753107277930694,.01028453604755696,-.0177455095262024,.011578683352821917,.10678493475168932,.1292075972982187,.06210540437337586,.03161474224298588,-.03599156339869132,-.03580586208307926,.032429174955818194,.013349521240161158,-.00025561537496165965,-.007583653790460908,-.057809872184653305,-.02737962405414552,.07750444987804009,.13303768141468877,.07015160516243754,-.01870535480753501,-.015887137408581595,-.012405772738829302,-.036314766817913874,-.057460340751641914,-.034056167300506576,-.07157545200554731,-.06829951030826499,.0017292217190058162,.06083852156997098,.1505136438334828],[-.120254202400746,-.09616901718415632,-.017372420837296856,.11248443570944938,.14311280665471804,.08252801512798714,.040999748265665256,-.0022276752168216667,.010467790781802488,.023760234093264703,-.028258264318314828,-.08446917322920544,-.06310610366941509,.03455797950371857,.08054004022885886,.03092741485225429,-.05593172254919131,-.02359479370263956,-.02130792364289391,-.06310798271161458,-.07325346763411429,-.0583388409974394,-.04516561125159846,.02698523667013705,.0847024358332596,.0412808379810185,-.12024366873436408,-.10042897365913865,-.04976512360258615,-.02709528866297261,-.010458303155168436,-.08946214106286984,-.1289437118045591,-.010213525065954888,.05397954089416104,.06946877286954048,.12952759376479325,-.14182340494484172,-.14285062277610125,-.0528606979553762,.06396947679917783,.05393927019995231,-.022029152784641744,-.10818698528187731,.016491832436736686,.0386393185053574,.02402098933500152,.06559289742544211,.16112502640598336,.023615052509284043,.04335245013258387,.007697901891859968,.04311212102993753,.000719877562742291,-.045960857982681895,-.006912744259264064,-.007720488220110275,-.03189187184311454,-.01703696089280922,.03503732554839556,.16303059281511678,.17418427554606328,.05700124704157575,.022916289242805976,-.010513114683071652,-.05288620941847651,-.004312990845295235,-.0018884698638378054,-.044790060375371074,-.03232037451379753,-.048960971185410075,-.009405256462243008,.05225328638873236,.14016474879016858,.04065676611467136,.024408426423858556,.029985555367538438,-.0339732390428009,-.017546572766816648,-.037345271053038906,-.06137592893080722,-.03937344145819692,-.054467136784434225,.03787669322362747,.09858135152652249,.08915095169603543,.012958414651170758,.027624783264719604,-.005882801712167776,-.057086791129319164,.00032844804874246347,-.037840469280978235,-.033695751439804925,.025912743632823754,-.017024947537232993,.06774754790560647,.06452982934496422,.059856281606444586,-.0040794712071662576,-.0644920108179417,-.022926783895192725,-.06825694131223815,-.03878709110363016,.015688747762662825,55171662105987784e-21,.032388446527829046,.05350215246202396,.06262131056599893,.011267099083652837,-.03949045658114776,-.09431947563442254,-.047548409339035126,-.009154127828242004,-.04820143183530858,-.012240843418624294,.001254075929677509,.016595878790118618,.020434407588746067,.03670010902109627,-.002605549686391928,-.03918033435849864],[-.039044382493438445,-.01403183543909189,-.01717497943397446,-.04178154000278274,-.05937353609244046,-.00853443277067549,-.01630006917274754,-.0372949005672025,-.017549755907846534,-.07844796288252787,-.02004008529828297,-.05676869782942834,-.05996704021234596,-.049253129103857415,-.06947154100802728,-.0719026668505315,-.044718491551717546,-.03636510105928939,-.003441156329846132,-.04641103137376082,-.028589990691112652,-.08376849280851355,.09511618074241923,.06245224641903531,-.024833981241255007,-.0978585755597951,-.1127986872143521,-.08806785457243246,-.08883593725007502,-.0685451547778931,.0011510544062942052,.06827224992795805,.08089367361989853,.1353343839303309,.18057622473716234,.08939292101612739,-.03771266910646548,-.18004516845335108,-.16759680953524253,-.11135480418062912,-.046002363039963315,.06748803495826358,.16040808091097752,.16020908007929302,.03224274688353927,.07292654022565752,.1267341164708839,.07677496585231416,-.027586193949245066,-.06058505348398474,-.0659581038990508,.04618881719914493,.06405321366734254,.06654518437550146,.04695382149034999,.0044609113824994155,.009161834221931828,.04196031797497354,.09084851340325474,.0990188535089464,.09033375622499296,.06782563973870923,.012714203390510964,-.005208332247047302,.011531736842481339,.04691335152441583,-.002678931412419455,.028085116456833342,.027040588615283353,.015104267552866583,.05985280687552735,.03210141946334771,.025279126213945874,-.04549978299987813,-.00926545146344819,.032695973667332234,.005802306114184322,-.0018139112732011575,-.0029108731958343292,.010427305260203787,-9603247696692019e-20,.02128860745026588,.041079801640464084,.01635736301374753,-.03239627940962683,-.009646847303313416,-.015146538620363123,.013412806275636471,-.0013427741295518741,.038224090646334606,-.01337749153937268,.026455615442210673,.022399735833748824,.008320371809276087,.002198678924308431,-.014293946476503921,-.011197610424383816,-.02576460216500251,-.004440261456418362,.026453211631295465,-.01639227277354103,-.011847008501585585,-.030834902384847707,.009271130025040075,.007923165672710203,.015033519474474451,-.027785535484879158,-.03370942439196669,-.015542452577597912,.0004863505957318228,-.026694531555004813,-.012724799179976064,-.013286763364002738,-.04230632193151675,-.033424166864698804,.008729325548481352,-.030242759324034616,-.013050994461220922,-.03760398533593696,-.048537758115318075,-.06178421620230195],[-.06489561323139842,-.020224286971327814,.01590526440901255,.013551842188797097,.08222566405969617,.05259139940486349,.04225788747196117,.07064771573560033,-.0011991945255137408,-.03436664031206134,-.0723605555532815,-.05622360340450999,-.04625462902379899,-.030584855242000546,-.03499613386449457,-.043017778242875414,-.0741166184659999,-.058193036991492836,.09917490204744145,.08597915962376732,.0260790473140005,-.09033579595709361,-.10362582311773169,-.05683029227387211,-.03295522857034659,-.035953196903694445,-.0836695985016021,-.14307384019801234,-.17021343406030898,.056559505125885055,.1353903981543188,.11264594916548558,.011673755450064008,-.06580564917501655,-.015916968368204,.049371535828759125,.032602131500708426,-.023482372439204213,-.14884937691675146,-.14122378994790352,.038947574553526224,.09075477737772583,.11462434476555877,.04923296864969556,-.02068116271088981,.00591891665301571,.048035670932309434,.04875666889835771,.015029939401784822,-.00458228731729067,.044145082900123096,.050071852397185944,.009450975049327438,.02437866831683654,.052749214069398115,.006439013954362763,-.0002811989012708239,-.006454694040300538,.06724180485301293,.1464190668396421,.12089002549596747,.04552412319599981,-.0279038197772226,-.020728023595215268,.01197258968450408,.023139835261794185,.062288213971794335,.0030852567167743063,-.010563156113489056,.05474623114509661,.10798773024900726,.014816168604569607,-.06772912288071306,-.06942881995257864,-.039672679449664974,.007294484486903119,.03166580116924624,.07790346807147037,.03314357843621181,-.011090195620338333,.025953154918250638,.040728866157606014,.015524058836610692,-.021280018049330086,-.07460112434535052,-.032634705813619005,-.04076721430424921,.02906892748967471,.050403637093174664,.016601304925128416,.008256313251879244,.04007619904334764,.031009017378264954,.02125830223035903,-.002636450461610297,-.025393115408776517,-.04010043796874938,-.05110548671081025,-.06799337710361661,-.0004643255713012305,-.003987648316637903,.022729109377199703,.03955596435942922,.053830169668727355,-.0014414045704570968,.03726780218944692,-.022231980521954575,-.034050491080049324,-.07395165549402309,-.04355798360191523,.006327873479133189,-.0798842976776823,-.05179614099105008,-.012967977410458104,.01676967794141297,.03933948218335899,-.014906721458355397,-.02108264568598167,.0003744563633441408,-.0827232819772278,-.1030737258893234],[-.037002829518880356,-.051800501938286336,-.0608530045371766,-.00941504099452431,-.034328030870577425,.0033825861478738173,.012446709688320332,.028263939384084974,.05124125029402918,.02946721239068341,.09429607378175116,.01799633146224626,.07449490958421547,.018562434067668762,.0011775208660011255,-.03343642198912352,-.03584575868586926,-.02469974718432548,-.024948855129499292,-.02485643392073319,.022654621557346655,.013969959583284512,-.015621110631660393,.08434398198734791,.12526052771855398,.05840823182146438,.045127451768280695,-.0431642408693974,-.1023993834271598,-.09678107000960985,.005391639305122323,-.03384440231459526,-.012657848528438927,.0013785476814248063,.011572904307556139,.06840315435526513,.05298095991298454,.1266701829984114,.03504572572612572,-.0689602022298442,-.06007223145173397,-.0627205556932788,-.030009692601680373,-.009208935268622181,-.05334616924410386,-.05152183948165265,-.0196710242768371,-.05587360763057311,.04197887356304095,.1638861354064878,.00106361294464159,-.05391004051311221,-.06815359102208639,-.05529295073172845,-.03946217138840666,-.0957259375011219,-.09229091135904942,-.11338803995859958,-.13838339127374222,-.0357462740536892,.22606772554633187,.1281379577664759,-.0024481614307838503,-.03361116851957152,-.05183905928013263,-.084236132619829,-.02903224969906317,-.05889879465503125,-.11075161830580202,-.15312117095255712,-.02072478362064721,.16842588938808492,.12743855198340154,.08033192559741006,.021566448195444857,-.08235262002973757,-.0690179832500651,.04985737926707613,.040106054682231364,-.05533382077548356,-.04209621166425269,.06670870442526103,.04241981201260014,.06901166957622187,.07998367701871503,.034371804092794715,-.017332099818488572,-.08300941885464634,.042453939466233076,.051060642403565164,.07316878819733981,.10110928490296386,.015416346633545026,-.07412165176090033,.03750620537132491,.05637231638443497,.06980271245301944,.022830083664882234,-.08847619122475686,.056380990619929745,.11796759975891001,.0851595020681788,.005750678568051781,-.05215025241828278,.0007134118917190707,-.033052078906102914,.04246615456459355,.06615257067809975,.041058972780051016,-.07491213514221709,.05983265086360286,.0500362825184366,.07343910110660017,-.03505545168769433,-.04321396575721578,-.02843383525472158,-.04972287987174802,-.04246877526080026,.005821181336647704,.0033813738235871967,-.06457987851604302],[-.05204926560099437,-.05723788028923628,-.008390580400298928,.0062458102695772955,.03574661992690044,.07839946359958906,.07885215147600756,.06507937658407383,.05167443850164405,.05659949162584593,.1112401778738227,-.04945177019079997,-.03311327028822704,-.04470398589450323,-.0069392182793978074,-.02379457697725676,.010055161607694707,.05186192586124869,.032051221900923126,.003455103243123696,.06034250732565122,.071820561865178,-.011974167972497493,-.026068365839870898,-.020182681121343846,-.013949638537375686,-.050699316492772886,-.020355931447011116,.029014508674471667,.044992661189607805,.04170522023063189,.033987569666887124,.04209407154478602,-.03129262148575607,.02230132664279009,-.01743554965010255,.008640518922615942,-.03342911654326199,-.059143520853118206,.005585256580464881,.004150838713834478,.04946052885819559,.050859527708305804,.07993402373635779,.009595912870105656,.025688470585585318,.005560001931692558,.013382028934657897,-.05801380814888574,-.08949981847238914,-.07159208514989376,-.019107360505553072,-.008274485117911932,.03258501263496798,.0467012903088406,-.009606781001247233,-.020512636464317932,-.0038438246468142923,.014613700602723453,.06818628472451635,-.01830963397214188,-.11322752216975147,-.09640633091246717,-.052403236939622524,.027222341781097337,.03031775226862793,.01965700165907618,-.00966000423453436,-.018626726339795667,.008190809058583867,.12179883942046363,.1508103124239786,.07580663979213265,-.06276117094215328,-.10013344453499878,-.0682454837737192,-.022265844067301123,.0006558391459163034,-.015208724489903314,.018866572887032564,.005268488532491858,.06568402893132684,.10986728461260108,.14928723727825088,.0594347442891827,-.06018557163621725,-.08935459882000726,-.06621692696979133,-.023535680546190665,-.054962379947465514,-.05901330662719082,.01998960704862027,.005400320662715055,.03246277175846285,.04586664039469952,.10505871662329165,.05575551030694705,-.05988961634096395,-.09231581043391607,-.07161904594773644,-.07503119972223234,-.06225391144663185,-.04694709230045966,-.04811632104347953,-.036582441951753884,-.06110703633906731,.036504990974571036,.10110597080448579,.05117784511424983,-.044432074886152584,-.10159227266715132,-.0771585687479038,-.030393198761254205,-.050071313080747346,-.07459567617979161,-.0734585421005263,-.0783580627771585,-.030278657221277715,.08445387790494646,.12337283504154144,.06246916841256192],[.11115260218147537,.05156084299988399,-.01902732369284004,-.05373543891362918,-.007110107593170566,-.060331674975749636,-.01273389146899935,-.0839138995858443,-.006874281918481814,.03644953787571817,.057484281155208095,.1019949723289555,.08297654329738552,.01862379926670383,-.020037210469670844,-.05899168713382544,-.00430940921081718,-.06180113190773767,-.03213717152533137,-.019997943427430342,.02947771435838298,.09332163289552993,.07013604972397909,.05701993375827408,.05389997300421954,-.002638763453039261,-.00879447000911263,-.0448865167362323,-.03176715948743207,-.04217367206952945,-.032508457873831956,.03411523551142369,.09310599590723705,.018636796052156644,.046735806088687395,.02185817450129495,.027569212512874617,-.001974822818289687,-.020011467438642447,-.03826332723250643,-.04176070997146199,-.03081457693173932,.028817248098680567,.07178725501146116,-.009708063399979483,.040408045290464156,.04790294227271096,.049152309684650786,.016182293978584075,-.017238522908897977,-.04046859816317257,-.04570282053137038,-.01628160437135666,.0034546404119755736,.03480739077753514,-.018385622040759317,.01969433114929478,.06799866802700852,.06483129813863105,-.014464528171849848,.011124972290677312,-.0612303154617381,-.07662098811794275,-.023624167810504887,-.0028778143977437054,.03758925567499871,-.06926330403107468,.003135965696017262,.05737759509102358,.052691820606641286,.017399699182203937,-.018570302353960122,-.04621388920618046,-.06663271110793935,.004937253121457652,-.0038828611488524456,.025713646541403734,-.083379308461336,.005669139271292208,.11608252277008832,.07353316121959086,.03822657644961075,-.0771186501943501,-.05546319424175007,-.04304259780973764,-.019189005860534236,.017297615166657204,-.023170677964515524,-.09727131638277822,.026385141514079502,.08466881527957332,.0925048406292873,.016711157910872847,-.04436278262410276,-.0454511239473053,-.049550862988714514,.013625451869519002,.020561667154105095,-.030006622146731568,-.0639806474069757,.07587246772228866,.053120016709717416,.06592377490676236,.031465876517252786,-.012255926181853973,-.0313987899465122,-.01876926970569838,-.040221379151225214,-.0015619003771453512,-.006960438948961412,.06078341910204897,.07556870910322246,.05225568745879651,.07813955049428749,.03809501181427315,.05243456114965857,.048883832083824116,-.055025867820072974,-.045282107044195954,-.04101349777164463,.09904386685974172],[-.11203549175295996,-.03974163811224487,.011060178958798239,.06877152276086239,.09194702992686865,.06301346186484921,.05320845714394991,.020539339513306422,.038057193997243076,.038787465988623426,.028121764350374646,-.04491965003575355,-.028946060113256775,.0382499640499028,.0644486923167395,.07456688644847903,.05611798233910977,.05771208379857101,-.019732262989866904,.012262999619765316,.004034765188164621,.04311368950180577,.0036261933857882275,.04092871004332216,.05321964860596642,.046769367826384994,-.017166264963499114,.005489126872330413,-.020480699308758406,-.022929172836275616,-.019377222102737297,-.05039327467093438,-.028341154356359134,.0443687450803406,.03490629110767013,-.011071953214126184,-.06554414606891683,-.057326320735171105,-.09865404487925097,-.021150583208668992,-.03897105794825791,-.05195465279645114,-.06569705236973589,-.07666861846838118,.05753682622229832,.00590261315360243,-.04620387253927334,-.08261142012062225,-.08485219181649815,-.07914143032591006,-.0970041684358289,-.07606212552209854,-.06316389153647553,-.08332092946162584,-.057460537409920194,.02780118613240987,-.018767946276596975,-.029691882937965902,-.014540521259465585,.08390634737694766,.20739444418621977,.04670049384566572,-.06057173576227297,-.1303813417107452,-.1380526167498672,-.12358535758970328,.007471053958088045,-.022238309187360118,-.006783218212135688,.0005085683835639072,.12335224504872636,.15023440850791586,.2425587678439056,.13265122710423893,-.03634921595550453,-.09634226143484849,-.12379973942082877,-.005922294079732774,.009252871922863887,-.008641436640496804,.014911679170252864,-.006970962685308585,.0621921155758957,.048857235728622855,.0997362219025745,.10382748525934579,-.0017267232813016238,-.03337998864511238,-.041015759215952706,.028074948889879575,-.024175373112944334,.00037851506203986224,.02829008660122529,-.017177690879414606,.012211197073898714,.021090624041023867,.04880110436342628,.05889300676691906,.041186307677804096,-.05022803775793874,-.06358869101157405,-.01627885622405395,-.004755690985950509,.019166267525767756,-.004285985542694249,.07222129366422753,.027667668809319687,.007607234873196663,.046251642681222054,.04532751693659801,-.058087271467788915,-.0525686542532879,-.04476241350364093,-.02315551806532115,-.00017763235014638958,.05235999771198539,.017613369441475152,.02675424017353291,-.007159241026853261,.021450091526662492,.026061341438602878],[.07444303362221197,.02500970344944954,-.007238739688509119,-.034581203239581096,.007506922696264601,.05053220778206742,.09772895038203586,.10515405254550375,-.002088563116083089,-.06460650708474773,-.07190087700833939,.06270955516157596,.04810964818959447,-.0061288197958455914,-.048707571007934714,-.028878035144916103,.04928302961129614,.1030146407333215,.09188536866092206,.1083066909121139,-.006920186046306842,-.0710800467482154,-.03238540350174022,-.041456597157549895,-.03731828458452535,-.037271263481650524,-.04033581670492567,-.0305422084559889,.027846343886639854,.051125764403077464,.03945786312558099,.061533816212355034,-.008859713695695964,-.05800259437689445,-.03615103877043367,-.03985356005739935,-.048559742972093256,-.05876298366017621,-.0831018701176292,-.09187553006052346,-.0772668376513636,.0008620663628637198,.06456756049272938,.05176416503907634,-.08735727608117326,-.053385067235642,-.019429217609104946,-.02341541574438452,-.08563033699269586,-.126111383269721,-.08669161414437897,-.12449403321207964,-.05512595439100107,.030267444104458113,.0836024050777634,-.1258378190042574,-.09127814742360156,-.07353034604864678,-.08504552015304981,.011889706660064834,.13738456218349074,.1269175791837212,-.020511658061573332,-.0833315270062695,-.0456882908601092,.09472163178341901,-.1176819000585845,-.11560656474484407,-.060549525031994025,.08198488803341114,.1704420734813879,.11965727243025565,.1125448422909956,.07474105241393444,-.02573762291906274,-.03358721907248884,.03411352154081515,.051552692766032665,-.020222946025836006,.04569045105958281,.05607113335333701,.020997592772981258,.044561510792265,.02939148849213119,.02672527280652389,.013325176508616088,-.019772518292927338,.0027475572519997937,.12423204721233166,.04554971074538604,.01894738751080638,.005723987504926101,-.005869920830539471,.005036955065784027,.04372405490129991,.019509400602205587,-.0018887858002489578,-.009617738109261226,-.013199600334816992,.1014363612797737,.08518214265041664,-.013319980029247946,.002918907465938758,.010087593201327683,.009493285904375974,.017930356539244602,.03140663768500043,.011733720402003947,-.05090107026194785,-.01573578191125742,.029231279797781562,.048511610011102664,.013899380735429394,-.031157761675669398,-.04066208760310525,-.008301142375609458,.043045372058056516,-.01096803936953996,-.0012438578375955772,-.02262652033782551,-.11765611182461798],[-.03987348068518633,.00012184835774546317,.018432499523696314,-.06030489971984803,.014643208225874137,.012981315846513394,-.0070294048340999865,-.05562456698240353,-.011913096749220649,.008412497699637,.010420634562858239,.014232327032235419,.004683222693611322,.03281998263431921,.01320726418626594,-.02353380889127571,-.011404581263416494,-.04258217520341631,-.018915023456131434,-.049511208703627144,-.01836613958153846,-.005843344626253311,.02231630230741475,.021334764569425978,.0346662913884623,.060010301185060864,-.034246065227552185,-.04700549965012455,-.04792187180254644,-.04104883140323553,-.026713641204057077,-.03878999612701496,-.018331240491325174,.03797686786202398,.028813877664190697,.019770359402909235,.03728944535318747,-.0669629884115178,-.10295356437958489,-.09003533826746601,-.06041580278523514,-.030821512733484054,.02401335406847712,-.02361574077075567,.014617912689912915,.005197345658313313,-.005340876957806051,.019716826597634293,-.07876690419326429,-.029296548169388054,-.02328043082803078,-.014403388911157673,-.009226362874770445,-.03340903629912772,-.020726200729135634,-.035931925994181074,-.023010380673947554,-.039252395604041306,-.016760733401697973,.053608280303007586,.13329950551225564,.16489717632675976,.0902812683374847,.04522966550533915,.017404381514372763,.013597897839994186,-.047297713743641646,-.06762209432743164,-.02719563655941181,.06550639361374848,.02232560477300298,.046885888199241804,.043068894433185,.12018260070272857,.08430250848496149,.02067188016168707,.02018451176662973,-.07105089435926291,-.07954173909495858,-.016269072364149793,.03335471548526817,.02870602470630109,-.012011749840849373,-.015402866346903674,.031358471867631604,.104766674086863,.0025587486589462027,.02110857377048439,-.039307670372500075,-.09376755122840506,-.022120949123226506,.02365801675584322,.001624116197708074,.011496266326477288,-.03966683671453537,.010910001919740123,.0638158108270505,.06296474925617652,.011666021976556945,-.024049027553408542,-.0027908618863511994,-.053241603898009714,-.014763231808325047,-.009588040856415833,-.031086972870322235,-.030644620324520727,.010272461123314607,.03748199758443737,.060317495169656093,.024907320438576977,-.04559962354066016,-.020357685838190937,-.06210616698099473,.03698655605744725,-.03845306985689939,-.044856589426634154,-.03431065152416227,-.0117837233082248,.018762824804810944,.06165748915487904,.04080400995020607],[-.03096737664044258,-.034704706474157576,-.030029036584246833,-.07320913246644893,-.048949076143639865,-.03864066241044256,.05147476405244581,.07423685566323197,.11134675135754504,.07670405672405489,.047486303599635876,-.06845561373339852,-.03512851199649608,-.0025321681540545343,-.057133697514561765,-.05344060041967924,.01714865038536348,.052110170662047414,.058782183168318736,.04705696144603637,.0403223252560649,.007803002438069265,-.05608339456723066,-.04684682593449583,-.006557738579599515,.01547109497711198,.006661478090622973,.052620395249402485,.00019300929351519225,.07754706950878812,.05031378239481031,-.02456918809557169,.03466288694385679,-.00440299504585411,-.038893398080935566,.018694283839760885,.03542801836340945,.060685907655044814,.0587413540716437,.0014872430743369924,-.04575632584612705,-.04794464200830888,-.09281792081715598,-.021043716683786656,.007562208390103603,.00878028863524994,.024402794551533658,-.01824493391613341,.005681948678715126,-.122005902409504,-.11277710237979818,-.054719494073167244,-.09016688938377804,-.032774893151098286,-.07964048468698327,-.008143342580373303,.03641555473221397,-.02971924637905851,-.08343173036099473,-.09700971871393334,-.0783823363963309,-.0618524312337395,-.023645551992256014,-.040447890302015635,-.07855622620524906,-.03521895064035818,-.027448566314184852,-.002422165158715968,-.00865135823294761,-.0690559411874358,-.046263515682347614,-.02668358710641478,.008515128473477424,.01510527176030271,.031314100341752416,.03605607584214813,.025591220637012156,.005135383452748506,-.023005349498057173,.02104724020668694,-.014202301085685001,-.04360199270242936,.014083946209181006,.047988366041463205,.00407689495376469,.0400696156862377,.03136809244101747,.04140190793268148,.008354236628530194,.05352398489685497,.03834657618989342,-.007535488030160201,.03383654934661684,.03770195901377556,.023170719193185016,.000638745188949805,.022456779814042073,.05880400681490598,.033465949399417834,.011933873490689997,-.003120298876238995,.01606874667277748,.03762189304398071,-.010942651485316122,.04629938376653557,-.002763768259076385,42316925059140975e-22,-.0038944346280027366,.009657632377318735,-.01850966706940272,-.054006078059137416,.017238219091326883,.009159691015199018,.028996863874777658,.03395260188298865,.07075333983424409,.003780950647489843,.02719958720401633,.009141971904575387,.0271151884086808,.012709694003767591],[-.05922160665560868,-.0013807397121916331,.02761264595777964,.10526838045136652,.05616219064217892,.06338199684663096,.005281390721374816,.022701227707487698,.023071399548784132,.011640586008089752,.037100581562280036,-.09653730167124185,-.03797470422579462,.00038732579738916815,.05062505001626757,.06508672908567747,.0010273202640978113,.01030282761678826,.005032750022648261,.0509593427031422,.05316183247155901,.03088817116176755,-.02135902495678074,-.030126662636484423,.014336380788901357,.044081582390044685,.04514328491398001,.01394262266053127,-.0744795630241124,-.02119465049195851,.010166296540795764,.028011887127611046,-.022728767470732637,-.0337697506547496,.0042313533530659725,.022686514054856353,.04654204591333076,.11310013896650321,-.004505151104068197,.07238358893686615,.03789191997881325,.04463998545348823,.053304796345090825,.055297501218708925,-.025259737537897203,.023523250437604698,.029550788938781603,-.057103923688581644,-.03722805046402906,-.04033454711375974,-.06600239445486109,.051805877339979295,.09092132214492693,.01582333113937441,-.03866541214387774,.009290651557492625,-.028826426019922906,-.07498098908446209,-.05787442193814954,-.10795622255952429,-.046546338514420166,-.1118189944174967,-.1019241875217538,-.08570241416534531,-.09390586849193057,-.14398389568329137,-.05682858560544814,-.06626357512710776,-.07188323103088408,-.05541027253169447,-.00928225455038148,.0018363519548447033,-.006618338217431227,-.01182516248375036,-.09252025293113655,-.08826205934896571,.006952122206205752,-.025393087237703255,-.006394699129814933,-.043361744350810506,-.02217358952694239,.0077218815463931945,-.02533411774995424,-.008315264057263447,.03737058463828657,.012798906233440717,.01568549556443899,-.009659202034056957,-.005784888803287369,-.010756955350811635,.017757324648215944,.04452954766974304,.0041941047626251615,.05464518596179402,.03970959793814914,.033910773481424995,.0652717691003689,.034889848272914054,.09538710441349899,.012473593139358034,-.008993507577960132,.044380357060880754,.030765480187302234,.01888672423998297,.031787912403243176,.031673790743440955,.020196643029900062,-.0012983094411241694,.046204156701180166,.04361652893877668,.0522796751665047,.035528670172807794,.04875282742216639,-.010956478364744832,-.010948307255129602,.0023335073954288315,.0008261995970753819,-.028699221681917506,.014221929018802294,-.009806880683679096,-.03527276234282427],[.06294687244903106,.06451939487907767,.0328973595145653,-.0457118918796631,.020599391374711062,.0636551992364853,.014615769796257505,-.027440870743054617,.035616222562863675,.009403609382716852,.05650744619726519,.03127252900990134,-.011034554575282393,.038887056697409605,-.021343232536083438,-.016082974355130925,.03398009131937528,.05262640050415895,-.02529516749703499,-.02654872070640548,.030680991925506617,.027583071986928488,.08096671932533792,.035373199613146035,.03490025639293444,-.012798813313152833,.04319156099995615,.022703220357838422,.05026537385363263,.0003437400231437425,-.012567197236507482,.07342963378205924,.0065301063919971924,.017281768786973933,.04927600477908872,-.02725340162513791,-.008652057866240029,.047527074820523915,.1786194281868431,.0868090680216574,-.01935517824058866,-.04187030485372663,-.05530475360810071,.07829083723169422,-.12690621836570407,-.0962798905896546,-.0925411219328599,-.10216764911335079,-.04191334729172356,-.006156869539933545,-.02394181893475637,-.05181154571828913,-.12530688042526772,-.09786217959004864,-.10634083467860724,-.08874174563664096,-.06095883653512031,-.03199305637692427,-.036846220231738974,-.09227401034791582,-.11353320653734295,-.03614669556607285,.011596830638808633,-.013143670931630894,-.06391736056544586,-.11042459480083613,-.012415575911984202,-.0612866837920129,-.019683898333121175,-.02351836883559362,-.006652340016038455,-.014484754457127935,.018028020927321566,.008084275012827935,.03697237071656497,-.018618144071885362,-.10924354613828609,.030523206341700047,.01298880090453846,.04012014262037861,.061496119916373056,.04844996153098939,.01921366891131086,.021510068544701624,.07209312331150311,.0374101619172917,.04916012297501317,-.013141343062868835,.06064253700400801,.022194682981879085,.05129865380619493,.013217705879822975,.041765969490498975,.010615751276552232,-.010207688567782834,-.0005755982867169385,.07631424462253965,.017510356925100834,.060847396478783206,.03300347337813607,.04898473451202255,-.006482225209601922,-.0021063249759751858,.010622816122664164,.028538830399705187,.02861840870100916,-.023485260352655107,-.002827617418933684,.04410595418439364,.02257475962176672,-.025473428596684167,.026401062552437127,-.029859950686759645,-.03514814520727341,-.028004242193563095,-.010874515898578971,-.02520644976850539,-.03147261688793358,-.013822064554071298,-.01097289405425797,.0760923571868825],[.03690386612248002,.056002218089369685,-.010951719270400923,.040331097511643155,-.0037441455323561496,.04911212511418306,.007916966537418309,.11344386642727713,.0007563312264983052,-.03748257193135831,-.01873577218998579,.01174494526962254,.036505508708255696,.053399713960056966,.023086150106013142,.0044152509684453195,-.0036748654077677217,.04965698113538117,.0045969535450092955,.04039279416298312,-.029097892231179194,-.0748938652763218,.0016705057712694963,-.032135738557994634,.036750173986759005,.03202977495599156,-.025110352420147287,.0221106357762934,-.011118779729623884,.027123502587836187,.06109546207970022,-.024783808630182078,-.059955925032526225,.013711673076898898,.0365575333682475,.08411026188692816,.05595023129474677,-.020007452447925414,.020788588159875922,.049865734304206946,.03902192315122538,.08884566474640107,.012344115511745107,-.05538843672808838,-.0283890960033647,.025833332510384673,.10641983969927944,.05272291830145921,-.05478356057464559,-.10190284716601143,-.049794325260415453,-.006908561246873404,.018752575433158634,.00820978526312097,.013268033828822395,-.18180783799950825,-.1259586510866703,-.09458706276734465,-.027564647202767342,-.06433997097232488,-.09163078285949837,-.09227848834061905,-.07557002711963273,-.11647913534085745,.0033701825247711877,.029872248721253027,-.049119870012074435,-.1095049028754014,-.08298553382194322,-.020757266879069626,.032839871737627147,.027498688090949394,-.05126517784099288,-.02872690412919346,-.07436252040475247,-.07882837994500602,-.04821124597738093,.02417495141556668,.007447280767901082,-.007423249168852952,-.0007786618597691586,.056674802683761974,.022479560933966962,-.022053321065962445,-.025989291569709812,.0064102606195954315,-.020235352690214578,-.06483817157331549,.08153962706581591,.05055978719651685,.02764093148373714,.05666849133041683,.031151110583386293,.03987747631159184,.03244381912526212,.042982667461244774,-.0018215713348507297,.007063770010998928,-.00584297953517561,.06760376205929838,.03091253675538988,.028071888777783896,-.0010850231199715735,.015534670537972986,.04368719019400073,.01938400318015672,.03293968892788021,.05737048864426658,.007608329587750942,.004498692810154841,-.011421955766557471,-.02908127206914088,-.0036106413708782165,-.0032691409082095807,-.06355158619638394,-.022937264529547606,.009146701062682172,-.011390797309113472,.06818750604632794,.003884385505889279,.0714486250517464],[.09367005337881673,-.006018580372441212,.06497525344798,.05720481392857424,.03203935730331259,.017360690928795997,-.05431038836749526,-.07430401083115647,-.022133608826072,-.03441434222392329,.004416296324719113,.028938348016603214,.01658488166499885,.025525405954675534,.03589396196707194,.007674689565585258,-.0019368459518004297,.006670753595932805,-.1042360605814506,-.0005545484096969797,.0022380826663202374,-.02840948162941799,-.004017714090244609,-.013989051801159828,.02542809328073873,.06414836547218424,.07748576576667437,.03400735289340096,.04677126937473937,.05405600102557548,-.06829161572435846,-.01191564128605152,-.08236908091325304,-.034026953075964254,-.0939266964085038,-.02829902606827278,-.08318785606027235,.006867021340889956,.07996019523365458,.06377190265533947,.0008763423480259887,.020691801513151017,-.012739227946535911,-.018539467931270818,-.08215903388317325,-.03550926948648102,-.0903794995968909,-.07258235104829033,-.10221116757608581,-.10665056526245895,.0009025073342423806,.015334595491633053,.04622773006969833,.038103240152997334,-.006246122158059489,-.06724561414366495,-.05332552212209024,-.0029145163841420574,-.055345741892996264,-.05524613740870098,-.11556942735569369,-.12678748176917243,-.018650402834112373,.0201115675159311,.007237454432263194,.013539302016072579,.03910940758548388,.05164169890796305,.007896536595205877,.023870730531144614,-.017458058805458504,.018892420656760625,-.10504680212429973,-.08968000412836097,-.04272524613046922,.026724916448450958,.011635965581891422,.08488913381255783,.034194689506569786,.06585725545840555,.004242707893792936,-.012401464228490738,.042722865239520375,.03350923661538768,-.008645287457921886,-.0917697788048053,.020750157767451382,.01987667311893981,.010694698759597054,.04715645875848584,.044111484618501104,-.014434725200227233,.07137385570418422,.03475623227161978,.04057849325519469,-.00716628706542051,.025407664409730447,.0433394176317338,.010480242779609582,-.008730706368105114,-.013411411822995711,-.02039450903525014,.0060121542292144725,.024188238197290803,.04166819382248508,.041183226601004416,.10243115564821167,-.02940584456446451,.003109924528581767,.0030508999908164854,-.01738219553930828,.004826375063924693,-.026781565476663695,.011942148044968376,.002467828151880236,.04092900326552463,.08062259995716158,.029178579118654943,.04303871497674061,.005550173350657495,.00027909537625575576],[-.03339731139414968,.009641500771364497,-.018236744035314625,-.034138584815056695,-.00244389167533262,.0055087071850375355,-.00262680371191032,-.02824109883815166,.005215994203653013,-.021235364030436632,-.047073948370721506,-.026121704506604584,-.027138348751118566,-.04810743540836265,-.0402112798225784,-.030102378969085283,-.0032792712208641666,.05967861339205,.006758383300518157,.030667242997798105,.009543611534364461,-.01691908253325843,.003823309581384715,-.058995625065273824,-.030890606711754587,-.058149589871913064,-.0815351815818076,-.006357953877019928,-.017080813200946385,.04333747840689195,.06298359743661373,.0404013095948684,.007203402399887518,.011592685433827972,-.003302145650091806,-.0578167886071247,-.03781251270732555,-.12425681152290456,-.10985738895947982,-.0938128398806289,.06500129033876156,.03484356102898714,.05661600403485567,-.01492500765441565,-.02116473624418838,-.003216205277080053,-.012309755363306994,-.017827196918306518,.03555116186738867,-.07046756271563373,-.034864456303405046,-.017196442705869938,.02847927116818913,-.02280658118428358,.03213417823424855,.026469237488508546,.009589558238125101,.035119287178089,.13550727924378436,.13688661973317756,.1624799779614461,.015875158167285394,-.0208311518741172,-.0011812318416458828,-.019841048216886314,-.08808246489667347,.03045776887980317,.026063097480707995,.047026463061375465,.07056913665627884,.06291679280327833,.04979881242940511,.08548586022935979,.03514169693262574,-.02016744424568012,-.06168515964673668,-.09284755481441574,-.0015896852645350262,.016608882932934957,.05500158726927647,.0708679315701417,.013234850523530295,-.0008208370569672135,.03800485787791148,.07357330886595341,-.035371927316790286,-.03169750713706261,-.08624851669394049,.01039022343069513,.020133865530716527,.013595826448211168,.0552947028760203,.009562722633679382,-.021797178139167303,-.009191326998663762,.04272417857533575,.02896574564861093,-.04832930579382462,-.09700007638825506,-.03539209003656582,-.009123052872266751,.04773419441493815,.024899519254075436,.04020178333612377,-.042437436186437194,-.008886511592360535,.0034760730494084874,-.012834489181082792,-.011082107946660119,-.08637361262607073,.010906720579881624,.001585372406144106,.05993404935505266,.039390631946712135,.02593613064547083,.01835246554308609,-.06665498505357999,-.036968952314477735,3689082831739854e-20,-.0376222687795059,-.0877389932717216],[-.009692314530664325,-.014831123980443256,-.020109046114375438,-.04152978353183027,-.07911282329057025,-.028439541923334352,-.04721527776151122,.017919873457542868,-.04373062082547629,-.008307767309284932,.008063761509081668,-.042847844269627344,.015732582480551337,-.035877042331939335,-.02027462063142615,.006001733421295721,-.011038427925582694,-.007932185915453877,.0024669467939925456,-.04717475164878981,.019484888947581012,.03891215822644656,.039176172588516966,.005379757851188924,.01139452493864973,.022134514065384248,.10262246569682075,.06064544842725528,-.004904733554454838,-.026337548147820675,-.00031049715236153297,.02147108917750011,-.02913111856188328,.04902095414621717,.04824653180085528,.08754087282250271,.07299558540439087,.01971113347206911,.05334627599932268,.06871301346372924,.008923541533270477,-.009103604004815954,.00591298440909431,-.012742345396119917,.05621460641390912,.06379056565110597,-.020641135671904988,-.030946926450396303,-.016711976557631042,.1127244564225961,.02689697887910851,-.013567479905524482,-.017090058647780196,.01477668396540264,-.010781920436714542,-.006922091337546267,-.0894284594572852,-.06723257080182707,-.026910735478631764,.03533679397000919,.16956999523533778,-.006545783898859736,-.024077365950438537,.032166605250999306,-.01745920041250612,-.04008884443894074,-.0993011973611247,-.011984969849644441,-.02764133298839496,.012259320892963398,.099469618921912,.030178783959567166,.017806737961083313,-.031243892294941327,.03695296880951856,-.062248228689263954,-.0189666133444367,-.06605621564780957,-.02680077856103967,-.012533495449249166,.024584778032468828,.056249746142491924,.041206463201368705,-.010337287195679248,-.044756156557245824,-.07239119200591854,-.005660051253971912,-.02219153290606332,-.02597985228049178,-.004856931768196144,.00224564954242325,.04804184523060072,.021878224718166694,-.031093682711296713,.03107864582201561,.02861996862032013,-.059947445075684995,.016801646203229784,-.0025822067852190656,.08443882166553197,-.003253904863717641,.02175579697998456,.04439614359960797,-.008178732752852219,.04342802310153146,-.012815929012254187,.014790808529243901,-.028622217225797268,-.048854772240751264,-.035404776408354405,.07088064527850518,.05472466206775853,.08606869484637912,.049869516112302004,.02413461801985961,.016045127809092008,.02140815268480656,-.001959434892235346,-.05275660955271612,-.0464843033251154,-.0680628131201182],[-.04433192523077072,-.054329522119882984,-.051769461081186574,-.01525353279808098,-.01070122111548966,.00928045700858434,-.006241020917187658,.02007158696040288,.0633492605457348,-.04992151146932073,-.02484793573744559,.06107732839719229,.07312670376581512,.034270104298964765,.035888286964653064,.06555881241229555,.005089380157636925,-.01742526677567887,.06410303374113939,.06369099896053182,.011936936642071773,.006555889310454588,.059351618349500423,.036170614252957374,.07314487602014239,.043276296735218094,-.0077362104397021465,-.022748848048502378,.004668960540261835,-.000690026604987154,.06393971290183598,-.014966710082811807,.0030727592791528514,.026662644906728487,.05282034694297989,.017109036507216773,-.022408542987520336,-.08708472499414721,-.09756976542087417,.021721228084129754,.05171241993900287,.03275676867724427,.017819938585971133,-.037825552779906096,-.09990658237408458,-.11007916981172988,-.0630399698323383,-.11065720406183299,-.05646397133191597,.026810997895988217,.075619829451266,.07318402769983712,.03550137712065904,-.023904618994720753,-.017844665146339908,-.1175651419891549,-.12168288991626966,-.08311427985099747,-.034920888410994,.04676645007233282,.05877383374135378,.010496365445282875,-.0022130497808088385,.05109952838941806,.024774714859440425,.023471290407304626,.01563187671646295,.017970346390513474,.0019335540535132985,.03051462142073259,-.031110061550176205,.03360548749067617,.03625821259240384,-.022201080422089837,-.023002827294496608,.014758321300040728,-.007036805867247212,.11790263516593479,.04947434149385239,.06241317330987395,.052777269288969954,.009432637846820961,.03216379281079698,-.007137568055199119,.0032748797229581496,.006789619968039357,.022973239078915367,-.03004403885091666,.09505479220317958,.07791827880929669,.025170796867169457,.03248633395739102,.00548093487382893,.04628843125322531,-.0048346651023809,.010140951369667767,.006405041468368794,-.016192674375299247,-.020769896639595678,.07154315526795414,.041811635752456604,-.0011513813928812448,-.006960922701834835,.016359548418687996,.025002761420305327,.02055238314967053,-.0015891153508810953,.03668826543254401,-.059254810876512506,-.004524146766604867,-.02276489684400551,.05569732283143427,.05883509034932295,-.017695954014236,.01434475115987981,-.020605598415603534,.02101001537229521,-.02247477074116654,-.040296790452836906,-.04055168253818354,-.03657965859200197],[.048679672604873575,-.005221078091748697,.011189809961728723,-.014770773614183955,-.034142207536203256,-.028004372616342227,.005949358010194248,.015102059175930433,.01990083591770852,.03996081933195852,.0038194214559740605,.01388991934048571,.0755029956508474,.05989103883686564,.07551240437243657,.07375628206272977,.10697289779941345,.06874076246956287,.04803132511577131,.04236624977011188,-4202677860609336e-20,-.012109444919293957,-.011318629446975792,-.03738162672947794,-.02154842050017325,.018481632817077147,-.005201334100467268,.02747650575675644,-.013858276037494007,.04372837769145382,-.02503235093554558,-.02968671709465069,-.019073492339460648,.03349151596135548,-.06596389946117143,-.06234163555717752,-.07562432809243196,-.053585585183758444,-.02877361255805902,.00662180701734881,-.10035769919352369,-.08904646094198457,-.04613980400671794,.07297541439744247,.08725084363158328,.04516809237144165,-.05333664579595656,-.08240943925066489,-.09144443337302081,-.07442562311122422,-.092126329411899,-.03767463605174012,-.005652530403660115,.067513154505641,.09393421046986968,.009289669123771788,.018516434326696123,.03729758179933857,-.021567249747191534,-.03481887723122783,-.02178280374647603,-.02580882232156104,-.03685316311758648,.005007242741758529,-.005486535063339473,.03688895314986719,.02030363893313307,.06234970870159195,.0385172311532573,.06730764599156495,.05861634829822531,-.00421777044282462,.054673040661478024,.039230731169713394,.03139249117871078,.04391943445423645,.043292679240196676,.01880512733348403,.017382645623532596,.05966162401002324,.03369867509664016,.013341888531181467,.08421015245705174,.025430986838139963,.012904413846026745,.06543112206508994,.011197289986359183,.029135622794168346,.06254098788565492,.045382776129875506,-.005346260396196623,-.017266787058448405,.02042017407557469,.013123043389498143,.01525904905961481,-.018730258477720974,.023824284687915143,.052818399981128895,.015447226033022343,-.012489602024893638,.01468373434072245,-.02685260219002731,.028989118420292514,-.004895237991038508,.024941536558213226,.08007482591583316,.013282727442137699,-.03041996091693562,-.00770586692939193,.005761503932864273,-.022997491985162988,-.031813252703541905,-.0074071331247387365,.007468576216473739,.06665166960870672,-.04318959412870925,.008748609431892974,.03560748124179862,.009344912969746919,-.060325944063403136,-.02989706486831599],[-.021246880546086595,-.02220383648791282,.08682720127877484,-.025228269953020035,.04697176265078679,-.03203270556745305,-.018784965671998312,-.004315941436901353,-.0418268952943677,-.06928924256853522,-.008166651625465454,-.017438229004257164,-.024335471310471764,.028654380266214648,.07206649188292012,.016590540091147674,.02463322903508903,.07813955636599351,.056622200409004196,.037502807115330446,.03784022947009699,.032000001430608604,.013106472326739116,.012369223564270927,-.02870590297489497,.005065930160656651,.013853418541047425,.0005595304094045961,.02032257178110093,.07527603584001831,.09191264610795653,.11098583412431406,.07821683872330536,.015546123816145365,-.01174475399733392,.05173799606146151,-.012734123174444889,.016768985632801714,-.04436589860231249,-.09955350853381391,-.050100281868429075,-.0572477447691047,.016222179759918118,.06759965716981267,-.008648050879736989,-.003286883309752117,.008592258882527452,.04676794057539935,.07279382616523587,.04529496705079871,-.08482529510287962,-.14860512013508548,-.051316060883006345,-.12479434422523886,-.08507885670469298,-.0057128248462955805,.04416255206378315,-.001048023139082116,.030855043319812047,.035139310135952784,.07227732775752435,.05391764845275339,-.04467152779953301,-.0826848844602535,-.10599899450799834,-.15447137644238773,-.011133194850090913,.028927718717327938,.0038563782177809536,.01624760202616901,.017415917794260313,-.02140723915263775,.026964006691972034,.02813075759211585,.025157803866096017,.037924085124599397,-.004684964387390508,-.027697413203631536,-.041378992383391267,.008761232888241332,.0052052300046328374,.043900410523183886,.07761021177895132,.023415755123284865,.060860467661889836,.03557434378112907,.07192757763022538,.06407092682092731,.013357966646117945,-.04836563617815281,.02979302149043304,.005225453074711478,.001772380719733067,.043271021300702546,.061871883282456325,.06025004123933597,.005922077559217299,.06727505392941442,.10149603554983715,-.030661903793952457,.0008942860474676784,-.05764531131175226,.03329484629877765,.024005678533927544,.004916086291532833,-.018549226060485483,.028088385775127147,.02338236259357804,.034065125172518744,.07678838837073973,-.057670084152690565,-.03452764926869298,.02176016114763074,-.07233366259122359,-.0005361811817523945,.0295464921598111,.004352814521018584,.00500966267528254,.0456723326635872,.027025414018034634,.04757490956660641],[8460801644550719e-20,-.0005145860366282239,-.0006558334416083833,.00020678855120534164,-.0011087422000772406,17282608213937956e-21,-.0006913929945738893,-.0006775346073245893,7461334647233808e-21,-.0007052658429251291,.00036510757807054156,-.0002261258363614252,.0008373312473602332,-.00038556424752306945,-.00020677490024442052,.00010703864033769633,.00015849441156012833,-.00023178848590595102,-.00023816000343533997,-.000420628080187814,-.0003589245103967076,-.0010410723256383952,-.0007099479937469275,.0007230031202940905,-.000247355607939273,.0004891872672126707,.0002492378465157735,.0006066898040272925,.0014982106812944096,.0005361975164212482,.0005008694101298963,.0008980687784829119,.00023875283911756195,.0001569025840717983,-543153422108561e-19,.0005617340799662848,-.00015464198944174475,.0003080961595964592,.0010477498266872332,.0005403071450221222,.0020027631503172446,.0007369621270176263,.0004183775897850378,.0011534221243659493,-.0014158435817800425,-173851858713929e-19,-.00033269545836868853,.00025908994851942674,-6789517531419209e-20,.0020025402967875014,-.0006012096182389272,-.0006372877274755245,.0008852883436926973,.0005138523171237946,.000800769297987905,-.00021374130033396943,-.0001276378298146058,-.0003229920114812129,-5546376125890873e-20,-.00038413195736432953,.0009809574637124063,.0016769261261450272,-.0002368271084003809,-.0004713132716675089,-.0011833841321572391,.00011652969229286516,-.0006978075917232144,-.0008151621640403311,.0003147153846476706,3297776009406636e-20,-.0007426811784148751,928343749358883e-19,.0016276084011049713,.0005203934741388303,.0003285769128429112,-.0009091443157508853,-.0006627394979500014,-.0004942942568035092,.0008178710324047572,-.0002864681649460618,-.0004777482209132834,-.001128700205033445,-.00014958608778612575,.0006772790983836825,.0018426861751217457,.000421274359649379,-.0011897602501548844,-.0021020944752171283,.0002586250187259949,-.00028164777099942,-6787128829004174e-21,.00010673321891338397,-.0008194673362902514,-.0005065578031113356,-.00045739009384393806,.0012233134687435353,.0012483089084911257,.00023366693745787998,-.0004965382203324757,-.000604310399740543,.0004885631208034064,-.00039402287572039285,-.000302829824259096,-.0004829796844154216,-.00045029888856688155,680651548607275e-19,.0002938081340822067,.000807500675520309,.0010027117298195727,.0012117980796380462,-.00031499882641429153,-.0009661544954750814,-.0001652076714513881,-.000259300834581741,.0007044456759483508,-.0005152497160491251,-49950991088697216e-21,.0002326983548252299,.000981280700583384,.0017427389161336626,.0012748954300746823],[-.09216726473640563,.005672874254759814,-.009374512524727896,-.013062003758843106,.02681075417494043,.049001345358430204,-.021651121797821183,.03700115656960461,.004218312740031363,.0018620748056430826,-.00028650345860718393,.0053573451925248185,-.024952282021024397,-.053963168016106317,.02220135440090492,-.013351422685652972,.012385499720994092,-.018031103648731638,.025521909572096997,.01253732595969557,-.011991546378321899,.045186572016900094,-.00943350838844243,-.004418429309194449,-.013784342121793192,.025926061962200528,-.04105356169652366,-.03889277471178329,-.03989567459908096,.03544146116317792,.023677237357549445,-.04102177731015667,-.0576956088544048,-.01762676919993638,-.020216604797755007,.027628137586160582,-.018841264850454086,-.015264367494595166,-.042662519918908834,-.07663188087932943,-.057528782374830695,-.014904729302692682,-.0668977800017137,-.06532989573225445,-.007650565220560346,-.048586565493310384,.08598179761037544,.023144594932235765,.06950258752501162,.023606740362224744,-.03701131089094889,-.08646362985361913,.004859332031582425,-.04793315203337142,-.06520239439795136,-.008308746609917553,.0036048909369455263,-.014176009427905843,.08652450016441214,.025019184064985066,.18351010232889509,.1773063621666941,.05264594509899273,.04629637404986542,.017268040614808,.09174432677718507,-.011476730811934746,-.003109830521472179,-.044720850821788796,.03519498456881187,.035161502690833665,-.08522566129784649,.05912598081096809,.14804082639627478,.09489389797496472,.10021021442994898,.09479988677758025,.016819487190214488,-.001620802251457232,.005698369852643104,.024660235147196684,-.001744068586085468,-.031929007957278016,-.08234588274111157,-.03663187750709784,-.0006056141390904045,-.008492377648402303,.029092555992398725,.02173362039642967,-.019868686758322113,.004937734271252584,.0354455889830066,.03565950713563679,.05730187910824103,-.038291855034349676,-.06160379000151402,-.062081937237464455,-.043689034974759226,-.019286854706340784,-.015927077135257463,.020688030294743746,.006187498022143166,.007954475633681643,.03821008410301443,.017747129076694818,.018299098668275414,-.07199389072103002,-.04880614394384078,-.04147751454154017,-.07419601483953683,-.04357005031946174,-.024269573468651304,.048012036866646256,-.0022007186161765308,-.012800711217039476,.05287613915145286,.06224964320115732,.02534211937322168,.002870857368936025,-.041475224097980136,-.016770635320925542],[.020791522234705886,-.026685059276677248,.005268388136761268,-.034938985350819116,.02160913529503082,.0727598338409123,.04138866266308179,-.022050570784842675,-.03766921280042098,-.038135589145765356,.05613806948326967,.01870086519715047,.02405327287113124,-.04452154836720787,-.0072802659094019905,.02552180649073373,.05589803239066057,.020086252624459025,.022257708387705265,-.04311318573814257,.025460765149070363,-.0419995861067736,-.022103861342994947,.020436961749637446,-.008910414215047568,-.040754212701411704,-.04498911160980137,.014513662447400134,-.024972880286720952,.041775700269714146,-.020617899446434662,-.027451770104515237,-.0581210200819193,-.01972807133154101,-.06486356953178196,-.06542924601752108,-.034021394098613274,-.0701540698146796,-.04718580146287146,-.06686491365147076,-.066928175305741,-.045242116038150926,-.04152718803585803,.009097191551587447,.06656698762341313,.09217912843511486,.035601037862094155,-.03164618371161126,-.08485439852600936,-.07807191845559307,-.05806388905453814,.02743341651791674,.038430683267361994,.09354518012005526,.020820155765660042,.053867582404908895,.08012680497450528,.128232460666299,.10909482374666421,.12328440515687174,.10908470088869585,.12750021442141796,.08982042044320541,.13206669887005298,.04099900325556686,.05858962262336414,-.028140612810618193,.011014387203399659,.010818445027512502,.057563125740994966,.04345415026084731,.0638052153810197,.039304942349605,.014669342715182604,.03107259575721156,-.06425374207488327,-.058945218947391416,.01193269465678194,-.0881162259818974,-.1313024165264915,-.08377233239698005,-.0579417230864853,-.054054451777421325,-.05288439264323012,-.09093972499912327,-.05418126174023175,-.04856626244904953,.04176168440992527,.05250415894531329,.04064045371279662,-.017347415771619662,-.07671975680311054,-.061854859388876034,-.020823169528688797,-.06226645510778999,-.04770321461094979,-.0402273079486973,.04690122089125488,.05752741262783012,.02543790657840345,.0699565285200473,-.008133729840010097,-.020791993788821496,-.04000189041824075,-.05758450686937977,-.023269358988961084,-.04372684111076177,-.025274229592385768,.04788187134166745,.05511309053827109,.04125970130982366,.030577926161307056,.04016185297326795,.07732591022750637,.049074284090185986,.02071832304983759,.05262692548423558,.05760426683492389,.05105831447460146,.023973320452055122,.10154029156391102],[.03864173999025863,-.005024459154197372,.0046136555572029725,-.006758445896816456,.03142115173410135,.04386382071316666,-.0015664513032071729,-.08058753858786455,.023010888007158094,-.031974497946145916,-.045852604775241584,.007332161957744651,.02453823637079698,.026493986359803483,.012817297004288597,.015872668762235975,.010885319603060616,-.02502180918416584,.03751411496590415,-.04629455457646226,.011215007929641349,-.02865689693597509,-.015741373908333564,.010582364969449747,-.006024534095056391,-.002163846321228083,-.012232405683626778,-.038573436738902116,-.03419677992225159,.021758828506470554,.00407014029546543,.03301899444394859,-.05170384121679726,-.05329742286319397,-.08798696523467905,-.03608851783262798,-.024713800986492014,-.04555846893830806,-.06323440947763162,-.007987584469683166,-.0012689882118882348,.04752499078846824,.014455312192059422,-.018256989781913674,-.02767798871819263,-.07330541991854427,-.06217844683471194,-.05604613854841679,-.06158257439478332,-.013981639384921803,.03648613078494939,-.018426595901044535,.07279675111271128,-.0075590705083293415,-.024644110824231222,.06168186724387318,.06066863697443063,.037713982535211056,.07805493494580304,.14418916995002865,.15559892027908628,.06752163228865085,.019945580585251987,.026658612914922927,-.012069655500885873,.00574258404858074,.08314454812010942,.11628270848199979,.05399715261215071,.07440961182737355,.06702872719283837,-.054231046134796825,.003903035068154397,.06243331293519696,.025820518574058156,-.026726551682383845,-.010193345611774624,.02041599398378499,.06039505199175793,.011092152032282707,-.04696569874087772,-.07052421722415371,-.07256180422826489,-.027650589315538845,.06844993348911974,.03300031824163617,.04173629864404055,.011928446975795447,-.054917381191681824,-.05165380226812591,-.028773541890526888,-.03745261687039528,-.0823400638544093,.012374637017067137,-.005892533181481099,.11104715646061467,.016941481040333578,.03319422535043131,-.00183737049680259,-.09505413307978339,-.05896573649709879,-.04023330668704766,-.04640859258616045,.008307685564098832,.04477541249474294,.06358993235538837,-.010508998580612362,.06609405374482503,-.0027753074050847724,-.010075721966416776,-.050323575669113996,-.006844421670559871,-.004147572812252735,-.0038945396282382776,.02836682825451703,.03208501608286404,.029300197945124618,.003228635961192085,.07138559002076088,.02372642976936252,-.07125066539932244],[.10872537789851011,.014278189525074661,.012273877115053775,-.008139254327333888,.05705310470537752,.042321601806311455,.03332397665498274,-.009469624318396694,.022832248497195895,-.0603082173573287,-.02938835381899139,.04786295879347083,-.010046448412779706,-.018988029533582834,-.03988555209026971,-.04050405538359031,-.014328694386006549,.06688800978376946,.054680567071356045,.0364680270877374,.02742606993050216,-.04115664609138166,-.07108379251603708,-.03885814806782932,-.052404651812680655,-.0374397938738891,-.07214155372367853,-.06483198436193927,-.09337089867002601,.012492784149001596,-.012992603451236887,.01282798497239726,.028495833153019318,-.08896741990212789,-.05914492313221364,-.07360362887442543,.0014228258212915287,-.06136558081649521,-.05466289158280074,-.10167804607960763,-.08634908618382056,-.013058338568626704,-.020967276930948797,-.02496861635421278,-.00867806660644585,-.05092789276026935,-.012321465172884127,-.00979595224133116,-.06038602061828513,-.0735660196992905,-.0989009527104654,-.09504491325304382,-.050810313973777735,-.0206393932988607,.00680088067324316,.15285717060929618,.09754537287272631,.11067705492765795,.1122942786041081,.18427633371321137,.11307184167377732,-.004571622066214404,.0064434015987714695,-.052854132609023295,-.02014616037541482,.003623472946206449,.05573667951123913,.046045942922945615,.022877085053644025,.019701551970110434,-.04450996062494739,.026260060577445368,.0012791409413432393,.11282744913606092,.04595573753980184,-.03675626681806435,.013792875001360963,-.00031411118081339784,-.024157026907081533,-.0076891189431453205,-.018310688556061716,-.03692450276609687,.01587681789027176,-.0007429606529948535,.04435085579041969,.0935497347568171,.03410662005005499,.007466695802994673,-.055729238389459056,-.024914950480349144,-.040394064221819,-.014479423659402343,-.021786228199499567,.034462836766090535,.019018078277086774,.019995937468091644,.0572642476760353,.04080735202882977,-.02838261619198605,.012260696627029324,.036426534866617746,-.022902539374817468,.006834027472864906,-.00954080807350638,.021714345796159974,-.002425244709437491,.026186714013621812,.06273849289505809,.013100065944167471,.02184527152625354,-.0064556273106626955,-.018059624197655194,-.011501119699467793,.011069356592404581,-.0076555726632192645,-.06037328929268344,.018730638535199164,.010878747575572504,.03931333070539912,.05053332226780753,.030800301775522385],[.04080290158618271,.06510370589054523,.01571760146393637,-.042967026067333894,.053812288839959845,.0747830215115568,.05711207351435454,-.0020897181911366594,-.03144415500872153,.03665938914354934,.07957790238680498,-.014494517062943354,.023853876703959682,-.08596023447535846,.016421056516635474,.05309898052839089,.04458731931940648,.07578738303768207,-.020575193628669223,-.052303363133645836,-.002712553846978341,-.025364536060143633,-.07556410915497977,-.03984463586009908,-.03550376583444041,-.0319829168047286,.016275057515532626,-.014982688136025823,.008516287958303783,-.010415191123769537,-.08024510767765138,-.06893386941499541,-.08211726615138473,-.10868042731437648,-.11517402154338535,-.052169980652789334,-.07800261880307047,-.08474304362245977,-.09007941227908206,-.04556070531827033,-.09913781973350742,-.08993111954877482,-.07175672338473282,-.1011983905001102,-.026108924802754015,-.02895558848827974,-.052952747867330424,-.04065101127850694,-.06240367564597241,-.06253086782656903,-.04763968385264847,.021549892035432196,.04201174254152587,-.0014168202056091244,-.06001771015393874,.050238665733522286,.09441329210487574,.14252847594850043,.12070740630935128,.11697697498229397,.09897565303720446,.1284055582162842,.1092645611216749,.10934335033079282,.03726929825860131,.022780470067651784,.04447390084024124,-.006059846752864813,.0061609144853983725,-.006476865881617416,.03487043257495687,.039379809714831654,-.001395754383429603,-.028962960938971525,.004656918959700274,.04372751684079228,-.006941018795027367,.018088182930952126,.008202394752377018,-.009919468949588936,-.06030057619660496,-.04961731590236345,.03203327551047325,-.01701144350548291,-.040658744671612526,-.017714249349095157,-.01721059858888459,.05556975142409678,.06473217242560926,.0142514421392548,-.026792644729731044,-.03761980342159445,-.03545401936679521,-.0033597142606219474,-.0018841722971697202,-.03513935986915321,.001299552487248638,-.020445085521288382,.03742804586573839,.02131329253480936,.0546080359405192,.04453808079351196,-.02550264011509991,-.04507200092397022,.014585725040689751,-.03178054387790277,.006885611917918824,.005480883940431572,.010447966359669152,.03600709327755583,.07297766428425097,.008145153264843608,.018677942155355585,.0022220414820895706,.03813396089414066,-.02225646621983918,.01847332467627509,-.019158933928994693,.05386403637184607,.0041178771402385,.042051744426760795],[-.11959471143292481,.0004690887116434485,-.01780653758387274,.06002898783096526,.010482881406572234,.1134097871181696,.06097200177585707,.009557314062262883,.024171870288714075,.011559219957486627,.0740943226841755,-.001533026352483688,-.042433991686828154,.009388770328004534,.054396766959822755,.0498214705214945,.005916311159527968,.023110497561564927,-.025327700927906302,-.07139186295709547,.002811649103161947,.04063973608827068,.023985187089475772,.0008059303536148248,-.01729410430381438,.019318061091531672,-.0517856314075248,-.06040231096160379,-.05163086528262303,-.026410009167490766,-.025387094238179267,-.08670514848433176,-.031667117402875984,-.03259729996049833,.006077775102272545,-.03085014389500896,-.10889563458102586,-.05926434014284302,-.05802675139101486,-.06555094025913953,-.07638820450625015,-.014694324172739949,-.1161029182457609,-.13336448135124818,-.013871869353886061,-.07135491460970073,-.04629579513747036,-.04634125713368373,-.05980389795115816,-.0556899798471754,-.08875207830049796,-.009276685221718137,-.0107658717547462,-.013689713283032208,-.05895359673813014,.01892677396122769,-.02728217897139536,-.039857478520104385,.012549232916158878,.010688241731306974,.08031916593030144,.15262100299518466,.08696066131931049,.15252525992290902,.06946387313667823,.11198174180776471,.01737147006474421,.015812778630970917,.03280600378610399,.017746821396218554,.07354467313923953,-.03211026037791272,.019566763627964195,.029618292548164962,.0387862970556503,.03262787177258765,.0698167755782568,-.006250820231163465,.05145841556046568,.030408800781210513,.04677747957301087,.04000213429652272,-.02008807639444515,-.01263470418907111,-.045249735132798174,-.03425392551351006,-.021875531092695553,-.04599854942342784,-.02416410768080165,.007563653039730833,-.0009142181668628079,.03570271779785687,.08857497469018605,-.013734861595105412,-.009803321130600257,-.04282565326207903,-.0012702256209832369,.012700494745847814,-.043166253351587705,-.03226823345161638,-.0035432592129699403,.006758047102586359,-.005345386242264896,.023287783646401855,.07429272607294657,.01946652710854537,-.017987962764354493,-.001252405687738014,.022263654018090235,.0012391427069160937,.0013565429618937579,-.004671343840151294,.016578328153419922,.03658420847603991,.001097170617763564,.011356767972489225,.05343021429518496,-.0006844437404776721,-.0384483419844764,-.0005838954999276211,.0032910175381761254],[.008713675026964234,.021184676494079766,.044118373966988256,.040648025991879715,.032447241186740375,-.013324459836625741,-.020142424050336942,-.02588248478753286,-.002484057943328691,-.019010478599687353,-.002112799546736252,.009101832461506542,.03962569379787331,.017970409804111777,.03736015107496688,.019343344984558475,.014756799698268486,-.0010528464090698991,-.025961909366916235,-.010285595270832736,-.011165374267784578,-.0019598758278640237,.0087081620119245,.03449410070636509,.02865225471091399,.040299978182407034,.03337434307105071,.05034954230415309,.006362595668959546,-.0240118392919262,-.04223337286626337,.022057516258499003,.0533764435270162,.020620147730700943,.029540439011999847,.057651788173259826,.06797909193338404,.06264674601786877,.04924017393588989,.02116991924721654,.011453866008363397,.010299220942533334,-.0018357416874219962,.05592957343428269,-.011231564367321699,.0320420657742736,.01571280002325131,-.007003925149084272,-.009101648993736014,.016511365940874906,-.01970491139189258,-.03909233124056194,-.0457710811076922,-.007769161612573537,.04986245855355674,-.06736549253306108,-.07696307063309017,-.040595361000206484,-.030389356872258563,-.09251433756943767,-.05721158869646249,-.0009543629800425196,-.045682047502914935,-.03681886436463739,-.06824350943417826,-.027587536268803375,-.041645167478661045,-.04303078919819505,-.05449772220141379,-.06863844729575456,-.09778610861618825,-.06571331208133178,-.052881969043814835,-.01339699229959858,-.019033794283482786,-.023493218289815446,-.036063450059278426,.027782266928957237,.012906654330914466,-.017337278434917267,-.06448794154411731,-.09983538378171773,-.10289791170276469,-.06466355143155102,-.0641236728999387,.010795364389364459,.024949528393138493,.018119888699965225,.10433442726226234,.10219165136667126,.013336681266255849,-.02360008017939873,-.08988775587348374,-.10446013110840585,-.11164381762372182,-.05155176202653143,.04526691930508824,.06967716608314986,.13697123941472913,.0644828886074587,.09855119911738962,.09360636141971522,.037819160682802944,-.0035166197905182836,-.0028484068050251173,-.03160894316546914,.004681194691095181,.017171967845917853,.10536533016879272,.08251439894034036,.010270426109688261,.04723579496187133,.07902270242935786,.07371130315469251,.040152485755633946,.0776647935813626,.04444283404941494,.014455191975205124,.022399756108926826,.01722469965046314,.0647389641188895],[.08617181382542352,.04327634472227127,.03005718229356319,-.012272805932473568,-.008449791937591843,.03319158499140917,-.03472562226898855,.018176702115917775,-.009712778176689849,.008516618232330835,.030226931221559766,.052416098527926294,.05166883783712091,-.013910386317496911,-.014892754899464261,-.030204392408315697,-.023348595772105338,-.039154056656942125,-.020299148174262385,-.026870214226325,-.021026881302678255,-.04834225284189666,.05021602412231759,.0017508003206529706,.01784781112040023,-.035663337208851044,-.05570136182295937,-.03456550109518051,-.0001449409970588969,-.011843034224678937,-.030725274086672746,.03718111537252371,-.014334667924480585,.026402505410657532,-.02157219826244711,-.05078457903014037,-.006759113645949472,-.057082366222224006,.0016645285356211514,-.004154696072890563,-.028755773827423173,-.03714082137578157,-.05896669006968293,-.016029429438384403,-.0031721930051920033,.002307758545402605,-.048021525210782345,-.09337631184167036,-.055542556473841764,-.11398186442053326,-.027456752012806465,.016614108182758672,.0027741155498583747,-.016348951668857664,-.07214697896586968,.0015395126311125717,-.05268283493477871,-.0603787275161702,-.06826686213483847,-.03677188567276046,.11935191252954988,.10244934755298962,.027542982076475292,-.032070419062542696,-.022385148133489435,.05628982360290191,-.034119337486394785,-.06968689573658336,-.04995580272086168,.029733455414129237,.20068856127367213,.1162085020692212,-.04341025186306002,-.003059378302219598,.0006319591891606677,-.001555344046955287,.06527728549440281,.010466423234828076,-.020040852081297265,.06175562983155491,.12136556526370923,.07824718717009237,-.08072517073390352,-.07507741233797936,.012154159684612222,.036821934539862315,.02472102052087196,.040715988579243925,.021622540244536845,.038658271107198355,.05257881832712866,.08363101810624045,.04788200302645329,-.07515681569436888,-.050687783633637906,-.008838972961667177,.09103482074493136,.07844724401290881,.06227592062517176,.060594909680654375,.01693797817353428,.06408103556895299,-.014547815241575009,.0656581964195679,.018129490859442446,-.08798530089434585,-.026622130825924434,.06088617497349924,.0777507074361337,.06643787459889448,.019421765119352175,.04850472328750237,.07041372195878251,.035827424258235,.08354841732227908,.06002781338799555,-.005432499769252413,-.0020892485624801555,-.03051225054284081,-.00047303040700700464,-.023511765584947494],[-.019836270599180916,-.0017613217539587485,.02098070406146591,.03244497729016334,.03548236071638519,.05146391412276292,.01387059443680283,.012773320795543788,-.005608141014861109,-.011615184428147185,-.044318141985502046,-.060123468169623585,-.01477741680790809,-.0053582542779810755,-.054379500064678565,-.04137798510918636,-.048976925694358256,.07695341809096971,.026914330698442304,-.0014016954910277407,.009746101971697257,.004696377813778199,-.0069130491706136665,-.04062847756349136,.03412890824209289,.011113734772594072,.026923522254639856,-.03490197019912518,-.08357245347477754,-.017956322789516803,-.013806163282359438,-.06239361835505905,-.00414268265889578,-.037637167036336384,-.03772452965858855,-.013774694560670805,-.05770481742039068,.004823649887185999,.07228227823302627,.03216188284683628,-.0657449299254947,-.04363528028110784,.0002605629282635656,-.019142520605292868,-.02840783350587329,-.05792903864912054,-.05076593603511028,.034535717074437706,-.09219249976550069,-.10532839199459904,-.012076014852148213,.04751293083194946,.0020511676860901244,-.026304839763800526,.05901448578643173,-.04121884738294615,-.03790851157360316,-.035253683963737445,-.003764225518756617,.1058253214787373,.15061197856457278,-.044965430671133816,-.038672944035853724,.032859085087083864,.03683642309190256,.0915213342846636,.06793034970435255,.001657465766571567,.011255029837672278,.019714575278699853,-.046029623685046345,-.005181960580967995,.13027259585766382,.07624404176215346,-.06253229991188602,-.07358399113535818,.07717453347506542,.04943265060886841,.03586444426375148,.03571967974989257,.020318474287435453,.02861748003954917,-.18444657518134203,-.027969189014098672,.14692467780203242,.14809587852238354,-.03290596643929547,-.022816759205720398,.08164280224260032,.0733194247466878,.09655155843427247,.057497490294592224,.019593324904571427,-.060101281088941985,-.0552897852606532,.07775252392870703,.0822311883213252,.043012682164453975,-.08499854192911704,.04722674641104155,.11708089871954172,.07395783294658849,.0684819210097608,-.025787797068816443,-.04254783349952723,-.028797349310348233,-.028665140255539324,-.05046502523977903,.00992827272845339,.007479525592792906,.035767022417524885,.013422682869269679,.059916646550554516,-.017252353019081054,.0001402545394057625,-.028232578424891228,-.037232130930961754,.03807283410302556,.017200727451423696,.048123699773181455,.08287494291017442],[.00818892304744609,-.05886162055500953,-.043961481598665794,-.06317703541286583,-.018314195969373462,.034878450378990955,.03530417579745773,.014293668892683664,-.02745691650939293,-.06836762892522105,.001669119251847942,-.04096794591587138,-.03943941310209053,-.021637978943057967,-.03768429294580855,-.017747783335439818,-.04228882458473746,-.001817664232848959,.030934243801926706,.011733255516551085,.02708984163398926,.0017191072696037882,.043276004610731736,-.07253261964783098,-.03022383631361848,.021071961346727626,-.007414749749440064,-.04392522954336239,.020288776715248,-.0345272375860235,30471360021155913e-21,.026067397032741996,.0885404647984061,.01413941347644106,.02276639426056372,-.0018480555055750275,.04267579932875725,.017054471283286493,-.09674613723519468,-.10757348404679792,.07075487390653942,.01575558139579953,.00966924786388477,-.0032289840854645077,-.015101060431773538,.05792600561794836,.05010944609735675,.03438493002343132,.05420170443576617,-.15712629885767235,-.107551002318037,.05421585541694029,.15265730024840482,.0558881196453126,-.09594140127704004,.03328672046334586,.09353086897835676,.14384249052592857,.12025171427727349,.055496873043967186,.03628529629636333,.06683307959286867,.0421613826116124,.04758799556553914,.02186765443229803,-.0564119641379216,.06760319433672685,.03133829045722296,.050713005156545185,.05214804595767879,.018648322758803917,-.05075915769330168,-.044588001217457346,-.039312995512573896,-.059936417610193665,-.055184693439938245,-.019957035127630418,.050192754841022036,-717573958276263e-19,-.03309170204885887,-.03442810497427318,-.03441346579020828,-.023267082967762434,.0319018486063799,.020238538810505934,.004222146677161306,.015602237108089854,.06084709170047344,.04140185934666961,-.0034146015221089565,-.007455996106488949,-.015893641385376203,.05639235196240071,.06335454098347429,.008730447744839546,.013014118991186936,-.0020131002441534374,.045231849909967176,.03537820748051668,.08260029968489999,.03371559917052212,.016512586361955336,.015814071825167364,-.01653699310881645,.02238828804819251,-.012153283754204335,.024539743316687932,.02310850403917898,.006706414172729741,.01196006995554437,.01808564781799793,.022564539714186704,.029240080645026825,.007003142285189473,.04281931207220657,.06364628604735939,.07144491169237732,.02500243037116163,-.02988386458099207,-.044839473616139255,.0048106139958749294],[.00760442586653437,-.031647161439197435,-.06317244100977004,-.07449531381563927,-.018994314341887673,.052826629441971945,.03289022542006834,-.013629701917450165,-.06480780603190414,-.029393773930843553,-.03647121361581636,-.00982217686466173,-.03512116201717283,-.03943473473657854,-.028818473185370876,.03850092276204857,-.004932877519617365,-.027624833158639117,-.06784686644599558,-.0011073069182334881,-.05184142360008933,-.055930573972024514,-.01741185166520046,-.05752746679373305,-.05549930480521064,.028375118140619545,.035910848122856304,-.01496101773521763,.011606597964401194,-.007587669429230753,-.004507535673161027,-.008200297874906939,.013779697793775076,-.050073087994743797,-.04908451276428849,.07006315982706533,.04121129065965178,.04422191240489891,-.09251015654230017,-.01724590043261233,.005461449751680551,.0057317904111747475,.03349276507968521,.008614135027589438,.019265007144101023,.009144157843299215,.05844498925238964,.11212586773198896,.007500400004536165,-.14040933702091665,-.13224491934624966,.046900879586457916,.04311888708201805,.0825796852128937,.0686837735057957,.04131767063077158,.08551469441891645,.023787162317564083,.088925450535203,.13628690428327328,.005469777102713718,-.08654310842652521,.025964600319029363,.10587654052203503,.09445961137566042,.08134630023198908,.04159220432646193,.006681788783911099,.07767439441201977,.005668387634230013,.042096017073306194,.03219130381739435,.030452658585607126,-.02598425675341986,.025271063575447547,.03421166569989925,-.011964155896605516,.03707652769480256,.04508649436861286,.005158775637624485,.02880706384910163,.03859972049308148,.02487551579682267,-.01389164075174086,.021755723908671087,-.0653584518175486,-.06105788760631323,-.024592482102494873,-.007532843708099354,.019986689878947826,.0409091362015699,.04043701509160076,.04003479926373195,.018812605341074366,-.030276192569776476,-.030270565458533134,-.016190643318727164,.006809905422805987,.03791648200060191,-.03831931521841855,.010306777237133882,.015829001844016963,.04080028213047039,.05615449330992818,.04786297945430712,.03428833649096044,.06068149198297738,.003270294373098462,.0013152591778692133,.06095459598839015,-.04079173305503802,.01618341575570305,.019528209635753736,.028893550793992792,-.0012918699135948258,.0346180233945956,.04340594035748458,.029089370346889853,.008826828565163286,.018259597579594153,.07537311546675556],[.027450771793035074,.04126282466496694,-.013144559153806662,.012207909150661903,.009247733333020751,-.012848538408191307,.004563559148272107,.010876267701812489,.02890459475433247,.02639180251198528,.010732731929258464,.015032366451770748,-.029908421422182082,.021411606012816192,-.05753677375191925,-.053416159980357834,-.04886557638257496,-.03557046979039176,-.018461415692559838,-.0029790588112649907,.032112270223907544,.05147761207519731,-.005766248282522986,-.01776658852787523,-.028238377182112806,.023528561546172357,-.04216007246124067,-.04103238959388249,-.06680999261373205,-.039632149520821544,-.022226688774540718,-.004114916018868875,.0323023232427716,-.013890604091560638,-.03427627511840174,-.005150274137865634,-.021066308656931813,.022151630661472133,-.0022992341581987014,-.06276963889688388,-.019723620835675727,-.0576912753104453,-.04237889488319811,.028983236593136813,-.019395597488888486,-.02933154219988647,-.010745732705029043,-.013921448513401852,-.029609437928951193,-.12537702206143342,-.09561718838487063,-.0351292415736329,-.03998248182255221,.00909526418711778,-.02208695574404841,.029136077983963546,-.032593887678401656,-.020183882523267208,.06160204188874492,.15458403910635235,.16957224934392182,-.04042793884543613,-.14425377583803428,-.07164309486545244,-.04225318733320568,-.027875249558229672,.058879183410993005,-.00047065192114704134,-.043920137358857254,.05496654067473021,-.06929662538702983,.11118740085537496,.2366565621922726,.12148462555955851,-.011433917074149466,-.048194932808641386,-.07932763811502898,.0017254253058667443,.03770882496384771,.04218216484319646,.03582981578648879,-.07335789881658973,-.14576211923026078,.04829033207796394,.14879922368454307,.10064792412919202,.063705043016025,-.03069261405644226,.05625560599073562,.10255361685355899,.07860427344813493,.0164658420906807,-.005646379854723214,-.13298053803801668,-.028765330682998365,.05939355800317566,.1402292273171811,.011410410356375363,.016039694083752262,.032382125330787596,.10195998512893362,.061382477156473686,.08241173829298107,-.06366641677064028,-.018779258750025916,-.03836593373368899,.07799341786515777,.037853307835213006,.040996995997873285,.011082725441736859,-.005664492210165403,-.014754708114634627,.018864758145484002,.007526786811695066,.014018215345551104,-.010120746615713067,.019767300172685923,.0399406347657522,.09926052195500677,.052915278088062984,.022179211937403773],[-.09716085296718216,.021642032331918873,.029135209902749426,.0139993150458783,.059316507135864754,.03306747497101331,.008564629143824831,.010286012651575784,-.008381755344500467,.018753974201751927,-.03037545805880196,-.041904429008824615,-.0558622557378194,-.010903003336047129,.06826456724824308,.026035515966818988,-.0012923504068929892,-.0017623356640995083,.005468527639103056,-.02175560359369707,-.04950565304410716,-.06611244762583776,-.02225249148492922,-.008198283451731694,-.03736728147972175,.012774986112044792,-.06295062845893304,-.04504525630414451,.04800146300475822,.030007357346820335,-.0018969086500039145,-.015723154153853357,-.05512006118971773,-.012097061948313372,.0026362460701923537,-.0726328280791894,-.06887260163152192,.017772853215430318,.07233870406821721,.018535361160719493,-.045281275098323914,-.011332122576621917,-.02728019910996744,-.05872320891421001,.02632785363513969,-.010818050423826983,-.030610533234455353,-.028512931740957648,.001248886833917797,-.11197453226805695,-.05526985876053357,.01115586891047237,.008222889298059633,-.03230625526930565,-.01502375948544021,.04938277301919282,.015328141296235664,.03766238389185002,-.03501302001666237,-.029449621040367344,.12073107144262626,.022860361772779912,-.023256473556698243,-.083648467631806,.007400232745203489,.010004461021878228,.09937152299723848,-.02522178479106592,-.096640580498929,.05309425060391121,.15893756445998802,.03338710955086838,-.04808482373966641,-.010053840415886486,.037823846526014906,.03970038890881539,.054256090345082275,-.02401468040990247,-.02904286935058728,.04613851723089085,.16216994825276426,.016089864404032872,-.09119867568644617,-.07636051381777006,.03198808484249929,.036454996777462445,.025464944340111234,.07414740914689233,-.046979415183956125,-.04962938048465308,.07977165176758987,.08775810033301915,.049828916696142006,-.03045459513307306,-.024452096514010858,.0670092926908578,.1175218881400763,.11426518181326391,.07406654115835015,.006233837337725742,-.04336603991211384,-.03995007785611442,-.03540950220623382,-.03586378149854876,.01781322399419219,-.024727256297427454,-.022275869771454817,.07676148074438333,.06204546476925031,.06983755172113384,.0730129233663477,.060190713224507614,-.025405925372675192,.023372682335303596,.030477986314785502,-.0002301213960560905,-.026087148164954402,-.019019953457663552,-.036714807308876246,.05881772896990409,.06838115825489645],[-.011512245145694655,-.033323501539032144,-.077599795617108,.03009201405129128,.03689004514712253,.015052871160868519,.02801689936540768,-.01018960630350095,-.07831770420819847,-.05923312270246665,-.01852728410941332,.05396149673771894,-.026974467838019357,-.01804059271627316,.044307115164341854,.015818943834284213,-.03195364072680727,-.02740130304193715,-.04679050712758277,-.020608188350333664,-.026272324411271628,-.08018665485007556,.08384569877970464,.001406750687297384,-.04985438587843697,-.021416757758446515,.06653706541963607,-.007324471755678448,-.018144551509999312,-.015182424540353442,-.04513066121842325,.029947581486485145,.006448139255753105,.04227492146238811,-.07435899494593805,-.014176533090006271,.0776551603970828,-.010551243188291676,-.12637948483078057,-.03358696420876588,.06281707109344425,.005390931035675776,.025794636422243125,.059721803691538844,-.08299531882510713,.004261708705396279,.10584522112949336,.07136431299074256,-.02642202114572798,-.16100970751240665,-.05472031174610798,.04899944688114179,.07543484083260799,.010535530941215229,-.04801657904860415,-.08033971220391747,.03957669524732978,.03663724520181359,.12098760898076155,.1354854848272127,.051194513568370764,.018225873276029245,.08566132389176084,.1862182987423905,.10338152957413216,.023906079145933318,-.004182293635023815,-.10643206407862182,-.07812495961417412,-.07346890364951922,-.04841986347757688,.015108685112589434,-.03264596890745973,.03623561570072251,.008090462198500112,.11267954130800725,.1027865548572389,.04428157837866404,.010681413475295332,.048922714210986845,.05487352908643979,-.01806460573055431,-.01818927045565731,-.0711252113253118,-.10260837121452346,-.05249003437807549,.024031776304340315,.019694437269126286,.04963674997707483,.032195647589762615,.00832803851633843,.07013895478533659,.06754991223551783,.05743363083039805,.020438461876702188,.0032421342973983297,-.050695230761191784,-.015383897879732399,.020203015057404895,-.015662916885770546,.03170906986223389,.012505528157918055,.02862303507568463,.05946324529661641,.011987063839091858,.029655839160397587,-.0016058379565756595,.03292492753503749,.03188121066730852,.050423216186573444,.015557492045852508,.0213857791925983,.009993275366193259,.01435070815322266,.039479442983270135,.0668515978337389,.040296519398888356,.009952641912258808,-.002355765182344302,.01814873401521766,.05911916384839279],[-.015757148978644712,-.04912944067839002,-.023997668342014205,-.0210026283214945,-.0015357942036982875,.0021065236794876874,-.03710704168977974,-.04235159886869101,-.0611627445913864,-.034051484714528485,-.022720119467757083,-.060739564477761535,-.02675700118495956,.000559340708430802,-.022616038258239973,.0070861976821720955,.013566118550461286,-.002811474898052356,-.03858034309904801,-.014823359019323232,-.03483587955987605,-.026656015152450085,-.019477669860262788,-.012106727392046226,.004248376564546172,.016084907645647312,.0006655237990040933,.0016008277659419479,.020524088921093323,.061832709878829155,.0036079221207767423,-.06986160980656743,-.02783330995788613,-.03256885018622636,.04512434936412876,-.020541851129595723,.006225988447318809,-.01720385416905687,-.06713753737721917,-.02151038888391177,.10815002779082451,.037209771283315,-.006027660384665387,-.016395255789040913,.027666465419402944,.07306900117532941,.05057553109701548,.04256763634461724,-.040728282661866906,-.1802492901591394,-.05180382591629118,.06869895308544485,.10468627376672648,.04693052462252774,-.02434541015974845,.0815189305327734,.13437717506819735,.12767282811582661,.05882841794662001,-.06539741332970703,-.010971808997436964,.015964690557018213,.06431634680478986,.09204764475693863,.07992422057278342,.004562532752512838,-.01828690250044819,.017429694084018413,.07614528286643685,.042835485463588514,.08020698114647468,.03611723597888207,.04737929871444622,-.01987491586658268,.03765754444578156,.026115602677467167,.07158768649462971,-.05763808145514107,-.08380678196623717,-.02045709657509112,-.006681593015641724,-.010481709236786138,.009818881432659549,-.018910890692478463,.027174343530639883,.004818683863866094,.008483116250144855,.046647277306884644,.07489629343021029,-.0027052061320910203,-.052390985898152595,-.03581071091088947,-.010963380484187036,.0364724763095067,.015668137547351885,.03188037418272442,.02832097368194242,.029976561112701736,-.0029437318832178684,.03461995990923712,.08572476724245606,.014661848811874373,.057456266218902825,-.007794973525223414,.05696691881728978,.03917385353058908,-4395098862272975e-20,.03952471230120083,.03381510688328952,-.05314846365079247,.04613527931771671,.034368318225618644,.025850606000479254,.04364205260106227,.02891531608990676,-.004655341235198063,.04069494423398308,.050441914764901605,.02337919079391607,-.004367399642211892,-.06782903161035743]]},numPatches:71,patchSize:[11,11],canvasSize:[114,102]},shapeModel:{eigenVectors:[[-.2591845554413411,.049312213852896816,-.1380381434950333,.050835603939836334,-.0006852696569454455,.019143738616150843,-.023318915050125934,.016196086952924963,.0036093752391785842,-.23833211080603292,.02065754600233593,-.015932434823103976,.0642616084437048,-.09063482352077239,.02205588429386845,-.09372567433830495,.055117695896949336,-.0532332880561529,.0062574485928111176,-.09449546462666499],[-.015370973540248745,.27558869894124727,.043057403787850584,.01759173852583432,.09586680846854115,-.03745882421324794,-.028917777439805503,-.1301742315782318,.06386866526612256,.0933542410928189,.03186126408133006,.020242117972800993,.2729400100293749,-.13041313331165144,-.003144428538369143,.06521142793320575,.23796562485879558,-.14726562188674774,.03605687253614563,-.12952002576446747],[-.27438982091500386,.03985289630911687,-.1345039492236043,.029787453137347236,.0795258464795785,.1166451560574001,-.035665518184535575,-.0024171773341205138,.07100005973033774,-.1940019341998218,.04770715066305605,-.060782105477894637,.07525616484982463,-.08653693334002896,-.010494049605053951,.003862329513942636,.019088595829792714,-.010833090632415426,.017289975723166304,-.04870906293432196],[-60611116520893973e-21,.2907441742190161,.06116467954949145,.040564059065553715,.09617398819178395,.006241007870185618,-.09842193989700618,-.12644765063670182,.052339831131799096,.14548890663706882,.019044522282416165,.11593290854472814,.11303783009344959,-.22653789366303903,-.02602851673477499,.14284328457404633,.10352737588140595,-.03149550723619995,-.047636212684012275,-.03140572862553874],[-.2806107959809928,.028500046273409352,-.13348176497662428,.04822415807050451,.11475625312727089,.1635783651687025,-.04863973595270957,-.01032325713887703,.044309390236214455,-.11229584269820136,.05689675119164086,-.046270327611954834,-.03739712734754712,-.13317587328341224,-.01086370490362746,.039312364878040615,-.010946095593356263,-.012651374705748869,.011105713279978752,.030546324103711175],[.014069445433529176,.25865071929613015,.06560840664757352,.04593625094962561,.07703247533996717,.012716551912464673,-.12470762874060115,-.11891551534656636,-.013669877748084366,.12043230602261967,.011009487547690655,.19012847506135658,-.03216941527475478,-.1726524149295287,-.03662652696603412,.118289070378352,-.07725348751316105,.04910794244586148,-.08836536086848835,.03469223204236508],[-.2648974171296885,.016037983258916477,-.1547838541397034,.054519082640759275,.11072137606892116,.13806773721053445,-.08315118429370705,.0008468885185207442,-.06665906894307433,-.014543116847374027,.05271355500831948,.027388442494223043,-.1457381333320958,-.06910965137265498,.005871228217576737,.03865302771592381,.035448688300325056,-.027970894206668644,-.005831637288361268,-.012350421356815827],[.046354114624841534,.20340754175093087,.06744856466562195,.04198128485694127,.013920156097499622,.04931024769723147,-.10476409205774084,-.1614855579210141,-.05737728700889003,.06871820875111567,-.05587479923890136,.29988249724968485,-.16587089947669525,-.01890180931989649,-.0218240565472988,.010150208790268851,-.15609860291657204,.1312205105925747,-.13142200190156078,.1313708927136643],[-.2018721706545248,-.003452715117513167,-.14526611889720323,.05454907575651019,.07767045477100726,.09969321388067359,-.11162648299874728,.02756432531919567,-.17000009910036665,.05281736505253121,.004648604492928164,.13801187294048864,-.2266237146523632,.025099449481841285,.057390225910466,-.010585092198184431,.06281338928985669,-.06638416983774384,.029034161785278373,-.11014692197967367],[.05991940055025699,.17456494999571184,.0455466425574094,.021382186705339836,-.05605436442407796,.05575339412174844,-.05094992590649294,-.14366157895544512,-.05830434414633863,-.03988169528726704,-.029733515204825374,.24120260128368676,-.1538961465172124,.09933711971671672,-.007910583000186974,-.09141327276839616,-.1710858906254888,.07953591180417977,-.07008005745394699,.10304814751540183],[-.11406660762823516,-.007700502018058287,-.09712804940172434,.04879780779691371,.03468205936351593,.034999010561767185,-.08692061344032853,.09583558456306279,-.20896282413005124,.08203998264474256,-.038156988159574405,.17097326940727753,-.22949142171270803,.12076557157673402,.08344543200638248,-.06884953856607631,.10657376324661845,-.11111649307286314,.143566895232786,-.14730065680491033],[.050548778821860645,.1377137825762977,-.008012026254443966,.0015714671798822764,-.11898190894868095,.07003318776603173,-.016790814058872006,-.11155749843931904,-.08231033246619895,-.1768119548273747,.03178525357769118,.13574659239584744,-.03087498661335991,.1405687146519477,.011927426509590985,-.1227614705931421,-.08972329443848072,.02613549400185408,-.012284577171365347,.04545567550038124],[-.010279976005766552,.0013953711369666829,-.04250049853613807,.04068397839702463,3780746938382949e-20,-.03504913888478561,-.013909369315673659,.16422475055913677,-.15344312139650018,.06372047045939165,-.032068761930210264,.09303034298428431,-.10431016285986311,.21547866370530241,.062045477425420305,-.09750049571632877,.08237548830734294,-.15217807555911966,.21187698224877943,-.07883323911955283],[.02050693737191619,.08079193189657263,-.07617795791826976,-.0487513872019776,-.160942472966131,.08489963313109976,-.0195956503066802,-.042553966112102715,-.09219934929892415,-.29635110512711466,.06827685956288042,.016316501361074986,.0977532232933912,.07815399608960916,.04334270563979979,-.07537621503411908,.033022672135110356,.05987767208551564,.024112321053861727,-.08830590964285029],[.040972435984073616,.0012967065227411402,-.002000207225983406,-.0014908104373190269,-.003000288186105616,.002144333613859202,-.0005611926446301273,.1961247620118789,-.0017679409974512422,-.005915857570870001,.001246332868643063,.02461029106196677,.0022006976231375153,.22487906560306556,-.0005842334400691235,-.0820132963899819,.0004263328503258945,.0033161283064082614,.276171494406021,-.0016608591645301402],[-.0008069540390004654,.06583922060661353,-.10155889748442845,-.07569468923297805,-.15233719604557774,.10887679778045861,-.02849410077344191,-.003862686341496162,-.08976576835949646,-.30037286375515754,.06328153922936658,-.0004847008310970291,.11173863457663408,-.004429003692768496,-.029663978449883416,.0016152557001812284,.021646704240415274,.16837372165287265,-.005439210471995241,-.08432877525660162],[-.011079460967186745,.0017868787382064075,.03946804648529861,-.0425720055211161,-.006374859062350055,.03836486644323731,.013127007549216608,.16577295084318888,.14969379516837616,-.07533982737812024,.034732282019908356,.09231573967917608,.10807828706143774,.2122342628567681,-.06029075060996183,-.09445696025894129,-.08101134525593379,.15441773571152892,.21076325569431362,.07529507551421433],[-.020086262263831433,.0807842211360935,-.07779233223816014,-.047111656712928544,-.16081617519949215,.08345374086973463,-.02012813301089506,.03605464598109967,-.09816964501888759,-.2936123060708852,.06696120988449639,-.019966901109740753,.0935702228594445,-.08657782214077062,.045752123360719515,.07915682608872446,.03624058344784287,.053839253272886564,-.03243624026591001,-.09134147399314849],[-.1159684993081326,.013116985772102279,.09673725558367309,-.048698089400280024,-.03934005506544998,-.03221432505074945,.08619207218565329,.10015382155604435,.2055598212459948,-.08893830045220219,.039378936478120186,.16549568388279476,.2280977566161379,.11513705136942343,-.0829110807260123,-.06396243569757554,-.11002395504744661,.11205940383716784,.14393926371201282,.1489762358211439],[-.04601822665438995,.13730378118266226,-.011830212484348238,.0034916534255774985,-.11752403995019083,.07135695754794782,-.020200276481912433,.10769747793844867,-.09047437531377012,-.17344452956176182,.030258179923130624,-.1423733641348132,-.0398872268374772,-.14521482782108094,.015203825792165448,.1253772086249566,-.08545739226747952,.021740034295991806,.006622129952260684,.03962048827206788],[-.20407493663765272,.010323501069181677,.1469468574865392,-.05366485379883157,-.07981735270651433,-.09742062303704237,.10953377373376612,.03319959831053977,.16757254284815049,-.05434674034664072,-.0058157513624373935,.128407537240043,.22038833739666908,.021168603923265028,-.057657198208392824,-.006977502410593028,-.069501154359835,.06946440186485206,.031771035766238805,.11411900652766307],[-.05192425332549106,.17429362677494192,.039791494349163584,.02351346509856846,-.05295263470542763,.05963556033967733,-.05530568748498594,.1424648306435418,-.06495285308493987,-.03777109322979096,-.029527419227873608,-.24644974400170183,-.16270006974558388,-.10024837118797744,-.005644718612591179,.0917591688889085,-.16847994951283224,.07686036784407779,.06888249625022742,.0986312195863526],[-.2665171770402686,-.008016410626358992,.15731959607269572,-.05282379815939602,-.11008740922724003,-.13601908508035354,.07896163419871612,.0072046965504718235,.06434815522256071,.017237605925488533,-.05487273639618129,.01555938369373866,.13909397820541136,-.06831180226316537,-.006725993444572587,.038223390076618916,-.04156755263603326,.03311598708026617,-.0006523972421311561,.01751354900297178],[-.035887879390111725,.20388129416118472,.061301672646978604,.04409540790428211,.018268995429649083,.05470840045462263,-.10795691158419232,.1613269815772915,-.05995748040329166,.06809228593281387,-.05375588220837085,-.30072835669094283,-.17148068120730858,.021608331263092584,-.02157595367871669,-.01166429342672437,-.15458176445677432,.13001740161453895,.13154970526426593,.13078272042359626],[-.28094716730045705,-.01829361927397395,.1359615705528747,-.04637802915516612,-.11163412106971979,-.16295080001590082,.04369167593532855,-.00563297454884824,-.04481327777159515,.11695075889501486,-.05641913180049715,-.053720719978482184,.03610146135197298,-.1262744390995421,.009413117312335656,.03462426771409549,.007895764848073583,.01457518010193265,.01457647110568485,-.029156635373888184],[-.0030095351372760536,.2595723227230727,.060301707578672446,.04779944544237448,.08149124432602636,.019147559060772333,-.12652610020709312,.11922977407437645,-.01191460264207475,.11591728350468562,.013241249151963251,-.18815914671221162,-.0336169734095573,.17776230094115775,-.03702587992595263,-.11974525580807727,-.07762457883395601,.048571714178187536,.08785954904835536,.03586808461577584],[-.27417464809767067,-.028373991287752278,.13680799115243833,-.028167150771118237,-.07567734158786427,-.11630896046960598,.031762513797500155,.002563550650308348,-.06888412853826759,.19958008736846725,-.04692027965847642,-.06529980704102951,-.07074696030859257,-.0775499361085525,.009461043423144466,-.0017650943059576707,-.014997421039160977,.009584559760711708,.0191522348411202,.04743469468245465],[.01086461393670894,.2920879059545705,.0558211782209257,.04170547769442867,.09923072222452378,.010829050067781088,-.09974993813394097,.1264447678074071,.05509485674852172,.13773729035274807,.020908213939106027,-.1134497193930856,.11591336845781973,.22976959221519996,-.0264215332233258,-.14288458971935103,.1041987015745261,-.03189763381364004,.04691848164609219,-.03329928441908797],[-.2583783313734788,-.038422717347508406,.13962647397057326,-.05010350995339688,.0044594765706108905,-.020603827321858052,.022162199206826893,.021309114011150883,-.0010917590066741203,.24182309333952515,-.019386994764398407,-.01671710914915537,-.053464810497762846,-.08542954356253261,-.022162591507878082,-.09622067935685474,-.04570509907647757,.04739344886908892,.004832863142911516,.08932235673299377],[.025564398752122953,.27731664250606547,.0375887861875092,.0195797390850621,.09576548245146986,-.03667599404697282,-.02981353010782328,.12943556489477467,.06396125432450847,.08389756193703392,.03264994318071513,-.019599083680428387,.27525863734504724,.13388072923873884,-.0022735435936592774,-.06147042563186855,.23995133451146855,-.14924747016700915,-.03627529674339473,-.1331403263354179],[-.04110387538479548,-.03823985303111824,.08930834019775255,-.10751656645645798,.15823655809172607,.20815985286534655,.05677978710202738,-.03196536669221628,-.03629240144405742,-.010283920456477778,-.22616361790176906,.00356591764281887,.06119497954960433,-.07735678623373382,.10905509076128381,-.32122938814240787,-.06243655700403994,.04506086146693765,-.1389316014955568,-.07594686554070562],[-.0005862579062122432,.0280133718622656,.033925327852879,-.09697569952819898,-.1288527556149341,.13432677012128716,.054634853688639136,.1867067138700646,.12024253293549887,-.01677588953703033,-.37344128248102015,.16617216199662074,-.043638146038945086,-.02151896456652925,.0883302332825708,-.09997530579514903,.11085010836922368,-.01770838623224031,-.08291421392498047,-.0077088662798200785],[.027140406330796455,-.023191258515235326,.06843440692624597,-.07189320228161644,.14539857122015903,.1679215566043097,.07078122676014917,-.06665710841177144,-.07604474746726572,-.03487985529879168,-.2780038319445266,.06132046890790126,.07229982438214151,-.02370458044434341,-.044018515168893275,-.2711069551465443,-.04647618460068128,.00043869932085892696,-.12313065014641822,-.1556060803010852],[.007681218407290472,-.027031165111407914,.051859835503389934,-.093607017053067,-.23700136702110858,.11818205744677798,-.01289944697631098,.13978186955176936,.10628086971480243,.053511612608857194,-.10840632593425696,.14453111355415263,-.04694817077103533,-.028787155822265875,-.027495091326601873,.05401424055787989,.0703132234635645,-.07864958771127076,-.033769719376427046,.11645995186870835],[.05971892242857173,-.019365231759092095,.03976831352431595,-.029429966402313525,.09950279790345946,.09519241014805017,.03738531844838363,-.08758953030753781,-.06322399644004968,-.023055656510996437,-.11333588796545234,.07063246094544605,.040519800690016324,-.01614026997873488,-.20118930063482943,-.1346512323257925,-.11306409222256511,-.21054801092291062,-.043694131861398755,-.0530424500993744],[.004164473067985945,-.0704515887419123,.057002625903046895,-.1233112214107138,-.23820814567299148,.13581472991575952,-.032580608751462854,.09217414575442061,.02756357317797802,.12746487446937432,.1237897143138345,.10985577224508092,-.021825682517284846,-.040456493338142635,-.004116490992907531,.06328487073433504,-.004700400768997845,-.05242415746217437,-.01812954022851821,-.030724004702528607],[.07266891410782407,-.016043138606478186,.02627369137494613,-.0035342106566366082,.05945256813646579,.0498347703598968,.023930069153883064,-.10364100685763084,-.06265130858734294,-.008958036330543036,.013307479894258971,.0684901193805491,.042476545594050646,-.012886684482589124,-.3234481531300135,-.10205399447154732,-.1737661381350235,-.23316498095342394,-.011128358009024286,.00819017187523806],[.0009469143346479971,-.08626234990922368,.056561901106857035,-.14777082451223753,-.20316466873179542,.15155458483522277,-.024606362028327146,.05972759983880226,-.08160716262828517,.20453126101362462,.2079033865920522,.06122580649716069,.028168686557436425,-.03613120581327799,.026537321190343487,.039990646455644124,-.049028578602568124,-.014036011010792616,-.009633601304498928,-.23758677297853417],[-.04104891598535558,.03931321992504864,-.08790327889006877,.10361478783196758,-.16318740146031324,-.20270933480404055,-.05458451747360385,-.03929212116624857,.040998785186190115,.009615397758340015,.2112840472234912,-.0029798466635747047,-.0628657676689036,-.0764494915456443,-.10549253270595368,-.3170437686359172,.06675284121607318,-.04572318178956168,-.13555912932484482,.07558443436547096],[.0022042609665398095,.026485960470782614,.03741551896175807,-.10113394140497949,-.12252229572983343,.1424188579488092,.056828178864929316,-.18530329432091186,.11872027940742812,-.01716780753802371,-.3820568346625392,-.16618370469188057,-.041194763832226325,.02454818638595151,.09255575874027207,.11254612540783006,.10830571714165835,-.0159203902631647,.08832032167971221,-.010693282303844876],[.026816912653847808,.02210892668910876,-.06633936511099102,.06815169044757166,-.15461770241861422,-.1631379380522599,-.07123425010664376,-.0721093025233907,.08017056572858168,.03695981647484426,.2735197634770195,.05558202897521554,-.07409233244552853,-.022552708724484234,.04290176502478386,-.2730235157094141,.04920871335590259,-.003535172477924952,-.12170548706792338,.16007099915856451],[-.008743910323026665,-.02792335437328954,.054514211233918704,-.09636520775164145,-.2310925325092239,.12470228964547857,-.010102445531173577,-.13704885861179802,.10320420183042014,.05209672692032565,-.11926860888719121,-.14683351370610692,-.04406497040979608,.02969819529140139,-.029206990301820522,-.043297565538334595,.06842870493243645,-.07857132212072139,.0385917785260248,.1102426770552493],[.05950863568831532,.016576195607157063,-.03749300550027012,.024551786635688105,-.10880503745780135,-.08977090893759061,-.03863918215507303,-.09115094600018898,.06426027766536814,.028056683600416122,.11812219496600887,.06625213499052661,-.041347760355288345,-.014534786232971919,.20087119446952054,-.13703864218459735,.11279133483747861,.2083205415069774,-.042946400162149574,.05179156411057226],[-.0065126653897697685,-.07115945683137402,.05852429118723027,-.12437439455627133,-.2341055131332627,.13945759111788839,-.03108330266380876,-.08865384373123969,.025052764449437367,.12645821454533052,.11923113656771624,-.11255172075082241,-.02021329708151522,.04106064000192088,-.012035091209235963,-.0579339259753534,-.009148633946227747,-.060673793152006064,.019835929550468742,-.03278871550528076],[.07257527558866445,.012634132825075264,-.024026201740383172,-.0022869797091045053,-.06740603560152451,-.043828689541326564,-.02488038272750183,-.10591239790125617,.05938945584810743,.017004471070657366,-.0051110016551837905,.06602625093838567,-.041334468539254966,-.011454031274300084,.32424222491809335,-.10354947723779562,.1717008929604272,.23243149868662358,-.010740406772857966,-.017538756921170025],[-.003807505429658399,-.08682715010851384,.05755255984939506,-.14779538878396092,-.20066618261034272,.15339929104950367,-.023645037900407128,-.055600435751653444,-.08401076117981325,.20401992821861858,.20826613944580305,-.06387511268885067,.02981934839248011,.0366105973461551,.013781028965228453,-.03594127648426002,-.05583256790387202,-.023205955407946944,.010064307647553217,-.23708004052505163],[-.023504007886404565,.039047800473709704,-.08556729731711149,.07915031598912797,-.12465270020306114,-.1389151891919057,-.024300699494946516,-.06699532030239128,-.03681107859964656,-.005887860882593862,-.09078255097052781,-.004298906321624598,.04349610770088466,.06250842952219637,-.07822608214587827,.043008728528105084,-.006916040217430171,-.04267950600678464,-.01902871870181764,-.01597526586607446],[-.0073612866881341546,.02110703259112662,.039763310309730765,-.05562568598269971,.04965631282092798,-.08481039531092031,.1123167000123128,-.12600108757905654,-.023631913679965026,-.05717543121609625,-.00595886678709967,-.12646241348822843,-.03442652732340355,.01345313854285689,.017896987050537858,-.07687119815164929,.010909247964376714,-.022517785800986824,.008130263599254376,-.03404578703887726],[.016948514923620442,.021935136437694343,-.06315236305356262,.05279979640116149,-.10435342424836219,-.1082485313071252,-.03304146282304308,-.0863350316476705,-.015563261507495117,.00877242575393589,-.09102995314271824,.005261084458105846,.0074128482411641786,.1267716692240693,-.010973650363562628,.12218436711438165,-.03229264836024126,-.04130782815539663,.009700151353233183,-.04611992182540103],[-.0066832172944956275,-.008082220232451911,.04693230453984169,-.08099933041329158,.021246022388930506,-.07722300789417297,.12080245539572101,-.09757247134908298,-.0986620785459746,-.08107191872238584,-.0007506507672597967,-.10367608652818733,-.10332194965606988,.01881373031826901,-.010497200676673469,-.0615956410769408,.18741244184973033,-.10373942661668036,.0019642020598187176,.1929668937522638],[.0011332836074733994,.011108535310006265,-.04417704056170655,.026937857839190494,-.058202747644603293,-.06766037897186383,-.012523327218299423,-.08695531255754352,.014537206052818313,-.002428912250733164,-.06724654763980466,.010135633490720202,-.021703799990267496,.05966835832133827,.09005908187706445,.05850443264466999,-.09551491170873887,-.06041298882454962,-.0172286278141911,-.06543809100332793],[.0015010210285302538,-.012001351176920536,.02645609812127385,-.05050627629914428,.05904361335048816,-.09276344680849632,.05921568788391435,-.05144620669628511,-.03372817088174118,-.013303363349763783,.052355162524899544,-.07296649765221143,-.013674015384355585,.030572995901166015,-.0001269454190740495,-.0365594172350387,-.0772389719081649,.0006016884726456311,.00569803064457438,-.09580803262279526],[.004541065833598427,.02973963292325729,-.06128540584732444,.05192852768196191,-.09587869378725651,-.10776669151268693,-.01808323145570885,-.11656925567843948,-.018095403188716108,.002861865287773459,-.11164037294028488,-.001614526611698973,.01850727180389266,.08596299115720699,-.004937104428393584,.10296554953916567,-.03490894630626518,-.03202172274005119,.026463113300103775,-.05860910110803276],[-.0038940101674299825,-.01249229063887494,.035153288200359234,-.021732063618845353,.07523650302188681,-.11222268661870895,.12233273651719181,-.08959785160117337,-.025863497436002778,-.0013532772920338122,.037452430817597984,-.09517239684761405,-.025294237043152302,.009233677032844613,.04519783139010683,-.06078237797232799,-.10825269327067781,.10079245210813498,-.015704918925442776,-.15393418284118904],[-.0022816888324771046,.024060777904828315,-.06437509391597249,.05168367570323213,-.08258676188205745,-.10799981168598935,-.011766005324577833,-.13475702007336837,-.022040198973616986,.0027265637526194208,-.07830784363037428,-.008537318971837205,.018274693017329823,.1496888435046815,.011604584974514212,.20993316574217608,-.03992336862474607,-.05663441481797246,.06177445054734887,-.10280319608126551],[-.004558178911174987,.0006619892986475814,.030116361303995302,-.05201523701893357,.05714916632688308,-.10832378488024437,.12176894478021999,-.09473318141269167,-.053777107185287984,-.06617351532159418,.026677718163727458,-.09680249186577501,-.07370816370860515,.014542543817592096,.007936215535738433,-.06235072493057252,.011445746451840468,-.022933871968984575,-.004556342956946811,-.01434575696371238],[-.02319593145002525,-.03818643372697267,.08706661401447253,-.08127918717216778,.12651124179728243,.13546806794789037,.028704304423922203,-.06198209602373821,.03585202966740405,.0036320225960271586,.09047752080076467,.0006838622073967488,-.04481791526982817,.06193024001848069,.07887010933065962,.046002165330353145,.007340226580411966,.041759774758871396,-.019334089807546112,.014622330486137676],[.008281044172977288,.022628164438439305,.036363277368764844,-.05246601943026025,.04470962726073276,-.09021438636649567,.11127276398624336,.12854130381332388,-.025063016988668828,-.05736292576552767,-.009528792360519959,.12653361195078147,-.03268717851914259,-.01590396394734712,.014802970227303884,.07511812444272851,.01062847012441487,-.02418082137667495,-.007374706295166969,-.0346484081271072],[.01719852201646743,-.02223636194975358,.0649513401418443,-.055948184803736825,.10510905763267535,.10512394373069495,.037772414478168884,-.08242618128564455,.011666390781662213,-.011957815046176183,.09092980368390106,.009339231796449446,-.011475382834923829,.12593257195353735,.010551815031581053,.12451493177521925,.03964693694317235,.037191073136772765,.009615288890691884,.05368219305515061],[.0060106898082263206,-.007212260510108026,.04440929612646293,-.07885753384789933,.017120649032104626,-.08142538874871207,.1194077727771983,.10089623131434625,-.09919836781869076,-.08066363566229295,-.004334356670503807,.10338853261811595,-.10294994506346208,-.023790752142641616,-.01092114572228225,.056736886871190204,.18599558835956506,-.10528546614138498,-.0023446205569288697,.19100128644165734],[.0010733023256969602,-.011572471806977585,.04518448585917072,-.028905643369866743,.06048244370983533,.06395536507197438,.014845222571675733,-.08486219454505665,-.015853973269866685,.0019032111181756528,.06925587379065513,.01300081613435409,.021148557038696662,.0584182799585111,-.08999424051007292,.0598985835804013,.09239957033302403,.060389830596510485,-.01743962613553323,.06161492044455368],[-.0015444798414713803,-.011554647683167756,.02469611868767107,-.049406435936464876,.0567061029674046,-.09535562503030179,.05867666301843686,.05483016051785782,-.03312961518654291,-.01338868472170722,.04966674096389657,.07251082419700026,-.014517994556078169,-.03289871775350839,.0034192131689151717,.03422746430429739,-.08093995640245304,-.0017775286940450647,-.005015237764973486,-.09831034761316837],[.004690870236999981,-.03020845186345834,.06262203409143967,-.0527439537785944,.09876676469073399,.1032643715459184,.022886037597295072,-.11295095822829264,.017062999846528776,-.002912930992813686,.11302847979225228,.002134121435861098,-.019488875651689986,.08553275343853278,.006712932236476622,.10527899609166104,.0306194444872434,.03596557491356393,.02706096980565252,.05250251964991211],[.0037121867556401604,-.011311610311061641,.032712925387670636,-.019670534211132382,.07140295163253411,-.11637895325503743,.1215258448510465,.09411826292639433,-.02655594382471982,-.001239542409763111,.03302756727713768,.09516216340329794,-.0245459011456323,-.012611293726825415,.044968383374253365,.056680991926792997,-.10954327798574305,.09945343910769631,.014650759610563356,-.15612253139789622],[-.002100441933665757,-.024016053328674767,.06551099805105405,-.053691686183182055,.08477295490379654,.10365082949147361,.016551511206833912,-.13092241552622572,.019905643125049735,-.005330019590833359,.07929754711756362,-.004719117677499914,-.021162766877999242,.14900015141933212,-.01128309868882678,.21222541347290927,.04034308270171495,.05568747837492255,.06190595032952776,.10215861174289849],[.0046444851811399766,.001608864733666848,.02755824866057015,-.049939864348428335,.053853008893656205,-.11249225413654086,.12121122997047809,.09996575029680173,-.05460323250314746,-.06601484053662354,.02357367263708716,.09706357800429449,-.07293144109531476,-.020425237513236032,.00838698953371714,.05403629200965226,.009864894946713955,-.025146056897784073,.0021204516891783765,-.018382489334929718],[.08181077175329654,-.0013428505322772605,.0005203400406291042,-.0014149728204025428,5578544634514284e-20,-.0005043685757843521,-.00014499662069067683,-.05346142833613536,-.0023340734387916192,-.0005467394008474147,.0024140020816938172,.05080401640915996,.002071714042111598,-.043036085806402495,-.004182462664722356,-.048410973331845825,-.0026616866809265963,-.0028679704469056653,.023711183240833406,-.0007790068244097996],[-.0016112669680105544,-.06818214521618822,.026419842982679964,-.07184409582355208,.0028324607335237987,-.02560890482597699,-.007362085660453377,.0010529253262691722,-.11851068329922475,-.027760249058210736,.12256899523055227,-.0010005874743450364,.1051895980010414,.0008475977185626658,-.21236114512593493,.0009534563792405425,-.13514497960633715,-.14561887029600337,-.0004669928605940399,-.03955343885989039],[.09316674009473834,.014400575595609578,-.024258690378879774,.03674215703335686,-.0007812916713546485,-.01945420549874132,.003986132796036656,.02099317038141547,-.038746820011047595,.02279867800007922,-.026621044116277158,.001593749004397538,.05698455191588628,-.12002685484945841,-.02416787812372159,-.005287198025885764,-.06641761215588309,.13427170902105856,.12116397276410598,.01771718602231903],[-.004327659423066662,-.10938077275025072,.025032360614155758,.05333428445451993,.07635819669351279,-.04166704372049248,-.12200349265013913,-.0196189406669323,-.00872748785406117,-.027905694195759025,-.002020927091883407,-.03717996801526832,.0857566735914842,-.004389545295777032,.188794715799575,-.01353642031101466,-.08045855718032499,-.09648059255087701,.008728771566324633,.10538650345322198],[.06892578900488278,.0038994871276476126,-.038483088818842014,.0534216401132072,-.02061438835882135,.02427508186739343,.03383464511033616,.0013678098316815396,-.040894256133445384,-.003697700277818442,-.022243390064701135,-.009291597515036228,.047028873154850125,-.1350926070022187,.039418674703283925,-.023948367571514632,-.17001516730115498,-.07257805759964049,.12021155396372023,.1008844700435037],[-.0035850918142771525,-.09858453421023239,.03648475508102955,.07837007307759122,.06073816983991053,-.024631053138221483,-.11530991223411237,-.02528080519585294,.020332049748692183,-.01789137022269154,-.012565485446069752,-.029378799703956453,.056812766852859596,.016354624703900585,.17160493997741863,-.027596329561657272,-.05795267939650085,-.014688921034534844,.00489452218085799,.09628227526338898],[.08202925731595238,.0074757163649968855,-.024317219559781403,.05945069762462668,-.015388354923859109,.01775549687860556,.031009613692150953,-.014232679001682378,-.045997650792277835,.01461354061864966,-.029813283030588365,-.02534129625607465,.05708447616364003,-.13353605511897215,.02897221257938559,-.022874981819275674,-.15035368981841174,-.01470923648924165,.11573380339300297,.08744815886606251],[.003106512236968241,-.09735470815430354,.048803407878371556,.0896567861291139,.05398145454172345,-.016188763284935497,-.10550879640444591,-.028379974224971974,.022378952453626737,-.01257318522664056,-.023347021041790504,-.037642437913027085,.06780378554688765,.010191767475728072,.14003184385552048,-.021789923937984297,-.03173333244582333,.007446584753698292,.006239298793381226,.027541365826683165],[.1387392468659556,-.0029894476997010875,.0009365583024941022,.0007195652972101401,.0008872730067093413,-.0003708364998388135,-.003966322287606124,-.011515406413235181,-.0016057914844486271,-.0005945420494758379,-.00015462731808319564,-.021428183483374975,.001794169128817196,-.18742897143429366,.00028052668699144856,-.061963185529604094,.001005964147024478,-.0005891179399476511,.18354627085177005,.00110448968069762],[-.002732475942359883,-.15178677915220828,.0475529872083185,.03653534359011024,.04505056634058959,-.0188289221143658,-.2013867930104729,.00022679646676306188,-.08153275852221145,-.03018738972066367,-.007851076499202688,.00042202907381593165,.09109748042949659,.003691422340211303,.014243514709651251,.0012203678309948844,.05107701259822197,-.029911984964391694,-.0036149523710255344,.056079566555545815],[.08184332617556463,-.011303243144873883,.026219987228758103,-.05587437444687076,.01750193148402283,-.01837915732878669,-.0351399559529981,-.013104185338561385,.04684314734968143,-.015097274885653112,.02887087840762651,-.023839480142389503,-.054370445930001204,-.13383379839837503,-.0234360162958044,-.021999268190290303,.14898759794327313,.014991037574042854,.11539838184369412,-.08629590746440502],[-.006333990417209213,-.0969848556702919,.04780807523196346,.09192811880609424,.05333367881584198,-.015477089583819399,-.10420597754290631,.028918375044037707,.020550448601090333,-.011988029328599567,-.024502808340260984,.03861105559959636,.06999889543942363,-.004925905731833702,.141064026369251,.022673724386325558,-.0376288730793543,.006861636469829939,-.010791457969180546,.030963263322166132],[.06901350016436372,-.007778211413319922,.03988982627596954,-.050294404698156964,.02298995663699629,-.0252261000954857,-.03834871376275445,.0023621762657443594,.04166311389117788,.002990363269173,.021731376833849143,-.008127607032353818,-.04475541031321379,-.1356318045872688,-.032631192325707985,-.02284319536717327,.1676014460999619,.07194340049769368,.11992561030559576,-.09701513799193552],[.0008683710760901028,-.09835454139243824,.034941196860361776,.08041276542085868,.05987938023008575,-.0236561250491088,-.11388825761211453,.02520734294557469,.018706078492882017,-.018023091946399897,-.013431570532554657,.029721871750519276,.05862046259958193,-.011022694782208325,.17302396547131663,.02851789157762417,-.06460205435491397,-.017535277896968397,-.009624034838992188,.10017991728015564],[.09326489113124488,-.01869625635332418,.025225522728041436,-.034613636044571884,.0037872760428480532,.017798486629238393,-.00878690716339906,.021749382668845095,.03837312901770772,-.02387977956539563,.02652082615097375,.00305646761995245,-.05356370743617043,-.11976093779742561,.03158289416398268,-.00475010374847042,.0631980648227941,-.1379664887691025,.12072631763615552,-.013553871931194481],[.0006558797448037821,-.10872892910029817,.024057766727453182,.054739640129556955,.07626821853915408,-.04240073723063682,-.1217519270319862,.01877712408969623,-.010246368849578925,-.02698635979539782,-.0030675587070679833,.03708838178181348,.08793392671900903,.009112177063498112,.18769670173732889,.013734105437929836,-.08301134398793272,-.09111884853930899,-.013492812125430992,.10600238839912131],[.15198329888645531,-.002800632923105579,.0007460050145686046,-.0004787757622169714,.00028276186426707736,-.0004654418259249471,-.0027810265190758928,-.014577335068213577,-.002371356163506493,-7439942739850483e-20,.00042809416640002897,.032335351595210775,.0025660999077690037,-.11258044828872558,-.0019629261392466574,-.06829911172421198,-.0008520359877171208,-.001085913705476731,.1351966947174692,.00036773380243969273],[-.0029933181650393112,-.14219986221144598,.03787779876667042,-.024309450501608272,.014357004020670602,-.023632430715189685,-.14120436296966282,.0002871012945316451,-.12040368336844554,-.0037775705046384535,.021736133633636263,-.0006368462588475798,.13029163882764697,.0022172771834743873,-.09966598058221786,.0013451541931117697,-.043261435318081756,-.055136386499757814,-.002662705212455141,.018671385173615006],[.13163779849298077,.023622420796737043,-.010985661443978103,.039968343205424306,-.011570505836073337,-.03320583415069291,.05117041651417764,.01414235746954366,-.040076184864964205,.01404752993995133,-.03861243543318053,-.006134128335857403,.019089531531498876,-.16518066221941613,.030388662930598432,-.0032824916332457638,-.11074112146459136,-.013923765545993713,.17523174961640878,.020527889008503997],[-.013330778995618896,-.1517403810234247,.050439117821200925,.03263380297310166,.024681537713083537,-.04784991773686152,-.19726449414187805,-.024421895341757063,-.12826274594269282,-.009612237481021002,-.0514643519149328,-.034670744528944336,.1276458570324165,.0036731932047602183,.04396417565977096,-.02446006443748544,.038083140431675766,.00690729000286302,-.004846549920457285,.03826469474709903],[.13206061186311066,-.029578852069042365,.012963173373203699,-.0386523980783948,.01253336414314567,.03129600149373954,-.058897988383271586,.015092997962523566,.03499478368645079,-.014415116357288678,.03655609232148283,-.0047642170603121635,-.014048695159933513,-.16519719776774358,-.028634015353771036,-.0023168354616006706,.11215475975367546,.014184941121035225,.1752866913673808,-.019005304387925956],[.008137226496139576,-.1506925794712862,.04996744440171983,.03418224214212849,.024206810868850206,-.049120284400353334,-.19509669177023323,.02384610365202846,-.1297412721720778,-.009051664333769032,-.052944799577375516,.034885387950180376,.12829851595375488,.0028336141673054767,.04512663006332953,.02457034344595326,.033693195647929455,.00635368771314682,-.0020569271343587707,.039043302836162704],[-.003830921402813156,.006327609729933464,-.05208833386129894,.1806022964418894,-.06684987007277793,.12575488626154133,.21250606488531315,.07344308709175659,-.16677568935528342,.07432933874025889,.013077140393708211,-.062464753970647977,.12874919357305462,.012954480511228487,.029466872112778295,.0018815134527224446,.01668552514963455,-.03344718990089583,-.18253121075591539,.06584857593459369],[.0040363724128006685,-.005428503148933954,-.044557203531833865,.1769569995466028,-.004967027546319406,.10595366487499498,.15416871677359834,-.058039359533206616,.23028436557624615,-.006514405507089058,.08659076831413622,-.05809701751850917,-.01697068772578871,.018175711463984123,.1478306655928489,-.07800120844134316,-.09763641259075952,-.23238594617718691,.021669545651174148,.025890710930359166],[.06627486215658047,-.010935323985695466,.014806079420386914,.12123528814039788,-.028555893789257433,.03604759801728767,.10364050007965231,.07557919019359349,-.14632862610243602,.0463998424826518,-.0379912149350948,-.05285698609791453,.077592314922658,-.03672231465505678,-.06038133373732307,.045720314892436706,.04059334751477113,.17850961871979334,-.11243932211560029,.010951767221506759],[.0006491756929023404,-.07592596319415928,.017475169600548825,.1937606889108291,-.004082831881669958,.031841460036281605,.044576969573996775,-.030139223137968452,.1415115457118256,-.021340478372072518,.010565323177546944,-.04908329716021122,-.09052129911057358,.019607952775615563,-.10735829803366952,-.03545000510640394,.003388242110439946,-.0017408685781098022,.013726786778435317,-.05291352498113532],[.10398820287198421,-.002555304662503252,.00929254753635487,.03906854966728287,-.001116177932745743,.003591278586532228,.041179596831508986,.06286831454172355,-.06594801653853166,.030964888548816797,-.0147285134502621,-.042241476052874635,.06467963549955101,-.0739664114823962,-.027365421654482948,.052599561053487204,.011955557066133717,.1200506292277735,-.03260051882859818,-.005169167432061694],[-.002309261820036799,-.11194848050269827,.046231968719573815,.16547162937327956,-.004611369917522527,.01078096931284426,-.05167944750411178,-.011460267729800216,.08980407463741838,-.034390966251272574,-.05120050736637168,-.020256685820207093,-.08342543815233423,.0026742274714942034,-.23595294011547646,-.023520579545328213,.05600997204585233,.07581652952992148,.008727360528966804,-.03305849538314814],[.11206451515643179,-.002207972950058514,.000989287429374721,.0033010140928012664,-.00025018449162589497,.00015106332155448676,-.0009168430378311506,.0632797686712923,.0017042671887139524,-.00032171922161879855,-.001378520956262191,-.05233492176109716,-.001544884038217892,-.053191625186315344,-.004453665178821483,.059985955751635775,.0014679630382106682,.0015595511447702337,-.01970023064809986,-.0008541977941674173],[-.002207115856359167,-.11210803339295448,.05023026580312987,.16760630973155008,-.012702914381645055,.007670117469892672,-.046551960656267294,-.0012462979974182913,.08653278243185736,-.016335032202010012,-.06999328202513681,.0010307387266994153,-.07844023240410081,.001047611540642676,-.22613123252942086,-.0011814261982348827,.07453463109816222,.07918494282784584,.00038799696207735684,-.04337119928496523],[.10399848794160398,-.0018546282231649306,-.007464965819594626,-.032522836809174505,.0009337404884178603,-.003163994863073173,-.04318253145650301,.06327080684010085,.06943289386154429,-.03229501372853786,.012701080887017095,-.04141111489720663,-.06791433877421259,-.07401434857540586,.018053595514752854,.05348488926394772,-.009740903093522784,-.1169722690876902,-.032918875737885475,.0038634864930025166],[-.001787045762836751,-.11196228035787356,.046562008727237605,.1668816250712964,-.0046517431565027585,.010914014738721138,-.050017931450071614,.008975951846932676,.08713774128849616,-.0331450595234103,-.05174073450705566,.021904227503264682,-.08081399364049487,.00024026050450840056,-.2368474697784532,.021431241345077668,.05643728484132888,.0804847065747428,-.007436952995013513,-.03323639392378166],[.06619790555929685,.007937272624853449,-.014106515811415553,-.11351197925830193,.028372988239404286,-.034765891745263865,-.10180491786474012,.07670730585676597,.15178714152250367,-.047204137414763245,.03837776086783861,-.05088335009753636,-.08109640280588061,-.03746589651915164,.05610729501563294,.04708069686689097,-.04042845640019936,-.17843973287559256,-.11289261642660686,-.013026734771989441],[-.003258233035928038,-.07629765986523894,.018044604513067858,.19838404729853457,-.0052040488702488515,.033236135022211524,.04862322666910306,.0271399334906358,.13564014175458494,-.019496943619243583,.009061232634766953,.051126467923420967,-.08739591740848135,-.018146812493971404,-.10965254701379797,.033622284848529985,.0049839703200507115,.005289265561350013,-.009288863731996756,-.0524412672652325],[-.003986882003145645,-.006536449073362972,.050293508064377844,-.17349459134769418,.06660245292347476,-.12148545825215697,-.20627090330577366,.07567142212928395,.17571376211230985,-.07452820070633623,-.009657503295460853,-.060128753635612285,-.12931756777555667,.012228769086887423,-.023623215023664098,.004951337906335712,-.020517001886349615,.0242710971617429,-.1832428942853428,-.0647780690096666],[-.003882400409842434,-.0051751449104026435,-.04657361868699686,.1839309542782756,-.0075953772763106215,.11082307499956584,.1624165487075721,.05510254231452287,.2235390198446846,-.0035826493201062464,.08703852818268769,.06051150237257711,-.011888050816357376,-.01867169674018597,.1488762773368582,.07786663511492027,-.096903707084445,-.23352271053475315,-.014465607580723346,.02846340879923258],[.030970322681001354,-.004709220001408376,-.007528738119966517,-.16357528456660891,.05268989220248232,-.08960366689471952,-.14218940432389854,.10513747604797466,.14519927390557388,-.05472487049871245,-.02936360869224824,-.05083875048941646,-.061890285829240166,.04414149076573786,-.050417517293536905,.02501513700761713,-.0164241782172064,.044950698551189425,-.20677993024909797,-.06840409367255679],[-.0061910554636544395,-.02549014215265234,-.17773317220354778,.011649348642623056,.033779282406239494,.03780521609152904,.10672838541759483,.04282099710655876,.11269092441672947,.08733025374777222,.007396804007710521,.043681348504218426,.017817631930504448,-.02576201894207981,.05361678397374782,.05392914604451803,-.04588243660548354,-.05449360174782909,-.018289999358620294,.050792370931913446],[.07254186100615939,-.006476680970671095,-.026270676170072206,-.11039354583740979,.03405178897889073,-.04818526069419498,-.06895695596451255,.08882207098078751,.08396519465735015,-.03242574490493955,-.026027916755625876,-.06297561449254954,-.033734092336044644,.05017046793957881,-.007156311206931322,.036377300918929704,-.027785475091141137,.045788377840654405,-.16056788078199133,-.044453878673681245],[-.0046479508538619626,-.0460872170239708,-.2790079503085164,-.09806356958982274,.0619038980323887,-.015660875349017705,.06471769894113022,.03586637464934978,.014465297947944152,.15613902852083866,-.05640165983776149,.029190158094929104,.0648989203245023,-.012065605931257545,.01802489645401896,.0326182924409834,.02259129326688951,.09812652322448011,-.011371173195258669,.05310762709723437],[.09234819205867095,-.0010952096884212115,-.0059954126082537905,-.002549018553761728,.0015525730855717817,-.0006001014754087856,.000900168322391215,.09689390185615415,-.0004321201508902927,.003109771883908686,-.0013362209789646005,-.06851230987229161,.0017057933812733076,.027410918821543884,-.00020315778991815845,.05183297236332711,.0006291507669358234,.00300239475701723,-.12667198858307488,.001026123876494072],[-.0018188019527348273,-.0556083824842835,-.30441220616984327,-.1294243469498962,.07883063753914596,-.030469665057486366,.04570531552177551,-.0019083299193563227,-.021940549726592755,.15789614188725415,-.06784553503059533,.0013493531405930359,.0866102736195729,-.0005398593255351143,-.010315171793918594,-.0010208528098805032,.03194461924314819,.15244415547277718,.00249481072726708,.05210060648987155],[.0726686178253015,.004656982499196157,.015264415714518064,.10644670145937021,-.03158792734815048,.04753124940971038,.07145172835947108,.08734095840116406,-.08333051207559461,.03854854525064789,.023786927187687146,-.06407613482372661,.036263315230795894,.05060664236004009,.007860488621277726,.035064751329811496,.028653455870298793,-.041889155266449415,-.1599956242713677,.046510508443875456],[.0017880236959114894,-.046306495045648065,-.27982598588173835,-.10233424838085226,.06319667530903234,-.017546016482861786,.06195234335011725,-.039335913735030134,.0177601947001907,.15474118656366265,-.05738276551422067,-.026687867962290574,.06352031811550675,.010080796040362454,.017729139880527874,-.03402534699441576,.021479725887447502,.09985333633117163,.01768468638884793,.05131607924740181],[.031190077233784842,.003701898293045659,.0005246879936731885,.16390712475261288,-.05131897860862001,.09102275382470873,.14628154898705953,.10336987404471454,-.14064948860692114,.058121044994734174,.029632085365875752,-.052519270838884344,.06254385664947529,.04512163438888764,.052489570288457466,.02287228762484795,.01460482876397596,-.04706151554553909,-.20589940927102743,.07035098752152764],[.004966803486139137,-.025655799520031213,-.177891784806731,.0051995673065932824,.03582774197123862,.03424777030513786,.10104693652841829,-.04692755909823407,.11832072913574627,.0851077481753059,.006234881059743377,-.04164570745015947,.015366895686711833,.02400397752600784,.05159002408087006,-.05487229110768962,-.046493554346184546,-.05268141689673623,.02641773821132605,.048059583131721914],[.05782216791667794,-.0015818691524279048,-.008698931177479328,.1025356427806277,-.025956947528960744,.0562683108239766,.10131954273559651,.10023331381082455,-.11388888765265551,.05842928132354444,.015546668169133925,-.07109520362281217,.06231399292864493,.03685849229563418,-.0010999714881735037,.026105216445067907,.06109731072083214,.07730385821428838,-.18755963663306197,.04738941051008658],[.0013806130436272088,-.028279785525396707,-.24779758418898018,-.09294707841916848,.03875795733036795,-.002800839113376171,-.012529210606239446,-.04469681246793441,.07737657526540351,.07198801244802809,.010778528628599817,-.031045644082364942,.001004354860152813,.006666223224477636,-.1262279580074178,-.04508385248025317,-.04480798046001943,.01777639002060321,.01622823772370373,.056646065257650806],[.08743934914534314,-.0008025464988402367,-.005778635533273387,-.0027136736414979826,.0009180284094330604,-.00011137735951013713,-.0006418893691597765,.10811931560815052,.0003351397026067558,.001462275131832315,-.0002875641419843434,-.05902354987932753,.0006845008297415143,.02537928096838023,-.0033295795726401086,.027241769541909315,25402298057011755e-21,.0016213486083211867,-.13466444154822205,.0019403531333081919],[-.0017221220624478938,-.04074864671190282,-.2934055262374263,-.13778457530947327,.04661214693672093,-.005655094976963601,-.03259141142574957,-.002129414967122427,.01701644622511502,.07424583227108589,-.014600835771580131,.0011624715696626146,.03475497373101005,-.0004998461231940759,-.16905669877169857,-.0005365279225755021,.0012897810540690047,.08232265885247786,.0026522224614454466,.09851985453774115],[.05772296607604435,.00046713096417428285,-.0010648000347449648,-.10611590201326658,.02746290579936855,-.05633495790855043,-.10173430596600805,.10191551293463291,.11684725680985994,-.0555494550270948,-.015110209275043338,-.06981765343099543,-.06222612282575546,.0365674276033919,-.003871084659972566,.027860140717789035,-.06281423660104342,-.0765439677705797,-.18805317015343528,-.04512223192103144],[-.003656279850416991,-.028320140678325573,-.24794793875814194,-.08883767650612241,.03770585082581785,-.0005831124801906217,-.008530055578990857,.04071548189035225,.07283221613113551,.07423282898014846,.011382317260705307,.03382092937882252,.0034571782525582824,-.008112350143876085,-.12617338080416468,.044021002252220255,-.04236753675222879,.020806430133869208,-.00883052596318007,.05846808637309887],[.06632787150069476,-.0005024945974418834,.000687897314943442,-.09905282710345854,.02708119721279293,-.04396334728031652,-.08598592808404919,.06440210597098343,.11344648894176527,-.045255083619287026,-.0033627481062762764,-.06552658557509171,-.06567409253607354,-.02083796886142897,.02440299925302835,.015466292580588247,-.04932695227870659,-.09954853296559635,-.11056103199623077,-.052035175908552264],[-.0034584653198352347,-.08173047614418247,.04205090325492935,.20673617233092076,.019186781291530883,.01770931263598558,.06296888043841407,.020672760790206482,.10430012736186432,.004645338455840127,.002347660324921661,.04000959099000912,-.06097507297495664,.003657843192564908,-.01746291820502619,.022780444868396997,.07817790357546428,.09943192679096131,-.0024518885244078498,-.12599928693973764],[.09712861511917821,-.002109191062430208,.0011487974317804382,.003664679796444184,.00020402199216730635,.00029506307900802596,-.00015780066191922547,.08265038948831736,.0016065974001585322,-.00015594162162732475,-5472790483155651e-20,-.048473628411413776,-.0013575663381860815,-.03754640277422206,-.0016561616161500105,.026718742004923517,.002634292853564168,.002662667103604764,-.04208773082444106,-.002994791741579467],[-.0019129526080266916,-.10709246327169397,.05832925663349223,.18607114049263695,.010359050961291777,.014981588209040693,-.008012200455334427,-.0016278032784890722,.08157367823787602,-.00791780919430843,-.0027787649219278856,.0009546903739581827,-.06892932831009056,.0007394781550317823,-.08409026105263263,-.0005262268708226104,.13375408026912372,.13519475977152992,.0008289198229354186,-.15205811853861703],[.06641261142097911,-.002716017872732488,.0009683828906125908,.10711621231805082,-.026304719983661507,.04462655519000965,.08839863528597891,.06353817661530836,-.10925171370014193,.045402898169218005,.0034525790352213613,-.06705114087980098,.06322228047883822,-.020965836164989555,-.025071674259480613,.014557322724613622,.052366940659378414,.10338644840652032,-.11037875047163188,.04703362395594938],[.0008441353133364807,-.08168688069996452,.042045379078425656,.20267566347704913,.020238219422379803,.015964530372102635,.05953436832384353,-.023192550627061513,.1086861788568224,.00285982527326365,.002213432138776979,-.037398466479719145,-.06351369305742692,-.0028345153014701367,-.01648851220108038,-.023371761373116254,.07617503760772201,.0954351128613139,.006803307851969448,-.1279504515768762],[.20703888776046817,-.00409553064388407,.0009182903060258031,.0002931822419378244,.0005512778931649089,.00022805224437948043,-.005199505793018399,.007065030992638857,-.0025937632986590747,-.0002270212592156566,-.0008617330598753491,.003924056428377861,.0027605436927578154,-.18348670413797608,-.00045015275908269107,-.021588694232823852,.0009628137692618409,-.00018547586883984907,.2346445288266965,.0015329766435917217],[-.004077640557505787,-.20794724236737291,.04662544452350919,.014886090234270592,.02799068731984157,.011579167501817209,-.26400068400072535,-.0001391461151446726,-.13169622503382425,-.011526820067412923,-.04375379628168585,-7728447450197291e-20,.1401643640982513,.0036137792018121856,-.02285614076292966,.0004251903405182312,.0488860872107565,-.00941738661101889,-.004621334946734529,.07783564411228376],[.001600149798509039,.029891049610734324,-.07310001697269124,.05846828769403234,-.11859715192490825,-.12934983734389502,-.03215753387849471,-.0825733151286346,-.041100473797450285,-.005708907546473291,-.11638049064707212,-.005360018645738371,.009802600608771576,.09941862267941083,-.04900808936932861,.09662671233189334,.019636547733371652,-.04365158147420805,.005168663964690984,.007242884103174802],[-.008465579757951636,.004679603974788933,.04534917038125155,-.0757403384078966,.034637874980380366,-.08218501281379924,.12096517723818799,-.11907027593886922,-.07753296600526828,-.07891922561825047,-.012653839329842924,-.11579889444409787,-.08608102129987455,.014700684484062943,-.0022790983807369066,-.07263410764392318,.13958423960769856,-.08018956940322877,.002018906461944938,.12988268130836478],[.014243806625978583,.014200096866361147,-.05619200990335108,.043173116638536076,-.0809620185277701,-.0844308628347721,-.022292726265858917,-.08195400319233333,.02152003624899609,.023644742127953262,-.06997835909879718,.01057825353397415,.0055637826130319,.10753640013705452,.04781691310139974,.10988794493865496,-.10152366815496468,-.03877558539108679,.009852910151645293,-.10479520228312775],[-.0019267548176591929,-.008925388714249952,.038395556537413965,-.07266518610541645,.03531648617748401,-.08596592469729226,.09582763458529317,-.06700091987027901,-.07935901554697895,-.060241496386490595,.02295970146126476,-.08272383650604234,-.07334652213229428,.03440874237491755,-.03890766276962901,-.046992930274583435,.09801254916514725,-.06102876784783894,.000763217368546433,.1075684463291605],[.005981414137877065,.019986810144644703,-.052159516892456737,.04447006867456221,-.07664611887065528,-.09244398527720686,-.004678028369475463,-.10415240351429289,.004658130909817134,.005138782164430031,-.09644188050377732,.005970694366832806,-.008166219047880658,.08306831284498233,.04768622499627265,.09727061518699774,-.08253946949545725,-.02682236647381465,.008619654678140742,-.0973245037213165],[-.0021942894961033224,-.014672723795261092,.02977200483219806,-.032614772081342794,.07029507502464309,-.11259463615333884,.09926869224353115,-.06797666360574209,-.03044186202548875,-.007886017458831256,.043349675685023834,-.08512299915576599,-.02423614615027092,.010447936760907087,.03445782607482164,-.04372862648917437,-.1042036745513725,.05165343287808029,-.0020921056059823064,-.1323377553292092],[-.00420599353926704,.03674454816444584,-.0711500729591977,.05527573034541881,-.11733258745742518,-.12551113047364817,-.026702116872438602,-.09800221532457083,-.03205801768570958,-.0047389532692271915,-.10681090062656821,.0020600345006134566,.030173430742515703,.08161736537031422,-.060517548931822374,.07649898406150976,.010560607875077349,-.048467808387472576,.005835497187277633,-.010407245460861088],[-.0044631564451177224,.000452951556752928,.03571250577605911,-.033807803564813055,.0721243162975255,-.10250509947932039,.12264947244553856,-.11180724612070768,-.025713763387405476,-.01886032807128773,.01924058046779385,-.1128498000096371,-.030120981721105073,.0167474295153355,.05198355650234265,-.06614701624977712,-.08051248382206573,.05542974758926344,-.009107937018241516,-.11890323290806659],[.0019322395797021221,-.029683610868556604,.07482894414297407,-.06140520838054137,.11986904124223774,.12601350788764093,.03689557815398775,-.07782090974878497,.038015754250683036,.0025970500443396882,.11579199621960423,-.0007963013793848723,-.013184423524447514,.09876268783296616,.048880345050464104,.09941173430555919,-.01412521549114323,.040460280290956586,.005085161644416053,-.0021231601220417814],[.0083960091842816,.005852929693438771,.04243570258783497,-.07337942430788828,.02994127217609311,-.08721440581663047,.1196051729738129,.1222292476838613,-.0790911638092451,-.07908281184066421,-.017226487294787776,.11592014345432422,-.08562829078670575,-.01860387464425302,-.004207015665352503,.06877312128775692,.14024917911015802,-.08184615644642158,-.002220856035891512,.13006714598651922],[.014308626336015257,-.01454052042314059,.05766025175192101,-.04600081499215698,.0822898136677764,.08098049482043357,.026048634371759163,-.07925229960760553,-.02462809465625515,-.025998403972505513,.07082812577032056,.013827286392253153,-.008447474071877273,.10609816881106214,-.04931181383547732,.11165306622847145,.10530416416182639,.036342518602117145,.009815217782456281,.10894942298282548],[.0013644133178536335,-.008359340915330943,.036153230930321086,-.07090890135996188,.03210123372298944,-.08922370910650551,.09487554923131322,.07017588552785688,-.07845012595494255,-.05926377230706392,.02018651116995677,.08224316825811938,-.07307056977794409,-.03861628518124693,-.036994707959347325,.042629669719730666,.093939065354456,-.06250822241195031,-.0011505820661753263,.10335873595850935],[.006063175371552422,-.02054904645401138,.053291335098044186,-.04571978341092679,.07935453658465319,.08793890245333293,.008583087504493343,-.1013950655820991,-.005853161420306031,-.005445307614197536,.09807397657368584,.00931776693380208,.007205592342013779,.082592508658968,-.046292474156034144,.0989169897020651,.07837246011698083,.02883541065063735,.008695346513226461,.0920382543445989],[.0019570707435616493,-.013874368207632787,.02769514538056954,-.0308384787351154,.06722263483447934,-.11614728554614778,.09900751394746089,.07202493060305093,-.03023484163245627,-.007677563316653516,.03951867680131085,.08482189219689276,-.024538894693039305,-.013710634372263894,.03630874094086489,.039864702454278714,-.10737284251528388,.05055725035991547,.00175108584938249,-.13606726368738836],[-.004026995855981647,-.036698218288480425,.0725010703546957,-.056564040810879894,.12008147931184941,.12137767813607817,.031510710584075646,-.09352382549573533,.03102068224192369,.003992656239497402,.1074856643504072,.006501877535294164,-.03133603981647736,.08089464498434866,.06251746142633302,.07904418680908308,-.013722582803366993,.05061275847617276,.00618959520503954,.005717381357626018],[.004625305555512998,.0018994102698154242,.0328832898039056,-.03160511405202569,.06744843517174963,-.10736758608785574,.12150296809183192,.11557936043370105,-.026956101326533272,-.019032297528091408,.015019999618783478,.11268117275247995,-.028909549827634096,-.019948111144142407,.04956037623096237,.06308358623986078,-.08003422524829201,.05347835120052662,.008871102262333251,-.11922080818583669]],numEvalues:20,eigenValues:[448.2615028731629,152.88433766749935,77.0794222341117,38.340488190771154,27.7543501208544,15.293153116152746,13.085890189100295,10.196616391772121,7.236467941170144,6.596453707383955,5.738899938129388,5.622321591085375,4.622729198414605,4.393149515511058,3.9714381417641094,3.5791364382171165,3.4263759023353697,3.078849017302407,2.63957985738361,2.4414195196560233],numPtsPerSample:71,nonRegularizedVectors:[0],meanShape:[[25.011254225136952,34.81517356757155],[24.381567267455893,45.62676320390881],[25.830707280728745,56.164927637057076],[28.675368741312013,66.69573595497496],[33.59842962462659,75.54915577841888],[40.33264054159778,82.56185730354144],[48.35930909116706,87.99983611495458],[57.763839129671,89.7833114774977],[67.09085203787197,87.63091750236714],[74.89717655776496,81.88110715348313],[81.35004130814275,74.60868555761579],[85.92068259987741,65.568286826737],[88.34848937446895,54.93363700084711],[89.38156726745592,44.34658517018312],[88.32666422859364,33.56817361245254],[81.56685632624777,27.444862527091914],[76.61977291820983,25.17298033285374],[69.1535485656504,25.74681125128558],[63.33720223541309,27.34067471461259],[31.524715699235657,28.430444822342793],[36.37850774632676,25.96553392858243],[43.861536613791145,26.244938607124027],[49.73613051896211,27.608548456866743],[35.9824349270655,35.44340608432884],[41.74296700227427,32.491136119230305],[48.056933854020826,35.38320009473131],[41.82789333728334,37.01094114500529],[41.96084875111114,34.61071899652552],[77.38872809802479,34.62790720778304],[71.51641815297683,31.904746609209838],[65.3212222111797,35.04317912976654],[71.60952418697246,36.42439053543194],[71.382163563407,34.031264828125074],[56.645668790714296,33.009120609139984],[50.19418940248494,46.94109805231665],[47.45698830892593,51.77099798102398],[50.07251572822895,55.035267306968535],[57.101339593815,56.14543557571483],[64.08100000856956,54.759369555253215],[66.5659690980221,51.39464571251506],[63.64071423300322,46.67626811819429],[56.82612949694652,42.171866411748],[52.14225130369289,53.25579760946124],[61.942803190976235,53.06277528262285],[45.0908704071806,66.45744111296608],[49.30691311256561,63.53596165337137],[54.022310354591866,62.36005547418881],[57.235786373192525,62.97186161124688],[60.42268062019531,62.23399988308512],[65.1807222181198,63.223326242164035],[69.50852815712136,65.97653420394317],[66.69295291154066,69.86104089266809],[62.79690252546874,72.43043738721082],[57.4387936856146,73.2793930325098],[52.05141252402308,72.64207031431033],[48.057213957229465,70.22807264115391],[51.31282628100382,68.33485734485816],[57.355342381712035,69.04222084961435],[63.36532026743049,68.0974829132731],[63.30266650865377,65.1057867536814],[57.28308296345625,65.37330757122123],[51.257633954541575,65.34301423200844],[56.99738460100593,50.86720524009678],[38.34501696780538,33.379866011204456],[45.43217757469057,33.21308405175762],[45.10297717946054,36.387811845290685],[38.61692847161157,36.562115185290565],[74.94672669442139,32.658993629837994],[67.85849509241058,32.77139668154979],[68.31244453197587,35.93070030253472],[74.80032654357314,35.84948147148668]]},hints:{rightEye:[71.382163563407,34.031264828125074],leftEye:[41.96084875111114,34.61071899652552],nose:[56.99738460100593,50.86720524009678]}}},74279:(e,t,n)=>{const r=n(21518),o={Graph:{language:"javascript",source:"//     NoFlo - Flow-Based Programming for JavaScript\n//     (c) 2013-2017 Flowhub UG\n//     (c) 2011-2012 Henri Bergius, Nemein\n//     NoFlo may be freely distributed under the MIT license\n\n// The Graph component is used to wrap NoFlo Networks into components inside\n// another network.\nvar Graph, noflo;\n\nnoflo = require(\"../lib/NoFlo\");\n\nGraph = class Graph extends noflo.Component {\n  constructor(metadata) {\n    super();\n    this.metadata = metadata;\n    this.network = null;\n    this.ready = true;\n    this.started = false;\n    this.starting = false;\n    this.baseDir = null;\n    this.loader = null;\n    this.load = 0;\n    this.inPorts = new noflo.InPorts({\n      graph: {\n        datatype: 'all',\n        description: 'NoFlo graph definition to be used with the subgraph component',\n        required: true\n      }\n    });\n    this.outPorts = new noflo.OutPorts;\n    this.inPorts.graph.on('ip', (packet) => {\n      if (packet.type !== 'data') {\n        return;\n      }\n      return this.setGraph(packet.data, (err) => {\n        if (err) {\n          // TODO: Port this part to Process API and use output.error method instead\n          return this.error(err);\n        }\n      });\n    });\n  }\n\n  setGraph(graph, callback) {\n    this.ready = false;\n    if (typeof graph === 'object') {\n      if (typeof graph.addNode === 'function') {\n        // Existing Graph object\n        this.createNetwork(graph, callback);\n        return;\n      }\n      // JSON definition of a graph\n      noflo.graph.loadJSON(graph, (err, instance) => {\n        if (err) {\n          return callback(err);\n        }\n        instance.baseDir = this.baseDir;\n        return this.createNetwork(instance, callback);\n      });\n      return;\n    }\n    if (graph.substr(0, 1) !== \"/\" && graph.substr(1, 1) !== \":\" && process && process.cwd) {\n      graph = `${process.cwd()}/${graph}`;\n    }\n    return noflo.graph.loadFile(graph, (err, instance) => {\n      if (err) {\n        return callback(err);\n      }\n      instance.baseDir = this.baseDir;\n      return this.createNetwork(instance, callback);\n    });\n  }\n\n  createNetwork(graph, callback) {\n    this.description = graph.properties.description || '';\n    this.icon = graph.properties.icon || this.icon;\n    if (!graph.name) {\n      graph.name = this.nodeId;\n    }\n    graph.componentLoader = this.loader;\n    return noflo.createNetwork(graph, (err, network1) => {\n      this.network = network1;\n      if (err) {\n        return callback(err);\n      }\n      this.emit('network', this.network);\n      // Subscribe to network lifecycle\n      this.subscribeNetwork(this.network);\n      // Wire the network up\n      return this.network.connect((err) => {\n        var name, node, ref;\n        if (err) {\n          return callback(err);\n        }\n        ref = this.network.processes;\n        for (name in ref) {\n          node = ref[name];\n          // Map exported ports to local component\n          this.findEdgePorts(name, node);\n        }\n        // Finally set ourselves as \"ready\"\n        this.setToReady();\n        return callback();\n      });\n    }, true);\n  }\n\n  subscribeNetwork(network) {\n    var contexts;\n    contexts = [];\n    this.network.on('start', () => {\n      var ctx;\n      ctx = {};\n      contexts.push(ctx);\n      return this.activate(ctx);\n    });\n    return this.network.on('end', () => {\n      var ctx;\n      ctx = contexts.pop();\n      if (!ctx) {\n        return;\n      }\n      return this.deactivate(ctx);\n    });\n  }\n\n  isExportedInport(port, nodeName, portName) {\n    var priv, pub, ref;\n    ref = this.network.graph.inports;\n    // First we check disambiguated exported ports\n    for (pub in ref) {\n      priv = ref[pub];\n      if (!(priv.process === nodeName && priv.port === portName)) {\n        continue;\n      }\n      return pub;\n    }\n    // Component has exported ports and this isn't one of them\n    return false;\n  }\n\n  isExportedOutport(port, nodeName, portName) {\n    var priv, pub, ref;\n    ref = this.network.graph.outports;\n    // First we check disambiguated exported ports\n    for (pub in ref) {\n      priv = ref[pub];\n      if (!(priv.process === nodeName && priv.port === portName)) {\n        continue;\n      }\n      return pub;\n    }\n    // Component has exported ports and this isn't one of them\n    return false;\n  }\n\n  setToReady() {\n    if (typeof process !== 'undefined' && process.execPath && process.execPath.indexOf('node') !== -1) {\n      return process.nextTick(() => {\n        this.ready = true;\n        return this.emit('ready');\n      });\n    } else {\n      return setTimeout(() => {\n        this.ready = true;\n        return this.emit('ready');\n      }, 0);\n    }\n  }\n\n  findEdgePorts(name, process) {\n    var inPorts, outPorts, port, portName, targetPortName;\n    inPorts = process.component.inPorts.ports;\n    outPorts = process.component.outPorts.ports;\n    for (portName in inPorts) {\n      port = inPorts[portName];\n      targetPortName = this.isExportedInport(port, name, portName);\n      if (targetPortName === false) {\n        continue;\n      }\n      this.inPorts.add(targetPortName, port);\n      this.inPorts[targetPortName].on('connect', () => {\n        // Start the network implicitly if we're starting to get data\n        if (this.starting) {\n          return;\n        }\n        if (this.network.isStarted()) {\n          return;\n        }\n        if (this.network.startupDate) {\n          // Network was started, but did finish. Re-start simply\n          this.network.setStarted(true);\n          return;\n        }\n        // Network was never started, start properly\n        return this.setUp(function() {});\n      });\n    }\n    for (portName in outPorts) {\n      port = outPorts[portName];\n      targetPortName = this.isExportedOutport(port, name, portName);\n      if (targetPortName === false) {\n        continue;\n      }\n      this.outPorts.add(targetPortName, port);\n    }\n    return true;\n  }\n\n  isReady() {\n    return this.ready;\n  }\n\n  isSubgraph() {\n    return true;\n  }\n\n  isLegacy() {\n    return false;\n  }\n\n  setUp(callback) {\n    this.starting = true;\n    if (!this.isReady()) {\n      this.once('ready', () => {\n        return this.setUp(callback);\n      });\n      return;\n    }\n    if (!this.network) {\n      return callback(null);\n    }\n    return this.network.start((err) => {\n      if (err) {\n        return callback(err);\n      }\n      this.starting = false;\n      return callback();\n    });\n  }\n\n  tearDown(callback) {\n    this.starting = false;\n    if (!this.network) {\n      return callback(null);\n    }\n    return this.network.stop(function(err) {\n      if (err) {\n        return callback(err);\n      }\n      return callback();\n    });\n  }\n\n};\n\nexports.getComponent = function(metadata) {\n  return new Graph(metadata);\n};\n"},"adapters/ObjectToPackets":{language:"coffeescript",source:"_ = require \"underscore\"\nnoflo = require \"noflo\"\nowl = require \"owl-deepcopy\"\n\nconvert = (object, level, output) ->\n  # Deal with data packets\n  if _.isArray object\n    for datum, i in object\n      output.send\n        out: datum\n      delete object[i]\n    # Clean up after deletion\n    object = _.compact object\n\n  # Stop if we've reached deep enough\n  if level <= 0\n    unless _.isEmpty object\n      output.send\n        out: object\n    return\n\n  # Go through the groups\n  for key, value of object\n    output.send\n      out: new noflo.IP 'openBracket', key\n\n    if _.isObject value\n      convert value, level - 1, output\n    else\n      output.send\n        out: value\n\n    output.send\n      out: new noflo.IP 'closeBracket', key\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = \"Convert each incoming object into a stream\"\n  c.icon = 'expand'\n  c.inPorts.add 'in',\n    datatype: 'all'\n    description: 'Array/Object packets to convert'\n  c.inPorts.add 'depth',\n    datatype: 'int'\n    description: 'Maximum level of recursion when conversion incoming\n     object packet'\n    control: true\n  c.outPorts.add 'out',\n    datatype: 'all'\n    description: 'Inner items from incoming array/objects with associated\n     keys as groups'\n  c.outPorts.add 'empty',\n    datatype: 'bang'\n    description: 'Sends when an empty object or array was received'\n  c.process (input, output) ->\n    return unless input.hasData 'in'\n    return if input.attached('depth').length and not input.hasData 'depth'\n\n    depth = if input.hasData('depth') then input.getData('depth') else Infinity\n    data = input.getData 'in'\n    if not _.isArray(data) and not _.isObject(data)\n      # Plain value, send as-is\n      output.sendDone\n        out: data\n      return\n\n    if _.isArray(data) and data.length is 0\n      output.sendDone\n        empty: null\n      return\n    if _.isObject(data) and Object.keys(data).length is 0\n      output.sendDone\n        empty: null\n      return\n\n    # Deep copy because conversion is destructive\n    object = owl.deepCopy data\n    # Send data as a stream\n    output.send\n      out: new noflo.IP 'openBracket', null\n    convert object, depth, output\n    output.send\n      out: new noflo.IP 'closeBracket', null\n    output.done()\n",tests:"noflo = require 'noflo'\n\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-adapters'\n\ndescribe 'ObjectToPackets component', ->\n  c = null\n  depth = null\n  ins = null\n  out = null\n  empty = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'adapters/ObjectToPackets', (err, instance) ->\n      return done err if err\n      c = instance\n      depth = noflo.internalSocket.createSocket()\n      ins = noflo.internalSocket.createSocket()\n      c.inPorts.depth.attach depth\n      c.inPorts.in.attach ins\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n    empty = noflo.internalSocket.createSocket()\n    c.outPorts.empty.attach empty\n  afterEach ->\n    c.outPorts.out.detach out\n    out = null\n    c.outPorts.empty.detach empty\n    empty = null\n\n  describe 'given any object', ->\n    it 'it becomes grouped packets', (done) ->\n      expected = [\n        '< null'\n        '< a'\n        'DATA 1'\n        '>'\n        '< b'\n        '< c'\n        'DATA 2'\n        '>'\n        '< d'\n        'DATA 3'\n        'DATA 4'\n        '>'\n        '< e'\n        '< f'\n        'DATA 5'\n        'DATA 6'\n        '>'\n        '>'\n        '>'\n        '>'\n      ]\n      received = []\n\n      empty.on 'ip', (ip) ->\n        done new Error 'Unexpected empty received'\n      out.on 'begingroup', (grp) ->\n        received.push \"< #{grp}\"\n      out.on 'data', (data) ->\n        received.push \"DATA #{data}\"\n      out.on 'endgroup', ->\n        received.push '>'\n      out.on 'disconnect', ->\n        chai.expect(received).to.eql expected\n        done()\n\n      depth.send Infinity\n      ins.send\n        a: 1\n        b:\n          c: 2\n          d: [3, 4]\n          e:\n            f: [5, 6]\n      ins.disconnect()\n\n  describe 'given a number of levels to objectify', ->\n    it 'it becomes grouped packets', (done) ->\n      expected = [\n        '< null'\n        '< a'\n        'DATA 1'\n        '>'\n        '< b'\n        '< c'\n        'DATA 2'\n        '>'\n        '< d'\n        'DATA 3'\n        'DATA 4'\n        '>'\n        '< e'\n        'DATA {\"f\":[5,6]}'\n        '>'\n        '>'\n        '>'\n      ]\n      received = []\n\n      empty.on 'ip', (ip) ->\n        done new Error 'Unexpected empty received'\n      out.on 'begingroup', (grp) ->\n        received.push \"< #{grp}\"\n      out.on 'data', (data) ->\n        data = JSON.stringify data if typeof data is 'object'\n        received.push \"DATA #{data}\"\n      out.on 'endgroup', ->\n        received.push '>'\n      out.on 'disconnect', ->\n        chai.expect(received).to.eql expected\n        done()\n\n      depth.send 2\n      ins.send\n        a: 1\n        b:\n          c: 2\n          d: [3, 4]\n          e:\n            f: [5, 6]\n      ins.disconnect()\n\n  describe 'given a plain array', ->\n    it 'it becomes set of packets', (done) ->\n      expected = [\n        '< null'\n        'DATA 1'\n        'DATA 2'\n        'DATA 3'\n        '>'\n      ]\n      received = []\n\n      empty.on 'ip', (ip) ->\n        done new Error 'Unexpected empty received'\n      out.on 'begingroup', (grp) ->\n        received.push \"< #{grp}\"\n      out.on 'data', (data) ->\n        received.push \"DATA #{data}\"\n      out.on 'endgroup', ->\n        received.push '>'\n      out.on 'disconnect', ->\n        chai.expect(received).to.eql expected\n        done()\n\n      depth.send Infinity\n      ins.send [1, 2, 3]\n      ins.disconnect()\n  describe 'given a plain string', ->\n    it 'it becomes a single packet', (done) ->\n      expected = [\n        'DATA foo'\n      ]\n      received = []\n\n      empty.on 'ip', (ip) ->\n        done new Error 'Unexpected empty received'\n      out.on 'begingroup', (grp) ->\n        received.push \"< #{grp}\"\n      out.on 'data', (data) ->\n        received.push \"DATA #{data}\"\n      out.on 'endgroup', ->\n        received.push '>'\n      out.on 'disconnect', ->\n        chai.expect(received).to.eql expected\n        done()\n\n      depth.send Infinity\n      ins.send 'foo'\n      ins.disconnect()\n\n  describe 'given an empty object', ->\n    it 'gets sent to EMPTY port', (done) ->\n      expected = [\n        'EMPTY data null'\n      ]\n      received = []\n      out.on 'ip', (ip) ->\n        received.push \"OUT #{ip.type} #{JSON.stringify(ip.data)}\"\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      empty.on 'ip', (ip) ->\n        received.push \"EMPTY #{ip.type} #{JSON.stringify(ip.data)}\"\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      ins.send {}\n\n  describe 'given an empty array', ->\n    it 'gets sent to EMPTY port', (done) ->\n      expected = [\n        'EMPTY data null'\n      ]\n      received = []\n      out.on 'ip', (ip) ->\n        received.push \"OUT #{ip.type} #{JSON.stringify(ip.data)}\"\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      empty.on 'ip', (ip) ->\n        received.push \"EMPTY #{ip.type} #{JSON.stringify(ip.data)}\"\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      ins.send []\n"},"adapters/ObjectToString":{language:"coffeescript",source:"noflo = require \"noflo\"\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.icon = 'font'\n  c.description = \"stringifies a simple object with configurable associator and\n    delimiter\"\n  c.inPorts.add 'in',\n    datatype: 'object'\n    description: 'Object to convert'\n  c.inPorts.add 'assoc',\n    datatype: 'string'\n    description: 'Associating string for key/value pairs'\n    control: true\n    default: ':'\n  c.inPorts.add 'delim',\n    datatype: 'string'\n    description: 'Delimiter string between object properties'\n    control: true\n    default: ','\n  c.outPorts.add 'out',\n    datatype: 'string'\n  c.process (input, output) ->\n    return unless input.hasData 'in'\n    return if input.attached('assoc').length and not input.hasData 'assoc'\n    return if input.attached('delim').length and not input.hasData 'delim'\n\n    assoc = if input.hasData('assoc') then input.getData('assoc') else ':'\n    delim = if input.hasData('delim') then input.getData('delim') else ','\n    data = input.getData 'in'\n\n    str = []\n    for key, value of data\n      if Object::toString.apply(value) isnt \"[object String]\"\n        value = JSON.stringify value\n\n      str.push \"#{key}#{assoc}#{value}\"\n\n    output.sendDone\n      out: str.join delim\n",tests:"noflo = require 'noflo'\n\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-adapters'\n\ndescribe 'ObjectToString component', ->\n  c = null\n  assoc = null\n  delim = null\n  ins = null\n  out = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'adapters/ObjectToString', (err, instance) ->\n      return done err if err\n      c = instance\n      assoc = noflo.internalSocket.createSocket()\n      delim = noflo.internalSocket.createSocket()\n      ins = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach ins\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n  afterEach ->\n    c.outPorts.out.detach out\n    out = null\n\n  describe 'Stringifying a simple object', ->\n    it 'should become a string using default associator and delimiter', (done) ->\n      obj =\n        a: 1\n        b:\n          c: 2\n          d: [3, 4]\n      out.on 'data', (data) ->\n        chai.expect(data).to.equal \"a:1,b:#{JSON.stringify(obj.b)}\"\n        done()\n      ins.send obj\n\n  describe 'Stringifying with custom associator and delimiter', ->\n    before ->\n      c.inPorts.assoc.attach assoc\n      c.inPorts.delim.attach delim\n    after ->\n      c.inPorts.assoc.detach assoc\n      c.inPorts.delim.detach delim\n    it 'should become the expected string', (done) ->\n      obj =\n        a: 1\n        b:\n          c: 2\n          d: [3, 4]\n      out.on 'data', (data) ->\n        chai.expect(data).to.equal \"a=1|b=#{JSON.stringify(obj.b)}\"\n        done()\n      assoc.send '='\n      delim.send '|'\n      ins.send obj\n"},"adapters/PacketsToArray":{language:"coffeescript",source:"noflo = require \"noflo\"\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.icon = 'compress'\n  c.description = \"Merges incoming IPs stream into one array\"\n  c.inPorts.add 'in',\n    datatype: 'all'\n  c.outPorts.add 'out',\n    datatype: 'array'\n  c.forwardBrackets = {}\n  c.process (input, output) ->\n    return unless input.hasStream 'in'\n    stream = input.getStream 'in'\n    level = 0\n    data = []\n    current = data\n    for packet in stream\n      if packet.type is 'openBracket'\n        current = []\n        level++\n      if packet.type is 'data'\n        current.push packet.data\n        continue\n      if packet.type is 'closeBracket'\n        data.push current\n        level--\n    if data.length is 1 and Array.isArray data[0]\n      output.send data[0]\n    else\n      output.send data\n    output.done()\n",tests:"noflo = require 'noflo'\n\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-adapters'\n\ndescribe 'PacketsToArray component', ->\n  c = null\n  ins = null\n  out = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'adapters/PacketsToArray', (err, instance) ->\n      return done err if err\n      c = instance\n      ins = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach ins\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n  afterEach ->\n    c.outPorts.out.detach out\n    out = null\n\n  describe 'with three IPs without groups', ->\n    it 'should turn them into an array', (done) ->\n      out.on 'data', (data) ->\n        chai.expect(data).to.eql [1, 2, 3]\n        done()\n\n      ins.beginGroup()\n      ins.send 1\n      ins.send 2\n      ins.send 3\n      ins.endGroup()\n\n  describe 'with single IP without groups', ->\n    it 'should turn it into an array', (done) ->\n      out.on 'data', (data) ->\n        chai.expect(data).to.eql [1]\n        done()\n\n      ins.send 1\n\n  describe 'with grouped and ungrouped IPs', ->\n    it 'should turn them into separate an arrays', (done) ->\n      expected = [\n        'DATA [1]'\n        'DATA [2]'\n      ]\n      received = []\n\n      out.on 'begingroup', (grp) ->\n        received.push \"< #{grp}\"\n      out.on 'data', (data) ->\n        data = JSON.stringify data if typeof data is 'object'\n        received.push \"DATA #{data}\"\n      out.on 'endgroup', ->\n        received.push '>'\n      out.on 'disconnect', ->\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n\n      ins.connect()\n      ins.beginGroup 'a'\n      ins.send 1\n      ins.endGroup()\n      ins.send 2\n      ins.disconnect()\n\n  describe 'with group but without toplevel data packets', ->\n    it 'should send an array', (done) ->\n      expected = [\n        'DATA [1]'\n      ]\n      received = []\n\n      out.on 'begingroup', (grp) ->\n        received.push \"< #{grp}\"\n      out.on 'data', (data) ->\n        data = JSON.stringify data if typeof data is 'object'\n        received.push \"DATA #{data}\"\n      out.on 'endgroup', ->\n        received.push '>'\n      out.on 'disconnect', ->\n        chai.expect(received).to.eql expected\n        done()\n\n      ins.connect()\n      ins.beginGroup 'a'\n      ins.send 1\n      ins.endGroup()\n      ins.disconnect()\n"},"adapters/PacketsToObject":{language:"coffeescript",source:"noflo = require \"noflo\"\n_ = require \"underscore\"\n\nlocate = (object, groups) ->\n  here = object\n  for group in groups\n    here = here[group]\n  here\n\nobjectify = (object) ->\n  return object unless _.isObject object\n  obj = {}\n  length = object.length\n\n  # If it's not a pure object, drop the array portion\n  if _.keys(object).length > length\n    for own key, value of object\n      unless _.isNumber key\n        obj[key] = objectify value\n  # Otherwise, use the array\n  else\n    obj = object.slice()\n\n  # Return the objectified object\n  obj\n\nexports.getComponent = -> new PacketsToObject\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.icon = 'compress'\n  c.description = \"Convert the structure of a packet stream into an object\"\n  c.inPorts.add 'in',\n    datatype: 'all'\n  c.outPorts.add 'out',\n    datatype: 'object'\n  c.forwardBrackets = {}\n  c.process (input, output) ->\n    return unless input.hasStream 'in'\n    stream = input.getStream 'in'\n    groups = []\n    object = []\n\n    if stream[0].type is 'openBracket'\n      # Remove the surrounding brackets\n      before = stream.shift()\n      after = stream.pop()\n\n    for packet in stream\n      if packet.type is 'openBracket'\n        here = locate object, groups\n        here[packet.data] = []\n        groups.push packet.data\n        continue\n      if packet.type is 'data'\n        here = locate object, groups\n        here.push packet.data\n      if packet.type is 'closeBracket'\n        groups.pop()\n\n    result = objectify object\n    output.sendDone result\n",tests:"noflo = require 'noflo'\n\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-adapters'\n\ndescribe 'PacketsToObject component', ->\n  c = null\n  ins = null\n  out = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'adapters/PacketsToObject', (err, instance) ->\n      return done err if err\n      c = instance\n      ins = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach ins\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n  afterEach ->\n    c.outPorts.out.detach out\n    out = null\n\n  describe 'given a tree of grouped packets', ->\n    it 'it becomes an object', (done) ->\n      out.on 'data', (data) ->\n        chai.expect(data).to.eql\n          a:\n            '0': 'a'\n            b: ['ab1', 'ab2']\n          c: ['c']\n        done()\n\n      ins.connect()\n      ins.beginGroup()\n      ins.beginGroup 'a'\n      ins.send 'a'\n      ins.beginGroup 'b'\n      ins.send 'ab1'\n      ins.send 'ab2'\n      ins.endGroup()\n      ins.endGroup()\n      ins.beginGroup 'c'\n      ins.send 'c'\n      ins.endGroup()\n      ins.endGroup()\n      ins.disconnect()\n  describe 'given a single packet', ->\n    it 'it becomes an array', (done) ->\n      out.on 'data', (data) ->\n        chai.expect(data).to.eql ['a']\n        done()\n      ins.send 'a'\n"},"adapters/PairsToObject":{language:"coffeescript",source:"noflo = require \"noflo\"\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = \"Assume packets at odd numbers to be keys and those at\n  even numbers to be values\"\n  c.icon = 'link'\n  c.inPorts.add 'in',\n    datatype: 'all'\n    description: 'Stream of IPs representing key(odd packets) and\n     value(even packets)'\n  c.outPorts.add 'out',\n    datatype: 'object'\n  c.forwardBrackets = {}\n  c.process (input, output) ->\n    return unless input.hasStream 'in'\n    stream = input.getStream('in').filter (ip) -> ip.type is 'data'\n    count = 0\n    object = {}\n    key = null\n    for packet in stream\n      count++\n      # Even numbers\n      if count % 2 is 0\n        # There's a key that is a string\n        if key?\n          object[key] = packet.data\n          key = null\n        continue\n      # Odd numbers and a string\n      else if typeof packet.data is 'string'\n        key = packet.data\n        continue\n    output.sendDone\n      out: object\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-adapters'\n \ndescribe 'PairsToObject component', ->\n  c = null\n  ins = null\n  out = null\n  loader = null\n\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'adapters/PairsToObject', (err, instance) ->\n      return done err if err\n      c = instance\n      ins = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach ins\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n  afterEach ->\n    c.outPorts.out.detach out\n    out = null\n \n  describe 'when instantiated', ->\n    it 'should have an input port', ->\n      chai.expect(c.inPorts.in).to.be.an 'object'\n    it 'should have an output port', ->\n      chai.expect(c.outPorts.out).to.be.an 'object'\n \n  describe 'given some paired packets', ->\n    it 'turns into an object', (done) ->\n      packets = [{ a: 1, b: 2 }]\n \n      out.on 'data', (data) ->\n        chai.expect(packets.shift()).to.deep.equal data\n      out.on 'disconnect', ->\n        chai.expect(packets.length).to.equal 0\n        done()\n \n      ins.connect()\n      ins.beginGroup()\n      ins.send 'a'\n      ins.send 1\n      ins.send 'b'\n      ins.send 2\n      ins.endGroup()\n      ins.disconnect()\n \n  describe 'given an odd number of packets', ->\n    it 'drops the last packet', (done) ->\n      packets = [{ a: 1 }]\n \n      out.on 'data', (data) ->\n        chai.expect(packets.shift()).to.deep.equal data\n      out.on 'disconnect', ->\n        chai.expect(packets.length).to.equal 0\n        done()\n \n      ins.connect()\n      ins.beginGroup()\n      ins.send 'a'\n      ins.send 1\n      ins.send 'b'\n      ins.endGroup()\n      ins.disconnect()\n \n  describe 'sending non-string as keys', ->\n    it 'drops the corresponding value', (done) ->\n      packets = [{ b: 2 }]\n \n      out.on 'data', (data) ->\n        chai.expect(packets.shift()).to.deep.equal data\n      out.on 'disconnect', ->\n        chai.expect(packets.length).to.equal 0\n        done()\n \n      ins.connect()\n      ins.beginGroup()\n      ins.send { a: 1 }\n      ins.send 1\n      ins.send 'b'\n      ins.send 2\n      ins.endGroup()\n      ins.disconnect()\n \n  describe 'no groups please', ->\n    it 'drops all groups', (done) ->\n      packets = [{ a: 1 }]\n \n      out.on 'data', (data) ->\n        chai.expect(packets.shift()).to.deep.equal data\n      out.on 'disconnect', ->\n        chai.expect(packets.length).to.equal 0\n        done()\n \n      ins.connect()\n      ins.beginGroup 'group'\n      ins.send 'a'\n      ins.send 1\n      ins.endGroup 'group'\n      ins.disconnect()\n"},"adapters/PropertiesToObjects":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.inPorts.add 'in',\n    datatype: 'object'\n  c.outPorts.add 'out',\n    datatype: 'object'\n  c.process (input, output) ->\n    return unless input.hasData 'in'\n    object = input.getData 'in'\n    data = {}\n    for property, objects of object\n      for id, value of objects\n        data[id] = {} unless data[id]\n        data[id][property] = value\n    output.sendDone\n      out: data\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-adapters'\n \ndescribe 'PropertiesToObjects component', ->\n  c = null\n  ins = null\n  out = null\n  loader = null\n\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'adapters/PropertiesToObjects', (err, instance) ->\n      return done err if err\n      c = instance\n      ins = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach ins\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n  afterEach ->\n    c.outPorts.out.detach out\n    out = null\n  describe 'receiving an object', ->\n    it 'should convert it', (done) ->\n      expected = [\n        '< a'\n        {\n          bar:\n            foo: 42\n          hello:\n            baz: 1\n        }\n        '>'\n      ]\n      received = []\n      out.on 'begingroup', (group) ->\n        received.push \"< #{group}\"\n      out.on 'data', (data) ->\n        received.push data\n      out.on 'endgroup', ->\n        received.push '>'\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      ins.beginGroup 'a'\n      ins.send\n        foo:\n          bar: 42\n        baz:\n          hello: 1\n      ins.endGroup()\n"},"ajax/CorsProxy":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nisExternal = (url) ->\n  return false if url.indexOf('data:') is 0\n  (location.href.replace(\"http://\", \"\").replace(\"https://\", \"\").split(\"/\")[0] isnt url.replace(\"http://\", \"\").replace(\"https://\", \"\").split(\"/\")[0])\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Converts a URL to use a CORS-enabling proxy'\n  c.icon = 'arrow-circle-o-right'\n  c.service = 'http://crossorigin.me/'\n  c.inPorts.add 'in',\n    datatype: 'string'\n  c.outPorts.add 'out',\n    datatype: 'string'\n  c.process (input, output) ->\n    return unless input.hasData 'in'\n    payload = input.getData 'in'\n    unless typeof payload is 'string'\n      return output.done new Error 'String required'\n\n    out = payload\n    if noflo.isBrowser() and isExternal payload\n      match_http = /^(https?):\\/\\//\n      path = payload.replace(match_http, '')\n      out = c.service + path\n    output.sendDone\n      out: out\n",tests:"noflo = require 'noflo'\nbaseDir = 'noflo-ajax'\n\ndescribe 'CorsProxy component', ->\n  c = null\n  url = null\n  out = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'ajax/CorsProxy', (err, instance) ->\n      return done err if err\n      c = instance\n      url = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach url\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n  afterEach ->\n    c.outPorts.out.detach out\n    out = null\n\n  describe 'when instantiated', ->\n    it 'should have an in port', ->\n      chai.expect(c.inPorts.in).to.be.an 'object'\n    it 'should have an out port', ->\n      chai.expect(c.outPorts.out).to.be.an 'object'\n\n  describe 'when sending an external url in', ->\n    inputurl = 'http://example.com/mypath.ext'\n    it 'should send path prefixed with corsproxy', (done) ->\n      out.on 'data', (data) ->\n        chai.expect(data).to.be.a 'string'\n        chai.expect(data).to.equal c.service+'example.com/mypath.ext'\n        done()\n      url.send inputurl\n\n  describe 'when sending a local url in', ->\n    inputurl = 'http://localhost:9000/mypath.ext'\n    it 'should send url unmodified', (done) ->\n      out.on 'data', (data) ->\n        chai.expect(data).to.be.a 'string'\n        chai.expect(data).to.equal inputurl\n        done()\n      url.send inputurl\n"},"ajax/Get":{language:"coffeescript",source:"# @runtime noflo-browser\n\nnoflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.icon = 'globe'\n  c.description = 'HTTP GET a URL'\n  c.inPorts.add 'url',\n    datatype: 'string'\n  c.outPorts.add 'out',\n    datatype: 'string'\n  c.outPorts.add 'error',\n    datatype: 'object'\n  c.forwardBrackets =\n    url: ['out', 'error']\n  c.process (input, output) ->\n    return unless input.hasData 'url'\n    url = input.getData 'url'\n\n    req = new XMLHttpRequest\n    req.onreadystatechange = ->\n      return unless req.readyState is 4\n      if req.status is 200\n        output.sendDone\n          out: req.responseText\n        return\n      output.done new Error \"Error loading #{url}\"\n    req.open 'GET', url, true\n    req.send null\n",tests:"noflo = require 'noflo'\nbaseDir = 'noflo-ajax'\n\ndescribe 'Get component', ->\n  c = null\n  url = null\n  out = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'ajax/Get', (err, instance) ->\n      return done err if err\n      c = instance\n      url = noflo.internalSocket.createSocket()\n      c.inPorts.url.attach url\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n  afterEach ->\n    c.outPorts.out.detach out\n    out = null\n\n  describe 'when instantiated', ->\n    it 'should have an url port', ->\n      chai.expect(c.inPorts.url).to.be.an 'object'\n    it 'should have an output port', ->\n      chai.expect(c.outPorts.out).to.be.an 'object'\n    it 'should have an error port', ->\n      chai.expect(c.outPorts.error).to.be.an 'object'\n\n  describe 'fetching an existing URL', ->\n    it 'should return contents as string', (done) ->\n      out.on 'data', (data) ->\n        chai.expect(data).to.be.a 'string'\n        done()\n      url.send '../package.json'\n\n  describe 'fetching an failing URL', ->\n    it 'should return an error', (done) ->\n      err = noflo.internalSocket.createSocket()\n      c.outPorts.error.attach err\n      err.on 'data', (data) ->\n        chai.expect(data).to.be.an 'error'\n        done()\n      url.send 'http://noflojs.org/foo'\n"},"ajax/GetJsonP":{language:"coffeescript",source:"# @runtime noflo-browser\n\nnoflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.icon = 'globe'\n  c.description = 'Get contents via JSONP from a URL'\n  c.inPorts.add 'url',\n    datatype: 'string'\n  c.outPorts.add 'out',\n    datatype: 'string'\n  c.outPorts.add 'error',\n    datatype: 'object'\n  c.forwardBrackets =\n    url: ['out', 'error']\n  c.process (input, output) ->\n    return unless input.hasData 'url'\n    url = input.getData 'url'\n\n    # Construct a unique identifier for the callback\n    id = 'noflo'+(Math.random()*100).toString().replace /\\./g, ''\n\n    # Get the body element\n    body = document.querySelector 'body'\n    s = document.createElement 'script'\n    s.onerror = (e) ->\n      delete window[id]\n      body.removeChild s\n      output.done e\n\n    # Register a function with the unique ID\n    window[id] = (data) ->\n      # Cleanup\n      delete window[id]\n      body.removeChild s\n\n      if data and data.meta and data.meta.status is 404\n        return output.done new Error \"#{url} not found}\"\n\n      output.sendDone\n        out: data\n\n    # Prepare a script element\n    s.type = 'application/javascript'\n\n    if url.indexOf('?') is -1\n      url = \"#{url}?callback=?\"\n\n    s.src = url.replace 'callback=?', \"callback=#{id}\"\n\n    # Place the script element into DOM\n    body.appendChild s\n",tests:"noflo = require 'noflo'\nbaseDir = 'noflo-ajax'\n\ndescribe 'GetJsonP component', ->\n  c = null\n  url = null\n  out = null\n  err = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'ajax/GetJsonP', (err, instance) ->\n      return done err if err\n      c = instance\n      url = noflo.internalSocket.createSocket()\n      c.inPorts.url.attach url\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n    err = noflo.internalSocket.createSocket()\n    c.outPorts.error.attach err\n  afterEach ->\n    c.outPorts.out.detach out\n    out = null\n    c.outPorts.error.detach err\n    err = null\n\n  describe 'when instantiated', ->\n    it 'should have an url port', ->\n      chai.expect(c.inPorts.url).to.be.an 'object'\n    it 'should have an output port', ->\n      chai.expect(c.outPorts.out).to.be.an 'object'\n\n  describe 'fetching a Gist', ->\n    gistUrl = 'https://api.github.com/gists/6608098?callback=?'\n    it 'should be able to emit the contents', (done) ->\n      out.on 'data', (data) ->\n        chai.expect(data).to.be.a 'object'\n        chai.expect(data.data.description).to.be.a 'string'\n        done()\n      url.send gistUrl\n    it 'should have removed the temporary function', ->\n      found = false\n      for key, value of window\n        if key.substr(0, 5) is 'noflo' and typeof value is 'function'\n          found = true\n      chai.expect(found).to.equal false\n    it 'should have removed the script tag', ->\n      found = false\n      scripts = document.querySelectorAll('script[src]')\n      for script in scripts\n        if script.src.indexOf('api.github.com') isnt -1\n          found = true\n      chai.expect(found).to.equal false\n\n  describe 'fetching a Gist without defined callback', ->\n    gistUrl = 'https://api.github.com/gists/6608098'\n    it 'should be able to emit the contents', (done) ->\n      out.on 'data', (data) ->\n        chai.expect(data).to.be.a 'object'\n        chai.expect(data.data.description).to.be.a 'string'\n        done()\n      url.send gistUrl\n    it 'should have removed the temporary function', ->\n      found = false\n      for key, value of window\n        if key.substr(0, 5) is 'noflo' and typeof value is 'function'\n          found = true\n      chai.expect(found).to.equal false\n    it 'should have removed the script tag', ->\n      found = false\n      scripts = document.querySelectorAll('script[src]')\n      for script in scripts\n        if script.src.indexOf('api.github.com') isnt -1\n          found = true\n      chai.expect(found).to.equal false\n\n  describe 'fetching a non-existing Gist', ->\n    gistUrl = 'https://api.github.com/gists/does_not_exist'\n    it 'should send to the error port', (done) ->\n      err.on 'data', (data) ->\n        chai.expect(data).to.be.an 'error'\n        done()\n      url.send gistUrl\n    it 'should have removed the temporary function', ->\n      found = false\n      for key, value of window\n        if key.substr(0, 5) is 'noflo' and typeof value is 'function'\n          found = true\n      chai.expect(found).to.equal false\n    it 'should have removed the script tag', ->\n      found = false\n      scripts = document.querySelectorAll('script[src]')\n      for script in scripts\n        if script.src.indexOf('api.github.com') isnt -1\n          found = true\n      chai.expect(found).to.equal false\n  describe 'fetching a non-existing document', ->\n    gistUrl = 'http://localhost:9000/foo/bar/baz'\n    it 'should send to the error port', (done) ->\n      err.on 'data', (data) ->\n        chai.expect(typeof data).to.equal 'object'\n        done()\n      url.send gistUrl\n    it 'should have removed the temporary function', ->\n      found = false\n      for key, value of window\n        if key.substr(0, 5) is 'noflo' and typeof value is 'function'\n          found = true\n      chai.expect(found).to.equal false\n    it 'should have removed the script tag', ->\n      found = false\n      scripts = document.querySelectorAll('script[src]')\n      for script in scripts\n        if script.src.indexOf('api.github.com') isnt -1\n          found = true\n      chai.expect(found).to.equal false\n"},"amd/Configure":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.icon = 'dot-circle-o'\n  c.description = 'Configure Require.js'\n  c.inPorts.add 'config',\n    datatype: 'object'\n    description: 'Require.js configuration object'\n  c.outPorts.add 'ready',\n    datatype: 'bang'\n    required: false\n  c.outPorts.add 'error',\n    datatype: 'object'\n    required: false\n\n  noflo.helpers.WirePattern c,\n    in: 'config'\n    out: 'ready'\n    forwardGroups: true\n    async: true\n  , (data, groups, out, callback) ->\n    unless window.requirejs\n      return callback new Error 'Require.js not available'\n      return\n    window.requirejs.config data\n    out.send true\n    callback()\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-amd'\n\ndescribe 'Configure component', ->\n  c = null\n  config = null\n  ready = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'amd/Configure', (err, instance) ->\n      return done err if err\n      c = instance\n      config = noflo.internalSocket.createSocket()\n      c.inPorts.config.attach config\n      done()\n  beforeEach ->\n    ready = noflo.internalSocket.createSocket()\n    c.outPorts.ready.attach ready\n  afterEach ->\n    c.outPorts.ready.detach ready\n\n  describe 'when instantiated', ->\n    it 'should have an config inport', ->\n      chai.expect(c.inPorts.config).to.be.an 'object'\n    it 'should have an ready outport', ->\n      chai.expect(c.outPorts.ready).to.be.an 'object'\n\n  describe 'when configuring', ->\n    it 'should emit ready when done', (done) ->\n      ready.on 'data', (data) ->\n        chai.expect(data).to.be.a 'boolean'\n        done()\n      config.send\n        config:\n          'fixtures/hello.js':\n            greeting: 'Hello'\n"},"amd/Require":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.icon = 'dot-circle-o'\n  c.description = 'Load an AMD module'\n\n  c.inPorts.add 'path',\n    datatype: 'string'\n    description: 'Path of the module to load'\n  c.outPorts.add 'module',\n    datatype: 'object'\n  c.outPorts.add 'error',\n    datatype: 'object'\n    required: false\n\n  noflo.helpers.WirePattern c,\n    in: 'path'\n    out: 'module'\n    forwardGroups: true\n    async: true\n  , (path, groups, out, callback) ->\n    return callback new Error 'Require.js not available' unless window.requirejs\n    window.requirejs [path], (module) ->\n      out.beginGroup path\n      out.send module\n      out.endGroup path\n      do callback\n    , (err) ->\n      callback err\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-amd'\n\ndescribe 'Require component', ->\n  c = null\n  path = null\n  module = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'amd/Require', (err, instance) ->\n      return done err if err\n      c = instance\n      path = noflo.internalSocket.createSocket()\n      c.inPorts.path.attach path\n      done()\n  beforeEach ->\n    module = noflo.internalSocket.createSocket()\n    c.outPorts.module.attach module\n  afterEach ->\n    c.outPorts.module.detach module\n\n  describe 'when instantiated', ->\n    it 'should have an path inport', ->\n      chai.expect(c.inPorts.path).to.be.an 'object'\n    it 'should have an module outport', ->\n      chai.expect(c.outPorts.module).to.be.an 'object'\n\n  describe 'loading a module that exists', ->\n    it 'should return the module as expected', (done) ->\n      module.on 'data', (module) ->\n        chai.expect(module).to.be.a 'function'\n        chai.expect(module('Foo')).to.equal 'Hello Foo'\n        done()\n      path.send 'fixtures/hello.js'\n\n  describe 'loading a missing module', ->\n    it 'should return the error as expected', (done) ->\n      err = noflo.internalSocket.createSocket()\n      c.outPorts.error.attach err\n\n      err.on 'data', (error) ->\n        chai.expect(error).to.be.an 'error'\n        chai.expect(error.requireType).to.equal 'scripterror'\n        chai.expect(error.requireModules).to.be.an 'array'\n        chai.expect(error.requireModules[0]).to.equal 'fixtures/foo.js'\n        done()\n      path.send 'fixtures/foo.js'\n\n  describe 'loading a module that requires another module', ->\n    it 'should return the module as expected', (done) ->\n      @timeout 20000\n      module.on 'data', (module) ->\n        chai.expect(module).to.be.a 'function'\n        chai.expect(module('Foo')).to.equal 'Hello Foo'\n        done()\n      setTimeout ->\n        path.send 'fixtures/world.js'\n      , 1000\n"},"assembly-utils/All":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.description = 'Collect streamed Assemblies from all connected inputs into a single message';\n  c.icon = 'fast-forward';\n\n  c.inPorts.add('in', {\n    datatype: 'object',\n    addressable: true,\n  });\n  c.outPorts.add('out', {\n    datatype: 'object',\n  });\n  c.forwardBrackets = {};\n  return c.process((input, output) => {\n    const attachedIndexes = input.attached('in');\n    const indexesWithStreams = attachedIndexes\n      .filter((idx) => input.hasStream(['in', idx]));\n    if (indexesWithStreams.length < attachedIndexes.length) {\n      // Still waiting for streams\n      return;\n    }\n    const streams = indexesWithStreams.map((idx) => input\n      .getStream(['in', idx]));\n    const message = {\n      errors: [],\n      data: [],\n    };\n    streams.forEach((stream) => {\n      const streamData = [];\n      stream.forEach((ip) => {\n        if (ip.type !== 'data') {\n          return;\n        }\n        if (ip.data.errors && ip.data.errors.length) {\n          // Error anywhere in input is an error in the whole assembly\n          message.errors = message.errors.concat(ip.data.errors);\n        }\n        streamData.push(ip.data);\n      });\n      message.data.push(streamData);\n    });\n    output.sendDone({\n      out: message,\n    });\n  });\n};\n",tests:"name: All component\ntopic: assembly-utils/All\nfixture:\n  type: fbp\n  data: |\n    INPORT=only.IN:only\n    OUTPORT=all.OUT:out\n    only(objects/SplitArray) OUT -> IN all(assembly-utils/All)\ncases:\n  -\n    name: with a single connected index and no errors\n    assertion: should produce an assembly with an array\n    inputs:\n      only:\n        - one\n        - two\n        - three\n    expect:\n      out:\n        -\n          path: '$.errors'\n          equals: []\n        -\n          path: '$.data[0]'\n          equals:\n            - one\n            - two\n            - three\n  -\n    name: with a single connected index and an error\n    assertion: should produce an assembly with an error\n    inputs:\n      only:\n        -\n          errors: []\n          data: one\n        -\n          errors:\n            - message: hello world\n          data: two\n        -\n          errors: []\n          data: three\n    expect:\n      out:\n        -\n          path: '$.errors[0].message'\n          equals: hello world\n        -\n          path: '$.data[0]'\n          equals:\n            -\n              errors: []\n              data: one\n            -\n              errors:\n                - message: hello world\n              data: two\n            -\n              errors: []\n              data: three\n\n"},"assembly-utils/ComparePath":{language:"javascript",source:"/* eslint eqeqeq: 0 */\nconst { default: Component, fail } = require('noflo-assembly');\nconst jsonpath = require('jsonpath');\n\nclass ComparePath extends Component {\n  constructor() {\n    super({\n      description: 'Compare an object value extracted with a JSONPath expression',\n      icon: 'check',\n      inPorts: {\n        in: {\n          datatype: 'object',\n          description: 'Object to query',\n          required: true,\n        },\n        path: {\n          datatype: 'string',\n          description: 'JSONPath expression',\n          required: true,\n          control: true,\n        },\n        comparison: {\n          datatype: 'number',\n          description: 'Value to compare against',\n          required: true,\n          control: true,\n        },\n        operator: {\n          datatype: 'string',\n          description: 'Comparison operator',\n          control: true,\n          default: '==',\n          values: [\n            '==',\n            '!=',\n            '>',\n            '<',\n            '>=',\n            '<=',\n          ],\n        },\n      },\n      outPorts: {\n        pass: {\n          datatype: 'object',\n          description: 'Object that passed the comparison',\n        },\n        fail: {\n          datatype: 'object',\n          description: 'Object that failed the comparison',\n        },\n      },\n    });\n  }\n\n  handle(input, output) {\n    if (!input.hasData('in', 'path', 'comparison', 'operator')) {\n      return;\n    }\n    const [msg, path, comparison, operator] = input.getData('in', 'path', 'comparison', 'operator');\n    if (!this.validate(msg)) {\n      output.sendDone({\n        fail: msg,\n      });\n      return;\n    }\n\n    let result;\n    try {\n      result = jsonpath.value(msg, path);\n    } catch (e) {\n      output.sendDone({\n        fail: fail(msg, e),\n      });\n      return;\n    }\n\n    let passed = false;\n    switch (operator) {\n      case '==': {\n        passed = result == comparison;\n        break;\n      }\n      case '!=': {\n        passed = result != comparison;\n        break;\n      }\n      case '>': {\n        passed = result > comparison;\n        break;\n      }\n      case '<': {\n        passed = result < comparison;\n        break;\n      }\n      case '>=': {\n        passed = result >= comparison;\n        break;\n      }\n      case '<=': {\n        passed = result <= comparison;\n        break;\n      }\n      default: {\n        output.done(new Error(`Unknown operator ${operator}`));\n        return;\n      }\n    }\n    if (passed) {\n      output.sendDone({\n        pass: msg,\n      });\n      return;\n    }\n    output.sendDone({\n      fail: msg,\n    });\n  }\n}\n\nexports.getComponent = () => new ComparePath();\n",tests:"name: ComparePath component\ntopic: assembly-utils/ComparePath\ncases:\n  -\n    name: with an object containing a passing value\n    assertion: should send the object to the PASS route\n    inputs:\n      path: '$.guide.answer'\n      comparison: 41\n      operator: '>'\n      in:\n        errors: []\n        guide:\n          answer: 42\n    expect:\n      pass:\n        path: '$.guide.answer'\n        equals: 42\n  -\n    name: with an object containing a failing value\n    assertion: should send the object to the FAIL route\n    inputs:\n      path: '$.guide.answer'\n      comparison: 41\n      operator: '<'\n      in:\n        errors: []\n        guide:\n          answer: 42\n    expect:\n      fail:\n        path: '$.guide.answer'\n        equals: 42\n  -\n    name: with an invalid JSONPath\n    assertion: should send the object with errors to the FAIL route\n    inputs:\n      path: '$$.guide.answer'\n      comparison: 41\n      operator: '<'\n      in:\n        errors: []\n        guide:\n          answer: 42\n    expect:\n      fail:\n        -\n          path: '$.guide.answer'\n          equals: 42\n        -\n          path: '$.errors.length'\n          equals: 1\n"},"assembly-utils/Fork":{language:"javascript",source:"const noflo = require('noflo');\nconst { fork } = require('noflo-assembly');\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.description = 'Fork assembly message to all connections';\n  c.icon = 'angle-double-left';\n  c.inPorts.add('in', {\n    datatype: 'object',\n  });\n  c.outPorts.add('out', {\n    datatype: 'object',\n    addressable: true,\n  });\n  return c.process((input, output) => {\n    if (!input.hasData('in')) {\n      return;\n    }\n    const message = input.getData('in');\n    const attached = c.outPorts.ports.out.listAttached();\n    attached.forEach((index) => {\n      output.send({\n        out: new noflo.IP('data', fork(message), {\n          index,\n        }),\n      });\n    });\n    output.done();\n  });\n};\n",tests:"name: Fork component\ntopic: assembly-utils/Fork\nfixture:\n  type: fbp\n  data: |\n    INPORT=fork.IN:in\n    OUTPORT=one.OUT:one\n    OUTPORT=two.OUT:two\n    fork(assembly-utils/Fork) OUT[0] -> IN one(core/Repeat)\n    fork() OUT[1] -> IN two(core/Repeat)\ncases:\n  - name: with a single packet\n    assertion: it should send to all connected outports\n    inputs:\n      in:\n        data: foo\n        errors: []\n    expect:\n      one:\n        -\n          path: '$.errors'\n          equals: []\n        -\n          path: '$.data'\n          equals: foo\n      two:\n        -\n          path: '$.errors'\n          equals: []\n        -\n          path: '$.data'\n          equals: foo\n"},"assembly-utils/FromAssembly":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.description = 'Convert an assembly message to a regular NoFlo packet';\n  c.inPorts.add('in', {\n    datatype: 'object',\n  });\n  c.outPorts.add('out', {\n    datatype: 'object',\n  });\n  c.outPorts.add('error', {\n    datatype: 'object',\n  });\n  return c.process((input, output) => {\n    if (!input.hasData('in')) {\n      return;\n    }\n    const data = input.getData('in');\n    if (data.errors && data.errors.length) {\n      output.done(data.errors[0]);\n      return;\n    }\n    output.sendDone({\n      out: {\n        ...data,\n        errors: undefined,\n      },\n    });\n  });\n};\n",tests:"name: FromAssembly component\ntopic: assembly-utils/FromAssembly\ncases:\n  -\n    name: with a assembly message without errors\n    assertion: should send the data to OUT\n    inputs:\n      in:\n        errors: []\n        data: 42\n    expect:\n      out:\n        - path: '$.data'\n          equals: 42\n  -\n    name: with a assembly message containing errors\n    assertion: should send the error to ERROR\n    inputs:\n      in:\n        errors:\n          - message: 'Foo'\n        data: 42\n    expect:\n      error:\n        - path: '$.message'\n          equals: 'Foo'\n"},"assembly-utils/Merge":{language:"javascript",source:"const noflo = require('noflo');\nconst { merge } = require('noflo-assembly');\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.description = 'Merge assembly message from all connections';\n  c.icon = 'angle-double-right';\n  c.inPorts.add('in', {\n    datatype: 'object',\n    addressable: true,\n  });\n  c.outPorts.add('out', {\n    datatype: 'object',\n  });\n  return c.process((input, output) => {\n    const attachedIndexes = input.attached('in');\n    const indexesWithData = attachedIndexes\n      .filter((idx) => input.hasData(['in', idx]));\n    if (indexesWithData.length < attachedIndexes.length) {\n      // Still waiting for data\n      return;\n    }\n    const messages = indexesWithData.map((idx) => input\n      .getData(['in', idx]));\n    let message = {};\n    let errors = [];\n    messages.forEach((msg) => {\n      if (msg.errors && msg.errors.length) {\n        errors = errors.concat(msg.errors);\n      }\n      message = merge(message, msg);\n    });\n    output.sendDone({\n      out: {\n        ...message,\n        errors,\n      },\n    });\n  });\n};\n",tests:"name: Merge component\ntopic: assembly-utils/Merge\nfixture:\n  type: fbp\n  data: |\n    INPORT=one.IN:one\n    INPORT=two.IN:two\n    OUTPORT=merge.OUT:out\n    one(core/Repeat) OUT -> IN[0] merge(assembly-utils/Merge)\n    two(core/Repeat) OUT -> IN[1] merge()\ncases:\n  - name: with a two different packets\n    assertion: it should send a merged packet\n    inputs:\n      one:\n        data1: foo\n        errors: []\n      two:\n        data2: bar\n        errors: []\n    expect:\n      out:\n        -\n          path: '$.errors'\n          equals: []\n        -\n          path: '$.data1'\n          equals: foo\n        -\n          path: '$.data2'\n          equals: bar\n  - name: with a two packets with overlapping keys\n    assertion: it should send a merged packet with lowest index winning\n    inputs:\n      one:\n        data: foo\n        errors: []\n      two:\n        data: bar\n        errors: []\n    expect:\n      out:\n        -\n          path: '$.errors'\n          equals: []\n        -\n          path: '$.data'\n          equals: foo\n  - name: with a two packets with overlapping keys in reverse order\n    assertion: it should send a merged packet with lowest index winning\n    inputs:\n      two:\n        data: bar\n        errors: []\n      one:\n        data: foo\n        errors: []\n    expect:\n      out:\n        -\n          path: '$.errors'\n          equals: []\n        -\n          path: '$.data'\n          equals: foo\n  - name: with error in a packet\n    assertion: it should send a merged packet containing the error\n    inputs:\n      one:\n        data: foo\n        errors: []\n      two:\n        data: bar\n        errors:\n          - message: hello world\n    expect:\n      out:\n        -\n          path: '$.errors[0].message'\n          equals: hello world\n        -\n          path: '$.data'\n          equals: foo\n  - name: with error in both packets\n    assertion: it should send a merged packet containing both errors\n    inputs:\n      one:\n        data: foo\n        errors:\n          - message: hello world\n      two:\n        data: bar\n        errors:\n          - message: hei maailma\n    expect:\n      out:\n        -\n          path: '$.errors[0].message'\n          equals: hello world\n        -\n          path: '$.errors[1].message'\n          equals: hei maailma\n        -\n          path: '$.data'\n          equals: foo\n"},"assembly-utils/ToAssembly":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.description = 'Convert regular NoFlo data to an assembly message';\n  c.inPorts.add('in', {\n    datatype: 'all',\n  });\n  c.inPorts.add('error', {\n    datatype: 'object',\n  });\n  c.outPorts.add('out', {\n    datatype: 'object',\n  });\n  return c.process((input, output) => {\n    if (input.hasData('in')) {\n      const data = input.getData('in');\n      output.sendDone({\n        out: {\n          errors: [],\n          data,\n        },\n      });\n      return;\n    }\n    if (input.hasData('error')) {\n      const error = input.getData('error');\n      output.sendDone({\n        out: {\n          errors: [\n            error,\n          ],\n        },\n      });\n    }\n  });\n};\n",tests:"name: ToAssembly component\ntopic: assembly-utils/ToAssembly\ncases:\n  -\n    name: with an input value\n    assertion: should wrap it into an Assembly message\n    inputs:\n      in: 42\n    expect:\n      out:\n        - path: '$.data'\n          equals: 42\n        - path: '$.errors'\n          equals: []\n  -\n    name: with an error\n    assertion: should wrap it into an Assembly message\n    inputs:\n      error:\n        message: 'Foo'\n    expect:\n      out:\n        - path: '$.errors[0].message'\n          equals: 'Foo'\n"},"canvas/ClearRect":{language:"coffeescript",source:"noflo = require 'noflo'\nArrayableHelper = require 'noflo-helper-arrayable'\n\nclass ClearRect extends noflo.Component\n  description: 'Clear rectangle'\n  icon: 'eraser'\n  constructor: ->\n    super()\n    ports =\n      point:\n        datatype: 'object'\n        description: 'top left point'\n        required: true\n      width:\n        datatype: 'number'\n        required: true\n      height:\n        datatype: 'number'\n        required: true\n    \n    ArrayableHelper @, 'clearrect', ports\n\nexports.getComponent = -> new ClearRect\n"},"canvas/ColorArrayToCss":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Convert a RGB array to a hex value'\n  c.inPorts.add 'in',\n    datatype: 'array'\n  c.outPorts.add 'out',\n    datatype: 'string'\n  \n  hex = (n) ->\n    s = n.toString(16)\n    if s.length is 1\n      s = \"0\"+s\n    return s\n\n  c.process (input, output) ->\n    return unless input.hasData 'in'\n    rgb = input.getData 'in'\n    out = \"#\"+hex(rgb[0])+hex(rgb[1])+hex(rgb[2])\n    output.sendDone\n      out: out\n    return\n"},"canvas/Draw":{language:"coffeescript",source:"noflo = require 'noflo'\n\nTAU = Math.PI * 2\n\nclass DrawCommands\n  constructor: (@context, @canvas) ->\n\n  parse: (commands, clearEvery = false) ->\n    if clearEvery\n      @context.clearRect 0, 0, @canvas.width, @canvas.height\n    @parseThing commands\n\n  # Recursively parse things and arrays of things\n  parseThing: (thing, before, after) =>\n    if thing? and thing.type? and @[thing.type]?\n      if before?\n        before()\n      @[thing.type](thing)\n      if after?\n        after()\n    else if thing instanceof Array\n      for item in thing\n        continue unless item?\n        @parseThing item, before, after\n\n  clearRect: (clearRect) =>\n    x = clearRect.point.x\n    y = clearRect.point.y\n    w = clearRect.width\n    h = clearRect.height\n    @context.clearRect(x, y, w, h)\n\n  strokeStyle: (data) =>\n    @context.strokeStyle = data.value\n\n  lineWidth: (data) =>\n    @context.lineWidth = data.value\n\n  fillStyle: (data) =>\n    @context.fillStyle = data.value\n\n  stroke: (stroke) =>\n    # Cache current style\n    if stroke.strokestyle?\n      oldStyle = @context.strokeStyle\n      @context.strokeStyle = stroke.strokestyle\n    if stroke.linewidth?\n      oldWidth = @context.linewidth\n      @context.lineWidth = stroke.linewidth\n    # Stroke each thing\n    before = ->\n      @context.beginPath()\n    after = ->\n      if stroke.closepath\n        @context.closePath()\n      @context.stroke()\n    @parseThing stroke.items, before.bind(@), after.bind(@)\n    # Restore style\n    if oldStyle?\n      @context.strokeStyle = oldStyle\n    if oldWidth?\n      @context.lineWidth = oldWidth\n\n  fill: (fill) =>\n    # Cache current style\n    if fill.fillstyle?\n      oldStyle = @context.fillStyle\n      @context.fillStyle = fill.fillstyle\n    # Fill each thing\n    before = ->\n      @context.beginPath()\n    after = ->\n      @context.closePath()\n      @context.fill()\n    @parseThing fill.items, before.bind(@), after.bind(@)\n    # Restore style\n    if oldStyle?\n      @context.fillStyle = oldStyle\n\n  bezierCurve: (curve) =>\n    @context.bezierCurveTo(curve.control1.x, curve.control1.y, curve.control2.x, curve.control2.y, curve.end.x, curve.end.y)\n\n  pathItem: (thing, i) =>\n    # Handle arrays of points\n    if thing instanceof Array\n      for child, j in thing\n        @pathItem child, j\n      return\n    if thing.type?\n      switch thing.type\n        when 'point'\n          if i is 0\n            @context.moveTo thing.x, thing.y\n          else\n            @context.lineTo thing.x, thing.y\n        when 'beziercurve'\n          @bezierCurve thing\n        when 'arc'\n          @arc thing\n\n  path: (path) =>\n    # Build the path\n    for thing, i in path.items\n      continue unless thing?\n      @pathItem thing, i\n\n  group: (group) =>\n    # Apply drawing operations\n    for thing in group.groupables\n      continue unless thing? and thing.type? and @[thing.type]?\n      @[thing.type].call @, thing\n\n  transform: (transform, recurse) =>\n    # Apply transformations\n    if transform.translate?\n      @context.translate transform.translate.x, transform.translate.y\n    if transform.rotate?\n      @context.rotate transform.rotate\n    if transform.scaleboth # non-zero\n      @context.scale transform.scaleboth, transform.scaleboth\n    else if transform.scale? and transform.scale.x and transform.scale.y # non-0\n      @context.scale transform.scale.x, transform.scale.y\n    # Apply drawing operations\n    @parseThing transform.items\n    # Recurse\n    if recurse? and recurse > 0\n      @transform transform, recurse-1\n    # Undo transformations\n    if transform.scaleboth # non-zero\n      @context.scale 1/transform.scaleboth, 1/transform.scaleboth\n    else if transform.scale? and transform.scale.x and transform.scale.y # non-0\n      @context.scale 1/transform.scale.x, 1/transform.scale.y\n    if transform.rotate?\n      @context.rotate 0-transform.rotate\n    if transform.translate?\n      @context.translate 0-transform.translate.x, 0-transform.translate.y\n\n  recurse: (recurse) =>\n    for thing in recurse.recursables\n      continue unless thing?\n      if thing.type is 'transform'\n        @transform thing, recurse.count\n\n  rectangle: (rect) =>\n    x = rect.point.x\n    y = rect.point.y\n    w = rect.width\n    h = rect.height\n    @context.moveTo x, y\n    @context.lineTo x+w, y\n    @context.lineTo x+w, y+h\n    @context.lineTo x, y+h\n    @context.lineTo x, y\n\n  fillRect: (fillrect) =>\n    x = fillrect.point.x\n    y = fillrect.point.y\n    w = fillrect.width\n    h = fillrect.height\n    @context.fillRect x, y, w, h\n\n  strokeRect: (strokerect) =>\n    x = strokerect.point.x\n    y = strokerect.point.y\n    w = strokerect.width\n    h = strokerect.height\n    @context.strokeRect x, y, w, h\n\n  arc: (arc) =>\n    @context.arc(arc.center.x, arc.center.y, arc.radius, arc.start, arc.end, arc.reverse)\n\n  circle: (circle) =>\n    @context.arc(circle.center.x, circle.center.y, circle.radius, 0, TAU)\n\n  drawimage: (drawimage) =>\n    return unless drawimage.image?\n    if drawimage.sourcerect? and drawimage.destrect?\n      d = drawimage.destrect\n      s = drawimage.sourcerect\n      @context.drawImage drawimage.image, d.point.x, d.point.y, d.width, d.height, s.point.x, s.point.y, s.width, s.height\n      return\n    if drawimage.destrect?\n      d = drawimage.destrect\n      @context.drawImage drawimage.image, d.point.x, d.point.y, d.width, d.height\n      return\n    if drawimage.destpoint?\n      p = drawimage.destpoint\n      @context.drawImage drawimage.image, p.x, p.y\n      return\n    # Default\n    @context.drawImage drawimage.image, 0, 0\n                  \nexports.getComponent = -> new Draw\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Draws received drawing commands'\n  c.icon = 'pencil'\n  c.inPorts.add 'canvas',\n    datatype: 'object'\n    control: true\n  c.inPorts.add 'commands',\n    datatype: 'object'\n    addressable: true\n  c.inPorts.add 'tick',\n    datatype: 'bang'\n  c.inPorts.add 'drawevery',\n    datatype: 'boolean'\n    default: false\n    control: true\n  c.inPorts.add 'clearevery',\n    datatype: 'boolean'\n    default: false\n    control: true\n  c.outPorts.add 'canvas',\n    datatype: 'object'\n  c.outPorts.add 'error',\n    datatype: 'object'\n\n  c.scopes = {}\n  c.tearDown = (callback) ->\n    c.scopes = {}\n    do callback\n  ensureScope = (scope, canvas) ->\n    if c.scopes[scope]\n      unless c.scopes[scope].canvas is canvas\n        # Canvas has changed for this context\n        c.scopes[scope].canvas = canvas\n        c.scopes[scope].context = canvas.getContext '2d'\n      return c.scopes[scope]\n    c.scopes[scope] =\n      commands: []\n      context: canvas.getContext '2d'\n      canvas: canvas\n    return c.scopes[scope]\n\n  c.forwardBrackets =\n    tick: ['canvas', 'error']\n  c.process (input, output) ->\n    # We always need a canvas to operate on\n    return unless input.hasData 'canvas'\n    # Check if options are expected\n    return if input.attached('drawevery').length and not input.hasData 'drawevery'\n    return if input.attached('clearevery').length and not input.hasData 'clearevery'\n\n    if input.hasData 'tick'\n      input.getData 'tick'\n      clearEvery = false\n      if input.hasData 'clearevery'\n        clearEvery = input.getData 'clearevery'\n      canvas = input.getData 'canvas'\n      scope = ensureScope input.scope, canvas\n      # Draw all commands out\n      draw = new DrawCommands scope.context, canvas\n      draw.parse scope.commands, clearEvery\n      output.sendDone\n        canvas: canvas\n      return\n\n    # Check if we've received drawing commands\n    indexesWithData = input.attached('commands').filter (idx) ->\n      input.hasData ['commands', idx]\n    return unless indexesWithData.length\n\n    drawEvery = false\n    if input.hasData 'drawevery'\n      drawEvery = input.getData 'drawevery'\n    clearEvery = false\n    if input.hasData 'clearevery'\n      clearEvery = input.getData 'clearevery'\n\n    canvas = input.getData 'canvas'\n    scope = ensureScope input.scope, canvas\n    indexesWithData.forEach (idx) ->\n      # Read commands into scope\n      scope.commands[idx] = input.getData ['commands', idx]\n\n    unless drawEvery\n      # drawevery not enabled, wait for tick\n      output.done()\n      return\n\n    # Draw the list of commands\n    draw = new DrawCommands scope.context, canvas\n    draw.parse scope.commands, clearEvery\n\n    output.sendDone\n      canvas: canvas\n    return\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  Canvas = require 'canvas'\n  testutils = require './testutils'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-canvas'\n\ndescribe 'Draw component', ->\n  c = null\n  loader = null\n  before ->\n    loader = new noflo.ComponentLoader baseDir\n  beforeEach (done) ->\n    @timeout 4000\n    loader.load 'canvas/Draw', (err, instance) ->\n      return done err if err\n      c = instance\n      done()\n\n  describe 'when instantiated', ->\n    it 'should have an input port', ->\n      chai.expect(c.inPorts.canvas).to.be.an 'object'\n    it 'should have an output port', ->\n      chai.expect(c.outPorts.canvas).to.be.an 'object'\n\n  describe 'when passed commands', ->\n    canvas = testutils.createCanvas 200,200\n    s_canvas = null\n    s_commands = null\n    s_tick = null\n    so_canvas = null\n    beforeEach ->\n      s_canvas = noflo.internalSocket.createSocket()\n      s_commands = noflo.internalSocket.createSocket()\n      s_tick = noflo.internalSocket.createSocket()\n      so_canvas = noflo.internalSocket.createSocket()\n      c.inPorts.canvas.attach s_canvas\n      c.inPorts.commands.attach s_commands\n      c.inPorts.tick.attach s_tick\n      c.outPorts.canvas.attach so_canvas\n    commands = [\n      {\n        type: 'fill'\n        items: {type: 'rectangle', point: {x: 0, y: 0}, width: 100, height: 100}\n        fillstyle: '#000000'\n      }\n      {\n        type: 'fill'\n        items: {type: 'rectangle', point: {x: 100, y: 0}, width: 100, height: 100}\n        fillstyle: '#FFFFFF'\n      }\n      {\n        type: 'fill'\n        items: {type: 'rectangle', point: {x: 0, y: 100}, width: 100, height: 100}\n        fillstyle: '#0000FF'\n      }\n      {\n        type: 'fill'\n        items: {type: 'rectangle', point: {x: 100, y: 100}, width: 100, height: 100}\n        fillstyle: '#00FF00'\n      }\n    ]\n    expectedPixels = [\n      [  0,   0,   0, 255] # Black\n      [255, 255, 255, 255] # White\n      [  0,   0, 255, 255] # Blue\n      [  0, 255,   0, 255] # Green\n    ]\n    it 'should draw the correct image', (done) ->\n      so_canvas.once \"data\", (can) ->\n        # Check pixels\n        for command, index in commands\n          context = can.getContext '2d'\n          point = commands[index].items.point\n          # Translate point by 10 to account for antialiasing\n          pixel = context.getImageData(point.x+10, point.y+10, 1, 1).data\n          expectedPixel = expectedPixels[index]\n          # Check rgba values of canvas pixel\n          for i in [0..3]\n            chai.expect(pixel[i]).to.equal expectedPixel[i]\n        done()\n\n      s_canvas.send canvas\n      s_commands.send commands\n      s_tick.send()\n"},"canvas/DrawImage":{language:"coffeescript",source:"noflo = require 'noflo'\nArrayableHelper = require 'noflo-helper-arrayable'\n\nclass DrawImage extends noflo.Component\n  description: 'Draws the specified image'\n  icon: 'pencil-square'\n  constructor: ->\n    super()\n    ports =\n      image:\n        description: 'canvas, img, or video to draw'\n        datatype: 'object'\n        required: true\n      destpoint:\n        description: 'destination point (full size)'\n        datatype: 'object'\n        default:\n          x: 0\n          y: 0\n        required: false\n      destrect:\n        description: 'destination rect, to scale'\n        datatype: 'object'\n        required: false\n      sourcerect:\n        description: 'source rect, to scale'\n        datatype: 'object'\n        required: false\n\n    ArrayableHelper @, 'drawimage', ports\n\nexports.getComponent = -> new DrawImage\n"},"canvas/Fill":{language:"coffeescript",source:"noflo = require 'noflo'\nArrayableHelper = require 'noflo-helper-arrayable'\n\nclass Fill extends noflo.Component\n  description: 'Fills the received paths, rectangles, circles, and arcs'\n  icon: 'square'\n  constructor: ->\n    super()\n    ports =\n      items:\n        datatype: 'object'\n        description: 'shapes (paths, circles, and rectangles) to fill'\n        addressable: true\n        required: true\n      fillstyle:\n        datatype: 'string'\n        description: 'css color string'\n        required: false\n\n    ArrayableHelper @, 'fill', ports\n\nexports.getComponent = -> new Fill\n"},"canvas/FillRect":{language:"coffeescript",source:"noflo = require 'noflo'\nArrayableHelper = require 'noflo-helper-arrayable'\n\nclass FillRect extends noflo.Component\n  description: 'Fills a rectangle'\n  icon: 'pencil-square'\n  constructor: ->\n    super()\n    ports =\n      point:\n        datatype: 'object'\n        description: 'top left point'\n        required: true\n      width:\n        datatype: 'number'\n        required: true\n      height:\n        datatype: 'number'\n        required: true\n    \n    ArrayableHelper @, 'fillrect', ports\n\n  exports.getComponent = -> new FillRect\n"},"canvas/FillStyle":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Sets the global fill style'\n  c.icon = 'pencil-square-o'\n  c.inPorts.add 'style',\n    datatype: 'string'\n  c.outPorts.add 'fillstyle',\n    datatype: 'object'\n  c.process (input, output) ->\n    return unless input.hasData 'style'\n    fillStyle =\n      type: 'fillStyle'\n      value: input.getData 'style'\n    output.sendDone\n      out: new noflo.IP 'data', fillStyle\n    return\n"},"canvas/Group":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Group drawing commands or primatives into a flattened array.'\n  c.icon = 'folder-o'\n  c.inPorts.add 'items',\n    datatype: 'object'\n    addressable: true\n  c.outPorts.add 'group',\n    datatype: 'array'\n  c.process (input, output) ->\n    indexesWithData = input.attached('items').filter (idx) ->\n      input.hasData ['items', idx]\n    return unless indexesWithData.length is input.attached('items').length\n    group = []\n    indexesWithData.forEach (idx) ->\n      data = input.getData ['items', idx]\n      if Array.isArray data\n        group = group.concat data\n        return\n      group.push data\n    output.sendDone\n      group: group\n"},"canvas/LineWidth":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Sets the line width'\n  c.icon = 'pencil-square'\n  c.inPorts.add 'width',\n    datatype: 'number'\n  c.outPorts.add 'linewidth',\n    datatype: 'object'\n  c.process (input, output) ->\n    return unless input.hasData 'width'\n    linewidth =\n      type: 'lineWidth'\n      value: input.getData 'width'\n    output.sendDone\n      out: new noflo.IP 'data', linewidth\n    return\n"},"canvas/MakeArc":{language:"coffeescript",source:"noflo = require 'noflo'\nArrayableHelper = require 'noflo-helper-arrayable'\n\nclass MakeArc extends noflo.Component\n  description: 'Creates an arc or arcs'\n  icon: 'power-off'\n  constructor: ->\n    super()\n    ports =\n      center:\n        datatype: 'object'\n        description: 'point for center'\n        required: true\n      radius:\n        datatype: 'number'\n        required: true\n      start:\n        datatype: 'number'\n        description: 'start angle in radians'\n        required: true\n      end:\n        datatype: 'number'\n        description: 'end angle in radians'\n        required: true\n      reverse:\n        datatype: 'boolean'\n        required: true\n        default: false\n\n    ArrayableHelper @, 'arc', ports\n\nexports.getComponent = -> new MakeArc\n"},"canvas/MakeBezierCurve":{language:"coffeescript",source:"noflo = require 'noflo'\nArrayableHelper = require 'noflo-helper-arrayable'\n\nclass MakeBezierCurve extends noflo.Component\n  description: 'Creates a Bezier curve'\n  icon: 'pencil-square'\n  constructor: ->\n    super()\n    ports =\n      control1:\n        datatype: 'object'\n        type: 'https://noflojs.org/#noflo-canvas/point'\n        description: 'control point 1'\n        required: true\n      control2:\n        datatype: 'object'\n        type: 'https://noflojs.org/#noflo-canvas/point'\n        description: 'control point 2'\n        required: true\n      end:\n        datatype: 'object'\n        type: 'https://noflojs.org/#noflo-canvas/point'\n        description: 'end point'\n        required: true\n\n    ArrayableHelper @, 'beziercurve', ports\n\nexports.getComponent = -> new MakeBezierCurve\n"},"canvas/MakeCircle":{language:"coffeescript",source:"noflo = require 'noflo'\nArrayableHelper = require 'noflo-helper-arrayable'\n\nclass MakeCircle extends noflo.Component\n  description: 'Creates a circle or circles'\n  icon: 'circle-o'\n  constructor: ->\n    super()\n    ports =\n      center:\n        datatype: 'object'\n        type: 'https://noflojs.org/#noflo-canvas/point'\n        description: 'center point'\n        required: true\n      radius:\n        datatype: 'number'\n        required: true\n\n    ArrayableHelper @, 'circle', ports\n\nexports.getComponent = -> new MakeCircle\n",tests:"noflo = require 'noflo'\n\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  sinon = require 'sinon' unless sinon\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-canvas'\n\ndescribe 'MakeCircle component (and all that inherit MakeCanvasPrimative)', ->\n  c = null\n  sock_center = null\n  sock_radius = null\n  out = null\n  loader = null\n  before ->\n    loader = new noflo.ComponentLoader baseDir\n  beforeEach (done) ->\n    @timeout 4000\n    loader.load 'canvas/MakeCircle', (err, instance) ->\n      return done err if err\n      c = instance\n      sock_center = noflo.internalSocket.createSocket()\n      sock_radius = noflo.internalSocket.createSocket()\n      out = noflo.internalSocket.createSocket()\n      c.inPorts.center.attach sock_center\n      c.inPorts.radius.attach sock_radius\n      c.outPorts.circle.attach out\n      done()\n\n  describe 'when instantiated', ->\n    it 'should have two input ports', ->\n      chai.expect(c.inPorts.center).to.be.an 'object'\n      chai.expect(c.inPorts.radius).to.be.an 'object'\n    it 'should have one output port', ->\n      chai.expect(c.outPorts.circle).to.be.an 'object'\n\n  describe 'insuffcient input', ->\n    sandbox = null\n    callback = null\n\n    beforeEach ->\n      sandbox = sinon.sandbox.create()\n      callback = sandbox.spy()\n\n    afterEach ->\n      sandbox.restore()\n\n    it \"shouldn't output\", ->\n      center =\n        x: 50\n        y: 50\n      out.once \"data\", callback\n      sock_center.send center\n      chai.expect(callback.called).to.be.false\n\n  describe 'single input', ->\n    it 'should output one circle', (done) ->\n      center =\n        x: 50\n        y: 50\n      radius = 50\n      expected = {type: 'circle', center, radius}\n      out.once \"data\", (data) ->\n        chai.expect(data).to.be.an 'object'\n        chai.expect(data.type).to.be.equal expected.type\n        chai.expect(data.center).to.be.equal expected.center\n        chai.expect(data.radius).to.be.equal expected.radius\n        done()\n      sock_center.send center\n      sock_radius.send radius\n\n  describe 'array input', ->\n    it 'should output an array of circles', (done) ->\n      center =\n        x: 50\n        y: 50\n      radius = [25, 50]\n      expected = [\n        {type: 'circle', center, radius: radius[0]}\n        {type: 'circle', center, radius: radius[1]}\n      ]\n      out.once \"data\", (data) ->\n        chai.expect(data).to.be.an 'array'\n        chai.expect(data.length).to.equal 2\n        for expectedCircle, i in expected\n          chai.expect(data[i].type).to.be.equal expectedCircle.type\n          chai.expect(data[i].center).to.be.equal expectedCircle.center\n          chai.expect(data[i].radius).to.be.equal expectedCircle.radius\n        done()\n      sock_center.send center\n      sock_radius.send radius\n"},"canvas/MakeColor":{language:"coffeescript",source:"noflo = require 'noflo'\nArrayableHelper = require 'noflo-helper-arrayable'\n\ncolorToString = (color) ->\n  if color.alpha?\n    return \"hsla(#{color.hue}, #{color.saturation}%, #{color.lightness}%, #{color.alpha})\"\n  return \"hsl(#{color.hue}, #{color.saturation}%, #{color.lightness}%)\"\n\nclass MakeColor extends noflo.Component\n  description: 'Creates HSL or HSLA color or colors'\n  icon: 'tint'\n  constructor: ->\n    super()\n    ports =\n      hue:\n        datatype: 'number'\n        description: 'from 0 to 360'\n        required: true\n      saturation:\n        datatype: 'number'\n        description: 'from 0 to 100'\n        required: true\n      lightness:\n        datatype: 'number'\n        description: 'from 0 to 100'\n        required: true\n      alpha:\n        datatype: 'number'\n        description: 'from 0 to 1.0'\n        required: false\n\n    compute = (props) =>\n      return unless props.hue? and props.saturation? and props.lightness?\n      color = props\n      if (props.hue instanceof Array or props.saturation instanceof Array or\n      props.lightness instanceof Array or props.alpha instanceof Array)\n        color = @expandToArray props\n        color = color.map colorToString\n      else\n        color = colorToString props\n      return color\n\n    ArrayableHelper @, 'color', ports, {compute}\n\nexports.getComponent = -> new MakeColor\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-canvas'\n\ndescribe 'MakeColor component', ->\n  c = null\n  sock_hue = null\n  sock_saturation = null\n  sock_lightness = null\n  sock_alpha = null\n  out = null\n  loader = null\n  before ->\n    loader = new noflo.ComponentLoader baseDir\n  beforeEach (done) ->\n    @timeout 4000\n    loader.load 'canvas/MakeColor', (err, instance) ->\n      return done err if err\n      c = instance\n      sock_hue = noflo.internalSocket.createSocket()\n      sock_saturation = noflo.internalSocket.createSocket()\n      sock_lightness = noflo.internalSocket.createSocket()\n      sock_alpha = noflo.internalSocket.createSocket()\n      out = noflo.internalSocket.createSocket()\n      c.inPorts.hue.attach sock_hue\n      c.inPorts.saturation.attach sock_saturation\n      c.inPorts.lightness.attach sock_lightness\n      c.inPorts.alpha.attach sock_alpha\n      c.outPorts.color.attach out\n      done()\n\n  describe 'when instantiated', ->\n    it 'should have four input ports', ->\n      chai.expect(c.inPorts.hue).to.be.an 'object'\n      chai.expect(c.inPorts.saturation).to.be.an 'object'\n      chai.expect(c.inPorts.lightness).to.be.an 'object'\n      chai.expect(c.inPorts.alpha).to.be.an 'object'\n    it 'should have one output port', ->\n      chai.expect(c.outPorts.color).to.be.an 'object'\n\n  describe 'single color output', ->\n    it 'should output a color string', (done) ->\n      out.once \"data\", (data) ->\n        chai.expect(data).to.equal 'hsl(0, 100%, 50%)'\n        done()\n      sock_hue.send 0\n      sock_saturation.send 100\n      sock_lightness.send 50\n\n  describe 'multiple color output', ->\n    it 'should output an array of color strings for hue', (done) ->\n      out.once \"data\", (data) ->\n        chai.expect(data).to.be.an 'array'\n        chai.expect(data[0]).to.equal 'hsl(0, 100%, 50%)'\n        chai.expect(data[1]).to.equal 'hsl(1, 100%, 50%)'\n        done()\n      sock_hue.send [0, 1]\n      sock_saturation.send 100\n      sock_lightness.send 50\n    it 'should output an array of color strings for saturation', (done) ->\n      out.once \"data\", (data) ->\n        chai.expect(data).to.be.an 'array'\n        chai.expect(data[0]).to.equal 'hsl(0, 50%, 50%)'\n        chai.expect(data[1]).to.equal 'hsl(0, 100%, 50%)'\n        done()\n      sock_hue.send 0\n      sock_saturation.send [50, 100]\n      sock_lightness.send 50\n    it 'should output an array of color strings for all', (done) ->\n      out.once \"data\", (data) ->\n        chai.expect(data).to.be.an 'array'\n        chai.expect(data[0]).to.equal 'hsla(0, 50%, 25%, 0.25)'\n        chai.expect(data[1]).to.equal 'hsla(1, 100%, 75%, 0.75)'\n        done()\n      sock_alpha.send [0.25, 0.75]\n      sock_hue.send [0, 1]\n      sock_saturation.send [50, 100]\n      sock_lightness.send [25, 75]\n"},"canvas/MakeGrid":{language:"coffeescript",source:"noflo = require 'noflo'\nArrayableHelper = require 'noflo-helper-arrayable'\n\nclass MakeGrid extends noflo.Component\n  description: 'Creates a grid or line of points'\n  icon: 'crosshairs'\n  constructor: ->\n    super()\n    ports =\n      x:\n        datatype: 'number'\n        required: true\n      y:\n        datatype: 'number'\n        required: true\n\n    # OVERRIDE default to make x and y dimensional\n    compute = (props) ->\n      return unless props.x? and props.y?\n      # Expand to grid\n      if props.x instanceof Array or props.y instanceof Array\n        props = expandToArray props\n      return props\n\n    ArrayableHelper @, 'point', ports, {compute}\n\n# Make x*y array\nexpandToArray = (props) ->\n  length = 0\n  xLen = 1\n  yLen = 1\n  if props.x instanceof Array\n    xLen = props.x.length\n  if props.y instanceof Array\n    yLen = props.y.length\n  length = xLen*yLen\n  arr = []\n  for y in [0..yLen-1]\n    for x in [0..xLen-1]\n      obj = {}\n      obj.type = 'point'\n      if props.x instanceof Array\n        obj.x = if props.x[x]? then props.x[x] else props.x[xLen-1]\n      else\n        obj.x = props.x\n      if props.y instanceof Array\n        obj.y = if props.y[y]? then props.y[y] else props.y[yLen-1]\n      else\n        obj.y = props.y\n      if obj.x? and obj.y?\n        arr.push obj\n  return arr\n\nexports.getComponent = -> new MakeGrid\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-canvas'\n\ndescribe 'MakeGrid component', ->\n  c = null\n  sock_x = null\n  sock_y = null\n  out = null\n  loader = null\n  before ->\n    loader = new noflo.ComponentLoader baseDir\n  beforeEach (done) ->\n    @timeout 4000\n    loader.load 'canvas/MakeGrid', (err, instance) ->\n      return done err if err\n      c = instance\n      sock_x = noflo.internalSocket.createSocket()\n      sock_y = noflo.internalSocket.createSocket()\n      out = noflo.internalSocket.createSocket()\n      c.inPorts.x.attach sock_x\n      c.inPorts.y.attach sock_y\n      c.outPorts.point.attach out\n      done()\n\n  describe 'when instantiated', ->\n    it 'should have two input ports', ->\n      chai.expect(c.inPorts.x).to.be.an 'object'\n      chai.expect(c.inPorts.y).to.be.an 'object'\n    it 'should have one output port', ->\n      chai.expect(c.outPorts.point).to.be.an 'object'\n\n  describe 'single output', ->\n    it 'should output one point', (done) ->\n      x = 100\n      y = 100\n      out.once \"data\", (data) ->\n        chai.expect(data).to.be.an 'object'\n        chai.expect(data.type).to.equal 'point'\n        chai.expect(data.x).to.equal x\n        chai.expect(data.y).to.equal y\n        done()\n      sock_x.send x\n      sock_y.send y\n\n  describe 'multiple output', ->\n    it 'should output a grid array of points in correct order', (done) ->\n      x = [0, 100]\n      y = [10, 50]\n      out.once \"data\", (data) ->\n        chai.expect(data).to.be.an 'array'\n        chai.expect(data.length).to.equal 4\n        chai.expect(data[0].type).to.equal 'point'\n        chai.expect(data[1].type).to.equal 'point'\n        chai.expect(data[2].type).to.equal 'point'\n        chai.expect(data[3].type).to.equal 'point'\n        chai.expect(data[0].x).to.equal x[0]\n        chai.expect(data[0].y).to.equal y[0]\n        chai.expect(data[1].x).to.equal x[1]\n        chai.expect(data[1].y).to.equal y[0]\n        chai.expect(data[2].x).to.equal x[0]\n        chai.expect(data[2].y).to.equal y[1]\n        chai.expect(data[3].x).to.equal x[1]\n        chai.expect(data[3].y).to.equal y[1]\n        done()\n      sock_x.send x\n      sock_y.send y\n"},"canvas/MakeIncrement":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Make an array of numbers by increment'\n  c.icon = 'folder-o'\n  c.inPorts.add 'from',\n    datatype: 'number'\n  c.inPorts.add 'to',\n    datatype: 'number'\n  c.inPorts.add 'increment',\n    datatype: 'int'\n    default: 1\n    control: true\n  c.outPorts.add 'range',\n    datatype: 'array'\n  c.process (input, output) ->\n    return unless input.hasData 'from', 'to'\n    return if input.attached('increment').length and not input.hasData('increment')\n    [from, to] = input.getData 'from', 'to'\n    increment = if input.hasData('increment') then input.getData('increment') else 1\n    range = []\n    f = from\n    if from <= to\n      while (f<=to)\n        range.push f\n        f += increment\n    else\n      while (f>=to)\n        range.push f\n        f -= increment\n    output.sendDone\n      range: range\n"},"canvas/MakePath":{language:"coffeescript",source:"noflo = require 'noflo'\nArrayableHelper = require 'noflo-helper-arrayable'\n\ntypeIsArray = Array.isArray || ( value ) -> return Object.toString.call( value ) is '[object Array]'\n\nclass MakePath extends noflo.Component\n  description: 'Makes a path given a number of points, curves, etc'\n  icon: 'star-o'\n  constructor: ->\n    super()\n    ports =\n      items:\n        datatype: 'object'\n        description: 'points, arcs, and curves to combine to make path'\n        addressable: true\n        required: true\n\n    # OVERRIDE, discussion at noflo/noflo-canvas#24\n    compute = (props) =>\n      out =\n        type: 'path'\n        items: []\n      arrayCount = 0\n      for item in props.items\n        unless item?\n          # Short-circuit\n          return\n        if typeIsArray item\n          arrayCount++\n\n      if arrayCount is 0\n        # eg. two points\n        out.items = props.items\n      else if props.items.length is 1 and arrayCount is 1\n        # eg. one array of points\n        out.items = props.items[0]\n      else\n        # Multiple arrays, flatten combinations\n        out.items = @expandToArray props.items\n        out = @expandToArray out\n\n      return out\n\n    ArrayableHelper @, 'path', ports, {compute}\n\nexports.getComponent = -> new MakePath\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-canvas'\n\ndescribe 'MakePath component', ->\n  c = null\n  sock_0 = null\n  sock_1 = null\n  out = null\n  loader = null\n  before ->\n    loader = new noflo.ComponentLoader baseDir\n  beforeEach (done) ->\n    @timeout 4000\n    loader.load 'canvas/MakePath', (err, instance) ->\n      return done err if err\n      c = instance\n      sock_0 = noflo.internalSocket.createSocket()\n      sock_1 = noflo.internalSocket.createSocket()\n      out = noflo.internalSocket.createSocket()\n      c.inPorts.items.attach sock_0, 0\n      c.inPorts.items.attach sock_1, 1\n      c.outPorts.path.attach out\n      done()\n\n  describe 'when instantiated', ->\n    it 'should have one input ports', ->\n      chai.expect(c.inPorts.items).to.be.an 'object'\n    it 'should have one output port', ->\n      chai.expect(c.outPorts.path).to.be.an 'object'\n\n  describe 'with an array of points', ->\n    it 'should output one path', ->\n      input = [\n        {type:'point', x: 0, y: 0}\n        {type:'point', x: 10, y: 10}\n      ]\n      expected = {type: 'path', items: input}\n      out.once \"data\", (data) ->\n        chai.expect(data).to.deep.equal expected\n      sock_0.send input\n\n  describe 'with two points to two addressable ports', ->\n    it 'should output one path', (done) ->\n      input = [\n        {type:'point', x: 0, y: 0}\n        {type:'point', x: 10, y: 10}\n      ]\n      expected = {type: 'path', items: input}\n      # TODO a better way to test for the last output\n      count = 0\n      out.on \"data\", (data) ->\n        console.log data\n        if count is 0\n          chai.expect(data).to.deep.equal {\n            type: 'path'\n            items: [input[0]]\n          }\n        if count is 1\n          chai.expect(data).to.deep.equal expected\n          done()\n        count++\n      sock_0.send input[0]\n      sock_1.send input[1]\n"},"canvas/MakePoint":{language:"coffeescript",source:"noflo = require 'noflo'\nArrayableHelper = require 'noflo-helper-arrayable'\n\nclass MakePoint extends noflo.Component\n  description: 'Creates a point or points'\n  icon: 'crosshairs'\n  constructor: ->\n    super()\n    ports =\n      x:\n        datatype: 'number'\n        required: true\n      y:\n        datatype: 'number'\n        required: true\n\n    ArrayableHelper @, 'point', ports\n\nexports.getComponent = -> new MakePoint\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-canvas'\n\ndescribe 'MakePoint component', ->\n  c = null\n  sock_x = null\n  sock_y = null\n  out = null\n  loader = null\n  before ->\n    loader = new noflo.ComponentLoader baseDir\n  beforeEach (done) ->\n    @timeout 4000\n    loader.load 'canvas/MakePoint', (err, instance) ->\n      return done err if err\n      c = instance\n      sock_x = noflo.internalSocket.createSocket()\n      sock_y = noflo.internalSocket.createSocket()\n      out = noflo.internalSocket.createSocket()\n      c.inPorts.x.attach sock_x\n      c.inPorts.y.attach sock_y\n      c.outPorts.point.attach out\n      done()\n\n  describe 'when instantiated', ->\n    it 'should have two input ports', ->\n      chai.expect(c.inPorts.x).to.be.an 'object'\n      chai.expect(c.inPorts.y).to.be.an 'object'\n    it 'should have one output port', ->\n      chai.expect(c.outPorts.point).to.be.an 'object'\n\n  describe 'single output', ->\n    it 'should output one point', ->\n      x = 100\n      y = 100\n      out.once \"data\", (data) ->\n        chai.expect(data).to.be.an 'object'\n        chai.expect(data.type).to.equal 'point'\n        chai.expect(data.x).to.equal x\n        chai.expect(data.y).to.equal y\n      sock_x.send x\n      sock_y.send y\n\n  describe 'multiple output', ->\n    it 'should output an array of points', (done) ->\n      x = [0, 100]\n      y = [10, 50]\n      out.once \"data\", (data) ->\n        chai.expect(data).to.be.an 'array'\n        chai.expect(data.length).to.equal 2\n        chai.expect(data[0].type).to.equal 'point'\n        chai.expect(data[1].type).to.equal 'point'\n        chai.expect(data[0].x).to.equal x[0]\n        chai.expect(data[0].y).to.equal y[0]\n        chai.expect(data[1].x).to.equal x[1]\n        chai.expect(data[1].y).to.equal y[1]\n        done()\n      sock_x.send x\n      sock_y.send y\n"},"canvas/MakeRGBColor":{language:"coffeescript",source:"noflo = require 'noflo'\nArrayableHelper = require 'noflo-helper-arrayable'\n\ncolorToString = (color) ->\n  r = Math.round(color.red)\n  g = Math.round(color.green)\n  b = Math.round(color.blue)\n  if color.alpha?\n    a = color.alpha\n    return \"rgba(#{r}, #{g}, #{b}, #{a})\"\n  else\n    return \"rgb(#{r}, #{g}, #{b})\"\n\nclass MakeRGBColor extends noflo.Component\n  description: 'Creates RGA or RGBA color or colors'\n  icon: 'tint'\n  constructor: ->\n    super()\n    ports =\n      red:\n        datatype: 'int'\n        description: 'from 0 to 255'\n        required: true\n      green:\n        datatype: 'int'\n        description: 'from 0 to 255'\n        required: true\n      blue:\n        datatype: 'int'\n        description: 'from 0 to 255'\n        required: true\n      alpha:\n        datatype: 'number'\n        description: 'optional, from 0 to 1.0'\n        required: false\n\n    compute = (props) =>\n      return unless props.red? and props.green? and props.blue?\n      color = props\n      if (props.red instanceof Array or props.green instanceof Array or\n      props.blue instanceof Array or props.alpha instanceof Array)\n        color = @expandToArray props\n        color = color.map colorToString\n      else\n        color = colorToString props\n      return color\n\n    ArrayableHelper @, 'color', ports, {compute}\n\n\nexports.getComponent = -> new MakeRGBColor\n",tests:"noflo = require 'noflo'\n\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-canvas'\n\ndescribe 'MakeRGBColor component', ->\n  c = null\n  sock_r = null\n  sock_g = null\n  sock_b = null\n  sock_alpha = null\n  out = null\n  loader = null\n  before ->\n    loader = new noflo.ComponentLoader baseDir\n  beforeEach (done) ->\n    @timeout 4000\n    loader.load 'canvas/MakeRGBColor', (err, instance) ->\n      return done err if err\n      c = instance\n      sock_r = noflo.internalSocket.createSocket()\n      sock_g = noflo.internalSocket.createSocket()\n      sock_b = noflo.internalSocket.createSocket()\n      sock_alpha = noflo.internalSocket.createSocket()\n      out = noflo.internalSocket.createSocket()\n      c.inPorts.red.attach sock_r\n      c.inPorts.green.attach sock_g\n      c.inPorts.blue.attach sock_b\n      c.inPorts.alpha.attach sock_alpha\n      c.outPorts.color.attach out\n      done()\n\n  describe 'when instantiated', ->\n    it 'should have four input ports', ->\n      chai.expect(c.inPorts.red).to.be.an 'object'\n      chai.expect(c.inPorts.green).to.be.an 'object'\n      chai.expect(c.inPorts.blue).to.be.an 'object'\n      chai.expect(c.inPorts.alpha).to.be.an 'object'\n    it 'should have one output port', ->\n      chai.expect(c.outPorts.color).to.be.an 'object'\n\n  describe 'single color output', ->\n    it 'should output a single color string', ->\n      out.once \"data\", (data) ->\n        chai.expect(data).to.equal 'rgb(10, 20, 30)'\n      sock_r.send 10\n      sock_g.send 20\n      sock_b.send 30\n\n  describe 'multiple color output', ->\n    it 'should output an array of color strings for red', ->\n      out.once \"data\", (data) ->\n        chai.expect(data).to.be.an 'array'\n        chai.expect(data[0]).to.equal 'rgb(0, 20, 30)'\n        chai.expect(data[1]).to.equal 'rgb(10, 20, 30)'\n      sock_r.send [0, 10]\n      sock_g.send 20\n      sock_b.send 30\n    it 'should output an array of color strings for blue', ->\n      out.once \"data\", (data) ->\n        chai.expect(data).to.be.an 'array'\n        chai.expect(data[0]).to.equal 'rgb(10, 20, 40)'\n        chai.expect(data[1]).to.equal 'rgb(10, 30, 40)'\n      sock_r.send 10\n      sock_g.send [20, 30]\n      sock_b.send 40\n    it 'should output an array of color strings for all', ->\n      out.once \"data\", (data) ->\n        chai.expect(data).to.be.an 'array'\n        chai.expect(data[0]).to.equal 'rgba(10, 20, 30, 0.25)'\n        chai.expect(data[1]).to.equal 'rgba(40, 50, 60, 0.75)'\n      sock_alpha.send [0.25, 0.75]\n      sock_r.send [10, 40]\n      sock_g.send [20, 50]\n      sock_b.send [30, 60]\n"},"canvas/MakeRandom":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Make an array of random numbers'\n  c.icon = 'random'\n  c.inPorts.add 'min',\n    datatype: 'number'\n  c.inPorts.add 'max',\n    datatype: 'number'\n  c.inPorts.add 'count',\n    datatype: 'int'\n  c.outPorts.add 'numbers',\n    datatype: 'array'\n  c.process (input, output) ->\n    return unless input.hasData 'min', 'max', 'count'\n    [min, max, count] = input.getData 'min', 'max', 'count'\n    spread = max - min\n    if count is 1\n      number = min + Math.random()*spread\n      output.sendDone\n        numbers: [number]\n      return\n    numbers = []\n    for i in [0..count-1]\n      numbers[i] = min + Math.random()*spread\n    output.sendDone\n      numbers: numbers\n"},"canvas/MakeRange":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Make an array of evenly-spaced numbers'\n  c.icon = 'folder-o'\n  c.inPorts.add 'from',\n    datatype: 'number'\n  c.inPorts.add 'to',\n    datatype: 'number'\n  c.inPorts.add 'count',\n    datatype: 'int'\n  c.outPorts.add 'range',\n    datatype: 'array'\n  c.process (input, output) ->\n    return unless input.hasData 'from', 'to', 'count'\n    [from, to, count] = input.getData 'from', 'to', 'count'\n    if count is 1\n      output.sendDone\n        range: [from]\n      return\n    range = []\n    f = from\n    spread = to - from\n    increment = spread / (count-1)\n    for i in [0..count-1]\n      range[i] = from + increment*i\n    output.sendDone\n      range: range\n"},"canvas/MakeRectangle":{language:"coffeescript",source:"noflo = require 'noflo'\nArrayableHelper = require 'noflo-helper-arrayable'\n\nclass MakeRectangle extends noflo.Component\n  description: 'Creates a rectangle or rectangles'\n  icon: 'square-o'\n  constructor: ->\n    super()\n    ports =\n      point:\n        datatype: 'object'\n        description: 'top left point'\n        required: true\n      width:\n        datatype: 'number'\n        required: true\n      height:\n        datatype: 'number'\n        required: true\n\n    ArrayableHelper @, 'rectangle', ports\n\nexports.getComponent = -> new MakeRectangle\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-canvas'\n\ndescribe 'MakeRectangle component', ->\n  c = null\n  sock_height = null\n  sock_width = null\n  sock_point = null\n  out = null\n  loader = null\n  before ->\n    loader = new noflo.ComponentLoader baseDir\n  beforeEach (done) ->\n    @timeout 4000\n    loader.load 'canvas/MakeRectangle', (err, instance) ->\n      return done err if err\n      c = instance\n      sock_width = noflo.internalSocket.createSocket()\n      sock_height = noflo.internalSocket.createSocket()\n      sock_point = noflo.internalSocket.createSocket()\n      out = noflo.internalSocket.createSocket()\n      c.inPorts.width.attach sock_width\n      c.inPorts.height.attach sock_height\n      c.inPorts.point.attach sock_point\n      c.outPorts.rectangle.attach out\n      done()\n\n  describe 'when instantiated', ->\n    it 'should have two input ports', ->\n      chai.expect(c.inPorts.point).to.be.an 'object'\n      chai.expect(c.inPorts.height).to.be.an 'object'\n      chai.expect(c.inPorts.width).to.be.an 'object'\n    it 'should have one output port', ->\n      chai.expect(c.outPorts.rectangle).to.be.an 'object'\n\n  describe 'single output', ->\n    it 'should output one rectangle', (done) ->\n      point = { type: 'point', x: 49, y: 51 }\n      out.once \"data\", (data) ->\n        chai.expect(data).to.be.an 'object'\n        chai.expect(data.type).to.equal 'rectangle'\n        chai.expect(data.point).to.equal point\n        chai.expect(data.width).to.equal 100\n        chai.expect(data.height).to.equal 101\n        done()\n      sock_width.send 100\n      sock_height.send 101\n      sock_point.send point\n\n"},"canvas/MakeRectangleAspectRatio":{language:"coffeescript",source:"noflo = require 'noflo'\nArrayableHelper = require 'noflo-helper-arrayable'\n\nclass MakeRectangleAspectRatio extends noflo.Component\n  description: 'Creates a rectangle, maintaining original aspect ratio'\n  icon: 'square-o'\n  constructor: ->\n    super()\n    ports =\n      width:\n        datatype: 'number'\n        description: '<0 for dont-care'\n        required: true\n      height:\n        datatype: 'number'\n        description: '<0 for dont-care'\n        required: true\n      origwidth:\n        datatype: 'number'\n        description: 'from 0 to 100'\n        required: true\n      origheight:\n        datatype: 'number'\n        description: 'from 0 to 1.0'\n        required: false\n\n    compute = (props) =>\n      return unless @hasAllProps(props)\n      inputs = props\n      out = @computeRectangle inputs\n      out.type = 'rectangle'\n      out.point = { type: 'point', x: 0, y: 0 }\n      return out\n\n    ArrayableHelper @, 'rectangle', ports, {compute}\n\n  hasAllProps: (props) ->\n    props.width? and props.height? and props.origwidth? and props.origheight?\n\n  computeRectangle: (inputs) ->\n    aspectRatio = inputs.origheight / inputs.origwidth\n    targetWidth = inputs.width\n    targetHeight = inputs.height\n\n    if targetWidth < 0 and targetHeight < 0\n      # Pass through original\n      targetWidth = inputs.origwidth\n      targetHeight = inputs.origheight\n    else if inputs.width < 0\n      targetWidth = targetHeight/aspectRatio\n    else if inputs.height < 0\n      targetHeight = targetWidth*aspectRatio\n\n    o =\n      height: targetHeight\n      width: targetWidth\n    return o\n\nexports.getComponent = -> new MakeRectangleAspectRatio\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-canvas'\n\ndescribe 'MakeRectangleAspectRatio component', ->\n  c = null\n  sockets = null\n  out = null\n  zeropoint = null\n  loader = null\n  before ->\n    loader = new noflo.ComponentLoader baseDir\n  beforeEach (done) ->\n    @timeout 4000\n    loader.load 'canvas/MakeRectangleAspectRatio', (err, instance) ->\n      return done err if err\n      c = instance\n      zeropoint =\n        type: 'point'\n        x: 0\n        y: 0\n      sockets =\n        origwidth: new noflo.internalSocket.createSocket()\n        origheight: new noflo.internalSocket.createSocket()\n        width: new noflo.internalSocket.createSocket()\n        height: new noflo.internalSocket.createSocket()\n      for name, socket of sockets\n        c.inPorts[name].attach socket\n      out = new noflo.internalSocket.createSocket()\n      c.outPorts.rectangle.attach out\n      done()\n\n  describe 'when instantiated', ->\n    it 'should have 4 input ports', ->\n      chai.expect(c.inPorts.height).to.be.an 'object'\n      chai.expect(c.inPorts.width).to.be.an 'object'\n      chai.expect(c.inPorts.origheight).to.be.an 'object'\n      chai.expect(c.inPorts.origwidth).to.be.an 'object'\n    it 'should have one output port', ->\n      chai.expect(c.outPorts.rectangle).to.be.an 'object'\n\n  describe 'specifying desired height and width', ->\n    it 'should output rectangle with those values', (done) ->\n      input =\n        width: 400\n        height: 500\n        origheight: 200\n        origwidth: 300\n      out.once \"data\", (data) ->\n        chai.expect(data).to.be.an 'object'\n        chai.expect(data.type).to.equal 'rectangle'\n        chai.expect(data.point).to.eql zeropoint\n        chai.expect(data.width).to.equal input.width\n        chai.expect(data.height).to.equal input.height\n        done()\n      for port, value of input\n        sockets[port].send value\n\n  describe 'specifying -1 for both height and width', ->\n    it 'should give original height and width', (done) ->\n      input =\n        width: -1\n        height: -1\n        origheight: 201\n        origwidth: 301\n      out.once \"data\", (data) ->\n        chai.expect(data).to.be.an 'object'\n        chai.expect(data.type).to.equal 'rectangle'\n        chai.expect(data.point).to.eql zeropoint\n        chai.expect(data.width).to.equal input.origwidth\n        chai.expect(data.height).to.equal input.origheight\n        done()\n      for port, value of input\n        sockets[port].send value\n\n  describe 'specifying -1 for height', ->\n    it 'should calculate height from original aspect', (done) ->\n      input =\n        width: 400\n        height: -1\n        origwidth: 200\n        origheight: 300\n      out.once \"data\", (data) ->\n        chai.expect(data).to.be.an 'object'\n        chai.expect(data.type).to.equal 'rectangle'\n        chai.expect(data.point).to.eql zeropoint\n        chai.expect(data.width).to.equal input.width\n        chai.expect(data.height).to.equal 600\n        done()\n      for port, value of input\n        sockets[port].send value\n\n  describe 'specifying -1 for width', ->\n    it 'should calculate width from original aspect', (done) ->\n      input =\n        width: -1\n        height: 400\n        origwidth: 300\n        origheight: 200\n      out.once \"data\", (data) ->\n        chai.expect(data).to.be.an 'object'\n        chai.expect(data.type).to.equal 'rectangle'\n        chai.expect(data.point).to.eql zeropoint\n        chai.expect(data.width).to.equal 600\n        chai.expect(data.height).to.equal input.height\n        done()\n      for port, value of input\n        sockets[port].send value\n\n"},"canvas/Recurse":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Makes a translation recursive.'\n  c.icon = 'retweet'\n  c.inPorts.add 'recursables',\n    datatype: 'object'\n    description: 'Only translate is recursable'\n  c.inPorts.add 'count',\n    datatype: 'number'\n  c.outPorts.add 'recurse',\n    datatype: 'object'\n  c.recurses = {}\n  c.tearDown = (callback) ->\n    c.recurses = {}\n    do callback\n  c.process (input, output) ->\n    unless c.recurses[input.scope]\n      c.recurses[input.scope] =\n        type: 'recurse'\n        recursables: []\n        count: null\n    if input.hasData 'count'\n      c.recurses[input.scope].count = input.getData 'count'\n      unless c.recurses[input.scope].recursables.length\n        output.done()\n        return\n      output.sendDone\n        recurse: c.recurses[input.scope]\n      return\n    indexesWithData = input.attached('recursables').filter (idx) ->\n      input.hasData ['recursables', idx]\n    return unless indexesWithData.length\n    indexesWithData.forEach (idx) ->\n      data = input.getData ['recursables', idx]\n      c.recurses[input.scope].recursables[idx] = data\n    output.sendDone\n      recurse: c.recurses[input.scope]\n    return\n"},"canvas/Stroke":{language:"coffeescript",source:"noflo = require 'noflo'\nArrayableHelper = require 'noflo-helper-arrayable'\n\nclass Stroke extends noflo.Component\n  description: 'Strokes lines for paths, rectangles, circles, and arcs'\n  icon: 'square-o'\n  constructor: ->\n    super()\n    ports =\n      items:\n        datatype: 'object'\n        description: 'shapes (paths, circles, and rectangles) to stroke'\n        addressable: true\n        required: true\n      strokestyle:\n        datatype: 'string'\n        description: 'css color string or canvas style'\n        required: false\n      linewidth:\n        datatype: 'number'\n        description: 'stroke width in pixels'\n        required: false\n      closepath:\n        datatype: 'boolean'\n        description: 'draw line back to start point'\n        value: false\n\n    ArrayableHelper @, 'stroke', ports\n\nexports.getComponent = -> new Stroke\n"},"canvas/StrokeRect":{language:"coffeescript",source:"noflo = require 'noflo'\nArrayableHelper = require 'noflo-helper-arrayable'\n\nclass StrokeRect extends noflo.Component\n  description: 'Strokes a rectangle'\n  icon: 'pencil-square-o'\n  constructor: ->\n    super()\n    ports =\n      point:\n        datatype: 'object'\n        description: 'top left point'\n        required: true\n      width:\n        datatype: 'number'\n        required: true\n      height:\n        datatype: 'number'\n        required: true\n    \n    ArrayableHelper @, 'strokerect', ports\n\n  exports.getComponent = -> new StrokeRect\n"},"canvas/StrokeStyle":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Sets the global stroke style'\n  c.icon = 'pencil-square-o'\n  c.inPorts.add 'style',\n    datatype: 'string'\n  c.outPorts.add 'strokestyle',\n    datatype: 'object'\n  c.process (input, output) ->\n    return unless input.hasData 'style'\n    strokeStyle =\n      type: 'strokeStyle'\n      value: input.getData 'style'\n    output.sendDone\n      out: new noflo.IP 'data', strokeStyle\n    return\n"},"canvas/Transform":{language:"coffeescript",source:"noflo = require 'noflo'\nArrayableHelper = require 'noflo-helper-arrayable'\n\nclass Transform extends noflo.Component\n  description: 'Translate, rotate, and/or scale passed drawing commands.'\n  icon: 'arrows'\n  constructor: ->\n    super()\n    ports =\n      items:\n        datatype: 'object'\n        description: 'fill and stroke commands to transform'\n        addressable: true\n        required: true\n      translate:\n        datatype: 'object'\n        type: 'https://noflojs.org/#noflo-canvas/point'\n        description: 'translate by this vector'\n        required: false\n      scale:\n        datatype: 'object'\n        type: 'https://noflojs.org/#noflo-canvas/point'\n        description: 'stretch or mirror'\n        required: false\n      scaleboth:\n        datatype: 'number'\n        description: 'scale both x and y'\n        required: false\n      rotate:\n        datatype: 'number'\n        type: 'https://noflojs.org/#noflo-canvas/angle'\n        description: 'angle in radians'\n        required: false\n\n    ArrayableHelper @, 'transform', ports\n\nexports.getComponent = -> new Transform\n"},"canvas/CreateCanvas":{language:"coffeescript",source:"# @runtime noflo-browser\n# @name CreateCanvas\n\nnoflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Makes a Canvas with given dimensions'\n  c.icon = 'pencil-square'\n  c.inPorts.add 'width',\n    datatype: 'int'\n  c.inPorts.add 'height',\n    datatype: 'int'\n  c.outPorts.add 'canvas',\n    datatype: 'object'\n  c.process (input, output) ->\n    return unless input.hasData 'width', 'height'\n    [width, height] = input.getData 'width', 'height'\n    canvas = document.createElement 'canvas'\n    canvas.width = width\n    canvas.height = height\n    output.sendDone\n      canvas: canvas\n    return\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  Canvas = require 'canvas'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-canvas'\n\nunless noflo.isBrowser()\n  describe 'node-canvas node module', ->\n    can = null\n    beforeEach ->\n      can = new Canvas.Canvas 10, 10\n    describe 'before starting', ->\n      it 'should be available', ->\n        chai.expect(Canvas.Canvas).to.be.a 'function'\n      it 'should produce a valid canvas object', ->\n        chai.expect(can.width).to.equal 10\n        chai.expect(can.height).to.equal 10\n\ndescribe 'CreateCanvas component', ->\n  c = null\n  ins = null\n  out = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'canvas/CreateCanvas', (err, instance) ->\n      return done err if err\n      c = instance\n      ins = noflo.internalSocket.createSocket()\n      c.inPorts.width.attach ins\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.canvas.attach out\n  afterEach ->\n    c.outPorts.canvas.detach out\n\n  describe 'when instantiated', ->\n    it 'should have two input ports', ->\n      chai.expect(c.inPorts.width).to.be.an 'object'\n      chai.expect(c.inPorts.height).to.be.an 'object'\n    it 'should have an output port', ->\n      chai.expect(c.outPorts.canvas).to.be.an 'object'\n"},"canvas/SaveJPEG":{language:"coffeescript",source:"# @runtime noflo-browser\n# @name SaveJPEG\n\nnoflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Exports a canvas to JPEG'\n  c.icon = 'file-image-o'\n  c.inPorts.add 'canvas',\n    datatype: 'object'\n  c.outPorts.add 'jpeg',\n    datatype: 'string'\n  c.process (input, output) ->\n    return unless input.hasData 'canvas'\n    canvas = input.getData 'canvas'\n    img = canvas.toDataURL('image/jpeg')\n    output.sendDone\n      jpeg: img\n    return\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\n  Canvas = require 'canvas'\n  testutils = require './testutils'\nelse\n  baseDir = 'noflo-canvas'\n\ndescribe 'SaveJPEG component', ->\n  c = null\n  loader = null\n  before ->\n    loader = new noflo.ComponentLoader baseDir\n  beforeEach (done) ->\n    @timeout 4000\n    loader.load 'canvas/SaveJPEG', (err, instance) ->\n      return done err if err\n      c = instance\n      done()\n\n  describe 'when instantiated', ->\n    it 'should have an input port', ->\n      chai.expect(c.inPorts.canvas).to.be.an 'object'\n    it 'should have an output port', ->\n      chai.expect(c.outPorts.jpeg).to.be.an 'object'\n\n  describe 'when passed canvas', ->\n    canvas = testutils.createCanvas 200,200\n    s_canvas = noflo.internalSocket.createSocket()\n    so_jpeg = noflo.internalSocket.createSocket()\n\n    it 'should output something', (done) ->\n      so_jpeg.once \"data\", (can) ->\n        chai.expect(can).to.not.be.undefined\n        done()\n\n      c.outPorts.jpeg.attach so_jpeg\n      c.inPorts.canvas.attach s_canvas\n      s_canvas.send canvas\n"},"canvas/SavePNG":{language:"coffeescript",source:"# @runtime noflo-browser\n# @name SavePNG\n\nnoflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Exports a canvas to PNG'\n  c.icon = 'file-image-o'\n  c.inPorts.add 'canvas',\n    datatype: 'object'\n  c.outPorts.add 'png',\n    datatype: 'string'\n  c.process (input, output) ->\n    return unless input.hasData 'canvas'\n    canvas = input.getData 'canvas'\n    img = canvas.toDataURL('image/png')\n    output.sendDone\n      png: img\n    return\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\n  Canvas = require 'canvas'\n  testutils = require './testutils'\nelse\n  baseDir = 'noflo-canvas'\n\ndescribe 'SavePNG component', ->\n  c = null\n  loader = null\n  before ->\n    loader = new noflo.ComponentLoader baseDir\n  beforeEach (done) ->\n    @timeout 4000\n    loader.load 'canvas/SavePNG', (err, instance) ->\n      return done err if err\n      c = instance\n      done()\n\n  describe 'when instantiated', ->\n    it 'should have an input port', ->\n      chai.expect(c.inPorts.canvas).to.be.an 'object'\n    it 'should have an output port', ->\n      chai.expect(c.outPorts.png).to.be.an 'object'\n\n  describe 'when passed canvas', ->\n    canvas = testutils.createCanvas 200,200\n    s_canvas = noflo.internalSocket.createSocket()\n    so_png = noflo.internalSocket.createSocket()\n\n    it 'should output something', (done) ->\n      so_png.once \"data\", (can) ->\n        chai.expect(can).to.not.be.undefined\n        done()\n\n      c.outPorts.png.attach so_png\n      c.inPorts.canvas.attach s_canvas\n      s_canvas.send canvas\n"},"clmtrackr/TrackFace":{language:"coffeescript",source:"# @runtime noflo-browser\n\nnoflo = require 'noflo'\nclm = require '../libs/clmtrackr.js'\npModel = require '../libs/model_pca_20_svm.js'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.icon = 'meh-o'\n  c.description = 'track features in face'\n  tracker = null\n  raf = null\n  ctx = null\n  stopTracking = ->\n    if tracker\n      tracker.stop()\n      tracker = null\n    if raf\n      cancelAnimationFrame raf\n      raf = null\n    if ctx\n      ctx.deactivate()\n      ctx = null\n  c.tearDown = (callback) ->\n    do stopTracking\n    do callback\n  c.inPorts.add 'image',\n    datatype: 'object'\n    description: 'img, video, or canvas element'\n  c.outPorts.add 'points',\n    datatype: 'array'\n  c.outPorts.add 'error',\n    datatype: 'object'\n\n  c.process (input, output, context) ->\n    return unless input.hasData 'image'\n    imageToTrack = input.getData 'image'\n    return output.done() unless imageToTrack.tagName?\n    # Clmtrackr needs canvas or video\n    if imageToTrack.tagName is 'IMG'\n      # Convert img to canvas\n      canvas = document.createElement('canvas')\n      canvas.width = imageToTrack.width\n      canvas.height = imageToTrack.height\n      canvas.getContext('2d').drawImage(imageToTrack, 0, 0)\n      imageToTrack = canvas\n\n    # Should be canvas or video now\n    unless imageToTrack.tagName is 'CANVAS' or imageToTrack.tagName is 'VIDEO'\n      output.done new Error 'Image to track must be a canvas or video element'\n      return\n\n    # Reset if needed\n    do stopTracking\n\n    # todo: params.stopOnConvergence for still images\n    tracker = new clm.tracker()\n    tracker.init pModel\n    tracker.start imageToTrack\n    ctx = context\n\n    trackFaceLoop = ->\n      raf = requestAnimationFrame trackFaceLoop\n      return unless tracker\n      points = tracker.getCurrentPosition()\n      return unless points\n      # Convert to noflo-canvas compatible array\n      points = points.map (point) ->\n        return {\n          type: 'point'\n          x: point[0]\n          y: point[1]\n        }\n      output.send\n        points: points\n\n    raf = requestAnimationFrame trackFaceLoop\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-clmtrackr'\n\ndescribe 'TrackFace component', ->\n  # Browser-only for now, uses WebGL\n  return unless noflo.isBrowser()\n\n  c = null\n  in_image = null\n  out_points = null\n  loader = null\n  before ->\n    loader = new noflo.ComponentLoader baseDir\n  beforeEach (done) ->\n    @timeout 4000\n    loader.load 'clmtrackr/TrackFace', (err, instance) ->\n      return done err if err\n      c = instance\n      done()\n\n  describe 'when instantiated', ->\n    it 'should have an input port', ->\n      chai.expect(c.inPorts.image).to.be.an 'object'\n    it 'should have an output port', ->\n      chai.expect(c.outPorts.points).to.be.an 'object'\n\n  describe 'when given image', ->\n    beforeEach ->\n      in_image = noflo.internalSocket.createSocket()\n      out_points = noflo.internalSocket.createSocket()\n      c.inPorts.image.attach in_image\n      c.outPorts.points.attach out_points\n\n    it 'should find the face', (done) ->\n      @timeout 3000\n\n      out_points.once 'data', (data) ->\n        chai.expect(data).to.be.an 'array'\n        chai.expect(data.length).to.equal 71\n        chai.expect(data[0].x).to.be.a 'number'\n        chai.expect(data[0].x).to.be.greaterThan 283\n        chai.expect(data[0].x).to.be.lessThan 295\n        chai.expect(data[0].y).to.be.a 'number'\n        chai.expect(data[0].y).to.be.greaterThan 279\n        chai.expect(data[0].y).to.be.lessThan 281\n        done()\n\n      # Load img and send it in\n      img = document.createElement 'img'\n      img.onload = () ->\n        img.width = img.naturalWidth\n        img.height = img.naturalHeight\n        in_image.send img\n      img.src = 'franck_02159.jpg'\n"},"clmtrackr/WireframeFace":{language:"coffeescript",source:"# @runtime noflo-browser\n\nnoflo = require 'noflo'\n\n# Voronoi version, could be hand-made\n# Indexes correspond to https://github.com/auduno/clmtrackr#clmtrackr\nwireframe = [[28,70,13],[39,12,13],[70,39,13],[14,28,13],[50,11,12],[39,50,12],[15,28,14],[50,10,11],[31,39,70],[67,28,15],[16,67,15],[51, 9,10],[50,51,10],[39,38,50],[38,49,50],[40,39,31],[29,67,16],[67,70,28],[51,52,9],[17,29,16],[69,40,31],[32,70,67],[52, 8, 9],[32,31,70],[29,32,67],[68,32,29],[17,68,29],[32,69,31],[68,69,32],[52,53, 8],[53, 7, 8],[30,40,69],[18,68,17],[49,59,50],[58,51,50],[59,58,50],[41,40,30],[68,30,69],[38,48,49],[18,30,68],[58,52,51],[43,38,39],[40,43,39],[37,48,38],[18,33,30],[33,41,30],[48,59,49],[57,52,58],[62,43,40],[43,37,38],[53,6,7],[59,60,58],[60,57,58],[41,62,40],[48,60,59],[22,33,18],[57,53,52],[54,6,53],[62,37,43],[37,47,48],[47,60,48],[33,25,41],[41,34,62],[62,42,37],[37,46,47],[57,54,53],[47,46,60],[61,56,60],[60,56,57],[56,54,57],[36,46,37],[46,61,60],[34,42,62],[42,36,37],[25,34,41],[5,6,54],[22,25,33],[25,65,34],[55,5,54],[45,61,46],[36,45,46],[64,25,22],[34,35,42],[56,55,54],[35,36,42],[45,44,61],[61,44,56],[44,55,56],[44,45,36],[35,44,36],[26,35,34],[65,26,34],[4,5,55],[21,64,22],[26,66,35],[2,44,35],[44,4,55],[2,3,44],[66,1,35],[64,65,25],[21,24,64],[1,2,35],[27,65,64],[3,4,44],[24,27,64],[27,26,65],[20,24,21],[23,1,66],[20,63,24],[24,63,27],[66,26,27],[63,66,27],[20,19,63],[19,23,63],[63,23,66],[0,1,23],[19,0,23]]\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.icon = 'meh-o'\n  c.description = 'Points from TrackFace to wireframe (array of triangle paths)'\n\n  c.inPorts.add 'points',\n    datatype: 'array'\n    description: 'points from TrackFace'\n  c.outPorts.add 'paths',\n    datatype: 'array'\n\n  c.process (input, output) ->\n    return unless input.hasData 'points'\n    payload = input.getData 'points'\n    paths = []\n    for tri in wireframe\n      path =\n        type: 'path'\n        items: [\n          payload[tri[0]]\n          payload[tri[1]]\n          payload[tri[2]]\n        ]\n      paths.push path\n\n    output.sendDone\n      paths: paths\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-clmtrackr'\n\ndescribe 'WireframeFace component', ->\n  # Browser-only for now, uses WebGL\n  return unless noflo.isBrowser()\n\n  c = null\n  in_points = null\n  out_paths = null\n  points = null\n  loader = null\n\n  before ->\n    loader = new noflo.ComponentLoader baseDir\n  beforeEach (done) ->\n    @timeout 4000\n    loader.load 'clmtrackr/WireframeFace', (err, instance) ->\n      return done err if err\n      c = instance\n      done()\n\n  describe 'when instantiated', ->\n    it 'should have an input port', ->\n      chai.expect(c.inPorts.points).to.be.an 'object'\n    it 'should have an output port', ->\n      chai.expect(c.outPorts.paths).to.be.an 'object'\n\n  describe 'when given points', ->\n    beforeEach ->\n      in_points = noflo.internalSocket.createSocket()\n      out_paths = noflo.internalSocket.createSocket()\n      c.inPorts.points.attach in_points\n      c.outPorts.paths.attach out_paths\n      # Make points fixture\n      points = []\n      for i in [0..70]\n        points.push\n          type: 'point'\n          x: Math.random() * 100\n          y: Math.random() * 100\n\n    it 'should make the wireframe', (done) ->\n      out_paths.once 'data', (data) ->\n        chai.expect(data).to.be.an 'array'\n        chai.expect(data.length).to.equal 117\n        chai.expect(data[0].items[0]).to.equal points[28]\n        chai.expect(data[0].items[1]).to.equal points[70]\n        chai.expect(data[0].items[2]).to.equal points[13]\n        done()\n\n      # Send in points fixture\n      in_points.send points\n"},"core/Callback":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.description = `This component calls a given callback function for each\nIP it receives.  The Callback component is typically used to connect\nNoFlo with external Node.js code.`;\n  c.icon = 'sign-out';\n\n  c.inPorts.add('in', {\n    description: 'Object passed as argument of the callback',\n    datatype: 'all',\n  });\n  c.inPorts.add('callback', {\n    description: 'Callback to invoke',\n    datatype: 'function',\n    control: true,\n    required: true,\n  });\n  c.outPorts.add(\n    'error',\n    { datatype: 'object' },\n  );\n\n  return c.process((input, output) => {\n    if (!input.hasData('callback', 'in')) {\n      return;\n    }\n    const [callback, data] = input.getData('callback', 'in');\n    if (typeof callback !== 'function') {\n      output.done(new Error('The provided callback must be a function'));\n      return;\n    }\n\n    // Call the callback when receiving data\n    try {\n      callback(data);\n    } catch (e) {\n      output.done(e);\n      return;\n    }\n    output.done();\n  });\n};\n"},"core/Copy":{language:"javascript",source:"const noflo = require('noflo');\nconst owl = require('owl-deepcopy');\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.description = 'deep (i.e. recursively) copy an object';\n  c.icon = 'copy';\n\n  c.inPorts.add('in', {\n    datatype: 'all',\n    description: 'Packet to be copied',\n  });\n  c.outPorts.add('out', {\n    datatype: 'all',\n    description: 'Copy of the original packet',\n  });\n\n  return c.process((input, output) => {\n    if (!input.hasData('in')) {\n      return;\n    }\n    const data = input.getData('in');\n\n    const copy = owl.deepCopy(data);\n    output.sendDone({ out: copy });\n  });\n};\n"},"core/DisconnectAfterPacket":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.description = 'Makes each data packet a stream of its own';\n  c.icon = 'pause';\n  c.forwardBrackets = {};\n  c.autoOrdering = false;\n\n  c.inPorts.add('in', {\n    datatype: 'all',\n    description: 'Packet to be forward with disconnection',\n  });\n  c.outPorts.add('out', {\n    datatype: 'all',\n  });\n\n  let brackets = {};\n  c.tearDown = (callback) => {\n    brackets = {};\n    callback();\n  };\n  return c.process((input, output) => {\n    // Force auto-ordering to be off for this one\n    c.autoOrdering = false;\n\n    const data = input.get('in');\n    if (!brackets[input.scope]) { brackets[input.scope] = []; }\n    if (data.type === 'openBracket') {\n      brackets[input.scope].push(data.data);\n      output.done();\n      return;\n    }\n    if (data.type === 'closeBracket') {\n      brackets[input.scope].pop();\n      output.done();\n      return;\n    }\n\n    if (data.type !== 'data') { return; }\n\n    brackets[input.scope].forEach((bracket) => {\n      output.sendIP('out', new noflo.IP('openBracket', bracket));\n    });\n    output.sendIP('out', data);\n    const closes = brackets[input.scope].slice(0);\n    closes.reverse();\n    brackets[input.scope].forEach((bracket) => {\n      output.sendIP('out', new noflo.IP('closeBracket', bracket));\n    });\n\n    output.done();\n  });\n};\n"},"core/Drop":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.description = 'This component drops every packet it receives with no action';\n  c.icon = 'trash-o';\n\n  c.inPorts.add('in', {\n    datatypes: 'all',\n    description: 'Packet to be dropped',\n  });\n\n  return c.process((input, output) => {\n    const data = input.get('in');\n    data.drop();\n    output.done();\n  });\n};\n"},"core/Kick":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.description = `This component generates a single packet and sends it to\nthe output port. Mostly usable for debugging, but can also be useful\nfor starting up networks.`;\n  c.icon = 'share';\n\n  c.inPorts.add('in', {\n    datatype: 'bang',\n    description: 'Signal to send the data packet',\n  });\n  c.inPorts.add('data', {\n    datatype: 'all',\n    description: 'Packet to be sent',\n    control: true,\n    default: null,\n  });\n  c.outPorts.add('out', {\n    datatype: 'all',\n  });\n\n  return c.process((input, output) => {\n    if (!input.hasStream('in')) { return; }\n    if (input.attached('data').length && !input.hasData('data')) { return; }\n    input.getData('in');\n    const data = input.getData('data');\n    output.send({ out: data });\n    output.done();\n  });\n};\n"},"core/MakeFunction":{language:"javascript",source:"/* eslint no-new-func: \"warn\" */\nconst noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.description = `Evaluates a function each time data hits the \"in\" port \nand sends the return value to \"out\". Within the function \"x\" will \nbe the variable from the in port. For example, to make a ^2 function \ninput \"return x*x;\" to the function port.`;\n  c.icon = 'code';\n\n  c.inPorts.add('in', {\n    datatype: 'all',\n    description: 'Packet to be processed',\n  });\n  c.inPorts.add('function', {\n    datatype: 'string',\n    description: 'Function to evaluate',\n    control: true,\n  });\n  c.outPorts.add('out', {\n    datatype: 'all',\n  });\n  c.outPorts.add('function', {\n    datatype: 'function',\n  });\n  c.outPorts.add('error', {\n    datatype: 'object',\n  });\n\n  const prepareFunction = (func, callback) => {\n    let newFunc;\n    if (typeof func === 'function') {\n      callback(null, func);\n      return;\n    }\n    try {\n      newFunc = Function('x', func);\n    } catch (e) {\n      callback(e);\n      return;\n    }\n    callback(null, newFunc);\n  };\n\n  return c.process((input, output) => {\n    if (input.attached('in').length && !input.hasData('in')) { return; }\n    if (input.hasData('function', 'in')) {\n      // Both function and input data\n      prepareFunction(input.getData('function'), (err, func) => {\n        let result;\n        if (err) {\n          output.done(err);\n          return;\n        }\n        const data = input.getData('in');\n        try {\n          result = func(data);\n        } catch (error) {\n          output.done(error);\n          return;\n        }\n        output.sendDone({\n          function: func,\n          out: result,\n        });\n      });\n      return;\n    }\n    if (!input.hasData('function')) { return; }\n    prepareFunction(input.getData('function'), (err, func) => {\n      if (err) {\n        output.done(err);\n        return;\n      }\n      output.sendDone({ function: func });\n    });\n  });\n};\n"},"core/Merge":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.description = `This component receives data on multiple input ports and \nsends the same data out to the connected output port`;\n  c.icon = 'compress';\n\n  c.inPorts.add('in', {\n    datatype: 'all',\n    description: 'Packet to be forwarded',\n  });\n  c.outPorts.add('out', {\n    datatype: 'all',\n  });\n\n  return c.process((input, output) => {\n    const data = input.get('in');\n    return output.sendDone({ out: data });\n  });\n};\n"},"core/Output":{language:"javascript",source:"const noflo = require('noflo');\nconst { inspect } = require('util');\n\nconst log = (options, data) => {\n  if (options != null) {\n    return console.log(inspect(\n      data,\n      options.showHidden,\n      options.depth,\n      options.colors,\n    ));\n  }\n  return console.log(data);\n};\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.description = 'Sends the data items to console.log';\n  c.icon = 'bug';\n\n  c.inPorts.add('in', {\n    datatype: 'all',\n    description: 'Packet to be printed through console.log',\n  });\n  c.inPorts.add('options', {\n    datatype: 'object',\n    description: 'Options to be passed to console.log',\n    control: true,\n  });\n  c.outPorts.add('out', {\n    datatype: 'all',\n  });\n\n  return c.process((input, output) => {\n    if (!input.hasData('in')) { return; }\n    if (input.attached('options').length && !input.hasData('options')) { return; }\n\n    let options = null;\n    if (input.has('options')) {\n      options = input.getData('options');\n    }\n\n    const data = input.getData('in');\n    log(options, data);\n    output.sendDone({ out: data });\n  });\n};\n"},"core/ReadGlobal":{language:"javascript",source:"/* global window: true */\nconst noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.description = 'Returns the value of a global variable.';\n  c.icon = 'usd';\n\n  c.inPorts.add('name', {\n    description: 'The name of the global variable.',\n    datatype: 'string',\n  });\n\n  c.outPorts.add('value', {\n    description: 'The value of the variable.',\n  });\n  c.outPorts.add('error', {\n    description: 'Any errors that occured reading the variables value.',\n    datatype: 'object',\n  });\n\n  c.forwardBrackets = { name: ['value', 'error'] };\n\n  return c.process((input, output) => {\n    if (!input.hasData('name')) { return; }\n    const data = input.getData('name');\n\n    const value = !noflo.isBrowser() ? global[data] : window[data];\n\n    if (typeof value === 'undefined') {\n      const err = new Error(`\"${data}\" is undefined on the global object.`);\n      output.sendDone(err);\n      return;\n    }\n    output.sendDone({ value });\n  });\n};\n"},"core/Repeat":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.description = `Forwards packets and metadata in the same way \nit receives them`;\n  c.icon = 'forward';\n  c.inPorts.add('in', {\n    datatype: 'all',\n    description: 'Packet to forward',\n  });\n  c.outPorts.add('out', {\n    datatype: 'all',\n  });\n\n  return c.process((input, output) => {\n    const data = input.get('in');\n    output.sendDone({ out: data });\n  });\n};\n",tests:"topic: \"core/Repeat\"\ncases:\n-\n  name: 'sending a boolean'\n  assertion: 'should repeat the same'\n  inputs:\n    in: true\n  expect:\n    out:\n     equals: true\n-\n  name: 'sending a number'\n  assertion: 'should repeat the same'\n  inputs:\n    in: 1000\n  expect:\n    out:\n      equals: 1000\n-\n  name: 'sending a string'\n  assertion: 'should repeat the same'\n  inputs:\n    in: \"my string\"\n  expect:\n    out:\n      equals: \"my string\"\n"},"core/RepeatAsync":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.description = \"Like 'Repeat', except repeat on next tick\";\n  c.icon = 'step-forward';\n  c.inPorts.add('in', {\n    datatype: 'all',\n    description: 'Packet to forward',\n  });\n  c.outPorts.add('out', {\n    datatype: 'all',\n  });\n\n  return c.process((input, output) => {\n    const data = input.get('in');\n    setTimeout(() => output.sendDone({ out: data }), 0);\n  });\n};\n"},"core/RepeatDelayed":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.description = 'Forward packet after a set delay';\n  c.icon = 'clock-o';\n\n  c.timers = [];\n\n  c.inPorts.add('in', {\n    datatype: 'all',\n    description: 'Packet to be forwarded with a delay',\n  });\n  c.inPorts.add('delay', {\n    datatype: 'number',\n    description: 'How much to delay',\n    default: 500,\n    control: true,\n  });\n\n  c.outPorts.add('out', {\n    datatype: 'all',\n  });\n\n  c.tearDown = (callback) => {\n    c.timers.forEach(timer => clearTimeout(timer));\n    c.timers = [];\n    return callback();\n  };\n\n  return c.process((input, output) => {\n    if (!input.hasData('in')) { return; }\n    if (input.attached('delay').length && !input.hasData('delay')) { return; }\n\n    let delay = 500;\n    if (input.hasData('delay')) {\n      delay = input.getData('delay');\n    }\n    const payload = input.get('in');\n\n    const timer = setTimeout(() => {\n      c.timers.splice(c.timers.indexOf(timer), 1);\n      return output.sendDone({ out: payload });\n    }, delay);\n    c.timers.push(timer);\n  });\n};\n",tests:"topic: \"core/RepeatDelayed\"\ncases:\n-\n  name: 'sending a boolean'\n  assertion: 'should repeat the same'\n  inputs:\n    in: true\n  expect:\n    out:\n     equals: true\n-\n  name: 'sending a number'\n  assertion: 'should repeat the same'\n  inputs:\n    in: 1000\n  expect:\n    out:\n      equals: 1000\n-\n  name: 'sending a string'\n  assertion: 'should repeat the same'\n  inputs:\n    in: \"my string\"\n  expect:\n    out:\n      equals: \"my string\"\n\n"},"core/RunInterval":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.description = 'Send a packet at the given interval';\n  c.icon = 'clock-o';\n  c.inPorts.add('interval', {\n    datatype: 'number',\n    description: 'Interval at which output packets are emitted (ms)',\n    required: true,\n    control: true,\n  });\n  c.inPorts.add('start', {\n    datatype: 'bang',\n    description: 'Start the emission',\n  });\n  c.inPorts.add('stop', {\n    datatype: 'bang',\n    description: 'Stop the emission',\n  });\n  c.outPorts.add('out', {\n    datatype: 'bang',\n  });\n\n  c.timers = {};\n\n  const cleanUp = (scope) => {\n    if (!c.timers[scope]) { return; }\n    clearInterval(c.timers[scope].interval);\n    c.timers[scope].deactivate();\n    c.timers[scope] = null;\n  };\n\n  c.tearDown = (callback) => {\n    Object.keys(c.timers).forEach(cleanUp);\n    c.timers = {};\n    callback();\n  };\n\n  c.forwardBrackets = {};\n  return c.process((input, output, context) => {\n    if (input.hasData('start')) {\n      if (!input.hasData('interval')) { return; }\n      const start = input.get('start');\n      if (start.type !== 'data') { return; }\n      const interval = parseInt(input.getData('interval'), 10);\n      // Ensure we deactivate previous interval in this scope, if any\n      cleanUp(start.scope);\n\n      // Set up interval\n      const ctx = context;\n      ctx.interval = setInterval(() => {\n        const bang = new noflo.IP('data', true);\n        bang.scope = start.scope;\n        return c.outPorts.out.sendIP(bang);\n      }, interval);\n\n      // Register scope, we keep it active until stopped\n      c.timers[start.scope] = context;\n      return;\n    }\n\n    if (input.hasData('stop')) {\n      const stop = input.get('stop');\n      if (stop.type !== 'data') { return; }\n      // Deactivate interval in this scope\n      cleanUp(stop.scope);\n      output.done();\n    }\n  });\n};\n"},"core/RunTimeout":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.description = 'Send a packet after the given time in ms';\n  c.icon = 'clock-o';\n\n  c.timer = {};\n\n  c.inPorts.add('time', {\n    datatype: 'number',\n    description: 'Time after which a packet will be sent',\n    required: true,\n    control: true,\n  });\n  c.inPorts.add('start', {\n    datatype: 'bang',\n    description: 'Start the timeout before sending a packet',\n  });\n  c.outPorts.add('out', {\n    datatype: 'bang',\n  });\n\n  c.forwardBrackets = { start: ['out'] };\n\n  c.stopTimer = (scope) => {\n    if (!c.timer[scope]) { return; }\n    clearTimeout(c.timer[scope].timeout);\n    c.timer[scope].deactivate();\n    delete c.timer[scope];\n  };\n\n  c.tearDown = (callback) => {\n    Object.keys(c.timer).forEach(scope => c.stopTimer(scope));\n    callback();\n  };\n\n  return c.process((input, output, context) => {\n    if (!input.hasData('time', 'start')) { return; }\n    const time = parseInt(input.getData('time'), 10);\n    input.getData('start');\n    // Ensure we deactivate previous timeout, if any\n    c.stopTimer(input.scope);\n    // Set up new timer\n    const ctx = context;\n    ctx.timeout = setTimeout(() => {\n      c.timer = null;\n      output.sendDone({ out: true });\n    }, time);\n    c.timer[input.scope] = context;\n  });\n};\n"},"core/SendNext":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.description = 'Sends next packet in buffer when receiving a bang';\n  c.icon = 'forward';\n\n  c.inPorts.add('data', {\n    datatype: 'all',\n  });\n  c.inPorts.add('in', {\n    datatype: 'bang',\n  });\n  c.outPorts.add('out', {\n    datatype: 'all',\n  });\n  c.outPorts.add('empty', {\n    datatype: 'bang',\n    required: false,\n  });\n\n  c.forwardBrackets = {};\n  return c.process((input, output) => {\n    if (!input.hasData('in')) { return; }\n    const bang = input.getData('in');\n\n    if (!input.hasData('data')) {\n      // No data packets in the buffer, send \"empty\"\n      output.sendDone({ empty: true });\n      return;\n    }\n\n    let sent = false;\n    // Loop until we've either drained the buffer completely, or until\n    // we hit the next data packet\n    while (input.has('data')) {\n      if (sent) {\n        // If we already sent data, we look ahead to see if next packet is data and bail out\n        const buf = c.inPorts.data.getBuffer(bang.scope);\n        if (buf[0].type === 'data') { break; }\n      }\n\n      const packet = input.get('data');\n      output.send({ out: packet });\n      if (packet.type === 'data') { sent = true; }\n    }\n    // After the loop we can deactivate\n    output.done();\n  });\n};\n"},"core/Split":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.icon = 'expand';\n  c.description = `This component receives data on a single input port and \nsends the same data out to all connected output ports`;\n\n  c.inPorts.add('in', {\n    datatype: 'all',\n    description: 'Packet to be forwarded',\n  });\n\n  c.outPorts.add('out', {\n    datatype: 'all',\n  });\n\n  return c.process((input, output) => {\n    const data = input.get('in');\n    output.sendDone({ out: data });\n  });\n};\n"},"css/MoveElement":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nsetPosition = (element, attr, value) ->\n  if attr in ['top', 'left']\n    value = \"#{value}px\"\n  element.style.position = 'absolute'\n  element.style[attr] = value\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Change the coordinates of a DOM element'\n  c.icon = 'arrows'\n  c.inPorts.add 'element',\n    datatype: 'object'\n    control: true\n  c.inPorts.add 'point',\n    datatype: 'object'\n  c.inPorts.add 'x',\n    datatype: 'number'\n  c.inPorts.add 'y',\n    datatype: 'number'\n  c.inPorts.add 'z',\n    datatype: 'number'\n  c.outPorts.add 'out',\n    datatype: 'bang'\n\n  c.process (input, output) ->\n    return unless input.hasData 'element'\n    if input.hasData 'point'\n      [element, point] = input.getData 'element', 'point'\n      setPosition element, 'left', point.x\n      setPosition element, 'top', point.y\n      output.sendDone\n        out: true\n      return\n    if input.hasData 'x'\n      [element, x] = input.getData 'element', 'x'\n      setPosition element, 'left', x\n      output.sendDone\n        out: true\n      return\n    if input.hasData 'y'\n      [element, y] = input.getData 'element', 'y'\n      setPosition element, 'top', y\n      output.sendDone\n        out: true\n      return\n    if input.hasData 'z'\n      [element, z] = input.getData 'element', 'z'\n      setPosition element, 'zIndex', z\n      output.sendDone\n        out: true\n      return\n",tests:"noflo = require 'noflo'\nbaseDir = 'noflo-css'\n\ndescribe 'MoveElement component', ->\n  c = null\n  element = null\n  point = null\n  out = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'css/MoveElement', (err, instance) ->\n      return done err if err\n      c = instance\n      element = noflo.internalSocket.createSocket()\n      c.inPorts.element.attach element\n      point = noflo.internalSocket.createSocket()\n      c.inPorts.point.attach point\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n  afterEach ->\n    c.outPorts.out.detach out\n    out = null\n\n  describe 'receiving an element and value', ->\n    it 'should update element properties', (done) ->\n      el = document.getElementById 'moveelement'\n      unless el\n        return done new Error 'Fixture not available'\n      out.on 'data', ->\n        chai.expect(el.style.position).to.equal 'absolute'\n        chai.expect(el.style.top).to.equal '20px'\n        chai.expect(el.style.left).to.equal '42px'\n        done()\n      element.send el\n      point.send\n        x: 42\n        y: 20\n"},"css/ResizeElement":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nsetSize = (element, attr, value) ->\n  element.style.position = 'absolute'\n  element.style[attr] = \"#{value}px\"\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Change the size of a DOM element'\n  c.icon = 'arrows'\n  c.inPorts.add 'element',\n    datatype: 'object'\n    control: true\n  c.inPorts.add 'size',\n    datatype: 'object'\n  c.inPorts.add 'width',\n    datatype: 'number'\n  c.inPorts.add 'height',\n    datatype: 'number'\n  c.outPorts.add 'out',\n    datatype: 'bang'\n  c.process (input, output) ->\n    return unless input.hasData 'element'\n    if input.hasData 'size'\n      [element, size] = input.getData 'element', 'size'\n      setSize element, 'width', size.width\n      setSize element, 'height', size.height\n      output.sendDone\n        out: true\n      return\n    if input.hasData 'width'\n      [element, width] = input.getData 'element', 'width'\n      setSize element, 'width', width\n      output.sendDone\n        out: true\n      return\n    if input.hasData 'height'\n      [element, height] = input.getData 'element', 'height'\n      setSize element, 'height', height\n      output.sendDone\n        out: true\n      return\n",tests:"noflo = require 'noflo'\nbaseDir = 'noflo-css'\n\ndescribe 'ResizeElement component', ->\n  c = null\n  element = null\n  size = null\n  out = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'css/ResizeElement', (err, instance) ->\n      return done err if err\n      c = instance\n      element = noflo.internalSocket.createSocket()\n      c.inPorts.element.attach element\n      size = noflo.internalSocket.createSocket()\n      c.inPorts.size.attach size\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n  afterEach ->\n    c.outPorts.out.detach out\n    out = null\n\n  describe 'receiving an element and value', ->\n    it 'should update element properties', (done) ->\n      el = document.getElementById 'resizeelement'\n      unless el\n        return done new Error 'Fixture not available'\n      out.on 'data', ->\n        chai.expect(el.style.position).to.equal 'absolute'\n        chai.expect(el.style.width).to.equal '20px'\n        chai.expect(el.style.height).to.equal '42px'\n        done()\n      element.send el\n      size.send\n        height: 42\n        width: 20\n"},"css/RotateElement":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nsetRotation = (element, degrees, gpu) ->\n  transform = \"rotate(#{degrees}deg)\"\n  if gpu\n    transform = \"#{transform} translateZ(0px) translate3d(0px, 0px, 0px)\"\n  element.style.transform = transform\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Change the coordinates of a DOM element'\n  c.icon = 'rotate-right'\n  c.inPorts.add 'element',\n    datatype: 'object'\n    control: true\n  c.inPorts.add 'percent',\n    datatype: 'number'\n  c.inPorts.add 'degrees',\n    datatype: 'number'\n  c.inPorts.add 'gpu',\n    datatype: 'boolean'\n    control: true\n    default: true\n    description: 'Whether to GPU-accelerate the rotation'\n  c.outPorts.add 'out',\n    datatype: 'bang'\n\n  c.process (input, output) ->\n    return unless input.hasData 'element'\n    if input.hasData 'percent'\n      [element, percent] = input.getData 'element', 'percent'\n      gpu = if input.hasData('gpu') then input.getData('gpu') else true\n      degrees = 360 * percent % 360\n      setRotation element, degrees, gpu\n      output.sendDone\n        out: true\n      return\n    if input.hasData 'degrees'\n      [element, degrees] = input.getData 'element', 'degrees'\n      gpu = if input.hasData('gpu') then input.getData('gpu') else true\n      setRotation element, degrees, gpu\n      output.sendDone\n        out: true\n      return\n"},"css/SetBackgroundImage":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Set element\\'s CSS background image'\n  c.icon = 'picture'\n  c.inPorts.add 'element',\n    datatype: 'object'\n    control: true\n  c.inPorts.add 'imagedata',\n    datatype: 'string'\n  c.outPorts.add 'out',\n    datatype: 'bang'\n\n  c.process (input, output) ->\n    return unless input.hasData 'element', 'imagedata'\n    [element, imagedata] = input.getData 'element', 'imagedata'\n    element.style.background = 'url(' + imagedata + ') no-repeat center'\n    output.sendDone\n      out: true\n"},"css/SetElementTop":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Set element\\'s CSS top'\n  c.icon = 'arrows-v'\n  c.inPorts.add 'element',\n    datatype: 'object'\n  c.inPorts.add 'top',\n    datatype: 'number'\n  c.outPorts.add 'out',\n    datatype: 'bang'\n  c.process (input, output) ->\n    return unless input.hasData 'element', 'top'\n    [element, top] = input.getData 'element', 'top'\n    element.style.position = 'absolute'\n    element.style.top = \"#{top}px\"\n    output.sendDone\n      out: true\n",tests:"noflo = require 'noflo'\nbaseDir = 'noflo-css'\n\ndescribe 'SetElementTop component', ->\n  c = null\n  element = null\n  top = null\n  out = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'css/SetElementTop', (err, instance) ->\n      return done err if err\n      c = instance\n      element = noflo.internalSocket.createSocket()\n      c.inPorts.element.attach element\n      top = noflo.internalSocket.createSocket()\n      c.inPorts.top.attach top\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n  afterEach ->\n    c.outPorts.out.detach out\n    out = null\n\n  describe 'receiving an element and value', ->\n    it 'should update element properties', (done) ->\n      el = document.getElementById 'setelementtop'\n      unless el\n        return done new Error 'Fixture not available'\n      out.on 'data', ->\n        chai.expect(el.style.position).to.equal 'absolute'\n        chai.expect(el.style.top).to.equal '10px'\n        done()\n      element.send el\n      top.send 10\n"},"dom/AddClass":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Add a class to an element'\n  c.inPorts.add 'element',\n    datatype: 'object'\n  c.inPorts.add 'class',\n    datatype: 'string'\n\n  c.process (input, output) ->\n    return unless input.has 'element', 'class'\n    [element, className] = input.getData 'element', 'class'\n    element.classList.add className\n    output.done()\n",tests:"noflo = require 'noflo'\nbaseDir = 'noflo-dom'\n\ndescribe 'AddClass component', ->\n  c = null\n  element = null\n  classSocket = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'dom/AddClass', (err, instance) ->\n      return done err if err\n      c = instance\n      element = noflo.internalSocket.createSocket()\n      classSocket = noflo.internalSocket.createSocket()\n      c.inPorts.element.attach element\n      c.inPorts.class.attach classSocket\n      done()\n\n  describe 'adding a class to an element', ->\n    el = document.querySelector '#fixtures .addclass'\n    it 'should be able to add the class', (done) ->\n      element.send el\n      classSocket.send 'foo'\n      setTimeout ->\n        chai.expect(el.classList.contains('foo')).to.equal true\n        done()\n      , 0\n"},"dom/AppendChild":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Append elements as children of a parent element'\n  c.inPorts.add 'parent',\n    datatype: 'object'\n  c.inPorts.add 'child',\n    datatype: 'object'\n\n  c.process (input, output) ->\n    return unless input.hasData 'parent', 'child'\n    [parent, child] = input.getData 'parent', 'child'\n    parent.appendChild child\n    output.done()\n",tests:"noflo = require 'noflo'\nbaseDir = 'noflo-dom'\n\ndescribe 'AppendChild component', ->\n  c = null\n  parent = null\n  child = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'dom/AppendChild', (err, instance) ->\n      return done err if err\n      c = instance\n      parent = noflo.internalSocket.createSocket()\n      child = noflo.internalSocket.createSocket()\n      c.inPorts.parent.attach parent\n      c.inPorts.child.attach child\n      done()\n\n  describe 'adding children to an element', ->\n    el = document.querySelector '#fixtures .appendchild'\n    newEl = document.createElement 'p'\n    it 'should initially have no child elements', ->\n      chai.expect(el.hasChildNodes()).to.equal false\n    it 'should be able to add an element', (done) ->\n      parent.send el\n      child.send newEl\n      setTimeout ->\n        chai.expect(el.hasChildNodes()).to.equal true\n        done()\n      , 0\n"},"dom/CreateElement":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Create a new DOM Element'\n  c.inPorts.add 'tagname',\n    datatype: 'string'\n  c.inPorts.add 'container',\n    datatype: 'object'\n  c.outPorts.add 'element',\n    datatype: 'object'\n  c.forwardBrackets =\n    tagname: ['element']\n\n  c.process (input, output) ->\n    return unless input.hasData 'tagname'\n    if c.inPorts.container.isAttached()\n      # If container is attached, we want it too\n      return unless input.hasData 'container'\n\n    tagname = input.getData 'tagname'\n    element = document.createElement tagname\n    if input.hasData 'container'\n      container = input.getData 'container'\n      container.appendChild element\n\n    output.sendDone\n      element: element\n",tests:"noflo = require 'noflo'\nbaseDir = 'noflo-dom'\n\ndescribe 'CreateElement component', ->\n  c = null\n  tagname = null\n  element = null\n  before (done) ->\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'dom/CreateElement', (err, instance) ->\n      return done err if err\n      c = instance\n      tagname = noflo.internalSocket.createSocket()\n      element = noflo.internalSocket.createSocket()\n      c.inPorts.tagname.attach tagname\n      c.outPorts.element.attach element\n      done()\n\n  describe 'creating an Element', ->\n    it 'should produce a new element', (done) ->\n      element.on 'data', (data) ->\n        chai.expect(data).to.be.instanceof HTMLElement\n        done()\n      tagname.send 'div'\n"},"dom/CreateFragment":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c. description = 'Create a new DOM DocumentFragment'\n  c.inPorts.add 'in',\n    datatype: 'bang'\n  c.outPorts.add 'fragment',\n    datatype: 'object'\n\n  c.forwardBrackets =\n    in: ['fragment']\n\n  c.process (input, output) ->\n    return unless input.hasData 'in'\n    input.getData 'in'\n    fragment = document.createDocumentFragment()\n    output.sendDone\n      fragment: fragment\n",tests:"noflo = require 'noflo'\nbaseDir = 'noflo-dom'\n\ndescribe 'CreateFragment component', ->\n  c = null\n  ins = null\n  fragment = null\n  before (done) ->\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'dom/CreateFragment', (err, instance) ->\n      return done err if err\n      c = instance\n      ins = noflo.internalSocket.createSocket()\n      fragment = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach ins\n      c.outPorts.fragment.attach fragment\n      done()\n\n  describe 'creating a DocumentFragment', ->\n    it 'should produce a new fragment', (done) ->\n      fragment.on 'data', (data) ->\n        chai.expect(data).to.be.instanceof DocumentFragment\n        done()\n      ins.send true\n"},"dom/GetAttribute":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = \"Reads the given attribute from the DOM element on the in\n    port.\"\n\n  # Define in ports.\n  c.inPorts.add 'element',\n    datatype: 'object'\n    description: 'The element from which to read the attribute from.'\n    required: true\n\n  c.inPorts.add 'attribute',\n    datatype: 'string'\n    description: 'The attribute which is read from the DOM element.'\n    required: true\n    control: true\n\n  # Define out ports.\n  c.outPorts.add 'out',\n    datatype: 'string'\n    description: 'Value of the attribute being read.'\n\n  c.forwardBrackets =\n    element: ['out']\n\n  # On data flow.\n  c.process (input, output) ->\n    return unless input.hasData 'element', 'attribute'\n    [element, attribute] = input.getData 'element', 'attribute'\n    value = element.getAttribute attribute\n    output.sendDone\n      out: value\n",tests:"noflo = require 'noflo'\nbaseDir = 'noflo-dom'\n\ndescribe 'GetAttribute component', ->\n  c = null\n  element = null\n  attribute = null\n  out = null\n  el = document.querySelector '#fixtures .getattribute'\n  before (done) ->\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'dom/GetAttribute', (err, instance) ->\n      return done err if err\n      c = instance\n      element = noflo.internalSocket.createSocket()\n      attribute = noflo.internalSocket.createSocket()\n      c.inPorts.element.attach element\n      c.inPorts.attribute.attach attribute\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n  afterEach ->\n    c.outPorts.out.detach out\n    out = null\n\n  describe 'with matching query', ->\n    it 'should return value', (done) ->\n      out.on 'data', (data) ->\n        chai.expect(data).to.equal 'bar'\n        done()\n      element.send el\n      attribute.send 'foo'\n  describe 'with non-matching query', ->\n    it 'should return a NULL', (done) ->\n      out.on 'data', (data) ->\n        chai.expect(data).to.be.a 'null'\n        done()\n      attribute.send 'bar'\n      element.send el\n"},"dom/GetElement":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description ='Get a DOM element matching a query'\n  c.inPorts.add 'in',\n    datatype: 'object'\n    description: 'DOM element to constrain the query to'\n  c.inPorts.add 'selector',\n    datatype: 'string'\n    description: 'CSS selector'\n  c.outPorts.add 'element',\n    datatype: 'object'\n  c.outPorts.add 'error',\n    datatype: 'object'\n  c.forwardBrackets =\n    selector: ['element', 'error']\n  c.process (input, output) ->\n    return unless input.hasData 'selector'\n    return unless input.hasData 'in' if input.attached('in').length > 0\n    if input.hasData 'in'\n      # Element-scoped selector\n      [container, selector] = input.getData 'in', 'selector'\n      unless typeof container.querySelector is 'function'\n        output.done new Error 'Given container doesn\\'t support querySelectors'\n        return\n      el = container.querySelectorAll selector\n      unless el.length\n        output.done new Error \"No element matching '#{selector}' found under container\"\n        return\n      for element in el\n        output.send\n          element: element\n      output.done()\n      return\n    selector = input.getData 'selector'\n    el = document.querySelectorAll selector\n    unless el.length\n      output.done new Error \"No element matching '#{selector}' found under document\"\n      return\n    for element in el\n      output.send\n        element: element\n    output.done()\n",tests:"noflo = require 'noflo'\nbaseDir = 'noflo-dom'\n\ndescribe 'GetElement component', ->\n  c = null\n  ins = null\n  selector = null\n  element = null\n  error = null\n  before (done) ->\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'dom/GetElement', (err, instance) ->\n      return done err if err\n      c = instance\n      selector = noflo.internalSocket.createSocket()\n      c.inPorts.selector.attach selector\n      done()\n  beforeEach ->\n    element = noflo.internalSocket.createSocket()\n    c.outPorts.element.attach element\n    error = noflo.internalSocket.createSocket()\n    c.outPorts.error.attach error\n  afterEach ->\n    c.outPorts.element.detach element\n    element = null\n    c.outPorts.error.detach error\n    error = null\n\n  describe 'with non-matching query', ->\n    it 'should transmit an Error when ERROR port is attached', (done) ->\n      error.on 'data', (data) ->\n        chai.expect(data).to.be.an.instanceof Error\n        done()\n      selector.send 'Foo'\n\n  describe 'with invalid query', ->\n    before ->\n      ins = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach ins\n    after ->\n      c.inPorts.in.detach ins\n    it 'should transmit an Error when ERROR port is attached', (done) ->\n      error.on 'data', (data) ->\n        chai.expect(data).to.be.an.instanceof Error\n        done()\n      selector.send 'baz'\n      ins.send {}\n\n  describe 'with invalid container', ->\n    before ->\n      ins = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach ins\n    after ->\n      c.inPorts.in.detach ins\n    it 'should transmit an Error when ERROR port is attached', (done) ->\n      error.on 'data', (data) ->\n        chai.expect(data).to.be.an.instanceof Error\n        done()\n      selector.send 'baz'\n      ins.send {}\n\n  describe 'with matching query without container', ->\n    it 'should send the matched element to the ELEMENT port', (done) ->\n      query = '#fixtures .getelement'\n      el = document.querySelector query\n      error.on 'data', (data) ->\n        done data\n      element.on 'data', (data) ->\n        chai.expect(data.tagName).to.exist\n        chai.expect(data.tagName).to.equal 'DIV'\n        chai.expect(data.innerHTML).to.equal 'Foo'\n        chai.expect(data).to.equal el\n        done()\n      selector.send query\n\n  describe 'with matching query with container', ->\n    before ->\n      ins = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach ins\n    after ->\n      c.inPorts.in.detach ins\n    it 'should send the matched element to the ELEMENT port', (done) ->\n      container = document.querySelector '#fixtures'\n      el = document.querySelector '#fixtures .getelement'\n      error.on 'data', (data) ->\n        done data\n      element.on 'data', (data) ->\n        chai.expect(data.tagName).to.exist\n        chai.expect(data.tagName).to.equal 'DIV'\n        chai.expect(data.innerHTML).to.equal 'Foo'\n        chai.expect(data).to.equal el\n        done()\n      ins.send container\n      selector.send '.getelement'\n"},"dom/HasClass":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Check if an element has a given class'\n  c.inPorts.add 'element',\n    datatype: 'object'\n  c.inPorts.add 'class',\n    datatype: 'string'\n  c.outPorts.add 'element',\n    datatype: 'object'\n  c.outPorts.add 'missed',\n    datatype: 'object'\n  c.process (input, output) ->\n    return unless input.hasData 'element', 'class'\n    [element, klass] = input.getData 'element', 'class'\n    if element.classList.contains klass\n      output.sendDone\n        element: element\n      return\n    output.sendDone\n      missed: element\n"},"dom/Listen":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'addEventListener for specified event type'\n  c.icon = 'stethoscope'\n\n  c.inPorts.add 'element',\n    datatype: 'object'\n  c.inPorts.add 'type',\n    datatype: 'string'\n  c.inPorts.add 'preventdefault',\n    datatype: 'boolean'\n    control: true\n    default: false\n  c.outPorts.add 'element',\n    datatype: 'object'\n  c.outPorts.add 'event',\n    datatype: 'object'\n\n  c.elements = {}\n  cleanUp = (scope) ->\n    return unless c.elements[scope]\n    {element, event, listener} = c.elements[scope]\n    element.removeEventListener event, listener\n    c.elements[scope].deactivate()\n    delete c.elements[scope]\n  c.tearDown = (callback) ->\n    for scope, element of c.elements\n      cleanUp scope\n    c.elements = {}\n    callback()\n  c.forwardBrackets = {}\n\n  c.process (input, output, context) ->\n\n    return unless input.hasData 'element', 'type'\n    [element, type] = input.getData 'element', 'type'\n\n    preventDefault = false\n    if input.hasData 'preventdefault'\n      preventDefault = input.getData 'preventdefault'\n\n    scope = null\n    cleanUp scope\n\n    context.element = element\n    context.event = type\n    context.listener = (event) ->\n      event.preventDefault() if preventDefault\n      output.send\n        element: context.element\n        event: event\n    c.elements[context] = context\n    element.addEventListener type, context.listener\n"},"dom/ReadHtml":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Read HTML from an existing element'\n  c.inPorts.add 'container',\n    datatype: 'object'\n  c.outPorts.add 'html',\n    datatype: 'string'\n  c.forwardBrackets =\n    container: ['html']\n  c.process (input, output) ->\n    return unless input.hasData 'container'\n    container = input.getData 'container'\n    output.sendDone\n      html: container.innerHTML\n"},"dom/RemoveClass":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Remove a class from an element'\n  c.inPorts.add 'element',\n    datatype: 'object'\n  c.inPorts.add 'class',\n    datatype: 'string'\n\n  c.process (input, output) ->\n    return unless input.has 'element', 'class'\n    [element, className] = input.getData 'element', 'class'\n    element.classList.remove className\n    output.done()\n",tests:"noflo = require 'noflo'\nbaseDir = 'noflo-dom'\n\ndescribe 'RemoveClass component', ->\n  c = null\n  element = null\n  classSocket = null\n  before (done) ->\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'dom/RemoveClass', (err, instance) ->\n      return done err if err\n      c = instance\n      element = noflo.internalSocket.createSocket()\n      classSocket = noflo.internalSocket.createSocket()\n      c.inPorts.element.attach element\n      c.inPorts.class.attach classSocket\n      done()\n\n  describe 'removing a class from an element', ->\n    el = document.querySelector '#fixtures .removeclass'\n    it 'should be able to remove the class', (done) ->\n      element.send el\n      classSocket.send 'foo'\n      setTimeout ->\n        chai.expect(el.classList.contains('foo')).to.equal false\n        done()\n      , 0\n"},"dom/RemoveElement":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Remove an element from DOM'\n  c.inPorts.add 'element',\n    datatype: 'object'\n  c.process (input, output) ->\n    return unless input.hasData 'element'\n    element = input.getData 'element'\n    return unless element.parentNode\n    element.parentNode.removeChild element\n    output.done()\n"},"dom/RequestAnimationFrame":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nrequestAnimationFrame =\n  window.requestAnimationFrame       ||\n  window.webkitRequestAnimationFrame ||\n  window.mozRequestAnimationFrame    ||\n  window.oRequestAnimationFrame      ||\n  window.msRequestAnimationFrame     ||\n  (callback, element) ->\n    window.setTimeout( ->\n      callback(+new Date())\n    , 1000 / 60)\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Sends bangs that correspond with screen refresh rate.'\n  c.icon = 'film'\n\n  c.inPorts.add 'start',\n    datatype: 'bang'\n  c.inPorts.add 'stop',\n    datatype: 'bang'\n  c.outPorts.add 'out',\n    datatype: 'bang'\n\n  c.running = {}\n  cleanUp = (scope) ->\n    return unless c.running[scope]\n    c.running[scope].deactivate()\n    delete c.running[scope]\n  c.tearDown = (callback) ->\n    for scope, running of c.running\n      cleanUp scope\n    c.running = {}\n    callback()\n  c.animate = (scope, output) ->\n    # Stop when context has been stopped\n    return unless c.running[scope]\n    # Send bang\n    output.send true\n    # Request next frame\n    requestAnimationFrame c.animate.bind c, scope, output\n\n  c.forwardBrackets = {}\n  c.process (input, output, context) ->\n    if input.hasData 'start'\n      start = input.get 'start'\n      return unless start.type is 'data'\n      # Ensure previous was deactivated\n      cleanUp start.scope\n\n      # Register scope\n      c.running[start.scope] = context\n\n      # Request first frame\n      requestAnimationFrame c.animate.bind c, start.scope, output\n      return\n\n    if input.hasData 'stop'\n      stop = input.get 'stop'\n      return unless stop.type is 'data'\n      # Deactivate this scope\n      cleanUp stop.scope\n      return\n"},"dom/SetAttribute":{language:"coffeescript",source:"'use strict'\n\n# @runtime noflo-browser\n\nnoflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = \"Set the given attribute on the DOM element to the received\n    value.\"\n    \n  # Define in ports.\n  c.inPorts.add 'element',\n    datatype: 'object'\n    description: 'The element on which to set the attribute.'\n\n  c.inPorts.add 'attribute',\n    datatype: 'string'\n    description: 'The attribute which is set on the DOM element.'\n\n  c.inPorts.add 'value',\n    datatype: 'string'\n    description: 'Value of the attribute being set.'\n  \n  # Define out ports.\n  c.outPorts.add 'element',\n    datatype: 'object'\n    description: 'The element that was updated.'\n\n  c.forwardBrackets =\n    element: ['element']\n    value: ['element']\n\n  c.process (input, output) ->\n    return unless input.hasData 'element', 'attribute', 'value'\n    [element, attribute, value] = input.getData 'element', 'attribute', 'value'\n    if typeof value is 'object'\n      if toString.call(value) is '[object Array]'\n        value = value.join ' '\n      else\n        newVal = []\n        newVal.push val for key, val of value\n        value = newVal.join ' '\n    if attribute is \"value\"\n      element.value = value\n    else\n      element.setAttribute attribute, value\n\n    output.sendDone\n      element: element\n",tests:"noflo = require 'noflo'\nbaseDir = 'noflo-dom'\n\ndescribe 'SetAttribute component', ->\n  c = null\n  element = null\n  attribute = null\n  value = null\n  out = null\n  el = document.querySelector '#fixtures .setattribute'\n  before (done) ->\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'dom/SetAttribute', (err, instance) ->\n      return done err if err\n      c = instance\n      element = noflo.internalSocket.createSocket()\n      attribute = noflo.internalSocket.createSocket()\n      value = noflo.internalSocket.createSocket()\n      c.inPorts.element.attach element\n      c.inPorts.attribute.attach attribute\n      c.inPorts.value.attach value\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.element.attach out\n  afterEach ->\n    c.outPorts.element.detach out\n    out = null\n\n  describe 'when called', ->\n    it 'should return element', (done) ->\n      out.on 'data', (data) ->\n        chai.expect(data).to.equal el\n        done()\n      element.send el\n      attribute.send 'foo'\n      value.send 'baz'\n  describe 'with matching query', ->\n    it 'should update attribute', (done) ->\n      out.on 'data', (data) ->\n        content = el.getAttribute 'foo'\n        chai.expect(content).to.equal 'baz'\n        done()\n      element.send el\n      attribute.send 'foo'\n      value.send 'baz'\n  describe 'with non-matching query', ->\n    it 'should create attribute', (done) ->\n      out.on 'data', (data) ->\n        content = el.getAttribute 'bar'\n        chai.expect(content).to.equal 'baz'\n        done()\n      element.send el\n      attribute.send 'bar'\n      value.send 'baz'\n\n"},"dom/WriteHtml":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Write HTML inside an existing element'\n  c.inPorts.add 'container',\n    datatype: 'object'\n  c.inPorts.add 'html',\n    datatype: 'string'\n  c.outPorts.add 'container',\n    datatype: 'object'\n  c.process (input, output) ->\n    return unless input.hasData 'container', 'html'\n    [container, html] = input.getData 'container', 'html'\n    container.innerHTML = html\n    output.sendDone\n      container: container\n"},"flow/Accept":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.description = 'accept and forward certain incoming packets';\n  c.inPorts.add('in', {\n    datatype: 'all',\n    description: 'An IP to be forwarded if accepted',\n  });\n  c.inPorts.add('accept', {\n    datatype: 'all',\n    description: 'IP to be accepted',\n  });\n  c.inPorts.add('reset', {\n    datatype: 'bang',\n    description: 'Reset the list accepted IPs',\n  });\n  c.outPorts.add('out',\n    { datatype: 'all' });\n  c.accepts = {};\n  c.tearDown = (callback) => {\n    c.accepts = {};\n    callback();\n  };\n  return c.process((input, output) => {\n    if (input.hasData('accept')) {\n      const accept = input.getData('accept');\n      if (!c.accepts[input.scope]) { c.accepts[input.scope] = []; }\n      c.accepts[input.scope].push(accept);\n      output.done();\n      return;\n    }\n    if (input.hasData('reset')) {\n      input.getData('reset');\n      c.accepts = {};\n      output.done();\n      return;\n    }\n    if (!input.hasData('in')) { return; }\n    const data = input.getData('in');\n    if (c.accepts[input.scope].indexOf(data) === -1) {\n      output.done();\n      return;\n    }\n    output.sendDone({ out: data });\n  });\n};\n",tests:"describe('Accept component', () => {\n  let loader = null;\n  let accept = null;\n  let ins = null;\n  let out = null;\n\n  before(() => {\n    loader = new noflo.ComponentLoader(baseDir);\n  });\n  beforeEach(function (done) {\n    this.timeout(4000);\n    loader.load('flow/Accept', (err, instance) => {\n      if (err) {\n        done(err);\n        return;\n      }\n      ins = noflo.internalSocket.createSocket();\n      instance.inPorts.in.attach(ins);\n      accept = noflo.internalSocket.createSocket();\n      instance.inPorts.accept.attach(accept);\n      out = noflo.internalSocket.createSocket();\n      instance.outPorts.out.attach(out);\n      done();\n    });\n  });\n  describe('accepting only certain numbers', () => {\n    it('should send the expected numbers out', (done) => {\n      const expected = [\n        '< foo',\n        '1',\n        '3',\n        '>',\n      ];\n      const received = [];\n      out.on('begingroup', (group) => received.push(`< ${group}`));\n      out.on('data', (data) => received.push(`${data}`));\n      out.on('endgroup', () => {\n        received.push('>');\n        if (received.length !== expected.length) { return; }\n        chai.expect(received).to.eql(expected);\n        done();\n      });\n      accept.send(1);\n      accept.send(3);\n      ins.beginGroup('foo');\n      ins.send(1);\n      ins.send(2);\n      ins.send(3);\n      ins.send(4);\n      ins.endGroup('foo');\n    });\n  });\n});\n"},"flow/All":{language:"javascript",source:"const noflo = require('noflo');\n\nfunction prepareScope() {\n  const data = {\n    results: {},\n    resolved: false,\n    rejected: false,\n  };\n  return data;\n}\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.description = 'Like Promise.all, wait for result from all connected inputs and send them or an error out';\n  c.icon = 'compress';\n  c.inPorts.add('in', {\n    datatype: 'all',\n    addressable: true,\n  });\n  c.inPorts.add('error',\n    { datatype: 'object' });\n  c.outPorts.add('out',\n    { datatype: 'array' });\n  c.outPorts.add('error',\n    { datatype: 'object' });\n  c.pending = {};\n  c.tearDown = (callback) => {\n    c.pending = {};\n    callback();\n  };\n  c.forwardBrackets = {};\n  return c.process((input, output) => {\n    if (input.hasData('error')) {\n      // There is a failure in this scope, reject it\n      const err = input.getData('error');\n      if (!c.pending[input.scope]) {\n        c.pending[input.scope] = prepareScope();\n      }\n      if (c.pending[input.scope].rejected || c.pending[input.scope].resolved) {\n        // This scope was already resolved\n        output.done();\n        return;\n      }\n      // Mark scope as rejected\n      c.pending[input.scope].rejected = true;\n      // Drop any results since something failed\n      delete c.pending[input.scope].results;\n      output.sendDone({ error: err });\n      return;\n    }\n\n    // See if we have any input results\n    const indexesWithStreams = input.attached('in').filter((idx) => input.hasStream(['in', idx]));\n    if (!indexesWithStreams.length) { return; }\n\n    if (!c.pending[input.scope]) {\n      c.pending[input.scope] = prepareScope();\n    }\n\n    // Check if the execution was already resolved\n    if (c.pending[input.scope].rejected || c.pending[input.scope].resolved) {\n      indexesWithStreams.forEach((idx) => {\n        // Drop all packets that arrive after resolution\n        const stream = input.getStream(['in', idx]);\n        return stream.map((ip) => ip.drop());\n      });\n      output.done();\n      return;\n    }\n\n    // Read results\n    const {\n      results,\n    } = c.pending[input.scope];\n    indexesWithStreams.forEach((idx) => {\n      const stream = input.getStream(['in', idx]).filter((ip) => ip.type === 'data');\n      // If this connection already sent, disregard the new stream\n      if (results[idx]) { return; }\n      // Add to results\n      if (!results[idx]) { results[idx] = []; }\n      results[idx] = results[idx].concat(stream);\n    });\n\n    // Check if we have all results\n    const attached = input.attached('in');\n    for (let i = 0; i < attached.length; i += 1) {\n      const idx = attached[i];\n      if (!results[idx] || !results[idx].length) {\n        // Still waiting\n        output.done();\n        return;\n      }\n    }\n\n    // Mark as resolved\n    c.pending[input.scope].resolved = true;\n    // Send data\n    const resultData = input.attached('in').map((idx) => results[idx].map((ip) => ip.data));\n    output.sendDone({ out: resultData });\n    // Clean packets\n    delete c.pending[input.scope].results;\n  });\n};\n",tests:"describe('All component', () => {\n  let c = null;\n  const ins = [];\n  let errIn = null;\n  let out = null;\n  let errOut = null;\n\n  before(function (done) {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    loader.load('flow/All', (err, instance) => {\n      if (err) {\n        done(err);\n        return;\n      }\n      c = instance;\n      ins.push(noflo.internalSocket.createSocket());\n      ins.push(noflo.internalSocket.createSocket());\n      ins.push(noflo.internalSocket.createSocket());\n      ins.push(noflo.internalSocket.createSocket());\n      ins.push(noflo.internalSocket.createSocket());\n      errIn = noflo.internalSocket.createSocket();\n      instance.inPorts.error.attach(errIn);\n      done();\n    });\n  });\n  beforeEach(() => {\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n    errOut = noflo.internalSocket.createSocket();\n    c.outPorts.error.attach(errOut);\n  });\n  afterEach(() => {\n    c.outPorts.out.detach(out);\n    out = null;\n    c.outPorts.error.detach(errOut);\n    errOut = null;\n  });\n  describe('receiving results for two inbound connections', () => {\n    before(() => {\n      c.inPorts.in.attach(ins[0]);\n      c.inPorts.in.attach(ins[1]);\n    });\n    after((done) => {\n      c.inPorts.in.detach(ins[1]);\n      c.inPorts.in.detach(ins[0]);\n      c.shutdown(done);\n    });\n    it('should send the results out', (done) => {\n      errOut.on('data', done);\n      out.on('data', (data) => {\n        chai.expect(data).to.eql([\n          ['hello world'],\n          [123],\n        ]);\n        done();\n      });\n      ins[1].send(123);\n      ins[0].send('hello world');\n    });\n    it('should support a stream in input data', (done) => {\n      errOut.on('data', done);\n      out.on('data', (data) => {\n        chai.expect(data).to.eql([\n          ['hello world'],\n          [123, 456],\n        ]);\n        done();\n      });\n      ins[1].send(new noflo.IP('openBracket', null,\n        { scope: 0 }));\n      ins[1].send(new noflo.IP('data', 123,\n        { scope: 0 }));\n      ins[1].send(new noflo.IP('data', 456,\n        { scope: 0 }));\n      ins[1].send(new noflo.IP('closeBracket', null,\n        { scope: 0 }));\n      ins[0].send(new noflo.IP('data', 'hello world',\n        { scope: 0 }));\n    });\n    it('should only use first stream from input data', (done) => {\n      errOut.on('data', done);\n      out.on('data', (data) => {\n        chai.expect(data).to.eql([\n          ['hello world'],\n          [123],\n        ]);\n        done();\n      });\n      ins[1].send(new noflo.IP('data', 123,\n        { scope: 3 }));\n      ins[1].send(new noflo.IP('data', 456,\n        { scope: 3 }));\n      ins[0].send(new noflo.IP('data', 'hello world',\n        { scope: 3 }));\n    });\n    it('should send results by scope', (done) => {\n      const expected = [{\n        scope: 2,\n        data: [['hello world'], [123]],\n      },\n      {\n        scope: 1,\n        data: [[5542], ['foo bar']],\n      },\n      ];\n      errOut.on('data', done);\n      out.on('ip', (ip) => {\n        if (ip.type !== 'data') { return; }\n        const expect = expected.shift();\n        chai.expect(ip.scope).to.equal(expect.scope);\n        chai.expect(ip.data).to.eql(expect.data);\n        if (expected.length) { return; }\n        done();\n      });\n      ins[0].send(new noflo.IP('data', 5542,\n        { scope: 1 }));\n      ins[1].send(new noflo.IP('data', 123,\n        { scope: 2 }));\n      ins[0].send(new noflo.IP('data', 'hello world',\n        { scope: 2 }));\n      ins[1].send(new noflo.IP('data', 'foo bar',\n        { scope: 1 }));\n    });\n  });\n  describe('receiving result and error for two inbound connections', () => {\n    before(() => {\n      c.inPorts.in.attach(ins[0]);\n      c.inPorts.in.attach(ins[1]);\n    });\n    after((done) => {\n      c.inPorts.in.detach(ins[1]);\n      c.inPorts.in.detach(ins[0]);\n      c.shutdown(done);\n    });\n    it('should send the error out and no results', (done) => {\n      errOut.on('data', (err) => {\n        chai.expect(err).to.be.an('error');\n        chai.expect(err.message).to.equal('Error on first');\n        done();\n      });\n      out.on('data', () => done(new Error('Unexpected data received')));\n      ins[1].send(123);\n      errIn.send(new Error('Error on first'));\n    });\n    it('should send the error out and no results', (done) => {\n      errOut.on('ip', (ip) => {\n        if (ip.type !== 'data') { return; }\n        chai.expect(ip.data).to.be.an('error');\n        chai.expect(ip.data.message).to.equal('Error on scope');\n        chai.expect(ip.scope).to.equal(0);\n        done();\n      });\n      out.on('data', () => done(new Error('Unexpected data received')));\n      ins[1].send(new noflo.IP('data', 123,\n        { scope: 0 }));\n      ins[1].send(new noflo.IP('data', 456,\n        { scope: 0 }));\n      errIn.send(new noflo.IP('data', new Error('Error on scope'),\n        { scope: 0 }));\n    });\n    it('should send results by scope', (done) => {\n      const expected = [{\n        scope: 2,\n        error: 'Second scope failed',\n      },\n      {\n        scope: 1,\n        data: [[65432], ['foo bar baz']],\n      },\n      ];\n      errOut.on('ip', (ip) => {\n        if (ip.type !== 'data') { return; }\n        const expect = expected.shift();\n        chai.expect(ip.scope).to.equal(expect.scope);\n        chai.expect(ip.data).to.be.an('error');\n        chai.expect(ip.data.message).to.eql(expect.error);\n        if (expected.length) { return; }\n        done();\n      });\n      out.on('ip', (ip) => {\n        if (ip.type !== 'data') { return; }\n        const expect = expected.shift();\n        chai.expect(ip.scope).to.equal(expect.scope);\n        chai.expect(ip.data).to.eql(expect.data);\n        if (expected.length) { return; }\n        done();\n      });\n      ins[0].send(new noflo.IP('data', 65432,\n        { scope: 1 }));\n      ins[1].send(new noflo.IP('data', 123,\n        { scope: 2 }));\n      errIn.send(new noflo.IP('data', new Error('Second scope failed'),\n        { scope: 2 }));\n      ins[1].send(new noflo.IP('data', 'foo bar baz',\n        { scope: 1 }));\n    });\n  });\n});\n"},"flow/CleanDisconnect":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.description = 'when several streams are nested through the array in-port (i.e. a connect through one of the ports before there is a disconnect), separate the streams into distinct streams with no overlapping';\n  c.inPorts.add('in', {\n    datatype: 'all',\n    addressable: true,\n  });\n  c.outPorts.add('out', {\n    datatype: 'all',\n    addressable: true,\n  });\n  c.forwardBrackets = {};\n  return c.process((input, output) => {\n    const indexesWithStreams = input.attached('in').filter((idx) => input.hasStream(['in', idx]));\n    if (!indexesWithStreams.length) { return; }\n    indexesWithStreams.forEach((idx) => {\n      const stream = input.getStream(['in', idx]);\n      stream.forEach((packet) => {\n        output.send({\n          out: {\n            ...packet,\n            index: idx,\n          },\n        });\n      });\n    });\n    output.done();\n  });\n};\n",tests:"describe('CleanDisconnect component', () => {\n  const g = {};\n  let loader = null;\n\n  before(() => {\n    loader = new noflo.ComponentLoader(baseDir);\n  });\n  beforeEach(function (done) {\n    this.timeout(4000);\n    loader.load('flow/CleanDisconnect', (err, instance) => {\n      if (err) {\n        done(err);\n        return;\n      }\n      g.c = instance;\n      g.insA = noflo.internalSocket.createSocket();\n      g.insB = noflo.internalSocket.createSocket();\n      g.insC = noflo.internalSocket.createSocket();\n      g.outA = noflo.internalSocket.createSocket();\n      g.outB = noflo.internalSocket.createSocket();\n      g.outC = noflo.internalSocket.createSocket();\n      g.c.inPorts.in.attach(g.insA);\n      g.c.inPorts.in.attach(g.insB);\n      g.c.inPorts.in.attach(g.insC);\n      g.c.outPorts.out.attach(g.outA);\n      g.c.outPorts.out.attach(g.outB);\n      g.c.outPorts.out.attach(g.outC);\n      done();\n    });\n  });\n\n  describe('when g.instantiated', () => {\n    it('should have input ports', () => chai.expect(g.c.inPorts.in).to.be.an('object'));\n\n    it('should have an g.output port', () => chai.expect(g.c.outPorts.out).to.be.an('object'));\n  });\n\n  it('ensure nesting streams get separated by disconnection', (done) => {\n    let count = 0;\n\n    g.outA.on('data', (data) => {\n      chai.expect(data).to.equal('a');\n      chai.expect(count).to.equal(0);\n      count += 1;\n    });\n    g.outB.on('data', (data) => {\n      chai.expect(data).to.equal('b');\n      chai.expect(count).to.equal(2);\n      count += 1;\n    });\n    g.outC.on('data', (data) => {\n      chai.expect(data).to.equal('c');\n      chai.expect(count).to.equal(4);\n      count += 1;\n    });\n\n    g.outA.on('disconnect', () => {\n      chai.expect(count).to.equal(1);\n      count += 1;\n    });\n    g.outB.on('disconnect', () => {\n      chai.expect(count).to.equal(3);\n      count += 1;\n    });\n    g.outC.on('disconnect', () => {\n      chai.expect(count).to.equal(5);\n      done();\n    });\n\n    g.insA.connect();\n    g.insA.send('a');\n    g.insB.connect();\n    g.insB.send('b');\n    g.insC.connect();\n    g.insC.send('c');\n    g.insC.disconnect();\n    g.insB.disconnect();\n    g.insA.disconnect();\n  });\n});\n"},"flow/CleanSplit":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.icon = 'expand';\n  c.description = 'Like core/Split, but only begins sending at end of a stream';\n  c.inPorts.add('in',\n    { datatype: 'all' });\n  c.outPorts.add('out',\n    { datatype: 'all' });\n  c.forwardBrackets = {};\n  return c.process((input, output) => {\n    if (!input.hasStream('in')) { return; }\n    const stream = input.getStream('in');\n    stream.forEach((packet) => {\n      output.send({ out: packet });\n    });\n    output.done();\n  });\n};\n",tests:"describe('CleanSplit component', () => {\n  let loader = null;\n  let ins = null;\n  let out = null;\n\n  before(() => {\n    loader = new noflo.ComponentLoader(baseDir);\n  });\n  beforeEach(function (done) {\n    this.timeout(4000);\n    loader.load('flow/CleanSplit', (err, instance) => {\n      if (err) {\n        done(err);\n        return;\n      }\n      ins = noflo.internalSocket.createSocket();\n      instance.inPorts.in.attach(ins);\n      out = noflo.internalSocket.createSocket();\n      instance.outPorts.out.attach(out);\n      done();\n    });\n  });\n  describe('accepting only certain numbers', () => it('should send the expected numbers out', (done) => {\n    const expected = [\n      '< foo',\n      '1',\n      '2',\n      '3',\n      '>',\n    ];\n    const received = [];\n    out.on('begingroup', (group) => received.push(`< ${group}`));\n    out.on('data', (data) => received.push(`${data}`));\n    out.on('endgroup', () => {\n      received.push('>');\n      if (received.length !== expected.length) { return; }\n      chai.expect(received).to.eql(expected);\n      done();\n    });\n    ins.beginGroup('foo');\n    ins.send(1);\n    ins.send(2);\n    ins.send(3);\n    chai.expect(received).to.eql([]);\n    ins.endGroup('foo');\n  }));\n});\n"},"flow/Collate":{language:"javascript",source:"const noflo = require('noflo');\n\n// Comparison of a single control field\nfunction sort(left, right) {\n  // Lowercase strings to they always sort correctly\n  let l = left;\n  let r = right;\n  if (typeof l === 'string') { l = l.toLowerCase(); }\n  if (typeof r === 'string') { r = r.toLowerCase(); }\n\n  if (l === r) { return 0; }\n  if (l > r) { return 1; }\n  return -1;\n}\n\n// The actual collation algorithm, returns a closure with the control fields\n// that can be used with Array.prototype.sort()\nfunction sortByControlFields(fields, a, b) {\n  // If there are no control fields specified we can't sort\n  if (!fields.length) { return 0; }\n\n  // Traverse the fields until you find one to sort by\n  for (let i = 0; i < fields.length; i += 1) {\n    const field = fields[i];\n    const order = sort(a.data[field], b.data[field]);\n    if (order !== 0) {\n      return order;\n    }\n  }\n\n  // All fields were the same, send in order of appearance\n  if (this.indexOf(a) < this.indexOf(b)) {\n    return -1;\n  }\n  return 1;\n}\n\n// Sending the collated objects to the output port together with bracket IPs\nfunction sendWithGroups(packets, fields, output) {\n  let previous = null;\n  packets.forEach((packet) => {\n    // For the first packet send a bracket IP for each control field\n    fields.forEach((field) => {\n      if (previous) { return; }\n      output.send({ out: new noflo.IP('openBracket', field) });\n    });\n\n    // For subsequent packets send ending and opening brackets for fields that\n    // are different\n    if (previous) {\n      for (let idx = 0; idx < fields.length; idx += 1) {\n        const field = fields[idx];\n        if (packet.data[field] !== previous.data[field]) {\n          // Differing field found, close this bracket and all following ones\n          const differing = fields.slice(idx);\n          const closes = differing.slice(0);\n          closes.reverse();\n          closes.forEach((f) => {\n            output.send({ out: new noflo.IP('closeBracket', f) });\n          });\n          differing.forEach((f) => {\n            output.send({ out: new noflo.IP('openBracket', f) });\n          });\n          break;\n        }\n      }\n    }\n\n    // Send it out\n    output.send({ out: packet });\n\n    // Provide for comparison to the next one\n    previous = packet;\n  });\n\n  // Last packet sent, send closing brackets\n  const closes = fields.slice(0);\n  closes.reverse();\n  closes.forEach((field) => {\n    output.send({ out: new noflo.IP('closeBracket', field) });\n  });\n}\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.description = 'Collate two or more streams, based on a list of control field lengths';\n  c.icon = 'sort-amount-asc';\n  // Inport for accepting a comma-separated list of control fields\n  c.inPorts.add('ctlfields', {\n    datatype: 'string',\n    description: 'Comma-separated list of object keys to collate by',\n    control: true,\n  });\n  // Here we accept packets from 0-n connections that will eventually be collated\n  c.inPorts.add('in', {\n    description: 'Objects to collate',\n    datatype: 'object',\n    addressable: true,\n  });\n  // We send the packets in collated order with groups to the output port\n  c.outPorts.add('out', {\n    description: 'Objects in collated order',\n    datatype: 'object',\n  });\n\n  c.forwardBrackets = {};\n\n  return c.process((input, output) => {\n    // We want to have a list of fields to collate by\n    if (!input.hasData('ctlfields')) { return; }\n    // To be able to sort everything we must wait until we have all the data\n    if (!input.attached('in').length) { return; }\n    const indexesWithStreams = input.attached('in').filter((idx) => input.hasStream(['in', idx]));\n    if (indexesWithStreams.length !== input.attached('in').length) { return; }\n\n    let fields = input.getData('ctlfields');\n    if (typeof fields === 'string') {\n      fields = fields.split(',');\n    }\n\n    // Receive the packets\n    let packets = [];\n    indexesWithStreams.forEach((idx) => {\n      const stream = input.getStream(['in', idx]).filter((ip) => ip.type === 'data');\n      packets = packets.concat(stream);\n    });\n    // Sort them by control fields if there are any\n    const original = packets.slice(0);\n    packets.sort(sortByControlFields.bind(original, fields));\n    output.send({ out: new noflo.IP('openBracket', null) });\n    // Send them out\n    sendWithGroups(packets, fields, output);\n    // Send end-of-transmission\n    output.send({ out: new noflo.IP('closeBracket', null) });\n    output.done();\n  });\n};\n",tests:"describe('Collate component', () => {\n  let c = null;\n  let cntl = null;\n  let ins = null;\n  let out = null;\n  let loader = null;\n  before(() => {\n    loader = new noflo.ComponentLoader(baseDir);\n  });\n  beforeEach(function (done) {\n    this.timeout(4000);\n    loader.load('flow/Collate', (err, instance) => {\n      if (err) {\n        done(err);\n        return;\n      }\n      c = instance;\n      cntl = noflo.internalSocket.createSocket();\n      ins = [];\n      ins.push(noflo.internalSocket.createSocket());\n      ins.push(noflo.internalSocket.createSocket());\n      ins.push(noflo.internalSocket.createSocket());\n      out = noflo.internalSocket.createSocket();\n      c.inPorts.ctlfields.attach(cntl);\n      c.outPorts.out.attach(out);\n      done();\n    });\n  });\n\n  describe('Collating a bank statement', () => {\n    it('should return the data in the correct order', (done) => {\n      const original = [\n        'branch,account,date,amount,DEP/WD',\n        '1,3,1992/3/16,9.26,WD',\n        '1,1,1992/3/26,10.10,WD',\n        '1,3,1992/3/13,2.15,WD',\n        '2,1,1992/4/26,12.00,WD',\n        '1,2,1992/3/27,102.99,WD',\n        '2,1,1992/3/08,22.00,WD',\n        '1,3,1992/3/16,9.26,WD',\n        '1,2,1992/3/27,102.99,WD',\n        '1,2,1992/3/26,92.10,WD',\n      ];\n\n      const expected = [\n        '< branch',\n        '< account',\n        '< date',\n        '1,1,1992/3/26,10.10,WD',\n        '> date',\n        '> account',\n        '< account',\n        '< date',\n        '1,2,1992/3/26,92.10,WD',\n        '> date',\n        '< date',\n        '1,2,1992/3/27,102.99,WD',\n        '1,2,1992/3/27,102.99,WD',\n        '> date',\n        '> account',\n        '< account',\n        '< date',\n        '1,3,1992/3/13,2.15,WD',\n        '> date',\n        '< date',\n        '1,3,1992/3/16,9.26,WD',\n        '1,3,1992/3/16,9.26,WD',\n        '> date',\n        '> account',\n        '> branch',\n        '< branch',\n        '< account',\n        '< date',\n        '2,1,1992/3/08,22.00,WD',\n        '> date',\n        '< date',\n        '2,1,1992/4/26,12.00,WD',\n        '> date',\n        '> account',\n        '> branch',\n      ];\n\n      const received = [];\n      const groups = [];\n      out.on('begingroup', (group) => {\n        groups.push(group);\n        if (group === null) { return; }\n        received.push(`< ${group}`);\n      });\n      out.on('data', (data) => {\n        const values = [];\n        Object.keys(data).forEach((key) => {\n          const val = data[key];\n          values.push(val);\n        });\n        received.push(values.join(','));\n      });\n      out.on('endgroup', (group) => {\n        groups.pop();\n        if (group === null) { return; }\n        received.push(`> ${group}`);\n      });\n      out.on('disconnect', () => {\n        chai.expect(received).to.eql(expected);\n        done();\n      });\n\n      // Send the fields to collate by\n      cntl.send('branch,account,date');\n\n      // First line is headers, take that out\n      const headers = original.shift().split(',');\n\n      // Randomize the rest of the entries to make sure we are always collating right\n      original.sort(() => 0.5 - Math.random());\n\n      // Send the beginning of transmission to all inputs\n      ins.forEach((inSock) => {\n        c.inPorts.in.attach(inSock);\n        inSock.beginGroup(null);\n      });\n\n      const hasNotSent = ins.slice(0);\n      for (let index = 0; index < original.length; index += 1) {\n        // Parse comma-separated\n        const entry = original[index];\n        const entryData = entry.split(',');\n        // Convert to object\n        const entryObj = {};\n        for (let idx = 0; idx < headers.length; idx += 1) {\n          const header = headers[idx];\n          entryObj[header] = entryData[idx];\n        }\n\n        // Send to a random input port\n        let randomConnection = Math.floor(Math.random() * ins.length);\n\n        // Ensure each connection sends something\n        if ((original.length - index) === hasNotSent.length) {\n          randomConnection = ins.indexOf(hasNotSent[0]);\n        }\n        if (hasNotSent.indexOf(ins[randomConnection]) !== -1) {\n          hasNotSent.splice(hasNotSent.indexOf(ins[randomConnection]), 1);\n        }\n\n        ins[randomConnection].send(entryObj);\n\n        // Once we're close to the end we end stream on one of the inputs\n        if (index === (original.length - 3)) {\n          const [disconnecting] = Array.from(ins.splice(randomConnection, 1));\n          disconnecting.endGroup();\n        }\n      }\n      // Finally disconnect all\n      ins.forEach((inSock) => {\n        inSock.endGroup();\n      });\n    });\n  });\n\n  describe('Collating space-limited files', () => {\n    before(function () {\n      // This test works with files so it only works on Node.js\n      if (noflo.isBrowser()) {\n        this.skip();\n      }\n    });\n    it('should return the data in the correct order', (done) => {\n      // eslint-disable-next-line\n      const fs = require('fs');\n      // eslint-disable-next-line\n      const path = require('path');\n\n      const master = fs.readFileSync(path.resolve(__dirname, 'fixtures/collate/01master.txt'), 'utf-8');\n      const detail = fs.readFileSync(path.resolve(__dirname, 'fixtures/collate/01detail.txt'), 'utf-8');\n      const output = fs.readFileSync(path.resolve(__dirname, 'fixtures/collate/01output.txt'), 'utf-8');\n      const received = [];\n      const brackets = [];\n      out.on('begingroup', (group) => {\n        if (group === null) { return; }\n        received.push('===> Open Bracket\\r');\n        brackets.push(group);\n      });\n      out.on('data', (data) => received.push(`${data[0]}${data[1]}${data[2]}   ${data[3]}\\r`));\n      out.on('endgroup', (group) => {\n        if (group === null) { return; }\n        brackets.pop();\n        received.push('===> Close Bracket\\r');\n      });\n      out.on('disconnect', () => {\n        received.push('Run complete.\\r\\n');\n        chai.expect(received.join('\\n')).to.equal(output);\n        done();\n      });\n\n      // Configure\n      cntl.send('0,1,2');\n\n      // Send lines\n      c.inPorts.in.attach(ins[0]);\n      c.inPorts.in.attach(ins[1]);\n      ins[0].beginGroup('file');\n      ins[1].beginGroup('file');\n      const masterLines = master.split('\\n');\n      masterLines.forEach((line) => {\n        const matched = line.match(/([\\d]{3})([A-Z]{2})([\\d]{5}) {3}([A-Z])/);\n        if (!matched) { return; }\n        matched.shift();\n        ins[0].send(matched);\n      });\n      const detailLines = detail.split('\\n');\n      detailLines.forEach((line) => {\n        const matched = line.match(/([\\d]{3})([A-Z]{2})([\\d]{5}) {3}([A-Z])/);\n        if (!matched) { return; }\n        matched.shift();\n        ins[1].send(matched);\n      });\n\n      // All done\n      ins[0].endGroup();\n      ins[1].endGroup();\n    });\n  });\n});\n"},"flow/CollectUntilIdle":{language:"javascript",source:"const noflo = require('noflo');\n\nfunction clear(c) {\n  if (!c.timeout) { return; }\n  clearTimeout(c.timeout.timeout);\n  c.timeout.ctx.deactivate();\n}\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.description = 'Collect packets and send them when input stops after a given timeout';\n  c.inPorts.add('in', {\n    datatype: 'all',\n    description: 'IPs to collect until a timeout',\n  });\n  c.inPorts.add('timeout', {\n    datatype: 'number',\n    description: 'Amount of time to hold IPs for in milliseconds',\n    default: 300,\n    control: true,\n  });\n  c.outPorts.add('out', {\n    datatype: 'all',\n    description: 'IPs collected until the timeout',\n  });\n  c.timeout = null;\n  c.tearDown = (callback) => {\n    clear(c);\n    return callback();\n  };\n  return c.process((input, output, context) => {\n    let timeout;\n    if (!input.hasData('in')) {\n      return;\n    }\n    if (input.attached('timeout').length && !input.hasData('timeout')) {\n      return;\n    }\n    if (input.hasData('timeout')) {\n      timeout = parseInt(input.getData('timeout'), 10);\n    } else {\n      timeout = 300;\n    }\n\n    clear(c);\n\n    c.timeout = {\n      ctx: context,\n      timeout: setTimeout(() => {\n        while (input.hasData('in')) {\n          const packet = input.getData('in');\n          output.send({ out: packet });\n        }\n        return output.done();\n      },\n      timeout),\n    };\n  });\n};\n",tests:"describe('CollectUntilIdle component', () => {\n  const g = {};\n\n  let loader = null;\n  before(() => {\n    loader = new noflo.ComponentLoader(baseDir);\n  });\n  beforeEach(function (done) {\n    this.timeout(4000);\n    loader.load('flow/CollectUntilIdle', (err, instance) => {\n      if (err) {\n        done(err);\n        return;\n      }\n      g.c = instance;\n      g.ins = noflo.internalSocket.createSocket();\n      g.timeout = noflo.internalSocket.createSocket();\n      g.out = noflo.internalSocket.createSocket();\n      g.c.inPorts.in.attach(g.ins);\n      g.c.inPorts.timeout.attach(g.timeout);\n      g.c.outPorts.out.attach(g.out);\n      done();\n    });\n  });\n\n  describe('when g.instantiated', () => {\n    it('should have input ports', () => {\n      chai.expect(g.c.inPorts.in).to.be.an('object');\n      chai.expect(g.c.inPorts.timeout).to.be.an('object');\n    });\n\n    it('should have an output port', () => {\n      chai.expect(g.c.outPorts.out).to.be.an('object');\n    });\n  });\n\n  describe('without groups', () => {\n    it('should send packets out after timeout', (done) => {\n      const expected = [\n        'a',\n        'b',\n        'c',\n      ];\n      const output = [];\n      g.out.on('begingroup', (group) => output.push(`< ${group}`));\n      g.out.on('data', (data) => {\n        output.push(data);\n        if (output.length !== expected.length) { return; }\n        chai.expect(output).to.eql(expected);\n        done();\n      });\n      g.out.on('endgroup', () => {\n        output.push('>');\n        if (output.length !== expected.length) { return; }\n        chai.expect(output).to.eql(expected);\n        done();\n      });\n      g.timeout.send(300);\n      g.ins.send('a');\n      g.ins.send('b');\n      g.ins.send('c');\n      g.ins.disconnect();\n    });\n  });\n\n  describe('with groups', () => {\n    it('should send packets out after timeout', (done) => {\n      const expected = [\n        '< foo',\n        'a',\n        'b',\n        'c',\n        '>',\n      ];\n      const output = [];\n      g.out.on('begingroup', (group) => output.push(`< ${group}`));\n      g.out.on('data', (data) => {\n        output.push(data);\n        if (output.length !== expected.length) { return; }\n        chai.expect(output).to.eql(expected);\n        done();\n      });\n      g.out.on('endgroup', () => {\n        output.push('>');\n        if (output.length !== expected.length) { return; }\n        chai.expect(output).to.eql(expected);\n        done();\n      });\n      g.timeout.send(300);\n      g.ins.beginGroup('foo');\n      g.ins.send('a');\n      g.ins.send('b');\n      g.ins.send('c');\n      g.ins.endGroup();\n      g.ins.disconnect();\n    });\n  });\n});\n"},"flow/Concat":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.description = 'Gathers data from all incoming connections and sends them together in order of connection';\n  c.inPorts.add('in', {\n    datatype: 'all',\n    addressable: true,\n  });\n  c.outPorts.add('out',\n    { datatype: 'all' });\n  return c.process((input, output) => {\n    const indexesWithStreams = input.attached('in').filter((idx) => input.hasStream(['in', idx]));\n    if (indexesWithStreams.length !== input.attached('in').length) { return; }\n    indexesWithStreams.forEach((idx) => {\n      const stream = input.getStream(['in', idx]);\n      stream.forEach((packet) => {\n        output.send({\n          out: {\n            ...packet,\n            index: idx,\n          },\n        });\n      });\n    });\n    output.done();\n  });\n};\n",tests:"describe('Concat component', () => {\n  const g = {};\n  let inCount = 2;\n  let loader = null;\n  before(() => {\n    loader = new noflo.ComponentLoader(baseDir);\n  });\n  beforeEach(function (done) {\n    this.timeout(4000);\n    loader.load('flow/Concat', (err, instance) => {\n      if (err) {\n        done(err);\n        return;\n      }\n      g.c = instance;\n      g.ins = [];\n      while (inCount) {\n        const sock = noflo.internalSocket.createSocket();\n        g.ins.push(sock);\n        g.c.inPorts.in.attach(sock);\n        inCount -= 1;\n      }\n\n      g.out = noflo.internalSocket.createSocket();\n      g.c.outPorts.out.attach(g.out);\n      done();\n    });\n  });\n\n  it('packets sent to two ports should be ordered', (done) => {\n    g.out.once('data', (data) => {\n      chai.expect(data).to.deep.equal('hello');\n      g.out.once('data', (d) => {\n        chai.expect(d).to.deep.equal('world');\n        done();\n      });\n    });\n\n    g.ins[0].connect();\n    g.ins[1].send('world');\n    g.ins[0].send('hello');\n\n    // For next test\n    inCount = 3;\n  });\n\n  it('packets sent to three ports should be ordered', (done) => {\n    g.out.once('data', (data) => {\n      chai.expect(data).to.deep.equal('foo');\n      g.out.once('data', (d) => {\n        chai.expect(d).to.deep.equal('bar');\n        g.out.once('data', (d2) => {\n          chai.expect(d2).to.deep.equal('baz');\n          done();\n        });\n      });\n    });\n\n    g.ins[0].connect();\n    g.ins[1].send('bar');\n    g.ins[2].send('baz');\n    g.ins[0].send('foo');\n\n    // For next test\n    inCount = 2;\n  });\n\n  it('buffers should be cleared by disconnect to avoid deadlock', (done) => {\n    g.out.once('data', (data) => {\n      chai.expect(data).to.deep.equal('hello');\n      g.out.once('data', (d) => {\n        chai.expect(d).to.deep.equal('world');\n        done();\n      });\n    });\n\n    g.ins[1].send('world');\n    g.ins[0].send('hello');\n  });\n});\n"},"flow/CountDown":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.description = 'count down from particular number, by default 1, and send an empty IP when it hits 0';\n  c.inPorts.add('in', {\n    datatype: 'bang',\n    description: 'IPs to decrease the count down',\n  });\n  c.inPorts.add('count', {\n    datatype: 'int',\n    description: 'Count down starting number',\n    default: 1,\n    control: true,\n  });\n  c.inPorts.add('repeat', {\n    datatype: 'boolean',\n    description: 'Repeat the count down mechanism if true',\n    default: true,\n    control: true,\n  });\n  c.outPorts.add('out', {\n    datatype: 'bang',\n    description: 'IP emitted when the count reach 0',\n  });\n  c.outPorts.add('count', {\n    datatype: 'int',\n    description: 'Number of packets received in this cycle',\n  });\n  c.received = 0;\n  c.tearDown = (callback) => {\n    c.received = 0;\n    callback();\n  };\n  return c.process((input, output) => {\n    let count; let\n      repeat;\n    if (!input.hasData('in')) { return; }\n    if (input.attached('count') && !input.hasData('count')) { return; }\n    if (input.attached('repeat') && !input.hasData('repeat')) { return; }\n    if (input.hasData('count')) {\n      count = input.getData('count');\n    } else {\n      count = 1;\n    }\n    if (input.hasData('repeat')) {\n      repeat = input.getData('repeat');\n    } else {\n      repeat = true;\n    }\n    input.getData('in');\n    c.received += 1;\n    output.send({ count: c.received });\n    if (c.received === count) {\n      output.send({ out: new noflo.IP('data', null) });\n      if (repeat) { c.received = 0; }\n    }\n    output.done();\n  });\n};\n",tests:"describe('CountDown component', () => {\n  let c = null;\n  let count = null;\n  let repeat = null;\n  let ins = null;\n  let out = null;\n  before(function (done) {\n    this.timeout(6000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    loader.load('flow/CountDown', (err, instance) => {\n      if (err) {\n        done(err);\n        return;\n      }\n      c = instance;\n      count = noflo.internalSocket.createSocket();\n      repeat = noflo.internalSocket.createSocket();\n      ins = noflo.internalSocket.createSocket();\n      c.inPorts.count.attach(count);\n      c.inPorts.repeat.attach(repeat);\n      c.inPorts.in.attach(ins);\n      done();\n    });\n  });\n  beforeEach(() => {\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n  });\n  afterEach((done) => {\n    c.outPorts.out.detach(out);\n    out = null;\n    c.shutdown(done);\n  });\n\n  describe('with a number to count down from', () => it('should count each packet', (done) => {\n    let received = 0;\n    out.on('data', (data) => {\n      chai.expect(data).to.be.a('null');\n      received += 1;\n    });\n    out.on('disconnect', () => {\n      chai.expect(received).to.equal(1);\n      done();\n    });\n\n    count.send(2);\n    repeat.send(true);\n    ins.connect();\n    ins.send('packet');\n    ins.disconnect();\n    ins.connect();\n    ins.send('packet');\n    ins.disconnect();\n  }));\n\n  describe('when set to \"no repeat\" mode', () => {\n    it('should only count down once', (done) => {\n      let received = 0;\n      out.on('data', (data) => {\n        chai.expect(data).to.be.a('null');\n        received += 1;\n      });\n      out.on('disconnect', () => {\n        chai.expect(received).to.equal(1);\n        done();\n      });\n\n      repeat.send(false);\n      count.send(2);\n      ins.connect();\n      ins.send('packet');\n      ins.disconnect();\n      ins.connect();\n      ins.send('packet');\n      ins.disconnect();\n      ins.connect();\n      ins.send('packet');\n      ins.disconnect();\n      ins.connect();\n      ins.send('packet');\n      ins.disconnect();\n    });\n  });\n});\n"},"flow/CountedMerge":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.description = 'Like \\'core/Merge\\', but merge up to a specified number of streams.';\n  c.inPorts.add('in', {\n    datatype: 'all',\n    description: 'IP to merge',\n  });\n  c.inPorts.add('threshold', {\n    datatype: 'int',\n    control: true,\n    default: 1,\n  });\n  c.outPorts.add('out',\n    { datatype: 'all' });\n\n  c.received = 0;\n  c.tearDown = (callback) => {\n    c.received = 0;\n    return callback();\n  };\n\n  c.forwardBrackets = {};\n\n  return c.process((input, output) => {\n    if (!input.hasStream('in')) { return; }\n    if (input.attached('threshold') && !input.hasData('threshold')) { return; }\n    let threshold = 1;\n    if (input.hasData('threshold')) {\n      threshold = input.getData('threshold');\n    }\n    const packets = input.getStream('in');\n    if (c.received < threshold) {\n      // We can still send\n      packets.forEach((packet) => {\n        output.send({ out: packet });\n      });\n    } else {\n      // Over threshold, drop packets\n      packets.forEach((packet) => {\n        packet.drop();\n      });\n    }\n    c.received += 1;\n    output.done();\n  });\n};\n",tests:"describe('CountedMerge component', () => {\n  let c = null;\n  let threshold = null;\n  let ins = null;\n  let out = null;\n  before(function (done) {\n    this.timeout(6000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    loader.load('flow/CountedMerge', (err, instance) => {\n      if (err) {\n        done(err);\n        return;\n      }\n      c = instance;\n      threshold = noflo.internalSocket.createSocket();\n      ins = noflo.internalSocket.createSocket();\n      c.inPorts.threshold.attach(threshold);\n      c.inPorts.in.attach(ins);\n      done();\n    });\n  });\n  beforeEach(() => {\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n  });\n  afterEach(() => {\n    c.outPorts.out.detach(out);\n    out = null;\n  });\n\n  describe('with a count or 3 and some streams', () => {\n    it('should merge packets from first three streams', (done) => {\n      const expected = [\n        '< a',\n        'DATA a',\n        '>',\n        '< b',\n        'DATA b',\n        '>',\n        '< c',\n        'DATA c',\n        '>',\n      ];\n      const received = [];\n\n      out.on('begingroup', (grp) => received.push(`< ${grp}`));\n      out.on('data', (data) => received.push(`DATA ${data}`));\n      out.on('endgroup', () => {\n        received.push('>');\n        if (received.length !== expected.length) { return; }\n        setTimeout(() => {\n          chai.expect(received).to.eql(expected);\n          done();\n        }, 100);\n      });\n\n      threshold.send(3);\n\n      ins.connect();\n      ins.beginGroup('a');\n      ins.send('a');\n      ins.endGroup();\n      ins.disconnect();\n      ins.connect();\n      ins.beginGroup('b');\n      ins.send('b');\n      ins.endGroup();\n      ins.disconnect();\n      ins.connect();\n      ins.beginGroup('c');\n      ins.send('c');\n      ins.endGroup();\n      ins.disconnect();\n      ins.connect();\n      ins.beginGroup('d');\n      ins.send('d');\n      ins.endGroup();\n      ins.disconnect();\n    });\n  });\n});\n"},"flow/HasGroup":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.description = 'send connection to \\'yes\\' if its top-level group is one of the provided groups, otherwise \\'no\\'';\n  c.inPorts.add('in', {\n    datatype: 'all',\n    description: 'IPs to route use their groups',\n  });\n  c.inPorts.add('regexp', {\n    datatype: 'string',\n    description: 'Regexps to match groups',\n  });\n  c.inPorts.add('group', {\n    datatype: 'string',\n    description: 'List of groups (one group per IP)',\n  });\n  c.inPorts.add('reset', {\n    datatype: 'bang',\n    description: 'Reset the list of groups and regexps',\n  });\n  c.outPorts.add('yes', {\n    datatype: 'all',\n    description: 'IPs with group that match the groups or regexps provided',\n  });\n  c.outPorts.add('no', {\n    datatype: 'all',\n    description: 'IPs with group that don\\'t match the groups or regexps provided',\n  });\n  c.forwardBrackets = {};\n  c.matchGroups = [];\n  c.regexps = [];\n  const reset = () => {\n    c.matchGroups = [];\n    c.regexps = [];\n  };\n  c.tearDown = (callback) => {\n    reset();\n    callback();\n  };\n  return c.process((input, output) => {\n    if (input.hasData('group')) {\n      c.matchGroups.push(input.getData('group'));\n      output.done();\n      return;\n    }\n    if (input.hasData('regexp')) {\n      c.regexps.push(new RegExp(input.getData('regexp')));\n      output.done();\n      return;\n    }\n    if (input.hasData('reset')) {\n      input.getData('reset');\n      reset();\n      output.done();\n      return;\n    }\n    if (!input.hasStream('in')) { return; }\n    const packets = input.getStream('in');\n    if (packets[0].type !== 'openBracket') {\n      // Stream doesn't start with a group, send to NO\n      packets.forEach((packet) => {\n        output.send({ no: packet });\n      });\n      output.done();\n      return;\n    }\n    let matched = false;\n    const group = packets[0].data;\n    c.matchGroups.forEach((matchGroup) => {\n      if (group !== matchGroup) { return; }\n      matched = true;\n    });\n    c.regexps.forEach((regexp) => {\n      if (group.match(regexp) == null) { return; }\n      matched = true;\n    });\n    if (!matched) {\n      packets.forEach((packet) => {\n        output.send({ no: packet });\n      });\n      output.done();\n      return;\n    }\n    packets.forEach((packet) => {\n      output.send({ yes: packet });\n    });\n    output.done();\n  });\n};\n",tests:"describe('HasGroup component', () => {\n  let c = null;\n  let regexp = null;\n  let group = null;\n  let reset = null;\n  let ins = null;\n  let yesOut = null;\n  let noOut = null;\n  before(function (done) {\n    this.timeout(6000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    loader.load('flow/HasGroup', (err, instance) => {\n      if (err) {\n        done(err);\n        return;\n      }\n      c = instance;\n      regexp = noflo.internalSocket.createSocket();\n      group = noflo.internalSocket.createSocket();\n      reset = noflo.internalSocket.createSocket();\n      ins = noflo.internalSocket.createSocket();\n      c.inPorts.regexp.attach(regexp);\n      c.inPorts.group.attach(group);\n      c.inPorts.reset.attach(reset);\n      c.inPorts.in.attach(ins);\n      done();\n    });\n  });\n  beforeEach(() => {\n    yesOut = noflo.internalSocket.createSocket();\n    c.outPorts.yes.attach(yesOut);\n    noOut = noflo.internalSocket.createSocket();\n    c.outPorts.no.attach(noOut);\n  });\n  afterEach(() => {\n    c.outPorts.yes.detach(yesOut);\n    yesOut = null;\n    c.outPorts.no.detach(noOut);\n    noOut = null;\n    reset.send(true);\n  });\n\n  describe('with an exact group match', () => it('it should get a match', (done) => {\n    noOut.on('data', () => {\n      chai.expect(true, 'Received on wrong port').to.equal(false);\n      done();\n    });\n    yesOut.on('data', (data) => {\n      chai.expect(data).to.equal('a');\n      done();\n    });\n\n    group.send('match');\n    ins.connect();\n    ins.beginGroup('match');\n    ins.send('a');\n    ins.endGroup();\n    ins.disconnect();\n  }));\n\n  describe('with an exact group mismatch', () => it('it should not get a match', (done) => {\n    yesOut.on('data', () => {\n      chai.expect(true, 'Received on wrong port').to.equal(false);\n      done();\n    });\n    noOut.on('data', (data) => {\n      chai.expect(data).to.equal('b');\n      done();\n    });\n\n    group.send('match');\n    ins.connect();\n    ins.beginGroup('not a match');\n    ins.send('b');\n    ins.endGroup();\n    ins.disconnect();\n  }));\n\n  describe('with a regexp group match', () => it('it should get a match', (done) => {\n    noOut.on('data', () => {\n      chai.expect(true, 'Received on wrong port').to.equal(false);\n      done();\n    });\n    yesOut.on('data', (data) => {\n      chai.expect(data).to.equal('c');\n      done();\n    });\n\n    regexp.send('reg.*');\n    ins.connect();\n    ins.beginGroup('a regexp match');\n    ins.send('c');\n    ins.endGroup();\n    ins.disconnect();\n  }));\n});\n"},"flow/Race":{language:"javascript",source:"const noflo = require('noflo');\n\nfunction prepareScope() {\n  const data = {\n    resolved: false,\n    rejected: false,\n  };\n  return data;\n}\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.description = 'Like Promise.race, wait for result from all connected inputs and send first result or an error out';\n  c.icon = 'compress';\n  c.inPorts.add('in', {\n    datatype: 'all',\n    addressable: true,\n  });\n  c.inPorts.add('error',\n    { datatype: 'object' });\n  c.outPorts.add('out',\n    { datatype: 'array' });\n  c.outPorts.add('error',\n    { datatype: 'object' });\n  c.pending = {};\n  c.tearDown = (callback) => {\n    c.pending = {};\n    return callback();\n  };\n  c.forwardBrackets = {};\n  return c.process((input, output) => {\n    if (input.hasData('error')) {\n      // There is a failure in this scope, reject it\n      const err = input.getData('error');\n      if (!c.pending[input.scope]) {\n        c.pending[input.scope] = prepareScope();\n      }\n      if (c.pending[input.scope].rejected || c.pending[input.scope].resolved) {\n        // This scope was already resolved\n        output.done();\n        return;\n      }\n      // Mark scope as rejected\n      c.pending[input.scope].rejected = true;\n      output.sendDone({ error: err });\n      return;\n    }\n\n    // See if we have any input results\n    const indexesWithStreams = input.attached('in').filter((idx) => input.hasStream(['in', idx]));\n    if (!indexesWithStreams.length) { return; }\n\n    if (!c.pending[input.scope]) {\n      c.pending[input.scope] = prepareScope();\n    }\n\n    // Check if the execution was already resolved\n    if (c.pending[input.scope].rejected || c.pending[input.scope].resolved) {\n      indexesWithStreams.forEach((idx) => {\n        // Drop all packets that arrive after resolution\n        const stream = input.getStream(['in', idx]);\n        return Array.from(stream).map((ip) => ip.drop());\n      });\n      output.done();\n      return;\n    }\n\n    // Read results\n    const results = input.getStream(['in', indexesWithStreams[0]]).filter((ip) => ip.type === 'data');\n\n    // Mark as resolved\n    c.pending[input.scope].resolved = true;\n    // Send data\n    const data = results.map((ip) => ip.data);\n    output.sendDone({ out: data });\n  });\n};\n",tests:"describe('Race component', () => {\n  let c = null;\n  const ins = [];\n  let errIn = null;\n  let out = null;\n  let errOut = null;\n\n  before(function (done) {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    loader.load('flow/Race', (err, instance) => {\n      if (err) {\n        done(err);\n        return;\n      }\n      c = instance;\n      ins.push(noflo.internalSocket.createSocket());\n      ins.push(noflo.internalSocket.createSocket());\n      ins.push(noflo.internalSocket.createSocket());\n      ins.push(noflo.internalSocket.createSocket());\n      ins.push(noflo.internalSocket.createSocket());\n      errIn = noflo.internalSocket.createSocket();\n      instance.inPorts.error.attach(errIn);\n      done();\n    });\n  });\n  beforeEach(() => {\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n    errOut = noflo.internalSocket.createSocket();\n    c.outPorts.error.attach(errOut);\n  });\n  afterEach(() => {\n    c.outPorts.out.detach(out);\n    out = null;\n    c.outPorts.error.detach(errOut);\n    errOut = null;\n  });\n  describe('receiving results for two inbound connections', () => {\n    before(() => {\n      c.inPorts.in.attach(ins[0]);\n      c.inPorts.in.attach(ins[1]);\n    });\n    after((done) => {\n      c.inPorts.in.detach(ins[1]);\n      c.inPorts.in.detach(ins[0]);\n      c.shutdown(done);\n    });\n    it('should send the first result out', (done) => {\n      errOut.on('data', done);\n      out.on('data', (data) => {\n        chai.expect(data).to.eql([123]);\n        done();\n      });\n      ins[1].send(123);\n      ins[0].send('hello world');\n    });\n    it('should send results by scope', (done) => {\n      const expected = [{\n        scope: 1,\n        data: 5542,\n      },\n      {\n        scope: 2,\n        data: 123,\n      },\n      ];\n      errOut.on('data', done);\n      out.on('ip', (ip) => {\n        if (ip.type !== 'data') { return; }\n        const expect = expected.shift();\n        chai.expect(ip.scope).to.equal(expect.scope);\n        chai.expect(ip.data).to.eql([expect.data]);\n        if (expected.length) { return; }\n        done();\n      });\n      ins[0].send(new noflo.IP('data', 5542,\n        { scope: 1 }));\n      ins[1].send(new noflo.IP('data', 123,\n        { scope: 2 }));\n      ins[0].send(new noflo.IP('data', 'hello world',\n        { scope: 2 }));\n      ins[1].send(new noflo.IP('data', 'foo bar',\n        { scope: 1 }));\n    });\n  });\n  describe('receiving result and error for two inbound connections', () => {\n    before(() => {\n      c.inPorts.in.attach(ins[0]);\n      c.inPorts.in.attach(ins[1]);\n    });\n    after((done) => {\n      c.inPorts.in.detach(ins[1]);\n      c.inPorts.in.detach(ins[0]);\n      c.shutdown(done);\n    });\n    it('should send the error out and no results', (done) => {\n      errOut.on('data', (err) => {\n        chai.expect(err).to.be.an('error');\n        chai.expect(err.message).to.equal('Error on first');\n        done();\n      });\n      out.on('data', () => done(new Error('Unexpected data received')));\n      errIn.send(new Error('Error on first'));\n      ins[1].send(123);\n    });\n    it('should send the error out and no results', (done) => {\n      errOut.on('ip', (ip) => {\n        if (ip.type !== 'data') { return; }\n        chai.expect(ip.data).to.be.an('error');\n        chai.expect(ip.data.message).to.equal('Error on scope');\n        chai.expect(ip.scope).to.equal(0);\n        done();\n      });\n      out.on('data', () => done(new Error('Unexpected data received')));\n      errIn.send(new noflo.IP('data', new Error('Error on scope'),\n        { scope: 0 }));\n      ins[1].send(new noflo.IP('data', 123,\n        { scope: 0 }));\n      ins[1].send(new noflo.IP('data', 456,\n        { scope: 0 }));\n    });\n    it('should send results by scope', (done) => {\n      const expected = [{\n        scope: 2,\n        error: 'Second scope failed',\n      },\n      {\n        scope: 1,\n        data: 65432,\n      },\n      ];\n      errOut.on('ip', (ip) => {\n        if (ip.type !== 'data') { return; }\n        const expect = expected.shift();\n        chai.expect(ip.scope).to.equal(expect.scope);\n        chai.expect(ip.data).to.be.an('error');\n        chai.expect(ip.data.message).to.eql(expect.error);\n        if (expected.length) { return; }\n        done();\n      });\n      out.on('ip', (ip) => {\n        if (ip.type !== 'data') { return; }\n        const expect = expected.shift();\n        chai.expect(ip.scope).to.equal(expect.scope);\n        chai.expect(ip.data).to.eql([expect.data]);\n        if (expected.length) { return; }\n        done();\n      });\n      errIn.send(new noflo.IP('data', new Error('Second scope failed'),\n        { scope: 2 }));\n      ins[0].send(new noflo.IP('data', 65432,\n        { scope: 1 }));\n      ins[1].send(new noflo.IP('data', 123,\n        { scope: 2 }));\n      ins[1].send(new noflo.IP('data', 'foo bar baz',\n        { scope: 1 }));\n    });\n  });\n});\n"},"flow/Reorder":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.description = 'Send packets in to outport indexes in reverse order when matching number of inport indexes have received data to attached outports';\n  c.inPorts.add('in', {\n    datatype: 'all',\n    addressable: true,\n  });\n  c.outPorts.add('out', {\n    datatype: 'all',\n    addressable: true,\n  });\n  c.forwardBrackets = {};\n  return c.process((input, output) => {\n    const indexesWithStreams = input.attached('in').filter((idx) => input.hasStream(['in', idx]));\n    let attached = c.outPorts.out.listAttached().slice(0);\n    let expectedStreams = attached.length;\n    if (input.attached('in').length < attached.length) {\n      // Fewer attached inputs than outputs, use their number\n      expectedStreams = input.attached('in').length;\n      attached = attached.slice(0, expectedStreams);\n    }\n    if (indexesWithStreams.length < expectedStreams) { return; }\n    const streams = [];\n    indexesWithStreams.forEach((idx) => {\n      streams.push(input.getStream(['in', idx]));\n    });\n    streams.reverse();\n    attached.reverse();\n    attached.forEach((outIdx) => {\n      if (!streams.length) { return; }\n      const stream = streams.shift();\n      stream.forEach((packet) => {\n        output.send(new noflo.IP(packet.type, packet.data, {\n          index: outIdx,\n          datatype: packet.datatype,\n          schema: packet.schema,\n          clonable: packet.clonable,\n        }));\n      });\n    });\n    output.done();\n  });\n};\n",tests:"describe('Reorder component', () => {\n  let loader = null;\n  const g = {};\n\n  before(() => {\n    loader = new noflo.ComponentLoader(baseDir);\n  });\n  beforeEach(function (done) {\n    this.timeout(4000);\n    loader.load('flow/Reorder', (err, instance) => {\n      if (err) {\n        done(err);\n        return;\n      }\n      g.c = instance;\n      g.insA = noflo.internalSocket.createSocket();\n      g.insB = noflo.internalSocket.createSocket();\n      g.insC = noflo.internalSocket.createSocket();\n      g.outA = noflo.internalSocket.createSocket();\n      g.outB = noflo.internalSocket.createSocket();\n      g.outC = noflo.internalSocket.createSocket();\n      g.c.inPorts.in.attach(g.insA);\n      g.c.outPorts.out.attach(g.outA);\n      done();\n    });\n  });\n\n  describe('when instantiated', () => {\n    it('should have input ports', () => chai.expect(g.c.inPorts.in).to.be.an('object'));\n\n    it('should have an g.output port', () => chai.expect(g.c.outPorts.out).to.be.an('object'));\n  });\n\n  it('connect some number of ports and packets are sent in the reverse order of attachment', (done) => {\n    g.c.inPorts.in.attach(g.insB);\n    g.c.inPorts.in.attach(g.insC);\n    g.c.outPorts.out.attach(g.outB);\n    g.c.outPorts.out.attach(g.outC);\n\n    const expected = [\n      '3 c',\n      '2 b',\n      '1 a',\n    ];\n    const received = [];\n\n    g.outA.on('data', (data) => {\n      received.push(`1 ${data}`);\n      if (received.length !== expected.length) { return; }\n      chai.expect(received).to.eql(expected);\n      done();\n    });\n    g.outB.on('data', (data) => {\n      received.push(`2 ${data}`);\n      if (received.length !== expected.length) { return; }\n      chai.expect(received).to.eql(expected);\n      done();\n    });\n    g.outC.on('data', (data) => {\n      received.push(`3 ${data}`);\n      if (received.length !== expected.length) { return; }\n      chai.expect(received).to.eql(expected);\n      done();\n    });\n\n    g.insA.connect();\n    g.insA.send('a');\n    g.insA.disconnect();\n\n    g.insB.connect();\n    g.insB.send('b');\n    g.insB.disconnect();\n\n    g.insC.connect();\n    g.insC.send('c');\n    g.insC.disconnect();\n  });\n\n  it('the number of ports to wait for stream end until forwarding takes place is the lessor of the number of inports and the number of g.outports', (done) => {\n    g.c.inPorts.in.attach(g.insB);\n    g.c.outPorts.out.attach(g.outB);\n    g.c.outPorts.out.attach(g.outC);\n\n    const expected = [\n      '2 b',\n      '1 a',\n    ];\n    const received = [];\n\n    g.outA.on('data', (data) => {\n      received.push(`1 ${data}`);\n      if (received.length !== expected.length) { return; }\n      chai.expect(received).to.eql(expected);\n      done();\n    });\n    g.outB.on('data', (data) => {\n      received.push(`2 ${data}`);\n      if (received.length !== expected.length) { return; }\n      chai.expect(received).to.eql(expected);\n      done();\n    });\n    g.outC.on('data', () => done(new Error('C received data unlike expected')));\n\n    g.insA.connect();\n    g.insA.send('a');\n    g.insA.disconnect();\n\n    g.insB.connect();\n    g.insB.send('b');\n    g.insB.disconnect();\n  });\n});\n"},"flow/ReverseSplit":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.icon = 'expand';\n  c.description = 'Like core/Split, expect the last port gets forwarded packets first';\n  c.inPorts.add('in',\n    { datatype: 'all' });\n  c.outPorts.add('out', {\n    datatype: 'all',\n    addressable: true,\n  });\n  c.forwardBrackets = {};\n  return c.process((input, output) => {\n    if (!input.has('in')) { return; }\n    const packet = input.get('in');\n    const attached = c.outPorts.out.listAttached();\n    attached.reverse();\n    attached.forEach((idx) => {\n      output.send({\n        out: new noflo.IP(packet.type, packet.data, {\n          index: idx,\n          datatype: packet.datatype,\n          schema: packet.schema,\n          clonable: packet.clonable,\n        }),\n      });\n    });\n    output.done();\n  });\n};\n",tests:"describe('ReverseSplit component', () => {\n  const g = {};\n  let loader = null;\n  before(() => {\n    loader = new noflo.ComponentLoader(baseDir);\n  });\n  beforeEach(function (done) {\n    this.timeout(4000);\n    loader.load('flow/ReverseSplit', (err, instance) => {\n      if (err) {\n        done(err);\n        return;\n      }\n      g.c = instance;\n      g.ins = noflo.internalSocket.createSocket();\n      g.outA = noflo.internalSocket.createSocket();\n      g.outB = noflo.internalSocket.createSocket();\n      g.outC = noflo.internalSocket.createSocket();\n      g.c.inPorts.in.attach(g.ins);\n      g.c.outPorts.out.attach(g.outA);\n      g.c.outPorts.out.attach(g.outB);\n      g.c.outPorts.out.attach(g.outC);\n      done();\n    });\n  });\n\n  describe('when instantiated', () => {\n    it('should have input ports', () => chai.expect(g.c.inPorts.in).to.be.an('object'));\n\n    it('should have an g.output port', () => chai.expect(g.c.outPorts.out).to.be.an('object'));\n  });\n\n  it('send some IPs and they are forwarded in reverse order of port attachments', (done) => {\n    let count = 0;\n\n    g.outA.on('data', () => {\n      count += 1;\n      chai.expect(count).to.equal(3);\n      done();\n    });\n    g.outB.on('data', () => {\n      count += 1;\n      chai.expect(count).to.equal(2);\n    });\n    g.outC.on('data', () => {\n      count += 1;\n      chai.expect(count).to.equal(1);\n    });\n\n    g.ins.connect();\n    g.ins.send('a');\n    g.ins.disconnect();\n  });\n});\n"},"flow/Stop":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.description = 'Stop everything that\\'s received and send out once we\\'re told that we\\'re ready to send.';\n  c.icon = 'stop-circle';\n  c.inPorts.add('in', {\n    datatype: 'all',\n    description: 'IPs to buffer until an IP arrives on the ready port',\n  });\n  c.inPorts.add('ready', {\n    datatype: 'bang',\n    description: 'Trigger the emission of all the stored IPs',\n  });\n  c.outPorts.add('out', {\n    datatype: 'all',\n    description: 'IPs forwarded from the in port',\n  });\n  c.forwardBracets = {};\n  return c.process((input, output) => {\n    if (!input.hasData('ready', 'in')) { return; }\n    input.getData('ready');\n    const packets = [];\n    while (input.has('in')) {\n      packets.push(input.get('in'));\n    }\n    packets.forEach((packet) => {\n      output.send({ out: packet });\n    });\n    output.done();\n  });\n};\n",tests:"describe('Stop component', () => {\n  let c = null;\n  let ready = null;\n  let ins = null;\n  let out = null;\n  before(function (done) {\n    this.timeout(6000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    loader.load('flow/Stop', (err, instance) => {\n      if (err) {\n        done(err);\n        return;\n      }\n      c = instance;\n      ready = noflo.internalSocket.createSocket();\n      ins = noflo.internalSocket.createSocket();\n      c.inPorts.ready.attach(ready);\n      c.inPorts.in.attach(ins);\n      done();\n    });\n  });\n  beforeEach(() => {\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n  });\n  afterEach(() => {\n    c.outPorts.out.detach(out);\n    out = null;\n  });\n\n  describe('with a count or 3 and some connections', () => it('should merge packets from first three connections', (done) => {\n    const expected = [\n      'DATA 1',\n      'DATA 2',\n      'DATA 3',\n    ];\n    const received = [];\n    let started = false;\n\n    out.on('begingroup', (grp) => {\n      chai.expect(started, 'should not receive before allowed').to.equal(true);\n      received.push(`< ${grp}`);\n    });\n    out.on('data', (data) => {\n      chai.expect(started, 'should not receive before allowed').to.equal(true);\n      received.push(`DATA ${data}`);\n      if (received.length !== expected.length) { return; }\n      chai.expect(received).to.eql(expected);\n      done();\n    });\n    out.on('endgroup', () => received.push('>'));\n\n    ins.send(1);\n    ins.send(2);\n    ins.send(3);\n    ins.disconnect();\n\n    ready.connect();\n    started = true;\n    ready.send(true);\n    ready.disconnect();\n  }));\n});\n"},"flow/Throttle":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.description = 'Throttle packets based on load and maximum accepted load';\n  c.inPorts.add('in', {\n    datatype: 'all',\n    description: 'IPs to forward',\n  });\n  c.inPorts.add('load', {\n    datatype: 'int',\n    description: 'Current load',\n  });\n  c.inPorts.add('max', {\n    datatype: 'int',\n    control: true,\n    description: 'Maximum number to allow for load',\n  });\n  c.outPorts.add('out', {\n    datatype: 'all',\n  });\n  return c.process((input, output) => {\n    if (!input.hasData('in', 'load', 'max')) { return; }\n    const [load, max] = Array.from(input.getData('load', 'max'));\n    if (!(load < max)) {\n      // Waiting for load to decrease\n      // FIXME: Workaround for https://github.com/noflo/noflo/issues/558\n      setTimeout(() => output.done(), 1);\n      return;\n    }\n    // Release one packet at a time\n    const data = input.getData('in');\n    // FIXME: Workaround for https://github.com/noflo/noflo/issues/558\n    setTimeout(() => output.sendDone({ out: data }), 1);\n  });\n};\n",tests:"describe('Throttle component', () => {\n  let loader = null;\n  let load = null;\n  let max = null;\n  let ins = null;\n  let out = null;\n\n  before(() => {\n    loader = new noflo.ComponentLoader(baseDir);\n  });\n  beforeEach(function (done) {\n    this.timeout(4000);\n    loader.load('flow/Throttle', (err, instance) => {\n      if (err) {\n        done(err);\n        return;\n      }\n      ins = noflo.internalSocket.createSocket();\n      instance.inPorts.in.attach(ins);\n      load = noflo.internalSocket.createSocket();\n      instance.inPorts.load.attach(load);\n      max = noflo.internalSocket.createSocket();\n      instance.inPorts.max.attach(max);\n      out = noflo.internalSocket.createSocket();\n      instance.outPorts.out.attach(out);\n      done();\n    });\n  });\n  it('should only send packets when load is acceptable', (done) => {\n    const expected = [\n      'LOAD 2',\n      'LOAD 1',\n      '< bar',\n      'LOAD 2',\n      '1',\n      'LOAD 1',\n      '>',\n      'LOAD 2',\n      '2',\n    ];\n    const received = [];\n    const setLoad = function (number) {\n      received.push(`LOAD ${number}`);\n      load.send(number);\n      if (received.length !== expected.length) { return; }\n      chai.expect(received).to.eql(expected);\n      done();\n    };\n    out.on('begingroup', (group) => received.push(`< ${group}`));\n    out.on('data', (data) => {\n      setLoad(2);\n      received.push(`${data}`);\n      if (!(received.length >= expected.length)) {\n        setLoad(1);\n        return;\n      }\n      chai.expect(received).to.eql(expected);\n      done();\n    });\n    out.on('endgroup', () => {\n      received.push('>');\n      if (received.length !== expected.length) { return; }\n      chai.expect(received).to.eql(expected);\n      done();\n    });\n    max.send(2);\n    setLoad(2);\n    ins.beginGroup('bar');\n    ins.send(1);\n    ins.endGroup('bar');\n    ins.send(2);\n    ins.send(3);\n    setLoad(1);\n  });\n});\n"},"geometry/ConstrainedDelaunay":{language:"coffeescript",source:"noflo = require 'noflo'\npoly2tri = require '../vendor/poly2tri.min.js'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.icon = 'toggle-up'\n  c.description = 'Calculates de constrained Delaunay triangulation of given points'\n  c.inPorts.add 'x',\n    datatype: 'array'\n  c.inPorts.add 'y',\n    datatype: 'array'\n  c.outPorts.add 'paths',\n    datatype: 'array'\n  c.outPorts.add 'error',\n    datatype: 'object'\n\n  c.process (input, output) ->\n    return unless input.hasData 'x', 'y'\n    [x, y] = input.getData 'x', 'y'\n    unless x.length > 2\n      output.done new Error 'x must contain more than 2 elements'\n      return\n\n    try\n      contour = (new poly2tri.Point(x[i], y[i]) for i in [0...x.length])\n      swctx = new poly2tri.SweepContext contour\n      swctx.triangulate()\n    catch error\n      output.done error\n      return\n\n    # TODO Add holes and Steiner points: https://github.com/r3mi/poly2tri.js\n    \n    triangles = swctx.getTriangles()\n\n    paths = []\n    for t in triangles\n      points = t.getPoints()\n      path =\n        type: 'path',\n        items: ({'type': 'point', 'x': p.x, 'y': p.y} for p in points)\n      paths.push path\n\n    output.sendDone\n      paths: paths\n"},"geometry/Delaunay":{language:"coffeescript",source:"noflo = require 'noflo'\nDelaunay = require '../vendor/delaunay.js'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.icon = 'toggle-up'\n  c.description = 'Calculates Delaunay Triangulation for given points'\n  c.inPorts.add 'points',\n    datatype: 'array'\n  c.outPorts.add 'paths',\n    datatype: 'array'\n  c.outPorts.add 'error',\n    datatype: 'object'\n  c.process (input, output) ->\n    return unless input.hasData 'points'\n    points = input.getData 'points'\n    unless points.length > 2\n      output.done new Error 'points must contain more than 2 elements'\n      return\n\n    vertices = ([point.x, point.y] for point in points)\n    ids = Delaunay.triangulate vertices\n\n    v = (vertices[i] for i in ids)\n\n    paths = []\n    for i in [0...v.length] by 3\n      path =\n        type: 'path',\n        items: ({'type': 'point', 'x': v[i+j][0], 'y': v[i+j][1]} for j in [0...3])\n      paths.push path\n\n    output.sendDone\n      paths: paths\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-geometry'\n\ndescribe 'Delaunay component', ->\n  c = null\n  ins = null\n  out = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'geometry/Delaunay', (err, instance) ->\n      return done err if err\n      c = instance\n      ins = noflo.internalSocket.createSocket()\n      c.inPorts.points.attach ins\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.paths.attach out\n  afterEach ->\n    c.outPorts.paths.detach out\n\n  describe 'when instantiated', ->\n    it 'should have an points port', ->\n      chai.expect(c.inPorts.points).to.be.an 'object'\n    it 'should have an paths port', ->\n      chai.expect(c.outPorts.paths).to.be.an 'object'\n"},"geometry/Voronoi":{language:"coffeescript",source:"noflo = require 'noflo'\nVoronoi = require '../vendor/rhill-voronoi-core.js'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.icon = 'location-arrow'\n  c.description = 'Calculates Voronoi Diagram for given points'\n  c.inPorts.add 'points',\n    datatype: 'array'\n  c.inPorts.add 'bbox',\n    datatype: 'object'\n    description: 'bounding box as a rectangle (default: 200x200)'\n    control: true\n  c.outPorts.add 'paths',\n    datatype: 'array'\n  c.outPorts.add 'error',\n    datatype: 'object'\n  c.process (input, output) ->\n    return unless input.hasData 'points'\n    sites = input.getData 'points'\n    unless sites.length > 2\n      output.done new Error 'points must contain more than 2 elements'\n      return\n    if input.hasData 'bbox'\n      bboxData = input.getData 'bbox'\n      bbox =\n        xl: bboxData.point.x\n        xr: bboxData.width\n        yt: bboxData.point.y\n        yb: bboxData.height\n    else\n      bbox =\n        xl: 0\n        xr: 200\n        yt: 0\n        yb: 200\n\n    voronoi = new Voronoi()\n    diagram = voronoi.compute(sites, bbox)\n\n    paths = []\n    for cell in diagram.cells\n      points = []\n      for halfedge in cell.halfedges\n        endpoint = halfedge.getEndpoint()\n        points.push\n          type: 'point'\n          x: endpoint.x\n          y: endpoint.y\n      if points.length > 0\n        paths.push\n          type: 'path'\n          items: points\n\n    output.sendDone\n      paths: paths\n"},"groups/CollectGroups":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Collect a stream of packets into object keyed by its groups'\n  c.inPorts.add 'in',\n    datatype: 'all'\n    description: 'IPs to collect'\n  c.outPorts.add 'out',\n    datatype: 'object'\n    description: 'An object containing input IPs sorted by their group\n     names'\n  c.outPorts.add 'error',\n    datatype: 'object'\n  c.forwardBrackets = {}\n  c.process (input, output) ->\n    return unless input.hasStream 'in'\n    stream = input.getStream 'in'\n    if stream[0].type is 'openBracket' and stream[0].data is null\n      # Remove the surrounding brackets if they're unnamed\n      before = stream.shift()\n      after = stream.pop()\n\n    # Working variable for incoming IPs\n    data = {}\n    # Breadcrumb of incoming groups\n    groups = []\n    # Breadcrumb of each level of IPs as partitioned by groups\n    parents = []\n\n    for packet in stream\n      if packet.type is 'openBracket'\n        # We use the attribute name `$data` to indicate data IPs in the outgoing\n        # structure, so no `$data` please\n        if packet.data is '$data'\n          output.done new Error 'groups cannot be named \\'$data\\''\n          return\n        # Save whatever in the working memory right now into its own level\n        parents.push data\n        # Save the current group\n        groups.push packet.data\n        # Clear working memory for new level\n        data = {}\n        continue\n      if packet.type is 'data'\n        # Initialize our data IPs storage as an array if it doesn't exist\n        data.$data ?= []\n        # Save the IP\n        data.$data.push packet.data\n        continue\n      if packet.type is 'closeBracket'\n        # Temporarily save working memory. Yes, you read me right! This is the\n        # working memory of working memory. :)\n        oldData = data\n        # Take out the previous level\n        data = parents.pop()\n        # Take the working memory (`data`) and put it into the previous level\n        # (`@data`) by a group name (`@groups.pop()`)\n        child = groups.pop()\n        # If `child` (i.e. the group) doesn't exist, simply put working memory\n        # in as-is\n        unless child of data\n          data[child] = oldData unless child of data\n          continue\n        # *OR*, if it's already an array, append to it\n        if Array.isArray data[child]\n          data[child].push oldData\n          continue\n        # *OR*, if something already exists in place but isn't appendable, make\n        # it so by having whatever in it as the first element of the array\n        data[child] = [ data[child], oldData ]\n        # NOTE: it may sound odd that collating into working memory (`@data`)\n        # works. It does because this is ending a group (i.e. level). If what\n        # follows is a disconnect, then it flushes the working memory, which is\n        # the entire data structure anyway. If what follows is a new group, the\n        # working memory is pushed into the level breadcrumbs (`@parents`)\n        # anyway. If it's a data IP, it's saved into the `$data` attribute, not\n        # affecting the data structure.\n\n    # Flush everything down the drain\n    output.sendDone\n      out: data\n",tests:'noflo = require \'noflo\'\n\nunless noflo.isBrowser()\n  chai = require \'chai\'\n  path = require \'path\'\n  baseDir = path.resolve __dirname, \'../\'\nelse\n  baseDir = \'noflo-groups\'\n\ndescribe \'CollectGroups component\', ->\n  c = null\n  ins = null\n  out = null\n  error = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load \'groups/CollectGroups\', (err, instance) ->\n      return done err if err\n      c = instance\n      ins = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach ins\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n    error = noflo.internalSocket.createSocket()\n    c.outPorts.error.attach error\n  afterEach ->\n    c.outPorts.out.detach out\n    out = null\n    c.outPorts.error.detach error\n    error = null\n\n  it "test no brackets inside stream", (done) ->\n    output = []\n    error.on \'data\', done\n    out.on "data", (data) ->\n      output.push data\n    out.once "disconnect", ->\n      chai.expect(output).to.deep.equal [{ $data: ["a","b","c"] }]\n      done()\n    ins.beginGroup()\n    ins.send "a"\n    ins.send "b"\n    ins.send "c"\n    ins.endGroup()\n\n  it "test one group", (done) ->\n    output = []\n    expect =\n      g1:\n        $data: ["a","b"]\n      $data: ["c"]\n    error.on \'data\', done\n    out.on "data", (data) ->\n      output.push data\n    out.once "disconnect", ->\n      chai.expect(output).to.deep.equal [expect]\n      done()\n    ins.beginGroup()\n    ins.beginGroup "g1"\n    ins.send "a"\n    ins.send "b"\n    ins.endGroup()\n    ins.send "c"\n    ins.endGroup()\n\n  it "test group named $data", (done) ->\n    error.on \'data\', (err) ->\n      chai.expect(err).to.be.an \'error\'\n      chai.expect(err.message).to.equal "groups cannot be named \'$data\'"\n    ins.beginGroup \'$data\'\n    ins.send 1\n    ins.endGroup()\n    done()\n\n  it "test two groups", (done) ->\n    output = []\n    expect =\n      g1:\n        $data: ["a","b"]\n      g2:\n        $data: ["c","d"]\n    error.on \'data\', done\n    out.on "data", (data) ->\n      output.push data\n    out.once "disconnect", ->\n      chai.expect(output).to.deep.equal [expect]\n      done()\n    ins.beginGroup()\n    ins.beginGroup "g1"\n    ins.send "a"\n    ins.send "b"\n    ins.endGroup()\n    ins.beginGroup "g2"\n    ins.send "c"\n    ins.send "d"\n    ins.endGroup()\n    ins.endGroup()\n\n  it "test two groups with same name", (done) ->\n    output = []\n    expect =\n      g1: [ { $data: ["a","b"] }, { $data: ["c","d"] } ]\n    error.on \'data\', done\n    out.on "data", (data) ->\n      output.push data\n    out.once "disconnect", ->\n      chai.expect(output).to.deep.equal [expect]\n      done()\n    ins.beginGroup()\n    ins.beginGroup "g1"\n    ins.send "a"\n    ins.send "b"\n    ins.endGroup()\n    ins.beginGroup "g1"\n    ins.send "c"\n    ins.send "d"\n    ins.endGroup()\n    ins.endGroup()\n\n  it "test nested groups", (done) ->\n    output = []\n    expect =\n      g1:\n        $data: ["a","b"]\n        g2:\n          $data: ["c","d"]\n    error.on \'data\', done\n    out.on "data", (data) ->\n      output.push data\n    out.once "disconnect", ->\n      chai.expect(output).to.deep.equal [expect]\n      done()\n    ins.beginGroup "g1"\n    ins.send "a"\n    ins.beginGroup "g2"\n    ins.send "c"\n    ins.send "d"\n    ins.endGroup()\n    ins.send "b"\n    ins.endGroup()\n\n  it "test object data", (done) ->\n    output = []\n    expect =\n      g1:\n        $data: [ {a:1,b:2}, {b:3,c:4} ]\n    error.on \'data\', done\n    out.on "data", (data) ->\n      output.push data\n    out.once "disconnect", ->\n      chai.expect(output).to.deep.equal [expect]\n      done()\n    ins.beginGroup "g1"\n    ins.send {a:1,b:2}\n    ins.send {b:3,c:4}\n    ins.endGroup()\n\n  it "test array data", (done) ->\n    output = []\n    expect =\n      g1:\n        $data: [ ["a","b"], ["c","d"] ]\n    error.on \'data\', done\n    out.on "data", (data) ->\n      output.push data\n    out.once "disconnect", ->\n      chai.expect(output).to.deep.equal [expect]\n      done()\n    ins.beginGroup "g1"\n    ins.send ["a","b"]\n    ins.send ["c","d"]\n    ins.endGroup()\n'},"groups/CollectObject":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Collect packets to an object identified by keys organized\n  by connection'\n  c.inPorts.add 'keys',\n    datatype: 'string'\n    description: 'Comma-separated property names to be used for data based on connection index'\n  c.inPorts.add 'allpackets',\n    datatype: 'string'\n    description: 'Comma-separated property names to collect all packets for in an array'\n  c.inPorts.add 'collect',\n    datatype: 'all'\n    addressable: true\n    description: 'Data IPs to collect'\n  c.inPorts.add 'release',\n    datatype: 'bang'\n    description: 'Release all collected packets as an object'\n  c.inPorts.add 'clear',\n    datatype: 'bang'\n    description: 'Clear all collected data'\n  c.outPorts.add 'out',\n    datatype: 'object'\n  c.context = {}\n  c.forwardBrackets = {}\n  prepareContext = (scope) ->\n    unless c.context[scope]\n      c.context[scope] =\n        data: {}\n        groups: {}\n        keys: []\n        allpackets: []\n    return c.context[scope]\n  c.tearDown = (callback) ->\n    c.context = {}\n    do callback\n  c.process (input, output) ->\n    context = prepareContext input.scope\n    if input.hasData 'keys'\n      keys = input.getData('keys').split ','\n      if keys.length > 1\n        # Providing an array clears previous keys\n        context.keys = []\n      context.keys = context.keys.concat keys\n      output.done()\n      return\n    if input.hasData 'allpackets'\n      keys = input.getData('allpackets').split ','\n      if keys.length > 1\n        # Providing an array clears previous keys\n        context.allpackets = []\n      context.allpackets = context.allpackets.concat keys\n      output.done()\n      return\n    if input.hasData 'release'\n      input.getData 'release'\n      output.send\n        out: context.data\n      context.data = {}\n      output.done()\n      return\n    if input.hasData 'clear'\n      input.getData 'clear'\n      delete c.context[input.scope]\n      output.done()\n      return\n    indexesWithIps = input.attached('collect').filter (idx) ->\n      input.has ['collect', idx]\n    return unless indexesWithIps.length\n    # Ensure we have received keys before storing data\n    return if input.attached('keys').length and not context.keys.length\n    # Ensure we have received allpackets before storing data\n    return if input.attached('allpackets').length and not context.allpackets.length\n    indexesWithIps.forEach (idx) ->\n      packet = input.get ['collect', idx]\n      # Check that we have a named key for this connection\n      return unless context.keys[idx]\n\n      context.groups[idx] = [] unless context.groups[idx]\n      if packet.type is 'openBracket'\n        context.groups[idx].push packet.data\n        return\n      if packet.type is 'data'\n        key = context.keys[idx]\n        if context.groups[idx].length\n          # First level key is the group name, if any\n          groupId = context.groups[idx][0]\n          context.data[groupId] = {} unless context.data[groupId]\n          data = context.data[groupId]\n        else\n          # Ungrouped data goes to top-level\n          data = context.data\n\n        if context.allpackets[idx]\n          # We're collecting all packets for this connection\n          data[key] = [] unless data[key]\n          data[key].push packet.data\n          return\n        data[key] = packet.data\n        return\n      if packet.type is 'closeBracket'\n        context.groups[idx].pop()\n        return\n    output.done()\n",tests:"noflo = require 'noflo'\n\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-groups'\n\ndescribe 'CollectObject component', ->\n  c = null\n  keys = null\n  allpackets = null\n  collect = []\n  release = null\n  out = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'groups/CollectObject', (err, instance) ->\n      return done err if err\n      c = instance\n      keys = noflo.internalSocket.createSocket()\n      c.inPorts.keys.attach keys\n      collect.push noflo.internalSocket.createSocket()\n      c.inPorts.collect.attach collect[0]\n      collect.push noflo.internalSocket.createSocket()\n      c.inPorts.collect.attach collect[1]\n      release = noflo.internalSocket.createSocket()\n      c.inPorts.release.attach release\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n  afterEach (done) ->\n    c.outPorts.out.detach out\n    out = null\n    c.shutdown done\n  describe 'when released', ->\n    describe 'wihout brackets', ->\n      it 'should send the collected object out', (done) ->\n        expected = [\n          {\n            foo: 'hello'\n            bar: 'world'\n          }\n        ]\n        received = []\n        out.on 'begingroup', (group) ->\n          received.push \"< #{group}\"\n        out.on 'data', (data) ->\n          received.push data\n          return unless expected.length is received.length\n          chai.expect(received).to.eql expected\n          done()\n        out.on 'endgroup', (data) ->\n          received.push '>'\n          return unless expected.length is received.length\n          chai.expect(received).to.eql expected\n          done()\n        keys.send 'foo'\n        keys.send 'bar'\n        collect[0].send 'goodbye'\n        collect[0].send 'hello'\n        collect[1].send 'world'\n        release.send true\n      describe 'with allpackets', ->\n        before ->\n          allpackets = noflo.internalSocket.createSocket()\n          c.inPorts.allpackets.attach allpackets\n        after ->\n          c.inPorts.allpackets.detach allpackets\n          allpackets = null\n        it 'should send the collected object out with multiple packets in one key', (done) ->\n          expected = [\n            {\n              foo: [\n                'hello'\n                'wonderful'\n              ]\n              bar: 'world'\n            }\n          ]\n          received = []\n          out.on 'begingroup', (group) ->\n            received.push \"< #{group}\"\n          out.on 'data', (data) ->\n            received.push data\n            return unless expected.length is received.length\n            chai.expect(received).to.eql expected\n            done()\n          out.on 'endgroup', (data) ->\n            received.push '>'\n            return unless expected.length is received.length\n            chai.expect(received).to.eql expected\n            done()\n          allpackets.send 'foo'\n          keys.send 'foo'\n          keys.send 'bar'\n          collect[0].send 'hello'\n          collect[0].send 'wonderful'\n          collect[1].send 'world'\n          release.send true\n    describe 'with a single-level stream', ->\n      it 'should send the collected object out', (done) ->\n        expected = [\n          {\n            a:\n              foo: 'hello'\n              bar: 'world'\n          }\n        ]\n        received = []\n        out.on 'begingroup', (group) ->\n          received.push \"< #{group}\"\n        out.on 'data', (data) ->\n          received.push data\n          return unless expected.length is received.length\n          chai.expect(received).to.eql expected\n          done()\n        out.on 'endgroup', (data) ->\n          received.push '>'\n          return unless expected.length is received.length\n          chai.expect(received).to.eql expected\n          done()\n        keys.send 'foo'\n        keys.send 'bar'\n        collect[0].beginGroup 'a'\n        collect[0].send 'goodbye'\n        collect[0].send 'hello'\n        collect[0].endGroup()\n        collect[1].beginGroup 'a'\n        collect[1].send 'world'\n        collect[1].endGroup()\n        release.send true\n      describe 'with allpackets', ->\n        before ->\n          allpackets = noflo.internalSocket.createSocket()\n          c.inPorts.allpackets.attach allpackets\n        after ->\n          c.inPorts.allpackets.detach allpackets\n          allpackets = null\n        it 'should send the collected object out with multiple packets in one key', (done) ->\n          expected = [\n            {\n              a:\n                foo: [\n                  'hello'\n                  'wonderful'\n                ]\n                bar: 'world'\n            }\n          ]\n          received = []\n          out.on 'begingroup', (group) ->\n            received.push \"< #{group}\"\n          out.on 'data', (data) ->\n            received.push data\n            return unless expected.length is received.length\n            chai.expect(received).to.eql expected\n            done()\n          out.on 'endgroup', (data) ->\n            received.push '>'\n            return unless expected.length is received.length\n            chai.expect(received).to.eql expected\n            done()\n          allpackets.send 'foo'\n          keys.send 'foo'\n          keys.send 'bar'\n          collect[0].beginGroup 'a'\n          collect[0].send 'hello'\n          collect[0].send 'wonderful'\n          collect[0].endGroup()\n          collect[1].beginGroup 'a'\n          collect[1].send 'world'\n          collect[1].endGroup()\n          release.send true\n    describe 'with a substream', ->\n      it 'should send the collected object out', (done) ->\n        expected = [\n          {\n            a:\n              foo: 'hello'\n              bar: 'world'\n          }\n        ]\n        received = []\n        out.on 'begingroup', (group) ->\n          received.push \"< #{group}\"\n        out.on 'data', (data) ->\n          received.push data\n          return unless expected.length is received.length\n          chai.expect(received).to.eql expected\n          done()\n        out.on 'endgroup', (data) ->\n          received.push '>'\n          return unless expected.length is received.length\n          chai.expect(received).to.eql expected\n          done()\n        keys.send 'foo'\n        keys.send 'bar'\n        collect[0].beginGroup 'a'\n        collect[0].send 'goodbye'\n        collect[0].send 'hello'\n        collect[0].endGroup()\n        collect[1].beginGroup 'a'\n        collect[1].beginGroup 'b'\n        collect[1].send 'world'\n        collect[1].endGroup()\n        collect[1].endGroup()\n        release.send true\n      describe 'with allpackets', ->\n        before ->\n          allpackets = noflo.internalSocket.createSocket()\n          c.inPorts.allpackets.attach allpackets\n        after ->\n          c.inPorts.allpackets.detach allpackets\n          allpackets = null\n        it 'should send the collected object out with multiple packets in one key', (done) ->\n          expected = [\n            {\n              a:\n                foo: [\n                  'hello'\n                  'wonderful'\n                ]\n                bar: 'world'\n            }\n          ]\n          received = []\n          out.on 'begingroup', (group) ->\n            received.push \"< #{group}\"\n          out.on 'data', (data) ->\n            received.push data\n            return unless expected.length is received.length\n            chai.expect(received).to.eql expected\n            done()\n          out.on 'endgroup', (data) ->\n            received.push '>'\n            return unless expected.length is received.length\n            chai.expect(received).to.eql expected\n            done()\n          allpackets.send 'foo'\n          keys.send 'foo'\n          keys.send 'bar'\n          collect[0].beginGroup 'a'\n          collect[0].beginGroup 'b'\n          collect[0].send 'hello'\n          collect[0].send 'wonderful'\n          collect[0].endGroup()\n          collect[0].endGroup()\n          collect[1].beginGroup 'a'\n          collect[1].send 'world'\n          collect[1].endGroup()\n          release.send true\n"},"groups/FilterByGroup":{language:"coffeescript",source:"noflo = require(\"noflo\")\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = \"Given a RegExp string, filter out groups that do not\n  match and their children data packets/groups. Forward only the content\n  of the matching group.\"\n  c.inPorts.add 'in',\n    datatype: 'all'\n    description: 'IPs to filter groups from'\n    addressable: true\n  c.inPorts.add 'regexp',\n    datatype: 'string'\n    description: 'Regexp use as a filter for IPs'\n    control: true\n  c.outPorts.add 'out',\n    datatype: 'all'\n  c.outPorts.add 'group',\n    datatype: 'string'\n  c.outPorts.add 'empty',\n    datatype: 'bang'\n  c.scopes = {}\n  c.tearDown = (callback) ->\n    c.scopes = {}\n    do callback\n  ensureScope = (scope, idx) ->\n    c.scopes[scope] = {} unless c.scopes[scope]\n    return c.scopes[scope][idx] if c.scopes[scope][idx]\n    c.scopes[scope][idx] =\n      level: 0\n      hasContent: false\n      matchedLevel: null\n    return c.scopes[scope][idx]\n  c.forwardBrackets = {}\n  c.process (input, output) ->\n    indexesWithIps = input.attached('in').filter (idx) ->\n      input.has ['in', idx]\n    return unless indexesWithIps.length\n    return unless input.hasData 'regexp'\n    regexp = new RegExp input.getData 'regexp'\n    indexesWithIps.forEach (idx) ->\n      scope = ensureScope input.scope, idx\n      packet = input.get ['in', idx]\n      if packet.type is 'openBracket'\n        if scope.matchedLevel?\n          output.send\n            out: new noflo.IP 'openBracket', packet.data\n        scope.level++\n        if not scope.matchedLevel? and packet.data.match(regexp)?\n          scope.matchedLevel = scope.level\n          output.send\n            group: packet.data\n        return\n      if packet.type is 'data'\n        return unless scope.matchedLevel?\n        scope.hasContent = true\n        output.send\n          out: packet\n        return\n      if packet.type is 'closeBracket'\n        if scope.matchedLevel is scope.level\n          scope.matchedLevel = null\n        if scope.matchedLevel?\n          output.send\n            out: new noflo.IP 'closeBracket', packet.data\n        scope.level--\n        return if scope.level\n        unless scope.hasContent\n          output.send\n            empty: null\n    output.done()\n",tests:"noflo = require 'noflo'\n\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-groups'\n\ndescribe 'FilterByGroup component', ->\n  c = null\n  regexp = null\n  ins = null\n  group = null\n  out = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'groups/FilterByGroup', (err, instance) ->\n      return done err if err\n      c = instance\n      regexp = noflo.internalSocket.createSocket()\n      ins = noflo.internalSocket.createSocket()\n      c.inPorts.regexp.attach regexp\n      c.inPorts.in.attach ins\n      done()\n  beforeEach ->\n    group = noflo.internalSocket.createSocket()\n    c.outPorts.group.attach group\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n  afterEach ->\n    c.outPorts.group.detach group\n    c.outPorts.out.detach out\n\n  describe 'with single-level groups', ->\n    it 'should only send content with matching top-level group', (done) ->\n      groupReceived = false\n      dataReceived = false\n\n      group.on 'data', (data) ->\n        chai.expect(data).to.equal 'abc'\n        groupReceived = true\n        done() if dataReceived\n\n      out.on 'data', (data) ->\n        chai.expect(data).to.equal 1\n        dataReceived = true\n        done() if groupReceived\n\n      regexp.send 'a.+'\n\n      ins.connect()\n      ins.beginGroup 'abc'\n      ins.send 1\n      ins.endGroup()\n      ins.beginGroup 'pqr'\n      ins.send 2\n      ins.endGroup()\n      ins.beginGroup 'xyz'\n      ins.send 3\n      ins.endGroup()\n      ins.disconnect()\n\n  describe 'with nested groups', ->\n    it 'should also send sub-groups', (done) ->\n      groupReceived = false\n      dataReceived = false\n      expected = [\n        1\n        3\n      ]\n      groups = []\n\n      group.on 'data', (data) ->\n        chai.expect(data).to.equal 'abc'\n        groupReceived = true\n        done() if dataReceived\n\n      out.on 'begingroup', (grp) ->\n        groups.push grp\n      out.on 'data', (data) ->\n        chai.expect(data).to.equal expected.shift()\n        return unless expected.length is 0\n        chai.expect(groups).to.eql ['xyz']\n        dataReceived = true\n      out.on 'endgroup', ->\n        groups.pop()\n        done() if groupReceived and dataReceived\n\n      regexp.send 'a.+'\n\n      ins.connect()\n      ins.beginGroup 'abc'\n      ins.send 1\n      ins.beginGroup 'xyz'\n      ins.send 3\n      ins.endGroup()\n      ins.endGroup()\n      ins.beginGroup 'pqr'\n      ins.send 2\n      ins.endGroup()\n      ins.disconnect()\n"},"groups/CollectTree":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Collect a stream of packets into a simple tree structure'\n  c.inPorts.add 'in',\n    datatype: 'all'\n  c.inPorts.add 'level',\n    datatype: 'integer'\n    default: 0\n    description: 'Number of groups (from outermost) to skip collection of'\n    control: true\n  c.outPorts.add 'out',\n    datatype: 'object'\n  c.outPorts.add 'error',\n    datatype: 'object'\n  c.forwardBrackets = {}\n  c.process (input, output) ->\n    return unless input.hasStream 'in'\n    return if input.attached('level').length and not input.hasData 'level'\n\n    level = if input.hasData('level') then input.getData('level') else 0\n\n    stream = input.getStream 'in'\n    if stream[0].type is 'openBracket' and stream[0].data is null\n      # Remove the surrounding brackets if they're unnamed\n      before = stream.shift()\n      after = stream.pop()\n\n    data = {}\n    currentLevel = 0\n    collectGroups = []\n    forwardGroups = []\n\n    for packet in stream\n      if packet.type is 'openBracket'\n        if currentLevel < level\n          forwardGroups.push packet.data\n        else\n          collectGroups.push packet.data\n        currentLevel += 1\n        continue\n      if packet.type is 'data'\n        continue unless collectGroups.length\n        d = data\n        for g, idx in collectGroups\n          if idx < collectGroups.length - 1\n            d[g] = {} unless d[g]\n            d = d[g]\n            continue\n        unless d[g]\n          d[g] = packet.data\n          continue\n        unless Array.isArray d[g]\n          d[g] = [d[g]]\n        d[g].push packet.data\n        continue\n      if packet.type is 'closeBracket'\n        if currentLevel < level\n          # will be sent & reset on disconnect\n        else\n          collectGroups.pop()\n        currentLevel -= 1\n        continue\n\n    unless Object.keys(data).length\n      output.done new Error 'No tree information was collected'\n      return\n\n    for group in forwardGroups\n      output.send\n        out: new noflo.IP 'openBracket', group\n    output.send\n      out: data\n    forwardGroups.reverse()\n    for group in forwardGroups\n      output.send\n        out: new noflo.IP 'closeBracket', group\n    output.done()\n    return\n",tests:"noflo = require 'noflo'\n\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-groups'\n\ngroupBy = (port, groups, func) ->\n  for group in groups\n    port.beginGroup group\n  func port\n  for group in groups\n    port.endGroup() # group\n\ndescribe 'CollectTree component', ->\n  c = null\n  ins = null\n  out = null\n  err = null\n  level = null\n\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'groups/CollectTree', (e, instance) ->\n      return done e if e\n      c = instance\n      ins = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach ins\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    err = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n    c.outPorts.error.attach err\n  afterEach ->\n    c.outPorts.out.detach out\n    c.outPorts.error.detach err\n    out = null\n    err = null\n\n  describe 'without any groups provided', ->\n    it 'should send an error and no data', (done) ->\n      out.on 'data', (data) ->\n        done new Error 'Received unexpected data'\n      err.on 'data', (data) ->\n        chai.expect(data).to.be.an 'error'\n        done()\n      ins.send 'foo'\n      ins.disconnect()\n\n  describe 'with a single-level group', ->\n    it 'should send out an object matching the one packet', (done) ->\n      err.on 'data', done\n      out.on 'data', (data) ->\n        chai.expect(data).to.eql\n          foo: 'bar'\n        done()\n      ins.beginGroup 'foo'\n      ins.send 'bar'\n      ins.endGroup()\n      ins.disconnect()\n    it 'should send out an object matching the two packets', (done) ->\n      out.on 'data', (data) ->\n        chai.expect(data).to.eql\n          foo: ['bar', 'baz']\n      out.on 'disconnect', ->\n        done()\n\n      ins.beginGroup 'foo'\n      ins.send 'bar'\n      ins.send 'baz'\n      ins.endGroup()\n      ins.disconnect()\n    it 'should send out an object matching the two packets despite group level change', (done) ->\n      out.on 'data', (data) ->\n        chai.expect(data).to.eql\n          foo: ['bar', 'baz']\n      out.on 'disconnect', ->\n        done()\n\n      ins.beginGroup()\n      ins.beginGroup 'foo'\n      ins.send 'bar'\n      ins.endGroup()\n      ins.beginGroup 'foo'\n      ins.send 'baz'\n      ins.endGroup()\n      ins.endGroup()\n\n  describe 'with a multi-level group', ->\n    it 'should send out an object matching the one packet', (done) ->\n      out.on 'data', (data) ->\n        chai.expect(data).to.eql\n          baz:\n            foo: 'bar'\n      out.on 'disconnect', ->\n        done()\n\n      ins.beginGroup 'baz'\n      ins.beginGroup 'foo'\n      ins.send 'bar'\n      ins.endGroup()\n      ins.endGroup()\n      ins.disconnect()\n    it 'should send out an object matching the three packets', (done) ->\n      out.on 'data', (data) ->\n        chai.expect(data).to.eql\n          baz: [\n            foo: 'bar'\n            'ping'\n          ]\n          hello: 'world'\n      out.on 'disconnect', ->\n        done()\n\n      ins.beginGroup()\n      ins.beginGroup 'baz'\n      ins.beginGroup 'foo'\n      ins.send 'bar'\n      ins.endGroup()\n      ins.send 'ping'\n      ins.endGroup()\n      ins.beginGroup 'hello'\n      ins.send 'world'\n      ins.endGroup()\n      ins.endGroup()\n    it 'should send out an object matching the two packets despite endgroups', (done) ->\n      out.on 'data', (data) ->\n        chai.expect(data).to.eql\n          baz:\n            foo: 'bar'\n            hello: 'world'\n      out.on 'disconnect', ->\n        done()\n\n      ins.beginGroup()\n      ins.beginGroup 'baz'\n      ins.beginGroup 'foo'\n      ins.send 'bar'\n      ins.endGroup()\n      ins.endGroup()\n      ins.beginGroup 'baz'\n      ins.beginGroup 'hello'\n      ins.send 'world'\n      ins.endGroup()\n      ins.endGroup()\n      ins.endGroup()\n\n\n    describe 'level param set to 1', () ->\n      before ->\n        level = noflo.internalSocket.createSocket()\n        c.inPorts.level.attach level\n      after ->\n        level.send 0\n        c.inPorts.level.detach level\n        level = null\n      groups = []\n      it 'should collect inner groups only', (done) ->\n        out.on 'begingroup', (group) ->\n          groups.push group\n        out.on 'data', (data) ->\n          chai.expect(data).to.eql\n            foo: 'bar'\n            foo2: 'bar2'\n        out.on 'disconnect', ->\n          done()\n\n        level.send 1\n        level.disconnect()\n\n        ins.beginGroup 'baz'\n        ins.beginGroup 'foo'\n        ins.send 'bar'\n        ins.endGroup() #foo\n        ins.beginGroup 'foo2'\n        ins.send 'bar2'\n        ins.endGroup() #foo2\n        ins.endGroup() #baz\n        ins.disconnect()\n\n      it 'should forward outmost group', () ->\n        chai.expect(groups).to.deep.eql [ 'baz' ]\n\n    describe 'with group hierarchy per message', () ->\n      groups = []\n      it 'should put each message in right place', (done) ->\n        out.on 'begingroup', (group) ->\n          groups.push group\n        out.on 'data', (data) ->\n          chai.expect(data).to.eql\n            baz:\n              foo: 'bar'\n              foo2: 'bar2'\n              foo3: 'bar3'\n        out.on 'disconnect', ->\n          done()\n\n        ins.beginGroup()\n        groupBy ins, ['baz', 'foo'], () ->\n          ins.send 'bar'\n        groupBy ins, ['baz', 'foo2'], () ->\n          ins.send 'bar2'\n        groupBy ins, ['baz', 'foo3'], () ->\n          ins.send 'bar3'\n        ins.endGroup()\n\n    describe 'with group hierarchy per message and level=1', () ->\n      before ->\n        level = noflo.internalSocket.createSocket()\n        c.inPorts.level.attach level\n      after ->\n        level.send 0\n        c.inPorts.level.detach level\n        level = null\n      groups = []\n      it 'should put each message in right place', (done) ->\n        out.on 'begingroup', (group) ->\n          groups.push group\n        out.on 'data', (data) ->\n          chai.expect(data).to.eql\n            foo: 'bar'\n            foo2: 'bar2'\n            foo3: 'bar3'\n        out.on 'disconnect', ->\n          done()\n\n        level.send 1\n        level.disconnect()\n\n        ins.beginGroup()\n        groupBy ins, ['baz', 'foo'], () ->\n          ins.send 'bar'\n        groupBy ins, ['baz', 'foo2'], () ->\n          ins.send 'bar2'\n        groupBy ins, ['baz', 'foo3'], () ->\n          ins.send 'bar3'\n        ins.endGroup()\n"},"flow/Gate":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.description = 'Forward packets only when the gate is open';\n  c.icon = 'pause';\n  c.inPorts.add('in',\n    { datatype: 'all' });\n  c.inPorts.add('open', {\n    datatype: 'bang',\n    description: 'Send one IP to open the gate',\n  });\n  c.inPorts.add('close', {\n    datatype: 'bang',\n    description: 'Send one IP to close the gate',\n  });\n  c.outPorts.add('out',\n    { datatype: 'all' });\n  c.isOpen = false;\n  c.tearDown = (callback) => {\n    c.isOpen = false;\n    c.icon = 'pause';\n    return callback();\n  };\n  c.forwardBrackets = {};\n  return c.process((input, output) => {\n    if (input.hasData('open')) {\n      input.getData('open');\n      c.isOpen = true;\n      c.setIcon('play');\n      output.done();\n      return;\n    }\n    if (input.hasData('close')) {\n      input.getData('close');\n      c.isOpen = false;\n      c.setIcon('pause');\n      output.done();\n      return;\n    }\n    if (!input.has('in')) { return; }\n    const packet = input.get('in');\n    if (!c.isOpen) {\n      packet.drop();\n      output.done();\n      return;\n    }\n    output.sendDone({ out: packet });\n  });\n};\n",tests:"describe('Gate component', () => {\n  let loader = null;\n  let open = null;\n  let close = null;\n  let ins = null;\n  let out = null;\n\n  before(() => {\n    loader = new noflo.ComponentLoader(baseDir);\n  });\n  beforeEach(function (done) {\n    this.timeout(4000);\n    loader.load('flow/Gate', (err, instance) => {\n      if (err) {\n        done(err);\n        return;\n      }\n      ins = noflo.internalSocket.createSocket();\n      instance.inPorts.in.attach(ins);\n      open = noflo.internalSocket.createSocket();\n      instance.inPorts.open.attach(open);\n      close = noflo.internalSocket.createSocket();\n      instance.inPorts.close.attach(close);\n      out = noflo.internalSocket.createSocket();\n      instance.outPorts.out.attach(out);\n      done();\n    });\n  });\n  describe('when gate is opened', () => {\n    it('should send only the packets while gate was open', (done) => {\n      const expected = [\n        '2',\n        '< bar',\n        '3',\n        '>',\n      ];\n      const received = [];\n      out.on('begingroup', (group) => received.push(`< ${group}`));\n      out.on('data', (data) => received.push(`${data}`));\n      out.on('endgroup', () => {\n        received.push('>');\n        if (received.length !== expected.length) { return; }\n        chai.expect(received).to.eql(expected);\n        done();\n      });\n      ins.beginGroup('foo');\n      ins.send(1);\n      open.send(true);\n      ins.send(2);\n      ins.beginGroup('bar');\n      ins.send(3);\n      ins.endGroup('bar');\n      close.send(true);\n      ins.send(4);\n      ins.endGroup('foo');\n    });\n  });\n});\n"},"groups/FirstGroup":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Forward incoming IPs and filter groups except the first one'\n  c.inPorts.add 'in',\n    datatype: 'all'\n    description: 'IPs to forward'\n    addressable: true\n  c.outPorts.add 'out',\n    datatype: 'all'\n  c.depth = {}\n  c.tearDown = (callback) ->\n    c.depth = {}\n    do callback\n  ensureDepth = (scope, idx) ->\n    c.depth[scope] = {} unless c.depth[scope]\n    c.depth[scope][idx] = 0 unless c.depth[scope][idx]\n    return c.depth[scope][idx]\n  c.forwardBrackets = {}\n  c.process (input, output) ->\n    indexesWithIps = input.attached('in').filter (idx) ->\n      input.has ['in', idx]\n    return unless indexesWithIps.length\n    indexesWithIps.forEach (idx) ->\n      depth = ensureDepth input.scope, idx\n      packet = input.get ['in', idx]\n      if packet.type is 'openBracket'\n        if depth is 0\n          output.send\n            out: new noflo.IP 'openBracket', packet.data\n        c.depth[input.scope][idx]++\n        return\n      if packet.type is 'data'\n        output.send\n          out: packet\n        return\n      if packet.type is 'closeBracket'\n        c.depth[input.scope][idx]--\n        if c.depth[input.scope][idx] is 0\n          output.send\n            out: new noflo.IP 'closeBracket', packet.data\n        return\n    output.done()\n",tests:"noflo = require 'noflo'\n\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-groups'\n\ndescribe 'FirstGroup component', ->\n  c = null\n  ins = null\n  out = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'groups/FirstGroup', (err, instance) ->\n      return done err if err\n      c = instance\n      ins = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach ins\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n  afterEach ->\n    c.outPorts.out.detach out\n    out = null\n  describe 'receiving an un-bracketed packet', ->\n    it 'should send it out as-is', (done) ->\n      expected = [\n        'DATA a'\n      ]\n      received = []\n      out.on 'begingroup', (group) ->\n        received.push \"< #{group}\"\n      out.on 'data', (data) ->\n        received.push \"DATA #{data}\"\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      out.on 'endgroup', ->\n        received.push '>'\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      ins.send 'a'\n  describe 'receiving a stream', ->\n    it 'should send it out as-is', (done) ->\n      expected = [\n        '< foo'\n        'DATA a'\n        'DATA b'\n        '>'\n      ]\n      received = []\n      out.on 'begingroup', (group) ->\n        received.push \"< #{group}\"\n      out.on 'data', (data) ->\n        received.push \"DATA #{data}\"\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      out.on 'endgroup', ->\n        received.push '>'\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      ins.beginGroup 'foo'\n      ins.send 'a'\n      ins.send 'b'\n      ins.endGroup()\n  describe 'receiving a stream with substreams', ->\n    it 'should flatten the stream to one level', (done) ->\n      expected = [\n        '< foo'\n        'DATA a'\n        'DATA b'\n        '>'\n      ]\n      received = []\n      out.on 'begingroup', (group) ->\n        received.push \"< #{group}\"\n      out.on 'data', (data) ->\n        received.push \"DATA #{data}\"\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      out.on 'endgroup', ->\n        received.push '>'\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      ins.beginGroup 'foo'\n      ins.beginGroup 'bar'\n      ins.beginGroup 'baz'\n      ins.send 'a'\n      ins.endGroup()\n      ins.send 'b'\n      ins.endGroup()\n      ins.endGroup()\n"},"groups/GenerateGroup":{language:"coffeescript",source:"noflo = require 'noflo'\nuuid = require 'uuid'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Wrap IPs into a random UUID generated group'\n  c.inPorts.add 'in',\n    datatype: 'all'\n    description: 'IPs to forward'\n  c.outPorts.add 'out',\n    datatype: 'all'\n  c.process (input, output) ->\n    return unless input.hasData 'in'\n    data = input.getData 'in'\n    identifier = uuid.v4()\n    output.send\n      out: new noflo.IP 'openBracket', identifier\n    output.send\n      out: data\n    output.send\n      out: new noflo.IP 'closeBracket', identifier\n    output.done()\n",tests:"noflo = require 'noflo'\n\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  validateUuid = require 'uuid-validate'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-groups'\n  validateUuid = null\n\ndescribe 'GenerateGroup component', ->\n  c = null\n  ins = null\n  out = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'groups/GenerateGroup', (err, instance) ->\n      return done err if err\n      c = instance\n      ins = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach ins\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n  afterEach ->\n    c.outPorts.out.detach out\n\n  describe 'with a non-grouped packet', ->\n    it 'should wrap it in a generated group', (done) ->\n      groups = []\n      out.on 'begingroup', (group) ->\n        groups.push group\n      out.on 'data', (data) ->\n        chai.expect(data).to.equal 'data'\n        chai.expect(groups.length).to.equal 1\n        if validateUuid\n          valid = validateUuid groups[0]\n          chai.expect(valid, 'UUID is valid').to.equal true\n      out.on 'endgroup', ->\n        groups.pop()\n        done() unless groups.length\n\n      ins.send 'data'\n      ins.disconnect()\n      \n  describe 'with a grouped packet', ->\n    it 'should wrap it in a generated group', (done) ->\n      groups = []\n      out.on 'begingroup', (group) ->\n        groups.push group\n      out.on 'data', (data) ->\n        chai.expect(data).to.equal 'data'\n        chai.expect(groups.length).to.equal 2\n        chai.expect(groups[0]).to.equal 'group'\n        if validateUuid\n          valid = validateUuid groups[1]\n          chai.expect(valid, 'UUID is valid').to.equal true\n      out.on 'endgroup', ->\n        groups.pop()\n        done() unless groups.length\n\n      ins.beginGroup 'group'\n      ins.send 'data'\n      ins.endGroup()\n      ins.disconnect()\n      \n  describe 'with nested groups', ->\n    it 'should wrap each packet in a generated group', (done) ->\n      expected = [\n        '< group1'\n        '< UUID'\n        'DATA data1'\n        '>'\n        '< group2'\n        '< UUID'\n        'DATA data2'\n        '>'\n        '>'\n        '>'\n      ]\n      received = []\n\n      out.on 'begingroup', (group) ->\n        received.push \"< #{group}\"\n      out.on 'data', (data) ->\n        received.push \"DATA #{data}\"\n      out.on 'endgroup', ->\n        received.push '>'\n      out.on 'disconnect', ->\n        for packet in expected\n          recv = received.shift()\n          if packet is '< UUID'\n            value = recv.substr 2\n            if validateUuid\n              valid = validateUuid value\n              chai.expect(valid, 'UUID is valid').to.equal true\n            continue\n          chai.expect(recv).to.equal packet\n        done()\n\n      ins.beginGroup 'group1'\n      ins.send 'data1'\n      ins.beginGroup 'group2'\n      ins.send 'data2'\n      ins.endGroup()\n      ins.endGroup()\n      ins.disconnect()\n"},"groups/Group":{language:"coffeescript",source:"noflo = require \"noflo\"\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Surround data IPs brackets'\n  c.inPorts.add 'in',\n    datatype: 'all'\n    description: 'IPs to forward'\n  c.inPorts.add 'group',\n    datatype: 'string'\n    description: 'Groups to encapsulate incoming packets into'\n    control: true\n  c.outPorts.add 'out',\n    datatype: 'all'\n    description: 'Forwarded IPs with encapsulating groups'\n  c.forwardBrackets = {}\n  c.process (input, output) ->\n    return unless input.hasData 'in', 'group'\n    [data, group] = input.getData 'in', 'group'\n    if Array.isArray group\n      brackets = group.slice 0\n    else\n      brackets = group.split ':'\n    for bracket in brackets\n      output.send\n        out: new noflo.IP 'openBracket', bracket\n    output.send\n      out: data\n    brackets.reverse()\n    for bracket in brackets\n      output.send\n        out: new noflo.IP 'closeBracket', bracket\n    output.done()\n",tests:"noflo = require 'noflo'\n\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-groups'\n\ndescribe 'Group component', ->\n  c = null\n  ins = null\n  group = null\n  out = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'groups/Group', (err, instance) ->\n      return done err if err\n      c = instance\n      ins = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach ins\n      group = noflo.internalSocket.createSocket()\n      c.inPorts.group.attach group\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n  afterEach ->\n    c.outPorts.out.detach out\n    out = null\n  describe 'receiving a single group for data', ->\n    it 'should send the packet with the group', (done) ->\n      expected = [\n        '< foo'\n        'DATA a'\n        '>'\n      ]\n      received = []\n      out.on 'begingroup', (group) ->\n        received.push \"< #{group}\"\n      out.on 'data', (data) ->\n        received.push \"DATA #{data}\"\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      out.on 'endgroup', ->\n        received.push '>'\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      group.send 'foo'\n      ins.send 'a'\n      ins.disconnect()\n  describe 'receiving multiple groups for data', ->\n    it 'should send the packet with the groups', (done) ->\n      expected = [\n        '< foo'\n        '< bar'\n        'DATA a'\n        '>'\n        '>'\n      ]\n      received = []\n      out.on 'begingroup', (group) ->\n        received.push \"< #{group}\"\n      out.on 'data', (data) ->\n        received.push \"DATA #{data}\"\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      out.on 'endgroup', ->\n        received.push '>'\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      group.send 'foo:bar'\n      ins.send 'a'\n      ins.disconnect()\n"},"groups/GroupByObjectKey":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Group IPs by a key in their payload'\n  c.inPorts.add 'in',\n    datatype: 'object'\n  c.inPorts.add 'key',\n    datatype: 'string'\n    control: true\n  c.outPorts.add 'out',\n    datatype: 'object'\n  c.outPorts.add 'error',\n    datatype: 'object'\n  c.forwardBrackets = {}\n  c.process (input, output) ->\n    return unless input.hasData 'in', 'key'\n    [data, key] = input.getData 'in', 'key'\n    unless typeof data is 'object'\n      output.done new Error 'Data is not an object'\n      return\n    group = data[key]\n    unless typeof data[key] is 'string'\n      group = 'undefined'\n    if typeof data[key] is 'boolean'\n      group = key if data[key]\n    output.send\n      out: new noflo.IP 'openBracket', group\n    output.send\n      out: data\n    output.send\n      out: new noflo.IP 'closeBracket', group\n    output.done()\n",tests:"noflo = require 'noflo'\n\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-groups'\n\ndescribe 'GroupByObjectKey component', ->\n  c = null\n  ins = null\n  key = null\n  out = null\n  error = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'groups/GroupByObjectKey', (err, instance) ->\n      return done err if err\n      c = instance\n      ins = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach ins\n      key = noflo.internalSocket.createSocket()\n      c.inPorts.key.attach key\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n    error = noflo.internalSocket.createSocket()\n    c.outPorts.error.attach error\n  afterEach ->\n    c.outPorts.out.detach out\n    out = null\n    c.outPorts.error.detach error\n    error = null\n  describe 'receiving an object that contains the desired key', ->\n    it 'should send the packet with the group', (done) ->\n      expected = [\n        '< foo'\n        {\n          hello: 'foo'\n          bar: 'baz'\n        }\n        '>'\n      ]\n      received = []\n      out.on 'begingroup', (group) ->\n        received.push \"< #{group}\"\n      out.on 'data', (data) ->\n        received.push data\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      out.on 'endgroup', ->\n        received.push '>'\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      key.send 'hello'\n      ins.send\n        hello: 'foo'\n        bar: 'baz'\n      ins.disconnect()\n  describe 'receiving an object that contains the desired key as non-string', ->\n    it 'should send the packet with \"undefined\" group', (done) ->\n      expected = [\n        '< undefined'\n        {\n          hello: 42\n          bar: 'baz'\n        }\n        '>'\n      ]\n      received = []\n      out.on 'begingroup', (group) ->\n        received.push \"< #{group}\"\n      out.on 'data', (data) ->\n        received.push data\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      out.on 'endgroup', ->\n        received.push '>'\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      key.send 'hello'\n      ins.send\n        hello: 42\n        bar: 'baz'\n      ins.disconnect()\n  describe 'receiving an object that doesn\\'t contain the desired key', ->\n    it 'should send the packet with \"undefined\" group', (done) ->\n      expected = [\n        '< undefined'\n        {\n          bar: 'baz'\n        }\n        '>'\n      ]\n      received = []\n      out.on 'begingroup', (group) ->\n        received.push \"< #{group}\"\n      out.on 'data', (data) ->\n        received.push data\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      out.on 'endgroup', ->\n        received.push '>'\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      key.send 'hello'\n      ins.send\n        bar: 'baz'\n      ins.disconnect()\n  describe 'receiving something else than an object', ->\n    it 'should send an error', (done) ->\n      error.on 'data', (data) ->\n        chai.expect(data).to.be.an 'error'\n        done()\n      out.on 'data', (data) ->\n        done new Error 'Unexpected data received'\n      key.send 'hello'\n      ins.send 42\n      ins.disconnect()\n"},"groups/GroupZip":{language:"coffeescript",source:"noflo = require \"noflo\"\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Group packets by a group in order received'\n  c.inPorts.add 'in',\n    datatype: 'all'\n  c.inPorts.add 'group',\n    datatype: 'string'\n  c.outPorts.add 'out',\n    datatype: 'all'\n  c.forwardBrackets = {}\n  c.process (input, output) ->\n    return unless input.hasData 'in', 'group'\n    [data, group] = input.getData 'in', 'group'\n    output.send\n      out: new noflo.IP 'openBracket', group\n    output.send\n      out: data\n    output.send\n      out: new noflo.IP 'closeBracket', group\n    output.done()\n",tests:"noflo = require 'noflo'\n\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-groups'\n\ndescribe 'GroupZip component', ->\n  c = null\n  group = null\n  ins = null\n  out = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'groups/GroupZip', (err, instance) ->\n      return done err if err\n      c = instance\n      group = noflo.internalSocket.createSocket()\n      ins = noflo.internalSocket.createSocket()\n      c.inPorts.group.attach group\n      c.inPorts.in.attach ins\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n  afterEach ->\n    c.outPorts.out.detach out\n\n  describe 'when provided with groups and packets', ->\n    it 'should wrap packets in corresponding groups by position', (done) ->\n      expected = [\n        '< groupA'\n        'DATA packetA'\n        '>'\n        '< groupB'\n        'DATA packetB'\n        '>'\n        '< groupC'\n        'DATA packetC'\n        '>'\n      ]\n      received = []\n\n      out.on 'begingroup', (grp) ->\n        received.push \"< #{grp}\"\n      out.on 'data', (data) ->\n        received.push \"DATA #{data}\"\n      out.on 'endgroup', ->\n        received.push '>'\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n\n      group.send 'groupA'\n      group.send 'groupB'\n      group.send 'groupC'\n      ins.send 'packetA'\n      ins.send 'packetB'\n      ins.send 'packetC'\n      ins.disconnect()\n"},"groups/LastGroup":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Forward incoming IPs and filter groups except the last one'\n  c.inPorts.add 'in',\n    datatype: 'all'\n    description: 'IPs to forward'\n    addressable: true\n  c.outPorts.add 'out',\n    datatype: 'all'\n  c.depth = {}\n  c.tearDown = (callback) ->\n    c.depth = {}\n    do callback\n  ensureDepth = (scope, idx) ->\n    c.depth[scope] = {} unless c.depth[scope]\n    return c.depth[scope][idx] if c.depth[scope][idx]\n    c.depth[scope][idx] = []\n    return c.depth[scope][idx]\n  c.forwardBrackets = {}\n  c.process (input, output) ->\n    indexesWithIps = input.attached('in').filter (idx) ->\n      input.has ['in', idx]\n    return unless indexesWithIps.length\n    indexesWithIps.forEach (idx) ->\n      depth = ensureDepth input.scope, idx\n      packet = input.get ['in', idx]\n      if packet.type is 'openBracket'\n        depth.push\n          group: packet.data\n          hasData: false\n        return\n      if packet.type is 'data'\n        if depth.length\n          lastLevel = depth[depth.length - 1]\n          unless lastLevel.hasData\n            output.send\n              out: new noflo.IP 'openBracket', lastLevel.group\n            lastLevel.hasData = true\n        output.send\n          out: packet\n        return\n      if packet.type is 'closeBracket'\n        lastLevel = depth.pop()\n        return unless lastLevel.hasData\n        output.send\n          out: new noflo.IP 'closeBracket', lastLevel.group\n        return\n    output.done()\n",tests:"noflo = require 'noflo'\n\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-groups'\n\ndescribe 'LastGroup component', ->\n  c = null\n  ins = null\n  out = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'groups/LastGroup', (err, instance) ->\n      return done err if err\n      c = instance\n      ins = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach ins\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n  afterEach ->\n    c.outPorts.out.detach out\n\n  describe 'when receiving no groups', ->\n    it 'should send packet as-is', (done) ->\n      expected = [\n        'DATA data'\n      ]\n      received = []\n\n      out.on 'begingroup', (grp) ->\n        received.push \"< #{grp}\"\n      out.on 'data', (data) ->\n        received.push \"DATA #{data}\"\n      out.on 'endgroup', ->\n        received.push '>'\n      out.on 'disconnect', ->\n        chai.expect(received).to.eql expected\n        done()\n\n      ins.send 'data'\n      ins.disconnect()\n\n  describe 'when receiving a single group', ->\n    it 'should send one group', (done) ->\n      expected = [\n        '< group'\n        'DATA data'\n        '>'\n      ]\n      received = []\n\n      out.on 'begingroup', (grp) ->\n        received.push \"< #{grp}\"\n      out.on 'data', (data) ->\n        received.push \"DATA #{data}\"\n      out.on 'endgroup', ->\n        received.push '>'\n      out.on 'disconnect', ->\n        chai.expect(received).to.eql expected\n        done()\n\n      ins.beginGroup 'group'\n      ins.send 'data'\n      ins.endGroup()\n      ins.disconnect()\n\n  describe 'when receiving two nested groups', ->\n    it 'should send one group', (done) ->\n      expected = [\n        '< group2'\n        'DATA data'\n        '>'\n      ]\n      received = []\n\n      out.on 'begingroup', (grp) ->\n        received.push \"< #{grp}\"\n      out.on 'data', (data) ->\n        received.push \"DATA #{data}\"\n      out.on 'endgroup', ->\n        received.push '>'\n      out.on 'disconnect', ->\n        chai.expect(received).to.eql expected\n        done()\n\n      ins.beginGroup 'group1'\n      ins.beginGroup 'group2'\n      ins.send 'data'\n      ins.endGroup()\n      ins.endGroup()\n      ins.disconnect()\n    it 'should send one group around two IPs', (done) ->\n      expected = [\n        '< group2'\n        'DATA data1'\n        'DATA data2'\n        '>'\n      ]\n      received = []\n\n      out.on 'begingroup', (grp) ->\n        received.push \"< #{grp}\"\n      out.on 'data', (data) ->\n        received.push \"DATA #{data}\"\n      out.on 'endgroup', ->\n        received.push '>'\n      out.on 'disconnect', ->\n        chai.expect(received).to.eql expected\n        done()\n\n      ins.beginGroup 'group1'\n      ins.beginGroup 'group2'\n      ins.send 'data1'\n      ins.send 'data2'\n      ins.endGroup()\n      ins.endGroup()\n      ins.disconnect()\n"},"groups/MapGroup":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Replace groups based on static or regexp map'\n  c.inPorts.add 'map',\n    datatype: 'all'\n    control: true\n  c.inPorts.add 'regexp',\n    datatype: 'all'\n    control: true\n  c.inPorts.add 'in',\n    datatype: 'all'\n  c.outPorts.add 'out',\n    datatype: 'all'\n  c.forwardBrackets = {}\n  c.process (input, output) ->\n    return unless input.has 'in'\n    return if input.attached('map').length and not input.hasData 'map'\n    return if input.attached('regexp').length and not input.hasData 'regexp'\n    map = {}\n    regexp = {}\n    if input.hasData 'map'\n      mapData = input.getData 'map'\n      if typeof mapData is 'object'\n        map = mapData\n      else\n        mapParts = mapData.split '='\n        map[mapParts[0]] = mapParts[1]\n    if input.hasData 'regexp'\n      regexpData = input.getData 'regexp'\n      if typeof regexpData is 'object'\n        regexp = regexpData\n      else\n        regexpParts = regexpData.split '='\n        regexp[regexpParts[0]] = regexpParts[1]\n    packet = input.get 'in'\n    if packet.type is 'data'\n      output.sendDone\n        out: packet\n      return\n    if packet.type in ['openBracket', 'closeBracket']\n      unless typeof packet.data is 'string'\n        output.sendDone\n          out: packet\n        return\n\n      if map[packet.data]\n        # Direct mapping\n        output.sendDone\n          out: new noflo.IP packet.type, map[packet.data]\n        return\n\n      group = packet.data\n      for expression, replacement of regexp\n        exp = new RegExp expression\n        matched = exp.exec group\n        continue unless matched\n        group = group.replace exp, replacement\n      output.sendDone\n        out: new noflo.IP packet.type, group\n      return\n    output.done()\n",tests:"noflo = require 'noflo'\n\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-groups'\n\ndescribe 'MapGroup component', ->\n  c = null\n  regexp = null\n  map = null\n  ins = null\n  out = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'groups/MapGroup', (err, instance) ->\n      return done err if err\n      c = instance\n      ins = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach ins\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n  afterEach ->\n    c.outPorts.out.detach out\n    out = null\n  describe 'with a group map', ->\n    before ->\n      map = noflo.internalSocket.createSocket()\n      c.inPorts.map.attach map\n    after ->\n      c.inPorts.map.detach map\n      map = null\n    it 'should send ungrouped data as-is', (done) ->\n      expected = [\n        'DATA foo'\n      ]\n      received = []\n      out.on 'begingroup', (group) ->\n        received.push \"< #{group}\"\n      out.on 'data', (data) ->\n        received.push \"DATA #{data}\"\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      out.on 'endgroup', ->\n        received.push '>'\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      map.send 'foo=bar'\n      ins.send 'foo'\n    it 'should send unmatched data as-is', (done) ->\n      expected = [\n        '< bar'\n        'DATA foo'\n        'DATA bar'\n        '>'\n      ]\n      received = []\n      out.on 'begingroup', (group) ->\n        received.push \"< #{group}\"\n      out.on 'data', (data) ->\n        received.push \"DATA #{data}\"\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      out.on 'endgroup', ->\n        received.push '>'\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      map.send 'foo=bar'\n      ins.beginGroup 'bar'\n      ins.send 'foo'\n      ins.send 'bar'\n      ins.endGroup()\n    it 'should send matched data replaced group', (done) ->\n      expected = [\n        '< bar'\n        'DATA foo'\n        'DATA bar'\n        '>'\n      ]\n      received = []\n      out.on 'begingroup', (group) ->\n        received.push \"< #{group}\"\n      out.on 'data', (data) ->\n        received.push \"DATA #{data}\"\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      out.on 'endgroup', ->\n        received.push '>'\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      map.send 'foo=bar'\n      ins.beginGroup 'foo'\n      ins.send 'foo'\n      ins.send 'bar'\n      ins.endGroup()\n    it 'should send matched data replaced group with map object', (done) ->\n      expected = [\n        '< bar'\n        'DATA foo'\n        'DATA bar'\n        '>'\n      ]\n      received = []\n      out.on 'begingroup', (group) ->\n        received.push \"< #{group}\"\n      out.on 'data', (data) ->\n        received.push \"DATA #{data}\"\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      out.on 'endgroup', ->\n        received.push '>'\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      map.send\n        foo: 'bar'\n      ins.beginGroup 'foo'\n      ins.send 'foo'\n      ins.send 'bar'\n      ins.endGroup()\n  describe 'with a group regexp', ->\n    before ->\n      regexp = noflo.internalSocket.createSocket()\n      c.inPorts.regexp.attach regexp\n    after ->\n      c.inPorts.regexp.detach regexp\n      regexp = null\n    it 'should send ungrouped data as-is', (done) ->\n      expected = [\n        'DATA foo'\n      ]\n      received = []\n      out.on 'begingroup', (group) ->\n        received.push \"< #{group}\"\n      out.on 'data', (data) ->\n        received.push \"DATA #{data}\"\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      out.on 'endgroup', ->\n        received.push '>'\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      regexp.send 'f.+=bar'\n      ins.send 'foo'\n    it 'should send unmatched data as-is', (done) ->\n      expected = [\n        '< bar'\n        'DATA foo'\n        'DATA bar'\n        '>'\n      ]\n      received = []\n      out.on 'begingroup', (group) ->\n        received.push \"< #{group}\"\n      out.on 'data', (data) ->\n        received.push \"DATA #{data}\"\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      out.on 'endgroup', ->\n        received.push '>'\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      regexp.send 'f.+=bar'\n      ins.beginGroup 'bar'\n      ins.send 'foo'\n      ins.send 'bar'\n      ins.endGroup()\n    it 'should send matched data replaced group', (done) ->\n      expected = [\n        '< bar'\n        'DATA foo'\n        'DATA bar'\n        '>'\n      ]\n      received = []\n      out.on 'begingroup', (group) ->\n        received.push \"< #{group}\"\n      out.on 'data', (data) ->\n        received.push \"DATA #{data}\"\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      out.on 'endgroup', ->\n        received.push '>'\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      regexp.send 'f.+=bar'\n      ins.beginGroup 'foo'\n      ins.send 'foo'\n      ins.send 'bar'\n      ins.endGroup()\n    it 'should send matched data replaced group with regexp object', (done) ->\n      expected = [\n        '< bar'\n        'DATA foo'\n        'DATA bar'\n        '>'\n      ]\n      received = []\n      out.on 'begingroup', (group) ->\n        received.push \"< #{group}\"\n      out.on 'data', (data) ->\n        received.push \"DATA #{data}\"\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      out.on 'endgroup', ->\n        received.push '>'\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      regexp.send\n        'f.+': 'bar'\n      ins.beginGroup 'foo'\n      ins.send 'foo'\n      ins.send 'bar'\n      ins.endGroup()\n  describe 'with a group regexp with capture', ->\n    before ->\n      regexp = noflo.internalSocket.createSocket()\n      c.inPorts.regexp.attach regexp\n    after ->\n      c.inPorts.regexp.detach regexp\n      regexp = null\n    it 'should send matched data replaced group', (done) ->\n      expected = [\n        '< somefile'\n        'DATA foo'\n        'DATA bar'\n        '>'\n      ]\n      received = []\n      out.on 'begingroup', (group) ->\n        received.push \"< #{group}\"\n      out.on 'data', (data) ->\n        received.push \"DATA #{data}\"\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      out.on 'endgroup', ->\n        received.push '>'\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      regexp.send 'data\\\\/([a-z]+)\\\\.yaml=$1'\n      ins.beginGroup 'data/somefile.yaml'\n      ins.send 'foo'\n      ins.send 'bar'\n      ins.endGroup()\n"},"groups/MergeGroups":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Flatten group tree to a single level'\n  c.inPorts.add 'in',\n    datatype: 'all'\n    description: 'IPs to forward'\n    addressable: true\n  c.outPorts.add 'out',\n    datatype: 'all'\n  c.depth = {}\n  c.tearDown = (callback) ->\n    c.depth = {}\n    do callback\n  ensureDepth = (scope, idx) ->\n    c.depth[scope] = {} unless c.depth[scope]\n    return c.depth[scope][idx] if c.depth[scope][idx]\n    c.depth[scope][idx] =\n      groups: []\n      dataGroups: []\n    return c.depth[scope][idx]\n  c.forwardBrackets = {}\n  c.process (input, output) ->\n    indexesWithIps = input.attached('in').filter (idx) ->\n      input.has ['in', idx]\n    return unless indexesWithIps.length\n    indexesWithIps.forEach (idx) ->\n      depth = ensureDepth input.scope, idx\n      packet = input.get ['in', idx]\n      if packet.type is 'openBracket'\n        # Ignore brackets arriving after data was sent\n        depth.groups.push packet.data\n        return\n      if packet.type is 'data'\n        if depth.groups.length and not depth.dataGroups.length\n          depth.dataGroups = depth.groups.slice 0\n          output.send\n            out: new noflo.IP 'openBracket', depth.dataGroups.join ':'\n        output.send\n          out: packet\n        return\n      if packet.type is 'closeBracket'\n        if depth.groups.join(':') is depth.dataGroups.join ':'\n          output.send\n            out: new noflo.IP 'closeBracket', depth.dataGroups.join ':'\n          depth.dataGroups = []\n        depth.groups.pop()\n        return\n    output.done()\n",tests:"noflo = require 'noflo'\n\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-groups'\n\ndescribe 'MergeGroups component', ->\n  c = null\n  ins = null\n  out = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'groups/MergeGroups', (err, instance) ->\n      return done err if err\n      c = instance\n      ins = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach ins\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n  afterEach ->\n    c.outPorts.out.detach out\n    out = null\n  describe 'receiving an un-bracketed packet', ->\n    it 'should send it out as-is', (done) ->\n      expected = [\n        'DATA a'\n      ]\n      received = []\n      out.on 'begingroup', (group) ->\n        received.push \"< #{group}\"\n      out.on 'data', (data) ->\n        received.push \"DATA #{data}\"\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      out.on 'endgroup', ->\n        received.push '>'\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      ins.send 'a'\n  describe 'receiving a stream', ->\n    it 'should send it out as-is', (done) ->\n      expected = [\n        '< foo'\n        'DATA a'\n        'DATA b'\n        '>'\n      ]\n      received = []\n      out.on 'begingroup', (group) ->\n        received.push \"< #{group}\"\n      out.on 'data', (data) ->\n        received.push \"DATA #{data}\"\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      out.on 'endgroup', ->\n        received.push '>'\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      ins.beginGroup 'foo'\n      ins.send 'a'\n      ins.send 'b'\n      ins.endGroup()\n      ins.disconnect()\n  describe 'receiving a stream with substreams', ->\n    it 'should flatten the stream to one level', (done) ->\n      expected = [\n        '< foo:bar'\n        'DATA a'\n        'DATA b'\n        '>'\n      ]\n      received = []\n      out.on 'begingroup', (group) ->\n        received.push \"< #{group}\"\n      out.on 'data', (data) ->\n        received.push \"DATA #{data}\"\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      out.on 'endgroup', ->\n        received.push '>'\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      ins.beginGroup 'foo'\n      ins.beginGroup 'bar'\n      ins.send 'a'\n      ins.beginGroup 'baz'\n      ins.send 'b'\n      ins.endGroup()\n      ins.endGroup()\n      ins.endGroup()\n      ins.disconnect()\n"},"groups/Objectify":{language:"coffeescript",source:"noflo = require(\"noflo\")\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = \"specify a regexp string, use the first match as the key\n  of an object containing the data\"\n  c.inPorts.add 'in',\n    datatype: 'all'\n    addressable: true\n  c.inPorts.add 'regexp',\n    datatype: 'string'\n    control: true\n  c.outPorts.add 'out',\n    datatype: 'all'\n  c.forwardBrackets = {}\n  c.matches = {}\n  c.tearDown = (callback) ->\n    c.matches = {}\n    do callback\n  ensureMatches = (scope, idx) ->\n    c.matches[scope] = {} unless c.matches[scope]\n    c.matches[scope][idx] = null unless c.matches[scope][idx]\n    return c.matches[scope][idx]\n  c.forwardBrackets = {}\n  c.process (input, output) ->\n    return unless input.hasData 'regexp'\n    indexesWithIps = input.attached('in').filter (idx) ->\n      input.has ['in', idx]\n    return unless indexesWithIps.length\n    regexp = new RegExp input.getData 'regexp'\n    indexesWithIps.forEach (idx) ->\n      matches = ensureMatches input.scope, idx\n      packet = input.get ['in', idx]\n      if packet.type is 'openBracket'\n        if typeof packet.data is 'string' and packet.data.match regexp\n          c.matches[input.scope][idx] = packet.data.match(regexp)[0]\n        output.send\n          out: packet\n        return\n      if packet.type is 'data'\n        # If there is a match, make an object out of it\n        if matches?\n          d = packet.data\n          data = {}\n          data[matches] = d\n          output.send\n            out: data\n          return\n        output.send\n          out: packet\n        return\n      if packet.type is 'closeBracket'\n        c.matches[input.scope][idx] = null\n        output.send\n          out: packet\n        return\n    output.done()\n",tests:"noflo = require 'noflo'\n\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-groups'\n\ndescribe 'Objectify component', ->\n  c = null\n  regexp = null\n  ins = null\n  out = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'groups/Objectify', (err, instance) ->\n      return done err if err\n      c = instance\n      regexp = noflo.internalSocket.createSocket()\n      ins = noflo.internalSocket.createSocket()\n      c.inPorts.regexp.attach regexp\n      c.inPorts.in.attach ins\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n  afterEach ->\n    c.outPorts.out.detach out\n\n  describe 'with groups matching regexp', ->\n    it 'should make an object and retain groups', (done) ->\n      groups = []\n      out.on 'begingroup', (grp) ->\n        groups.push grp\n      out.on 'data', (data) ->\n        chai.expect(data).to.eql\n          a: 'whatever'\n        chai.expect(groups).to.eql [\n          'abc'\n        ]\n      out.on 'endgroup', ->\n        groups.pop()\n        done() unless groups.length\n\n      regexp.send '^(a)'\n      ins.beginGroup 'abc'\n      ins.send 'whatever'\n      ins.endGroup()\n\n  describe 'with groups not matching regexp', ->\n    it 'should send packet as-is and retain groups', (done) ->\n      groups = []\n      out.on 'begingroup', (grp) ->\n        groups.push grp\n      out.on 'data', (data) ->\n        chai.expect(data).to.equal 'whatever'\n        chai.expect(groups).to.eql [\n          'xyz'\n        ]\n      out.on 'endgroup', ->\n        groups.pop()\n        done() unless groups.length\n\n      regexp.send '^(a)'\n      ins.beginGroup 'xyz'\n      ins.send 'whatever'\n      ins.endGroup()\n"},"groups/ReadGroup":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Send the groups surrounding a packet'\n  c.inPorts.add 'in',\n    datatype: 'all'\n    addressable: true\n  c.outPorts.add 'out',\n    datatype: 'all'\n  c.outPorts.add 'group',\n    datatype: 'string'\n  c.groups = {}\n  ensureGroups = (scope, idx) ->\n    c.groups[scope] = {} unless c.groups[scope]\n    c.groups[scope][idx] = [] unless c.groups[scope][idx]\n    return c.groups[scope][idx]\n  c.tearDown = (callback) ->\n    c.groups = {}\n    do callback\n  c.forwardBrackets = {}\n  c.process (input, output) ->\n    indexesWithIps = input.attached('in').filter (idx) ->\n      input.has ['in', idx]\n    return unless indexesWithIps.length\n    indexesWithIps.forEach (idx) ->\n      groups = ensureGroups input.scope, idx\n      packet = input.get ['in', idx]\n      if packet.type is 'openBracket'\n        groups.push packet.data\n        output.send\n          out: packet\n          group: packet.clone()\n        return\n      if packet.type is 'data'\n        output.send\n          group: groups.join ':'\n        output.send\n          out: packet\n        return\n      if packet.type is 'closeBracket'\n        groups.pop()\n        output.send\n          out: packet\n          group: packet.clone()\n        return\n    output.done()\n",tests:"noflo = require 'noflo'\n\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-groups'\n\ndescribe 'ReadGroup component', ->\n  c = null\n  ins = null\n  group = null\n  loader = null\n\n  before ->\n    loader = new noflo.ComponentLoader baseDir\n\n  beforeEach (done) ->\n    @timeout 4000\n    loader.load 'groups/ReadGroup', (err, instance) ->\n      return done err if err\n      c = instance\n      ins = noflo.internalSocket.createSocket()\n      group = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach ins\n      c.outPorts.group.attach group\n      done()\n\n  describe 'when instantiated', ->\n    it 'should have input ports', ->\n      chai.expect(c.inPorts.in).to.be.an 'object'\n\n    it 'should have an output port', ->\n      chai.expect(c.outPorts.group).to.be.an 'object'\n\n  describe 'read groups', ->\n    it 'test reading a group', (done) ->\n      group.once 'data', (data) ->\n        chai.expect(data).to.equal 'foo'\n        done()\n      ins.beginGroup 'foo'\n      ins.send 'hello'\n\n    it 'test reading a subgroup', (done) ->\n      group.once 'data', (data) ->\n        chai.expect(data).to.equal 'foo:bar'\n        done()\n      ins.beginGroup 'foo'\n      ins.beginGroup 'bar'\n      ins.send 'hello'\n"},"groups/ReadGroups":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Send the groups surrounding a packet'\n  c.inPorts.add 'in',\n    datatype: 'all'\n    addressable: true\n  c.inPorts.add 'strip',\n    datatype: 'boolean'\n    control: true\n    default: false\n  c.inPorts.add 'threshold',\n    datatype: 'int'\n    control: true\n    default: Infinity\n  c.outPorts.add 'out',\n    datatype: 'all'\n  c.outPorts.add 'group',\n    datatype: 'string'\n  c.groups = {}\n  ensureGroups = (scope, idx) ->\n    c.groups[scope] = {} unless c.groups[scope]\n    c.groups[scope][idx] = [] unless c.groups[scope][idx]\n    return c.groups[scope][idx]\n  c.tearDown = (callback) ->\n    c.groups = {}\n    do callback\n  c.forwardBrackets = {}\n  c.process (input, output) ->\n    indexesWithIps = input.attached('in').filter (idx) ->\n      input.has ['in', idx]\n    return unless indexesWithIps.length\n    return if input.attached('strip').length and not input.hasData('strip')\n    return if input.attached('threshold').length and not input.hasData('threshold')\n    if input.hasData 'strip'\n      strip = String(input.getData('strip')) is 'true'\n    else\n      strip = false\n    if input.hasData 'threshold'\n      threshold = parseInt(input.getData('threshold'))\n    else\n      threshold = Infinity\n    indexesWithIps.forEach (idx) ->\n      groups = ensureGroups input.scope, idx\n      packet = input.get ['in', idx]\n      if packet.type is 'openBracket'\n        groups.push packet.data\n        if groups.length > threshold\n          output.send\n            out: packet\n          return\n        output.send\n          group: packet.data\n        return if strip\n        output.send\n          out: packet\n        return\n      if packet.type is 'data'\n        output.send\n          out: packet\n        return\n      if packet.type is 'closeBracket'\n        if groups.length > threshold or not strip\n          output.send\n            out: packet\n        groups.pop()\n        return\n    output.done()\n",tests:"noflo = require 'noflo'\n\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-groups'\n\ndescribe 'ReadGroups component', ->\n  c = null\n  ins = null\n  group = null\n  out = null\n  strip = null\n  threshold = null\n  loader = null\n\n  before ->\n    loader = new noflo.ComponentLoader baseDir\n\n  beforeEach (done) ->\n    @timeout 4000\n    loader.load 'groups/ReadGroups', (err, instance) ->\n      return done err if err\n      c = instance\n      ins = noflo.internalSocket.createSocket()\n      group = noflo.internalSocket.createSocket()\n      out = noflo.internalSocket.createSocket()\n      strip = noflo.internalSocket.createSocket()\n      threshold = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach ins\n      c.inPorts.strip.attach strip\n      c.inPorts.threshold.attach threshold\n      c.outPorts.group.attach group\n      c.outPorts.out.attach out\n      done()\n\n  describe 'when instantiated', ->\n    it 'should have input ports', ->\n      chai.expect(c.inPorts.in).to.be.an 'object'\n\n    it 'should have an output port', ->\n      chai.expect(c.outPorts.group).to.be.an 'object'\n\n  describe 'read groups', ->\n    it 'test reading a group', (done) ->\n      group.once 'data', (data) ->\n        chai.expect(data).to.equal 'foo'\n        done()\n      strip.send false\n      threshold.send Infinity\n      ins.beginGroup 'foo'\n      ins.send 'hello'\n      ins.endGroup()\n\n    it 'test reading a subgroup with threshold=2', (done) ->\n      expected = [\n        'GROUP foo'\n        'OUT < foo'\n        'GROUP bar'\n        'OUT < bar'\n        'OUT hello'\n        'OUT >'\n        'OUT >'\n      ]\n      received = []\n      group.on 'data', (data) ->\n        received.push \"GROUP #{data}\"\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      out.on 'begingroup', (group) ->\n        received.push \"OUT < #{group}\"\n      out.on 'data', (data) ->\n        received.push \"OUT #{data}\"\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      out.on 'endgroup', (group) ->\n        received.push \"OUT >\"\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      strip.send false\n      threshold.send 2\n      ins.beginGroup 'foo'\n      ins.beginGroup 'bar'\n      ins.send 'hello'\n      ins.endGroup()\n      ins.endGroup()\n    it 'test reading a subgroup with threshold=1', (done) ->\n      expected = [\n        'GROUP foo'\n        'OUT < foo'\n        'OUT < bar'\n        'OUT hello'\n        'OUT >'\n        'OUT >'\n      ]\n      received = []\n      group.on 'data', (data) ->\n        received.push \"GROUP #{data}\"\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      out.on 'begingroup', (group) ->\n        received.push \"OUT < #{group}\"\n      out.on 'data', (data) ->\n        received.push \"OUT #{data}\"\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      out.on 'endgroup', (group) ->\n        received.push \"OUT >\"\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      strip.send false\n      threshold.send 1\n      ins.beginGroup 'foo'\n      ins.beginGroup 'bar'\n      ins.send 'hello'\n      ins.endGroup()\n      ins.endGroup()\n    it 'test reading a subgroup with threshold=2 and strip=true', (done) ->\n      expected = [\n        'GROUP foo'\n        'GROUP bar'\n        'OUT hello'\n      ]\n      received = []\n      group.on 'data', (data) ->\n        received.push \"GROUP #{data}\"\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      out.on 'begingroup', (group) ->\n        received.push \"OUT < #{group}\"\n      out.on 'data', (data) ->\n        received.push \"OUT #{data}\"\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      out.on 'endgroup', (group) ->\n        received.push \"OUT >\"\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      strip.send true\n      threshold.send 2\n      ins.beginGroup 'foo'\n      ins.beginGroup 'bar'\n      ins.send 'hello'\n      ins.endGroup()\n      ins.endGroup()\n    it 'test reading a subgroup with threshold=1 and strip=true', (done) ->\n      expected = [\n        'GROUP foo'\n        'OUT < bar'\n        'OUT hello'\n        'OUT >'\n      ]\n      received = []\n      group.on 'data', (data) ->\n        received.push \"GROUP #{data}\"\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      out.on 'begingroup', (group) ->\n        received.push \"OUT < #{group}\"\n      out.on 'data', (data) ->\n        received.push \"OUT #{data}\"\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      out.on 'endgroup', (group) ->\n        received.push \"OUT >\"\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      strip.send true\n      threshold.send 1\n      ins.beginGroup 'foo'\n      ins.beginGroup 'bar'\n      ins.send 'hello'\n      ins.endGroup()\n      ins.endGroup()\n"},"groups/Regroup":{language:"coffeescript",source:"noflo = require(\"noflo\")\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = \"Forward all the data IPs, strip all groups, and replace\n  them with groups from another connection\"\n  c.inPorts.add 'in',\n    datatype: 'all'\n  c.inPorts.add 'group',\n    datatype: 'string'\n  c.outPorts.add 'out',\n    datatype: 'all'\n  c.groups = {}\n  c.tearDown = (callback) ->\n    c.groups = {}\n    do callback\n  c.forwardBrackets = {}\n  c.process (input, output) ->\n    if input.hasData 'group'\n      c.groups[input.scope] = [] unless c.groups[input.scope]\n      c.groups[input.scope].push input.getData 'group'\n      output.done()\n      return\n    return unless input.hasData 'in'\n    groups = []\n    if c.groups[input.scope]?.length\n      groups = c.groups[input.scope].slice 0\n    data = input.getData 'in'\n    for group in groups\n      output.send\n        out: new noflo.IP 'openBracket', group\n    output.send\n      out: data\n    groups.reverse()\n    for group in groups\n      output.send\n        out: new noflo.IP 'closeBracket', group\n    output.done()\n",tests:"noflo = require 'noflo'\n\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-groups'\n\ndescribe 'Regroup component', ->\n  c = null\n  group = null\n  ins = null\n  out = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'groups/Regroup', (err, instance) ->\n      return done err if err\n      c = instance\n      group = noflo.internalSocket.createSocket()\n      ins = noflo.internalSocket.createSocket()\n      c.inPorts.group.attach group\n      c.inPorts.in.attach ins\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n  afterEach (done) ->\n    c.outPorts.out.detach out\n    c.shutdown done\n\n  describe 'with a grouped connection without control packets', ->\n    it 'should remove all groups', (done) ->\n      expected = [\n        'DATA data'\n      ]\n      received = []\n\n      out.on 'begingroup', (grp) ->\n        received.push \"< #{grp}\"\n      out.on 'data', (data) ->\n        received.push \"DATA #{data}\"\n      out.on 'endgroup', ->\n        received.push '>'\n      out.on 'disconnect', ->\n        chai.expect(received).to.eql expected\n        done()\n\n      ins.beginGroup 'group'\n      ins.send 'data'\n      ins.endGroup()\n      ins.disconnect()\n\n  describe 'with replacement groups', ->\n    it 'should replace the groups around the packet', (done) ->\n      expected = [\n        '< group1'\n        '< group2'\n        '< group3'\n        'DATA data'\n        '>'\n        '>'\n        '>'\n      ]\n      received = []\n\n      out.on 'begingroup', (grp) ->\n        received.push \"< #{grp}\"\n      out.on 'data', (data) ->\n        received.push \"DATA #{data}\"\n      out.on 'endgroup', ->\n        received.push '>'\n      out.on 'disconnect', ->\n        chai.expect(received).to.eql expected\n        done()\n\n      group.send 'group1'\n      group.send 'group2'\n      group.send 'group3'\n      ins.beginGroup 'group'\n      ins.send 'data'\n      ins.endGroup()\n      ins.disconnect()\n"},"groups/RemoveGroups":{language:"coffeescript",source:"noflo = require \"noflo\"\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = \"Remove groups matching a string or a regex string, or all if no regexp given\"\n  c.inPorts.add 'in',\n    datatype: 'all'\n    description: 'IPs to forward'\n  c.inPorts.add 'regexp',\n    datatype: 'string'\n    description: 'Regexp used to remove groups'\n    control: true\n  c.outPorts.add 'out',\n    datatype: 'all'\n  c.forwardBrackets = {}\n  c.process (input, output) ->\n    return unless input.has 'in'\n    return if input.attached('regexp').length and not input.hasData 'regexp'\n    regexp = null\n    if input.hasData 'regexp'\n      regexp = new RegExp input.getData 'regexp'\n    packet = input.get 'in'\n    if packet.type in ['openBracket', 'closeBracket']\n      unless regexp\n        # No regexp given, remove all brackets\n        output.done()\n        return\n      if typeof packet.data is 'string' and packet.data.match(regexp)\n        # Matches regexp, remove\n        output.done()\n        return\n      # Doesn't match regexp, send\n      output.sendDone\n        out: packet\n      return\n    if packet.type is 'data'\n      output.sendDone\n        out: packet\n      return\n",tests:"noflo = require 'noflo'\n\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-groups'\n\ndescribe 'RemoveGroups component', ->\n  c = null\n  regexp = null\n  ins = null\n  out = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'groups/RemoveGroups', (err, instance) ->\n      return done err if err\n      c = instance\n      ins = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach ins\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n  afterEach ->\n    c.outPorts.out.detach out\n\n  describe 'with no regexp', ->\n    it 'should remove all groups', (done) ->\n      expected = [\n        'DATA matched'\n        'DATA unmatched'\n      ]\n      received = []\n\n      out.on 'begingroup', (grp) ->\n        received.push \"< #{grp}\"\n      out.on 'data', (data) ->\n        received.push \"DATA #{data}\"\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      out.on 'endgroup', ->\n        received.push '>'\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n\n      ins.beginGroup 'abcd'\n      ins.send 'matched'\n      ins.endGroup()\n      ins.beginGroup 'wxyz'\n      ins.send 'unmatched'\n      ins.endGroup()\n      ins.disconnect()\n\n  describe 'with a regexp', ->\n    before ->\n      regexp = noflo.internalSocket.createSocket()\n      c.inPorts.regexp.attach regexp\n    after ->\n      c.inPorts.regexp.detach regexp\n      regexp = null\n    it 'should remove matching groups', (done) ->\n      expected = [\n        'DATA matched'\n        '< wxyz'\n        'DATA unmatched'\n        '>'\n      ]\n      received = []\n\n      out.on 'begingroup', (grp) ->\n        received.push \"< #{grp}\"\n      out.on 'data', (data) ->\n        received.push \"DATA #{data}\"\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      out.on 'endgroup', ->\n        received.push '>'\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n\n      regexp.send 'abc'\n\n      ins.beginGroup 'abcd'\n      ins.send 'matched'\n      ins.endGroup()\n      ins.beginGroup 'wxyz'\n      ins.send 'unmatched'\n      ins.endGroup()\n      ins.disconnect()\n"},"groups/SendByGroup":{language:"coffeescript",source:"noflo = require 'noflo'\n\ngetIdentifier = (groups) ->\n  if groups.length\n    return groups.join ':'\n  return 'ungrouped'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Send packet held in \"data\" when receiving\n  matching set of groups in \"in\"'\n  c.icon = 'share-square'\n  c.inPorts.add 'in',\n    datatype: 'bang'\n    description: 'Signal to release IPs associated with the emitted group'\n  c.inPorts.add 'data',\n    datatype: 'all'\n    description: 'IP to store by group'\n    addressable: true\n  c.outPorts.add 'out',\n    datatype: 'all'\n    description: 'IP associated with a group received on the in port'\n  c.stored = {}\n  c.released = {}\n  c.groups = []\n  c.tearDown = (callback) ->\n    c.stored = {}\n    c.released = {}\n    c.groups = []\n    do callback\n  c.forwardBrackets = {}\n  c.process (input, output) ->\n\n    release = (groups) ->\n      identifier = getIdentifier groups\n      c.released[input.scope] = {} unless c.released[input.scope]\n      c.released[input.scope][identifier] = true\n      return unless c.stored[input.scope]\n      return unless c.stored[input.scope][identifier]\n      for group in groups\n        output.send\n          out: new noflo.IP 'openBracket', group\n      output.send\n        out: c.stored[input.scope][identifier]\n      closes = groups.slice 0\n      closes.reverse()\n      for group in closes\n        output.send\n          out: new noflo.IP 'closeBracket', group\n      # Mark as non-released after sending\n      c.released[input.scope][identifier] = false\n      return\n    if input.hasStream 'in'\n      # Time to release some data\n      stream = input.getStream 'in'\n      brackets = []\n      for packet in stream\n        if packet.type is 'openBracket'\n          brackets.push packet.data\n          continue\n        if packet.type is 'data'\n          release brackets\n          continue\n        if packet.type is 'closeBracket'\n          brackets.pop()\n          continue\n      output.done()\n      return\n\n    # Store data to be released\n    indexesWithIps = input.attached('data').filter (idx) ->\n      input.has ['data', idx]\n    return unless indexesWithIps.length\n    indexesWithIps.forEach (idx) ->\n      c.groups[input.scope] = {} unless c.groups[input.scope]\n      c.groups[input.scope][idx] = [] unless c.groups[input.scope][idx]\n      packet = input.get ['data', idx]\n      if packet.type is 'openBracket'\n        c.groups[input.scope][idx].push packet.data\n        return\n      if packet.type is 'data'\n        identifier = getIdentifier c.groups[input.scope][idx]\n        c.stored[input.scope] = {} unless c.stored[input.scope]\n        c.stored[input.scope][identifier] = packet\n        if c.released[input.scope]?[identifier]\n          # This identifier was already released. Send right away\n          release c.groups[input.scope][idx]\n        return\n      if packet.type is 'closeBracket'\n        c.groups[input.scope][idx].pop()\n        return\n    output.done()\n",tests:"noflo = require 'noflo'\n\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-groups'\n\ndescribe 'SendByGroup component', ->\n  c = null\n  regexp = null\n  data = null\n  ins = null\n  out = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'groups/SendByGroup', (err, instance) ->\n      return done err if err\n      c = instance\n      ins = noflo.internalSocket.createSocket()\n      data = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach ins\n      c.inPorts.data.attach data\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n  afterEach (done) ->\n    c.outPorts.out.detach out\n    c.shutdown done\n\n  describe 'receiving a single-level stream', ->\n    it 'should not release the packets when receiving an unrelated bang', (done) ->\n      expected = []\n      received = []\n      out.on 'begingroup', (group) ->\n        received.push \"< #{group}\"\n      out.on 'data', (d) ->\n        received.push \"DATA #{d}\"\n      out.on 'endgroup', ->\n        received.push '>'\n      data.beginGroup 'a'\n      data.send 'hello'\n      data.send 'world'\n      data.endGroup()\n      ins.beginGroup 'b'\n      ins.send true\n      ins.endGroup()\n      setTimeout ->\n        chai.expect(received).to.eql expected\n        done()\n      , 100\n\n    it 'should release the last packet when receiving a bang', (done) ->\n      expected = [\n        '< a'\n        'DATA world'\n        '>'\n      ]\n      received = []\n      out.on 'begingroup', (group) ->\n        received.push \"< #{group}\"\n      out.on 'data', (d) ->\n        received.push \"DATA #{d}\"\n      out.on 'endgroup', ->\n        received.push '>'\n      data.beginGroup 'a'\n      data.send 'hello'\n      data.send 'world'\n      data.endGroup()\n      ins.beginGroup 'a'\n      ins.send true\n      ins.endGroup()\n      setTimeout ->\n        chai.expect(received).to.eql expected\n        done()\n      , 100\n  describe 'with a substream', ->\n    it 'should release the last packet when receiving a bang', (done) ->\n      expected = [\n        '< a'\n        '< b'\n        'DATA world'\n        '>'\n        '>'\n      ]\n      received = []\n      out.on 'begingroup', (group) ->\n        received.push \"< #{group}\"\n      out.on 'data', (d) ->\n        received.push \"DATA #{d}\"\n      out.on 'endgroup', ->\n        received.push '>'\n      data.beginGroup 'a'\n      data.send 'hello'\n      data.beginGroup 'b'\n      data.send 'world'\n      data.endGroup()\n      data.endGroup()\n      ins.beginGroup 'a'\n      ins.beginGroup 'b'\n      ins.send true\n      ins.endGroup()\n      ins.endGroup()\n      setTimeout ->\n        chai.expect(received).to.eql expected\n        done()\n      , 100\n    it 'should release the last packet when receiving a bang of higher stream', (done) ->\n      expected = [\n        '< a'\n        'DATA hello'\n        '>'\n      ]\n      received = []\n      out.on 'begingroup', (group) ->\n        received.push \"< #{group}\"\n      out.on 'data', (d) ->\n        received.push \"DATA #{d}\"\n      out.on 'endgroup', ->\n        received.push '>'\n      data.beginGroup 'a'\n      data.send 'hello'\n      data.beginGroup 'b'\n      data.send 'world'\n      data.endGroup()\n      data.endGroup()\n      ins.beginGroup 'a'\n      ins.send true\n      ins.endGroup()\n      setTimeout ->\n        chai.expect(received).to.eql expected\n        done()\n      , 100\n    it 'should release the first packet immediately if bang was already received', (done) ->\n      expected = [\n        '< a'\n        'DATA hello'\n        '>'\n      ]\n      received = []\n      out.on 'begingroup', (group) ->\n        received.push \"< #{group}\"\n      out.on 'data', (d) ->\n        received.push \"DATA #{d}\"\n      out.on 'endgroup', ->\n        received.push '>'\n      ins.beginGroup 'a'\n      ins.send true\n      ins.endGroup()\n      data.beginGroup 'a'\n      data.send 'hello'\n      data.send 'world'\n      data.endGroup()\n      data.endGroup()\n      setTimeout ->\n        chai.expect(received).to.eql expected\n        done()\n      , 100\n    it 'should release the ungrouped packet when receiving a ungrouped bang', (done) ->\n      expected = [\n        'DATA hello'\n      ]\n      received = []\n      out.on 'begingroup', (group) ->\n        received.push \"< #{group}\"\n      out.on 'data', (d) ->\n        received.push \"DATA #{d}\"\n      out.on 'endgroup', ->\n        received.push '>'\n      data.beginGroup 'a'\n      data.beginGroup 'b'\n      data.send 'world'\n      data.endGroup()\n      data.endGroup()\n      data.send 'hello'\n      ins.send true\n      setTimeout ->\n        chai.expect(received).to.eql expected\n        done()\n      , 100\n"},"gum/GetUserMedia":{language:"javascript",source:"const noflo = require('noflo');\n\n// @runtime noflo-browser\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.description = 'initialize camera and/or microphone';\n  c.icon = 'video-camera';\n  c.inPorts.add('start', {\n    datatype: 'bang',\n  });\n  c.inPorts.add('stop', {\n    datatype: 'bang',\n  });\n  c.inPorts.add('video', {\n    datatype: 'boolean',\n    control: true,\n    default: true,\n  });\n  c.inPorts.add('audio', {\n    datatype: 'boolean',\n    control: true,\n    default: false,\n  });\n  c.outPorts.add('stream', {\n    datatype: 'object',\n  });\n  c.outPorts.add('url', {\n    datatype: 'string',\n  });\n  c.outPorts.add('error', {\n    datatype: 'object',\n  });\n\n  let stream = null;\n  let ctx = null;\n  const stopStream = () => {\n    if (stream && stream.stop) {\n      stream.stop();\n      stream = null;\n    }\n    if (ctx) {\n      ctx.deactivate();\n      ctx = null;\n    }\n  };\n  c.tearDown = (callback) => {\n    stopStream();\n    callback();\n  };\n\n  c.process((input, output, context) => {\n    if (input.hasData('stop')) {\n      input.getData('stop');\n      stopStream();\n      output.done();\n      return;\n    }\n    if (!input.hasData('start')) { return; }\n    input.getData('start');\n    // Stop previous stream, if any\n    stopStream();\n\n    if (!(typeof navigator !== 'undefined' && navigator !== null ? navigator.mediaDevices : undefined)) {\n      output.done(new Error('navigator.mediaDevices not available.'));\n      return;\n    }\n    if (!(typeof navigator !== 'undefined' && navigator !== null ? navigator.mediaDevices.getUserMedia : undefined)) {\n      // In higher-level graph should provide option to chose image\n      // with file picker here. This will make it work on mobile etc.\n      output.done(new Error('navigator.mediaDevices.getUserMedia not available.'));\n      return;\n    }\n\n    const video = input.hasData('video') ? input.getData('video') : true;\n    const audio = input.hasData('audio') ? input.getData('audio') : false;\n\n    navigator.mediaDevices.getUserMedia({\n      video,\n      audio,\n    }).then((mediaStream) => {\n      stream = mediaStream;\n      ctx = context;\n\n      // Shim\n      if (window.URL == null) {\n        window.URL = (\n          window.webkitURL\n          || window.msURL\n          || window.oURL\n          || null);\n      }\n      if (window.URL.createObjectURL) {\n        output.send({ url: window.URL.createObjectURL(stream) });\n      } else {\n        output.send({ url: stream });\n      }\n      return output.send({ stream });\n    },\n    err => output.done(err));\n  });\n\n  return c;\n};\n",tests:"describe('GetUserMedia component', () => {\n  let c = null;\n  let sStart = null;\n  let sUrl = null;\n  let sError = null;\n  let loader = null;\n  before(() => {\n    loader = new noflo.ComponentLoader(baseDir);\n  });\n  beforeEach(function (done) {\n    this.timeout(4000);\n    loader.load('gum/GetUserMedia', (err, instance) => {\n      if (err) {\n        done(err);\n        return;\n      }\n      c = instance;\n      sStart = noflo.internalSocket.createSocket();\n      sUrl = noflo.internalSocket.createSocket();\n      sError = noflo.internalSocket.createSocket();\n      c.inPorts.start.attach(sStart);\n      c.outPorts.url.attach(sUrl);\n      c.outPorts.error.attach(sError);\n      done();\n    });\n  });\n\n  describe('when instantiated', () => {\n    it('should have four input ports', () => {\n      chai.expect(c.inPorts.start).to.be.an('object');\n      chai.expect(c.inPorts.stop).to.be.an('object');\n      chai.expect(c.inPorts.video).to.be.an('object');\n      chai.expect(c.inPorts.audio).to.be.an('object');\n    });\n    it('should have three output ports', () => {\n      chai.expect(c.outPorts.stream).to.be.an('object');\n      chai.expect(c.outPorts.url).to.be.an('object');\n      chai.expect(c.outPorts.error).to.be.an('object');\n    });\n  });\n\n  describe('when started', () => {\n    it('should send an error that gum isn\\'t available', () => {\n      sError.once('data', err => chai.expect(err).to.be.an('error'));\n      sStart.send(true);\n    });\n  });\n});\n"},"image/AdjustBrightness":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Adjust brightness level of a given image.'\n  c.icon = 'file-image-o'\n  c.inPorts.add 'canvas',\n    datatype: 'object'\n  c.inPorts.add 'level',\n    datatype: 'number'\n    control: true\n    default: 10.0\n  c.outPorts.add 'canvas',\n    datatype: 'object'\n  c.forwardBrackets =\n    canvas: ['canvas']\n  c.process (input, output) ->\n    return unless input.hasData 'canvas'\n    return if input.attached('level').length and not input.hasData 'level'\n    level = 10.0\n    if input.hasData 'level'\n      level = input.getData 'level'\n\n    canvas = input.getData 'canvas'\n    ctx = canvas.getContext '2d'\n    width = canvas.width\n    height = canvas.height\n    imageData = ctx.getImageData 0, 0, width, height\n\n    data = imageData.data\n\n    level = Math.floor 255 * (level / 100)\n\n    for i in [0...data.length] by 4\n      # Apply the color R, G, B values to each individual pixel\n      data[i] += level\n      data[i+1] += level\n      data[i+2] += level\n\n    ctx.putImageData imageData, 0, 0\n\n    output.sendDone\n      canvas: canvas\n    return\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai' unless chai\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\n  testutils = require './testutils'\nelse\n  baseDir = '/noflo-image'\n  testutils = require 'noflo-image/spec/testutils.js'\n\ndescribe 'AdjustBrightness component', ->\n  c = null\n  inImage = null\n  level = null\n  outImage = null\n  before ->\n    loader = new noflo.ComponentLoader baseDir\n  beforeEach (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'image/AdjustBrightness', (err, instance) ->\n      return done err if err\n      c = instance\n      inImage = noflo.internalSocket.createSocket()\n      outImage = noflo.internalSocket.createSocket()\n      c.inPorts.canvas.attach inImage\n      c.outPorts.canvas.attach outImage\n      done()\n\n  describe 'when instantiated', ->\n    it 'should have two input ports', ->\n      chai.expect(c.inPorts.canvas).to.be.an 'object'\n      chai.expect(c.inPorts.level).to.be.an 'object'\n    it 'should have one output port', ->\n      chai.expect(c.outPorts.canvas).to.be.an 'object'\n\n  describe 'with file system image', ->\n    it 'should make an image with adjusted brightness', (done) ->\n      id = null\n      groups = []\n      outImage.once 'begingroup', (group) ->\n        groups.push group\n      outImage.once 'data', (res) ->\n        # Tests result versus reference data\n        refSrc = 'brightness.png'\n        idOut = testutils.getCanvasWithImageNoShift refSrc, (ref) =>\n          resCtx = res.getContext '2d'\n          resData = resCtx.getImageData(0, 0, res.width, res.height).data\n          refCtx = ref.getContext '2d'\n          refData = refCtx.getImageData(0, 0, ref.width, ref.height).data\n          for x in [0...resData.length] by 4\n            difference = Math.abs(refData[x]-resData[x])\n            threshold = 1.5\n            chai.expect(difference).to.be.at.most threshold\n          done()\n\n      inSrc = 'original.jpg'\n      id = testutils.getCanvasWithImageNoShift inSrc, (image) ->\n        inImage.beginGroup id\n        inImage.send image\n        inImage.endGroup()\n"},"image/AdjustContrast":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Adjust contrast level of a given image.'\n  c.icon = 'file-image-o'\n  c.inPorts.add 'canvas',\n    datatype: 'object'\n  c.inPorts.add 'level',\n    datatype: 'number'\n    control: true\n    default: 1.0\n  c.outPorts.add 'canvas',\n    datatype: 'object'\n  c.forwardBrackets =\n    canvas: ['canvas']\n  c.process (input, output) ->\n    return unless input.hasData 'canvas'\n    return if input.attached('level').length and not input.hasData 'level'\n    level = 1.0\n    if input.hasData 'level'\n      level = input.getData 'level'\n\n    canvas = input.getData 'canvas'\n    ctx = canvas.getContext '2d'\n    width = canvas.width\n    height = canvas.height\n\n    imageData = ctx.getImageData 0, 0, width, height\n\n    data = imageData.data\n\n    level = (parseFloat(level) or 0) + 1.0\n \n    for i in [0...data.length] by 4\n      data[i] = ((((data[i] / 255) - 0.5) * level) + 0.5) * 255\n      data[i+1] = ((((data[i+1] / 255) - 0.5) * level) + 0.5) * 255\n      data[i+2] = ((((data[i+2] / 255) - 0.5) * level) + 0.5) * 255\n\n    ctx.putImageData imageData, 0, 0\n\n    output.sendDone\n      canvas: canvas\n    return\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai' unless chai\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\n  testutils = require './testutils'\nelse\n  baseDir = '/noflo-image'\n  testutils = require 'noflo-image/spec/testutils.js'\n\ndescribe 'AdjustContrast component', ->\n  c = null\n  inImage = null\n  outImage = null\n  beforeEach (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'image/AdjustContrast', (err, instance) ->\n      return done err if err\n      c = instance\n      inImage = noflo.internalSocket.createSocket()\n      outImage = noflo.internalSocket.createSocket()\n      c.inPorts.canvas.attach inImage\n      c.outPorts.canvas.attach outImage\n      done()\n\n  describe 'when instantiated', ->\n    it 'should have two input ports', ->\n      chai.expect(c.inPorts.canvas).to.be.an 'object'\n      chai.expect(c.inPorts.level).to.be.an 'object'\n    it 'should have one output port', ->\n      chai.expect(c.outPorts.canvas).to.be.an 'object'\n\n  describe 'with file system image', ->\n    it 'should make an image with adjusted contrast', (done) ->\n      id = null\n      groups = []\n      outImage.once 'begingroup', (group) ->\n        groups.push group\n      outImage.once 'data', (res) ->\n\n        # Tests result versus reference data\n        refSrc = 'contrast.png'\n        idOut = testutils.getCanvasWithImageNoShift refSrc, (ref) =>\n          resCtx = res.getContext '2d'\n          resData = resCtx.getImageData(0, 0, res.width, res.height).data\n          refCtx = ref.getContext '2d'\n          refData = refCtx.getImageData(0, 0, ref.width, ref.height).data\n          for x in [0...resData.length] by 4\n            difference = Math.abs(refData[x]-resData[x])\n            threshold = 1.5\n            chai.expect(difference).to.be.at.most threshold\n          done()\n\n      inSrc = 'original.jpg'\n      id = testutils.getCanvasWithImageNoShift inSrc, (image) ->\n        inImage.beginGroup id\n        inImage.send image\n        inImage.endGroup()\n"},"image/AdjustSaturation":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Adjust saturation level of a given image.'\n  c.icon = 'file-image-o'\n  c.inPorts.add 'canvas',\n    datatype: 'object'\n  c.inPorts.add 'level',\n    datatype: 'number'\n    control: true\n    default: 100.0\n  c.outPorts.add 'canvas',\n    datatype: 'object'\n  c.forwardBrackets =\n    canvas: ['canvas']\n  c.process (input, output) ->\n    return unless input.hasData 'canvas'\n    return if input.attached('level').length and not input.hasData 'level'\n    level = 100.0\n    if input.hasData 'level'\n      level = input.getData 'level'\n\n    canvas = input.getData 'canvas'\n\n    ctx = canvas.getContext '2d'\n    width = canvas.width\n    height = canvas.height\n\n    imageData = ctx.getImageData 0, 0, width, height\n\n    data = imageData.data\n\n    level *= -0.01\n\n    for i in [0...data.length] by 4\n      max = Math.max data[i], data[i+1], data[i+2]\n      data[i] += (max - data[i]) * level if data[i] isnt max\n      data[i+1] += (max - data[i+1]) * level if data[i+1] isnt max\n      data[i+2] += (max - data[i+2]) * level if data[i+2] isnt max\n\n    ctx.putImageData imageData, 0, 0\n\n    output.sendDone\n      canvas: canvas\n    return\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai' unless chai\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\n  testutils = require './testutils'\nelse\n  baseDir = '/noflo-image'\n  testutils = require 'noflo-image/spec/testutils.js'\n\ndescribe 'AdjustSaturation component', ->\n  c = null\n  inImage = null\n  outImage = null\n  beforeEach (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'image/AdjustSaturation', (err, instance) ->\n      return done err if err\n      c = instance\n      inImage = noflo.internalSocket.createSocket()\n      outImage = noflo.internalSocket.createSocket()\n      c.inPorts.canvas.attach inImage\n      c.outPorts.canvas.attach outImage\n      done()\n\n  describe 'when instantiated', ->\n    it 'should have two input ports', ->\n      chai.expect(c.inPorts.canvas).to.be.an 'object'\n      chai.expect(c.inPorts.level).to.be.an 'object'\n    it 'should have one output port', ->\n      chai.expect(c.outPorts.canvas).to.be.an 'object'\n\n  describe 'with file system image', ->\n    it 'should make an image with adjusted saturation', (done) ->\n      id = null\n      groups = []\n      outImage.once 'begingroup', (group) ->\n        groups.push group\n      outImage.once 'data', (res) ->\n        # Tests result versus reference data\n        refSrc = 'saturation.png'\n        idOut = testutils.getCanvasWithImageNoShift refSrc, (ref) =>\n          resCtx = res.getContext '2d'\n          resData = resCtx.getImageData(0, 0, res.width, res.height).data\n          refCtx = ref.getContext '2d'\n          refData = refCtx.getImageData(0, 0, ref.width, ref.height).data\n          for x in [0...resData.length] by 4\n            difference = Math.abs(refData[x]-resData[x])\n            threshold = 1.5\n            chai.expect(difference).to.be.at.most threshold\n          done()\n\n      inSrc = 'original.jpg'\n      id = testutils.getCanvasWithImageNoShift inSrc, (image) ->\n        inImage.beginGroup id\n        inImage.send image\n        inImage.endGroup()\n"},"image/ApplyAdjustmentCurve":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Apply a RGBA adjustment curve to a given image.'\n  c.icon = 'file-image-o'\n  c.inPorts.add 'canvas',\n    datatype: 'object'\n  c.inPorts.add 'curve',\n    datatype: 'object'\n  c.outPorts.add 'canvas',\n    datatype: 'object'\n  c.forwardBrackets =\n    canvas: ['canvas']\n  c.process (input, output) ->\n    return unless input.hasData 'canvas', 'curve'\n    [canvas, curve] = input.getData 'canvas', 'curve'\n    width = canvas.width\n    height = canvas.height\n\n    ctx = canvas.getContext '2d'\n    imageData = ctx.getImageData 0, 0, width, height\n    data = imageData.data\n\n    # From the original created by TechSlides at http://techslides.com\n    # Instagram filter from http://matthewruddy.github.io/jQuery-filter.me\n    for i in [0...data.length] by 4\n      # Apply the color R, G, B values to each individual pixel\n      data[i] = curve.r[data[i]]\n      data[i+1] = curve.g[data[i+1]]\n      data[i+2] = curve.b[data[i+2]]\n\n      # Apply the overall RGB contrast changes to each pixel\n      data[i] = curve.a[data[i]]\n      data[i+1] = curve.a[data[i+1]]\n      data[i+2] = curve.a[data[i+2]]\n\n    ctx.putImageData imageData, 0, 0\n\n    output.sendDone\n      canvas: canvas\n    return\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai' unless chai\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\n  testutils = require './testutils'\nelse\n  baseDir = '/noflo-image'\n  testutils = require 'noflo-image/spec/testutils.js'\n\ndescribe 'ApplyAdjustmentCurve component', ->\n  c = null\n  inImage = null\n  curve = null\n  outImage = null\n  beforeEach (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'image/ApplyAdjustmentCurve', (err, instance) ->\n      return done err if err\n      c = instance\n      inImage = noflo.internalSocket.createSocket()\n      curve = noflo.internalSocket.createSocket()\n      outImage = noflo.internalSocket.createSocket()\n      c.inPorts.canvas.attach inImage\n      c.inPorts.curve.attach curve\n      c.outPorts.canvas.attach outImage\n      done()\n\n  describe 'when instantiated', ->\n    it 'should have two input ports', ->\n      chai.expect(c.inPorts.canvas).to.be.an 'object'\n      chai.expect(c.inPorts.curve).to.be.an 'object'\n    it 'should have one output port', ->\n      chai.expect(c.outPorts.canvas).to.be.an 'object'\n\n  describe 'with file system image', ->\n    it 'should make an image with a curve applied on colors', (done) ->\n      @timeout 10000\n      id = null\n      groups = []\n      outImage.once 'begingroup', (group) ->\n        groups.push group\n      outImage.once 'data', (res) ->\n        # Tests result versus reference data\n        refSrc = 'colorcurve.png'\n        idOut = testutils.getCanvasWithImageNoShift refSrc, (ref) =>\n          resCtx = res.getContext '2d'\n          resData = resCtx.getImageData(0, 0, res.width, res.height).data\n          refCtx = ref.getContext '2d'\n          refData = refCtx.getImageData(0, 0, ref.width, ref.height).data\n          for x in [0...resData.length] by 4\n            difference = Math.abs(refData[x]-resData[x])\n            threshold = 1.5\n            chai.expect(difference).to.be.at.most threshold\n          done()\n\n      inSrc = 'original.jpg'\n      id = testutils.getCanvasWithImageNoShift inSrc, (image) ->\n        inImage.beginGroup id\n        curve.send {'a':[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,255], 'r':[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,3,3,4,4,5,5,5,6,7,7,8,8,9,9,10,11,11,12,13,14,14,15,16,17,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,37,38,39,41,42,43,45,46,48,49,51,52,54,55,57,58,60,62,63,65,67,68,70,72,74,76,77,79,81,83,85,87,89,91,93,95,97,99,101,103,105,106,108,110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,141,143,145,147,149,151,153,155,157,159,161,163,165,167,169,171,172,174,176,178,180,182,184,186,188,189,191,193,194,196,198,199,201,202,204,205,207,208,209,211,212,214,215,216,217,219,220,221,222,223,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,239,240,241,242,243,243,244,245,246,246,247,248,248,249,249,250,250,251,251,252,252,252,253,253,253,253,253,253,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,255,255,255,255,255,255,255,255], 'g':[0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,3,3,3,4,4,4,5,5,5,6,6,7,7,8,8,9,10,10,11,12,12,13,14,14,15,16,17,18,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,39,40,41,43,44,45,47,48,50,51,53,54,56,57,59,61,62,64,66,67,69,71,73,75,76,78,80,82,84,86,88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,161,163,165,167,169,171,173,175,176,178,180,182,183,185,187,189,190,192,193,195,197,198,200,201,203,204,206,207,209,210,211,213,214,216,217,218,219,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,237,237,238,239,240,240,241,242,243,243,244,244,245,246,246,247,247,248,248,249,249,250,250,250,251,251,252,252,252,253,253,253,253,253,253,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,255,255,255,255,255,255,255,255,255,255], 'b':[24,25,26,27,28,28,29,30,31,32,33,34,35,35,36,37,38,39,40,41,41,42,43,44,45,45,46,47,48,49,49,50,51,52,53,53,54,55,56,56,57,58,59,59,60,61,62,62,63,64,64,65,66,67,67,68,69,70,70,71,72,73,73,74,75,76,77,77,78,79,80,81,81,82,83,84,85,86,86,87,88,89,90,91,91,92,93,94,95,96,96,97,98,99,100,101,101,102,103,104,105,106,107,107,108,109,110,111,112,113,114,114,115,116,117,118,119,119,120,121,122,123,124,124,125,126,127,127,128,129,129,130,130,131,131,132,132,133,134,134,135,136,137,138,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,162,163,164,165,165,166,167,168,168,169,170,171,171,172,173,173,174,175,176,176,177,178,178,179,180,181,182,182,183,184,185,185,186,187,188,189,189,190,191,192,193,193,194,195,196,197,197,198,199,200,200,201,202,203,204,204,205,206,206,207,208,208,209,210,210,211,212,212,213,214,215,215,216,217,218,218,219,220,221,221,222,223,224,225,226,226,227,228,229]}\n        inImage.send image\n        inImage.endGroup()\n"},"image/ApplyVignette":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Apply a vignette effect to a given image.'\n  c.icon = 'file-image-o'\n  c.inPorts.add 'canvas',\n    datatype: 'object'\n  c.outPorts.add 'canvas',\n    datatype: 'object'\n  c.forwardBrackets =\n    canvas: ['canvas']\n  c.process (input, output) ->\n    return unless input.hasData 'canvas'\n    canvas = input.getData 'canvas'\n\n    ctx = canvas.getContext '2d'\n    width = canvas.width\n    height = canvas.height\n\n    imageData = ctx.getImageData 0, 0, width, height\n\n    data = imageData.data\n\n    outerRadius = Math.sqrt(Math.pow(width/2, 2) + Math.pow(height/2, 2))\n\n    # Adds outer darkened blur effect\n    ctx.globalCompositeOperation = 'source-over'\n    gradient = ctx.createRadialGradient width/2, height/2, 0, width/2, height/2, outerRadius\n    gradient.addColorStop 0, 'rgba(0, 0, 0, 0)'\n    gradient.addColorStop 0.65, 'rgba(0, 0, 0, 0)'\n    gradient.addColorStop 1, 'rgba(0, 0, 0, 0.9)'\n    ctx.fillStyle = gradient\n    ctx.fillRect 0, 0, width, height\n\n    # Adds central lighten effect\n    ctx.globalCompositeOperation = 'lighter'\n    gradient = ctx.createRadialGradient width/2, height/2, 0, width/2, height/2, outerRadius\n    gradient.addColorStop 0, 'rgba(255, 255, 255, 0.1)'\n    gradient.addColorStop 0.65, 'rgba(255, 255, 255, 0)'\n    gradient.addColorStop 1, 'rgba(0, 0, 0, 0)'\n    ctx.fillStyle = gradient\n    ctx.fillRect 0, 0, width, height\n\n    output.sendDone\n      canvas: canvas\n    return\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai' unless chai\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\n  testutils = require './testutils'\nelse\n  baseDir = './noflo-image'\n  testutils = require 'noflo-image/spec/testutils.js'\n\ndescribe 'ApplyVignette component', ->\n  c = null\n  inImage = null\n  outImage = null\n  beforeEach (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'image/ApplyVignette', (err, instance) ->\n      return done err if err\n      c = instance\n      inImage = noflo.internalSocket.createSocket()\n      outImage = noflo.internalSocket.createSocket()\n      c.inPorts.canvas.attach inImage\n      c.outPorts.canvas.attach outImage\n      done()\n\n  describe 'when instantiated', ->\n    it 'should have one input port', ->\n      chai.expect(c.inPorts.canvas).to.be.an 'object'\n    it 'should have one output port', ->\n      chai.expect(c.outPorts.canvas).to.be.an 'object'\n\n  describe 'with file system image', ->\n    it 'should make an image with a dark vignette', (done) ->\n      id = null\n      groups = []\n      outImage.once 'begingroup', (group) ->\n        groups.push group\n      outImage.once 'data', (res) ->\n        # Tests result versus reference data\n        refSrc = 'vignette.png'\n        idOut = testutils.getCanvasWithImageNoShift refSrc, (ref) =>\n          resCtx = res.getContext '2d'\n          resData = resCtx.getImageData(0, 0, res.width, res.height).data\n          refCtx = ref.getContext '2d'\n          refData = refCtx.getImageData(0, 0, ref.width, ref.height).data\n          for x in [0...resData.length] by 4\n            difference = Math.abs(refData[x]-resData[x])\n            threshold = 20.0\n            chai.expect(difference).to.be.at.most threshold\n          done()\n\n      inSrc = 'original.jpg'\n      id = testutils.getCanvasWithImageNoShift inSrc, (image) ->\n        inImage.beginGroup id\n        inImage.send image\n        inImage.endGroup()\n"},"image/CalculateAspectRatio":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# Recursive function for calculating greatest common divisor\ngcd = (a, b) -> (if (b is 0) then a else gcd(b, a % b))\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.icon = 'file-image-o'\n  c.description = 'Calculate aspect ratio from image dimensions'\n\n  c.inPorts.add 'dimensions',\n    datatype: 'object'\n  c.outPorts.add 'ratio',\n    datatype: 'object'\n  c.outPorts.add 'error',\n    datatype: 'object'\n\n  noflo.helpers.WirePattern c,\n    in: 'dimensions'\n    out: 'ratio'\n    forwardGroups: true\n    async: true\n  , (packet, groups, out, callback) ->\n    unless packet?.width > 0\n      return callback new Error \"Dimension is missing width\"\n    unless packet?.height > 0\n      return callback new Error \"Dimension is missing height\"\n    divisor = gcd packet.width, packet.height\n    numerator = packet.width / divisor\n    denominator = packet.height / divisor\n    out.send\n      ratio: \"#{numerator}:#{denominator}\"\n      aspect: numerator / denominator\n    do callback\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai' unless chai\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = '/noflo-image'\n\ndescribe 'CalculateAspectRatio component', ->\n  c = null\n  dimensions = null\n  ratio = null\n  error = null\n  beforeEach (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'image/CalculateAspectRatio', (err, instance) ->\n      return done err if err\n      c = instance\n      dimensions = noflo.internalSocket.createSocket()\n      ratio = noflo.internalSocket.createSocket()\n      error = noflo.internalSocket.createSocket()\n      c.inPorts.dimensions.attach dimensions\n      c.outPorts.ratio.attach ratio\n      c.outPorts.error.attach error\n      done()\n\n  describe 'calculating aspect ratios', ->\n    it 'should be able to return correct for 1680 x 1050 image', (done) ->\n      ratio.on 'data', (data) ->\n        chai.expect(data.ratio).to.be.a 'string'\n        chai.expect(data.ratio).to.eql '8:5'\n        chai.expect(data.aspect).to.be.a 'number'\n        chai.expect(data.aspect).to.be.eql 1680/1050\n        done()\n      dimensions.send\n        width: 1680\n        height: 1050\n    it 'should be able to return correct for 80 x 80 image', (done) ->\n      ratio.on 'data', (data) ->\n        chai.expect(data.ratio).to.be.a 'string'\n        chai.expect(data.ratio).to.eql '1:1'\n        chai.expect(data.aspect).to.be.a 'number'\n        chai.expect(data.aspect).to.eql 80/80\n        done()\n      dimensions.send\n        width: 80\n        height: 80\n    it 'should be able to return correct for 1080 x 1920 image', (done) ->\n      ratio.on 'data', (data) ->\n        chai.expect(data.ratio).to.be.a 'string'\n        chai.expect(data.ratio).to.eql '9:16'\n        chai.expect(data.aspect).to.be.a 'number'\n        chai.expect(data.aspect).to.be.eql 1080/1920\n        done()\n      dimensions.send\n        width: 1080\n        height: 1920\n    it 'should return error for a image without height', (done) ->\n      error.on 'data', (err) ->\n        chai.expect(err).to.be.instanceof Error\n        done()\n      dimensions.send\n        width: 1080\n    it 'should return error for a image with null dimensions', (done) ->\n      error.on 'data', (err) ->\n        chai.expect(err).to.be.instanceof Error\n        done()\n      dimensions.send null\n"},"image/Crop":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Crop the rectangle out of a given canvas'\n  c.icon = 'file-image-o'\n  c.inPorts = new noflo.InPorts\n    canvas:\n      datatype: 'object'\n      required: true\n    rectangle:\n      datatype: 'object'\n      description: 'A rectangle to crop out'\n      required: true\n  c.outPorts = new noflo.OutPorts\n    canvas:\n      datatype: 'object'\n    error:\n      datatype: 'object'\n\n  noflo.helpers.WirePattern c,\n    in: ['canvas', 'rectangle']\n    out: 'canvas'\n    forwardGroups: yes\n    async: yes\n  , (input, groups, out, callback) ->\n    unless input.rectangle?\n      return callback new Error \"Error when trying to crop the canvas given a rectangle. The rectangle is missing.\"\n    unless input.canvas?\n      return callback new Error \"Error when trying to crop the canvas given a rectangle. The canvas is missing.\"\n    unless input.rectangle.x? and input.rectangle.y? and input.rectangle.width? and input.rectangle.height?\n      return callback new Error \"Error when trying to crop the canvas given a rectangle. Rectangle is missing x, y, width or height\"\n    unless input.rectangle.width > 0 and input.rectangle.height > 0\n      return callback new Error \"Error when trying to crop the canvas given a rectangle. Rectangle width or height is not a positive value\"\n    unless input.canvas.width > 0 and input.canvas.height > 0\n      return callback new Error \"Error when trying to crop the canvas given a rectangle. Canvas is missing width or height\"\n\n    originalCanvas = input.canvas\n    {x, y, width, height} = input.rectangle\n    width = Math.abs originalCanvas.width - x if width > originalCanvas.width\n    height = Math.abs originalCanvas.height - y if height > originalCanvas.height\n    x = 0 if x < 0\n    y = 0 if y < 0\n\n    if noflo.isBrowser()\n      newCanvas = document.createElement 'canvas'\n      newCanvas.width = width\n      newCanvas.height = height\n    else\n      Canvas = require('noflo-canvas').canvas\n      newCanvas = new Canvas width, height\n\n    newCtx = newCanvas.getContext '2d'\n    newCtx.drawImage originalCanvas, x, y, width, height, 0, 0, width, height\n\n    if originalCanvas.originalWidth?\n      newCanvas.originalWidth = originalCanvas.originalWidth\n    if originalCanvas.originalHeight?\n      newCanvas.originalHeight = originalCanvas.originalHeight\n\n    out.send newCanvas\n    do callback\n    return\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai' unless chai\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\n  testutils = require './testutils'\nelse\n  baseDir = '/noflo-image'\n  testutils = require 'noflo-image/spec/testutils.js'\n\ndescribe 'Crop component', ->\n  c = null\n  canvas = null\n  rectangle = null\n  out = null\n  error = null\n  beforeEach (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'image/Crop', (err, instance) ->\n      return done err if err\n      c = instance\n      canvas = noflo.internalSocket.createSocket()\n      rectangle = noflo.internalSocket.createSocket()\n      out = noflo.internalSocket.createSocket()\n      error = noflo.internalSocket.createSocket()\n      c.inPorts.canvas.attach canvas\n      c.inPorts.rectangle.attach rectangle\n      c.outPorts.canvas.attach out\n      c.outPorts.error.attach error\n      done()\n\n  describe 'when instantiated', ->\n    it 'should have input ports', ->\n      chai.expect(c.inPorts.canvas).to.be.an 'object'\n      chai.expect(c.inPorts.rectangle).to.be.an 'object'\n    it 'should have output ports', ->\n      chai.expect(c.outPorts.canvas).to.be.an 'object'\n      chai.expect(c.outPorts.error).to.be.an 'object'\n\n  describe 'when passed a canvas', ->\n    describe 'with a valid rectangle', ->\n      it 'should crop it', (done) ->\n        @timeout 20000\n        rect =\n          x: 40\n          y: 40\n          width: 40\n          height: 40\n        groupId = 'rectangle-ranges'\n        groups = []\n        out.once 'begingroup', (group) ->\n          groups.push group\n        out.once 'endgroup', (group) ->\n          groups.pop()\n        out.once 'data', (res) ->\n          chai.expect(res.width).to.be.eql rect.width\n          chai.expect(res.height).to.be.eql rect.height\n          done()\n\n        inSrc = 'original.jpg'\n        testutils.getCanvasWithImageNoShift inSrc, (c) ->\n          canvas.beginGroup groupId\n          rectangle.send rect\n          canvas.send c\n          canvas.endGroup()\n\n    describe 'with a rectangle bigger than image', ->\n      it 'should crop it respecting boundaries', (done) ->\n        @timeout 20000\n        groupId = 'rectangle-ranges'\n        groups = []\n        out.once 'begingroup', (group) ->\n          groups.push group\n        out.once 'endgroup', (group) ->\n          groups.pop()\n        out.once 'data', (res) ->\n          expected =\n            width: 40\n            height: 40\n          chai.expect(res.width).to.be.eql expected.width\n          chai.expect(res.height).to.be.eql expected.height\n          done()\n\n        inSrc = 'original.jpg'\n        rect =\n          x: 40\n          y: 40\n          width: 100\n          height: 100\n        testutils.getCanvasWithImageNoShift inSrc, (c) ->\n          canvas.beginGroup groupId\n          rectangle.send rect\n          canvas.send c\n          canvas.endGroup()\n\n    describe 'with a rectangle with negative coordinates', ->\n      it 'should crop it respecting boundaries', (done) ->\n        @timeout 20000\n        groupId = 'rectangle-ranges'\n        groups = []\n        out.once 'begingroup', (group) ->\n          groups.push group\n        out.once 'endgroup', (group) ->\n          groups.pop()\n        out.once 'data', (res) ->\n          expected =\n            width: 80\n            height: 80\n          chai.expect(res.width).to.be.eql expected.width\n          chai.expect(res.height).to.be.eql expected.height\n          done()\n\n        inSrc = 'original.jpg'\n        rect =\n          x: -40\n          y: -40\n          width: 80\n          height: 80\n        testutils.getCanvasWithImageNoShift inSrc, (c) ->\n          canvas.beginGroup groupId\n          rectangle.send rect\n          canvas.send c\n          canvas.endGroup()\n\n    describe 'when given null canvas', ->\n      it 'should return an error', (done) ->\n        groupId = 'null-canvas'\n        groups = []\n        out.once 'begingroup', (group) ->\n          groups.push group\n        out.once 'endgroup', (group) ->\n          groups.pop()\n        error.on \"data\", (err) ->\n          chai.expect(err).to.be.instanceof Error\n          done()\n        rect =\n          x: -40\n          y: -40\n          width: 80\n          height: 80\n        canvas.beginGroup groupId\n        canvas.send null\n        rectangle.send rect\n        canvas.endGroup()\n\n    describe 'when given null rectangle', ->\n      it 'should return an error', (done) ->\n        groupId = 'null-rectangle'\n        groups = []\n        out.once 'begingroup', (group) ->\n          groups.push group\n        out.once 'endgroup', (group) ->\n          groups.pop()\n        error.on \"data\", (err) ->\n          chai.expect(err).to.be.instanceof Error\n          done()\n        inSrc = 'original.jpg'\n        testutils.getCanvasWithImageNoShift inSrc, (c) ->\n          canvas.beginGroup groupId\n          rectangle.send null\n          canvas.send c\n          canvas.endGroup()\n\n    describe 'when given a invalid rectangle', ->\n      it 'should return an error', (done) ->\n        groupId = 'null-rectangle'\n        groups = []\n        out.once 'begingroup', (group) ->\n          groups.push group\n        out.once 'endgroup', (group) ->\n          groups.pop()\n        error.on \"data\", (err) ->\n          chai.expect(err).to.be.instanceof Error\n          done()\n        inSrc = 'original.jpg'\n        rect =\n          x: -40\n          height: 80\n        testutils.getCanvasWithImageNoShift inSrc, (c) ->\n          canvas.beginGroup groupId\n          rectangle.send rect\n          canvas.send c\n          canvas.endGroup()\n"},"image/ExtractLightness":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.icon = 'file-image-o'\n  c.description = 'Extract global lightness of a given image. Light images will return values greater than zero.'\n\n  c.outPorts.add 'lightness',\n    datatype: 'number'\n\n  c.inPorts.add 'canvas',\n    datatype: 'object'\n\n  noflo.helpers.WirePattern c,\n    in: ['canvas']\n    out: ['lightness']\n    forwardGroups: true\n    async: true\n  , (payload, groups, out, callback) ->\n    canvas = payload\n    ctx = canvas.getContext '2d'\n    imageData = ctx.getImageData 0, 0, canvas.width, canvas.height\n    data = imageData.data\n    lightPixels = 0\n    darkPixels = 0\n    # Middle intensity\n    threshold = 127\n\n    for i in [0...data.length] by 4\n      r = data[i]\n      g = data[i+1]\n      b = data[i+2]\n      max = Math.max(Math.max(r, g), b)\n      if max >= threshold\n        lightPixels += 1\n      else\n        darkPixels += 1\n    imageArea = canvas.width * canvas.height\n    lightness = (lightPixels - darkPixels) / imageArea\n    \n    out.send lightness\n    do callback\n    return\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai' unless chai\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\n  testutils = require './testutils'\nelse\n  baseDir = '/noflo-image'\n  testutils = require 'noflo-image/spec/testutils.js'\n\ndescribe 'ExtractLightness component', ->\n  c = null\n  ins = null\n  paths = null\n  out = null\n  beforeEach (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'image/ExtractLightness', (err, instance) ->\n      return done err if err\n      c = instance\n      ins = noflo.internalSocket.createSocket()\n      out = noflo.internalSocket.createSocket()\n      c.inPorts.canvas.attach ins\n      c.outPorts.lightness.attach out\n      done()\n\n  describe 'when instantiated', ->\n    it 'should have input ports', ->\n      chai.expect(c.inPorts.canvas).to.be.an 'object'\n    it 'should have output ports', ->\n      chai.expect(c.outPorts.lightness).to.be.an 'object'\n\n  describe 'when passed a canvas', ->\n    it 'should extract global lightness', (done) ->\n      id = 1\n      groups = []\n      out.once 'begingroup', (group) ->\n        groups.push group\n      out.once 'endgroup', (group) ->\n        groups.pop()\n      out.once 'data', (res) ->\n        chai.expect(groups).to.eql [1]\n        chai.expect(res).to.be.closeTo 0.8, 2.0\n        done()\n\n      inSrc = 'original.jpg'\n      testutils.getCanvasWithImageNoShift inSrc, (c) ->\n        ins.beginGroup id\n        ins.send c\n        ins.endGroup()\n\n  describe 'when passed a light canvas', ->\n    it 'should extract high lightness level', (done) ->\n      id = 1\n      groups = []\n      out.once 'begingroup', (group) ->\n        groups.push group\n      out.once 'endgroup', (group) ->\n        groups.pop()\n      out.once 'data', (res) ->\n        chai.expect(groups).to.eql [1]\n        chai.expect(res).to.be.gte 0\n        done()\n\n      inSrc = 'light.png'\n      testutils.getCanvasWithImageNoShift inSrc, (c) ->\n        ins.beginGroup id\n        ins.send c\n        ins.endGroup()\n\n  describe 'when passed a dark canvas', ->\n    it 'should extract low lightness level', (done) ->\n      id = 1\n      groups = []\n      out.once 'begingroup', (group) ->\n        groups.push group\n      out.once 'endgroup', (group) ->\n        groups.pop()\n      out.once 'data', (res) ->\n        chai.expect(groups).to.eql [1]\n        chai.expect(res).to.be.lte 0\n        done()\n\n      inSrc = 'dark.png'\n      testutils.getCanvasWithImageNoShift inSrc, (c) ->\n        ins.beginGroup id\n        ins.send c\n        ins.endGroup()\n"},"image/FindFeatureFreeAreas":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# Create NxM equally spaced points within @bounds\ncalculateStartingPoints = (bounds, segments) ->\n  points = []\n  for sx in [1..segments.x]\n    for sy in [1..segments.y]\n      x = bounds.w*(sx/(segments.x+1))\n      y = bounds.h*(sy/(segments.y+1))\n      points.push {x: x, y: y}\n  return points\n\n# Create sorted array for looking up points by their X and Y coordinates\n# Note: no deduplication, two indices may refer to same X or Y coordinate\nspatialSortedIndices = (corners) ->\n  indices =\n    x: [0...corners.length]\n    y: [0...corners.length]\n  sortByX = (a,b) ->\n    return 1 if corners[a].x > corners[b].x\n    return -1 if corners[a].x < corners[b].x\n    return 0\n  sortByY = (a,b) ->\n    return 1 if corners[a].y > corners[b].y\n    return -1 if corners[a].y < corners[b].y\n    return 0\n  indices.x.sort sortByX\n  indices.y.sort sortByY\n  return indices\n\n# Find the index of @point in @indices for given @axis\n# Returns -1 if point.axis is smaller than all corners, or corners.length if bigger\nfindIndexForPoint = (corners, indices, point) ->\n  findIndexAxis = (axis) ->\n    length = indices[axis].length\n    if point[axis] > corners[indices[axis][length-1]][axis]\n      return length\n    for i in [0...length]\n      idx = indices[axis][i]\n      if corners[idx][axis] > point[axis]\n        return i-1\n    return -1\n  r =\n    x: findIndexAxis 'x'\n    y: findIndexAxis 'y'\n  return r\n\n# Grow rectangle initially sized 0,0 at @point until @threshold corners have been hit\ngrowRectangle = (corners, indices, point, bounds, threshold) ->\n  if point.x > bounds.w or point.y > point.h\n    throw new Error \"Initial point is outside bounds\"\n\n  # Find where point is in our sorted list of corners\n  pointIndex = findIndexForPoint corners, indices, point\n\n  coordinateForIndex = (axis, index) ->\n    if index < 0\n      return { x: 0, y: 0 }\n    if index >= indices[axis].length\n      return { x: bounds.w, y: bounds.h }\n    idx = indices[axis][index]\n    p = corners[idx]\n    return p\n\n  pointInRect = (p, rect) ->\n    in_x = p.x >= rect.x0 and p.x <= rect.x1\n    in_y = p.y >= rect.y0 and p.y <= rect.y1\n    #console.log in_x, in_y\n    return in_x and in_y\n\n  r = { x0: point.x, x1: point.x, y0: point.y, y1: point.y }\n  \n  # Expand\n  i = {x: pointIndex.x, y: pointIndex.y}\n  while true\n    i.x=i.x+1\n    i.y=i.y+1\n    x = coordinateForIndex 'x', i.x\n    y = coordinateForIndex 'y', i.y\n    expand = false\n    if not pointInRect x, r\n      #console.log 'expanding X', x, r\n      r.x1 = x.x\n      #if x.y > r.y1\n        #r.y1 = x.y # TEMP: needed?\n      expand = true\n    if not pointInRect y, r\n      #console.log 'expanding Y', y, r\n      r.y1 = y.y\n      #if y.x > r.x1\n#        r.x1 = y.x\n      expand = true\n    break if not expand\n    break if i.x > indices.x.length\n    break if i.y > indices.y.length\n\n#  console.log 'One phase done!'\n  ###\n  # Expand lower right\n  i = {x: pointIndex.x, y: pointIndex.y}\n  while true\n    i.x=i.x-1\n    x = coordinateForIndex 'x', i.x\n    expand = false\n    console.log i.x, 0, x\n    if not pointInRect x, r\n      r.x0 = x.x\n      expand = true\n    i.y=i.y-1\n    y = coordinateForIndex 'y', i.y\n    console.log i.y, 0, y\n    if not pointInRect y, r\n      r.y0 = y.y\n      expand = true\n    break if not expand\n    break if i.x < 0\n    break if i.y < 0\n  ###\n  r = { x: r.x0, y: r.y0, width: r.x1-r.x0, height: r.y1-r.y0 }\n#  console.log r\n  return r\n\nfindRegions = (corners, bounds, seg) ->\n  if bounds.w > bounds.h\n    segments = { x: seg, y: Math.floor(seg*(bounds.w/bounds.h)) }\n  else\n    segments = { x: Math.floor(seg*(bounds.h/bounds.w)), y: seg }\n  \n  #console.log segments\n  threshold = 1\n  indices = spatialSortedIndices corners\n\n  regions = []\n  for point in calculateStartingPoints bounds, segments\n    region = growRectangle corners, indices, point, bounds, threshold\n    regions.push region\n\n  sortByArea = (a,b) ->\n    A = a.width*a.height\n    B = b.width*b.height\n    return 1 if A > B\n    return -1 if A < B\n    return 0\n  regions.sort sortByArea\n  return regions\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Extract feature corners of image (method: YAPE)'\n  c.icon = 'file-image-o'\n  c.inPorts.add 'corners',\n    datatype: 'array'\n  c.inPorts.add 'width',\n    datatype: 'int'\n    control: true\n    default: 0\n  c.inPorts.add 'height',\n    datatype: 'int'\n    control: true\n    default: 0\n  c.inPorts.add 'segments',\n    datatype: 'int'\n    control: true\n    default: 4\n  c.outPorts.add 'areas',\n    datatype: 'array'\n  c.outPorts.add 'corners',\n    datatype: 'array'\n  c.forwardBrackets =\n    corners: ['areas', 'corners']\n  c.process (input, output) ->\n    return unless input.hasData 'corners'\n    return if input.attached('width').length and not input.hasData 'width'\n    return if input.attached('height').length and not input.hasData 'height'\n    return if input.attached('segments').length and not input.hasData 'segments'\n    width = 0\n    if input.hasData 'width'\n      width = parseInt input.getData 'width'\n    height = 0\n    if input.hasData 'height'\n      height = parseInt input.getData 'height'\n    segments = 4\n    if input.hasData 'segments'\n      segments = parseInt input.getData 'segments'\n\n    corners = input.getData 'corners'\n    b = { w: width, h: height }\n    s = segments\n    regions = findRegions corners, b, s\n    output.send\n      areas: regions\n      corners: corners\n    output.done()\n    return\n\nexports.calculateStartingPoints = calculateStartingPoints\nexports.spatialSortedIndices = spatialSortedIndices\nexports.findIndexForPoint = findIndexForPoint\nexports.growRectangle = growRectangle\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai' unless chai\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\n  FindFeatureFreeAreas = require '../components/FindFeatureFreeAreas.coffee'\nelse\n  baseDir = '/noflo-image'\n  FindFeatureFreeAreas = require 'noflo-image/components/FindFeatureFreeAreas.js'\n\ndescribe 'FindFeatureFreeAreas', ->\n\n  describe '.calculateStartingPoints()', ->\n    describe 'when passing bounds and number of segments', ->\n      it 'returns evenly spaced points', ->\n        b = { w: 150, h: 200 }\n        s = { x: 2, y: 3 }\n        points = FindFeatureFreeAreas.calculateStartingPoints b, s\n        chai.expect(points).to.be.an 'array'\n        chai.expect(points).to.have.length 6\n        chai.expect(points).to.deep.equal [\n          {x:50, y:50}\n          {x:50, y:100}\n          {x:50, y:150}\n          {x:100, y:50}\n          {x:100, y:100}\n          {x:100, y:150}\n        ]\n\n  describe '.spatialSortedIndices()', ->\n    describe 'when given an unordered list of points', ->\n      input = [\n        {x:50, y:50}\n        {x:100, y:100}\n        {x:50, y:150}\n        {x:100, y:50}\n        {x:50, y:100}\n        {x:100, y:150}\n      ]\n      indices = FindFeatureFreeAreas.spatialSortedIndices input\n      it 'returns indices for X and Y axis', ->\n        chai.expect(indices).to.be.an 'object'\n        chai.expect(indices).to.have.property 'x'\n        chai.expect(indices).to.have.property 'y'\n      it 'X indices are sorted by X coordinates', ->\n        chai.expect(indices.x).to.have.length 6\n        values = (input[i].x for i in indices.x)\n        chai.expect(values).to.deep.equal [ 50, 50, 50, 100, 100, 100 ]\n        chai.expect(indices.x).to.deep.equal [ 0, 2, 4, 1, 3, 5 ]\n      it 'Y indices are sorted by Y coordinates', ->\n        chai.expect(indices.y).to.have.length 6\n        values = (input[i].y for i in indices.y)\n        chai.expect(values).to.deep.equal [ 50, 50, 100, 100, 150, 150 ]\n        chai.expect(indices.y).to.deep.equal [ 0, 3, 1, 4, 2, 5 ]\n\n  describe '.findIndexForPoint()', ->\n    corners = [\n      {x:50, y:50}\n      {x:100, y:100}\n      {x:50, y:150}\n      {x:100, y:50}\n      {x:50, y:100}\n      {x:100, y:150}\n    ]\n    testcases = [ # r = results\n      { n: 'middle', p: {x:70, y:110}, r: {x:2, y:3} }\n      { n: 'left of', p: {x:10, y:70}, r: {x:-1, y:1} }\n      { n: 'right of', p: {x:110, y:70}, r: {x:6, y:1} }\n    ]\n    indices = FindFeatureFreeAreas.spatialSortedIndices corners\n    describe 'given corners and indices', ->\n      it 'returns both X and Y axis', ->\n        index = FindFeatureFreeAreas.findIndexForPoint corners, indices, { x: 70, y: 70 }\n        chai.expect(index).to.be.an 'object'\n        chai.expect(index).to.have.property 'x'\n        chai.expect(index).to.have.property 'y'\n    for testcase in testcases\n      t = (test) ->\n        describe \"if point is #{test.n};\", ->\n          index = FindFeatureFreeAreas.findIndexForPoint corners, indices, test.p\n          it \"X index equals #{test.r.x}\", ->\n            chai.expect(index.x).to.equal test.r.x\n          it \"Y index equals #{test.r.y}\", ->\n            chai.expect(index.y).to.equal test.r.y\n      t(testcase)\n\n  describe '.growRectangle()', ->\n    corners = [\n      {x:10, y:10}\n      {x:70, y:70}\n      {x:30, y:33}\n      {x:31, y:37}\n      {x:54, y:159}\n      {x:100, y:50}\n      {x:56, y:140}\n      {x:22, y:22}\n    ]\n    indices = FindFeatureFreeAreas.spatialSortedIndices corners\n    bounds = { w: 100, h: 150 }\n    point = { x: 70, y: 70 }\n    threshold = 1\n    describe 'when ran', ->\n      region = FindFeatureFreeAreas.growRectangle corners, indices, point, bounds, threshold\n      it 'returns region type', ->\n        chai.expect(region).to.be.an 'object'\n        chai.expect(region).to.have.property 'x'\n        chai.expect(region).to.have.property 'y'\n        chai.expect(region).to.have.property 'width'\n        chai.expect(region).to.have.property 'height'\n      it \"x\", ->\n        chai.expect(region.x).to.equal 70\n      it \"y\", ->\n        chai.expect(region.y).to.equal 70\n      it \"width\", ->\n        chai.expect(region.width).to.equal 30\n      it \"height\", ->\n        chai.expect(region.height).to.equal 89\n\ndescribe 'FindFeatureFreeAreas component', ->\n  c = null\n  ins = null\n  corners = null\n  areas = null\n  inWidth = null\n  inHeight = null\n  inSegments = null\n  beforeEach (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'image/FindFeatureFreeAreas', (err, instance) ->\n      return done err if err\n      c = instance\n      ins = noflo.internalSocket.createSocket()\n      inWidth = noflo.internalSocket.createSocket()\n      inHeight = noflo.internalSocket.createSocket()\n      inSegments = noflo.internalSocket.createSocket()\n      corners = noflo.internalSocket.createSocket()\n      areas = noflo.internalSocket.createSocket()\n      c.inPorts.corners.attach ins\n      c.inPorts.width.attach inWidth\n      c.inPorts.height.attach inHeight\n      c.inPorts.segments.attach inSegments\n      c.outPorts.corners.attach corners\n      c.outPorts.areas.attach areas\n      done()\n\n  describe 'when instantiated', ->\n    it 'should have an input port', ->\n      chai.expect(c.inPorts.corners).to.be.an 'object'\n      chai.expect(c.inPorts.width).to.be.an 'object'\n      chai.expect(c.inPorts.height).to.be.an 'object'\n    it 'should have output ports', ->\n      chai.expect(c.outPorts.corners).to.be.an 'object'\n      chai.expect(c.outPorts.areas).to.be.an 'object'\n\n  describe 'when passed image features', ->\n    input = [\n      {x:10, y:10}\n      {x:70, y:70}\n      {x:30, y:33}\n      {x:31, y:37}\n      {x:54, y:159}\n      {x:100, y:50}\n      {x:56, y:140}\n      {x:22, y:22}\n    ]\n    expected = [\n      { x: 80, y: 112.5, width: 20, height: 46.5 },\n      { x: 20, y: 112.5, width: 34, height: 37.5 },\n      { x: 80, y: 75, width: 20, height: 84 },\n      { x: 60, y: 112.5, width: 40, height: 46.5 },\n      { x: 80, y: 37.5, width: 20, height: 102.5 },\n      { x: 40, y: 112.5, width: 60, height: 37.5 },\n      { x: 20, y: 75, width: 34, height: 75 },\n      { x: 60, y: 75, width: 40, height: 84 },\n      { x: 40, y: 75, width: 60, height: 75 },\n      { x: 60, y: 37.5, width: 40, height: 121.5 },\n      { x: 20, y: 37.5, width: 50, height: 112.5 },\n      { x: 40, y: 37.5, width: 60, height: 121.5 }\n    ]\n    it 'should return a set of regions with no features', (done) ->\n      id = null\n      groups = []\n      areas.once \"begingroup\", (group) ->\n        groups.push group\n      areas.once \"data\", (regions) ->\n        # console.log(regions)\n        chai.expect(regions).to.have.length expected.length\n        chai.expect(regions[0]).to.have.property 'x'\n        chai.expect(regions[0]).to.have.property 'y'\n        chai.expect(regions[0]).to.have.property 'width'\n        chai.expect(regions[0]).to.have.property 'height'\n        chai.expect(regions).to.deep.equal expected\n        #chai.expect(groups).to.have.length 1\n        #chai.expect(groups[0]).to.equal id\n        done()\n      inSegments.send 3\n      inWidth.send 100\n      inHeight.send 150\n      ins.beginGroup id\n      ins.send input\n      ins.endGroup()\n\n"},"image/FindFreeRectangles":{language:"coffeescript",source:"noflo = require 'noflo'\n\nvalidGrid = []\n\n# Common font sizes (max font width * line height)\nfontAreas =\n  large: 1280 # 32 * 40\n  medium: 384 # 16 * 24\n  small: 228 # 12 * 19\n\narea = (x, y, xx, yy) ->\n  return (xx-x) * (yy-y)\n\nallOnes = (x, y, xx, yy) ->\n  for i in [x...xx]\n    for j in [y...yy]\n      if validGrid[i][j] == 0\n        return false\n  true\n\npointInPolygon = (point, polygon) ->\n  x = point[0]\n  y = point[1]\n  hit = false\n  i = 0\n  j = polygon.length - 1\n  while i < polygon.length\n    xi = polygon[i][0]\n    yi = polygon[i][1]\n    xj = polygon[j][0]\n    yj = polygon[j][1]\n    intersect = ((yi > y) != (yj > y)) and (x < (xj - xi) * (y - yi) / (yj - yi) + xi)\n    if intersect\n      hit = not hit\n    j = i++\n  hit\n\npolygonInPolygon = (polygon, otherPolygon) ->\n  x = polygon[0]\n  y = polygon[1]\n  stepX = polygon[2]\n  stepY = polygon[3]\n  points = [\n    [\n      x\n      y\n    ]\n    [\n      x + stepX\n      y\n    ]\n    [\n      x\n      y + stepY\n    ]\n    [\n      x + stepX\n      y + stepY\n    ]\n  ]\n  for i in [0...points.length]\n    if pointInPolygon(points[i], otherPolygon) is true\n      return true\n  false\n\ncompute = (canvas, polygon, threshold, max) ->\n  {width, height} = canvas\n\n  # How many rows/cols on the grid\n  n = 30\n  stepI = Math.ceil width/n\n  stepJ = Math.ceil height/n\n  rectangles = []\n\n  # Initialize the binary matrix with zeros\n  for i in [0...n]\n    validGrid[i] = []\n    for j in [0...n]\n      validGrid[i][j] = 0\n\n  # Create a binary matrix of valid (non-salient) cells\n  for i in [0...n]\n    for j in [0...n]\n      if polygonInPolygon([i*stepI, j*stepJ, stepI, stepJ], polygon) == false\n        validGrid[i][j] = 1\n  # Collect valid cells moving a pivot around the matrix. Select the\n  # non-salient regions with areas smaller than some threshold.\n  validRects = []\n  pi = 0\n  while pi < n\n    pj = 0\n    while pj < n\n      pivot = [pi, pj]\n      i = pivot[0]\n      while i < n\n        j = pivot[1]\n        while j < n\n          realArea = area(pivot[0] * stepI, pivot[1] * stepJ, i * stepI, j * stepJ)\n          if (allOnes(pivot[0], pivot[1], i, j) == true) and (realArea > threshold)\n            validRects.push\n              x: pivot[0]\n              y: pivot[1]\n              width: i - pivot[0]\n              height: j - pivot[1]\n              area: realArea\n          j += 1\n        i += 1\n      pj += 1\n    pi += 1\n\n  if validRects.length is 0\n    return []\n\n  # Sort by area\n  validRects.sort (a, b) ->\n    keyA = a.area\n    keyB = b.area\n    if keyA > keyB\n      return -1\n    if keyA < keyB\n      return 1\n    0\n\n  # We have the rectangles\n  result = []\n  i = 0\n  while (i < max) and (i < validRects.length)\n    validRect = validRects[i]\n    validArea = validRect.area\n    r =\n      x: validRect.x * stepI\n      y: validRect.y * stepJ\n      width: validRect.width * stepI\n      height: validRect.height * stepJ\n      text:\n        large: Math.round validArea / fontAreas.large\n        medium: Math.round validArea / fontAreas.medium\n        small: Math.round validArea / fontAreas.small\n    result.push r\n    i += 1\n\n  return result\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.icon = 'file-image-o'\n  c.description = 'Find bounding rectangles of regions outside of the given polygon.'\n\n  c.outPorts.add 'out',\n    datatype: 'array'\n\n  c.inPorts.add 'canvas',\n    datatype: 'object'\n  c.inPorts.add 'polygon',\n    datatype: 'array'\n  c.inPorts.add 'threshold',\n    datatype: 'number'\n    required: yes\n  c.inPorts.add 'max',\n    datatype: 'number'\n    required: yes\n\n  noflo.helpers.WirePattern c,\n    in: ['canvas', 'polygon']\n    params: ['threshold', 'max']\n    out: 'out'\n    forwardGroups: true\n    async: true\n  , (payload, groups, out, callback) ->\n    {canvas, polygon} = payload\n    {threshold, max} = c.params\n\n    validRects = compute canvas, polygon, threshold, max\n\n    out.send validRects\n    do callback\n    return\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai' unless chai\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\n  testutils = require './testutils'\nelse\n  baseDir = '/noflo-image'\n  testutils = require 'noflo-image/spec/testutils.js'\n\ndescribe 'FindFreeRectangles component', ->\n  c = null\n  inCanvas = null\n  inPolygon = null\n  inThreshold = null\n  inMax = null\n  out = null\n\n  beforeEach (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'image/FindFreeRectangles', (err, instance) ->\n      return done err if err\n      c = instance\n      inCanvas = noflo.internalSocket.createSocket()\n      inPolygon = noflo.internalSocket.createSocket()\n      inThreshold = noflo.internalSocket.createSocket()\n      inMax = noflo.internalSocket.createSocket()\n      out = noflo.internalSocket.createSocket()\n      c.inPorts.canvas.attach inCanvas\n      c.inPorts.polygon.attach inPolygon\n      c.inPorts.threshold.attach inThreshold\n      c.inPorts.max.attach inMax\n      c.outPorts.out.attach out\n      done()\n \n  describe 'when instantiated', ->\n    it 'should have four input ports', ->\n      chai.expect(c.inPorts.canvas).to.be.an 'object'\n      chai.expect(c.inPorts.polygon).to.be.an 'object'\n      chai.expect(c.inPorts.threshold).to.be.an 'object'\n      chai.expect(c.inPorts.max).to.be.an 'object'\n\n    it 'should have one output port', ->\n      chai.expect(c.outPorts.out).to.be.an 'object'\n \n  describe 'with file system image', ->\n    it 'should find the expected free rectangles', (done) ->\n      @timeout 10000\n      id = 1\n      expected =\n        x: 0\n        y: 0\n        width: 1015\n        height: 345\n        text:\n          large: 274\n          medium: 912\n          small: 1536\n      groups = []\n      out.once 'begingroup', (group) ->\n        groups.push group\n      out.once 'endgroup', (group) ->\n        groups.pop()\n      out.once 'data', (res) ->\n        chai.expect(groups).to.eql [1]\n        chai.expect(res.length).to.be.equal 10\n        chai.expect(res[0]).to.eql expected\n        done()\n\n      inSrc = 'textRegion/3010029968_02742a1aec_b.jpg'\n      testutils.getCanvasWithImageNoShift inSrc, (canvas) ->\n        inCanvas.beginGroup id\n        inCanvas.send canvas\n        inPolygon.send [[1022, 679], [1022, 399], [897, 382], [889, 369], [814, 358], [811, 374], [748, 379], [712, 392], [672, 392], [667, 386], [666, 413], [635, 427], [593, 427], [583, 404], [548, 401], [501, 359], [414, 444], [387, 444], [387, 486], [402, 500], [419, 502], [482, 567], [508, 568], [508, 620], [499, 621], [496, 635], [500, 644], [519, 646], [522, 679]]\n        inThreshold.send 10000\n        inMax.send 10\n        inCanvas.endGroup()\n\n    it 'should not find any free rectangles', (done) ->\n      @timeout 10000\n      id = 1\n      groups = []\n      out.once 'begingroup', (group) ->\n        groups.push group\n      out.once 'endgroup', (group) ->\n        groups.pop()\n      out.once 'data', (res) ->\n        chai.expect(groups).to.eql [1]\n        chai.expect(res.length).to.be.equal 0\n        done()\n\n      inSrc = 'crash.png'\n      testutils.getCanvasWithImageNoShift inSrc, (canvas) ->\n        inCanvas.beginGroup id\n        inCanvas.send canvas\n        inPolygon.send [[79, 1], [79, 20], [49, 62], [21, 129], [1, 130], [1, 227], [20, 227], [42, 244], [42, 284], [27, 318], [21, 356], [1, 357], [1, 376], [21, 377], [31, 440], [43, 478], [43, 498], [698, 498], [698, 1], [343, 1], [343, 9], [350, 10], [350, 89], [343, 90], [343, 242], [350, 243], [349, 323], [296, 322], [296, 96], [260, 95], [247, 56], [225, 20], [225, 1]]\n        inThreshold.send 10000\n        inMax.send 10\n        inCanvas.endGroup()\n\n    it 'should find at least `max` rectangles', (done) ->\n      @timeout 10000\n      id = 1\n      expected =\n        x: 0\n        y: 0\n        width: 1015\n        height: 345\n        text:\n          large: 274\n          medium: 912\n          small: 1536\n      groups = []\n      out.once 'begingroup', (group) ->\n        groups.push group\n      out.once 'endgroup', (group) ->\n        groups.pop()\n      out.once 'data', (res) ->\n        chai.expect(groups).to.eql [1]\n        chai.expect(res[0]).to.eql expected\n        done()\n\n      inSrc = 'textRegion/3010029968_02742a1aec_b.jpg'\n      testutils.getCanvasWithImageNoShift inSrc, (canvas) ->\n        inCanvas.beginGroup id\n        inCanvas.send canvas\n        inPolygon.send [[1022, 679], [1022, 399], [897, 382], [889, 369], [814, 358], [811, 374], [748, 379], [712, 392], [672, 392], [667, 386], [666, 413], [635, 427], [593, 427], [583, 404], [548, 401], [501, 359], [414, 444], [387, 444], [387, 486], [402, 500], [419, 502], [482, 567], [508, 568], [508, 620], [499, 621], [496, 635], [500, 644], [519, 646], [522, 679]]\n        inThreshold.send 10000\n        inMax.send 62000\n        inCanvas.endGroup()\n"},"image/GetBorderlessBox":{language:"coffeescript",source:"noflo = require 'noflo'\n\ndiffBetweenNeighbourPixels = (array) ->\n  count = 0\n  max = 0\n  prev = array[0]\n\n  for element in array\n    diff = Math.abs element - prev\n    count += diff\n    prev = element\n    if diff > max\n      max = diff\n\n  mean: count / array.length\n  max: max\n\naverage = (array) ->\n  return 0 if array.length is 0\n  sum = array.reduce (s,i) -> s += i\n  sum / array.length\n\nisHomogeneous = (array, threshold) ->\n  diff = diffBetweenNeighbourPixels array\n  if diff.mean <= threshold.mean and\n  diff.max <= threshold.max\n    true\n  else\n    false\n\nisBorder = (array, prev, threshold) ->\n  avg = Math.abs average(array) - average(prev)\n  if avg > threshold.avg\n    true\n  else\n    false\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Extract a bounding box with top and bottom borders removed (according to a certain threshold)'\n  c.icon = 'file-image-o'\n  c.inPorts = new noflo.InPorts\n    canvas:\n      datatype: 'object'\n    mean:\n      datatype: 'number'\n      description: 'Mean difference between neighbours at same row'\n    max:\n      datatype: 'number'\n      description: 'Maximal difference between neighbours at same row'\n    avg:\n      datatype: 'number'\n      description: 'Average difference between columns\\' neighbours'\n  c.outPorts = new noflo.OutPorts\n    rectangle:\n      datatype: 'object'\n    error:\n      datatype: 'object'\n\n  noflo.helpers.WirePattern c,\n    in: 'canvas'\n    params: ['mean', 'max', 'avg']\n    out: 'rectangle'\n    forwardGroups: yes\n    async: yes\n  , (canvas, groups, out, callback) ->\n    unless canvas?.width > 0 and canvas?.height > 0\n      return callback new Error \"Error when trying to extract a bounding box. The canvas is missing.\"\n\n    ctx = canvas.getContext '2d'\n    imageData = ctx.getImageData 0, 0, canvas.width, canvas.height\n    data = imageData.data\n    c.params.mean = 0.1 unless c.params.mean\n    c.params.max = 10 unless c.params.max\n    c.params.avg = 10 unless c.params.avg\n    threshold = c.params\n    diffPercentual = 0.25\n    maxPercentualCrop = 0.75\n    percentualConsideredBorder = 0.05\n\n    # Convert to grayscale\n    gray = []\n    for i in [0...data.length] by 4\n      [r, g, b] = [data[i], data[i+1], data[i+2]]\n      conversion = 0.2126*r + 0.7152*g + 0.0722*b\n      gray.push conversion\n\n    bbox =\n      x: 0\n      y: 0\n      width: canvas.width\n      height: canvas.height\n\n    # Iterate through the upper lines\n    prev = gray.slice 0, canvas.width\n    for line in [canvas.width...gray.length] by canvas.width\n      next = gray.slice line, line + canvas.width\n      if isHomogeneous prev, threshold\n        bbox.y += 1\n        if isBorder prev, next, threshold\n          break\n        prev = next\n      else\n        break\n\n    # Iterate through the bottom lines\n    prev = gray.slice gray.length - canvas.width, gray.length\n    for line in [gray.length-canvas.width...0] by -canvas.width\n      next = gray.slice line - canvas.width, line\n      if isHomogeneous prev, threshold\n        bbox.height -= 1\n        if isBorder prev, next, threshold\n          break\n        prev = next\n      else\n        break\n\n    # Iterate through the left columns\n    prev = []\n    for col in [0...gray.length] by canvas.width\n      prev.push gray[col]\n    for column in [1...canvas.width]\n      next = []\n      for pos in [column...gray.length] by canvas.width\n        next.push gray[pos]\n      if isHomogeneous prev, threshold\n        bbox.x += 1\n        if isBorder prev, next, threshold\n          break\n        prev = next\n      else\n        break\n\n    # Iterate through the right columns\n    prev = []\n    for col in [gray.length - 1..0] by -canvas.width\n      prev.push gray[col]\n    for column in [1...canvas.width]\n      next = []\n      for pos in [gray.length - 1 - column..0] by -canvas.width\n        next.push gray[pos]\n      if isHomogeneous prev, threshold\n        bbox.width -= 1\n        if isBorder prev, next, threshold\n          break\n        prev = next\n      else\n        break\n\n    croppedBbox =\n      x: 0\n      y: 0\n      width: canvas.width\n      height: canvas.height\n\n    # Crop if there is not too much difference between top and bottom borders\n    if (Math.abs bbox.y - (canvas.height - bbox.height)) <\n        (Math.max bbox.y, (canvas.height - bbox.height)) * diffPercentual\n      croppedBbox.y = bbox.y\n      croppedBbox.height = bbox.height - croppedBbox.y\n\n    # Crop if there is not too much difference between left and right borders\n    if (Math.abs bbox.x - (canvas.width - bbox.width)) <\n        (Math.max bbox.x, (canvas.width - bbox.width)) * diffPercentual\n      croppedBbox.x = bbox.x\n      croppedBbox.width = bbox.width - croppedBbox.x\n\n    # Calculate maximum variation in each direction\n    verticalVariation = Math.max bbox.y, canvas.height - croppedBbox.height\n    horizontalVariation = Math.max bbox.x, canvas.width - croppedBbox.width\n\n    newLength = (croppedBbox.height - croppedBbox.y) *\n      (croppedBbox.width - croppedBbox.x)\n\n    # Do not crop if:\n    # - The new image size is low than a certain maxPercentualCrop\n    if (newLength < ((1.0 - maxPercentualCrop) * gray.length)) or\n        # - There are horizontal AND vertical borders\n        ((verticalVariation > percentualConsideredBorder * canvas.height) and\n        (horizontalVariation > percentualConsideredBorder * canvas.width)) or\n        # - All the image was cropped\n        croppedBbox.width < 0 or croppedBbox.height < 0\n      croppedBbox =\n        x: 0\n        y: 0\n        width: canvas.width\n        height: canvas.height\n\n    out.send croppedBbox\n    do callback\n  c\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai' unless chai\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\n  testutils = require './testutils'\nelse\n  baseDir = '/noflo-image'\n  testutils = require 'noflo-image/spec/testutils.js'\n\ncheckSimilar = (chai, bbox, expected, delta) ->\n  chai.expect(bbox.x).to.be.closeTo expected.x, delta\n  chai.expect(bbox.y).to.be.closeTo expected.y, delta\n  chai.expect(bbox.width).to.be.closeTo expected.width, delta\n  chai.expect(bbox.height).to.be.closeTo expected.height, delta\n\nfixtures = [\n  id: 'not crop a blank image'\n  src: 'borders/border-blank.png'\n  expected:\n    x: 0\n    y: 0\n    width: 10\n    height: 20\n,\n  id: 'not crop on right side only'\n  src: 'borders/border-right.png'\n  expected:\n      x: 0\n      y: 0\n      width: 200\n      height: 150\n,\n  id: 'not crop on right side only, with artefacts'\n  src: 'borders/border-neumann.png'\n  expected:\n    x: 0\n    y: 0\n    width: 733\n    height: 731\n,\n  id: 'not crop on left side only'\n  src: 'borders/border-left.png'\n  expected:\n    x: 0\n    y: 0\n    width: 200\n    height: 150\n,\n  id: 'not crop on top side only'\n  src: 'borders/border-top.png'\n  expected:\n    x: 0\n    y: 0\n    width: 200\n    height: 150\n,\n  id: 'not crop on bottom side only'\n  src: 'borders/border-bottom.png'\n  expected:\n    x: 0\n    y: 0\n    width: 200\n    height: 150\n,\n  id: 'crop around a polygon'\n  expected:\n    x: 0\n    y: 0\n    width: 200\n    height: 150\n  src: 'borders/border-polygon.png'\n,\n  id: 'not crop around circles'\n  expected:\n    x: 0\n    y: 0\n    width: 200\n    height: 150\n  src: 'borders/border-circles.png'\n,\n  id: 'crop around stripes'\n  expected:\n    x: 0\n    y: 12\n    width: 200\n    height: 126\n  src: 'borders/border-stripes.png'\n,\n  id: 'crop around pyramid'\n  expected:\n    x: 0\n    y: 0\n    width: 200\n    height: 150\n  src: 'borders/border-pyramid.png'\n,\n  id: 'crop around pyramid (blur)'\n  expected:\n    x: 0\n    y: 0\n    width: 200\n    height: 150\n  src: 'borders/border-pyramid-blur.jpg'\n,\n  id: 'crop left and right borders around non-continuous lines'\n  src: 'borders/border-non-continuous-lines.jpg'\n  expected:\n    x: 32\n    y: 0\n    width: 529\n    height: 338\n,\n  id: 'not crop background color'\n  src: 'borders/border-header.png'\n  expected:\n    x: 0\n    y: 0\n    width: 1952\n    height: 512\n,\n  id: 'crop on left and right sides (YouTube preview)'\n  src: 'borders/border-left-right.jpg'\n  expected:\n    x: 56\n    y: 0\n    width: 368\n    height: 360\n,\n  id: 'not remove negative spaces'\n  src: 'borders/border-negative.jpg'\n  expected:\n    x: 0\n    y: 0\n    width: 1024\n    height: 683\n,\n  id: 'not remove negative spaces #2'\n  src: 'borders/border-negative2.jpg'\n  expected:\n    x: 0\n    y: 0\n    width: 1024\n    height: 683\n,\n  id: 'remove top and bottom borders from Youtube previews'\n  src: 'borders/border-top-bottom-youtube.jpg'\n  expected:\n    x: 0\n    y: 80\n    width: 480\n    height: 208\n,\n  id: 'remove top and bottom borders'\n  src: 'borders/border-top-bottom.jpg'\n  expected:\n    x: 0\n    y: 48\n    width: 480\n    height: 264\n,\n  id: 'remove top and bottom white borders'\n  src: 'borders/borders-top-bottom-white.jpg'\n  expected:\n    x: 0\n    y: 103\n    width: 640\n    height: 433\n,\n  id: 'remove left and right black borders'\n  src: 'borders/border-left-right-black.jpg'\n  expected:\n    x: 64\n    y: 0\n    width: 1152\n    height: 720\n,\n  id: 'not remove borders from a image with solid background'\n  src: 'borders/border-solid.jpg'\n  expected:\n    x: 0\n    y: 0\n    width: 80\n    height: 80\n,\n  id: 'not remove borders from a flag'\n  src: 'borders/border-flag.jpg'\n  expected:\n    x: 0\n    y: 0\n    width: 1400\n    height: 1075\n,\n  id: 'not remove borders from an image with different sizes of borders'\n  src: 'borders/border-different.jpg'\n  expected:\n    x: 0\n    y: 0\n    width: 480\n    height: 360\n,\n  id: 'not remove borders from an image that has all the borders',\n  src: 'borders/border-all.jpeg'\n  expected:\n    x: 0\n    y: 0\n    width: 648\n    height: 371\n,\n  id: 'not crop images of logos'\n  src: 'borders/border-logo.png'\n  expected:\n    x: 0\n    y: 0\n    width: 300\n    height: 300\n,\n  id: 'not crop images of logos #2'\n  expected:\n    x: 0\n    y: 0\n    width: 100\n    height: 100,\n  src: 'borders/border-logo2.png'\n]\n\ndescribe 'GetBorderlessBox component', ->\n  c = null\n  canvas = null\n  mean = null\n  max = null\n  avg = null\n  out = null\n  error = null\n  beforeEach (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'image/GetBorderlessBox', (err, instance) ->\n      return done err if err\n      c = instance\n      canvas = noflo.internalSocket.createSocket()\n      mean = noflo.internalSocket.createSocket()\n      max = noflo.internalSocket.createSocket()\n      avg = noflo.internalSocket.createSocket()\n      out = noflo.internalSocket.createSocket()\n      error = noflo.internalSocket.createSocket()\n      c.inPorts.canvas.attach canvas\n      c.inPorts.mean.attach mean\n      c.inPorts.max.attach max\n      c.inPorts.avg.attach avg\n      c.outPorts.rectangle.attach out\n      c.outPorts.error.attach error\n      done()\n\n  describe 'when instantiated', ->\n    it 'should have input ports', ->\n      chai.expect(c.inPorts.canvas).to.be.an 'object'\n      chai.expect(c.inPorts.mean).to.be.an 'object'\n      chai.expect(c.inPorts.max).to.be.an 'object'\n      chai.expect(c.inPorts.avg).to.be.an 'object'\n    it 'should have output ports', ->\n      chai.expect(c.outPorts.rectangle).to.be.an 'object'\n      chai.expect(c.outPorts.error).to.be.an 'object'\n\n  describe 'when passed a canvas', ->\n\n    fixtures.forEach (fixture) ->\n      {id, src, expected} = fixture\n      it \"should #{id}\", (done) ->\n        @timeout 10000\n        groups = []\n        out.once 'begingroup', (group) ->\n          groups.push group\n        out.once 'endgroup', (group) ->\n          groups.pop()\n        out.once 'data', (res) ->\n          chai.expect(groups).to.be.eql [id]\n          # testutils.getCanvasWithImageNoShift src, (c) ->\n          #   testutils.cropAndSave \"#{src}_borderless.png\", c, res\n          checkSimilar chai, res, expected, 3\n          done()\n\n        testutils.getCanvasWithImageNoShift src, (c) ->\n          canvas.beginGroup id\n          canvas.send c\n          canvas.endGroup()\n\n  describe 'when passed a null canvas', ->\n    it 'should return an error', (done) ->\n      groupId = 'null-canvas'\n      groups = []\n      out.once 'begingroup', (group) ->\n        groups.push group\n      out.once 'endgroup', (group) ->\n        groups.pop()\n      error.on \"data\", (err) ->\n        chai.expect(err).to.be.instanceof Error\n        done()\n      canvas.beginGroup groupId\n      canvas.send null\n      canvas.endGroup()\n"},"image/GetCannyEdges":{language:"coffeescript",source:"noflo = require 'noflo'\njsfeat = require 'jsfeat'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Canny edge detector.'\n  c.icon = 'file-image-o'\n  c.inPorts.add 'canvas',\n    datatype: 'object'\n  c.inPorts.add 'low',\n    datatype: 'number'\n    control: true\n    default: 20\n  c.inPorts.add 'high',\n    datatype: 'number'\n    control: true\n    default: 50\n  c.inPorts.add 'kernel',\n    datatype: 'number'\n    control: true\n    default: 6\n  c.outPorts.add 'canvas',\n    datatype: 'object'\n  c.forwardBrackets =\n    canvas: ['canvas']\n  c.process (input, output) ->\n    return unless input.hasData 'canvas'\n    return if input.attached('low').length and not input.hasData 'low'\n    return if input.attached('high').length and not input.hasData 'high'\n    return if input.attached('kernel').length and not input.hasData 'kernel'\n    low = if input.hasData('low') then input.getData('low') else 20\n    high = if input.hasData('high') then input.getData('high') else 50\n    kernel = if input.hasData('kernel') then input.getData('kernel') else 6\n    canvas = input.getData 'canvas'\n    \n    context = canvas.getContext '2d'\n    img = context.getImageData 0, 0, canvas.width, canvas.height\n\n    img_u8 = new jsfeat.matrix_t canvas.width, canvas.height, jsfeat.U8_t|jsfeat.C1_t\n    jsfeat.imgproc.grayscale img.data, img_u8.data\n    jsfeat.imgproc.gaussian_blur img_u8, img_u8, @kernel, 0\n    jsfeat.imgproc.canny img_u8, img_u8, @low, @high\n\n    img_u32 = new Uint32Array img.data.buffer\n\n    alpha = (0xff << 24)\n    i = img_u8.cols*img_u8.rows\n    pix = 0\n    while --i >= 0\n      pix = img_u8.data[i]\n      img_u32[i] = alpha | (pix << 16) | (pix << 8) | pix\n\n    context.putImageData img, 0, 0\n\n    output.sendDone\n      canvas: canvas\n    return\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai' unless chai\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = '/noflo-image'\n\ndescribe 'GetCannyEdges component', ->\n  c = null\n  inCanvas = null\n  low = null\n  high = null\n  kernel = null\n  outCanvas = null\n  beforeEach (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'image/GetCannyEdges', (err, instance) ->\n      return done err if err\n      c = instance\n      inCanvas = noflo.internalSocket.createSocket()\n      low = noflo.internalSocket.createSocket()\n      high = noflo.internalSocket.createSocket()\n      kernel = noflo.internalSocket.createSocket()\n      outCanvas = noflo.internalSocket.createSocket()\n      c.inPorts.canvas.attach inCanvas\n      c.inPorts.low.attach low\n      c.inPorts.high.attach high\n      c.inPorts.kernel.attach kernel\n      c.outPorts.canvas.attach outCanvas\n      done()\n\n  describe 'when instantiated', ->\n    it 'should have four input ports', ->\n      chai.expect(c.inPorts.canvas).to.be.an 'object'\n      chai.expect(c.inPorts.low).to.be.an 'object'\n      chai.expect(c.inPorts.high).to.be.an 'object'\n      chai.expect(c.inPorts.kernel).to.be.an 'object'\n    it 'should have one output port', ->\n      chai.expect(c.outPorts.canvas).to.be.an 'object'\n"},"image/GetColors":{language:"coffeescript",source:"noflo = require 'noflo'\nRgbQuant = require 'rgbquant'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Extract the dominant colors of an image'\n  c.icon = 'file-image-o'\n  c.inPorts = new noflo.InPorts\n    canvas:\n      datatype: 'object'\n    css:\n      datatype: 'boolean'\n      default: false\n    colors:\n      datatype: 'number'\n      default: 10\n    method:\n      datatype: 'int'\n      default: 1\n      values: [1, 2]\n  c.outPorts = new noflo.OutPorts\n    colors:\n      datatype: 'array'\n    canvas:\n      datatype: 'array'\n    error:\n      datatype: 'object'\n\n  noflo.helpers.WirePattern c,\n    in: 'canvas'\n    out: ['colors', 'canvas']\n    params: ['css', 'colors', 'method']\n    forwardGroups: yes\n    async: yes\n  , (data, groups, out, callback) ->\n    unless data?.height? > 0 and data?.width? > 0\n      return callback new Error \"Error when trying to get colors: canvas is undefined.\"\n\n    c.params.colors = 10 unless c.params.colors?\n    c.params.method = 1 unless c.params.method?\n    try\n      quant = new RgbQuant\n        colors: c.params.colors\n        method: c.params.method\n        initColors: 4096\n      # analyze histograms\n      quant.sample(data)\n      # build palette\n      outputTuples = true\n      noSort = true\n      colors = quant.palette outputTuples, noSort\n      if c.params.css\n        colors = colors.map (color) -> \"rgb(#{color[0]}, #{color[1]}, #{color[2]})\"\n    catch e\n      out.canvas.send data\n      out.colors.send []\n      console.warn \"Error when trying to get colors: #{e} Sending an empty array.\"\n      do callback\n      return\n    out.canvas.send data\n    out.colors.send colors\n    do callback\n    return\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai' unless chai\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\n  testutils = require './testutils'\nelse\n  baseDir = '/noflo-image'\n  testutils = require 'noflo-image/spec/testutils.js'\n\ndescribe 'GetColors component', ->\n  c = null\n  ins = null\n  colors = null\n  canvas = null\n  error = null\n  beforeEach (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'image/GetColors', (err, instance) ->\n      return done err if err\n      c = instance\n      ins = noflo.internalSocket.createSocket()\n      colors = noflo.internalSocket.createSocket()\n      canvas = noflo.internalSocket.createSocket()\n      error = noflo.internalSocket.createSocket()\n      c.inPorts.canvas.attach ins\n      c.outPorts.colors.attach colors\n      c.outPorts.canvas.attach canvas\n      c.outPorts.error.attach error\n      done()\n\n  describe 'when instantiated', ->\n    it 'should have a input ports', ->\n      chai.expect(c.inPorts.canvas).to.be.an 'object'\n      chai.expect(c.inPorts.css).to.be.an 'object'\n      chai.expect(c.inPorts.colors).to.be.an 'object'\n    it 'should have output ports', ->\n      chai.expect(c.outPorts.colors).to.be.an 'object'\n      chai.expect(c.outPorts.canvas).to.be.an 'object'\n      chai.expect(c.outPorts.error).to.be.an 'object'\n\n  describe 'when passed a canvas', ->\n    input = 'colorful-octagon.png'\n    expected = [\n      [0, 0, 0]\n      [255, 0, 0]\n      [255, 255, 0]\n      [0, 0, 255]\n      [0, 255, 255]\n      [0, 255, 0]\n      [255, 0, 255]\n      [255, 255, 255]\n      [0, 95, 95]\n      [156, 156, 0]\n    ]\n    it 'should extract the prominent colors', (done) ->\n      id = null\n      groups = []\n      colors.once \"begingroup\", (group) ->\n        groups.push group\n      colors.once \"data\", (colors) ->\n        chai.expect(colors).to.have.length expected.length\n        chai.expect(colors[0]).to.have.length 3\n        chai.expect(colors).to.deep.equal expected\n        chai.expect(groups).to.have.length 1\n        chai.expect(groups[0]).to.equal id\n        done()\n      id = testutils.getCanvasWithImageNoShift input, (canvas) ->\n        ins.beginGroup id\n        ins.send canvas\n        ins.endGroup()\n\n    it 'should send canvas out', (done) ->\n      id = null\n      groups = []\n      canvas.once \"begingroup\", (group) ->\n        groups.push group\n      canvas.once \"data\", (canvas) ->\n        chai.expect(groups).to.have.length 1\n        chai.expect(groups[0]).to.equal id\n        done()\n      id = testutils.getCanvasWithImage input, (canvas) ->\n        ins.beginGroup id\n        ins.send canvas\n        ins.endGroup()\n\n  describe 'when css color option is true', ->\n    ins_css = null\n    beforeEach ->\n      ins_css = noflo.internalSocket.createSocket()\n      c.inPorts.css.attach ins_css\n      ins_css.send true\n\n    input = 'colorful-octagon.png'\n\n    expected = [\n      \"rgb(0, 0, 0)\"\n      \"rgb(255, 0, 0)\"\n      \"rgb(255, 255, 0)\"\n      \"rgb(0, 0, 255)\"\n      \"rgb(0, 255, 255)\"\n      \"rgb(0, 255, 0)\"\n      \"rgb(255, 0, 255)\"\n      \"rgb(255, 255, 255)\"\n      \"rgb(0, 95, 95)\"\n      \"rgb(156, 156, 0)\"\n    ]\n    it 'should extract the colors and output css strings', (done) ->\n      colors.once \"data\", (colors) ->\n        chai.expect(colors).to.have.length expected.length\n        chai.expect(colors).to.deep.equal expected\n        done()\n      id = testutils.getCanvasWithImageNoShift input, (canvas) ->\n        ins.beginGroup id\n        ins.send canvas\n        ins.endGroup()\n  describe 'when given a small image', ->\n    it 'should return an empty array', (done) ->\n      input = '1x1.gif'\n      id = null\n      colors.once \"data\", (colors) ->\n        chai.expect(colors).to.have.length 0\n        done()\n      id = testutils.getCanvasWithImage input, (canvas) ->\n        ins.send canvas\n  describe 'when given not an image', ->\n    it 'should return an error', (done) ->\n      error.on \"data\", (err) ->\n        chai.expect(err).to.be.instanceof Error\n        done()\n      ins.send ''\n  describe 'when given null', ->\n    it 'should return an error', (done) ->\n      error.on \"data\", (err) ->\n        chai.expect(err).to.be.instanceof Error\n        done()\n      ins.send null\n"},"image/GetColorsFromCentroids":{language:"coffeescript",source:"noflo = require 'noflo'\n\ngetColorFromPath = (imageData, width, path) ->\n  # Find the centroid\n  sumx = 0\n  sumy = 0\n  paths = path.items\n  n = paths.length\n  for point in paths\n    sumx += point.x\n    sumy += point.y\n  centroid =\n    x: Math.floor sumx / n\n    y: Math.floor sumy / n\n\n  # Get color from canvas data\n  offset = (centroid.x + centroid.y * width) * 4\n  r = imageData.data[offset]\n  g = imageData.data[offset+1]\n  b = imageData.data[offset+2]\n\n  \"rgb(#{r}, #{g}, #{b})\"\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.icon = 'file-image-o'\n  c.description = 'Extract color of path\\'s centroid.'\n\n  c.outPorts.add 'colors',\n    datatype: 'array'\n\n  c.inPorts.add 'canvas',\n    datatype: 'object'\n  c.inPorts.add 'paths',\n    datatype: 'array'\n\n  noflo.helpers.WirePattern c,\n    in: ['canvas', 'paths']\n    out: ['colors']\n    forwardGroups: true\n    async: true\n  , (payload, groups, out, callback) ->\n    {canvas, paths} = payload\n\n    ctx = canvas.getContext '2d'\n    imageData = ctx.getImageData 0, 0, canvas.width, canvas.height\n\n    colors = []\n    for path in paths\n      colors.push getColorFromPath(imageData, canvas.width, path)\n\n    out.send colors\n    do callback\n    return\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai' unless chai\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\n  testutils = require './testutils'\nelse\n  baseDir = '/noflo-image'\n  testutils = require 'noflo-image/spec/testutils.js'\n\ndescribe 'GetColorsFromCentroids component', ->\n  c = null\n  ins = null\n  paths = null\n  out = null\n\n  beforeEach (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'image/GetColorsFromCentroids', (err, instance) ->\n      return done err if err\n      c = instance\n      ins = noflo.internalSocket.createSocket()\n      paths = noflo.internalSocket.createSocket()\n      out = noflo.internalSocket.createSocket()\n      c.inPorts.canvas.attach ins\n      c.inPorts.paths.attach paths\n      c.outPorts.colors.attach out\n      done()\n\n  describe 'when instantiated', ->\n    it 'should have input ports', ->\n      chai.expect(c.inPorts.canvas).to.be.an 'object'\n      chai.expect(c.inPorts.paths).to.be.an 'object'\n    it 'should have output ports', ->\n      chai.expect(c.outPorts.colors).to.be.an 'object'\n\n  describe 'when passed a canvas and some paths', ->\n    somePaths = [ \n      type: 'path'\n      items: [\n        { type: 'point', x: 100, y: 100}\n        { type: 'point', x: 200, y: 50}\n        { type: 'point', x: 200, y: 100}\n      ]\n    ]\n\n    it 'should extract colors from the paths\\' centroids', (done) ->\n      @timeout 20000\n      id = 1\n      groups = []\n      out.once 'begingroup', (group) ->\n        groups.push group\n      out.once 'endgroup', (group) ->\n        groups.pop()\n      out.once 'data', (res) ->\n        chai.expect(groups).to.eql [1]\n        chai.expect(res.length).to.be.equal somePaths.length\n        chai.expect(res[0]).to.equal 'rgb(0, 255, 255)'\n        done()\n\n      inSrc = 'colorful-octagon.png'\n      testutils.getCanvasWithImageNoShift inSrc, (c) ->\n        ins.beginGroup id\n        paths.send somePaths\n        ins.send c\n        ins.endGroup()\n"},"image/GetColorsFromRectangles":{language:"coffeescript",source:"noflo = require 'noflo'\nRgbQuant = require 'rgbquant'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.icon = 'file-image-o'\n  c.description = 'Extract colors from rectangle regions of a canvas.'\n\n  c.outPorts.add 'out',\n    datatype: 'array'\n  c.outPorts.add 'error',\n    datatype: 'object'\n\n  c.inPorts.add 'canvas',\n    datatype: 'object'\n  c.inPorts.add 'rect',\n    datatype: 'array'\n  c.inPorts.add 'css',\n    datatype: 'boolean'\n    required: yes\n  c.inPorts.add 'colors',\n    datatype: 'number'\n    required: yes\n\n  noflo.helpers.WirePattern c,\n    in: ['canvas', 'rect']\n    params: ['css', 'colors']\n    out: 'out'\n    forwardGroups: true\n    async: true\n  , (payload, groups, out, callback) ->\n    {canvas, rect} = payload\n    {css, colors} = c.params\n\n    # Stiching pieces to 200x200 for now\n    if noflo.isBrowser()\n      piece = document.createElement 'canvas'\n      piece.width = 200\n      piece.height = 200\n    else\n      Canvas = require('noflo-canvas').canvas\n      piece = new Canvas 200, 200\n    ctx = piece.getContext '2d'\n\n    pieces = []\n    for r in rect\n      ctx.drawImage canvas, r.x, r.y, r.width, r.height, 0, 0, 200, 200\n      pieces.push piece\n\n    try\n      outputTuples = true\n      noSort = true\n      piecesColors = []\n      for piece in pieces\n        quant = new RgbQuant\n          colors: colors\n          method: 1\n          initColors: 4096\n        quant.sample(piece)\n        extractedColors = quant.palette outputTuples, noSort\n        if css\n          extractedColors = extractedColors.map (color) -> \"rgb(#{color[0]}, #{color[1]}, #{color[2]})\"\n\n        piecesColors.push extractedColors\n    catch e\n      callback e\n      return\n\n    out.send piecesColors\n    do callback\n    return\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai' unless chai\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\n  testutils = require './testutils'\nelse\n  baseDir = '/noflo-image'\n  testutils = require 'noflo-image/spec/testutils.js'\n\ndescribe 'GetColorsFromRectangles component', ->\n  c = null\n  ins = null\n  css = null\n  colors = null\n  rect = null\n  out = null\n\n  beforeEach (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'image/GetColorsFromRectangles', (err, instance) ->\n      return done err if err\n      c = instance\n      ins = noflo.internalSocket.createSocket()\n      out = noflo.internalSocket.createSocket()\n      canvas = noflo.internalSocket.createSocket()\n      css = noflo.internalSocket.createSocket()\n      colors = noflo.internalSocket.createSocket()\n      rect = noflo.internalSocket.createSocket()\n      c.inPorts.canvas.attach ins\n      c.inPorts.rect.attach rect\n      c.inPorts.css.attach css\n      c.inPorts.colors.attach colors\n      c.outPorts.out.attach out\n      done()\n\n  describe 'when instantiated', ->\n    it 'should have input ports', ->\n      chai.expect(c.inPorts.canvas).to.be.an 'object'\n      chai.expect(c.inPorts.css).to.be.an 'object'\n      chai.expect(c.inPorts.colors).to.be.an 'object'\n      chai.expect(c.inPorts.rect).to.be.an 'object'\n    it 'should have output ports', ->\n      chai.expect(c.outPorts.out).to.be.an 'object'\n\n  describe 'when passed a canvas and some rectangles', ->\n    someRects = [ \n      { type: 'rectangle', x: 490, y: 172, width: 70, height: 230 },\n      { type: 'rectangle', x: 0, y: 0, width: 160, height: 160 }\n    ]\n\n    it 'should extract colors from the rectangles', (done) ->\n      @timeout 20000\n      id = 1\n      groups = []\n      out.once 'begingroup', (group) ->\n        groups.push group\n      out.once 'endgroup', (group) ->\n        groups.pop()\n      out.once 'data', (res) ->\n        chai.expect(groups).to.eql [1]\n        chai.expect(res.length).to.be.equal someRects.length\n        done()\n\n      inSrc = 'colorful-octagon.png'\n      testutils.getCanvasWithImageNoShift inSrc, (c) ->\n        ins.beginGroup id\n        rect.send someRects\n        css.send false\n        colors.send 10\n        ins.send c\n        ins.endGroup()\n"},"image/GetFeaturesYAPE":{language:"coffeescript",source:"noflo = require 'noflo'\njsfeat = require 'jsfeat'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Extract feature corners of image (method: YAPE)'\n  c.icon = 'file-image-o'\n  c.inPorts.add 'canvas',\n    datatype: 'object'\n  c.outPorts.add 'corners',\n    datatype: 'array'\n  c.outPorts.add 'canvas',\n    datatype: 'object'\n  c.forwardBrackets =\n    canvas: ['canvas', 'corners']\n  c.process (input, output) ->\n    return unless input.hasData 'canvas'\n    canvas = input.getData 'canvas'\n    context = canvas.getContext '2d'\n    img = context.getImageData 0, 0, canvas.width, canvas.height\n\n    jsfeat.yape06.laplacian_threshold = 30\n    jsfeat.yape06.min_eigen_value_threshold = 25\n\n    img_u8 = new jsfeat.matrix_t canvas.width, canvas.height, jsfeat.U8_t|jsfeat.C1_t\n    jsfeat.imgproc.grayscale img.data, canvas.width, canvas.height, img_u8\n    jsfeat.imgproc.box_blur_gray img_u8, img_u8, 2, 0\n\n    # TODO: write component which can render points onto the image\n    corners = []\n    pixels = canvas.width*canvas.height\n    for i in [0...pixels]\n      corners.push new jsfeat.keypoint_t 0,0,0,\n    count = jsfeat.yape06.detect img_u8, corners\n\n    output.sendDone\n      corners: corners.slice 0, count\n      canvas: canvas\n    return\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai' unless chai\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\n  testutils = require './testutils'\nelse\n  baseDir = '/noflo-image'\n  testutils = require 'noflo-image/spec/testutils.js'\n\ndescribe 'GetFeaturesYAPE component', ->\n  c = null\n  ins = null\n  corners = null\n  canvas = null\n  beforeEach (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'image/GetFeaturesYAPE', (err, instance) ->\n      c = instance\n      ins = noflo.internalSocket.createSocket()\n      corners = noflo.internalSocket.createSocket()\n      canvas = noflo.internalSocket.createSocket()\n      c.inPorts.canvas.attach ins\n      c.outPorts.corners.attach corners\n      c.outPorts.canvas.attach canvas\n      done()\n\n  describe 'when instantiated', ->\n    it 'should have an input port', ->\n      chai.expect(c.inPorts.canvas).to.be.an 'object'\n    it 'should have output ports', ->\n      chai.expect(c.outPorts.corners).to.be.an 'object'\n      chai.expect(c.outPorts.canvas).to.be.an 'object'\n\n  testcases = [\n    'textAnywhere/flickr-3178100324-original_small.jpg'\n    'noText/flickr-8132786781-small.jpg'\n    'textRegion/3010029968_02742a1aec_b.jpg'\n  ]\n\n  testcases.pop() if noflo.isBrowser()\n\n  for testcase in testcases\n      describe testcase, ->\n          describe 'when passed a canvas', ->\n            @timeout 3000\n            input = testcase\n            ref = testcase+'.corners.json'\n            expected = (testutils.getData ref, {corners: []}).corners\n            it 'should extract corners', (done) ->\n              id = null\n              groups = []\n              corners.once \"begingroup\", (group) ->\n                groups.push group\n              corners.once \"data\", (corners) ->\n                testutils.writeOut ref+'.out', { corners: corners }\n                chai.expect(corners[0]).to.have.property 'x'\n                chai.expect(corners[0]).to.have.property 'y'\n                chai.expect(corners[0]).to.have.property 'score'\n                chai.expect(corners[0]).to.have.property 'level'\n                unless noflo.isBrowser()\n                  chai.expect(corners.length).to.be.within expected.length-2000, expected.length+2000\n                  #chai.expect(corners.slice(0,100)).to.deep.equal expected.slice 0, 100\n                chai.expect(groups).to.have.length 1\n                chai.expect(groups[0]).to.equal id\n                done()\n              id = testutils.getCanvasWithImage input, (canvas) ->\n                ins.beginGroup id\n                ins.send canvas\n                ins.endGroup()\n\n            it 'should send canvas out', (done) ->\n              id = null\n              groups = []\n              canvas.once \"begingroup\", (group) ->\n                groups.push group\n              canvas.once \"data\", (canvas) ->\n                chai.expect(groups).to.have.length 1\n                chai.expect(groups[0]).to.equal id\n                done()\n              id = testutils.getCanvasWithImage input, (canvas) ->\n                ins.beginGroup id\n                ins.send canvas\n                ins.endGroup()\n"},"image/GetOrientation":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.icon = 'file-image-o'\n  c.description = 'Get orientation from image dimensions'\n\n  c.inPorts.add 'dimensions',\n    datatype: 'object'\n  c.outPorts.add 'orientation',\n    datatype: 'object'\n  c.outPorts.add 'error',\n    datatype: 'object'\n\n  noflo.helpers.WirePattern c,\n    in: 'dimensions'\n    out: 'orientation'\n    forwardGroups: true\n    async: true\n  , (packet, groups, out, callback) ->\n    unless packet?.width > 0\n      return callback new Error \"Dimension is missing width\"\n    unless packet?.height > 0\n      return callback new Error \"Dimension is missing height\"\n    orientation = 'square'\n    if packet.width > packet.height\n      orientation = 'landscape'\n    if packet.width < packet.height\n      orientation = 'portrait'\n    out.send\n      orientation: orientation\n    do callback\n    return\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai' unless chai\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = '/noflo-image'\n\ndescribe 'GetOrientation component', ->\n  c = null\n  dimensions = null\n  orientation = null\n  error = null\n  beforeEach (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'image/GetOrientation', (err, instance) ->\n      return done err if err\n      c = instance\n      dimensions = noflo.internalSocket.createSocket()\n      orientation = noflo.internalSocket.createSocket()\n      error = noflo.internalSocket.createSocket()\n      c.inPorts.dimensions.attach dimensions\n      c.outPorts.orientation.attach orientation\n      c.outPorts.error.attach error\n      done()\n\n  describe 'calculating orientations', ->\n    it 'should be able to return correct for 1680 x 1050 image', (done) ->\n      orientation.on 'data', (data) ->\n        chai.expect(data.orientation).to.equal 'landscape'\n        done()\n      dimensions.send\n        width: 1680\n        height: 1050\n    it 'should be able to return correct for 80 x 80 image', (done) ->\n      orientation.on 'data', (data) ->\n        chai.expect(data.orientation).to.equal 'square'\n        done()\n      dimensions.send\n        width: 80\n        height: 80\n    it 'should be able to return correct for 1080 x 1920 image', (done) ->\n      orientation.on 'data', (data) ->\n        chai.expect(data.orientation).to.equal 'portrait'\n        done()\n      dimensions.send\n        width: 1080\n        height: 1920\n    it 'should return error for a image without height', (done) ->\n      error.on 'data', (err) ->\n        chai.expect(err).to.be.instanceof Error\n        done()\n      dimensions.send\n        width: 1080\n    it 'should return error for null input', (done) ->\n      error.on 'data', (err) ->\n        chai.expect(err).to.be.instanceof Error\n        done()\n      dimensions.send null\n"},"image/GetPresetCurve":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# Instagram filter from http://matthewruddy.github.io/jQuery-filter.me\npresets =\n '1977': {'a':[0,1,3,4,6,7,9,10,12,13,14,16,17,19,20,22,23,25,26,28,29,31,32,34,35,37,38,39,41,42,44,45,46,48,49,50,52,53,54,55,57,58,59,60,61,62,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,125,126,127,128,129,130,131,132,133,134,135,136,137,137,138,139,140,141,142,143,144,145,146,146,147,148,149,150,151,152,153,153,154,155,156,157,158,159,160,160,161,162,163,164,165,166,166,167,168,169,170,171,172,172,173,174,175,176,177,178,178,179,180,181,182,183,183,184,185,186,187,188,188,189,190,191,192,193,193,194,195,196,197,198,199,199,200,201,202,203,204,204,205,206,207,208,209,209,210,211,212,213,214,215,215,216,217,218,219,220,221,221,222,223,224,225,226,227,227,228,229,230,231,232,233,233,234,235,236,237,238,239,240,241,241,242,243,244,245,246,247,248,249,250,250,251,252,253,254,255,255], 'r':[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,59,60,60,61,62,62,63,63,64,64,65,66,66,67,67,68,69,69,70,70,71,72,72,73,74,74,75,76,77,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,102,103,104,105,106,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,125,126,127,128,129,130,131,133,134,135,136,137,138,140,141,142,143,144,146,147,148,149,151,152,153,154,156,157,158,160,161,162,164,165,166,168,169,170,172,173,175,176,177,179,180,182,183,185,186,188,189,191,192,193,194,196,197,198,199,200,201,202,203,204,204,205,206,206,207,208,208,209,209,210,210,211,211,212,212,212,213,213,213,213,213,214,214,214,214,214,214,214,214,214,214,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,214,214,214,214,214,214,214,214,214,214,213,213,213,213,213,213,213,212,212,212,212,212], 'g':[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,41,41,42,42,42,42,43,43,43,43,44,44,44,44,45,45,45,45,46,46,46,47,47,48,48,48,49,49,50,50,51,52,52,53,54,54,55,56,57,58,59,60,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,155,156,157,158,160,161,162,163,164,166,167,168,169,171,172,173,174,175,176,178,179,180,181,182,183,185,186,187,188,189,190,191,192,193,195,196,197,198,199,200,201,202,203,205,206,207,208,209,210,211,212,214,215,216,217,218,220,221,222,223,225,226,227,228,230,231,232,233,235,236,237,239,240,241,242,244,245,246,247,249,250,251,252,254,255,255], 'b':[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,46,46,47,47,47,48,48,48,48,49,49,49,50,50,50,51,51,51,52,52,53,53,54,54,55,56,56,57,58,59,60,61,62,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,96,97,98,99,100,102,103,104,105,107,108,109,110,112,113,114,115,117,118,119,120,122,123,124,126,127,128,130,131,133,134,135,137,138,140,141,143,144,145,147,148,149,151,152,153,155,156,157,159,160,161,162,164,165,166,167,168,170,171,172,173,174,175,176,177,178,179,180,181,182,184,185,186,187,188,188,189,190,191,192,193,193,194,195,195,196,196,196,197,197,197,197,198,198,198,198,198,198,198,198,198,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,198,198,198,198,198,198,197,197,197,197,197,197,197,197,197,197,197,197,197,197,198,198,198,198,198,198,198]}\n 'brannan': {'a':[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,255], 'r':[50,50,50,50,50,50,50,50,50,50,50,50,50,51,51,51,51,51,52,53,54,55,56,57,59,60,62,63,64,66,67,68,69,70,71,71,72,73,73,74,75,75,76,76,77,77,78,78,79,79,80,80,81,81,82,83,83,84,85,86,87,88,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,118,119,120,121,122,124,125,126,128,129,130,132,133,134,136,137,139,140,141,143,144,146,147,149,150,152,153,154,156,157,159,160,162,163,164,166,167,169,170,171,173,174,175,177,178,179,181,182,183,185,186,187,189,190,192,193,195,196,198,199,201,203,204,206,207,209,210,212,213,215,216,217,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,236,237,238,239,239,240,241,241,242,243,243,244,244,245,246,246,247,247,248,248,249,249,249,250,250,251,251,251,252,252,252,253,253,253,254,254,254,254,254,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,254,254,254,254,254,254], 'g':[0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,2,2,2,3,4,4,5,6,7,8,10,11,12,13,14,16,17,18,19,20,21,23,24,25,26,27,28,29,30,32,33,34,35,36,38,39,40,41,43,44,45,47,48,50,51,53,54,56,57,59,61,62,64,66,68,70,72,74,76,78,80,82,84,87,89,91,93,95,97,100,102,104,106,108,110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,161,163,165,167,168,170,172,173,175,176,178,179,181,182,183,184,186,187,188,189,190,191,192,193,193,194,195,196,196,197,198,198,199,200,200,201,202,202,203,203,204,204,205,205,206,207,207,208,208,209,210,210,211,212,212,213,214,214,215,216,217,217,218,219,219,220,221,221,222,222,223,224,224,225,225,226,226,227,228,228,229,229,229,230,230,231,231,232,232,233,233,233,234,234,234,235,235,236,236,236,237,237,237,238,238,239,239,239,240,240,240,241,241,241,242,242,242,243,243,243,244,244,244,245,245,245,246,246,247,247,247,248,248,249,249,250,250,251,251,252,252,252], 'b':[48,48,48,48,48,48,48,48,49,49,49,49,49,49,49,50,50,50,51,51,51,52,52,53,53,54,54,54,55,55,56,56,57,57,58,58,59,60,60,61,61,62,62,63,64,64,65,66,66,67,68,68,69,70,71,71,72,73,74,75,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,132,133,134,135,136,137,138,139,140,141,141,142,143,144,145,146,146,147,148,148,149,150,151,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,178,179,180,181,181,182,183,183,184,184,185,185,185,186,186,187,187,187,188,188,188,189,189,190,190,191,191,192,193,193,194,195,195,196,197,198,199,200,200,201,202,203,204,205,206,206,207,208,209,210,211,211,212,213,214,214,215,216,216,217,218,218,219,219,220,220,221,222,222,222,223,223,224,224,224,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225]}\n 'gotham': {'a':[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,255], 'r':[50,50,50,50,50,50,50,50,50,50,50,50,50,51,51,51,51,51,52,53,54,55,56,57,59,60,62,63,64,66,67,68,69,70,71,71,72,73,73,74,75,75,76,76,77,77,78,78,79,79,80,80,81,81,82,83,83,84,85,86,87,88,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,118,119,120,121,122,124,125,126,128,129,130,132,133,134,136,137,139,140,141,143,144,146,147,149,150,152,153,154,156,157,159,160,162,163,164,166,167,169,170,171,173,174,175,177,178,179,181,182,183,185,186,187,189,190,192,193,195,196,198,199,201,203,204,206,207,209,210,212,213,215,216,217,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,236,237,238,239,239,240,241,241,242,243,243,244,244,245,246,246,247,247,248,248,249,249,249,250,250,251,251,251,252,252,252,253,253,253,254,254,254,254,254,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,254,254,254,254,254,254], 'g':[0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,2,2,2,3,4,4,5,6,7,8,10,11,12,13,14,16,17,18,19,20,21,23,24,25,26,27,28,29,30,32,33,34,35,36,38,39,40,41,43,44,45,47,48,50,51,53,54,56,57,59,61,62,64,66,68,70,72,74,76,78,80,82,84,87,89,91,93,95,97,100,102,104,106,108,110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,161,163,165,167,168,170,172,173,175,176,178,179,181,182,183,184,186,187,188,189,190,191,192,193,193,194,195,196,196,197,198,198,199,200,200,201,202,202,203,203,204,204,205,205,206,207,207,208,208,209,210,210,211,212,212,213,214,214,215,216,217,217,218,219,219,220,221,221,222,222,223,224,224,225,225,226,226,227,228,228,229,229,229,230,230,231,231,232,232,233,233,233,234,234,234,235,235,236,236,236,237,237,237,238,238,239,239,239,240,240,240,241,241,241,242,242,242,243,243,243,244,244,244,245,245,245,246,246,247,247,247,248,248,249,249,250,250,251,251,252,252,252], 'b':[48,48,48,48,48,48,48,48,49,49,49,49,49,49,49,50,50,50,51,51,51,52,52,53,53,54,54,54,55,55,56,56,57,57,58,58,59,60,60,61,61,62,62,63,64,64,65,66,66,67,68,68,69,70,71,71,72,73,74,75,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,132,133,134,135,136,137,138,139,140,141,141,142,143,144,145,146,146,147,148,148,149,150,151,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,178,179,180,181,181,182,183,183,184,184,185,185,185,186,186,187,187,187,188,188,188,189,189,190,190,191,191,192,193,193,194,195,195,196,197,198,199,200,200,201,202,203,204,205,206,206,207,208,209,210,211,211,212,213,214,214,215,216,216,217,218,218,219,219,220,220,221,222,222,222,223,223,224,224,224,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225]}\n 'hefe': {'a':[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,255], 'r':[32,32,32,32,32,32,32,32,32,32,32,32,32,33,33,33,33,33,34,35,36,38,39,41,43,45,48,50,52,54,56,58,60,62,64,65,67,69,71,73,75,77,79,81,83,85,87,89,91,93,95,96,98,100,102,104,106,108,110,112,114,116,117,119,121,123,125,126,128,130,132,133,135,137,139,140,142,144,146,147,149,151,152,154,155,157,158,160,161,163,164,166,167,168,170,171,172,173,175,176,177,178,179,180,181,182,184,185,186,187,188,189,190,190,191,192,193,194,195,196,197,197,198,199,200,201,201,202,203,204,204,205,205,206,206,207,207,208,208,209,209,210,210,211,211,212,212,213,213,214,214,215,215,216,216,217,217,218,218,219,219,220,220,221,221,221,222,222,223,223,224,224,225,225,225,226,226,227,227,228,228,228,229,229,230,230,231,231,231,232,232,233,233,233,234,234,235,235,235,236,236,236,237,237,238,238,238,239,239,239,240,240,240,241,241,242,242,242,243,243,243,244,244,245,245,245,246,246,247,248,248,249,249,250,250,251,251,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252], 'g':[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,19,20,21,23,24,25,27,28,30,31,33,34,36,37,39,40,42,44,45,47,49,50,52,54,56,57,59,61,63,65,67,69,71,73,75,78,80,82,85,87,89,92,94,97,99,102,104,106,109,111,114,116,118,121,123,125,127,129,131,133,135,137,139,141,143,145,146,148,150,152,154,156,157,159,161,163,164,166,168,169,171,173,174,176,178,179,181,182,184,185,187,188,190,191,192,194,195,196,197,198,199,200,201,202,203,204,205,205,206,207,207,208,209,209,210,210,211,211,211,212,212,213,213,213,214,214,215,215,216,216,216,217,217,218,218,219,219,220,220,220,221,221,222,222,222,223,223,224,224,225,225,225,226,226,227,227,228,228,228,229,229,230,230,231,231,232,232,232,233,233,234,234,235,235,236,236,237,237,238,238,239,239,239,240,240,241,241,242,242,243,244,244,245,246,246,247,248,249,249,250,250,251,251,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252], 'b':[2,2,3,3,3,3,3,4,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,8,8,9,9,9,10,10,11,12,12,13,13,14,15,15,16,17,17,18,19,19,20,21,22,23,24,24,25,26,27,28,29,30,32,33,34,35,36,38,39,40,42,43,45,47,48,50,52,54,56,58,60,62,64,66,68,70,72,74,76,78,80,82,84,86,87,89,91,93,95,96,98,100,101,103,105,107,108,110,112,113,115,117,118,120,122,123,125,127,128,130,131,133,135,136,138,140,141,143,145,146,148,149,151,153,154,156,158,159,161,163,164,166,167,169,170,171,173,174,175,177,178,179,180,182,183,184,185,186,187,189,190,191,192,193,194,195,195,196,197,198,198,199,200,200,201,201,202,202,203,203,204,204,204,205,205,205,206,206,206,207,207,207,207,208,208,209,209,209,210,210,211,211,211,212,212,213,213,214,214,214,215,215,216,216,216,217,217,218,218,218,219,219,220,220,220,221,221,222,222,222,223,223,224,224,225,225,226,226,227,227,227,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228]}\n 'lordkelvin': {'a':[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,255], 'r':[43,44,46,47,49,50,52,53,55,56,58,59,61,62,64,65,67,69,70,72,73,75,77,78,80,81,83,85,86,88,90,91,93,95,96,98,100,102,103,105,107,109,111,112,114,116,118,120,121,123,125,127,129,130,132,134,136,137,139,141,142,144,146,147,149,151,152,154,155,157,158,160,162,163,165,166,168,169,171,172,174,175,176,178,179,180,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,201,202,203,204,204,205,206,207,207,208,209,210,210,211,212,212,213,214,214,215,216,217,217,218,219,219,220,221,222,222,223,224,224,225,225,226,227,227,228,228,229,229,229,230,230,231,231,232,232,232,233,233,233,234,234,235,235,235,236,236,236,237,237,237,238,238,239,239,239,240,240,240,241,241,241,242,242,242,243,243,243,243,244,244,244,245,245,245,245,245,246,246,246,246,246,247,247,247,247,247,248,248,248,248,248,248,249,249,249,249,249,249,249,250,250,250,250,250,250,250,250,251,251,251,251,251,251,251,251,251,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,253,253,254,254,254,254,254], 'g':[36,36,36,36,36,36,36,36,36,36,36,36,36,37,37,37,37,37,37,38,38,38,39,39,40,40,41,41,42,43,43,44,45,46,47,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,155,156,157,158,158,159,160,160,161,161,162,163,163,164,164,165,165,166,166,167,167,168,168,168,169,169,170,171,171,172,172,173,173,174,174,175,175,176,177,177,178,178,179,179,180,180,181,181,182,182,182,183,183,184,184,184,185,185,185,186,186,186,186,187,187,187,187,188,188,188,188,188,189,189,189,189,189,190,190,190,190,190,190,190,191,191,191,191,191,191,191,191,192,192,192,192,192,192,192,192,193,193,193,193,193,193,193,193,194,194,194,194,194,194,194,195,195,195,195], 'b':[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,70,70,70,70,70,70,70,70,70,70,71,71,71,72,72,73,73,73,74,74,75,75,76,76,77,78,78,79,79,80,80,81,81,82,82,82,83,83,84,84,84,85,85,86,86,86,87,87,87,88,88,88,89,89,90,90,90,91,91,91,92,92,93,93,93,94,94,95,95,96,96,96,97,97,98,99,99,100,100,101,101,102,102,102,103,103,103,104,104,104,105,105,105,106,106,106,106,107,107,107,107,108,108,108,108,109,109,109,110,110,110,111,111,111,111,112,112,112,113,113,113,114,114,114,115,115,115,115,116,116,116,116,117,117,117,117,117,118,118,118,118,118,118,119,119,119,119,119,119,119,120,120,120,120,120,120,120,120,120,121,121,121,121,121,121,121,121,121,121,121,122,122,122,122,122,122,122,122,122,122,122,122,123,123,123,123,123,123,123,123,123,123,123,124,124,124,124,124,124]}\n 'nashville': {'a':[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,255], 'r':[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,57,57,58,58,59,59,60,61,62,63,64,65,66,67,68,69,71,72,73,75,76,78,79,81,82,84,85,87,88,90,91,93,95,96,98,100,102,104,106,108,110,113,115,117,120,122,124,127,129,131,133,136,138,140,142,144,146,148,150,152,154,155,157,159,160,162,164,165,167,168,170,171,173,174,175,177,178,179,181,182,183,185,186,187,189,190,191,192,194,195,196,197,198,200,201,202,203,204,205,206,208,209,209,210,211,212,213,214,215,216,217,217,218,219,220,220,221,222,223,223,224,225,226,226,227,228,228,229,230,230,231,231,232,233,233,234,234,235,235,236,237,237,238,238,239,239,240,240,240,241,241,242,242,243,243,243,244,244,245,245,245,246,246,246,247,247,247,248,248,248,248,249,249,249,249,250,250,250,250,251,251,251,251,251,252,252,252,252,252,253,253,253,253,253,254,254,254,254,254,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255], 'g':[38,39,39,40,41,41,42,42,43,44,44,45,46,46,47,48,49,50,51,52,53,55,56,57,59,60,61,63,64,65,67,68,69,71,72,73,74,76,77,78,80,81,82,84,85,86,87,89,90,91,93,94,95,97,98,99,101,102,103,104,106,107,108,110,111,112,114,115,116,118,119,121,122,123,125,126,128,129,130,132,133,134,136,137,138,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,158,159,160,161,162,163,163,164,165,166,166,167,168,169,169,170,171,172,172,173,174,175,176,176,177,178,179,180,181,181,182,183,184,185,186,187,187,188,189,189,190,191,191,192,193,193,194,194,195,195,196,197,197,198,198,199,199,200,200,201,201,202,202,202,203,203,204,204,205,205,205,206,206,207,207,207,208,208,208,209,209,209,210,210,210,211,211,211,212,212,212,213,213,213,213,214,214,214,214,215,215,215,215,216,216,216,216,216,217,217,217,217,217,218,218,218,218,218,218,219,219,219,219,219,220,220,220,220,220,220,220,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221], 'b':[97,98,98,99,99,100,100,101,101,102,102,103,104,104,105,105,106,107,107,108,109,110,110,111,112,113,114,114,115,116,116,117,118,118,119,119,120,120,121,121,122,122,123,123,124,124,124,125,125,126,126,127,127,127,128,128,129,129,129,130,130,131,131,132,132,132,133,133,134,134,135,135,136,136,136,137,137,138,138,139,139,139,140,140,141,141,142,142,142,143,143,144,144,144,145,145,146,146,147,147,147,148,148,149,149,150,150,151,151,151,152,152,153,153,154,154,154,155,155,155,156,156,156,157,157,157,158,158,158,158,158,158,159,159,159,159,159,159,159,159,159,159,159,160,160,160,160,160,161,161,161,162,162,162,162,163,163,163,163,164,164,164,164,165,165,165,165,165,165,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,167,167,167,167,167,167,167,167,167,168,168,168,168,168,168,169,169,169,169,169,170,170,170,170,171,171,171,171,171,172,172,172,172,172,173,173,173,173,173,173,173,174,174,174,174,174,174,174,174,175,175,175,175,175,175,175,175,175,175,175,176,176,176,176,176,176,176,176,176,176]}\n 'xproii': {'a':[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,255], 'r':[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,3,3,4,4,5,5,5,6,7,7,8,8,9,9,10,11,11,12,13,14,14,15,16,17,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,37,38,39,41,42,43,45,46,48,49,51,52,54,55,57,58,60,62,63,65,67,68,70,72,74,76,77,79,81,83,85,87,89,91,93,95,97,99,101,103,105,106,108,110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,141,143,145,147,149,151,153,155,157,159,161,163,165,167,169,171,172,174,176,178,180,182,184,186,188,189,191,193,194,196,198,199,201,202,204,205,207,208,209,211,212,214,215,216,217,219,220,221,222,223,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,239,240,241,242,243,243,244,245,246,246,247,248,248,249,249,250,250,251,251,252,252,252,253,253,253,253,253,253,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,255,255,255,255,255,255,255,255], 'g':[0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,3,3,3,4,4,4,5,5,5,6,6,7,7,8,8,9,10,10,11,12,12,13,14,14,15,16,17,18,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,39,40,41,43,44,45,47,48,50,51,53,54,56,57,59,61,62,64,66,67,69,71,73,75,76,78,80,82,84,86,88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,161,163,165,167,169,171,173,175,176,178,180,182,183,185,187,189,190,192,193,195,197,198,200,201,203,204,206,207,209,210,211,213,214,216,217,218,219,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,237,237,238,239,240,240,241,242,243,243,244,244,245,246,246,247,247,248,248,249,249,250,250,250,251,251,252,252,252,253,253,253,253,253,253,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,255,255,255,255,255,255,255,255,255,255], 'b':[24,25,26,27,28,28,29,30,31,32,33,34,35,35,36,37,38,39,40,41,41,42,43,44,45,45,46,47,48,49,49,50,51,52,53,53,54,55,56,56,57,58,59,59,60,61,62,62,63,64,64,65,66,67,67,68,69,70,70,71,72,73,73,74,75,76,77,77,78,79,80,81,81,82,83,84,85,86,86,87,88,89,90,91,91,92,93,94,95,96,96,97,98,99,100,101,101,102,103,104,105,106,107,107,108,109,110,111,112,113,114,114,115,116,117,118,119,119,120,121,122,123,124,124,125,126,127,127,128,129,129,130,130,131,131,132,132,133,134,134,135,136,137,138,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,162,163,164,165,165,166,167,168,168,169,170,171,171,172,173,173,174,175,176,176,177,178,178,179,180,181,182,182,183,184,185,185,186,187,188,189,189,190,191,192,193,193,194,195,196,197,197,198,199,200,200,201,202,203,204,204,205,206,206,207,208,208,209,210,210,211,212,212,213,214,215,215,216,217,218,218,219,220,221,221,222,223,224,225,226,226,227,228,229]}\n 'newkelvin': {'a': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255],'b': [0, 1, 1, 2, 2, 3, 3, 4, 5, 5, 6, 6, 7, 7, 8, 9, 9, 10, 10, 11, 11, 12, 13, 13, 14, 14, 15, 15, 16, 17, 17, 18, 18, 19, 20, 20, 21, 21, 22, 23, 23, 24, 24, 25, 26, 26, 27, 27, 28, 29, 29, 30, 30, 31, 32, 32, 33, 34, 34, 35, 36, 36, 37, 37, 38, 39, 39, 40, 41, 41, 42, 43, 43, 44, 45, 45, 46, 47, 47, 48, 49, 50, 50, 51, 52, 52, 53, 54, 55, 55, 56, 57, 57, 58, 59, 60, 60, 61, 62, 63, 63, 64, 65, 66, 67, 67, 68, 69, 70, 71, 71, 72, 73, 74, 75, 75, 76, 77, 78, 79, 80, 81, 81, 82, 83, 84, 85, 86, 87, 88, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 146, 147, 148, 150, 151, 152, 154, 155, 156, 158, 159, 160, 162, 163, 165, 166, 168, 169, 170, 172, 173, 175, 176, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 192, 194, 195, 197, 199, 200, 202, 203, 205, 206, 208, 209, 211, 212, 214, 215, 217, 219, 220, 222, 223, 225, 226, 228, 230, 231, 233, 234, 236, 237, 239, 241, 242, 244, 245, 247, 249, 250, 252, 253, 255],'g': [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 250, 251, 252, 253, 254, 255],'r': [0, 2, 3, 5, 6, 8, 9, 11, 12, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, 29, 30, 32, 33, 35, 36, 38, 40, 41, 43, 44, 46, 47, 49, 50, 52, 53, 55, 56, 58, 59, 61, 62, 64, 65, 67, 68, 70, 71, 73, 74, 75, 77, 78, 80, 81, 83, 84, 86, 87, 89, 90, 92, 93, 95, 96, 97, 99, 100, 102, 103, 105, 106, 108, 109, 110, 112, 113, 115, 116, 118, 119, 120, 122, 123, 125, 126, 127, 129, 130, 132, 133, 134, 136, 137, 139, 140, 141, 143, 144, 145, 147, 148, 149, 151, 152, 153, 155, 156, 157, 159, 160, 161, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 181, 182, 183, 185, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 244, 245, 246, 247, 247, 248, 249, 249, 250, 250, 251, 252, 252, 253, 253, 253, 254, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]}\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Get a preset for a RGBA adjustment curve.'\n  c.icon = 'file-image-o'\n  c.inPorts.add 'presetname',\n    datatype: 'string'\n  c.outPorts.add 'curve',\n    datatype: 'object'\n  c.outPorts.add 'error',\n    datatype: 'object'\n  c.forwardBrackets =\n    presetname: ['curve']\n  c.process (input, output) ->\n    return unless input.hasData 'presetname'\n    payload = input.getData 'presetname'\n    unless presets[payload]\n      output.done new Error \"Preset '#{payload}' not available\"\n      return\n    output.sendDone\n      curve: presets[payload]\n    return\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai' unless chai\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\n  testutils = require './testutils'\nelse\n  baseDir = '/noflo-image'\n  testutils = require 'noflo-image/spec/testutils.js'\n\ndescribe 'GetPresetCurve component', ->\n  c = null\n  presetname = null\n  curve = null\n\n  beforeEach (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'image/GetPresetCurve', (err, instance) ->\n      return done err if err\n      c = instance\n      presetname = noflo.internalSocket.createSocket()\n      curve = noflo.internalSocket.createSocket()\n      c.inPorts.presetname.attach presetname\n      c.outPorts.curve.attach curve\n      done()\n\n  describe 'when instantiated', ->\n    it 'should have one input port', ->\n      chai.expect(c.inPorts.presetname).to.be.an 'object'\n    it 'should have one output port', ->\n      chai.expect(c.outPorts.curve).to.be.an 'object'\n \n  describe 'with a preset name', ->\n    it 'should return a curve as an object', (done) ->\n      curve.once 'data', (data) ->\n        ref = {'a':[0,1,3,4,6,7,9,10,12,13,14,16,17,19,20,22,23,25,26,28,29,31,32,34,35,37,38,39,41,42,44,45,46,48,49,50,52,53,54,55,57,58,59,60,61,62,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,125,126,127,128,129,130,131,132,133,134,135,136,137,137,138,139,140,141,142,143,144,145,146,146,147,148,149,150,151,152,153,153,154,155,156,157,158,159,160,160,161,162,163,164,165,166,166,167,168,169,170,171,172,172,173,174,175,176,177,178,178,179,180,181,182,183,183,184,185,186,187,188,188,189,190,191,192,193,193,194,195,196,197,198,199,199,200,201,202,203,204,204,205,206,207,208,209,209,210,211,212,213,214,215,215,216,217,218,219,220,221,221,222,223,224,225,226,227,227,228,229,230,231,232,233,233,234,235,236,237,238,239,240,241,241,242,243,244,245,246,247,248,249,250,250,251,252,253,254,255,255], 'r':[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,59,60,60,61,62,62,63,63,64,64,65,66,66,67,67,68,69,69,70,70,71,72,72,73,74,74,75,76,77,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,102,103,104,105,106,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,125,126,127,128,129,130,131,133,134,135,136,137,138,140,141,142,143,144,146,147,148,149,151,152,153,154,156,157,158,160,161,162,164,165,166,168,169,170,172,173,175,176,177,179,180,182,183,185,186,188,189,191,192,193,194,196,197,198,199,200,201,202,203,204,204,205,206,206,207,208,208,209,209,210,210,211,211,212,212,212,213,213,213,213,213,214,214,214,214,214,214,214,214,214,214,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,214,214,214,214,214,214,214,214,214,214,213,213,213,213,213,213,213,212,212,212,212,212], 'g':[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,41,41,42,42,42,42,43,43,43,43,44,44,44,44,45,45,45,45,46,46,46,47,47,48,48,48,49,49,50,50,51,52,52,53,54,54,55,56,57,58,59,60,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,155,156,157,158,160,161,162,163,164,166,167,168,169,171,172,173,174,175,176,178,179,180,181,182,183,185,186,187,188,189,190,191,192,193,195,196,197,198,199,200,201,202,203,205,206,207,208,209,210,211,212,214,215,216,217,218,220,221,222,223,225,226,227,228,230,231,232,233,235,236,237,239,240,241,242,244,245,246,247,249,250,251,252,254,255,255], 'b':[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,46,46,47,47,47,48,48,48,48,49,49,49,50,50,50,51,51,51,52,52,53,53,54,54,55,56,56,57,58,59,60,61,62,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,96,97,98,99,100,102,103,104,105,107,108,109,110,112,113,114,115,117,118,119,120,122,123,124,126,127,128,130,131,133,134,135,137,138,140,141,143,144,145,147,148,149,151,152,153,155,156,157,159,160,161,162,164,165,166,167,168,170,171,172,173,174,175,176,177,178,179,180,181,182,184,185,186,187,188,188,189,190,191,192,193,193,194,195,195,196,196,196,197,197,197,197,198,198,198,198,198,198,198,198,198,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,198,198,198,198,198,198,197,197,197,197,197,197,197,197,197,197,197,197,197,197,198,198,198,198,198,198,198]}\n        chai.expect(data).to.deep.equal ref\n        done()\n\n      presetname.send '1977'\n"},"image/ImageToCanvas":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Convert image to canvas.'\n  c.icon = 'file-image-o'\n  c.inPorts.add 'image',\n    datatype: 'object'\n  c.outPorts.add 'canvas',\n    datatype: 'object'\n  c.forwardBrackets =\n    image: ['canvas']\n  c.process (input, output) ->\n    return unless input.hasData 'image'\n    image = input.getData 'image'\n    \n    if noflo.isBrowser()\n      canvas = document.createElement 'canvas'\n      canvas.width = image.width\n      canvas.height = image.height\n    else\n      Canvas = require('noflo-canvas').canvas\n      canvas = new Canvas image.width, image.height\n\n    context = canvas.getContext '2d'\n    context.drawImage image, 0, 0\n\n    output.sendDone\n      canvas: canvas\n    return\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai' unless chai\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\n  testutils = require './testutils'\nelse\n  baseDir = '/noflo-image'\n  testutils = require 'noflo-image/spec/testutils.js'\n\ndescribe 'ImageToCanvas component', ->\n  c = null\n  inImage = null\n  outCanvas = null\n\n  beforeEach (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'image/ImageToCanvas', (err, instance) ->\n      return done err if err\n      c = instance\n      inImage = noflo.internalSocket.createSocket()\n      outCanvas = noflo.internalSocket.createSocket()\n      c.inPorts.image.attach inImage\n      c.outPorts.canvas.attach outCanvas\n      done()\n\n  describe 'when instantiated', ->\n    it 'should have one input ports', ->\n      chai.expect(c.inPorts.image).to.be.an 'object'\n    it 'should have one output port', ->\n      chai.expect(c.outPorts.canvas).to.be.an 'object'\n\n  describe 'with local JPG image', ->\n    it 'should make a canvas with the correct size', (done) ->\n      @timeout 2000\n      outCanvas.once 'data', (data) ->\n        chai.expect(data.width).to.equal 1024\n        chai.expect(data.height).to.equal 681\n        done()\n\n      url = 'textRegion/3010029968_02742a1aec_b.jpg'\n      id = testutils.getCanvasWithImage url, (image) ->\n        inImage.send image\n"},"image/ToFullscale":{language:"coffeescript",source:"noflo = require 'noflo'\nsuperagent = require 'superagent'\nURI = require 'urijs'\n\ntimeout_HEAD = 15000\n\nconvertFlickr = (url) ->\n  # See docs in https://www.flickr.com/services/api/misc.urls.html\n  format = url.match /_(.)\\.(gif|png|jpg)/\n  if format\n    # If is a downloading image, return original\n    return url.replace(/_(.)\\.(gif|png|jpg)/, '.$2') if format[1] is 'd'\n\n    # We already have the original\n    return url if format[1] is 'o'\n\n    # Another format, return large\n    return url.replace(/_(.)\\.(gif|png|jpg)/, '_b.$2')\n\n  # Non-specified format, return large\n  return url.replace(/\\.(gif|png|jpg)/, '_b.$1')\n\nconvertWordpress = (url) ->\n  return url.replace(/\\?w=[\\d]+/, '')\n\nconvertWikimedia = (url) ->\n  return url unless url.match /\\/commons\\/thumb\\//\n  url.replace /\\/commons\\/(thumb)\\/([0-9])\\/([0-9][a-z])\\/(.*)[\\\\\\/][^\\\\\\/]*/, '/commons/$2/$3/$4'\n\n# Returns original\nconvertImgflo = (url) ->\n  return url unless url.match /\\/graph\\//\n  uri = URI url\n  params = uri.search true\n  return url if not params?.input\n  return params.input\n\n# Change the size params\n# https://en.gravatar.com/site/implement/images/\nconvertGravatar = (url) ->\n  return url unless url.match /\\/avatar\\//\n  newSize = '512'\n  parts = URI.parse url\n  q = URI.parseQuery parts.query\n  q.s = newSize if q.s?\n  q.size = newSize if q.size?\n  if not (q.s? or q.size)?\n    q.size = newSize\n  parts.query = URI.buildQuery q\n  return URI.build parts\n\ntryFindingFullscale = (url) ->\n  return url.replace /[-_](small|thumbnail|thumb|tm)/, ''\n\n# Flickr redirects to a photo_unavailable image if the new URL do not exists\ntryRedirect = (original, redirected) ->\n  if (original.indexOf('staticflickr.com') isnt -1) and\n  (redirected.indexOf('photo_unavailable') isnt -1)\n    return original\n  return redirected\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Convert an image URL to potential URL of full-scale image'\n\n  c.inPorts.add 'url',\n    datatype: 'string'\n  c.outPorts.add 'url',\n    datatype: 'string'\n  c.outPorts.add 'error',\n    datatype: 'object'\n\n  noflo.helpers.WirePattern c,\n    in: 'url'\n    out: 'url'\n    async: true\n    forwardGroups: true\n  , (url, groups, out, callback) ->\n    newUrl = url\n    unless url\n      return callback new Error 'No image source provided'\n    unless typeof url is 'string'\n      return callback new Error 'URL is not a string'\n\n    if url.indexOf('staticflickr.com') isnt -1\n      newUrl = convertFlickr url, callback\n\n    if url.indexOf('wordpress.com') isnt -1\n      newUrl = convertWordpress url, callback\n\n    if url.indexOf('wikimedia.org') isnt -1\n      newUrl = convertWikimedia url, callback\n\n    if url.indexOf('imgflo') isnt -1\n      newUrl = convertImgflo url, callback\n\n    if url.indexOf('gravatar.com') isnt -1\n      newUrl = convertGravatar url, callback\n\n    if url.match /[-_](small|thumb)/\n      newUrl = tryFindingFullscale url, callback\n\n    if newUrl isnt url\n      # Verify that the newUrl exists\n      superagent.head newUrl\n      .redirects(1)\n      .timeout(timeout_HEAD)\n      .end (err, res) ->\n        # If the response is not 200, send the original URL\n        unless res and res.statusCode is 200\n          out.send url\n          do callback\n          return\n        # Use redirection URL\n        if res.redirects?.length > 0\n          newUrl = tryRedirect url, res.redirects[0]\n        out.send newUrl\n        do callback\n    else\n      out.send url\n      do callback\n    return\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai' unless chai\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = '/noflo-image'\n\ndescribe 'ToFullscale component', ->\n  @timeout 20*1000\n  c = null\n  url = null\n  newUrl = null\n  error = null\n\n  beforeEach (done) ->\n    @timeout 5000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'image/ToFullscale', (err, instance) ->\n      return done err if err\n      c = instance\n      url = noflo.internalSocket.createSocket()\n      newUrl = noflo.internalSocket.createSocket()\n      error = noflo.internalSocket.createSocket()\n      c.inPorts.url.attach url\n      c.outPorts.url.attach newUrl\n      done()\n\n  describe 'getting fullscale URLs', ->\n    describe 'with random online images', ->\n      it 'shouldn\\'t touch the URL', (done) ->\n        newUrl.on 'data', (image) ->\n          chai.expect(image).to.equal 'http://www.esa.int/var/esa/storage/images/esa_multimedia/images/2014/04/glowing_jewels_in_the_galactic_plane/14491843-1-eng-GB/Glowing_jewels_in_the_Galactic_Plane.jpg'\n          done()\n        url.send 'http://www.esa.int/var/esa/storage/images/esa_multimedia/images/2014/04/glowing_jewels_in_the_galactic_plane/14491843-1-eng-GB/Glowing_jewels_in_the_Galactic_Plane.jpg'\n\n    describe 'with Flickr images', ->\n      it 'should return correct URL for non-sized', (done) ->\n        newUrl.on 'data', (image) ->\n          chai.expect(image).to.equal 'https://farm8.staticflickr.com/7395/12952090783_ce023450da_b.jpg'\n          done()\n        url.send 'https://farm8.staticflickr.com/7395/12952090783_ce023450da.jpg'\n      it 'should return correct URL for square', (done) ->\n        newUrl.on 'data', (image) ->\n          chai.expect(image).to.equal 'https://farm8.staticflickr.com/7395/12952090783_ce023450da_b.jpg'\n          done()\n        url.send 'https://farm8.staticflickr.com/7395/12952090783_ce023450da_s.jpg'\n      it 'should return correct URL for large', (done) ->\n        newUrl.on 'data', (image) ->\n          chai.expect(image).to.equal 'https://farm8.staticflickr.com/7395/12952090783_ce023450da_b.jpg'\n          done()\n        url.send 'https://farm8.staticflickr.com/7395/12952090783_ce023450da_b.jpg'\n      it 'should return correct URL for original', (done) ->\n        newUrl.on 'data', (image) ->\n          chai.expect(image).to.equal 'https://farm8.staticflickr.com/7395/12952090783_65a0f60fd9_o.jpg'\n          done()\n        url.send 'https://farm8.staticflickr.com/7395/12952090783_65a0f60fd9_o.jpg'\n      it 'should return correct URL for downloading original', (done) ->\n        newUrl.on 'data', (image) ->\n          chai.expect(image).to.equal 'https://farm4.staticflickr.com/3493/3961596996_c9fb5c5e00_o.png'\n          done()\n        url.send 'https://farm4.staticflickr.com/3493/3961596996_c9fb5c5e00_o_d.png'\n      it 'should return the same URL for and old image', (done) ->\n        newUrl.on 'data', (image) ->\n          chai.expect(image).to.equal 'https://farm4.staticflickr.com/3493/3961596996_367327afd9.jpg'\n          done()\n        url.send 'https://farm4.staticflickr.com/3493/3961596996_367327afd9.jpg'\n\n    describe 'with WordPress.com images', ->\n      it 'should return correct URL for non-sized', (done) ->\n        newUrl.on 'data', (image) ->\n          chai.expect(image).to.equal 'http://tctechcrunch2011.files.wordpress.com/2013/07/henri-bergius3.jpg'\n          done()\n        url.send 'http://tctechcrunch2011.files.wordpress.com/2013/07/henri-bergius3.jpg'\n      it 'should return correct URL for thumbnails', (done) ->\n        newUrl.on 'data', (image) ->\n          chai.expect(image).to.equal 'https://tctechcrunch2011.files.wordpress.com/2013/07/henri-bergius3.jpg'\n          done()\n        url.send 'http://tctechcrunch2011.files.wordpress.com/2013/07/henri-bergius3.jpg?w=400'\n\n    describe 'with a small variant', ->\n      return if noflo.isBrowser()\n      it 'should return fullscale URL when one exists', (done) ->\n        newUrl.on 'data', (image) ->\n          chai.expect(image).to.equal 'http://s3.eu-central-1.amazonaws.com/bergie-iki-fi/ingress-table-test.jpg'\n          done()\n        url.send 'http://s3.eu-central-1.amazonaws.com/bergie-iki-fi/ingress-table-test-small.jpg'\n      it 'should return thumbnail URL when one doesn\\'t exist', (done) ->\n        newUrl.on 'data', (image) ->\n          chai.expect(image).to.equal 'http://bergie.iki.fi/files/deathmonkey-map-small.jpg'\n          done()\n        url.send 'http://bergie.iki.fi/files/deathmonkey-map-small.jpg'\n\n    describe 'with Wikimedia Commons thumbnails', ->\n      it 'should return correct URL for non-sized', (done) ->\n        newUrl.on 'data', (image) ->\n          chai.expect(image).to.equal 'http://upload.wikimedia.org/wikipedia/commons/7/7a/India_-_Varanasi_green_peas_-_2714.jpg'\n          done()\n        url.send 'http://upload.wikimedia.org/wikipedia/commons/7/7a/India_-_Varanasi_green_peas_-_2714.jpg'\n      it 'should return correct URL for thumbnails', (done) ->\n        newUrl.on 'data', (image) ->\n          chai.expect(image).to.equal 'https://upload.wikimedia.org/wikipedia/commons/7/7a/India_-_Varanasi_green_peas_-_2714.jpg'\n          done()\n        url.send 'http://upload.wikimedia.org/wikipedia/commons/thumb/7/7a/India_-_Varanasi_green_peas_-_2714.jpg/700px-India_-_Varanasi_green_peas_-_2714.jpg'\n      it 'should return correct URL for thumbnails with escaped characters', (done) ->\n        newUrl.on 'data', (image) ->\n          chai.expect(image).to.equal 'https://upload.wikimedia.org/wikipedia/commons/1/1f/Vistas_desde_la_iglesia_de_San_Pedro%2C_Riga%2C_Letonia%2C_2012-08-07%2C_DD_01.JPG'\n          done()\n        url.send 'http://upload.wikimedia.org/wikipedia/commons/thumb/1/1f/Vistas_desde_la_iglesia_de_San_Pedro%2C_Riga%2C_Letonia%2C_2012-08-07%2C_DD_01.JPG/1000px-Vistas_desde_la_iglesia_de_San_Pedro%2C_Riga%2C_Letonia%2C_2012-08-07%2C_DD_01.JPG'\n\n    describe 'with imgflo urls', ->\n      it 'should return URL unchanged when not a processing request', (done) ->\n        newUrl.on 'data', (image) ->\n          chai.expect(image).to.equal 'http://imgflo.herokuapp.com/'\n          done()\n        url.send 'http://imgflo.herokuapp.com/'\n      it 'should return URL unchanged when no input param', (done) ->\n        newUrl.on 'data', (image) ->\n          chai.expect(image).to.equal 'https://imgflo.herokuapp.com/graph/vahj1ThiexotieMo/fe974927812464bdb942e2ce8d03c9fb/canvas?width=150'\n          done()\n        url.send 'https://imgflo.herokuapp.com/graph/vahj1ThiexotieMo/fe974927812464bdb942e2ce8d03c9fb/canvas?width=150'\n      it 'should return input URL for gradientmap', (done) ->\n        newUrl.on 'data', (image) ->\n          chai.expect(image).to.equal 'http://i.huffpost.com/gen/2211142/thumbs/o-ELON-MUSK-facebook.jpg'\n          done()\n        url.send 'https://imgflo.herokuapp.com/graph/vahj1ThiexotieMo/fb5e9435a73ca48b11618a773e40389e/gradientmap.jpg?input=http%3A%2F%2Fi.huffpost.com%2Fgen%2F2211142%2Fthumbs%2Fo-ELON-MUSK-facebook.jpg&width=2000&height=1000&stop1=0&stop2=1&color1=%235a858c&color2=%2370ccc7&opacity=1&srgb=True'\n\n    describe 'with gravatar.com urls', ->\n      it 'should return URL unchanged when not an avatar', (done) ->\n        newUrl.on 'data', (image) ->\n          chai.expect(image).to.equal 'https://en.gravatar.com/images/support-matts-profile.png'\n          done()\n        url.send 'https://en.gravatar.com/images/support-matts-profile.png'\n      it 'should modify s parameter for avatars', (done) ->\n        newUrl.on 'data', (image) ->\n          chai.expect(image).to.equal 'http://1.gravatar.com/avatar/ad3c9298254a01276827a5ad9485181b?s=512&d=mm&r=g'\n          done()\n        url.send 'http://1.gravatar.com/avatar/ad3c9298254a01276827a5ad9485181b?s=48&d=mm&r=g'\n      it 'should modify size parameter for avatars', (done) ->\n        newUrl.on 'data', (image) ->\n          chai.expect(image).to.equal 'http://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50?size=512'\n          done()\n        url.send 'http://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50?size=200'\n      it 'should add size parameter for avatar if not existing', (done) ->\n        newUrl.on 'data', (image) ->\n          chai.expect(image).to.equal 'http://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50?size=512'\n          done()\n        url.send 'http://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50'\n"},"image/VideoToCanvas":{language:"coffeescript",source:"noflo = require 'noflo'\n\nif noflo.isBrowser()\n  requestAnimationFrame =\n    window.requestAnimationFrame       ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame    ||\n    window.oRequestAnimationFrame      ||\n    window.msRequestAnimationFrame     ||\n    (callback, element) ->\n      window.setTimeout( ->\n        callback(+new Date())\n      , 1000 / 60)\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Convert video to canvas.'\n  c.icon = 'file-image-o'\n  c.inPorts.add 'video',\n    description: 'video element to draw to canvas'\n    datatype: 'object'\n    required: true\n  c.inPorts.add 'canvas',\n    description: '(optional) if not hit, component will create canvas'\n    datatype: 'object'\n    required: false\n  c.outPorts.add 'canvas',\n    description: 'will send canvas with each video frame drawn'\n    datatype: 'object'\n  c.outPorts.add 'error',\n    datatype: 'object'\n  c.forwardBrackets =\n    video: ['canvas']\n  c.process (input, output) ->\n    return unless input.hasData 'video'\n    return if input.attached('canvas').length and not input.hasData 'canvas'\n    video = input.getData 'video'\n    unless video?.tagName is 'VIDEO'\n      output.done new Error 'Video must be a VIDEO DOM element'\n      return\n    if input.hasData 'canvas'\n      canvas = input.getData 'canvas'\n    else\n      unless video.videoWidth\n        # Metadata not loaded yet\n        output.done 'Video width not available'\n        return\n      if noflo.isBrowser()\n        canvas = document.createElement 'canvas'\n        canvas.width = video.videoWidth\n        canvas.height = video.videoHeight\n      else\n        Canvas = require('noflo-canvas').canvas\n        canvas = new Canvas video.videoWidth, video.videoHeight\n    context = canvas.getContext '2d'\n\n    lastTime = -1\n    shutdownNextFrame = false\n    extractFrame = ->\n      if lastTime is video.currentTime\n        # Frame hasn't advanced, wait more\n        requestAnimationFrame extractFrame\n        return\n      if video.currentTime < lastTime\n        # Video is looping, bail out\n        output.done()\n        return\n      if video.currentTime is video.duration\n        # Video finished\n        output.done()\n        return\n      lastTime = video.currentTime\n      context.drawImage video, 0, 0\n      output.send\n        canvas: canvas\n      requestAnimationFrame extractFrame\n\n    # Get first frame\n    do extractFrame\n    return\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai' unless chai\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\n  testutils = require './testutils'\nelse\n  baseDir = '/noflo-image'\n  testutils = require 'noflo-image/spec/testutils.js'\n\ndescribe 'VideoToCanvas component', ->\n  c = null\n  inVideo = null\n  outCanvas = null\n\n  beforeEach (done) ->\n    @timeout 10000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'image/VideoToCanvas', (err, instance) ->\n      return done err if err\n      c = instance\n      inVideo = noflo.internalSocket.createSocket()\n      outCanvas = noflo.internalSocket.createSocket()\n      c.inPorts.video.attach inVideo\n      c.outPorts.canvas.attach outCanvas\n      done()\n\n  describe 'when instantiated', ->\n    it 'should have two input ports', ->\n      chai.expect(c.inPorts.video).to.be.an 'object'\n      chai.expect(c.inPorts.canvas).to.be.an 'object'\n    it 'should have one output port', ->\n      chai.expect(c.outPorts.canvas).to.be.an 'object'\n\n# TODO! test video in, canvas out\n"},"image/CreateImage":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n# @name CreateImage\n\nexports.getComponent = ->\n  c = new noflo.Component\n\n  c.description = 'Loads an image from given url, sends the element'\n  c.icon = 'picture-o'\n\n  c.inPorts.add 'url',\n    datatype: 'string'\n    description: 'Image URL'\n  c.inPorts.add 'crossorigin',\n    datatype: 'string'\n    description: 'crossorigin Anonymous for CORS-enabled server'\n    required: false\n  c.outPorts.add 'image',\n    datatype: 'object'\n    description: 'Loaded image'\n  c.outPorts.add 'error',\n    datatype: 'object'\n\n  noflo.helpers.WirePattern c,\n    in: 'url'\n    params: 'crossorigin'\n    out: 'image'\n    forwardGroups: true\n    async: true\n  , (url, groups, out, callback) ->\n    image = new Image()\n    image.crossOrigin = c.params.crossorigin if c.params.crossorigin\n    image.onload = () ->\n      out.beginGroup url\n      out.send image\n      out.endGroup()\n      do callback\n      return\n    image.onerror = (err) ->\n      err.url = url\n      return callback err\n    image.src = url\n    return\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai' unless chai\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = '/noflo-image'\n\ndescribe 'CreateImage component', ->\n  c = null\n  ins = null\n  sock_cors = null\n  out = null\n  error = null\n  beforeEach (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'image/CreateImage', (err, instance) ->\n      return done err if err\n      c = instance\n      ins = noflo.internalSocket.createSocket()\n      sock_cors = noflo.internalSocket.createSocket()\n      out = noflo.internalSocket.createSocket()\n      error = noflo.internalSocket.createSocket()\n      c.inPorts.url.attach ins\n      c.inPorts.crossorigin.attach sock_cors\n      c.outPorts.image.attach out\n      c.outPorts.error.attach error\n      done()\n\n  describe 'when instantiated', ->\n    it 'should have an input port', ->\n      chai.expect(c.inPorts.url).to.be.an 'object'\n    it 'should have an output port', ->\n      chai.expect(c.outPorts.image).to.be.an 'object'\n\n  describe 'with file system image', ->\n    unless noflo.isBrowser()\n      it 'should make image from file system test image', (done) ->\n        out.once 'data', (data) ->\n          chai.expect(data.width).to.equal 80\n          chai.expect(data.height).to.equal 80\n          done()\n        ins.send 'spec/test-80x80.jpg'\n      it 'should send an error for zero-sized images', (done) ->\n        error.once 'data', (data) ->\n          chai.expect(data.url).to.equal 'spec/empty.jpg'\n          done()\n        ins.send 'spec/empty.jpg'\n\n  describe 'with remote test image', ->\n    url = 'http://1.gravatar.com/avatar/40a5769da6d979c1ebc47cdec887f24a'\n    it 'should have the correct group', (done) ->\n      out.once 'begingroup', (group) ->\n        chai.expect(group).to.equal url\n        done()\n      ins.send url\n    it 'should find correct dimensions', (done) ->\n      @timeout 0\n      error.once 'data', (data) -> done(data)\n      out.once 'data', (data) ->\n        chai.expect(data.width).to.equal 80\n        chai.expect(data.height).to.equal 80\n        done()\n      ins.send url\n\n  describe 'with remote JPG image', ->\n    @timeout 10000\n    url = 'http://s3.eu-central-1.amazonaws.com/bergie-iki-fi/flowhub-promo.jpg'\n    it 'should have the correct group', (done) ->\n      out.once 'begingroup', (group) ->\n        chai.expect(group).to.equal url\n        done()\n      ins.send url\n    it 'should find correct dimensions', (done) ->\n      @timeout 0\n      error.once 'data', (data) -> done(data)\n      out.once 'data', (data) ->\n        chai.expect(data.width).to.equal 770\n        chai.expect(data.height).to.equal 376\n        done()\n      ins.send url\n\n  describe 'with missing remote image', ->\n    return if noflo.isBrowser()\n    url = 'http://bergie.iki.fi/files/this-file-doesnt-exist-promo.jpg'\n    it 'should do a correct error', (done) ->\n      @timeout 0\n      error.once 'data', (data) ->\n        chai.expect(data.url).to.equal url\n        done()\n      ins.send url\n\n  if noflo.isBrowser()\n\n    describe 'with CORS-served image', ->\n      it 'should be cors-enabled', (done) ->\n        url = 'http://i.meemoo.me/v1/out/gf06kZyrQW6DWmwMf5zp_meemoo.png'\n        sock_cors.send 'Anonymous'\n        out.once 'data', (data) ->\n          chai.expect(data).to.exist\n          done()\n        ins.send url\n      # it 'should error', (done) ->\n      #   url = 'http://meemoo.org/hack-our-apps/shots/monochrome.png'\n      #   sock_cors.send 'Anonymous'\n      #   error.once 'data', (data) ->\n      #     chai.expect(data).to.be.an 'object'\n      #     done()\n      #   ins.send url\n"},"image/Measure":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n# @name Measure\n\nexports.getComponent = ->\n  c = new noflo.Component\n\n  c.description = 'Load image from URL and get dimensions'\n  c.icon = 'picture-o'\n\n  c.inPorts.add 'url',\n    datatype: 'string'\n    description: 'URL to load image'\n  c.outPorts.add 'dimensions',\n    datatype: 'object'\n    description: 'Image dimensions'\n  c.outPorts.add 'error',\n    datatype: 'object'\n\n  noflo.helpers.WirePattern c,\n    in: 'url'\n    out: 'dimensions'\n    forwardGroups: true\n    async: true\n  , (url, groups, out, callback) ->\n    image = new Image()\n    image.onload = () ->\n      if (image.naturalWidth? and image.naturalWidth is 0) or image.width is 0\n        image.onerror new Error \"#{url} didn't come back as a valid image.\"\n        return\n      dimensions =\n        width: image.width\n        height: image.height\n      out.beginGroup url\n      out.send dimensions\n      out.endGroup()\n      do callback\n    image.onerror = (err) ->\n      err.url = url\n      return callback err\n    image.src = url\n    return\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai' unless chai\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = '/noflo-image'\n\ndescribe 'Measure component', ->\n  c = null\n  ins = null\n  out = null\n  error = null\n  beforeEach (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'image/Measure', (err, instance) ->\n      return done err if err\n      c = instance\n      ins = noflo.internalSocket.createSocket()\n      out = noflo.internalSocket.createSocket()\n      error = noflo.internalSocket.createSocket()\n      c.inPorts.url.attach ins\n      c.outPorts.dimensions.attach out\n      c.outPorts.error.attach error\n      done()\n\n  describe 'when instantiated', ->\n    it 'should have an input port', ->\n      chai.expect(c.inPorts.url).to.be.an 'object'\n    it 'should have an output port', ->\n      chai.expect(c.outPorts.dimensions).to.be.an 'object'\n\n  describe 'with file system image', ->\n    unless noflo.isBrowser()\n      it 'should get dimensions of file system test image', (done) ->\n        out.once 'data', (data) ->\n          chai.expect(data.width).to.equal 80\n          chai.expect(data.height).to.equal 80\n          done()\n        ins.send 'spec/test-80x80.jpg'\n\n  describe 'with remote test image', ->\n    url = 'http://1.gravatar.com/avatar/40a5769da6d979c1ebc47cdec887f24a'\n    it 'should have the correct group', (done) ->\n      @timeout 10000\n      out.once 'begingroup', (group) ->\n        chai.expect(group).to.equal url\n        done()\n      ins.beginGroup url\n      ins.send url\n      ins.endGroup()\n    it 'should find correct dimensions', (done) ->\n      @timeout 10000\n      error.once 'data', (data) ->\n        chai.expect(true).to.equal false\n        done()\n      out.once 'data', (data) ->\n        chai.expect(data.width).to.equal 80\n        chai.expect(data.height).to.equal 80\n        done()\n      ins.send url\n\n  describe 'with remote JPG image', ->\n    url = 'http://s3.eu-central-1.amazonaws.com/bergie-iki-fi/flowhub-promo.jpg'\n    it 'should have the correct group', (done) ->\n      out.once 'begingroup', (group) ->\n        chai.expect(group).to.equal url\n        done()\n      ins.beginGroup url\n      ins.send url\n      ins.endGroup()\n    it 'should find correct dimensions', (done) ->\n      @timeout 0\n      error.once 'data', (data) ->\n        chai.expect(true).to.equal false\n        done()\n      out.once 'data', (data) ->\n        chai.expect(data.width).to.equal 770\n        chai.expect(data.height).to.equal 376\n        done()\n      ins.send url\n"},"indexeddb/AbortTransaction":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @platform noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Abort an IndexedDB transaction'\n  c.inPorts.add 'transaction',\n    datatype: 'object'\n  c.outPorts.add 'transaction',\n    datatype: 'object'\n  c.outPorts.add 'error',\n    datatype: 'object'\n  c.forwardBrackets =\n    transaction: ['transaction', 'error']\n  c.process (input, output) ->\n    return unless input.hasData 'transaction'\n    transaction = input.getData 'transaction'\n    transaction.onerror = (err) ->\n      output.done err\n    transaction.onabort = (err) ->\n      output.sendDone\n        transaction: transaction\n    transaction.abort()\n"},"indexeddb/BeginTransaction":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @platform noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Start an IndexedDB transaction'\n  c.inPorts.add 'stores',\n    datatype: 'string'\n  c.inPorts.add 'db',\n    datatype: 'object'\n  c.inPorts.add 'mode',\n    datatype: 'string'\n    default: 'readwrite'\n    control: true\n  c.outPorts.add 'transaction',\n    datatype: 'object'\n  c.outPorts.add 'db',\n    datatype: 'object'\n  c.outPorts.add 'error',\n    datatype: 'object'\n  c.outPorts.add 'complete',\n    datatype: 'bang'\n  c.forwardBrackets =\n    stores: ['transaction', 'db', 'error', 'complete']\n  c.process (input, output) ->\n    return unless input.hasData 'db', 'stores'\n    mode = if input.hasData('mode') then input.getData('mode') else 'readwrite'\n    [db, stores] = input.getData 'db', 'stores'\n    if typeof stores is 'string'\n      stores = stores.split ','\n    try\n      transaction = db.transaction stores, mode\n    catch e\n      return output.done e\n    transaction.oncomplete = ->\n      output.send\n        complete: true\n      transaction.onerror = null\n      transaction.oncomplete = null\n      output.done()\n    transaction.onerror = (err) ->\n      output.done err\n    output.send\n      transaction: transaction\n    output.send\n      db: db\n",tests:"noflo = require 'noflo'\niDB = window.overrideIndexedDB or window.indexedDB or window.mozIndexedDB or window.webkitIndexedDB or window.msIndexedDB\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-indexeddb'\n\ndescribe 'BeginTransaction component', ->\n  c = null\n  stores = null\n  db = null\n  transaction = null\n  dbName = 'begintransaction'\n  loader = null\n  before ->\n    loader = new noflo.ComponentLoader baseDir\n  beforeEach (done) ->\n    @timeout 4000\n    loader.load 'indexeddb/BeginTransaction', (err, instance) ->\n      return done err if err\n      c = instance\n      stores = noflo.internalSocket.createSocket()\n      db = noflo.internalSocket.createSocket()\n      transaction = noflo.internalSocket.createSocket()\n      c.inPorts.stores.attach stores\n      c.inPorts.db.attach db\n      c.outPorts.transaction.attach transaction\n      done()\n  after (done) ->\n    req = iDB.deleteDatabase dbName\n    req.onsuccess = -> done()\n\n  describe 'on upgrade request', ->\n    it 'should be able to begin transaction', (done) ->\n      dbInstance = null\n      transaction.on 'data', (data) ->\n        chai.expect(typeof data).to.equal 'object'\n        dbInstance.close()\n        done()\n      stores.send 'items,users'\n      req = iDB.open dbName, 1\n      req.onupgradeneeded = (e) ->\n        e.target.result.createObjectStore 'items'\n        e.target.result.createObjectStore 'users'\n      req.onsuccess = (e) ->\n        dbInstance = e.target.result\n        db.send dbInstance\n"},"indexeddb/Close":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @platform noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Close an IndexedDB database'\n  c.inPorts.add 'db',\n    datatype: 'object'\n  c.outPorts.add 'closed',\n    datatype: 'bang'\n  c.forwardBrackets =\n    db: ['closed']\n  c.process (input, output) ->\n    return unless input.hasData 'db'\n    db = input.getData 'db'\n    db.onclose = ->\n      output.sendDone\n        closed: true\n    db.close()\n"},"indexeddb/CreateIndex":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @platform noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Add an index to an IndexedDB database'\n  c.inPorts.add 'store',\n    datatype: 'object'\n  c.inPorts.add 'name',\n    datatype: 'string'\n  c.inPorts.add 'keypath',\n    datatype: 'string'\n  c.inPorts.add 'unique',\n    datatype: 'boolean'\n    control: true\n    default: false\n  c.inPorts.add 'multientry',\n    datatype: 'boolean'\n    control: true\n    default: false\n  c.outPorts.add 'index',\n    datatype: 'object'\n  c.outPorts.add 'store',\n    datatype: 'object'\n  c.outPorts.add 'error',\n    datatype: 'object'\n  c.forwardBrackets =\n    name: ['index', 'store', 'error']\n  c.process (input, output) ->\n    return unless input.hasData 'store', 'name', 'keypath'\n    unique = if input.hasData('unique') then input.getData('unique') else false\n    multiEntry = if input.hasData('multientry') then input.getData('multientry') else false\n    [store, name, keyPath] = input.getData 'store', 'name', 'keypath'\n    store.onerror = (err) ->\n      output.done err\n    index = store.createIndex name, keyPath,\n      unique: unique\n      multiEntry: multiEntry\n    store.onerror = null\n    output.sendDone\n      index: index\n      store: store\n"},"indexeddb/CreateStore":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @platform noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Add an object store to an IndexedDB database'\n  c.inPorts.add 'name',\n    datatype: 'string'\n  c.inPorts.add 'db',\n    datatype: 'object'\n  c.inPorts.add 'keypath',\n    datatype: 'string'\n    control: true\n  c.inPorts.add 'autoincrement',\n    datatype: 'boolean'\n    control: true\n    default: false\n  c.outPorts.add 'store',\n    datatype: 'object'\n  c.outPorts.add 'db',\n    datatype: 'object'\n  c.outPorts.add 'error',\n    datatype: 'object'\n  c.forwardBrackets =\n    name: ['store', 'error']\n  c.process (input, output) ->\n    return unless input.hasData 'name', 'db'\n    keyPath = if input.hasData('keypath') then input.getData('keypath') else ''\n    autoIncrement = if input.hasData('autoincrement') then input.getData('autoincrement') else false\n    [name, db] = input.getData 'name', 'db'\n    db.transaction.onerror = (err) ->\n      output.done err\n    store = db.createObjectStore name,\n      keyPath: keyPath\n      autoIncrement: autoIncrement\n    db.transaction.onerror = null\n    output.send\n      store: store\n      db: db\n    output.done()\n",tests:"noflo = require 'noflo'\niDB = window.overrideIndexedDB or window.indexedDB or window.mozIndexedDB or window.webkitIndexedDB or window.msIndexedDB\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-indexeddb'\n\ndescribe 'CreateStore component', ->\n  c = null\n  name = null\n  db = null\n  store = null\n  keypath = null\n  dbName = 'createstore'\n  loader = null\n  before ->\n    loader = new noflo.ComponentLoader baseDir\n  beforeEach (done) ->\n    @timeout 4000\n    loader.load 'indexeddb/CreateStore', (err, instance) ->\n      return done err if err\n      c = instance\n      name = noflo.internalSocket.createSocket()\n      db = noflo.internalSocket.createSocket()\n      store = noflo.internalSocket.createSocket()\n      keypath = noflo.internalSocket.createSocket()\n      c.inPorts.name.attach name\n      c.inPorts.db.attach db\n      c.inPorts.keypath.attach keypath\n      c.outPorts.store.attach store\n      done()\n  after (done) ->\n    req = iDB.deleteDatabase dbName\n    req.onsuccess = -> done()\n\n  describe 'on upgrade request', ->\n    it 'should be able to create an object store', (done) ->\n      dbInstance = null\n      store.on 'data', (data) ->\n        chai.expect(typeof data).to.equal 'object'\n      store.on 'disconnect', ->\n        dbInstance.close()\n        done()\n      keypath.send 'foo'\n      name.send 'items'\n      req = iDB.open dbName, 1\n      req.onupgradeneeded = (e) ->\n        dbInstance = e.target.result\n        db.send dbInstance\n"},"indexeddb/Delete":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @platform noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Remove an item from an IndexedDB database'\n  c.icon = 'trash'\n  c.inPorts.add 'store',\n    datatype: 'object'\n  c.inPorts.add 'key',\n    datatype: 'string'\n  c.outPorts.add 'store',\n    datatype: 'object'\n  c.outPorts.add 'key',\n    datatype: 'string'\n  c.outPorts.add 'error',\n    datatype: 'object'\n  c.forwardBrackets =\n    key: ['key', 'error']\n  c.process (input, output) ->\n    return unless input.hasData 'store', 'key'\n    [store, key] = input.getData 'store', 'key'\n    req = store.delete key\n    req.onerror = (err) ->\n      output.done err\n    req.onsuccess = (e) ->\n      output.send\n        store: store\n        key: key\n      output.done()\n"},"indexeddb/DeleteDatabase":{language:"coffeescript",source:"noflo = require 'noflo'\nindexedDB = require '../vendor/IndexedDB'\n\n# @platform noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Delete an IndexedDB database'\n  c.icon = 'trash'\n  c.inPorts.add 'name',\n    datatype: 'string'\n  c.outPorts.add 'deleted',\n    datatype: 'bang'\n  c.outPorts.add 'error',\n    datatype: 'object'\n  c.forwardBrackets =\n    name: ['deleted', 'error']\n  c.process (input, output) ->\n    return unless input.hasData 'name'\n    name = input.getData 'name'\n    req = indexedDB.deleteDatabase name\n    req.onerror = (err) ->\n      output.done err\n    req.onsuccess = ->\n      output.sendDone\n        deleted: true\n"},"indexeddb/DeleteStore":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @platform noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Delete an object store from an IndexedDB database'\n  c.icon = 'trash'\n  c.inPorts.add 'name',\n    datatype: 'string'\n  c.inPorts.add 'db',\n    datatype: 'object'\n  c.outPorts.add 'deleted',\n    datatype: 'string'\n  c.outPorts.add 'db',\n    datatype: 'object'\n  c.outPorts.add 'error',\n    datatype: 'object'\n  c.forwardBrackets =\n    name: ['deleted', 'error']\n  c.process (input, output) ->\n    return unless input.hasData 'name', 'db'\n    [name, db] = input.getData 'name', 'db'\n    db.transaction.onerror = (err) ->\n      output.done err\n    db.deleteObjectStore name\n    db.transaction.onerror = null\n    output.sendDone\n      deleted: name\n      db: db\n",tests:"noflo = require 'noflo'\niDB = window.overrideIndexedDB or window.indexedDB or window.mozIndexedDB or window.webkitIndexedDB or window.msIndexedDB\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-indexeddb'\n\ndescribe 'DeleteStore component', ->\n  c = null\n  name = null\n  db = null\n  err = null\n  outDb = null\n  dbName = 'deletestore'\n  dbName = 'begintransaction'\n  loader = null\n  before ->\n    loader = new noflo.ComponentLoader baseDir\n  beforeEach (done) ->\n    @timeout 4000\n    loader.load 'indexeddb/DeleteStore', (e, instance) ->\n      return done e if e\n      c = instance\n      name = noflo.internalSocket.createSocket()\n      db = noflo.internalSocket.createSocket()\n      outDb = noflo.internalSocket.createSocket()\n      err = noflo.internalSocket.createSocket()\n      c.inPorts.name.attach name\n      c.inPorts.db.attach db\n      c.outPorts.db.attach outDb\n      c.outPorts.error.attach err\n      done()\n  after (done) ->\n    req = iDB.deleteDatabase dbName\n    req.onsuccess = -> done()\n\n  describe 'on upgrade request', ->\n    it 'should be able to delete an object store', (done) ->\n      dbInstance = null\n\n      err.once 'data', (data) ->\n        dbInstance.close()\n        done data\n      outDb.on 'data', (data) ->\n        chai.expect(typeof data).to.equal 'object'\n        chai.expect(data.objectStoreNames.contains('items')).to.equal false\n      name.send 'items'\n      req = iDB.open dbName, 1\n      req.onupgradeneeded = (e) ->\n        e.target.result.createObjectStore 'items'\n      req.onsuccess = (e) ->\n        e.target.result.close()\n        req2 = iDB.open dbName, 2\n        req2.onupgradeneeded = (e) ->\n          dbInstance = e.target.result\n          db.send dbInstance\n        req2.onsuccess = (e) ->\n          dbInstance.close()\n          done()\n"},"indexeddb/Get":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @platform noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Get an entry from an IndexedDB database'\n  c.inPorts.add 'store',\n    datatype: 'object'\n  c.inPorts.add 'key',\n    datatype: 'string'\n  c.outPorts.add 'store',\n    datatype: 'object'\n  c.outPorts.add 'item',\n    datatype: 'all'\n  c.outPorts.add 'error',\n    datatype: 'object'\n  c.forwardBrackets =\n    key: ['item', 'error']\n  c.process (input, output) ->\n    return unless input.hasData 'store', 'key'\n    [store, key] = input.getData 'store', 'key'\n    req = store.get key\n    output.send\n      store: store\n    req.onerror = (err) ->\n      output.done err\n    req.onsuccess = (e) ->\n      output.sendDone\n        item: e.target.result\n"},"indexeddb/GetIndex":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @platform noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Get an index from an IndexedDB database'\n  c.inPorts.add 'store',\n    datatype: 'object'\n  c.inPorts.add 'name',\n    datatype: 'string'\n  c.outPorts.add 'index',\n    datatype: 'object'\n  c.outPorts.add 'error',\n    datatype: 'object'\n  c.forwardBrackets =\n    name: ['index', 'error']\n  c.process (input, output) ->\n    return unless input.hasData 'store', 'name'\n    [store, name] = input.getData 'store', 'name'\n    store.onerror = (err) ->\n      output.done err\n    index = store.index name\n    store.onerror = null\n    output.sendDone\n      index: index\n"},"indexeddb/GetStore":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @platform noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Get an object store from an IndexedDB database'\n  c.inPorts.add 'name',\n    datatype: 'string'\n  c.inPorts.add 'transaction',\n    datatype: 'object'\n  c.outPorts.add 'store',\n    datatype: 'object'\n  c.outPorts.add 'transaction',\n    datatype: 'object'\n  c.outPorts.add 'error',\n    datatype: 'object'\n  c.forwardBrackets =\n    name: ['store', 'error']\n  c.process (input, output) ->\n    return unless input.hasData 'name', 'transaction'\n    [name, transaction] = input.getData 'name', 'transaction'\n    transaction.onerror = (err) ->\n      output.done err\n    store = transaction.objectStore name\n    transaction.onerror = null\n    output.sendDone\n      store: store\n      transaction: transaction\n"},"indexeddb/Open":{language:"coffeescript",source:"noflo = require 'noflo'\nindexedDB = require '../vendor/IndexedDB'\n\n# @platform noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Open an IndexedDB database'\n  c.inPorts.add 'name',\n    datatype: 'string'\n  c.inPorts.add 'version',\n    datatype: 'integer'\n  c.outPorts.add 'upgrade',\n    datatype: 'object'\n  c.outPorts.add 'db',\n    datatype: 'object'\n  c.outPorts.add 'error',\n    datatype: 'object'\n  c.forwardBrackets =\n    name: ['db', 'error']\n  c.process (input, output) ->\n    return unless input.hasData 'name', 'version'\n    [name, version] = input.getData 'name', 'version'\n    req = indexedDB.open name, parseInt version\n    req.onerror = (err) ->\n      output.done err\n    req.onupgradeneeded = (e) ->\n      output.send\n        upgrade:\n          oldVersion: e.oldVersion\n          newVersion: parseInt version\n          db: e.target.result\n    req.onsuccess = (e) ->\n      output.sendDone\n        db: e.target.result\n",tests:"noflo = require 'noflo'\niDB = window.overrideIndexedDB or window.indexedDB or window.mozIndexedDB or window.webkitIndexedDB or window.msIndexedDB\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-indexeddb'\n\ndescribe 'Open component', ->\n  c = null\n  name = null\n  version = null\n  upgrade = null\n  db = null\n  error = null\n  loader = null\n  before ->\n    loader = new noflo.ComponentLoader baseDir\n  beforeEach (done) ->\n    @timeout 4000\n    loader.load 'indexeddb/Open', (err, instance) ->\n      return done err if err\n      c = instance\n      name = noflo.internalSocket.createSocket()\n      version = noflo.internalSocket.createSocket()\n      upgrade = noflo.internalSocket.createSocket()\n      db = noflo.internalSocket.createSocket()\n      error = noflo.internalSocket.createSocket()\n      c.inPorts.name.attach name\n      c.inPorts.version.attach version\n      c.outPorts.upgrade.attach upgrade\n      c.outPorts.db.attach db\n      c.outPorts.error.attach error\n      done()\n  after (done) ->\n    req = iDB.deleteDatabase 'opendb'\n    req.onsuccess = -> done()\n\n  describe 'on first openining', ->\n    it 'should provide upgrade request', (done) ->\n      upgrade.once 'data', (data) ->\n        chai.expect(typeof data).to.equal 'object'\n        chai.expect(data.oldVersion).to.equal 0\n        chai.expect(typeof data.db).to.equal 'object'\n        data.db.close()\n        done()\n      name.send 'opendb'\n      version.send 1\n  describe 'on second opening', ->\n    it 'should provide the DB', (done) ->\n      up = false\n      upgrade.once 'data', (data) ->\n        up = true\n      db.once 'data', (data) ->\n        chai.expect(up).to.equal false\n        chai.expect(typeof data).to.equal 'object'\n        data.close()\n        done()\n      name.send 'opendb'\n      version.send 1\n"},"indexeddb/Put":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @platform noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Store an object into an IndexedDB store'\n  c.inPorts.add 'store',\n    datatype: 'object'\n  c.inPorts.add 'value',\n    datatype: 'all'\n  c.outPorts.add 'store',\n    datatype: 'object'\n  c.outPorts.add 'key',\n    datatype: 'string'\n  c.outPorts.add 'value',\n    datatype: 'all'\n  c.outPorts.add 'error',\n    datatype: 'object'\n  c.forwardBrackets =\n    value: ['key', 'value', 'error']\n  c.process (input, output) ->\n    return unless input.hasData 'store', 'value'\n    [store, value] = input.getData 'store', 'value'\n    req = store.put value\n    output.send\n      store: store\n    req.onerror = (err) ->\n      output.done err\n    req.onsuccess = (e) ->\n      output.sendDone\n        key: e.target.result\n        value: value\n"},"indexeddb/Query":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @platform noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.icon = 'search'\n  c.description = 'Query a store in an IndexedDB database'\n  c.inPorts.add 'store',\n    datatype: 'object'\n  c.inPorts.add 'range',\n    datatype: 'object'\n  c.inPorts.add 'all',\n    datatype: 'bang'\n  c.outPorts.add 'item',\n    datatype: 'all'\n  c.outPorts.add 'range',\n    datatype: 'object'\n  c.outPorts.add 'empty',\n    datatype: 'object'\n  c.outPorts.add 'error',\n    datatype: 'object'\n  c.forwardBrackets =\n    all: ['item', 'error']\n    range: ['item', 'error']\n  c.process (input, output) ->\n    return unless input.hasData 'store'\n    bracketed = false\n    step = (e) ->\n      cursor = e.target.result\n      unless cursor\n        if bracketed\n          output.send\n            item: new noflo.IP 'closeBracket'\n        else\n          output.send\n            empty: true\n        output.done()\n        return\n      unless bracketed\n        output.send\n          item: new noflo.IP 'openBracket'\n        bracketed = true\n      output.send\n        item: cursor.value\n      cursor.continue()\n    if input.hasData 'all'\n      [store, all] = input.getData 'store', 'all'\n      req = store.openCursor()\n      req.onerror = (err) ->\n        output.done err\n      req.onsuccess = step\n      return\n    if input.hasData 'range'\n      [store, range] = input.getData 'store', 'range'\n      output.send\n        range: range\n      req = store.openCursor range\n      req.onerror = (err) ->\n        output.done err\n      req.onsuccess = step\n",tests:"noflo = require 'noflo'\niDB = window.overrideIndexedDB or window.indexedDB or window.mozIndexedDB or window.webkitIndexedDB or window.msIndexedDB\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-indexeddb'\n\ndescribe 'Query component', ->\n  c = null\n  store = null\n  all = null\n  item = null\n  empty = null\n  error = null\n  dbName = 'query'\n  dbInstance = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'indexeddb/Query', (err, instance) ->\n      return done err if err\n      c = instance\n      store = noflo.internalSocket.createSocket()\n      all = noflo.internalSocket.createSocket()\n      c.inPorts.store.attach store\n      c.inPorts.all.attach all\n      req = iDB.open dbName, 1\n      req.onupgradeneeded = (e) ->\n        e.target.result.createObjectStore 'items',\n          keyPath: 'id'\n      req.onsuccess = (e) ->\n        dbInstance = e.target.result\n        done()\n      req.onerror = done\n  after (done) ->\n    dbInstance.close()\n    req = iDB.deleteDatabase dbName\n    req.onsuccess = -> done()\n    req.onerror = done\n  beforeEach ->\n    item = noflo.internalSocket.createSocket()\n    empty = noflo.internalSocket.createSocket()\n    error = noflo.internalSocket.createSocket()\n    c.outPorts.item.attach item\n    c.outPorts.empty.attach empty\n    c.outPorts.error.attach error\n  afterEach ->\n    c.outPorts.item.detach item\n    c.outPorts.empty.detach empty\n    c.outPorts.error.detach error\n\n  describe 'with an empty database', ->\n    it 'it should send to empty', (done) ->\n      dbTransaction = dbInstance.transaction ['items']\n      dbStore = dbTransaction.objectStore 'items'\n      item.on 'data', ->\n        done new Error 'Unexpected item received'\n      empty.on 'data', ->\n        done()\n      error.on 'data', (err) ->\n        done err\n      store.send dbStore\n      all.send true\n\n  describe 'with a populated database', ->\n    before (done) ->\n      dbTransaction = dbInstance.transaction ['items'], 'readwrite'\n      dbTransaction.oncomplete = ->\n        done()\n      dbTransaction.onerror = done\n      dbStore = dbTransaction.objectStore 'items'\n      req = dbStore.put\n        id: 1\n        hello: 'world'\n      req.onerror = done\n      req.onsuccess = ->\n        req = dbStore.put\n          id: 2\n          foo: 'bar'\n        req.onerror = done\n    it 'it should send a stream of results', (done) ->\n      dbTransaction = dbInstance.transaction ['items']\n      dbStore = dbTransaction.objectStore 'items'\n\n      expected = [\n        '<'\n        '{\"id\":1,\"hello\":\"world\"}'\n        '{\"id\":2,\"foo\":\"bar\"}'\n        '>'\n      ]\n      received = []\n      item.on 'ip', (ip) ->\n        if ip.type is 'openBracket'\n          received.push '<'\n        if ip.type is 'data'\n          received.push JSON.stringify ip.data\n        if ip.type is 'closeBracket'\n          received.push '>'\n        return unless received.length is expected.length\n        chai.expect(received).to.eql expected\n        done()\n      empty.on 'data', ->\n        done new Error 'Unexpected empty received'\n      error.on 'data', (err) ->\n        done err\n      store.send dbStore\n      all.send true\n"},"indexeddb/QueryFrom":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @platform noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.icon = 'search'\n  c.description = 'Query starting from a key in store in an IndexedDB database'\n  c.inPorts.add 'value',\n    datatype: 'all'\n  c.inPorts.add 'including',\n    datatype: 'boolean'\n    control: true\n    default: false\n  c.outPorts.add 'range',\n    datatype: 'object'\n  c.forwardBrackets =\n    value: ['range']\n  c.process (input, output) ->\n    return unless input.hasData 'value'\n    value = input.getData 'value'\n    including = if input.hasData('including') then input.getData('including') else false\n    range = IDBKeyRange.lowerBound value, including\n    output.sendDone\n      range: range\n"},"indexeddb/QueryOnly":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @platform noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.icon = 'search'\n  c.description = 'Query only a key in store in an IndexedDB database'\n  c.inPorts.add 'value',\n    datatype: 'all'\n  c.outPorts.add 'range',\n    datatype: 'object'\n  c.forwardBrackets =\n    value: ['range']\n  c.process (input, output) ->\n    return unless input.hasData 'value'\n    value = input.getData 'value'\n    range = IDBKeyRange.only value\n    output.sendDone\n      range: range\n"},"indexeddb/QueryTo":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @platform noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.icon = 'search'\n  c.description = 'Query up to a key in store in an IndexedDB database'\n  c.inPorts.add 'value',\n    datatype: 'all'\n  c.inPorts.add 'including',\n    datatype: 'boolean'\n    control: true\n    default: false\n  c.outPorts.add 'range',\n    datatype: 'object'\n  c.forwardBrackets =\n    value: ['range']\n  c.process (input, output) ->\n    return unless input.hasData 'value'\n    value = input.getData 'value'\n    including = if input.hasData('including') then input.getData('including') else false\n    range = IDBKeyRange.upperBound value, including\n    output.sendDone\n      range: range\n"},"indexeddb/UpgradeRouter":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.icon = 'code-fork'\n  c.description = 'Route upgrades between IndexeDB database versions'\n  c.inPorts.add 'upgrade',\n    datatype: 'object'\n  c.outPorts.add 'versions',\n    datatype: 'object'\n    addressable: true\n  c.outPorts.add 'missed',\n    datatype: 'object'\n  c.forwardBrackets =\n    upgrade: ['versions', 'missed']\n  c.process (input, output) ->\n    return unless input.hasData 'upgrade'\n    upgrade = input.getData 'upgrade'\n    missed = false\n    migration = 0\n    while migration < upgrade.newVersion\n      if migration < upgrade.oldVersion\n        migration++\n        continue\n      unless c.outPorts.versions.isAttached migration\n        migration++\n        missed = true\n        continue\n      output.send\n        versions: new noflo.IP 'data', upgrade.db,\n          index: migration\n      migration++\n    return output.done() unless missed\n    output.sendDone\n      missed: upgrade.db\n"},"interaction/Focus":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.icon = 'i-cursor'\n  c.description = 'focus element'\n  c.inPorts.add 'element',\n    datatype: 'object'\n    description: 'element to be focused'\n    control: true\n  c.inPorts.add 'trigger',\n    datatype: 'bang'\n    description: 'trigger focus'\n  c.outPorts.add 'out',\n    datatype: 'bang'\n  c.process (input, output) ->\n    return unless input.hasData 'element', 'trigger'\n    element = input.getData 'element'\n    input.getData 'trigger'\n    window.setTimeout ->\n      element.focus()\n      output.sendDone\n        out: true\n    , 0\n",tests:"noflo = require 'noflo'\nsocket = noflo.internalSocket\nbaseDir = 'noflo-interaction'\n\ndescribe 'Focus component', ->\n  c = null\n  element = null\n  trigger = null\n  out = null\n\n  beforeEach (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'interaction/Focus', (err, instance) ->\n      return done err if err\n      c = instance\n      element = socket.createSocket()\n      trigger = socket.createSocket()\n      out = socket.createSocket()\n\n      c.inPorts.element.attach element\n      c.inPorts.trigger.attach trigger\n      c.outPorts.out.attach out\n      done()\n\n  describe 'on trigger', ->\n    it 'should call focus', (done) ->\n      input = document.createElement 'input'\n\n      focusCalled = false\n      input.focus = callback = -> focusCalled = true\n      element.send input\n\n      chai.expect(focusCalled).to.equal false\n\n      out.once 'data', (data) ->\n        chai.expect(focusCalled).to.equal true\n        done()\n\n      trigger.send true\n\n"},"interaction/ListenChange":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Listen to changes on an input element'\n  c.icon = 'hourglass'\n  c.inPorts.add 'element',\n    datatype: 'object'\n  c.outPorts.add 'value',\n    datatype: 'object'\n  c.elements = []\n  c.tearDown = (callback) ->\n    for element in c.elements\n      element.el.removeEventListener 'change', element.listener, false\n      element.ctx.deactivate()\n    c.elements = []\n    do callback\n  c.forwardBrackets = {}\n  c.process (input, output, context) ->\n    return unless input.hasData 'element'\n    data =\n      el: input.getData 'element'\n      listener: (event) ->\n        event.preventDefault()\n        event.stopPropagation()\n        output.send\n          value: event.target.value\n      ctx: context\n    data.el.addEventListener 'change', data.listener, false\n    c.elements.push data\n    return\n"},"interaction/ListenDrag":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description =  'Listen to drag events on a DOM element'\n  c.icon = 'arrows'\n  c.inPorts.add 'element',\n    datatype: 'object'\n  c.outPorts.add 'start',\n    datatype: 'object'\n  c.outPorts.add 'movey',\n    datatype: 'number'\n  c.outPorts.add 'movex',\n    datatype: 'number'\n  c.outPorts.add 'end',\n    datatype: 'object'\n  c.elements = []\n  c.tearDown = (callback) ->\n    for element in c.elements\n      element.el.removeEventListener 'dragstart', element.dragstart, false\n      element.el.removeEventListener 'drag', element.dragmove, false\n      element.el.removeEventListener 'dragend', element.dragend, false\n      element.ctx.deactivate()\n    c.elements = []\n    do callback\n  c.forwardBrackets = {}\n  c.process (input, output, context) ->\n    return unless input.hasData 'element'\n    data =\n      el: input.getData 'element'\n      dragstart: (event) ->\n        event.stopPropagation()\n        output.send\n          start: event\n      dragmove: (event) ->\n        event.preventDefault()\n        event.stopPropagation()\n        output.send\n          movex: event.clientX\n          movey: event.clientY\n      dragend: (event) ->\n        event.preventDefault()\n        event.stopPropagation()\n        output.send\n          end: event\n      ctx: context\n    data.el.addEventListener 'dragstart', data.dragstart, false\n    data.el.addEventListener 'drag', data.dragmove, false\n    data.el.addEventListener 'dragend', data.dragend, false\n    c.elements.push data\n    return\n",tests:"noflo = require 'noflo'\nsocket = noflo.internalSocket\nbaseDir = 'noflo-interaction'\n\ndescribe 'ListenDrag component', ->\n  c = null\n  element = null\n  start = null\n  movex = null\n  movey = null\n  end = null\n  beforeEach (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'interaction/ListenDrag', (err, instance) ->\n      return done err if err\n      c = instance\n      element = socket.createSocket()\n      start = socket.createSocket()\n      movex = socket.createSocket()\n      movey = socket.createSocket()\n      end = socket.createSocket()\n      c.inPorts.element.attach element\n      c.outPorts.start.attach start\n      c.outPorts.movex.attach movex\n      c.outPorts.movey.attach movey\n      c.outPorts.end.attach end\n      done()\n\n  describe 'on matched element', ->\n    el = document.querySelector '#fixtures .listendrag .target'\n    it 'should transmit a start event on drag start', (done) ->\n      element.send el\n      start.once 'data', (data) ->\n        chai.expect(data).is.instanceof UIEvent\n        done()\n      evt = document.createEvent 'UIEvent'\n      evt.initUIEvent 'dragstart', true, true, window, 1\n      evt.clientX = 5\n      evt.clientY = 10\n      el.dispatchEvent evt\n\n    it 'should transmit a movex event on drag move', (done) ->\n      element.send el\n      movex.once 'data', (data) ->\n        chai.expect(data).to.equal 5\n        done()\n      evt = document.createEvent 'UIEvent'\n      evt.initUIEvent 'drag', true, true, window, 1\n      evt.clientX = 5\n      evt.clientY = 10\n      el.dispatchEvent evt\n\n    it 'should transmit a movey event on drag move', (done) ->\n      element.send el\n      movey.once 'data', (data) ->\n        chai.expect(data).to.equal 10\n        done()\n      evt = document.createEvent 'UIEvent'\n      evt.initUIEvent 'drag', true, true, window, 1\n      evt.clientX = 5\n      evt.clientY = 10\n      el.dispatchEvent evt\n\n    it 'should transmit a end event on drag end', (done) ->\n      element.send el\n      end.once 'data', (data) ->\n        chai.expect(data).is.instanceof UIEvent\n        done()\n      evt = document.createEvent 'UIEvent'\n      evt.initUIEvent 'dragend', true, true, window, 1\n      evt.clientX = 5\n      evt.clientY = 10\n      el.dispatchEvent evt\n"},"interaction/ListenEvent":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.icon = 'rss'\n  c.description = 'Listen to custom events on a DOM element'\n  c.inPorts.add 'element',\n    datatype: 'object'\n  c.inPorts.add 'event',\n    datatype: 'string'\n  c.outPorts.add 'out',\n    datatype: 'object'\n  c.elements = []\n  c.tearDown = (callback) ->\n    for element in c.elements\n      element.el.removeEventListener element.eventName, element.onEvent, false\n      element.ctx.deactivate()\n    c.elements = []\n    do callback\n  c.forwardBrackets = {}\n  c.process (input, output, context) ->\n    return unless input.hasData 'element', 'event'\n    el = input.getData 'element'\n    eventName = input.getData 'event'\n    data =\n      el: el\n      eventName: eventName\n      onEvent: (event) ->\n        event.preventDefault()\n        event.stopPropagation()\n        event.eventName = eventName\n        output.send\n          out: event\n      ctx: context\n    data.el.addEventListener eventName, data.onEvent, false\n    c.elements.push data\n    return\n",tests:"noflo = require 'noflo'\nsocket = noflo.internalSocket\nbaseDir = 'noflo-interaction'\n\ndescribe 'ListenEvent component', ->\n  c = null\n  element = null\n  event = null\n  out = null\n  beforeEach (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'interaction/ListenEvent', (err, instance) ->\n      return done err if err\n      c = instance\n      element = socket.createSocket()\n      event = socket.createSocket()\n      out = socket.createSocket()\n      c.inPorts.element.attach element\n      c.inPorts.event.attach event\n      c.outPorts.out.attach out\n      done()\n\n  describe 'on matched element', ->\n    el = document.querySelector '#fixtures .listenevent .target'\n    it 'should transmit a click packet on click event', (done) ->\n      element.send el\n      event.send 'click'\n      out.once 'data', (data) ->\n        chai.expect(data).is.instanceof UIEvent\n        chai.expect(data.eventName).to.equal 'click'\n        done()\n      evt = document.createEvent 'UIEvent'\n      evt.initUIEvent 'click', true, true, window, 1\n      evt.clientX = 5\n      evt.clientY = 10\n      el.dispatchEvent evt\n    it 'should transmit a foo packet on foo event', (done) ->\n      element.send el\n      event.send 'foo'\n      out.once 'data', (data) ->\n        chai.expect(data).is.instanceof UIEvent\n        chai.expect(data.eventName).to.equal 'foo'\n        done()\n      evt = document.createEvent 'UIEvent'\n      evt.initUIEvent 'foo', true, true, window, 1\n      evt.clientX = 5\n      evt.clientY = 10\n      el.dispatchEvent evt\n"},"interaction/ListenHash":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Listen for hash changes in browser\\'s URL bar'\n  c.icon = 'slack'\n  c.inPorts.add 'start',\n    datatype: 'bang'\n    description: 'Start listening for hash changes'\n  c.inPorts.add 'stop',\n    datatype: 'bang'\n    description: 'Stop listening for hash changes'\n  c.outPorts.add 'initial',\n    datatype: 'string'\n  c.outPorts.add 'change',\n    datatype: 'string'\n  c.current = null\n  c.subscriber = null\n  unsubscribe = ->\n    return unless c.subscriber\n    window.removeEventListener 'hashchange', c.subscriber.callback, false\n    c.subscriber.ctx.deactivate()\n    c.subscriber = null\n  c.tearDown = (callback) ->\n    c.current = null\n    do unsubscribe\n    do callback\n  c.forwardBrackets = {}\n  c.process (input, output, context) ->\n    if input.hasData 'start'\n      input.getData 'start'\n      # Ensure previous subscription is ended\n      do unsubscribe\n      sendHash = (port) ->\n        oldHash = c.current\n        c.current = window.location.href.split('#')[1] or ''\n        if oldHash\n          output.send\n            change: new noflo.IP 'openBracket', oldHash\n        payload = {}\n        payload[port] = c.current\n        output.send payload\n        if oldHash\n          output.send\n            change: new noflo.IP 'closeBracket', oldHash\n      c.subscriber =\n        callback: (event) ->\n          sendHash 'change'\n        ctx: context\n      # Send initial\n      sendHash 'initial'\n      window.addEventListener 'hashchange', c.subscriber.callback, false\n      return\n    if input.hasData 'stop'\n      input.getData 'stop'\n      do unsubscribe\n      output.done()\n      return\n"},"interaction/ListenKeyboard":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Listen for key presses on a given DOM element'\n  c.icon = 'keyboard-o'\n  c.inPorts.add 'element',\n    datatype: 'object'\n  c.inPorts.add 'stop',\n    datatype: 'object'\n  c.outPorts.add 'keypress',\n    datatype: 'integer'\n  c.elements = []\n  unsubcribe = (element) ->\n    element.el.removeEventListener 'keypress', element.listener, false\n    element.ctx.deactivate()\n  c.tearDown = (callback) ->\n    unsubscribe element for element in c.elements\n    c.elements = []\n    do callback\n  c.forwardBrackets = {}\n  c.process (input, output, context) ->\n    if input.hasData 'element'\n      data =\n        el: input.getData 'element'\n        listener: (event) ->\n          output.send\n            keypress: event.keyCode\n        ctx: context\n      data.el.addEventListener 'keypress', data.listener, false\n      c.elements.push data\n      return\n    if input.hasData 'stop'\n      element = input.getData 'stop'\n      ctx = null\n      for el in c.elements\n        continue unless el.el is element\n        ctx = el\n      return unless ctx\n      unsubscribe ctx\n      output.done()\n"},"interaction/ListenKeyboardShortcuts":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Listen for keyboard shortcuts and route them'\n  c.icon = 'keyboard-o'\n  c.inPorts.add 'keys',\n    datatype: 'array'\n  c.inPorts.add 'ignoreinput',\n    datatype: 'boolean'\n    default: true\n    control: true\n  c.inPorts.add 'stop',\n    datatype: 'bang'\n  c.outPorts.add 'shortcut',\n    datatype: 'bang'\n    addressable: true\n  c.outPorts.add 'missed',\n    datatype: 'integer'\n  c.subscriber = null\n  unsubscribe = ->\n    return unless c.subscriber\n    document.removeEventListener 'keydown', c.subscriber.callback, false\n    c.subscriber.ctx.deactivate()\n    c.subscriber = null\n  c.tearDown = (callback) ->\n    do unsubscribe\n    do callback\n  c.forwardBrackets = {}\n  c.process (input, output, context) ->\n    if input.hasData 'keys'\n      keys = input.getData 'keys'\n\n      # Ensure previous subscription is ended\n      do unsubscribe\n\n      # Older version of this component used string input\n      keys = keys.split ',' if typeof keys is 'string'\n\n      # We allow some common keyboard shortcuts to be passed as strings\n      for key, index in keys\n        switch key\n          when '-' then keys[index] = 189\n          when '=' then keys[index] = 187\n          when '0' then keys[index] = 48\n          when 'a' then keys[index] = 65\n          when 'x' then keys[index] = 88\n          when 'c' then keys[index] = 67\n          when 'v' then keys[index] = 86\n          when 'z' then keys[index] = 90\n          when 'r' then keys[index] = 82\n\n      ignoreInput = if input.hasData('ignoreinput') then input.getData('ignoreinput') else true\n\n      c.subscriber =\n        callback: (event) ->\n          return unless event.ctrlKey or event.metaKey\n          return if event.target.tagName is 'TEXTAREA' and ignoreInput\n          return if event.target.tagName is 'INPUT' and ignoreInput\n          return if String(event.target.contentEditable) is 'true' and ignoreInput\n          route = keys.indexOf event.keyCode\n          if route is -1\n            output.send\n              missed: event.keyCode\n            return\n          event.preventDefault()\n          event.stopPropagation()\n          output.send\n            shortcut: new noflo.IP 'data', event.keyCode,\n              index: route\n        ctx: context\n      document.addEventListener 'keydown', c.subscriber.callback, false\n      return\n    if input.hasData 'stop'\n      input.getData 'stop'\n      do unsubscribe\n      output.done()\n      return\n"},"interaction/ListenMouse":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.icon = 'mouse-pointer'\n  c.description = 'Listen to mouse events on a DOM element'\n  c.inPorts.add 'element',\n    datatype: 'object'\n  c.outPorts.add 'click',\n    datatype: 'object'\n  c.outPorts.add 'dblclick',\n    datatype: 'object'\n  c.elements = []\n  c.tearDown = (callback) ->\n    for element in c.elements\n      element.el.removeEventListener 'click', element.click, false\n      element.el.removeEventListener 'dblclick', element.dblclick, false\n      element.ctx.deactivate()\n    c.elements = []\n    do callback\n  c.forwardBrackets = {}\n  c.process (input, output, context) ->\n    return unless input.hasData 'element'\n    data =\n      el: input.getData 'element'\n      click: (event) ->\n        event.preventDefault()\n        event.stopPropagation()\n        output.send\n          click: event\n      dblclick: (event) ->\n        event.preventDefault()\n        event.stopPropagation()\n        output.send\n          dblclick: event\n      ctx: context\n    data.el.addEventListener 'click', data.click, false\n    data.el.addEventListener 'dblclick', data.dblclick, false\n    c.elements.push data\n    return\n",tests:"noflo = require 'noflo'\nsocket = noflo.internalSocket\nbaseDir = 'noflo-interaction'\n\ndescribe 'ListenMouse component', ->\n  c = null\n  element = null\n  click = null\n  beforeEach (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'interaction/ListenMouse', (err, instance) ->\n      return done err if err\n      c = instance\n      element = socket.createSocket()\n      click = socket.createSocket()\n      c.inPorts.element.attach element\n      c.outPorts.click.attach click\n      done()\n\n  describe 'on matched element', ->\n    el = document.querySelector '#fixtures .listenmouse .target'\n    it 'should transmit a click event on mouse click', (done) ->\n      element.send el\n      click.once 'data', (data) ->\n        chai.expect(data).is.instanceof UIEvent\n        done()\n      evt = document.createEvent 'UIEvent'\n      evt.initUIEvent 'click', true, true, window, 1\n      evt.clientX = 5\n      evt.clientY = 10\n      el.dispatchEvent evt\n    it 'should transmit a dblclick event on mouse dblclick', (done) ->\n      element.send el\n      dblclick = socket.createSocket()\n      c.outPorts.dblclick.attach dblclick\n      dblclick.once 'data', (data) ->\n        chai.expect(data).is.instanceof UIEvent\n        done()\n      evt = document.createEvent 'UIEvent'\n      evt.initUIEvent 'dblclick', true, true, window, 1\n      evt.clientX = 5\n      evt.clientY = 10\n      el.dispatchEvent evt\n"},"interaction/ListenPointer":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Listen to pointer events on a DOM element'\n  c.icon = 'pencil-square-o'\n  c.inPorts.add 'element',\n    datatype: 'object'\n  c.inPorts.add 'action',\n    datatype: 'string'\n    default: 'none'\n    control: true\n  events = [\n    'down'\n    'up'\n    'cancel'\n    'move'\n    'over'\n    'out'\n    'enter'\n    'leave'\n  ]\n  for event in events\n    c.outPorts.add event,\n      datatype: 'object'\n      description: \"Sends event on pointer#{event}\"\n  c.elements = []\n  c.tearDown = (callback) ->\n    for element in c.elements\n      if element.el.removeAttribute\n        element.el.removeAttribute 'touch-action'\n      for event in events\n        element.el.removeEventListener \"pointer#{event}\", element[\"pointer#{event}\"], false\n      element.ctx.deactivate()\n    c.elements = []\n    do callback\n  c.forwardBrackets = {}\n  c.process (input, output, context) ->\n    return unless input.hasData 'element'\n    action = if input.hasData('action') then input.getData('action') else 'none'\n    data =\n      el: input.getData 'element'\n      ctx: context\n    data.el.setAttribute 'touch-action', action\n    events.forEach (event) ->\n      data[\"pointer#{event}\"] = (ev) ->\n        ev.preventDefault()\n        ev.stopPropagation()\n        payload = {}\n        payload[event] = ev.target.value\n        output.send payload\n      data.el.addEventListener \"pointer#{event}\", data[\"pointer#{event}\"], false\n    c.elements.push data\n    return\n"},"interaction/ListenResize":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Listen to window resize events'\n  c.icon = 'desktop'\n  c.inPorts.add 'start',\n    datatype: 'bang'\n    description: 'Start listening for screen resizes'\n  c.inPorts.add 'stop',\n    datatype: 'bang'\n    description: 'Stop listening for screen resizes'\n  c.outPorts.add 'width',\n    datatype: 'number'\n  c.outPorts.add 'height',\n    datatype: 'number'\n  c.subscriber = null\n  unsubscribe = ->\n    return unless c.subscriber\n    window.removeEventListener 'resize', c.subscriber.callback, false\n    c.subscriber.ctx.deactivate()\n    c.subscriber = null\n  c.tearDown = (callback) ->\n    do unsubscribe\n    do callback\n  c.forwardBrackets = {}\n  c.process (input, output, context) ->\n    if input.hasData 'start'\n      input.getData 'start'\n      # Ensure previous subscription is ended\n      do unsubscribe\n      c.subscriber =\n        callback: (event) ->\n          output.send\n            width: window.innerWidth\n            height: window.innerHeight\n        ctx: context\n      output.send\n        width: window.innerWidth\n        height: window.innerHeight\n      window.addEventListener 'resize', c.subscriber.callback, false\n      return\n    if input.hasData 'stop'\n      input.getData 'stop'\n      do unsubscribe\n      output.done()\n      return\n"},"interaction/ListenScroll":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Listen to scroll events on the browser window'\n  c.icon = 'arrows-v'\n  c.inPorts.add 'start',\n    datatype: 'bang'\n    description: 'Start listening for hash changes'\n  c.inPorts.add 'stop',\n    datatype: 'bang'\n    description: 'Stop listening for hash changes'\n  c.outPorts.add 'top',\n    datatype: 'number'\n  c.outPorts.add 'bottom',\n    datatype: 'number'\n  c.outPorts.add 'left',\n    datatype: 'number'\n  c.outPorts.add 'right',\n    datatype: 'number'\n  c.subscriber = null\n  unsubscribe = ->\n    return unless c.subscriber\n    window.removeEventListener 'scroll', c.subscriber.callback, false\n    c.subscriber.ctx.deactivate()\n    c.subscriber = null\n  c.tearDown = (callback) ->\n    do unsubscribe\n    do callback\n  c.forwardBrackets = {}\n  c.process (input, output, context) ->\n    if input.hasData 'start'\n      input.getData 'start'\n      # Ensure previous subscription is ended\n      do unsubscribe\n      c.subscriber =\n        callback: (event) ->\n          top = window.scrollY\n          left = window.scrollX\n          output.send\n            top: top\n            bottom: top + window.innerHeight\n            left: left\n            right: left.window.innerWidth\n        ctx: context\n      window.addEventListener 'scroll', c.subscriber.callback, false\n      return\n    if input.hasData 'stop'\n      input.getData 'stop'\n      do unsubscribe\n      output.done()\n      return\n",tests:"noflo = require 'noflo'\nsocket = noflo.internalSocket\nbaseDir = 'noflo-interaction'\n\ndescribe 'ListenScroll component', ->\n  c = null\n  start = null\n  top = null\n  left = null\n  origTop = window.scrollY\n  origLeft = window.scrollX\n  beforeEach (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'interaction/ListenScroll', (err, instance) ->\n      return done err if err\n      c = instance\n      start = socket.createSocket()\n      top = socket.createSocket()\n      left = socket.createSocket()\n      c.inPorts.start.attach start\n      c.outPorts.top.attach top\n      c.outPorts.left.attach left\n      done()\n\n  afterEach ->\n    window.scrollTo origLeft, origTop\n\n  describe 'when started', ->\n    it 'should send the new scroll coordinates', (done) ->\n      unless window.navigator.userAgent.indexOf('Phantom') is -1\n        # Scroll API doesn't seem to work in the PhantomJS test runner\n        return @skip()\n      if window.location.href is 'http://127.0.0.1:9999/spec/runner.html'\n        # Scroll API doesn't seem to work in the SauceLabs test runner\n        return @skip()\n\n      start.send true\n      top.once 'data', (data) ->\n        chai.expect(data).to.equal 10\n      left.once 'data', (data) ->\n        chai.expect(data).to.equal 0\n      top.once 'disconnect', ->\n        done()\n      window.scrollTo 0, 10\n"},"interaction/ListenSpeech":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Listen for user\\'s microphone and recognize phrases'\n  c.icon = 'microphone'\n  c.inPorts.add 'start',\n    datatype: 'bang'\n    description: 'Start listening for hash changes'\n  c.inPorts.add 'stop',\n    datatype: 'bang'\n    description: 'Stop listening for hash changes'\n  c.outPorts.add 'result',\n    datatype: 'string'\n  c.outPorts.add 'error',\n    datatype: 'object'\n  c.subscriber = null\n  unsubscribe = ->\n    return unless c.subscriber\n    do c.subscriber.recognition.stop\n    do c.subscriber.ctx.deactivate\n    c.subscriber = null\n  c.tearDown = (callback) ->\n    do unsubscribe\n    do callback\n  c.forwardBrackets = {}\n  c.process (input, output, context) ->\n    if input.hasData 'start'\n      input.getData 'start'\n      # Ensure previous subscription is ended\n      do unsubscribe\n      unless window.webkitSpeechRecognition\n        output.done new Error 'Speech recognition support not available'\n        return\n      c.subscriber =\n        sent: []\n        callback: (event) ->\n          for result, idx in event.results\n            continue unless result.isFinal\n            if c.subscriber.sent.indexOf(idx) isnt -1\n              continue\n            output.send\n              result: result[0].transcript\n            c.subscriber.sent.push idx\n        error: (err) ->\n          output.send\n            error: err\n        ctx: context\n      c.subscriber.recognition = new window.webkitSpeechRecognition\n      c.subscriber.recognition.continuous = true\n      c.subscriber.recognition.start()\n      c.subscriber.recognition.onresult = c.subscriber.callback\n      c.subscriber.recognition.onerror = c.subscriber.error\n      return\n    if input.hasData 'stop'\n      input.getData 'stop'\n      do unsubscribe\n      output.done()\n      return\n"},"interaction/ListenTouch":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Listen to touch events on a DOM element'\n  c.icon = 'hand-o-up'\n  c.inPorts.add 'element',\n    datatype: 'object'\n  c.outPorts.add 'start',\n    datatype: 'object'\n  c.outPorts.add 'movex',\n    datatype: 'number'\n  c.outPorts.add 'movey',\n    datatype: 'number'\n  c.outPorts.add 'end',\n    datatype: 'object'\n  c.elements = []\n  c.tearDown = (callback) ->\n    for element in c.elements\n      element.el.removeEventListener 'touchstart', element.touchstart, false\n      element.el.removeEventListener 'touchmove', element.touchmove, false\n      element.el.removeEventListener 'touchend', element.touchend, false\n      element.ctx.deactivate()\n    c.elements = []\n    do callback\n  c.forwardBrackets = {}\n  c.process (input, output, context) ->\n    return unless input.hasData 'element'\n    data =\n      el: input.getData 'element'\n      touchstart: (event) ->\n        event.preventDefault()\n        event.stopPropagation()\n        return unless event.changedTouches\n        return unless event.changedTouches.length\n        for touch, idx in event.changedTouches\n          output.send\n            start: new noflo.IP 'data', event,\n              touch: idx\n      touchmove: (event) ->\n        event.preventDefault()\n        event.stopPropagation()\n        return unless event.changedTouches\n        return unless event.changedTouches.length\n        for touch, idx in event.changedTouches\n          output.send\n            movex: new noflo.IP 'data', touch.pageX,\n              touch: idx\n            movey: new noflo.IP 'data', touch.pageY,\n              touch: idx\n      touchend: (event) ->\n        event.preventDefault()\n        event.stopPropagation()\n        return unless event.changedTouches\n        return unless event.changedTouches.length\n        for touch, idx in event.changedTouches\n          output.send\n            end: new noflo.IP 'data', event,\n              touch: idx\n      ctx: context\n    data.el.addEventListener 'touchstart', data.touchstart, false\n    data.el.addEventListener 'touchmove', data.touchmove, false\n    data.el.addEventListener 'touchend', data.touchend, false\n    c.elements.push data\n    return\n",tests:"noflo = require 'noflo'\nsocket = noflo.internalSocket\nbaseDir = 'noflo-interaction'\n\ndescribe 'ListenTouch component', ->\n  c = null\n  element = null\n  start = null\n  movex = null\n  movey = null\n  end = null\n  beforeEach (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'interaction/ListenTouch', (err, instance) ->\n      return done err if err\n      c = instance\n      element = socket.createSocket()\n      start = socket.createSocket()\n      movex = socket.createSocket()\n      movey = socket.createSocket()\n      end = socket.createSocket()\n      c.inPorts.element.attach element\n      c.outPorts.start.attach start\n      c.outPorts.movex.attach movex\n      c.outPorts.movey.attach movey\n      c.outPorts.end.attach end\n      done()\n\n  describe 'on matched element', ->\n    el = document.querySelector '#fixtures .listentouch .target'\n    it 'should transmit a start event on touch start', (done) ->\n      element.send el\n      start.once 'data', (data) ->\n        chai.expect(data).is.instanceof UIEvent\n        done()\n      evt = document.createEvent 'UIEvent'\n      evt.initUIEvent 'touchstart', true, true, window, 1\n      evt.changedTouches = []\n      evt.changedTouches.push\n        pageX: 5\n        pageY: 10\n      el.dispatchEvent evt\n\n    it 'should transmit a movex event on touch move', (done) ->\n      element.send el\n      movex.once 'data', (data) ->\n        chai.expect(data).to.equal 5\n        done()\n      evt = document.createEvent 'UIEvent'\n      evt.initUIEvent 'touchmove', true, true, window, 1\n      evt.changedTouches = []\n      evt.changedTouches.push\n        pageX: 5\n        pageY: 10\n      el.dispatchEvent evt\n\n    it 'should transmit a movey event on touch move', (done) ->\n      element.send el\n      movey.once 'data', (data) ->\n        chai.expect(data).to.equal 10\n        done()\n      evt = document.createEvent 'UIEvent'\n      evt.initUIEvent 'touchmove', true, true, window, 1\n      evt.changedTouches = []\n      evt.changedTouches.push\n        pageX: 5\n        pageY: 10\n      el.dispatchEvent evt\n\n    it 'should transmit a end event on touch end', (done) ->\n      element.send el\n      end.once 'data', (data) ->\n        chai.expect(data).is.instanceof UIEvent\n        done()\n      evt = document.createEvent 'UIEvent'\n      evt.initUIEvent 'touchend', true, true, window, 1\n      evt.changedTouches = []\n      evt.changedTouches.push\n        pageX: 5\n        pageY: 10\n      el.dispatchEvent evt\n"},"interaction/ReadCoordinates":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Read the coordinates from a DOM event'\n  c.icon = 'map-marker'\n  c.inPorts.add 'event',\n    datatype: 'object'\n  c.outPorts.add 'screen',\n    datatype: 'object'\n  c.outPorts.add 'client',\n    datatype: 'object'\n  c.outPorts.add 'page',\n    datatype: 'object'\n  c.forwardBrackets =\n    event: ['screen', 'client', 'page']\n  c.process (input, output) ->\n    return unless input.hasData 'event'\n    event = input.getData 'event'\n    output.sendDone\n      screen:\n        x: event.screenX\n        y: event.screenY\n      client:\n        x: event.clientX\n        y: event.clientY\n      page:\n        x: event.pageX\n        y: event.pageY\n",tests:"noflo = require 'noflo'\nsocket = noflo.internalSocket\nbaseDir = 'noflo-interaction'\n\ndescribe 'ReadCoordinates component', ->\n  c = null\n  event = null\n  screen = null\n  client = null\n  page = null\n\n  beforeEach (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'interaction/ReadCoordinates', (err, instance) ->\n      return done err if err\n      c = instance\n      event = socket.createSocket()\n      screen = socket.createSocket()\n      client = socket.createSocket()\n      page = socket.createSocket()\n      c.inPorts.event.attach event\n      c.outPorts.screen.attach screen\n      c.outPorts.client.attach client\n      c.outPorts.page.attach page\n      done()\n  describe 'when receiving an event',\n    it 'should send coordinates out', (done) ->\n      expected = [\n        ['screen', 42, 31]\n        ['client', 12, 15]\n        ['page', 56, 1]\n      ]\n      screen.on 'data', (data) ->\n        exp = expected.shift()\n        chai.expect(exp[0]).to.equal 'screen'\n        chai.expect(data.x).to.equal exp[1]\n        chai.expect(data.y).to.equal exp[2]\n        return done() unless expected.length\n      client.on 'data', (data) ->\n        exp = expected.shift()\n        chai.expect(exp[0]).to.equal 'client'\n        chai.expect(data.x).to.equal exp[1]\n        chai.expect(data.y).to.equal exp[2]\n        return done() unless expected.length\n      page.on 'data', (data) ->\n        exp = expected.shift()\n        chai.expect(exp[0]).to.equal 'page'\n        chai.expect(data.x).to.equal exp[1]\n        chai.expect(data.y).to.equal exp[2]\n        return done() unless expected.length\n      event.send\n        screenX: expected[0][1]\n        screenY: expected[0][2]\n        clientX: expected[1][1]\n        clientY: expected[1][2]\n        pageX: expected[2][1]\n        pageY: expected[2][2]\n"},"interaction/ReadGamepad":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Read the state of a gamepad'\n  c.icon = 'gamepad'\n  c.inPorts.add 'gamepad',\n    datatype: 'integer'\n  c.outPorts.add 'out',\n    datatype: 'object'\n  c.outPorts.add 'error',\n    datatype: 'object'\n  c.lastTimestamps = {}\n  c.tearDown = (callback) ->\n    c.lastTimestamps = {}\n    do callback\n  c.process (input, output) ->\n    return unless input.hasData 'gamepad'\n    gamepad = input.getData 'gamepad'\n    unless navigator.webkitGetGamepads\n      output.done new Error \"No WebKit Gamepad API available\"\n      return\n    gamepadState = navigator.webkitGetGamepads()[gamepad]\n    unless gamepadState\n      output.done new Error \"Gamepad '#{gamepad}' not available\"\n    if c.lastTimestamps[gamepad] = gamepadState.timestamp\n      # No change\n      output.done()\n      return\n    c.lastTimestamps[gamepad] = gamepadState.timestamp\n    output.sendDone\n      out: gamepadState\n"},"interaction/SetHash":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Set the hash in browser\\'s URL bar'\n  c.icon = 'slack'\n  c.inPorts.add 'hash',\n    datatype: 'string'\n  c.outPorts.add 'out',\n    datatype: 'string'\n  c.process (input, output) ->\n    return unless input.hasData 'hash'\n    hash = input.getData 'hash'\n    window.location.hash = \"##{hash}\"\n    output.sendDone\n      out: hash\n"},"localstorage/GetItem":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Get an item from LocalStorage'\n  c.inPorts.add 'key',\n    datatype: 'string'\n  c.outPorts.add 'item',\n    datatype: 'string'\n  c.outPorts.add 'error',\n    datatype: 'object'\n  c.forwardBrackets =\n    key: ['item', 'error']\n  c.process (input, output) ->\n    return unless input.hasData 'key'\n    key = input.getData 'key'\n    value = localStorage.getItem key\n    unless value\n      output.done new Error \"#{key} not found\"\n      return\n    output.sendDone\n      item: value\n    return\n",tests:"noflo = require 'noflo'\nbaseDir = 'noflo-dom'\n\ndescribe 'GetItem component', ->\n  c = null\n  key = null\n  item = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'localstorage/GetItem', (err, instance) ->\n      return done err if err\n      c = instance\n      key = noflo.internalSocket.createSocket()\n      c.inPorts.key.attach key\n      done()\n  beforeEach ->\n    item = noflo.internalSocket.createSocket()\n    c.outPorts.item.attach item\n  afterEach ->\n    c.outPorts.item.attach item\n    item = null\n\n  describe 'when instantiated', ->\n    it 'should have an key port', ->\n      chai.expect(c.inPorts.key).to.be.an 'object'\n    it 'should have an item port', ->\n      chai.expect(c.outPorts.item).to.be.an 'object'\n    it 'should have an error port', ->\n      chai.expect(c.outPorts.error).to.be.an 'object'\n\n  describe 'fetching an existing key', ->\n    localStorage.setItem 'GetItem', 'foo'\n    it 'should be able to fetch it', (done) ->\n      item.on 'data', (data) ->\n        chai.expect(data).to.equal 'foo'\n        localStorage.removeItem 'GetItem'\n        done()\n      key.send 'GetItem'\n\n  describe 'fetching a missing key', ->\n    it 'should send an error', (done) ->\n      err = noflo.internalSocket.createSocket()\n      c.outPorts.error.attach err\n      err.on 'data', (data) ->\n        chai.expect(data).to.be.an 'error'\n        done()\n      key.send 'GetItemNotDefined'\n"},"localstorage/ListAdd":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Add an item to a list'\n  c.inPorts.add 'list',\n    datatype: 'string'\n    control: true\n  c.inPorts.add 'key',\n    datatype: 'string'\n  c.outPorts.add 'key',\n    datatype: 'string'\n  c.forwardBrackets =\n    key: ['key']\n  c.process (input, output) ->\n    return unless input.hasData 'list', 'key'\n    [listKey, key] = input.getData 'list', 'key'\n    list = localStorage.getItem listKey\n    if list\n      items = list.split ','\n    else\n      items = []\n    if items.indexOf(key) is -1\n      items.push key\n      localStorage.setItem listKey, items.join ','\n    output.sendDone\n      key: key\n    return\n"},"localstorage/ListGet":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Get an item from a list'\n  c.inPorts.add 'key',\n    datatype: 'string'\n  c.outPorts.add 'items',\n    datatype: 'string'\n  c.outPorts.add 'error',\n    datatype: 'object'\n  c.forwardBrackets =\n    key: ['items', 'error']\n  c.process (input, output) ->\n    return unless input.hasData 'key'\n    key = input.getData 'key'\n    value = localStorage.getItem key\n    unless value\n      output.done new Error \"#{key} not found\"\n      return\n    list = value.split ','\n    output.send\n      items: new noflo.IP 'openBracket', key\n    for item in list\n      output.send\n        items: item\n    output.send\n      items: new noflo.IP 'closeBracket', key\n    output.done()\n    return\n"},"localstorage/ListRemove":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Remove an item from a list'\n  c.icon = 'trash'\n  c.inPorts.add 'list',\n    datatype: 'string'\n    control: true\n  c.inPorts.add 'key',\n    datatype: 'string'\n  c.outPorts.add 'key',\n    datatype: 'string'\n  c.forwardBrackets =\n    key: ['key']\n  c.process (input, output) ->\n    return unless input.hasData 'list', 'key'\n    [listKey, key] = input.getData 'list', 'key'\n    list = localStorage.getItem listKey\n    if list\n      items = list.split ','\n    else\n      items = []\n    unless items.indexOf(key) is -1\n      items.splice items.indexOf(key), 1\n      localStorage.setItem listKey, items.join ','\n    output.sendDone\n      key: key\n    return\n"},"localstorage/ListenRemoteChanges":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Listen for changes in localStorage'\n  c.icon = 'hourglass'\n  c.inPorts.add 'start',\n    datatype: 'bang'\n  c.inPorts.add 'stop',\n    datatype: 'bang'\n  c.outPorts.add 'changed',\n    datatype: 'object'\n  c.outPorts.add 'removed',\n    datatype: 'object'\n  c.listeners = {}\n  unsubscribe = (scope) ->\n    return unless c.listeners[scope]\n    window.removeEventListener 'storage', c.listeners[scope].callback, false\n    c.listeners[scope].ctx.deactivate()\n  c.tearDown = (callback) ->\n    for scope, val of c.listeners\n      unsubscribe scope\n    c.listeners = {}\n    do callback\n  c.process (input, output, context) ->\n    if input.hasData 'stop'\n      input.getData 'stop'\n      unsubscribe input.scope\n      output.done()\n      return\n    if input.hasData 'start'\n      input.getData 'start'\n      # Ensure previous context gets cleared\n      unsubscribe input.scope\n      listener =\n        ctx: context\n        callback: (event) ->\n          if event.newValue is null\n            # Removed key\n            output.send\n              removed:\n                key: event.key\n                value: null\n            return\n          output.send\n            changed:\n              key: event.key\n              value: event.newValue\n          return\n      window.addEventListener 'storage', listener.callback, false\n      c.listeners[input.scope] = listener\n      return\n"},"localstorage/RemoveItem":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Remove an item from LocalStorage'\n  c.icon = 'trash'\n  c.inPorts.add 'key',\n    datatype: 'string'\n  c.outPorts.add 'item',\n    datatype: 'string'\n  c.forwardBrackets =\n    key: ['item']\n  c.process (input, output) ->\n    return unless input.hasData 'key'\n    key = input.getData 'key'\n    localStorage.removeItem key\n    output.sendDone\n      item: null\n    return\n",tests:"noflo = require 'noflo'\nbaseDir = 'noflo-dom'\n\ndescribe 'RemoveItem component', ->\n  c = null\n  key = null\n  item = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'localstorage/RemoveItem', (err, instance) ->\n      return done err if err\n      c = instance\n      key = noflo.internalSocket.createSocket()\n      c.inPorts.key.attach key\n      done()\n  beforeEach ->\n    item = noflo.internalSocket.createSocket()\n    c.outPorts.item.attach item\n  afterEach ->\n    c.outPorts.item.attach item\n    item = null\n\n  describe 'when removing a key', ->\n    localStorage.setItem 'RemoveItem', 'foo'\n    it 'should be able to remove it', (done) ->\n      item.on 'data', (data) ->\n        chai.expect(data).to.be.a 'null'\n        # Ensure that it has been removed\n        val = localStorage.getItem 'RemoveItem'\n        chai.expect(val).to.be.a 'null'\n        done()\n      key.send 'RemoveItem'\n"},"localstorage/SetItem":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Save an item into LocalStorage'\n  c.inPorts.add 'key',\n    datatype: 'string'\n  c.inPorts.add 'value',\n    datatype: 'string'\n  c.outPorts.add 'item',\n    datatype: 'string'\n  c.forwardBrackets =\n    key: ['item']\n  c.process (input, output) ->\n    return unless input.hasData 'key', 'value'\n    [key, value] = input.getData 'key', 'value'\n    localStorage.setItem key, value\n    output.sendDone\n      item: value\n    return\n",tests:"noflo = require 'noflo'\nbaseDir = 'noflo-dom'\n\ndescribe 'SetItem component', ->\n  c = null\n  key = null\n  value = null\n  item = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'localstorage/SetItem', (err, instance) ->\n      return done err if err\n      c = instance\n      key = noflo.internalSocket.createSocket()\n      c.inPorts.key.attach key\n      value = noflo.internalSocket.createSocket()\n      c.inPorts.value.attach value\n      done()\n  beforeEach ->\n    item = noflo.internalSocket.createSocket()\n    c.outPorts.item.attach item\n  afterEach ->\n    c.outPorts.item.attach item\n    item = null\n\n  describe 'when receiving key and a value', ->\n    it 'should send it out', (done) ->\n      item.on 'data', (data) ->\n        chai.expect(data).to.equal 'foo'\n        done()\n      key.send 'SetItem'\n      value.send 'foo'\n    it 'should have set the item to LocalStorage', ->\n      val = localStorage.getItem 'SetItem'\n      chai.expect(val).to.equal 'foo'\n      localStorage.removeItem 'SetItem'\n"},"math/Accumulate":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component({\n    description: 'Accumulate numbers coming from the input port',\n    inPorts: {\n      in: {\n        datatype: 'number',\n        description: 'Numbers to accumulate',\n        required: true,\n      },\n      reset: {\n        datatype: 'bang',\n        description: 'Reset accumulation counter',\n      },\n      emitreset: {\n        datatype: 'boolean',\n        description: 'Whether to emit an output upon reset',\n        control: true,\n        default: false,\n      },\n    },\n    outPorts: {\n      out: {\n        datatype: 'number',\n        required: true,\n      },\n    },\n  });\n\n  c.forwardBrackets = {};\n\n  c.counter = {};\n  c.tearDown = (callback) => {\n    c.counter = {};\n    callback();\n  };\n\n  return c.process((input, output) => {\n    if (input.hasData('reset')) {\n      input.getData('reset');\n      c.counter[input.scope] = 0;\n      let emitReset = false;\n      if (input.hasData('emitreset')) {\n        emitReset = input.getData('emitreset');\n      }\n      if (emitReset) {\n        output.sendDone(c.counter[input.scope]);\n        return;\n      }\n      output.done();\n      return;\n    }\n\n    if (!input.hasData('in')) {\n      return;\n    }\n\n    const data = input.getData('in');\n    if (!c.counter[input.scope]) {\n      c.counter[input.scope] = 0;\n    }\n    c.counter[input.scope] += data;\n\n    output.sendDone(c.counter[input.scope]);\n  });\n};\n",tests:"describe('Accumulate component', () => {\n  let c = null;\n  let cin = null;\n  let reset = null;\n  let emitreset = null;\n  let cout = null;\n  before(function () {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('math/Accumulate')\n      .then((instance) => {\n        c = instance;\n        cin = noflo.internalSocket.createSocket();\n        reset = noflo.internalSocket.createSocket();\n        emitreset = noflo.internalSocket.createSocket();\n        c.inPorts.in.attach(cin);\n        c.inPorts.reset.attach(reset);\n        c.inPorts.emitreset.attach(emitreset);\n      });\n  });\n  beforeEach(() => {\n    cout = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(cout);\n    return c.start();\n  });\n  afterEach(() => {\n    c.outPorts.out.detach(cout);\n    cout = null;\n    return c.shutdown();\n  });\n\n  describe('when instantiated', () => {\n    it('should accumulate number', (done) => {\n      cout.once('data', (res) => {\n        chai.expect(res).to.equal(2);\n        cout.once('data', (res2) => {\n          chai.expect(res2).to.equal(7);\n          cout.once('data', (res3) => {\n            chai.expect(res3).to.equal(10);\n            done();\n          });\n        });\n      });\n      cin.send(2);\n      cin.send(5);\n      cin.send(3);\n      cin.disconnect();\n    });\n    it('should emit 0 when emitreset is set', (done) => {\n      emitreset.send(true);\n      emitreset.disconnect();\n\n      cout.once('data', (res) => {\n        chai.expect(res).to.equal(4);\n        cout.once('data', (res2) => {\n          chai.expect(res2).to.equal(6);\n          cout.once('data', (res3) => {\n            chai.expect(res3).to.equal(0);\n            done();\n          });\n        });\n      });\n      cin.send(4);\n      cin.send(2);\n      reset.send(true);\n    });\n  });\n});\n"},"math/CalculateAngle":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component({\n    description: 'Calculate the angle between two points',\n    icon: 'compass',\n    inPorts: {\n      origin: {\n        datatype: 'object',\n        required: true,\n      },\n      destination: {\n        datatype: 'object',\n        required: true,\n      },\n    },\n    outPorts: {\n      angle: {\n        datatype: 'int',\n        required: true,\n      },\n    },\n  });\n\n  return c.process((input, output) => {\n    if (!input.hasData('origin', 'destination')) { return; }\n    let [origin, destination] = input.getData('origin', 'destination');\n\n    const deltaX = destination.x - origin.x;\n    const deltaY = destination.y - origin.y;\n    origin = null;\n    destination = null;\n    let angle = ((Math.atan2(deltaY, deltaX) * 180) / Math.PI) + 90;\n    if (angle < 0) { angle += 360; }\n    output.sendDone({ angle });\n  });\n};\n",tests:"describe('CalculateAngle component', () => {\n  let c = null;\n  let origin = null;\n  let destination = null;\n  let angle = null;\n  let loader = null;\n  before(() => {\n    loader = new noflo.ComponentLoader(baseDir);\n  });\n  beforeEach(function () {\n    this.timeout(4000);\n    return loader.load('math/CalculateAngle')\n      .then((instance) => {\n        c = instance;\n        origin = noflo.internalSocket.createSocket();\n        destination = noflo.internalSocket.createSocket();\n        c.inPorts.origin.attach(origin);\n        c.inPorts.destination.attach(destination);\n        angle = noflo.internalSocket.createSocket();\n        c.outPorts.angle.attach(angle);\n      });\n  });\n  afterEach(() => {\n    c.outPorts.angle.detach(angle);\n    angle = null;\n  });\n\n  describe('on calculating', () => {\n    it('should return correct angle (135)', (done) => {\n      angle.on('data', (data) => {\n        chai.expect(data).to.equal(135);\n        done();\n      });\n      origin.send({\n        x: 0,\n        y: 0,\n      });\n      destination.send({\n        x: 1,\n        y: 1,\n      });\n    });\n    it('should return correct angle (315)', (done) => {\n      angle.on('data', (data) => {\n        chai.expect(data).to.equal(315);\n        done();\n      });\n      origin.send({\n        x: 0,\n        y: 0,\n      });\n      destination.send({\n        x: -1,\n        y: -1,\n      });\n    });\n    it('should return correct angle (180)', (done) => {\n      angle.on('data', (data) => {\n        chai.expect(data).to.equal(180);\n        done();\n      });\n      origin.send({\n        x: 0,\n        y: 0,\n      });\n      destination.send({\n        x: 0,\n        y: 1,\n      });\n    });\n    it('should return correct angle (270)', (done) => {\n      angle.on('data', (data) => {\n        chai.expect(data).to.equal(270);\n        done();\n      });\n      origin.send({\n        x: 0,\n        y: 0,\n      });\n      destination.send({\n        x: -1,\n        y: 0,\n      });\n    });\n    it('should return correct angle (0)', (done) => {\n      angle.on('data', (data) => {\n        chai.expect(data).to.equal(0);\n        done();\n      });\n      origin.send({\n        x: 0,\n        y: 0,\n      });\n      destination.send({\n        x: 0,\n        y: -1,\n      });\n    });\n    it('should return correct angle (45)', (done) => {\n      angle.on('data', (data) => {\n        chai.expect(data).to.equal(45);\n        done();\n      });\n      origin.send({\n        x: 1,\n        y: 2,\n      });\n      destination.send({\n        x: 2,\n        y: 1,\n      });\n    });\n    it('should return correct angle (270)', (done) => {\n      angle.on('data', (data) => {\n        chai.expect(data).to.equal(270);\n        done();\n      });\n      origin.send({\n        x: 1,\n        y: 2,\n      });\n      destination.send({\n        x: 0,\n        y: 2,\n      });\n    });\n  });\n});\n"},"math/CalculateDistance":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component({\n    description: 'Calculate the distance between two points',\n    icon: 'arrow-right',\n    inPorts: {\n      origin: {\n        datatype: 'object',\n        required: true,\n      },\n      destination: {\n        datatype: 'object',\n        required: true,\n      },\n    },\n    outPorts: {\n      distance: {\n        datatype: 'int',\n        required: true,\n      },\n    },\n  });\n\n  return c.process((input, output) => {\n    if (!input.hasData('origin', 'destination')) { return; }\n    let [origin, destination] = input.getData('origin', 'destination');\n\n    const deltaX = destination.x - origin.x;\n    const deltaY = destination.y - origin.y;\n    origin = null;\n    destination = null;\n    const distance = Math.sqrt((deltaX ** 2) + (deltaY ** 2));\n    output.sendDone({ distance });\n  });\n};\n",tests:"describe('CalculateDistance component', () => {\n  let c = null;\n  let origin = null;\n  let destination = null;\n  let distance = null;\n  let loader = null;\n  before(() => {\n    loader = new noflo.ComponentLoader(baseDir);\n  });\n  beforeEach(function () {\n    this.timeout(4000);\n    return loader.load('math/CalculateDistance')\n      .then((instance) => {\n        c = instance;\n        origin = noflo.internalSocket.createSocket();\n        destination = noflo.internalSocket.createSocket();\n        distance = noflo.internalSocket.createSocket();\n        c.inPorts.origin.attach(origin);\n        c.inPorts.destination.attach(destination);\n        c.outPorts.distance.attach(distance);\n      });\n  });\n\n  describe('on calculating', () => it('should return correct distance', (done) => {\n    distance.on('data', (data) => {\n      chai.expect(data.toPrecision(2)).to.equal('1.4');\n      done();\n    });\n    origin.send({\n      x: 0,\n      y: 0,\n    });\n    destination.send({\n      x: 1,\n      y: 1,\n    });\n  }));\n});\n"},"math/Ceil":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component({\n    icon: 'arrow-up',\n    description: 'Round a number up',\n    inPorts: {\n      in: {\n        datatype: 'number',\n      },\n    },\n    outPorts: {\n      out: {\n        datatype: 'int',\n      },\n    },\n  });\n\n  return c.process((input, output) => {\n    if (!input.hasData('in')) { return; }\n    const data = input.getData('in');\n    output.sendDone(Math.ceil(data));\n  });\n};\n",tests:"describe('Ceil component', () => {\n  let c = null;\n  let vin = null;\n  let vout = null;\n  before(function () {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('math/Ceil')\n      .then((instance) => {\n        c = instance;\n        vin = noflo.internalSocket.createSocket();\n        c.inPorts.in.attach(vin);\n      });\n  });\n  beforeEach(() => {\n    vout = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(vout);\n  });\n  afterEach(() => {\n    c.outPorts.out.detach(vout);\n    vout = null;\n  });\n\n  describe('when instantiated', () => {\n    it('should calculate 5.1 = 6', (done) => {\n      vout.once('data', (res) => {\n        chai.expect(res).to.equal(6);\n        done();\n      });\n      vin.send(5.1);\n    });\n    it('should calculate 2.9 = 3', (done) => {\n      vout.once('data', (res) => {\n        chai.expect(res).to.equal(3);\n        done();\n      });\n      vin.send(2.9);\n    });\n  });\n});\n"},"math/Compare":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component({\n    inPorts: {\n      value: {\n        datatype: 'number',\n        required: true,\n      },\n      comparison: {\n        datatype: 'number',\n        required: true,\n      },\n      operator: {\n        datatype: 'string',\n        control: true,\n        default: '==',\n      },\n    },\n    outPorts: {\n      pass: {\n        datatype: 'number',\n      },\n      fail: {\n        datatype: 'number',\n      },\n    },\n  });\n\n  c.description = 'Compare two numbers';\n  c.icon = 'check';\n\n  c.forwardBrackets = {\n    value: ['pass'],\n    comparison: ['pass'],\n    operator: ['pass'],\n  };\n  return c.process((input, output) => {\n    if (!input.hasData('value', 'comparison')) { return; }\n\n    const value = input.getData('value');\n    const comparison = input.getData('comparison');\n    const operator = input.getData('operator') || '==';\n\n    switch (operator) {\n      case 'eq': case '==':\n        if (value === comparison) {\n          output.sendDone({ pass: value });\n          return;\n        }\n        break;\n      case 'ne': case '!=':\n        if (value !== comparison) {\n          output.sendDone({ pass: value });\n          return;\n        }\n        break;\n      case 'gt': case '>':\n        if (value > comparison) {\n          output.sendDone({ pass: value });\n          return;\n        }\n        break;\n      case 'lt': case '<':\n        if (value < comparison) {\n          output.sendDone({ pass: value });\n          return;\n        }\n        break;\n      case 'ge': case '>=':\n        if (value >= comparison) {\n          output.sendDone({ pass: value });\n          return;\n        }\n        break;\n      case 'le': case '<=':\n        if (value <= comparison) {\n          output.sendDone({ pass: value });\n          return;\n        }\n        break;\n      default: {\n        // Unknown comparison is a fail\n        output.sendDone({ fail: value });\n        return;\n      }\n    }\n\n    output.sendDone({ fail: value });\n  });\n};\n",tests:"describe('Compare component', () => {\n  let c = null;\n  let value = null;\n  let comparison = null;\n  let operator = null;\n  let pass = null;\n  let fail = null;\n  before(function () {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('math/Compare')\n      .then((instance) => {\n        c = instance;\n        value = noflo.internalSocket.createSocket();\n        c.inPorts.value.attach(value);\n        comparison = noflo.internalSocket.createSocket();\n        c.inPorts.comparison.attach(comparison);\n        operator = noflo.internalSocket.createSocket();\n        c.inPorts.operator.attach(operator);\n      });\n  });\n  beforeEach(() => {\n    pass = noflo.internalSocket.createSocket();\n    c.outPorts.pass.attach(pass);\n    fail = noflo.internalSocket.createSocket();\n    c.outPorts.fail.attach(fail);\n  });\n  afterEach(() => {\n    c.outPorts.pass.detach(pass);\n    pass = null;\n    c.outPorts.fail.detach(fail);\n    fail = null;\n  });\n\n  describe('With default equals operator', () => {\n    it('should pass equal numbers', (done) => {\n      pass.on('data', (data) => {\n        chai.expect(data).to.equal(42);\n        done();\n      });\n      fail.on('data', (data) => done(new Error(`Comparison failed with ${data}`)));\n      value.send(42);\n      comparison.send(42);\n    });\n    it('should fail unequal numbers', (done) => {\n      pass.on('data', (data) => done(new Error(`Comparison passed with ${data}`)));\n      fail.on('data', (data) => {\n        chai.expect(data).to.equal(42);\n        done();\n      });\n      value.send(42);\n      comparison.send(41);\n    });\n  });\n  describe('With \"lt\" operator', () => {\n    it('should pass smaller number', (done) => {\n      pass.on('data', (data) => {\n        chai.expect(data).to.equal(42);\n        done();\n      });\n      fail.on('data', (data) => done(new Error(`Comparison failed with ${data}`)));\n      operator.send('lt');\n      value.send(42);\n      comparison.send(43);\n    });\n    it('should fail equal number', (done) => {\n      pass.on('data', (data) => done(new Error(`Comparison passed with ${data}`)));\n      fail.on('data', (data) => {\n        chai.expect(data).to.equal(42);\n        done();\n      });\n      operator.send('lt');\n      value.send(42);\n      comparison.send(42);\n    });\n  });\n});\n"},"math/CountSum":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component({\n    description: 'Sum numbers coming from multiple inputs together',\n    inPorts: {\n      in: {\n        datatype: 'number',\n        addressable: true,\n      },\n    },\n    outPorts: {\n      out: {\n        datatype: 'number',\n      },\n    },\n  });\n\n  c.forwardBrackets = {};\n  return c.process((input, output) => {\n    const indexesWithStream = input.attached('in').filter((idx) => input.hasStream(['in', idx]));\n    if (!indexesWithStream.length) { return; }\n\n    const connection = ['in', indexesWithStream[0]];\n    const stream = input.getStream(connection).filter((ip) => ip.type === 'data');\n\n    let sum = 0;\n    let previous = 0;\n    stream.forEach((packet) => {\n      sum += packet.data;\n\n      // if the data is from the same port as the previous packet\n      // send out just this packets data\n      if (packet.index === previous.index) {\n        output.send({ out: packet.data });\n        sum = 0;\n\n      // if they are from different ones, send out\n      // then store this data for next iteration\n      } else {\n        output.send({ out: sum });\n        sum = packet.data;\n      }\n\n      previous = packet;\n    });\n\n    output.done();\n  });\n};\n",tests:"describe('CountSum component', () => {\n  let c = null;\n  let first = null;\n  let second = null;\n  let sum = null;\n  let loader = null;\n  before(() => {\n    loader = new noflo.ComponentLoader(baseDir);\n  });\n  beforeEach(function () {\n    this.timeout(4000);\n    return loader.load('math/CountSum')\n      .then((instance) => {\n        c = instance;\n        first = noflo.internalSocket.createSocket();\n        second = noflo.internalSocket.createSocket();\n        c.inPorts.in.attach(first);\n        sum = noflo.internalSocket.createSocket();\n        c.outPorts.out.attach(sum);\n      });\n  });\n  afterEach(() => {\n    c.outPorts.out.detach(sum);\n    sum = null;\n    return c.shutdown();\n  });\n\n  describe('with a single connected port', () => it('should forward the same number', (done) => {\n    const expects = [5, 1];\n    const sends = [5, 1];\n\n    sum.on('data', (data) => {\n      chai.expect(data).to.equal(expects.shift());\n      if (!expects.length) {\n        done();\n      }\n    });\n\n    sends.forEach((data) => {\n      first.send(data);\n    });\n    first.disconnect();\n  }));\n\n  describe('with two connected ports', () => it('should sum the inputs together', (done) => {\n    c.inPorts.in.attach(second);\n    const expects = [1, 3, 5, 7];\n    const sendsOne = [1, 3];\n    const sendsTwo = [2, 4];\n\n    sum.on('data', (data) => chai.expect(data).to.equal(expects.shift()));\n    sum.on('disconnect', () => done());\n\n    first.send(sendsOne.shift());\n    second.send(sendsTwo.shift());\n    first.send(sendsOne.shift());\n    second.send(sendsTwo.shift());\n    first.disconnect();\n    second.disconnect();\n  }));\n});\n"},"math/Divide":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component({\n    icon: 'plus',\n    inPorts: {\n      dividend: {\n        datatype: 'all',\n        required: true,\n      },\n      divisor: {\n        datatype: 'all',\n        required: true,\n        control: true,\n      },\n    },\n    outPorts: {\n      quotient: {\n        datatype: 'all',\n      },\n    },\n  });\n\n  return c.process((input, output) => {\n    if (!input.hasData('dividend', 'divisor')) { return; }\n    const [dividend, divisor] = input.getData('dividend', 'divisor');\n    output.sendDone({ quotient: dividend / divisor });\n  });\n};\n",tests:"describe('Divide component', () => {\n  let c = null;\n  let dividend = null;\n  let divisor = null;\n  let quotient = null;\n  before(function () {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('math/Divide')\n      .then((instance) => {\n        c = instance;\n        dividend = noflo.internalSocket.createSocket();\n        divisor = noflo.internalSocket.createSocket();\n        c.inPorts.dividend.attach(dividend);\n        c.inPorts.divisor.attach(divisor);\n      });\n  });\n  beforeEach(() => {\n    quotient = noflo.internalSocket.createSocket();\n    c.outPorts.quotient.attach(quotient);\n  });\n  afterEach(() => {\n    c.outPorts.quotient.detach(quotient);\n    quotient = null;\n  });\n\n  describe('when instantiated', () => it('should calculate 5 / 2', (done) => {\n    quotient.once('data', (res) => {\n      chai.expect(res).to.equal(2.5);\n      done();\n    });\n    dividend.send(5);\n    divisor.send(2);\n  }));\n});\n"},"math/Floor":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component({\n    icon: 'arrow-down',\n    description: 'Round a number down',\n    inPorts: {\n      in: {\n        datatype: 'number',\n      },\n    },\n    outPorts: {\n      out: {\n        datatype: 'int',\n      },\n    },\n  });\n\n  return c.process((input, output) => {\n    if (!input.hasData('in')) { return; }\n    const data = input.getData('in');\n    output.sendDone(Math.floor(data));\n  });\n};\n",tests:"describe('Floor component', () => {\n  let c = null;\n  let vin = null;\n  let vout = null;\n  before(function () {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('math/Floor')\n      .then((instance) => {\n        c = instance;\n        vin = noflo.internalSocket.createSocket();\n        c.inPorts.in.attach(vin);\n      });\n  });\n  beforeEach(() => {\n    vout = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(vout);\n  });\n  afterEach(() => {\n    c.outPorts.out.detach(vout);\n    vout = null;\n  });\n\n  describe('when instantiated', () => {\n    it('should calculate 5.4 = 5', (done) => {\n      vout.once('data', (res) => {\n        chai.expect(res).to.equal(5);\n        done();\n      });\n      vin.send(5.4);\n    });\n    it('should calculate 2.9 = 2', (done) => {\n      vout.once('data', (res) => {\n        chai.expect(res).to.equal(2);\n        done();\n      });\n      vin.send(2.9);\n    });\n  });\n});\n"},"math/Exponentiate":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.icon = 'caret-up';\n  c.inPorts.add('base', {\n    datatype: 'number',\n    required: true,\n  });\n  c.inPorts.add('exponent', {\n    datatype: 'number',\n    required: true,\n    control: true,\n  });\n  c.outPorts.add('power',\n    { datatype: 'number' });\n\n  return c.process((input, output) => {\n    if (!input.hasData('base', 'exponent')) { return; }\n    const [base, exponent] = input.getData('base', 'exponent');\n    output.sendDone({ power: (base ** exponent) });\n  });\n};\n",tests:"describe('Exponentiate component', () => {\n  let c = null;\n  let base = null;\n  let exponent = null;\n  let power = null;\n  before(function () {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('math/Exponentiate')\n      .then((instance) => {\n        c = instance;\n        base = noflo.internalSocket.createSocket();\n        exponent = noflo.internalSocket.createSocket();\n        c.inPorts.base.attach(base);\n        c.inPorts.exponent.attach(exponent);\n      });\n  });\n  beforeEach(() => {\n    power = noflo.internalSocket.createSocket();\n    c.outPorts.power.attach(power);\n  });\n  afterEach(() => {\n    c.outPorts.power.attach(power);\n    power = null;\n  });\n\n  describe('when instantiated', () => it('should calculate 2 to the power 5 = 32', (done) => {\n    power.once('data', (res) => {\n      chai.expect(res).to.equal(32);\n      done();\n    });\n    base.send(2);\n    exponent.send(5);\n  }));\n});\n"},"math/MapRange":{language:"javascript",source:"const noflo = require('noflo');\n\n/* eslint-disable camelcase */\n\nexports.getComponent = () => {\n  const c = new noflo.Component({\n    inPorts: {\n      in: {\n        datatype: 'number',\n        required: true,\n      },\n      in_lower: {\n        datatype: 'number',\n        description: 'the lower bound of the input value',\n        required: true,\n        control: true,\n      },\n      in_upper: {\n        datatype: 'number',\n        description: 'the uppwer bound of the input value',\n        required: true,\n        control: true,\n      },\n      out_lower: {\n        datatype: 'number',\n        description: 'the lower bound of the output value',\n        required: true,\n        control: true,\n      },\n      out_upper: {\n        datatype: 'number',\n        description: 'the uppwer bound of the output value',\n        required: true,\n        control: true,\n      },\n    },\n    outPorts: {\n      out: {\n        datatype: 'number',\n      },\n    },\n  });\n\n  c.icon = 'reorder';\n  c.description = 'Map a number from a source range to a target reange.';\n\n  // On data flow.\n  return c.process((input, output) => {\n    if (!input.hasData('in', 'in_lower', 'in_upper', 'out_upper', 'out_lower')) { return; }\n\n    const data = input.getData('in');\n    const in_lower_data = input.getData('in_lower');\n    const in_upper_data = input.getData('in_upper');\n    const out_upper_data = input.getData('out_upper');\n    const out_lower_data = input.getData('out_lower');\n\n    const in_lower = Math.min(in_lower_data, in_upper_data);\n    const in_upper = Math.max(in_lower_data, in_upper_data);\n    const in_range = in_upper - in_lower;\n    const out_lower = Math.min(out_lower_data, out_upper_data);\n    const out_upper = Math.max(out_lower_data, out_upper_data);\n    const out_range = out_upper - out_lower;\n    const value = out_lower + (((data - in_lower) * out_range) / in_range);\n    output.sendDone(value);\n  });\n};\n",tests:"/* eslint-disable camelcase */\n\ndescribe('MapRange component', () => {\n  let c = null;\n  let input = null;\n  let in_lower = null;\n  let in_upper = null;\n  let out_lower = null;\n  let out_upper = null;\n  let result = null;\n  let loader = null;\n  before(() => {\n    loader = new noflo.ComponentLoader(baseDir);\n  });\n  beforeEach(function () {\n    this.timeout(4000);\n    return loader.load('math/MapRange')\n      .then((instance) => {\n        c = instance;\n        input = noflo.internalSocket.createSocket();\n        in_lower = noflo.internalSocket.createSocket();\n        in_upper = noflo.internalSocket.createSocket();\n        out_lower = noflo.internalSocket.createSocket();\n        out_upper = noflo.internalSocket.createSocket();\n        result = noflo.internalSocket.createSocket();\n        c.inPorts.in.attach(input);\n        c.inPorts.in_lower.attach(in_lower);\n        c.inPorts.in_upper.attach(in_upper);\n        c.inPorts.out_lower.attach(out_lower);\n        c.inPorts.out_upper.attach(out_upper);\n        c.outPorts.out.attach(result);\n      });\n  });\n\n  describe('when instantiated', () => {\n    it('should map number between lower and upper', (done) => {\n      result.once('data', (res) => {\n        chai.expect(res).to.equal(50);\n        done();\n      });\n      in_lower.send(0);\n      in_upper.send(10);\n      out_lower.send(0);\n      out_upper.send(100);\n      input.send(5);\n    });\n\n    it('should map number between lower and upper (with offset)', (done) => {\n      result.once('data', (res) => {\n        chai.expect(res).to.equal(60);\n        done();\n      });\n      in_lower.send(5);\n      in_upper.send(10);\n      out_lower.send(50);\n      out_upper.send(100);\n      input.send(6);\n    });\n\n    it('should generate handle mixed lower and upper', (done) => {\n      result.once('data', (res) => {\n        chai.expect(res).to.equal(50);\n        done();\n      });\n      in_lower.send(10);\n      in_upper.send(0);\n      out_lower.send(100);\n      out_upper.send(0);\n      input.send(5);\n    });\n  });\n});\n"},"math/Modulo":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component({\n    inPorts: {\n      dividend: {\n        datatype: 'all',\n        required: true,\n      },\n      divisor: {\n        datatype: 'all',\n        required: true,\n        control: true,\n      },\n    },\n    outPorts: {\n      remainder: {\n        datatype: 'all',\n      },\n    },\n  });\n\n  return c.process((input, output) => {\n    if (!input.hasData('dividend', 'divisor')) { return; }\n    const [dividend, divisor] = input.getData('dividend', 'divisor');\n    output.sendDone(dividend % divisor);\n  });\n};\n",tests:"describe('Modulo component', () => {\n  let c = null;\n  let dividend = null;\n  let divisor = null;\n  let remainder = null;\n  before(function () {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('math/Modulo')\n      .then((instance) => {\n        c = instance;\n        dividend = noflo.internalSocket.createSocket();\n        divisor = noflo.internalSocket.createSocket();\n        c.inPorts.dividend.attach(dividend);\n        c.inPorts.divisor.attach(divisor);\n      });\n  });\n  beforeEach(() => {\n    remainder = noflo.internalSocket.createSocket();\n    c.outPorts.remainder.attach(remainder);\n  });\n  afterEach(() => {\n    c.outPorts.remainder.detach(remainder);\n    remainder = null;\n  });\n\n  describe('when instantiated', () => {\n    it('should calculate 5 / 2 = 1', (done) => {\n      remainder.once('data', (res) => {\n        chai.expect(res).to.equal(1);\n        done();\n      });\n      dividend.send(5);\n      divisor.send(2);\n    });\n    it('should calculate 10 / 2 = 0', (done) => {\n      remainder.once('data', (res) => {\n        chai.expect(res).to.equal(0);\n        done();\n      });\n      dividend.send(10);\n      divisor.send(2);\n    });\n  });\n});\n"},"math/Multiply":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component({\n    icon: 'asterisk',\n    inPorts: {\n      multiplicand: {\n        datatype: 'all',\n        required: true,\n      },\n      multiplier: {\n        datatype: 'all',\n        required: true,\n        control: true,\n      },\n    },\n    outPorts: {\n      product: {\n        datatype: 'all',\n        required: true,\n      },\n    },\n  });\n\n  return c.process((input, output) => {\n    if (!input.hasData('multiplicand', 'multiplier')) { return; }\n    const [multiplicand, multiplier] = input.getData('multiplicand', 'multiplier');\n    output.sendDone({ product: multiplicand * multiplier });\n  });\n};\n",tests:"describe('Multiply component', () => {\n  let c = null;\n  let multiplicand = null;\n  let multiplier = null;\n  let product = null;\n  before(function () {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('math/Multiply')\n      .then((instance) => {\n        c = instance;\n        multiplicand = noflo.internalSocket.createSocket();\n        multiplier = noflo.internalSocket.createSocket();\n        c.inPorts.multiplicand.attach(multiplicand);\n        c.inPorts.multiplier.attach(multiplier);\n      });\n  });\n  beforeEach(() => {\n    product = noflo.internalSocket.createSocket();\n    c.outPorts.product.attach(product);\n  });\n  afterEach(() => {\n    c.outPorts.product.attach(product);\n    product = null;\n  });\n\n  describe('when instantiated', () => it('should calculate 2 * 5', (done) => {\n    product.once('data', (res) => {\n      chai.expect(res).to.equal(10);\n      done();\n    });\n    multiplicand.send(2);\n    multiplier.send(5);\n  }));\n});\n"},"math/Random":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component({\n    icon: 'random',\n    description: 'Generate a random number between 0 and 1',\n    inPorts: {\n      in: {\n        datatype: 'bang',\n      },\n    },\n    outPorts: {\n      out: {\n        datatype: 'number',\n      },\n    },\n  });\n\n  return c.process((input, output) => {\n    if (!input.hasData('in')) { return; }\n    input.getData('in');\n    output.sendDone(Math.random());\n  });\n};\n",tests:"describe('Random component', () => {\n  let c = null;\n  let bang = null;\n  let result = null;\n  before(function () {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('math/Random')\n      .then((instance) => {\n        c = instance;\n        bang = noflo.internalSocket.createSocket();\n        c.inPorts.in.attach(bang);\n      });\n  });\n  beforeEach(() => {\n    result = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(result);\n  });\n  afterEach(() => {\n    c.outPorts.out.attach(result);\n    result = null;\n  });\n\n  describe('when instantiated', () => it('should generate number between 0 and 1', (done) => {\n    result.once('data', (res) => {\n      chai.expect(res).to.be.within(0, 1);\n      done();\n    });\n    bang.send(null);\n  }));\n});\n"},"math/RangedRandomInt":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component({\n    inPorts: {\n      in: {\n        datatype: 'bang',\n        required: true,\n      },\n      lower: {\n        datatype: 'number',\n        description: 'the lower bound',\n        control: true,\n      },\n      upper: {\n        datatype: 'number',\n        description: 'the uppwer bound',\n        control: true,\n      },\n    },\n    outPorts: {\n      out: {\n        datatype: 'number',\n        required: true,\n      },\n    },\n  });\n\n  c.icon = 'random';\n  c.description = 'Generate a random number in the given range.';\n\n  c.forwardBrackets = {\n    in: ['out'],\n    lower: ['out'],\n    upper: ['out'],\n  };\n\n  // On data flow.\n  return c.process((input, output) => {\n    if (!input.hasData('in', 'lower', 'upper')) { return; }\n    let lower = input.getData('lower');\n    let upper = input.getData('upper');\n\n    // Math.random() returns a number between 0 (inclusive) and 1 (exclusive)\n    lower = Math.min(lower, upper);\n    upper = Math.max(lower, upper);\n    const range = (0.5 + upper) - lower;\n    const value = lower + (Math.random() * range);\n    output.sendDone(Math.floor(value));\n  });\n};\n",tests:"describe('RangedRandomInt component', () => {\n  let c = null;\n  let bang = null;\n  let lower = null;\n  let upper = null;\n  let result = null;\n  let loader = null;\n  before(() => {\n    loader = new noflo.ComponentLoader(baseDir);\n  });\n  beforeEach(function () {\n    this.timeout(4000);\n    return loader.load('math/RangedRandomInt')\n      .then((instance) => {\n        c = instance;\n        bang = noflo.internalSocket.createSocket();\n        lower = noflo.internalSocket.createSocket();\n        upper = noflo.internalSocket.createSocket();\n        result = noflo.internalSocket.createSocket();\n        c.inPorts.in.attach(bang);\n        c.inPorts.lower.attach(lower);\n        c.inPorts.upper.attach(upper);\n        c.outPorts.out.attach(result);\n      });\n  });\n\n  describe('when instantiated', () => {\n    it('should generate number between lower and upper', (done) => {\n      result.once('data', (res) => {\n        chai.expect(res).to.be.within(1, 6);\n        done();\n      });\n      lower.send(1);\n      upper.send(6);\n      bang.send(null);\n    });\n\n    it('should generate an integer number', (done) => {\n      result.once('data', (res) => {\n        chai.expect(res).to.equal(Math.floor(res));\n        done();\n      });\n      lower.send(1);\n      upper.send(6);\n      bang.send(null);\n    });\n\n    it('should generate handle mixed lower and upper', (done) => {\n      result.once('data', (res) => {\n        chai.expect(res).to.be.within(1, 6);\n        done();\n      });\n      lower.send(6);\n      upper.send(1);\n      bang.send(null);\n    });\n  });\n});\n"},"math/SendNumber":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component({\n    inPorts: {\n      number: {\n        datatype: 'number',\n        required: true,\n        control: true,\n      },\n      in: {\n        datatype: 'bang',\n        required: true,\n      },\n    },\n    outPorts: {\n      out: {\n        datatype: 'number',\n        required: true,\n      },\n    },\n  });\n\n  return c.process((input, output) => {\n    if (!input.hasData('in', 'number')) { return; }\n    input.getData('in');\n    const number = input.getData('number');\n\n    output.sendDone({ out: number });\n  });\n};\n"},"math/Subtract":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component({\n    icon: 'plus',\n    inPorts: {\n      minuend: {\n        datatype: 'all',\n        required: true,\n      },\n      subtrahend: {\n        datatype: 'all',\n        required: true,\n        control: true,\n      },\n    },\n    outPorts: {\n      difference: {\n        datatype: 'all',\n      },\n    },\n  });\n\n  return c.process((input, output) => {\n    if (!input.hasData('minuend', 'subtrahend')) { return; }\n    const [minuend, subtrahend] = input.getData('minuend', 'subtrahend');\n    output.sendDone(minuend - subtrahend);\n  });\n};\n",tests:"describe('Subtract component', () => {\n  let c = null;\n  let minuend = null;\n  let subtrahend = null;\n  let difference = null;\n  before(function () {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('math/Subtract')\n      .then((instance) => {\n        c = instance;\n        minuend = noflo.internalSocket.createSocket();\n        subtrahend = noflo.internalSocket.createSocket();\n        c.inPorts.minuend.attach(minuend);\n        c.inPorts.subtrahend.attach(subtrahend);\n      });\n  });\n  beforeEach(() => {\n    difference = noflo.internalSocket.createSocket();\n    c.outPorts.difference.attach(difference);\n  });\n  afterEach(() => {\n    c.outPorts.difference.attach(difference);\n    difference = null;\n  });\n\n  describe('when instantiated', () => it('should calculate 2 - 5', (done) => {\n    difference.once('data', (res) => {\n      chai.expect(res).to.equal(-3);\n      done();\n    });\n    minuend.send(2);\n    subtrahend.send(5);\n  }));\n});\n"},"objects/ComparePath":{language:"javascript",source:"/* eslint eqeqeq: 0 */\nconst noflo = require('noflo');\nconst jsonpath = require('jsonpath');\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n  c.description = 'Compare an object value extracted with a JSONPath expression';\n  c.icon = 'check';\n  c.inPorts.add('in', {\n    datatype: 'object',\n    description: 'Object to query',\n    required: true,\n  });\n  c.inPorts.add('path', {\n    datatype: 'string',\n    description: 'JSONPath expression',\n    required: true,\n    control: true,\n  });\n  c.inPorts.add('comparison', {\n    datatype: 'number',\n    description: 'Value to compare against',\n    required: true,\n    control: true,\n  });\n  c.inPorts.add('operator', {\n    datatype: 'string',\n    description: 'Comparison operator',\n    control: true,\n    default: '==',\n    values: [\n      '==',\n      '!=',\n      '>',\n      '<',\n      '>=',\n      '<=',\n    ],\n  });\n  c.outPorts.add('pass', {\n    datatype: 'object',\n    description: 'Object that passed the comparison',\n  });\n  c.outPorts.add('fail', {\n    datatype: 'object',\n    description: 'Object that failed the comparison',\n  });\n  c.outPorts.add('error', {\n    datatype: 'object',\n  });\n  return c.process((input, output) => {\n    if (!input.hasData('in', 'path', 'comparison')) {\n      return;\n    }\n    let operator = '==';\n    if (input.attached('operator').length > 0) {\n      if (!input.hasData('operator')) {\n        return;\n      }\n      operator = input.getData('operator');\n    }\n    const [data, path, comparison] = input.getData('in', 'path', 'comparison');\n    let result;\n    try {\n      result = jsonpath.value(data, path);\n    } catch (e) {\n      output.done(e);\n      return;\n    }\n\n    let passed = false;\n    switch (operator) {\n      case '==': {\n        passed = result == comparison;\n        break;\n      }\n      case '!=': {\n        passed = result != comparison;\n        break;\n      }\n      case '>': {\n        passed = result > comparison;\n        break;\n      }\n      case '<': {\n        passed = result < comparison;\n        break;\n      }\n      case '>=': {\n        passed = result >= comparison;\n        break;\n      }\n      case '<=': {\n        passed = result <= comparison;\n        break;\n      }\n      default: {\n        output.done(new Error(`Unknown operator ${operator}`));\n        return;\n      }\n    }\n    if (passed) {\n      output.sendDone({\n        pass: data,\n      });\n      return;\n    }\n    output.sendDone({\n      fail: data,\n    });\n  });\n};\n",tests:"describe('ComparePath', () => {\n  let c = null;\n  let inIn = null;\n  let pathIn = null;\n  let comparisonIn = null;\n  let operatorIn = null;\n  let passOut = null;\n  let failOut = null;\n  let errorOut = null;\n\n  before((done) => {\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('objects/ComparePath', (err, instance) => {\n      if (err) { return done(err); }\n      c = instance;\n      return done();\n    });\n  });\n\n  beforeEach((done) => {\n    inIn = noflo.internalSocket.createSocket();\n    pathIn = noflo.internalSocket.createSocket();\n    comparisonIn = noflo.internalSocket.createSocket();\n    operatorIn = noflo.internalSocket.createSocket();\n    failOut = noflo.internalSocket.createSocket();\n    errorOut = noflo.internalSocket.createSocket();\n    passOut = noflo.internalSocket.createSocket();\n\n    c.inPorts.in.attach(inIn);\n    c.inPorts.path.attach(pathIn);\n    c.inPorts.comparison.attach(comparisonIn);\n    c.inPorts.operator.attach(operatorIn);\n    c.outPorts.pass.attach(passOut);\n    c.outPorts.fail.attach(failOut);\n    c.outPorts.error.attach(errorOut);\n    done();\n  });\n\n  afterEach((done) => {\n    c.outPorts.pass.detach(passOut);\n    c.outPorts.fail.detach(failOut);\n    c.outPorts.error.detach(errorOut);\n    done();\n  });\n\n  describe('with an object containing a passing value', () => {\n    it('should send the object to the PASS port', (done) => {\n      const data = {\n        question: undefined,\n        answer: 42,\n      };\n      passOut.on('data', (data) => {\n        chai.expect(data).to.eql(data);\n        done();\n      });\n      failOut.on('data', () => {\n        done(new Error('Received unexpected fail'));\n      });\n      errorOut.on('data', done);\n      pathIn.send('$.answer');\n      comparisonIn.send(41);\n      operatorIn.send('>');\n      inIn.send(data);\n    });\n  });\n  describe('with an object containing a failing value', () => {\n    it('should send the object to the FAIL port', (done) => {\n      const data = {\n        question: undefined,\n        answer: 42,\n      };\n      failOut.on('data', (data) => {\n        chai.expect(data).to.eql(data);\n        done();\n      });\n      passOut.on('data', () => {\n        done(new Error('Received unexpected pass'));\n      });\n      errorOut.on('data', done);\n      pathIn.send('$.answer');\n      comparisonIn.send(41);\n      operatorIn.send('<');\n      inIn.send(data);\n    });\n  });\n});\n"},"objects/CallMethod":{language:"javascript",source:"const noflo = require('noflo');\n\n/* eslint-disable\n    prefer-spread,\n*/\nexports.getComponent = function () {\n  const c = new noflo.Component();\n\n  c.description = 'call a method on an object';\n  c.icon = 'gear';\n\n  c.inPorts = new noflo.InPorts({\n    in: {\n      datatype: 'object',\n      description: 'Object on which a method will be called',\n      required: true,\n    },\n    method: {\n      datatype: 'string',\n      description: 'Name of the method to call',\n      required: true,\n      control: true,\n    },\n    arguments: {\n      datatype: 'all',\n      description: 'Arguments given to the method (one argument per IP)',\n    },\n  });\n  c.outPorts = new noflo.OutPorts({\n    out: {\n      datatype: 'all',\n      description: 'Value returned by the method call',\n      required: true,\n    },\n    error: {\n      datatype: 'object',\n    },\n  });\n\n  return c.process((input, output) => {\n    if (!input.hasData('method', 'in')) { return; }\n    if (input.attached('arguments').length > 0) {\n      if (!input.hasData('arguments')) { return; }\n    }\n    let args = [];\n\n    // because we can have multiple data packets,\n    // we want to get them all, and use just the data\n    const argsIn = input.getStream('arguments')\n      .filter((ip) => (ip.type === 'data') && (ip.data != null))\n      .map((ip) => ip.data);\n\n    args = args.concat(argsIn);\n    const data = input.getData('in');\n    const method = input.getData('method');\n\n    if (!data[method]) {\n      output.sendDone(new Error(`Method '${method}' not available`));\n      return;\n    }\n\n    output.sendDone({\n      out: data[method].apply(data, args),\n    });\n  });\n};\n",tests:"describe('CallMethod component', () => {\n  let c = null;\n  let method = null;\n  let args = null;\n  let ins = null;\n  let out = null;\n  before(function (done) {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('objects/CallMethod', (err, instance) => {\n      if (err) { return done(err); }\n      c = instance;\n      return done();\n    });\n  });\n  beforeEach((done) => {\n    method = noflo.internalSocket.createSocket();\n    args = noflo.internalSocket.createSocket();\n    ins = noflo.internalSocket.createSocket();\n    c.inPorts.method.attach(method);\n    c.inPorts.in.attach(ins);\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n    return done();\n  });\n  afterEach((done) => {\n    c.inPorts.arguments.detach(args);\n    c.outPorts.out.detach(out);\n    return done();\n  });\n\n  describe('with an input object', () => it('should return a value', (done) => {\n    out.on('data', (data) => {\n      chai.expect(data).to.equal(3);\n      return done();\n    });\n\n    method.post(new noflo.IP('data', 'getA'));\n    return ins.post(new noflo.IP('data', {\n      a: 3,\n      getA() { return this.a; },\n    }));\n  }));\n\n  return describe('with arguments for method', () => it('should return the modified object', (done) => {\n    c.inPorts.arguments.attach(args);\n    const inc = function (forA, forB) {\n      this.a += forA;\n      this.b += forB;\n      return this;\n    };\n\n    out.on('data', (data) => {\n      chai.expect(data).to.eql({\n        a: 2,\n        b: 15,\n        inc,\n      });\n      return done();\n    });\n\n    method.post(new noflo.IP('data', 'inc'));\n    args.post(new noflo.IP('openBracket'));\n    args.post(new noflo.IP('data', 1));\n    args.post(new noflo.IP('data', 5));\n    args.post(new noflo.IP('closeBracket'));\n    return ins.post(new noflo.IP('data', {\n      a: 1,\n      b: 10,\n      inc,\n    }));\n  }));\n});\n"},"objects/CreateDate":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = function () {\n  const c = new noflo.Component({\n    description: 'Create a new Date object from string',\n    icon: 'clock-o',\n  });\n\n  c.inPorts = new noflo.InPorts({\n    in: {\n      datatype: 'string',\n      description: 'A string representation of a date in RFC2822/IETF/ISO8601 format',\n    },\n  });\n\n  c.outPorts = new noflo.OutPorts({\n    out: {\n      datatype: 'object',\n      description: 'A new Date object',\n    },\n  });\n\n  return c.process((input, output) => {\n    let date;\n    if (!input.has('in')) { return; }\n    const data = input.getData('in');\n\n    if ((data === 'now') || (data === null) || (data === true)) {\n      date = new Date();\n    } else {\n      date = new Date(data);\n    }\n\n    output.sendDone({ out: date });\n  });\n};\n"},"objects/CreateError":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = function () {\n  const c = new noflo.Component({\n    inPorts: {\n      start: {\n        datatype: 'string',\n      },\n    },\n    outPorts: {\n      out: {\n        datatype: 'object',\n      },\n    },\n  });\n\n  c.icon = 'bug';\n  c.description = 'Create an Error object';\n\n  c.forwardBrackets = { start: ['out'] };\n\n  return c.process((input, output) => {\n    let err;\n    const data = input.getData('start');\n\n    if (typeof data === 'string') {\n      err = new Error(data);\n    } else {\n      err = new Error('Error');\n      err.context = data;\n    }\n\n    output.sendDone({ out: err });\n  });\n};\n"},"objects/CreateObject":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = function () {\n  const c = new noflo.Component({ description: 'Create an empty object' });\n\n  c.inPorts = new noflo.InPorts({\n    start: {\n      datatype: 'bang',\n      description: 'Signal to create a new object',\n    },\n  });\n  c.outPorts = new noflo.OutPorts({\n    out: {\n      datatype: 'object',\n      description: 'A new empty object',\n    },\n  });\n\n  c.forwardBrackets = { start: ['out'] };\n  return c.process((input, output) => {\n    if (!input.hasData('start')) { return; }\n    input.getData('start');\n    output.sendDone({ out: {} });\n  });\n};\n"},"objects/DuplicateProperty":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n\n  c.inPorts = new noflo.InPorts({\n    property: {\n      datatype: 'all',\n      required: true,\n      control: true,\n      description: 'property to duplicate',\n    },\n    separator: {\n      datatype: 'string',\n      default: '/',\n      control: true,\n      description: 'separator to use to join property',\n    },\n    in: {\n      datatype: 'object',\n      description: 'object to duplicate property on',\n      required: true,\n    },\n  });\n  c.outPorts = new noflo.OutPorts({\n    out: {\n      datatype: 'object',\n    },\n  });\n\n  return c.process((input, output) => {\n    if (!input.hasData('property', 'separator', 'in')) { return; }\n    const [prop, sep, data] = Array.from(input.getData('property', 'separator', 'in'));\n\n    const properties = {};\n    const separator = (sep != null) ? sep : '/';\n\n    if (prop) {\n      if (typeof prop === 'object') {\n        output.done(new Error('Property name cannot be an object'));\n        return;\n      }\n\n      const propParts = prop.split('=');\n      if (propParts.length > 2) {\n        properties[propParts.pop()] = propParts;\n      } else {\n        // eslint-disable-next-line prefer-destructuring\n        properties[propParts[1]] = propParts[0];\n      }\n    }\n\n    if (data) {\n      Object.keys(properties).forEach((newprop) => {\n        const original = properties[newprop];\n        if (typeof original === 'string') {\n          data[newprop] = data[original];\n          return;\n        }\n\n        const newValues = [];\n        original.forEach((originalProp) => {\n          newValues.push(data[originalProp]);\n        });\n        data[newprop] = newValues.join(separator);\n      });\n\n      output.sendDone(data);\n    }\n  });\n};\n",tests:"describe('DuplicateProperty component', () => {\n  let c = null;\n  let ins = null;\n  let property = null;\n  let separator = null;\n  let out = null;\n\n  before((done) => {\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('objects/DuplicateProperty', (err, instance) => {\n      if (err) { return done(err); }\n      c = instance;\n      ins = noflo.internalSocket.createSocket();\n      property = noflo.internalSocket.createSocket();\n      separator = noflo.internalSocket.createSocket();\n      out = noflo.internalSocket.createSocket();\n      c.inPorts.in.attach(ins);\n      c.inPorts.property.attach(property);\n      c.inPorts.separator.attach(separator);\n      c.outPorts.out.attach(out);\n      return done();\n    });\n  });\n\n  return describe('duplicate property', () => it('should duplicate property ', (done) => {\n    const output = [];\n    out.on('data', (data) => output.push(data));\n    out.once('disconnect', () => {\n      chai.expect(output).to.eql([{\n        a: 'eh', b: 2, c: 3, d: 'eh',\n      }]);\n      return done();\n    });\n    separator.post(new noflo.IP('data', ','));\n    property.post(new noflo.IP('data', 'a=d'));\n    property.post(new noflo.IP('closeBracket'));\n    ins.post(new noflo.IP('data', { a: 'eh', b: 2, c: 3 }));\n    return ins.post(new noflo.IP('closeBracket'));\n  }));\n});\n"},"objects/Extend":{language:"javascript",source:"const noflo = require('noflo');\n\nconst extend = function (object, properties, other) {\n  const extended = object;\n  Object.keys(properties).forEach((key) => {\n    const val = properties[key];\n    extended[key] = val;\n  });\n  if (other != null) {\n    Object.keys(other).forEach((key) => {\n      const val = other[key];\n      extended[key] = val;\n    });\n  }\n  return extended;\n};\n\nexports.getComponent = function () {\n  const c = new noflo.Component({\n    description: 'Extend an incoming object to some predefined objects, optionally by a certain property',\n  });\n\n  c.inPorts = new noflo.InPorts({\n    in: {\n      datatype: 'object',\n      description: 'Object to extend',\n      required: true,\n    },\n    base: {\n      datatype: 'object',\n      description: 'Objects to extend with (one object per IP)',\n      required: true,\n    },\n    key: {\n      datatype: 'string',\n      description: 'Property name to extend with',\n      default: false,\n      control: true,\n    },\n    reverse: {\n      datatype: 'boolean',\n      description: 'A string equal \"true\" if you want to reverse the order of extension algorithm',\n      default: false,\n      control: true,\n    },\n  });\n\n  c.outPorts = new noflo.OutPorts({\n    out: {\n      datatype: 'object',\n      description: 'The object received on port \"in\" extended',\n      required: true,\n    },\n  });\n\n  return c.process((input, output) => {\n    if (!input.hasData('in')) { return; }\n    if (!input.has('base')) { return; }\n    if (input.attached('key').length > 0) { if (!input.hasData('key')) { return; } }\n    if (input.attached('reverse').length > 0) { if (!input.hasData('reverse')) { return; } }\n\n    let reverse = false;\n    let key = input.getData('key');\n\n    const bases = input.getStream('base')\n      .filter((ip) => ip.type === 'data')\n      .map((ip) => ip.data);\n    const data = input.getData('in');\n\n    if (key === undefined) {\n      key = null;\n    }\n\n    // Normally, the passed IP object is extended into base objects (i.e.\n    // attributes in IP object takes precendence). Pass `true` to reverse\n    // would make the passed IP object the base (i.e. attributes in base\n    // objects take precedence.\n    reverse = String(input.getData('reverse')) === 'true';\n\n    let out = {};\n    bases.forEach((base) => {\n      // Only extend when there's no key specified...\n      // or when the specified attribute matches\n      if ((key == null) || ((data[key] != null) && (data[key] === base[key]))) {\n        out = extend(out, base);\n      }\n    });\n\n    // Put on data\n    if (reverse) {\n      output.sendDone(extend({}, data, out));\n      return;\n    }\n    output.sendDone(extend(out, data));\n  });\n};\n",tests:"describe('Extend component', () => {\n  let c = null;\n  let key = null;\n  let reverse = null;\n  let base = null;\n  let ins = null;\n  let out = null;\n\n  const object1 = {\n    a: 1,\n    b: 2,\n  };\n  const object2 = {\n    a: 3,\n    c: 5,\n  };\n  const object3 = {\n    c: 5,\n    d: 6,\n  };\n\n  before(function (done) {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('objects/Extend', (err, instance) => {\n      if (err) { return done(err); }\n      c = instance;\n      return done();\n    });\n  });\n  beforeEach((done) => {\n    key = noflo.internalSocket.createSocket();\n    reverse = noflo.internalSocket.createSocket();\n    base = noflo.internalSocket.createSocket();\n    c.inPorts.base.attach(base);\n    ins = noflo.internalSocket.createSocket();\n    c.inPorts.in.attach(ins);\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n    return done();\n  });\n  afterEach((done) => {\n    c.inPorts.reverse.detach(reverse);\n    c.inPorts.key.detach(key);\n    c.outPorts.out.detach(out);\n    return done();\n  });\n\n  describe('with two bases and an object to extend', () => it('should produce an object based on all three', (done) => {\n    out.on('data', (data) => {\n      chai.expect(data).to.eql({\n        a: 3,\n        b: 2,\n        c: 5,\n        d: 6,\n      });\n      return done();\n    });\n\n    base.post(new noflo.IP('openBracket'));\n    base.post(new noflo.IP('data', object1));\n    base.post(new noflo.IP('data', object2));\n    base.post(new noflo.IP('closeBracket'));\n\n    return ins.post(new noflo.IP('data', object3));\n  }));\n\n  describe('with two bases and an empty object to extend', () => it('should produce an object based on the two', (done) => {\n    out.on('data', (data) => {\n      chai.expect(data).to.eql({\n        a: 3,\n        b: 2,\n        c: 5,\n      });\n      return done();\n    });\n\n    base.post(new noflo.IP('openBracket'));\n    base.post(new noflo.IP('data', object1));\n    base.post(new noflo.IP('data', object2));\n    base.post(new noflo.IP('closeBracket'));\n\n    return ins.post(new noflo.IP('data', {}));\n  }));\n\n  describe('with a \"c\" key for the extend', () => it('should produce an object from the only matching base and the input', (done) => {\n    c.inPorts.key.attach(key);\n\n    out.on('data', (data) => {\n      chai.expect(data).to.eql({\n        a: 3,\n        c: 5,\n        d: 6,\n      });\n      return done();\n    });\n\n    key.post(new noflo.IP('data', 'c'));\n\n    base.post(new noflo.IP('openBracket'));\n    base.post(new noflo.IP('data', object1));\n    base.post(new noflo.IP('data', object2));\n    base.post(new noflo.IP('closeBracket'));\n\n    return ins.post(new noflo.IP('data', object3));\n  }));\n\n  describe('with key that none of the objects match', () => it('should produce an object only based on input data', (done) => {\n    c.inPorts.key.attach(key);\n\n    out.on('data', (data) => {\n      chai.expect(data).to.eql({\n        c: 5,\n        d: 6,\n      });\n      return done();\n    });\n\n    key.post(new noflo.IP('data', 'norris'));\n\n    base.post(new noflo.IP('openBracket'));\n    base.post(new noflo.IP('data', object1));\n    base.post(new noflo.IP('data', object2));\n    base.post(new noflo.IP('closeBracket'));\n\n    return ins.post(new noflo.IP('data', object3));\n  }));\n\n  describe('with no base objects (empty stream)', () => it('should produce an object only based on input data', (done) => {\n    out.on('data', (data) => {\n      chai.expect(data).to.eql({\n        c: 5,\n        d: 6,\n      });\n      return done();\n    });\n\n    base.post(new noflo.IP('openBracket'));\n    base.post(new noflo.IP('closeBracket'));\n    return ins.post(new noflo.IP('data', object3));\n  }));\n\n  return describe('with the reverse flag set', () => it('should produce the expected object', (done) => {\n    c.inPorts.reverse.attach(reverse);\n    out.on('data', (data) => {\n      chai.expect(data).to.eql;\n      ({\n        a: 3,\n        b: 2,\n        c: 5,\n        d: 6,\n      });\n      return done();\n    });\n\n    reverse.post(new noflo.IP('data', 'true'));\n\n    base.post(new noflo.IP('openBracket'));\n    base.post(new noflo.IP('data', object1));\n    base.post(new noflo.IP('data', object2));\n    base.post(new noflo.IP('closeBracket'));\n\n    return ins.post(new noflo.IP('data', object3));\n  }));\n});\n"},"objects/ExtractProperty":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = function () {\n  const c = new noflo.Component({\n    description: 'Given a key, return only the value matching that key in the incoming object',\n  });\n\n  c.inPorts = new noflo.InPorts({\n    in: {\n      datatype: 'object',\n      description: 'An object to extract property from',\n      required: true,\n    },\n    key: {\n      datatype: 'string',\n      description: 'Property names to extract (one property per IP)',\n      required: true,\n      control: true,\n    },\n  });\n\n  c.outPorts = new noflo.OutPorts({\n    out: {\n      datatype: 'all',\n      description: 'Values of the property extracted (each value sent as a separate IP)',\n    },\n  });\n\n  return c.process((input, output) => {\n    if (!input.has('in')) { return; }\n    if (!input.hasStream('key')) { return; }\n    const keys = input.getStream('key')\n      .filter((ip) => ip.type === 'data')\n      .map((ip) => ip.data);\n    const data = input.getData('in');\n    let value = data;\n\n    // Loop through the keys we have\n    keys.forEach((key) => {\n      value = value[key];\n      // Send the extracted value\n      output.send({ out: value });\n    });\n    output.done();\n  });\n};\n",tests:"describe('ExtractProperty component', () => {\n  let c = null;\n  let key = null;\n  let ins = null;\n  let out = null;\n  before(function (done) {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('objects/ExtractProperty', (err, instance) => {\n      if (err) { return done(err); }\n      c = instance;\n      key = noflo.internalSocket.createSocket();\n      c.inPorts.key.attach(key);\n      ins = noflo.internalSocket.createSocket();\n      c.inPorts.in.attach(ins);\n      return done();\n    });\n  });\n  beforeEach((done) => {\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n    return done();\n  });\n  afterEach((done) => {\n    c.outPorts.out.detach(out);\n    return done();\n  });\n\n  const getInputObject = () => ({\n    p: false,\n    n: null,\n  });\n\n  return describe('given an object, a property/key p', () => {\n    it('should extract the value of that property from the object', (done) => {\n      out.on('data', (data) => {\n        chai.expect(data).to.eql(false);\n        return done();\n      });\n\n      key.post(new noflo.IP('data', 'p'));\n      return ins.post(new noflo.IP('data', getInputObject()));\n    });\n\n    return it('should not extract a non existant property from the object', (done) => {\n      out.on('data', (data) => {\n        chai.expect(data).to.eql(null);\n        return done();\n      });\n\n      key.post(new noflo.IP('data', 'z'));\n      return ins.post(new noflo.IP('data', getInputObject()));\n    });\n  });\n});\n"},"objects/FilterProperty":{language:"javascript",source:"const noflo = require('noflo');\nconst { deepCopy } = require('owl-deepcopy');\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n  c.icon = 'filter';\n  c.description = 'Filter out some properties by matching RegExps against the keys of incoming objects';\n\n  c.inPorts = new noflo.InPorts({\n    in: {\n      datatype: 'object',\n      description: 'Object to filter properties from',\n      required: true,\n    },\n    key: {\n      datatype: 'string',\n      description: 'Keys to filter (one key per IP)',\n      required: true,\n    },\n    recurse: {\n      datatype: 'boolean',\n      description: '\"true\" to recurse on the object\\'s values',\n      control: true,\n      default: false,\n    },\n    keep: {\n      datatype: 'boolean',\n      description: '\"true\" if matching properties must be kept, otherwise removed',\n      control: true,\n      default: false,\n    },\n    // Legacy mode\n    accept: {\n      datatype: 'all',\n    },\n    regexp: {\n      datatype: 'all',\n    },\n  });\n  c.outPorts = new noflo.OutPorts({\n    out: {\n      datatype: 'object',\n    },\n  });\n\n  c.filter = (object, keys, recurse, keep, input) => (() => {\n    const result = [];\n    Object.keys(object).forEach((key) => {\n      const value = object[key];\n      let isMatched = false;\n\n      // the keys are filters we want to match in the object\n      keys.forEach((filter) => {\n        const match = key.match(filter);\n\n        // if they match, we delete them\n        const matchButDontKeep = !keep && match;\n        const keepButDontMatch = keep && !match;\n        if (matchButDontKeep || keepButDontMatch) {\n          const o = object;\n          delete o[key];\n          isMatched = true;\n        }\n      });\n\n      if (!isMatched && recurse && (typeof value === 'object')) {\n        result.push(c.filter(value, keys, recurse, keep, input));\n      } else {\n        result.push(undefined);\n      }\n    });\n    return result;\n  })();\n\n  c.keys = {};\n  return c.process((input, output) => {\n    let accepts; let\n      regexp;\n    if (input.hasStream('key')) {\n      c.keys[input.scope] = input.getStream('key')\n        .filter((ip) => (ip.type === 'data') && (ip.data != null))\n        .map((ip) => new RegExp(ip.data, 'g'));\n      output.done();\n      return;\n    }\n    if (!input.hasData('in') || !((c.keys[input.scope] != null ? c.keys[input.scope].length : undefined) > 0)) { return; }\n    if (input.attached('recurse').length > 0) { if (!input.hasData('recurse')) { return; } }\n    if (input.attached('keep').length > 0) { if (!input.hasData('keep')) { return; } }\n\n    let legacy = false;\n    if (input.has('accept') || input.has('regexp')) {\n      legacy = true;\n      accepts = input.get('accept').data;\n      regexp = input.get('regexp').data;\n    }\n\n    // because we can have multiple data packets,\n    // we want to get them all, and use just the data\n    const keys = c.keys[input.scope];\n    let data = input.getData('in');\n    const recurse = input.getData('recurse');\n    let keep = input.getData('keep');\n    if ((keep != null) && (typeof keep === 'object')) {\n      keep = keep.pop();\n    }\n\n    if (!legacy) {\n      if (typeof data === 'object') {\n        data = deepCopy(data);\n        c.filter(data, keys, recurse, keep, input);\n        output.sendDone(data);\n        return;\n      }\n      output.done();\n    }\n    // Legacy mode\n    const newData = {};\n    let match = false;\n    Object.keys(data).forEach((property) => {\n      const value = data[property];\n      if (accepts.indexOf(property) !== -1) {\n        newData[property] = value;\n        match = true;\n        return;\n      }\n\n      regexp.forEach((expression) => {\n        const regex = new RegExp(expression);\n        if (regex.exec(property)) {\n          newData[property] = value;\n          match = true;\n        }\n      });\n    });\n\n    if (!match) {\n      output.done();\n      return;\n    }\n    output.sendDone(newData);\n  });\n};\n",tests:"describe('FilterProperty component', () => {\n  let c = null;\n  let recurse = null;\n  let keep = null;\n  let key = null;\n  let ins = null;\n  let out = null;\n  before(function (done) {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('objects/FilterProperty', (err, instance) => {\n      if (err) { return done(err); }\n      c = instance;\n      return done();\n    });\n  });\n  beforeEach((done) => {\n    recurse = noflo.internalSocket.createSocket();\n    keep = noflo.internalSocket.createSocket();\n    key = noflo.internalSocket.createSocket();\n    ins = noflo.internalSocket.createSocket();\n    c.inPorts.key.attach(key);\n    c.inPorts.in.attach(ins);\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n    return done();\n  });\n  afterEach((done) => {\n    c.inPorts.recurse.detach(recurse);\n    c.inPorts.keep.detach(keep);\n    c.outPorts.out.detach(out);\n    return done();\n  });\n\n  describe('with properties to filter', () => it('should return the filtered objects', (done) => {\n    const expected = [\n      { b: 2 },\n      { b: 4 },\n    ];\n    out.on('data', (data) => {\n      chai.expect(data).to.eql(expected.shift());\n      if (!expected.length) { return done(); }\n    });\n\n    key.post(new noflo.IP('openBracket'));\n    key.post(new noflo.IP('data', 'a'));\n    key.post(new noflo.IP('data', 'c.+'));\n    key.post(new noflo.IP('closeBracket'));\n\n    ins.post(new noflo.IP('data', {\n      a: 1,\n      b: 2,\n    }));\n    return ins.post(new noflo.IP('data', {\n      cat: 3,\n      b: 4,\n    }));\n  }));\n\n  describe('with keep set to true', () => it('should return the filtered objects', (done) => {\n    c.inPorts.keep.attach(keep);\n    const expected = [\n      {},\n      { cat: 3 },\n    ];\n    out.on('data', (data) => {\n      chai.expect(data).to.eql(expected.shift());\n      if (expected.length) { return; }\n      keep.post(new noflo.IP('data', false));\n      return done();\n    });\n\n    keep.post(new noflo.IP('data', true));\n    key.post(new noflo.IP('data', 'a.+'));\n\n    ins.post(new noflo.IP('data', {\n      a: 1,\n      b: 2,\n    }));\n    return ins.post(new noflo.IP('data', {\n      cat: 3,\n      b: 4,\n    }));\n  }));\n\n  return describe('recursively filtering', () => it('should return the filtered key/value pair', (done) => {\n    c.inPorts.recurse.attach(recurse);\n    out.on('data', (data) => {\n      chai.expect(data).to.eql({\n        x: {\n          b: 2,\n          y: {},\n        },\n      });\n      recurse.post(new noflo.IP('data', false));\n      return done();\n    });\n\n    recurse.post(new noflo.IP('data', true));\n    key.post(new noflo.IP('openBracket'));\n    key.post(new noflo.IP('data', 'a'));\n    key.post(new noflo.IP('data', 'c'));\n    key.post(new noflo.IP('closeBracket'));\n\n    return ins.post(new noflo.IP('data', {\n      x: {\n        a: 1,\n        b: 2,\n        y: {\n          c: 3,\n        },\n      },\n    }));\n  }));\n});\n"},"objects/FilterPropertyValue":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = function () {\n  const c = new noflo.Component({\n    icon: 'filter',\n    description: 'Filter out some values',\n  });\n\n  c.inPorts = new noflo.InPorts({\n    accept: {\n      datatype: 'all',\n      description: 'property value to accept, can be more than one per object',\n    },\n    regexp: {\n      datatype: 'string',\n      description: 'regex properties to accept',\n    },\n    in: {\n      datatype: 'object',\n      description: 'Object to filter properties from',\n      required: true,\n    },\n  });\n\n  c.outPorts = new noflo.OutPorts({\n    out: {\n      datatype: 'object',\n      description: 'Object including the filtered properties',\n    },\n    missed: {\n      datatype: 'object',\n      description: 'Object received as input if no key have been matched',\n    },\n  });\n\n  c.forwardBrackets = {};\n  return c.process((input, output) => {\n    let mapParts;\n    if (!input.hasStream('in')) { return; }\n    if (input.attached('accept').length > 0) { if (!input.hasStream('accept')) { return; } }\n    if (input.attached('regexp').length > 0) { if (!input.hasData('regexp')) { return; } }\n\n    const stream = input.getStream('in')\n      .filter((ip) => ip.type === 'data')\n      .map((ip) => ip.data);\n    const regexps = {};\n    let accepts = {};\n    if (input.has('accept')) {\n      const acceptData = input.getStream('accept')\n        .filter((ip) => ip.type === 'data')\n        .map((ip) => ip.data);\n\n      for (let index = 0; index < acceptData.length; index += 1) {\n        const accept = acceptData[index];\n        if (typeof accept === 'object') {\n          accepts = accept;\n          break;\n        }\n        mapParts = accept.split('=');\n        try {\n          // eslint-disable-next-line no-eval\n          accepts[mapParts[0]] = eval(mapParts[1]);\n        } catch (e) {\n          if (e instanceof ReferenceError) {\n            // eslint-disable-next-line prefer-destructuring\n            accepts[mapParts[0]] = mapParts[1];\n          } else {\n            output.sendDone(e);\n            return;\n          }\n        }\n      }\n    }\n\n    if (input.has('regexp')) {\n      const regexpData = input.getStream('regexp')\n        .filter((ip) => ip.type === 'data')\n        .map((ip) => ip.data);\n\n      if (regexpData.length > 0) {\n        mapParts = regexpData[0].split('=');\n        // eslint-disable-next-line prefer-destructuring\n        regexps[mapParts[0]] = mapParts[1];\n      }\n    }\n\n    stream.forEach((data) => {\n      if (((Object.keys(accepts)).length > 0) || ((Object.keys(regexps)).length > 0)) {\n        const newData = {};\n        let match = false;\n        Object.keys(data).forEach((property) => {\n          const value = data[property];\n          if (accepts[property]) {\n            if (accepts[property] !== value) { return; }\n            match = true;\n          }\n          if (regexps[property]) {\n            const regexp = new RegExp(regexps[property]);\n            if (!regexp.exec(value)) { return; }\n            match = true;\n          }\n          newData[property] = value;\n        });\n\n        if (!match) {\n          output.send({ missed: data });\n        } else {\n          output.send({ out: newData });\n        }\n      } else {\n        output.send({ out: data });\n      }\n    });\n\n    output.done();\n  });\n};\n",tests:"describe('FilterPropertyValue component', () => {\n  let c = null;\n  let ins = null;\n  let out = null;\n  let loader = null;\n\n  before(() => loader = new noflo.ComponentLoader(baseDir));\n\n  beforeEach(function (done) {\n    this.timeout(4000);\n    return loader.load('objects/FilterPropertyValue', (err, instance) => {\n      if (err) { return done(err); }\n      c = instance;\n      ins = noflo.internalSocket.createSocket();\n      c.inPorts.in.attach(ins);\n      out = noflo.internalSocket.createSocket();\n      c.outPorts.out.attach(out);\n      return done();\n    });\n  });\n\n  afterEach((done) => {\n    c.outPorts.out.detach(out);\n    out = null;\n    return done();\n  });\n\n  it('should have input ports', (done) => {\n    chai.expect(c.inPorts.in).to.be.an('object');\n    return done();\n  });\n  it('should have an output port', (done) => {\n    chai.expect(c.outPorts.out).to.be.an('object');\n    return done();\n  });\n\n  it('test default behavior', (done) => {\n    const actual = [{ a: 1 }, { b: 2 }, { c: 3 }];\n    const expect = [{ a: 1 }, { b: 2 }, { c: 3 }];\n\n    out.on('data', (data) => {\n      const expected = expect.shift();\n      chai.expect((Object.keys(data)).length).to.equal((Object.keys(expected)).length);\n      Object.keys(data).forEach((prop) => {\n        const val = data[prop];\n        chai.expect(val).to.equal(expected[prop]);\n      });\n      if (expect.length === 0) { return done(); }\n    });\n\n    ins.post(new noflo.IP('openBracket'));\n    for (const a of Array.from(actual)) { ins.post(new noflo.IP('data', a)); }\n    return ins.post(new noflo.IP('closeBracket'));\n  });\n\n  it('test accept via map', (done) => {\n    const acc = noflo.internalSocket.createSocket();\n    c.inPorts.accept.attach(acc);\n\n    acc.post(new noflo.IP('openBracket'));\n    acc.post(new noflo.IP('data', { good: true }));\n    acc.post(new noflo.IP('closeBracket'));\n\n    out.on('data', (data) => {\n      chai.expect(data.good).to.equal(true);\n      chai.expect(data.bar).to.equal(3);\n      chai.expect(Object.keys(data).length).to.equal(2);\n      return done();\n    });\n\n    ins.post(new noflo.IP('openBracket'));\n    ins.post(new noflo.IP('data', { good: false, foo: 1 })); // reject\n    ins.post(new noflo.IP('data', { baz: 2 })); // reject\n    ins.post(new noflo.IP('data', { good: true, bar: 3 })); // accept\n    return ins.post(new noflo.IP('closeBracket'));\n  });\n\n  it('test accept via pairs', (done) => {\n    const acc = noflo.internalSocket.createSocket();\n    c.inPorts.accept.attach(acc);\n\n    acc.post(new noflo.IP('openBracket'));\n    acc.post(new noflo.IP('data', 'food=true'));\n    acc.post(new noflo.IP('data', 'good=yes'));\n    acc.post(new noflo.IP('data', 'hood=1'));\n    acc.post(new noflo.IP('closeBracket'));\n\n    const expect = [['good', 'yes'], ['hood', 1], ['food', true]];\n\n    out.on('data', (data) => {\n      const exp = expect.shift();\n      chai.expect(data[exp[0]]).to.equal(exp[1]);\n      if (expect.length === 0) { return done(); }\n    });\n\n    ins.post(new noflo.IP('openBracket'));\n    ins.post(new noflo.IP('data', { good: 'yes' })); // accept\n    ins.post(new noflo.IP('data', { hood: 1 })); // accept\n    ins.post(new noflo.IP('data', { good: false, foo: 1 })); // reject\n    ins.post(new noflo.IP('data', { baz: 2 })); // reject\n    ins.post(new noflo.IP('data', { food: true, bar: 3 })); // accept\n    return ins.post(new noflo.IP('closeBracket'));\n  });\n\n  return it('test accept via regexp', (done) => {\n    const reg = noflo.internalSocket.createSocket();\n    c.inPorts.regexp.attach(reg);\n    const acc = noflo.internalSocket.createSocket();\n    c.inPorts.accept.attach(acc);\n\n    acc.post(new noflo.IP('data', {}));\n    reg.post(new noflo.IP('data', 'good=[tg]rue'));\n\n    const expect = ['grue', true];\n\n    out.on('data', (data) => {\n      chai.expect(data.good).to.equal(expect.shift());\n      chai.expect(data.bar).to.equal(3);\n      chai.expect(Object.keys(data).length).to.equal(2);\n      if (expect.length === 0) { return done(); }\n    });\n\n    ins.post(new noflo.IP('openBracket'));\n    ins.post(new noflo.IP('data', { good: 'grue', bar: 3 })); // accept\n    ins.post(new noflo.IP('data', { good: false, foo: 1 })); // reject\n    ins.post(new noflo.IP('data', { baz: 2 })); // reject\n    ins.post(new noflo.IP('data', { good: true, bar: 3 })); // accept\n    return ins.post(new noflo.IP('closeBracket'));\n  });\n});\n"},"objects/FlattenObject":{language:"javascript",source:"const noflo = require('noflo');\n\nfunction mapKeys(object, maps) {\n  const o = object;\n  Object.keys(maps).forEach((key) => {\n    const map = maps[key];\n    o[map] = object.flattenedKeys[key];\n  });\n  delete o.flattenedKeys;\n  return o;\n}\n\nfunction flattenObject(object) {\n  const flattened = [];\n  Object.keys(object).forEach((key) => {\n    const value = object[key];\n    if (typeof value === 'object') {\n      const flattenedValue = flattenObject(value);\n      flattenedValue.forEach((val) => {\n        val.flattenedKeys.push(key);\n        flattened.push(val);\n      });\n      return;\n    }\n\n    flattened.push({\n      flattenedKeys: [key],\n      value,\n    });\n  });\n  return flattened;\n}\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n\n  c.inPorts = new noflo.InPorts({\n    map: {\n      datatype: 'all',\n      description: 'map to use to flatten the object',\n      control: true,\n    },\n    in: {\n      datatype: 'object',\n      description: 'Object to flatten',\n      required: true,\n    },\n  });\n\n  c.outPorts = new noflo.OutPorts({\n    out: {\n      datatype: 'array',\n    },\n  });\n\n  c.forwardBrackets = {};\n  return c.process((input, output) => {\n    if (!input.hasData('in')) { return; }\n    if (input.attached('map').length > 0) { if (!input.hasData('map')) { return; } }\n    let maps = {};\n\n    if (input.hasData('map')) {\n      const map = input.getData('map');\n      if (map != null) {\n        if (typeof map === 'object') {\n          maps = map;\n        } else {\n          const mapParts = map.split('=');\n          // eslint-disable-next-line prefer-destructuring\n          maps[mapParts[0]] = mapParts[1];\n        }\n      }\n    }\n\n    const data = input.getData('in');\n    output.send(new noflo.IP('openBracket'));\n    flattenObject(data).forEach((object) => {\n      output.send(mapKeys(object, maps));\n    });\n    output.send(new noflo.IP('closeBracket'));\n    output.done();\n  });\n};\n",tests:"describe('FlattenObject component', () => {\n  let c = null;\n  let ins = null;\n  let map = null;\n  let out = null;\n\n  before((done) => {\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('objects/FlattenObject', (err, instance) => {\n      if (err) { return done(err); }\n      c = instance;\n      ins = noflo.internalSocket.createSocket();\n      map = noflo.internalSocket.createSocket();\n      out = noflo.internalSocket.createSocket();\n      c.inPorts.in.attach(ins);\n      c.inPorts.map.attach(map);\n      c.outPorts.out.attach(out);\n      return done();\n    });\n  });\n\n  beforeEach((done) => {\n    ins = noflo.internalSocket.createSocket();\n    map = noflo.internalSocket.createSocket();\n    out = noflo.internalSocket.createSocket();\n    c.inPorts.in.attach(ins);\n    c.inPorts.map.attach(map);\n    c.outPorts.out.attach(out);\n    return done();\n  });\n  afterEach((done) => {\n    c.inPorts.in.detach(ins);\n    c.inPorts.map.detach(map);\n    c.outPorts.out.detach(out);\n    return done();\n  });\n\n  describe('when instantiated', () => {\n    it('should have input ports', (done) => {\n      chai.expect(c.inPorts.in).to.be.an('object');\n      return done();\n    });\n    return it('should have an output port', (done) => {\n      chai.expect(c.outPorts.out).to.be.an('object');\n      return done();\n    });\n  });\n\n  return describe('flatten', () => {\n    const tree = {\n      root: {\n        branch1: ['leaf1', 'leaf2'],\n        branch2: ['leaf3', 'leaf4'],\n        branch3: {\n          branch4: 'leaf5',\n        },\n      },\n    };\n\n    it('test no map', (done) => {\n      c.inPorts.map.sockets = [];\n      const output = [];\n\n      out.on('data', (data) => output.push(data));\n\n      out.once('disconnect', () => {\n        chai.expect(output).to.deep.equal([\n          { value: 'leaf1' },\n          { value: 'leaf2' },\n          { value: 'leaf3' },\n          { value: 'leaf4' },\n          { value: 'leaf5' },\n        ]);\n        return done();\n      });\n\n      return ins.post(new noflo.IP('data', tree));\n    });\n\n    it('test map depth 0', (done) => {\n      const output = [];\n\n      out.on('data', (data) => output.push(data));\n\n      out.once('disconnect', () => {\n        chai.expect(output).to.deep.equal([\n          { value: 'leaf1', index: '0' },\n          { value: 'leaf2', index: '1' },\n          { value: 'leaf3', index: '0' },\n          { value: 'leaf4', index: '1' },\n          { value: 'leaf5', index: 'branch4' },\n        ]);\n        return done();\n      });\n      map.post(new noflo.IP('data', { 0: 'index' }));\n      return ins.post(new noflo.IP('data', tree));\n    });\n\n    it('test map depth 1', (done) => {\n      const output = [];\n\n      out.on('data', (data) => output.push(data));\n\n      out.once('disconnect', () => {\n        chai.expect(output).to.deep.equal([\n          { value: 'leaf1', branch: 'branch1' },\n          { value: 'leaf2', branch: 'branch1' },\n          { value: 'leaf3', branch: 'branch2' },\n          { value: 'leaf4', branch: 'branch2' },\n          { value: 'leaf5', branch: 'branch3' },\n        ]);\n        return done();\n      });\n\n      map.post(new noflo.IP('data', { 1: 'branch' }));\n      return ins.post(new noflo.IP('data', tree));\n    });\n\n    it('test map depth 2', (done) => {\n      const output = [];\n\n      out.on('data', (data) => output.push(data));\n\n      out.once('disconnect', () => {\n        chai.expect(output).to.deep.equal([\n          { value: 'leaf1', root: 'root' },\n          { value: 'leaf2', root: 'root' },\n          { value: 'leaf3', root: 'root' },\n          { value: 'leaf4', root: 'root' },\n          { value: 'leaf5', root: 'root' },\n        ]);\n        return done();\n      });\n\n      map.post(new noflo.IP('data', { 2: 'root' }));\n      return ins.post(new noflo.IP('data', tree));\n    });\n\n    it('test map depth 3', (done) => {\n      const output = [];\n\n      out.on('data', (data) => output.push(data));\n\n      out.once('disconnect', () => {\n        chai.expect(output).to.deep.equal([\n          { value: 'leaf1', nothere: undefined },\n          { value: 'leaf2', nothere: undefined },\n          { value: 'leaf3', nothere: undefined },\n          { value: 'leaf4', nothere: undefined },\n          { value: 'leaf5', nothere: undefined },\n        ]);\n        return done();\n      });\n\n      map.post(new noflo.IP('data', { 3: 'nothere' }));\n      return ins.post(new noflo.IP('data', tree));\n    });\n\n    return it('test map all', (done) => {\n      const output = [];\n\n      out.on('data', (data) => output.push(data));\n\n      out.once('disconnect', () => {\n        chai.expect(output).to.deep.equal([\n          {\n            value: 'leaf1', index: '0', branch: 'branch1', root: 'root',\n          },\n          {\n            value: 'leaf2', index: '1', branch: 'branch1', root: 'root',\n          },\n          {\n            value: 'leaf3', index: '0', branch: 'branch2', root: 'root',\n          },\n          {\n            value: 'leaf4', index: '1', branch: 'branch2', root: 'root',\n          },\n          {\n            value: 'leaf5', index: 'branch4', branch: 'branch3', root: 'root',\n          },\n        ]);\n        return done();\n      });\n\n      map.post(new noflo.IP('data', { 0: 'index', 1: 'branch', 2: 'root' }));\n      return ins.post(new noflo.IP('data', tree));\n    });\n  });\n});\n"},"objects/GetCurrentTimestamp":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n  c.icon = 'clock-o';\n  c.description = 'Send out the current timestamp';\n\n  c.inPorts = new noflo.InPorts({\n    in: {\n      datatype: 'bang',\n      description: 'Causes the current timestamp to be sent out',\n    },\n  });\n\n  c.outPorts = new noflo.OutPorts({\n    out: {\n      datatype: 'int',\n    },\n  });\n\n  return c.process((input, output) => {\n    if (!input.hasData('in')) { return; }\n    input.getData('in');\n    output.sendDone({ out: Date.now() });\n  });\n};\n",tests:"describe('GetCurrentTimestamp component', () => {\n  let c = null;\n  let ins = null;\n  let out = null;\n  before(function (done) {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('objects/GetCurrentTimestamp', (err, instance) => {\n      if (err) { return done(err); }\n      c = instance;\n      ins = noflo.internalSocket.createSocket();\n      c.inPorts.in.attach(ins);\n      return done();\n    });\n  });\n  beforeEach((done) => {\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n    return done();\n  });\n  afterEach((done) => {\n    c.outPorts.out.detach(out);\n    return done();\n  });\n\n  return describe('given a bang', () => it('should give back a date', (done) => {\n    out.on('data', (data) => {\n      chai.expect(typeof data).to.eql('number');\n      return done();\n    });\n\n    return ins.post(new noflo.IP('data', ''));\n  }));\n});\n"},"objects/GetObjectKey":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n  c.icon = 'indent';\n\n  c.inPorts = new noflo.InPorts({\n    in: {\n      datatype: 'object',\n      description: 'Object to get keys from',\n      required: true,\n    },\n    key: {\n      datatype: 'string',\n      description: 'Keys to extract from the object (one key per IP)',\n      required: true,\n    },\n    sendgroup: {\n      datatype: 'boolean',\n      description: 'true to send keys as groups around value IPs, false otherwise',\n      control: true,\n      default: false,\n    },\n  });\n  c.outPorts = new noflo.OutPorts({\n    out: {\n      datatype: 'all',\n      description: 'Values extracts from the input object given the input keys (one value per IP, potentially grouped using the key names)',\n    },\n    object: {\n      datatype: 'object',\n      description: 'Object forwarded from input if at least one property matches the input keys',\n    },\n    missed: {\n      datatype: 'object',\n      description: 'Object forwarded from input if no property matches the input keys',\n    },\n  });\n\n  return c.process((input, output) => {\n    if (!input.hasData('in')) { return; }\n    if (!input.hasStream('key')) { return; }\n    if (input.attached('sendgroup').length > 0) { if (!input.hasData('sendgroup')) { return; } }\n\n    const keys = input.getStream('key')\n      .filter((ip) => ip.type === 'data')\n      .map((ip) => ip.data);\n    const data = input.getData('in');\n\n    let sendGroup = input.getData('sendgroup');\n    sendGroup = (sendGroup === 'true') || (sendGroup === true);\n\n    if (typeof data !== 'object') {\n      output.sendDone(new Error('Data is not an object'));\n      return;\n    }\n    if (data === null) {\n      output.sendDone(new Error('Data is NULL'));\n      return;\n    }\n    keys.forEach((key) => {\n      if (data[key] === undefined) {\n        if (sendGroup) { output.send({ missed: new noflo.IP('openBracket', key) }); }\n        output.send({ missed: new noflo.IP('data', data) });\n        if (sendGroup) { output.send({ missed: new noflo.IP('closeBracket', key) }); }\n      }\n\n      if (sendGroup) { output.send({ out: new noflo.IP('openBracket', key) }); }\n      output.send({ out: new noflo.IP('data', data[key]) });\n      if (sendGroup) { output.send({ out: new noflo.IP('closeBracket', key) }); }\n    });\n\n    output.send({ object: new noflo.IP('data', data) });\n    output.done();\n  });\n};\n",tests:"describe('GetObjectKey', () => {\n  let c = null;\n\n  before((done) => {\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('objects/GetObjectKey', (err, instance) => {\n      if (err) { return done(err); }\n      c = instance;\n      return done();\n    });\n  });\n\n  describe('inPorts', () => {\n    it('should include \"in\"', (done) => {\n      chai.expect(c.inPorts.in).to.be.an('object');\n      return done();\n    });\n    it('should include \"key\"', (done) => {\n      chai.expect(c.inPorts.key).to.be.an('object');\n      return done();\n    });\n    return it('should include \"sendgroup\"', (done) => {\n      chai.expect(c.inPorts.sendgroup).to.be.an('object');\n      return done();\n    });\n  });\n\n  describe('outPorts', () => {\n    it('should include \"out\"', (done) => {\n      chai.expect(c.outPorts.out).to.be.an('object');\n      return done();\n    });\n    it('should include \"object\"', (done) => {\n      chai.expect(c.outPorts.object).to.be.an('object');\n      return done();\n    });\n    return it('should include \"missed\"', (done) => {\n      chai.expect(c.outPorts.missed).to.be.an('object');\n      return done();\n    });\n  });\n\n  return describe('data flow', () => {\n    let inIn = null;\n    let keyIn = null;\n    let sendgroupIn = null;\n    let outOut = null;\n    let objectOut = null;\n    let missedOut = null;\n\n    beforeEach((done) => {\n      inIn = noflo.internalSocket.createSocket();\n      keyIn = noflo.internalSocket.createSocket();\n      objectOut = noflo.internalSocket.createSocket();\n      missedOut = noflo.internalSocket.createSocket();\n      outOut = noflo.internalSocket.createSocket();\n\n      c.inPorts.in.attach(inIn);\n      c.inPorts.key.attach(keyIn);\n      c.outPorts.out.attach(outOut);\n      c.outPorts.object.attach(objectOut);\n      c.outPorts.missed.attach(missedOut);\n      return done();\n    });\n\n    afterEach((done) => {\n      c.outPorts.out.detach(outOut);\n      c.outPorts.object.detach(objectOut);\n      c.outPorts.missed.detach(missedOut);\n      return done();\n    });\n\n    describe('with input on all ports', () => it('should get the key', (done) => {\n      outOut.on('data', (data) => {\n        chai.expect(data).to.eql('canada');\n        return done();\n      });\n\n      objectOut.on('data', (data) => chai.expect(data).to.eql({ test: true, eh: 'canada' }));\n\n      keyIn.post(new noflo.IP('data', 'eh'));\n      return inIn.post(new noflo.IP('data', { test: true, eh: 'canada' }));\n    }));\n\n    describe('when it has data that will miss', () => it('should trigger missed and not send object out as well', (done) => {\n      let triggeredOut = false;\n      let triggeredMissed = false;\n      outOut.on('data', () => {\n        triggeredOut = true;\n        if (triggeredMissed && triggeredOut) {\n          return done();\n        }\n      });\n\n      objectOut.on('data', () => {\n        throw new Error('sent out object when it missed!');\n      });\n\n      missedOut.on('data', () => triggeredMissed = true);\n\n      keyIn.post(new noflo.IP('data', 'nope'));\n      return inIn.post(new noflo.IP('data', { test: true, eh: 'canada' }));\n    }));\n\n    return describe('when using sendgroups', () => {\n      beforeEach((done) => {\n        sendgroupIn = noflo.internalSocket.createSocket();\n        c.inPorts.sendgroup.attach(sendgroupIn);\n        return done();\n      });\n\n      it('should trigger output', (done) => {\n        let hasObject = false;\n        let hasBeginGroup = false;\n        let hasEndGroup = false;\n        let hasData = false;\n\n        missedOut.on('data', () => {\n          throw new Error('went into missed');\n        });\n\n        objectOut.on('data', (data) => {\n          hasObject = true;\n          return chai.expect(data).to.eql({ test: true, eh: 'canada' });\n        });\n\n        objectOut.on('disconnect', () => {\n          if (hasObject && hasBeginGroup && hasData && hasEndGroup) {\n            return done();\n          }\n        });\n\n        outOut.on('begingroup', (data) => {\n          hasBeginGroup = true;\n          return chai.expect(data).to.eql('eh');\n        });\n        outOut.on('data', (data) => {\n          hasData = true;\n          return chai.expect(data).to.eql('canada');\n        });\n        outOut.on('endgroup', (data) => {\n          hasEndGroup = true;\n          return chai.expect(data).to.eql('eh');\n        });\n\n        keyIn.post(new noflo.IP('data', 'eh'));\n        sendgroupIn.post(new noflo.IP('data', 'true'));\n        return inIn.post(new noflo.IP('data', { test: true, eh: 'canada' }));\n      });\n\n      it('should not trigger object when it misses, but should trigger missed and out', (done) => {\n        let hasMissed = false;\n        let hasBeginGroup = false;\n        let hasEndGroup = false;\n        let hasData = false;\n\n        missedOut.on('data', (data) => {\n          hasMissed = true;\n          return chai.expect(data).to.eql({ test: true, eh: 'canada' });\n        });\n\n        objectOut.on('data', () => {\n          throw new Error('sent out object when it missed!');\n        });\n\n        outOut.on('begingroup', (data) => {\n          hasBeginGroup = true;\n          return chai.expect(data).to.eql('nonexistant');\n        });\n        outOut.on('data', (data) => {\n          hasData = true;\n          return chai.expect(data).to.not.exist;\n        });\n        outOut.on('endgroup', (data) => {\n          hasEndGroup = true;\n          chai.expect(data).to.equal('nonexistant');\n          if (hasMissed && hasBeginGroup && hasData && hasEndGroup) {\n            return done();\n          }\n        });\n\n        keyIn.post(new noflo.IP('data', 'nonexistant'));\n        sendgroupIn.post(new noflo.IP('data', 'true'));\n        return inIn.post(new noflo.IP('data', { test: true, eh: 'canada' }));\n      });\n\n      it('should send groups to missed', (done) => {\n        let hasMissed = false;\n        let hasMissedBeginGroup = false;\n        let hasMissedEndGroup = false;\n        let hasBeginGroup = false;\n        let hasEndGroup = false;\n        let hasData = false;\n\n        missedOut.on('connect', () => {});\n        missedOut.on('disconnect', () => {});\n        outOut.on('connect', () => {});\n        outOut.on('disconnect', () => {});\n\n        missedOut.on('begingroup', (data) => {\n          hasMissedBeginGroup = true;\n          return chai.expect(data).to.eql('nonexistant');\n        });\n        missedOut.on('endgroup', () => hasMissedEndGroup = true);\n        missedOut.on('data', (data) => {\n          hasMissed = true;\n          return chai.expect(data).to.eql({ test: true, eh: 'canada' });\n        });\n\n        objectOut.on('data', () => {\n          throw new Error('sent out object when it missed!');\n        });\n\n        outOut.on('begingroup', (data) => {\n          hasBeginGroup = true;\n          return chai.expect(data).to.eql('nonexistant');\n        });\n        outOut.on('data', (data) => {\n          hasData = true;\n          return chai.expect(data).to.not.exist;\n        });\n        outOut.on('endgroup', (data) => {\n          hasEndGroup = true;\n          chai.expect(data).to.eql('nonexistant');\n          if (hasMissed\n            && hasBeginGroup\n            && hasData\n            && hasEndGroup\n            && hasMissedBeginGroup\n            && hasMissedEndGroup) {\n            return done();\n          }\n        });\n\n        keyIn.post(new noflo.IP('data', 'nonexistant'));\n        sendgroupIn.post(new noflo.IP('data', true));\n        return inIn.post(new noflo.IP('data', { test: true, eh: 'canada' }));\n      });\n\n      it.skip('should be able to handle more than one key', () => {});\n      it.skip('should forward brackets', () => {});\n      it.skip('should forward nested brackets', () => {});\n    });\n  });\n});\n"},"objects/GetObjectPath":{language:"javascript",source:"const noflo = require('noflo');\nconst jsonpath = require('jsonpath');\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n  c.description = 'Query an object with a JSONPath expression';\n  c.icon = 'indent';\n  c.inPorts.add('in', {\n    datatype: 'object',\n    description: 'Object to query',\n    required: true,\n  });\n  c.inPorts.add('path', {\n    datatype: 'string',\n    description: 'JSONPath expression',\n    required: true,\n    control: true,\n  });\n  c.inPorts.add('multiple', {\n    datatype: 'boolean',\n    description: 'Whether to send all matching values as an array',\n    required: false,\n    control: true,\n    default: false,\n  });\n  c.outPorts.add('out', {\n    datatype: 'all',\n    description: 'Result of the JSONPath query',\n  });\n  c.outPorts.add('object', {\n    datatype: 'all',\n    description: 'The original input object',\n  });\n  c.outPorts.add('error', {\n    datatype: 'object',\n  });\n  return c.process((input, output) => {\n    if (!input.hasData('in', 'path')) {\n      return;\n    }\n    let multiple = false;\n    if (input.attached('multiple').length > 0) {\n      if (!input.hasData('multiple')) {\n        return;\n      }\n      multiple = input.getData('multiple');\n    }\n    const [data, path] = input.getData('in', 'path');\n    let result;\n    const method = multiple ? 'query' : 'value';\n    try {\n      result = jsonpath[method](data, path);\n    } catch (e) {\n      output.done(e);\n      return;\n    }\n    output.sendDone({\n      out: result,\n      object: data,\n    });\n  });\n};\n",tests:"describe('GetObjectPath', () => {\n  let c = null;\n  let inIn = null;\n  let pathIn = null;\n  let multipleIn = null;\n  let outOut = null;\n  let objectOut = null;\n  let errorOut = null;\n\n  before((done) => {\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('objects/GetObjectPath', (err, instance) => {\n      if (err) { return done(err); }\n      c = instance;\n      return done();\n    });\n  });\n\n  beforeEach((done) => {\n    inIn = noflo.internalSocket.createSocket();\n    pathIn = noflo.internalSocket.createSocket();\n    multipleIn = noflo.internalSocket.createSocket();\n    objectOut = noflo.internalSocket.createSocket();\n    errorOut = noflo.internalSocket.createSocket();\n    outOut = noflo.internalSocket.createSocket();\n\n    c.inPorts.in.attach(inIn);\n    c.inPorts.path.attach(pathIn);\n    c.inPorts.multiple.attach(multipleIn);\n    c.outPorts.out.attach(outOut);\n    c.outPorts.object.attach(objectOut);\n    c.outPorts.error.attach(errorOut);\n    done();\n  });\n\n  afterEach((done) => {\n    c.outPorts.out.detach(outOut);\n    c.outPorts.object.detach(objectOut);\n    c.outPorts.error.detach(errorOut);\n    done();\n  });\n\n  describe('sending single values', () => {\n    beforeEach(() => {\n      multipleIn.post(new noflo.IP('data', false));\n    });\n    describe('with a JSONPath matching the input object', () => {\n      it('should send the matched value out', (done) => {\n        outOut.on('data', (data) => {\n          chai.expect(data).to.equal(42);\n          done();\n        });\n        errorOut.on('data', done);\n        pathIn.post(new noflo.IP('data', '$.answer'));\n        inIn.post(new noflo.IP('data', {\n          question: undefined,\n          answer: 42,\n        }));\n      });\n    });\n\n    describe('with a JSONPath matching a member of input array', () => {\n      it('should send the matched value out', (done) => {\n        outOut.on('data', (data) => {\n          chai.expect(data).to.equal(42);\n          done();\n        });\n        errorOut.on('data', done);\n        pathIn.post(new noflo.IP('data', '$..[2].answer'));\n        inIn.post(new noflo.IP('data', [\n          {\n            question: undefined,\n            answer: 40,\n          },\n          {\n            question: undefined,\n            answer: 41,\n          },\n          {\n            question: undefined,\n            answer: 42,\n          },\n        ]));\n      });\n    });\n\n    describe('with an invalid JSONPath syntax', () => {\n      it('should send an error out', (done) => {\n        outOut.on('data', () => {\n          done(new Error('Received unexpected data'));\n        });\n        errorOut.on('data', (data) => {\n          chai.expect(data).to.be.an('error');\n          done();\n        });\n        pathIn.post(new noflo.IP('data', '$.[2].answer'));\n        inIn.post(new noflo.IP('data', {\n          question: undefined,\n          answer: 40,\n        }));\n      });\n    });\n  });\n\n  describe('sending multiple values', () => {\n    beforeEach(() => {\n      multipleIn.post(new noflo.IP('data', true));\n    });\n    describe('with a JSONPath matching the input object', () => {\n      it('should send the matched value out', (done) => {\n        outOut.on('data', (data) => {\n          chai.expect(data).to.eql([42]);\n          done();\n        });\n        errorOut.on('data', done);\n        pathIn.post(new noflo.IP('data', '$.answer'));\n        inIn.post(new noflo.IP('data', {\n          question: undefined,\n          answer: 42,\n        }));\n      });\n    });\n\n    describe('with a JSONPath matching members of input array', () => {\n      it('should send the matched values out', (done) => {\n        outOut.on('data', (data) => {\n          chai.expect(data).to.eql([40, 41, 42]);\n          done();\n        });\n        errorOut.on('data', done);\n        pathIn.post(new noflo.IP('data', '$..answer'));\n        inIn.post(new noflo.IP('data', [\n          {\n            question: undefined,\n            answer: 40,\n          },\n          {\n            question: undefined,\n            answer: 41,\n          },\n          {\n            question: undefined,\n            answer: 42,\n          },\n        ]));\n      });\n    });\n  });\n});\n"},"objects/GetRandomMember":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n  c.description = 'Select a random member from an array';\n  c.icon = 'list';\n  c.inPorts.add('in', {\n    datatype: 'array',\n    description: 'Array to pick a member from',\n  });\n  c.inPorts.add('random', {\n    datatype: 'number',\n    description: 'Random number to use',\n  });\n  c.outPorts.add('out',\n    { datatype: 'all' });\n  c.outPorts.add('error',\n    { datatype: 'object' });\n\n  return c.process((input, output) => {\n    if (!input.hasData('in', 'random')) { return; }\n    const [arr, random] = Array.from(input.getData('in', 'random'));\n\n    if ((random < 0) || (random > 1)) {\n      output.done(new Error('Random number has to be between 0 and 1'));\n      return;\n    }\n    const selected = arr[Math.min(arr.length - 1, Math.floor(random * arr.length))];\n    output.sendDone({ out: selected });\n  });\n};\n",tests:"describe('GetRandomMember component', () => {\n  let c = null;\n  let ins = null;\n  let random = null;\n  let out = null;\n  let error = null;\n  before(function (done) {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('objects/GetRandomMember', (err, instance) => {\n      if (err) { return done(err); }\n      c = instance;\n      ins = noflo.internalSocket.createSocket();\n      c.inPorts.in.attach(ins);\n      random = noflo.internalSocket.createSocket();\n      c.inPorts.random.attach(random);\n      return c.start(done);\n    });\n  });\n  beforeEach(() => {\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n    error = noflo.internalSocket.createSocket();\n    return c.outPorts.error.attach(error);\n  });\n  afterEach(() => {\n    c.outPorts.out.detach(out);\n    out = null;\n    c.outPorts.error.detach(error);\n    return error = null;\n  });\n\n  return describe('with an array', () => {\n    it('should send first member when random is 0', (done) => {\n      const expected = [\n        '1',\n      ];\n      const received = [];\n      out.on('ip', (ip) => {\n        switch (ip.type) {\n          case 'openBracket':\n            received.push('<');\n            break;\n          case 'data':\n            received.push(JSON.stringify(ip.data));\n            break;\n          case 'closeBracket':\n            received.push('>');\n            break;\n        }\n        if (received.length !== expected.length) { return; }\n        chai.expect(received).to.eql(expected);\n        return done();\n      });\n      ins.send([1, 2, 3]);\n      return random.send(0);\n    });\n    it('should send last member when random is 1', (done) => {\n      const expected = [\n        '3',\n      ];\n      const received = [];\n      out.on('ip', (ip) => {\n        switch (ip.type) {\n          case 'openBracket':\n            received.push('<');\n            break;\n          case 'data':\n            received.push(JSON.stringify(ip.data));\n            break;\n          case 'closeBracket':\n            received.push('>');\n            break;\n        }\n        if (received.length !== expected.length) { return; }\n        chai.expect(received).to.eql(expected);\n        return done();\n      });\n      ins.send([1, 2, 3]);\n      return random.send(1);\n    });\n    it('should send a member when receiving random', (done) => {\n      const arr = [1, 2, 3, 4, 5];\n      out.on('ip', (ip) => {\n        if (ip.type !== 'data') { return; }\n        chai.expect(arr).to.contain(ip.data);\n        return done();\n      });\n      ins.send(arr);\n      return random.send(Math.random());\n    });\n    it('should forward brackets', (done) => {\n      const expected = [\n        '<',\n        '3',\n        '>',\n      ];\n      const received = [];\n      out.on('ip', (ip) => {\n        switch (ip.type) {\n          case 'openBracket':\n            received.push('<');\n            break;\n          case 'data':\n            received.push(JSON.stringify(ip.data));\n            break;\n          case 'closeBracket':\n            received.push('>');\n            break;\n        }\n        if (received.length !== expected.length) { return; }\n        chai.expect(received).to.eql(expected);\n        return done();\n      });\n      ins.beginGroup();\n      ins.send([1, 2, 3]);\n      ins.endGroup();\n      return random.send(1);\n    });\n    return it('should send an error with out-of-range random', (done) => {\n      error.on('ip', (ip) => {\n        chai.expect(ip.data).to.be.an('error');\n        chai.expect(ip.data.message).to.contain('has to be between');\n        return done();\n      });\n      out.on('ip', (ip) => done(new Error(`Unexpected ${ip.type} received`)));\n      ins.send([1, 2, 3]);\n      return random.send(-1);\n    });\n  });\n});\n"},"objects/InsertProperty":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n  c.description = 'Insert a property into incoming objects.';\n\n  c.inPorts = new noflo.InPorts({\n    in: {\n      datatype: 'all',\n      description: 'Object to insert property into',\n      required: true,\n    },\n    property: {\n      datatype: 'all',\n      description: 'Property to insert (property sent as group, value sent as IP)',\n      required: true,\n    },\n  });\n\n  c.outPorts = new noflo.OutPorts({\n    out: {\n      datatype: 'object',\n      description: 'Object received as input with added properties',\n    },\n  });\n  c.forwardGroups = {};\n  return c.process((input, output) => {\n    if (!input.hasData('in')) { return; }\n    if (!input.hasStream('property')) { return; }\n\n    const data = input.getData('in');\n    const stream = input.getStream('property');\n    let val = null;\n    let key = null;\n    stream.forEach((ip) => {\n      if (ip.type === 'openBracket') { key = ip.data; }\n      if (ip.type === 'data') { val = ip.data; }\n    });\n    let outputData = {};\n    if (data instanceof Object) {\n      outputData = data;\n    }\n\n    outputData[key] = val;\n    output.sendDone({ out: outputData });\n  });\n};\n",tests:"describe('InsertProperty', () => {\n  let c = null;\n  let loader = null;\n\n  before((done) => {\n    loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('objects/InsertProperty', (err, instance) => {\n      if (err) { return done(err); }\n      c = instance;\n      return done();\n    });\n  });\n\n  describe('inPorts', () => {\n    it('should include \"in\"', (done) => {\n      chai.expect(c.inPorts.in).to.be.an('object');\n      return done();\n    });\n    return it('should include \"property\"', (done) => {\n      chai.expect(c.inPorts.property).to.be.an('object');\n      return done();\n    });\n  });\n\n  describe('outPorts', () => it('should include \"out\"', (done) => {\n    chai.expect(c.outPorts.out).to.be.an('object');\n    return done();\n  }));\n\n  return describe('data flow', () => {\n    let inIn = null;\n    let propertyIn = null;\n    let outOut = null;\n\n    beforeEach((done) => {\n      inIn = noflo.internalSocket.createSocket();\n      propertyIn = noflo.internalSocket.createSocket();\n      outOut = noflo.internalSocket.createSocket();\n\n      c.inPorts.in.attach(inIn);\n      c.inPorts.property.attach(propertyIn);\n      c.outPorts.out.attach(outOut);\n      return done();\n    });\n\n    return describe('with input on all ports', () => it('should insert the property', (done) => {\n      outOut.on('data', (data) => {\n        chai.expect(data).to.deep.equal({\n          test: true,\n          key: 'value',\n        });\n        return done();\n      });\n\n      inIn.post(new noflo.IP('data', { test: true }));\n\n      propertyIn.post(new noflo.IP('openBracket', 'key'));\n      propertyIn.post(new noflo.IP('data', 'value'));\n      return propertyIn.post(new noflo.IP('closeBracket', 'key'));\n    }));\n  });\n});\n"},"objects/Join":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n  c.description = 'Join all values of a passed packet together as a string with a predefined delimiter';\n\n  c.inPorts = new noflo.InPorts({\n    in: {\n      datatype: 'object',\n      description: 'Object to join values from',\n      required: true,\n    },\n    delimiter: {\n      datatype: 'string',\n      description: 'Delimiter to join values',\n      control: true,\n      default: ',',\n    },\n  });\n\n  c.outPorts = new noflo.OutPorts({\n    out: {\n      datatype: 'string',\n      description: 'String conversion of all values joined with delimiter into one string',\n      required: true,\n    },\n    error: {\n      datatype: 'object',\n    },\n  });\n\n  return c.process((input, output) => {\n    if (!input.hasData('in')) { return; }\n    if (input.attached('delimiter').length > 0) { if (!input.hasData('delimiter')) { return; } }\n\n    const delimiter = input.getData('delimiter' || ',');\n    const data = input.getData('in');\n\n    if ((data != null) && (typeof data === 'object')) {\n      const keys = Object.keys(data);\n      const {\n        length,\n      } = keys;\n      const values = Array(length);\n      for (let i = 0, end = length - 1, asc = end >= 0;\n        asc ? i <= end : i >= end;\n        asc ? i += 1 : i -= 1) {\n        values[i] = data[keys[i]];\n      }\n      output.sendDone({ out: values.join(delimiter) });\n      return;\n    }\n    output.sendDone({ error: new Error(`${typeof (data)} is not a valid object to join`) });\n  });\n};\n",tests:"describe('Join', () => {\n  let c = null;\n  let inIn = null;\n  let delimiter = null;\n  let out = null;\n  let errorOut = null;\n\n  before((done) => {\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('objects/Join', (err, instance) => {\n      if (err) { return done(err); }\n      c = instance;\n      return done();\n    });\n  });\n\n  beforeEach((done) => {\n    inIn = noflo.internalSocket.createSocket();\n    delimiter = noflo.internalSocket.createSocket();\n    out = noflo.internalSocket.createSocket();\n    errorOut = noflo.internalSocket.createSocket();\n    c.inPorts.in.attach(inIn);\n    c.outPorts.out.attach(out);\n    c.outPorts.error.attach(errorOut);\n    return done();\n  });\n\n  afterEach((done) => {\n    c.inPorts.delimiter.detach(delimiter);\n    c.outPorts.out.detach(out);\n    c.outPorts.error.detach(errorOut);\n    return done();\n  });\n\n  return describe('Joining an object to a string', () => {\n    it('should work with an object without a specified delimiter', (done) => {\n      out.on('data', (data) => {\n        chai.expect(data).to.eql('canada,igloo');\n        return done();\n      });\n\n      return inIn.post(new noflo.IP('data', { eh: 'canada', moose: 'igloo' }));\n    });\n\n    it('should work with an object with specified delimiter', (done) => {\n      c.inPorts.delimiter.attach(delimiter);\n      out.on('data', (data) => {\n        chai.expect(data).to.eql('canada/igloo');\n        return done();\n      });\n\n      delimiter.post(new noflo.IP('data', '/'));\n      return inIn.post(new noflo.IP('data', { eh: 'canada', moose: 'igloo' }));\n    });\n\n    return it('should not work with a non object', (done) => {\n      errorOut.on('data', () => done());\n\n      out.on('data', () => {\n        throw new Error('should not trigger out');\n      });\n\n      return inIn.post(new noflo.IP('data', null));\n    });\n  });\n});\n"},"math/Add":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component({\n    icon: 'plus',\n    inPorts: {\n      augend: {\n        datatype: 'number',\n        required: true,\n      },\n      addend: {\n        datatype: 'number',\n        required: true,\n        control: true,\n      },\n    },\n    outPorts: {\n      sum: {\n        datatype: 'number',\n      },\n    },\n  });\n\n  return c.process((input, output) => {\n    if (!input.hasData('augend', 'addend')) { return; }\n    const [augend, addend] = input.getData('augend', 'addend');\n    output.sendDone({\n      sum: Number(augend) + Number(addend),\n    });\n  });\n};\n",tests:"describe('Add component', () => {\n  let c = null;\n  let augend = null;\n  let addend = null;\n  let sum = null;\n  before(function () {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('math/Add')\n      .then((instance) => {\n        c = instance;\n        augend = noflo.internalSocket.createSocket();\n        addend = noflo.internalSocket.createSocket();\n        c.inPorts.augend.attach(augend);\n        c.inPorts.addend.attach(addend);\n      });\n  });\n  beforeEach(() => {\n    sum = noflo.internalSocket.createSocket();\n    c.outPorts.sum.attach(sum);\n  });\n  afterEach(() => {\n    c.outPorts.sum.detach(sum);\n    sum = null;\n  });\n\n  describe('when instantiated', () => it('should calculate 2 + 5', (done) => {\n    sum.once('data', (res) => {\n      chai.expect(res).to.equal(7);\n      done();\n    });\n    augend.send(2);\n    addend.send(5);\n  }));\n});\n"},"objects/Keys":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n\n  c.description = 'gets only the keys of an object and forward them as an array';\n\n  c.inPorts = new noflo.InPorts({\n    in: {\n      datatype: 'object',\n      description: 'Object to get keys from',\n    },\n  });\n  c.outPorts = new noflo.OutPorts({\n    out: {\n      datatype: 'string',\n      description: 'Keys from the incoming object (one per IP)',\n    },\n  });\n\n  return c.process((input, output) => {\n    if (!input.hasData('in')) { return; }\n    const data = input.getData('in');\n    Object.keys(data).forEach((key) => {\n      output.send({ out: new noflo.IP('data', key) });\n    });\n    output.done();\n  });\n};\n",tests:"describe('Keys component', () => {\n  let c = null;\n  let ins = null;\n  let out = null;\n  before(function (done) {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('objects/Keys', (err, instance) => {\n      if (err) { return done(err); }\n      c = instance;\n      ins = noflo.internalSocket.createSocket();\n      c.inPorts.in.attach(ins);\n      return done();\n    });\n  });\n  beforeEach((done) => {\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n    return done();\n  });\n  afterEach((done) => {\n    c.outPorts.out.detach(out);\n    return done();\n  });\n\n  return describe('given an object', () => it('should return the keys as an array', (done) => {\n    const expected = [\n      'a',\n      'b',\n    ];\n    out.on('data', (data) => {\n      chai.expect(data).to.equal(expected.shift());\n      if (!expected.length) { return done(); }\n    });\n\n    return ins.post(new noflo.IP('data', {\n      a: 1,\n      b: {\n        c: 2,\n        d: [3, 4],\n      },\n    }));\n  }));\n});\n"},"flow/Fork":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.description = 'Send the port number to \\'PORT\\' to set where to direct IPs. It acts as a \\'Split\\' by default, sending IPs to every out-port.';\n  c.inPorts.add('in', {\n    datatype: 'all',\n    description: 'IPs to forward',\n  });\n  c.inPorts.add('port', {\n    datatype: 'number',\n    description: 'Number of ports to forward IPs to',\n  });\n  c.outPorts.add('out', {\n    datatype: 'all',\n    addressable: true,\n  });\n  c.indexes = [];\n  c.tearDown = (callback) => {\n    c.indexes = [];\n    return callback();\n  };\n  return c.process((input, output) => {\n    if (input.hasStream('port')) {\n      // New set of port indexes to work with\n      const ports = input.getStream('port').filter((ip) => ip.type === 'data');\n      c.indexes = [];\n      ports.forEach((port) => {\n        const index = parseInt(port.data, 10);\n        if (c.indexes.indexOf(index) !== -1) { return; }\n        c.indexes.push(index);\n      });\n      output.done();\n      return;\n    }\n    if (!input.hasData('in')) { return; }\n    const data = input.getData('in');\n    let indexes;\n    if (c.indexes.length === 0) {\n      indexes = c.outPorts.out.listAttached();\n    } else {\n      indexes = c.indexes.slice(0);\n    }\n    indexes.forEach((idx) => {\n      output.send({\n        out: new noflo.IP('data', data,\n          { index: idx }),\n      });\n    });\n    output.done();\n  });\n};\n",tests:"describe('Fork component', () => {\n  const g = {};\n\n  let loader = null;\n  before(() => {\n    loader = new noflo.ComponentLoader(baseDir);\n  });\n  beforeEach(function (done) {\n    this.timeout(4000);\n    loader.load('flow/Fork', (err, instance) => {\n      if (err) {\n        done(err);\n        return;\n      }\n      g.c = instance;\n      g.ins = noflo.internalSocket.createSocket();\n      g.portIns = noflo.internalSocket.createSocket();\n      g.outA = noflo.internalSocket.createSocket();\n      g.outB = noflo.internalSocket.createSocket();\n      g.outC = noflo.internalSocket.createSocket();\n      g.c.inPorts.in.attach(g.ins);\n      g.c.inPorts.port.attach(g.portIns);\n      g.c.outPorts.out.attach(g.outA);\n      g.c.outPorts.out.attach(g.outB);\n      g.c.outPorts.out.attach(g.outC);\n      done();\n    });\n  });\n\n  it('sends IPs to the specified port', (done) => {\n    g.outA.on('data', () => {\n      throw new Error('Unexpected data to \"a\"');\n    });\n    g.outB.on('data', (data) => {\n      chai.expect(data).to.equal('a');\n      done();\n    });\n    g.outC.on('data', () => {\n      throw new Error('Unexpected data to \"c\"');\n    });\n\n    g.portIns.connect();\n    g.portIns.send(1);\n    g.portIns.disconnect();\n\n    g.ins.connect();\n    g.ins.send('a');\n    g.ins.disconnect();\n  });\n\n  it('sends IPs to multiple ports', (done) => {\n    const received = [];\n    const expected = 2;\n    g.outA.on('data', (data) => {\n      chai.expect(data).to.equal('a');\n      received.push(data);\n      if (received.length === expected) {\n        done();\n      }\n    });\n    g.outB.on('data', (data) => {\n      chai.expect(data).to.equal('a');\n      received.push(data);\n      if (received.length === expected) {\n        done();\n      }\n    });\n    g.outC.on('data', () => {\n      throw new Error('Unexpected data to \"c\"');\n    });\n\n    g.portIns.beginGroup(0);\n    g.portIns.send(0);\n    g.portIns.send(1);\n    g.portIns.endGroup(0);\n\n    g.ins.connect();\n    g.ins.send('a');\n    g.ins.disconnect();\n  });\n\n  it(\"resets fork settings on every connection to 'PORT'\", (done) => {\n    g.outA.on('data', () => {\n      throw new Error('Unexpected data to \"a\"');\n    });\n    g.outB.on('data', (data) => {\n      chai.expect(data).to.equal('a');\n      done();\n    });\n    g.outC.on('data', () => {\n      throw new Error('Unexpected data to \"c\"');\n    });\n\n    g.portIns.connect();\n    g.portIns.send(0);\n    g.portIns.disconnect();\n    g.portIns.connect();\n    g.portIns.send(1);\n    g.portIns.disconnect();\n\n    g.ins.connect();\n    g.ins.send('a');\n    g.ins.disconnect();\n  });\n\n  it('send to all by default', (done) => {\n    const received = [];\n    const expected = 3;\n    g.outA.on('data', (data) => {\n      chai.expect(data).to.equal('a');\n      received.push(data);\n      if (received.length === expected) {\n        done();\n      }\n    });\n    g.outB.on('data', (data) => {\n      chai.expect(data).to.equal('a');\n      received.push(data);\n      if (received.length === expected) {\n        done();\n      }\n    });\n    g.outC.on('data', (data) => {\n      chai.expect(data).to.equal('a');\n      received.push(data);\n      if (received.length === expected) {\n        done();\n      }\n    });\n\n    g.ins.connect();\n    g.ins.send('a');\n    g.ins.disconnect();\n  });\n});\n"},"objects/MapPropertyValue":{language:"javascript",source:"const noflo = require('noflo');\n\n// currently only supports one map and regex per object\nexports.getComponent = function () {\n  const c = new noflo.Component();\n\n  c.inPorts = new noflo.InPorts({\n    map: {\n      datatype: 'all',\n      description: 'Map to use to map property value on object',\n    },\n    regexp: {\n      datatype: 'string',\n      description: 'Regex to use to map property value on object',\n    },\n    in: {\n      datatype: 'object',\n      description: 'Object to map property value on',\n      required: true,\n    },\n  });\n  c.outPorts = new noflo.OutPorts({\n    out: {\n      datatype: 'object',\n      required: true,\n    },\n  });\n\n  return c.process((input, output) => {\n    if (!input.hasData('in')) { return; }\n    if (input.attached('regexp').length > 0) { if (!input.hasData('regexp')) { return; } }\n    if (input.attached('map').length > 0) { if (!input.hasData('map')) { return; } }\n\n    const data = input.getData('in');\n    let mapAny = {};\n    const map = {};\n    let regexp = {};\n    const regexpAny = {};\n\n    const mapIn = input.hasData('map') ? input.getData('map') : {};\n    // if it is not an object, process it...\n    if (typeof mapIn !== 'object') {\n      const mapParts = mapIn.split('=');\n      if (mapParts.length === 3) {\n        map[mapParts[0]] = {\n          from: mapParts[1],\n          to: mapParts[2],\n        };\n      } else {\n        // eslint-disable-next-line prefer-destructuring\n        mapAny[mapParts[0]] = mapParts[1];\n      }\n    // ...otherwise we keep it as an object\n    } else {\n      mapAny = mapIn;\n    }\n\n    const regexIn = input.hasData('regexp') ? input.getData('regexp') : {};\n    if (typeof regexIn !== 'object') {\n      const regexParts = regexIn.split('=');\n      if (regexParts.length === 3) {\n        regexp[regexParts[0]] = {\n          from: regexParts[1],\n          to: regexParts[2],\n        };\n      }\n      // eslint-disable-next-line prefer-destructuring\n      regexpAny[regexParts[0]] = regexParts[1];\n    }\n\n    Object.keys(data).forEach((property) => {\n      // map stuff\n      const value = data[property];\n      if (map[property] && (map[property].from === value)) {\n        data[property] = map[property].to;\n      }\n\n      if (mapAny[value]) {\n        data[property] = mapAny[value];\n      }\n\n      // regex stuff\n      if (regexp[property]) {\n        regexp = new RegExp(regexp[property].from);\n        const matched = regexp.exec(value);\n        if (matched) {\n          data[property] = value.replace(regexp, c.regexp[property].to);\n        }\n      }\n\n      Object.keys(regexpAny).forEach((expression) => {\n        const replacement = regexpAny[expression];\n        regexp = new RegExp(expression);\n        const matched = regexp.exec(value);\n        if (!matched) { return; }\n        data[property] = value.replace(regexp, replacement);\n      });\n    });\n\n    output.sendDone({ out: data });\n  });\n};\n",tests:"describe('MapPropertyValue component', () => {\n  let c = null;\n  let ins = null;\n  let map = null;\n  let out = null;\n\n  before((done) => {\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('objects/MapPropertyValue', (err, instance) => {\n      if (err) { return done(err); }\n      c = instance;\n      ins = noflo.internalSocket.createSocket();\n      map = noflo.internalSocket.createSocket();\n      out = noflo.internalSocket.createSocket();\n      c.inPorts.in.attach(ins);\n      c.inPorts.map.attach(map);\n      c.outPorts.out.attach(out);\n      return done();\n    });\n  });\n\n  describe('when instantiated', () => {\n    it('should have input ports', (done) => {\n      chai.expect(c.inPorts.in).to.be.an('object');\n      return done();\n    });\n\n    return it('should have an output port', (done) => {\n      chai.expect(c.outPorts.out).to.be.an('object');\n      return done();\n    });\n  });\n\n  return describe('map properties', () => {\n    const o = { a: 1, b: 2, c: 3 };\n\n    it('should work with no map', (done) => {\n      c.inPorts.map.sockets = [];\n      const output = [];\n\n      out.on('data', (data) => output.push(data));\n\n      out.once('disconnect', () => {\n        chai.expect(output).to.deep.equal([{ a: 1, b: 2, c: 3 }]);\n        return done();\n      });\n\n      return ins.post(new noflo.IP('data', o));\n    });\n\n    it('should map from to with object', (done) => {\n      const output = [];\n      out.on('data', (data) => output.push(data));\n      out.once('disconnect', () => {\n        chai.expect(output).to.deep.equal([{ a: 'canada', b: 2, c: 3 }]);\n        return done();\n      });\n      map.post(new noflo.IP('data', { eh: 'canada' }));\n      return ins.post(new noflo.IP('data', { a: 'eh', b: 2, c: 3 }));\n    });\n\n    return it('should map from to with string', (done) => {\n      const output = [];\n      out.on('data', (data) => output.push(data));\n      out.once('disconnect', () => {\n        chai.expect(output).to.deep.equal([{ a: '0', b: 2, c: 3 }]);\n        return done();\n      });\n      map.post(new noflo.IP('data', '1=0'));\n      return ins.post(new noflo.IP('data', o));\n    });\n  });\n});\n"},"objects/MergeObjects":{language:"javascript",source:"const noflo = require('noflo');\n\nfunction merge(origin, object) {\n  // Go through the incoming object\n  const orig = origin;\n  Object.keys(object).forEach((key) => {\n    const value = object[key];\n    const oValue = origin[key];\n\n    // If property already exists, merge\n    if (oValue != null) {\n      // ... depending on type of the pre-existing property\n      switch (toString.call(oValue)) {\n        case '[object Array]':\n          // Concatenate if an array\n          orig[key].push.apply(origin[key], value);\n          break;\n        case '[object Object]':\n          // Merge down if an object\n          orig[key] = merge(oValue, value);\n          break;\n        default:\n          // Replace if simple value\n          orig[key] = value;\n      }\n\n      // Use object if not\n    } else {\n      orig[key] = value;\n    }\n  });\n  return orig;\n}\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n  c.description = 'merges all incoming objects into one';\n\n  c.inPorts = new noflo.InPorts({\n    in: {\n      datatype: 'object',\n      description: 'Objects to merge (one per IP)',\n    },\n  });\n  c.outPorts = new noflo.OutPorts({\n    out: {\n      datatype: 'object',\n      description: 'A new object containing the merge of input objects',\n    },\n  });\n\n  c.forwardBrackets = {};\n  return c.process((input, output) => {\n    if (!input.hasStream('in')) { return; }\n    const inData = input.getStream('in')\n      .filter((ip) => ip.type === 'data')\n      .map((ip) => ip.data);\n    output.sendDone(inData.reduce(merge, {}));\n  });\n};\n",tests:"describe('MergeObjects component', () => {\n  let c = null;\n  let ins = null;\n  let out = null;\n  before(function (done) {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('objects/MergeObjects', (err, instance) => {\n      if (err) { return done(err); }\n      c = instance;\n      ins = noflo.internalSocket.createSocket();\n      c.inPorts.in.attach(ins);\n      return done();\n    });\n  });\n  beforeEach((done) => {\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n    return done();\n  });\n  afterEach((done) => {\n    c.outPorts.out.detach(out);\n    return done();\n  });\n\n  return describe('when receiving two objects', () => it('should produce a merged object on disconnect', (done) => {\n    out.on('data', (data) => {\n      chai.expect(data).to.eql({\n        x: 7,\n        y: [2, 3, 4, 8, 9],\n        z: {\n          p: 10,\n          q: 6,\n          r: 11,\n        },\n      });\n      return done();\n    });\n\n    ins.post(new noflo.IP('openBracket'));\n    ins.post(new noflo.IP('data', {\n      x: 1,\n      y: [2, 3, 4],\n      z: {\n        p: 5,\n        q: 6,\n      },\n    }));\n    ins.post(new noflo.IP('data', {\n      x: 7,\n      y: [8, 9],\n      z: {\n        p: 10,\n        r: 11,\n      },\n    }));\n    return ins.post(new noflo.IP('closeBracket'));\n  }));\n});\n"},"objects/RemoveProperty":{language:"javascript",source:"const noflo = require('noflo');\n\nfunction clone(obj) {\n  if ((obj === null) || (typeof obj !== 'object')) { return obj; }\n  const temp = new obj.constructor();\n  Object.keys(obj).forEach((key) => {\n    temp[key] = clone(obj[key]);\n  });\n  return temp;\n}\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n  c.icon = 'ban';\n\n  c.inPorts = new noflo.InPorts({\n    in: {\n      datatype: 'object',\n      description: 'Object to remove properties from',\n      required: true,\n    },\n    property: {\n      datatype: 'string',\n      description: 'Properties to remove (one per IP)',\n      required: true,\n    },\n  });\n\n  c.outPorts = new noflo.OutPorts({\n    out: {\n      datatype: 'object',\n      description: 'Object forwarded from input',\n    },\n  });\n\n  return c.process((input, output) => {\n    let object;\n    if (!input.hasData('in')) { return; }\n    if (!input.hasStream('property')) { return; }\n    const ip = input.get('in');\n    const {\n      data,\n    } = ip;\n    const propData = input.getStream('property')\n      .filter((i) => i.type === 'data')\n      .map((i) => i.data);\n\n    // Clone the object so that the original isn't changed\n    if (ip.clonable) {\n      object = clone(data);\n    } else {\n      object = data;\n    }\n\n    propData.forEach((property) => {\n      delete object[property];\n    });\n\n    output.sendDone({ out: object });\n  });\n};\n",tests:"describe('RemoveProperty', () => {\n  let c = null;\n\n  before((done) => {\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('objects/RemoveProperty', (err, instance) => {\n      if (err) { return done(err); }\n      c = instance;\n      return done();\n    });\n  });\n\n  describe('inPorts', () => {\n    it('should include \"in\"', (done) => {\n      chai.expect(c.inPorts.in).to.be.an('object');\n      return done();\n    });\n    return it('should include \"property\"', (done) => {\n      chai.expect(c.inPorts.property).to.be.an('object');\n      return done();\n    });\n  });\n  describe('outPorts', () => it('should include \"out\"', (done) => {\n    chai.expect(c.outPorts.out).to.be.an('object');\n    return done();\n  }));\n\n  return describe('data flow', () => {\n    let inIn = null;\n    let propertyIn = null;\n    let outOut = null;\n\n    beforeEach((done) => {\n      inIn = noflo.internalSocket.createSocket();\n      propertyIn = noflo.internalSocket.createSocket();\n      outOut = noflo.internalSocket.createSocket();\n\n      c.inPorts.in.attach(inIn);\n      c.inPorts.property.attach(propertyIn);\n      c.outPorts.out.attach(outOut);\n      return done();\n    });\n\n    return describe('with input on all ports', () => it('should remove the property', (done) => {\n      outOut.on('data', (data) => {\n        chai.expect(data).to.deep.equal({ oh: 'canada' });\n        return done();\n      });\n\n      propertyIn.post(new noflo.IP('openBracket'));\n      propertyIn.post(new noflo.IP('data', 'test'));\n      propertyIn.post(new noflo.IP('data', 'key'));\n      propertyIn.post(new noflo.IP('closeBracket'));\n\n      return inIn.post(new noflo.IP('data', {\n        test: true,\n        key: 'value',\n        oh: 'canada',\n      }));\n    }));\n  });\n});\n"},"objects/ReplaceKey":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n  c.description = 'given a regexp matching any key of an incoming object as a data IP, replace the key with the provided string';\n\n  c.inPorts = new noflo.InPorts({\n    in: {\n      datatype: 'object',\n      description: 'Object to replace a key from',\n    },\n    pattern: {\n      datatype: 'all',\n      description: 'pattern to use to replace key',\n      control: true,\n    },\n  });\n  c.outPorts = new noflo.OutPorts({\n    out: {\n      datatype: 'object',\n      description: 'Object forwared from input',\n    },\n  });\n\n  return c.process((input, output) => {\n    if (!input.hasData('in', 'pattern')) { return; }\n    const data = input.getData('in');\n    const patterns = input.getData('pattern');\n    let newKey = null;\n\n    Object.keys(data).forEach((key) => {\n      const value = data[key];\n      Object.keys(patterns).forEach((pattern) => {\n        const replace = patterns[pattern];\n        const regexp = new RegExp(pattern);\n\n        if (key.match(regexp) != null) {\n          newKey = key.replace(regexp, replace);\n          data[newKey] = value;\n          delete data[key];\n        }\n      });\n    });\n\n    output.sendDone({ out: data });\n  });\n};\n",tests:"describe('ReplaceKey component', () => {\n  let c = null;\n  let pattern = null;\n  let ins = null;\n  let out = null;\n  before(function (done) {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('objects/ReplaceKey', (err, instance) => {\n      if (err) { return done(err); }\n      c = instance;\n      pattern = noflo.internalSocket.createSocket();\n      c.inPorts.pattern.attach(pattern);\n      ins = noflo.internalSocket.createSocket();\n      c.inPorts.in.attach(ins);\n      return done();\n    });\n  });\n  beforeEach((done) => {\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n    return done();\n  });\n  afterEach((done) => {\n    c.outPorts.out.detach(out);\n    return done();\n  });\n\n  return describe('given a regexp', () => it('should change the keys accordingly', (done) => {\n    out.on('data', (data) => {\n      chai.expect(data).to.eql({\n        def: 1,\n        bbc: 2,\n      });\n      return done();\n    });\n\n    pattern.post(new noflo.IP('data',\n      { 'a.+c': 'def' }));\n\n    return ins.post(new noflo.IP('data', {\n      abc: 1,\n      bbc: 2,\n    }));\n  }));\n});\n"},"objects/SetProperty":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n\n  c.inPorts = new noflo.InPorts({\n    property: {\n      datatype: 'all',\n      description: 'All except for object',\n      required: true,\n    },\n    in: {\n      datatype: 'object',\n      description: 'Object to set property on',\n      required: true,\n    },\n  });\n  c.outPorts = new noflo.OutPorts({\n    out: {\n      datatype: 'object',\n      description: 'Object forwared from input',\n    },\n  });\n\n  return c.process((input, output) => {\n    if (!input.hasData('in', 'property')) { return; }\n\n    const prop = input.getData('property');\n    const data = input.getData('in');\n\n    const properties = {};\n    const propParts = prop.split('=');\n    // eslint-disable-next-line prefer-destructuring\n    properties[propParts[0]] = propParts[1];\n\n    Object.keys(properties).forEach((property) => {\n      const value = properties[property];\n      data[property] = value;\n    });\n\n    output.sendDone(data);\n  });\n};\n",tests:"describe('SetProperty component', () => {\n  let c = null;\n  let property = null;\n  let inIn = null;\n  let out = null;\n  before(function (done) {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('objects/SetProperty', (err, instance) => {\n      if (err) { return done(err); }\n      c = instance;\n      property = noflo.internalSocket.createSocket();\n      c.inPorts.property.attach(property);\n      inIn = noflo.internalSocket.createSocket();\n      c.inPorts.in.attach(inIn);\n      return done();\n    });\n  });\n  beforeEach((done) => {\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n    return done();\n  });\n  afterEach((done) => {\n    c.outPorts.out.detach(out);\n    return done();\n  });\n\n  return describe('given an empty object, property p should be set', () => it('should set it to the object', (done) => {\n    out.on('data', (data) => {\n      chai.expect(data).to.eql({ p: undefined });\n      return done();\n    });\n\n    inIn.post(new noflo.IP('data', {}));\n    return property.post(new noflo.IP('data', 'p'));\n  }));\n});\n"},"objects/SetPropertyValue":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n\n  c.inPorts = new noflo.InPorts({\n    property: {\n      datatype: 'string',\n      description: 'Property name to set value on',\n      required: true,\n    },\n    value: {\n      datatype: 'all',\n      description: 'Property value to set',\n      required: true,\n    },\n    in: {\n      datatype: 'object',\n      description: 'Object to set property value on',\n      required: true,\n    },\n  });\n  c.outPorts = new noflo.OutPorts({\n    out: {\n      datatype: 'object',\n      description: 'Object forwarded from the input',\n    },\n  });\n\n  return c.process((input, output) => {\n    if (!input.hasData('property', 'value', 'in')) { return; }\n\n    const data = input.getData('in');\n    const property = input.getData('property');\n    const value = input.getData('value');\n    data[property] = value;\n    output.sendDone({ out: data });\n  });\n};\n",tests:"const getInputObject = () => JSON.parse(JSON.stringify({\n  a: 1,\n  b: {\n    c: 2,\n    d: [3, 4],\n  },\n}));\n\ndescribe('SetPropertyValue component', () => {\n  let c = null;\n  let property = null;\n  let value = null;\n  let ins = null;\n  let out = null;\n  before(function (done) {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('objects/SetPropertyValue', (err, instance) => {\n      if (err) { return done(err); }\n      c = instance;\n      property = noflo.internalSocket.createSocket();\n      c.inPorts.property.attach(property);\n      value = noflo.internalSocket.createSocket();\n      c.inPorts.value.attach(value);\n      ins = noflo.internalSocket.createSocket();\n      c.inPorts.in.attach(ins);\n      return done();\n    });\n  });\n  beforeEach((done) => {\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n    return done();\n  });\n  afterEach((done) => {\n    c.outPorts.out.detach(out);\n    return done();\n  });\n\n  describe('given an object, a property p and value 1', () => it('should set it to the object', (done) => {\n    out.on('data', (data) => {\n      chai.expect(data).to.eql({\n        a: 1,\n        b: {\n          c: 2,\n          d: [3, 4],\n        },\n        p: 1,\n      });\n      return done();\n    });\n\n    property.post(new noflo.IP('data', 'p'));\n    value.post(new noflo.IP('data', 1));\n    return ins.post(new noflo.IP('data', getInputObject()));\n  }));\n\n  describe('given an object, a property p and value \"test\"', () => it('should set it to the object', (done) => {\n    out.on('data', (data) => {\n      chai.expect(data).to.eql({\n        a: 1,\n        b: {\n          c: 2,\n          d: [3, 4],\n        },\n        p: 'test',\n      });\n      return done();\n    });\n\n    property.post(new noflo.IP('data', 'p'));\n    value.post(new noflo.IP('data', 'test'));\n    return ins.post(new noflo.IP('data', getInputObject()));\n  }));\n\n  describe('given an object, a property p and value NULL', () => it('should set it to the object', (done) => {\n    out.on('data', (data) => {\n      chai.expect(data).to.eql({\n        a: 1,\n        b: {\n          c: 2,\n          d: [3, 4],\n        },\n        p: null,\n      });\n      return done();\n    });\n\n    property.post(new noflo.IP('data', 'p'));\n    value.post(new noflo.IP('data', null));\n    return ins.post(new noflo.IP('data', getInputObject()));\n  }));\n\n  describe('given an object, a property p and value 0', () => it('should set it to the object', (done) => {\n    out.on('data', (data) => {\n      chai.expect(data).to.eql({\n        a: 1,\n        b: {\n          c: 2,\n          d: [3, 4],\n        },\n        p: 0,\n      });\n      return done();\n    });\n\n    property.post(new noflo.IP('data', 'p'));\n    value.post(new noflo.IP('data', 0));\n    return ins.post(new noflo.IP('data', getInputObject()));\n  }));\n\n  return describe('given an object, a property p and value FALSE', () => it('should set it to the object', (done) => {\n    out.on('data', (data) => {\n      chai.expect(data).to.eql({\n        a: 1,\n        b: {\n          c: 2,\n          d: [3, 4],\n        },\n        p: false,\n      });\n      return done();\n    });\n\n    property.post(new noflo.IP('data', 'p'));\n    value.post(new noflo.IP('data', false));\n    return ins.post(new noflo.IP('data', getInputObject()));\n  }));\n});\n"},"objects/SimplifyObject":{language:"javascript",source:"const noflo = require('noflo');\n\nlet simplify;\n\nfunction simplifyObject(data) {\n  const keys = Object.keys(data);\n  if ((keys.length === 1) && (keys[0] === '$data')) {\n    return simplify(data.$data);\n  }\n\n  const simplified = {};\n  Object.keys(data).forEach((key) => {\n    const value = data[key];\n    simplified[key] = simplify(value);\n  });\n  return simplified;\n}\n\nsimplify = function (data) {\n  if (Array.isArray(data)) {\n    if (data.length === 1) {\n      return data[0];\n    }\n    return data;\n  }\n  if (typeof data !== 'object') {\n    return data;\n  }\n\n  return simplifyObject(data);\n};\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n  c.description = 'Simplify an objectgi';\n\n  c.inPorts = new noflo.InPorts({\n    in: {\n      datatype: 'all',\n      description: 'Object to simplify',\n    },\n  });\n  c.outPorts = new noflo.OutPorts({\n    out: {\n      datatype: 'all',\n      description: 'Simplified object',\n    },\n  });\n\n  return c.process((input, output) => {\n    const data = input.getData('in');\n    output.sendDone({ out: simplify(data) });\n  });\n};\n",tests:"describe('SimplifyObject component', () => {\n  let c = null;\n  let inIn = null;\n  let out = null;\n  before(function (done) {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('objects/SimplifyObject', (err, instance) => {\n      if (err) { return done(err); }\n      c = instance;\n      inIn = noflo.internalSocket.createSocket();\n      c.inPorts.in.attach(inIn);\n      return done();\n    });\n  });\n  beforeEach((done) => {\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n    return done();\n  });\n  afterEach((done) => {\n    c.outPorts.out.detach(out);\n    return done();\n  });\n\n  describe('given an object with a $data key', () => it('should give back the value', (done) => {\n    out.on('data', (data) => {\n      chai.expect(data).to.equal('value');\n      return done();\n    });\n\n    return inIn.post(new noflo.IP('data', { $data: 'value' }));\n  }));\n\n  describe('given an object with a normal key', () => it('should give back the object as it was', (done) => {\n    out.on('data', (data) => {\n      chai.expect(data).to.eql({ test: 'value' });\n      return done();\n    });\n\n    return inIn.post(new noflo.IP('data', { test: 'value' }));\n  }));\n\n  describe('given an array with 2 items', () => it('should give back the array as it was', (done) => {\n    out.on('data', (data) => {\n      chai.expect(data).to.eql(['value', 'canada']);\n      return done();\n    });\n\n    return inIn.post(new noflo.IP('data', ['value', 'canada']));\n  }));\n\n  return describe('given an array with 1 item', () => it('should give back the value', (done) => {\n    out.on('data', (data) => {\n      chai.expect(data).to.equal('value');\n      return done();\n    });\n\n    return inIn.post(new noflo.IP('data', ['value']));\n  }));\n});\n"},"objects/Size":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n  c.description = 'gets the size of an object and sends that out as a number';\n\n  c.inPorts = new noflo.InPorts({\n    in: {\n      datatype: 'object',\n      description: 'Object to measure the size of',\n    },\n  });\n  c.outPorts = new noflo.OutPorts({\n    out: {\n      datatype: 'int',\n      description: 'Size of the input object',\n    },\n  });\n\n  return c.process((input, output) => {\n    let size;\n    const data = input.getData('in');\n\n    if (typeof data === 'object') {\n      size = Object.keys(data).length;\n    } else {\n      size = data.length;\n    }\n\n    output.sendDone({ out: size });\n  });\n};\n",tests:"describe('Size component', () => {\n  let c = null;\n  let inIn = null;\n  let out = null;\n  before(function (done) {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('objects/Size', (err, instance) => {\n      if (err) { return done(err); }\n      c = instance;\n      inIn = noflo.internalSocket.createSocket();\n      c.inPorts.in.attach(inIn);\n      return done();\n    });\n  });\n  beforeEach((done) => {\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n    return done();\n  });\n  afterEach((done) => {\n    c.outPorts.out.detach(out);\n    return done();\n  });\n\n  describe('given an object with 3 keys', () => it('should give back number 3', (done) => {\n    out.on('data', (data) => {\n      chai.expect(data).to.eql(3);\n      return done();\n    });\n\n    return inIn.post(new noflo.IP('data', { one: 1, two: 2, three: 3 }));\n  }));\n\n  return describe('given an array with 2 values', () => it('should give back number 2', (done) => {\n    out.on('data', (data) => {\n      chai.expect(data).to.eql(2);\n      return done();\n    });\n\n    return inIn.post(new noflo.IP('data', [40, 2]));\n  }));\n});\n"},"objects/SliceArray":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n\n  c.inPorts = new noflo.InPorts({\n    in: {\n      datatype: 'array',\n      description: 'Array to slice',\n      required: true,\n    },\n    begin: {\n      datatype: 'number',\n      description: 'Beginning of the slicing',\n      required: true,\n    },\n    end: {\n      datatype: 'number',\n      description: 'End of the slicing',\n    },\n  });\n  c.outPorts = new noflo.OutPorts({\n    out: {\n      datatype: 'array',\n      description: 'Result of the slice operation',\n      required: true,\n    },\n    error: {\n      datatype: 'object',\n    },\n  });\n\n  return c.process((input, output) => {\n    let sliced;\n    if (!input.hasData('in', 'begin')) { return; }\n    if (input.attached('end').length > 0) { if (!input.hasData('end')) { return; } }\n\n    const data = input.getData('in');\n    const begin = input.getData('begin');\n    if (!(data != null ? data.slice : undefined)) {\n      output.done(new Error(`Data ${typeof data} cannot be sliced`));\n      return;\n    }\n\n    if (input.hasData('end')) {\n      const end = input.getData('end');\n      sliced = data.slice(begin, end);\n    } else {\n      sliced = data.slice(begin);\n    }\n\n    output.sendDone({ out: sliced });\n  });\n};\n",tests:"describe('SliceArray', () => {\n  let c = null;\n  let inIn = null;\n  let begin = null;\n  let end = null;\n  let out = null;\n  let errorOut = null;\n\n  before((done) => {\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('objects/SliceArray', (err, instance) => {\n      if (err) { return done(err); }\n      c = instance;\n      return done();\n    });\n  });\n\n  beforeEach((done) => {\n    inIn = noflo.internalSocket.createSocket();\n    begin = noflo.internalSocket.createSocket();\n    end = noflo.internalSocket.createSocket();\n    out = noflo.internalSocket.createSocket();\n    errorOut = noflo.internalSocket.createSocket();\n    c.inPorts.in.attach(inIn);\n    c.inPorts.begin.attach(begin);\n    c.outPorts.out.attach(out);\n    c.outPorts.error.attach(errorOut);\n    return done();\n  });\n\n  afterEach((done) => {\n    c.outPorts.out.detach(out);\n    c.outPorts.error.detach(errorOut);\n    return done();\n  });\n\n  describe('ports', () => {\n    describe('inPorts', () => {\n      it('should include \"in\"', (done) => {\n        chai.expect(c.inPorts.in).to.be.an('object');\n        return done();\n      });\n      it('should include \"begin\"', (done) => {\n        chai.expect(c.inPorts.begin).to.be.an('object');\n        return done();\n      });\n      return it('should include \"end\"', (done) => {\n        chai.expect(c.inPorts.end).to.be.an('object');\n        return done();\n      });\n    });\n    describe('outPorts', () => {\n      it('should include \"out\"', (done) => {\n        chai.expect(c.outPorts.out).to.be.an('object');\n        return done();\n      });\n      return it('should include \"error\"', (done) => {\n        chai.expect(c.outPorts.out).to.be.an('object');\n        return done();\n      });\n    });\n  });\n\n  return describe('slicing an array', () => {\n    it('should not work with a non array data sent to in', (done) => {\n      out.on('data', () => done(new Error('should not go into out')));\n\n      errorOut.on('data', (data) => {\n        chai.expect(data).to.be.an('error');\n        return done();\n      });\n\n      begin.post(new noflo.IP('data', ''));\n      return inIn.post(new noflo.IP('data', null));\n    });\n\n    it('should work with an array using 1 as begin', (done) => {\n      out.on('data', (data) => {\n        chai.expect(data).to.eql(['eh']);\n        return done();\n      });\n\n      begin.post(new noflo.IP('data', 1));\n      return inIn.post(new noflo.IP('data', ['canada', 'eh']));\n    });\n\n    return it('should work with an array using 1 as begin and 3 as end', (done) => {\n      c.inPorts.end.attach(end);\n      out.on('data', (data) => {\n        chai.expect(data).to.eql(['eh', 'igloo']);\n        return done();\n      });\n\n      end.post(new noflo.IP('data', 3));\n      begin.post(new noflo.IP('data', 1));\n      return inIn.post(new noflo.IP('data', ['canada', 'eh', 'igloo', 'moose', 'syrup']));\n    });\n  });\n});\n"},"objects/SplitArray":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n  c.description = 'splits a single array into multiple IPs, wrapped with the key as the group';\n\n  c.inPorts = new noflo.InPorts({\n    in: {\n      datatype: 'object',\n      description: 'Array to split from',\n    },\n  });\n  c.outPorts = new noflo.OutPorts({\n    out: {\n      datatype: 'all',\n      description: 'Values from the split array',\n    },\n  });\n\n  return c.process((input, output) => {\n    const data = input.getData('in');\n    if ((typeof data === 'object') && !Array.isArray(data)) {\n      Object.keys(data).forEach((key) => {\n        const item = data[key];\n        output.send(new noflo.IP('openBracket', key));\n        output.send(new noflo.IP('data', item));\n        output.send(new noflo.IP('closeBracket', key));\n      });\n      output.done();\n      return;\n    }\n    output.send(new noflo.IP('openBracket'));\n    data.forEach((item) => {\n      output.send({ out: item });\n    });\n    output.send(new noflo.IP('closeBracket'));\n    output.done();\n  });\n};\n",tests:"describe('SplitArray component', () => {\n  let c = null;\n  let ins = null;\n  let out = null;\n  before(function (done) {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('objects/SplitArray', (err, instance) => {\n      if (err) { return done(err); }\n      c = instance;\n      ins = noflo.internalSocket.createSocket();\n      c.inPorts.in.attach(ins);\n      return done();\n    });\n  });\n  beforeEach((done) => {\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n    return done();\n  });\n  afterEach((done) => {\n    c.outPorts.out.detach(out);\n    return done();\n  });\n\n  describe('given an object (even though it is SplitArray)...', () => it('should return keys as groups and values as their own IPs', (done) => {\n    const expected = [\n      '< x',\n      'DATA 1',\n      '>',\n      '< y',\n      'DATA 2',\n      '>',\n    ];\n    const received = [];\n\n    let closing = 0;\n    out.on('ip', (ip) => {\n      if (ip.type === 'openBracket') {\n        received.push(`< ${ip.data}`);\n      }\n\n      if (ip.type === 'data') {\n        received.push(`DATA ${ip.data}`);\n      }\n\n      if (ip.type === 'closeBracket') {\n        closing++;\n        received.push('>');\n        if (closing === 2) {\n          chai.expect(received).to.eql(expected);\n          return done();\n        }\n      }\n    });\n\n    return ins.post(new noflo.IP('data', {\n      x: 1,\n      y: 2,\n    }));\n  }));\n\n  return describe('given an array', () => it('should return values as their own IPs', (done) => {\n    const expected = [\n      'DATA 1',\n      'DATA 2',\n    ];\n    const received = [];\n\n    out.on('ip', (ip) => {\n      if (ip.type === 'data') {\n        received.push(`DATA ${ip.data}`);\n      }\n      if (ip.type === 'closeBracket') {\n        chai.expect(received).to.eql(expected);\n        return done();\n      }\n    });\n\n    return ins.post(new noflo.IP('data', [1, 2]));\n  }));\n});\n"},"objects/SplitObject":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n  c.description = 'splits a single object into multiple IPs, wrapped with the key as the group';\n\n  c.inPorts = new noflo.InPorts({\n    in: {\n      datatype: 'object',\n      description: 'Object to split key/values from',\n    },\n  });\n  c.outPorts = new noflo.OutPorts({\n    out: {\n      datatype: 'all',\n      description: 'Values from the input object (one value per IP and its key sent as group)',\n    },\n  });\n\n  return c.process((input, output) => {\n    const data = input.getData('in');\n\n    Object.keys(data).forEach((key) => {\n      const value = data[key];\n      output.send(new noflo.IP('openBracket', key));\n      output.send(new noflo.IP('data', value));\n      output.send(new noflo.IP('closeBracket', key));\n    });\n\n    output.done();\n  });\n};\n",tests:"describe('SplitObject component', () => {\n  let c = null;\n  let ins = null;\n  let out = null;\n  before(function (done) {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('objects/SplitObject', (err, instance) => {\n      if (err) { return done(err); }\n      c = instance;\n      ins = noflo.internalSocket.createSocket();\n      c.inPorts.in.attach(ins);\n      return done();\n    });\n  });\n  beforeEach((done) => {\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n    return done();\n  });\n  afterEach((done) => {\n    c.outPorts.out.detach(out);\n    return done();\n  });\n\n  return describe('given an object', () => it('should return keys as groups and values as their own IPs', (done) => {\n    const expected = [\n      '< x',\n      'DATA 1',\n      '>',\n      '< y',\n      'DATA 2',\n      '>',\n    ];\n    const received = [];\n\n    let closing = 0;\n    out.on('ip', (data) => {\n      if ((data.type === 'openBracket') && (data.data != null)) {\n        received.push(`< ${data.data}`);\n      }\n\n      if ((data.type === 'data') && (data.data != null)) {\n        received.push(`DATA ${data.data}`);\n      }\n\n      if (data.type === 'closeBracket') {\n        closing++;\n\n        received.push('>');\n        if (closing === 2) {\n          chai.expect(received).to.eql(expected);\n          return done();\n        }\n      }\n    });\n\n    return ins.post(new noflo.IP('data', {\n      x: 1,\n      y: 2,\n    }));\n  }));\n});\n"},"objects/UniqueArray":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n  c.icon = 'empire';\n\n  c.inPorts = new noflo.InPorts({\n    in: {\n      datatype: 'array',\n      description: 'Array to get unique values from',\n    },\n  });\n  c.outPorts = new noflo.OutPorts({\n    out: {\n      datatype: 'array',\n      description: 'Array containing only unique values from the input array',\n    },\n  });\n\n  return c.process((input, output) => {\n    const data = input.getData('in');\n\n    const seen = {};\n    const newArray = [];\n    data.forEach((member) => {\n      seen[member] = member;\n    });\n    Object.keys(seen).forEach((member) => {\n      newArray.push(member);\n    });\n    output.sendDone(newArray);\n  });\n};\n",tests:"describe('UniqueArray component', () => {\n  let c = null;\n  let inIn = null;\n  let out = null;\n  before(function (done) {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('objects/UniqueArray', (err, instance) => {\n      if (err) { return done(err); }\n      c = instance;\n      inIn = noflo.internalSocket.createSocket();\n      c.inPorts.in.attach(inIn);\n      return done();\n    });\n  });\n  beforeEach((done) => {\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n    return done();\n  });\n  afterEach((done) => {\n    c.outPorts.out.detach(out);\n    return done();\n  });\n\n  return describe('given an array with 3 items, with a duplicate', () => it('should give an array with only 2', (done) => {\n    out.on('data', (data) => {\n      chai.expect(data).to.eql(['0', '1']);\n      return done();\n    });\n\n    return inIn.post(new noflo.IP('data', [0, 1, 1]));\n  }));\n});\n"},"objects/Values":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n  c.description = 'gets only the values of an object and forward them as an array';\n\n  c.inPorts = new noflo.InPorts({\n    in: {\n      datatype: 'all',\n      description: 'Object to extract values from',\n    },\n  });\n  c.outPorts = new noflo.OutPorts({\n    out: {\n      datatype: 'all',\n      description: 'Values extracted from the input object (one value per IP)',\n    },\n  });\n\n  return c.process((input, output) => {\n    const data = input.getData('in');\n\n    const keys = Object.keys(data);\n    const values = Array(keys.length);\n    for (let index = 0; index < keys.length; index += 1) {\n      const key = keys[index];\n      values[index] = data[key];\n    }\n\n    output.send(new noflo.IP('openBracket'));\n    values.forEach((value) => {\n      output.send(new noflo.IP('data', value));\n    });\n    output.send(new noflo.IP('closeBracket'));\n    output.done();\n  });\n};\n",tests:"describe('Values component', () => {\n  let c = null;\n  let ins = null;\n  let out = null;\n  before(function (done) {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('objects/Values', (err, instance) => {\n      if (err) { return done(err); }\n      c = instance;\n      ins = noflo.internalSocket.createSocket();\n      c.inPorts.in.attach(ins);\n      return done();\n    });\n  });\n  beforeEach((done) => {\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n    return done();\n  });\n  afterEach((done) => {\n    c.outPorts.out.detach(out);\n    return done();\n  });\n\n  return describe('given an object', () => it('should return the values as an array', (done) => {\n    const expected = [\n      1,\n      {\n        c: 2,\n        d: [3, 4],\n      },\n    ];\n    out.on('data', (data) => {\n      chai.expect(data).to.eql(expected.shift());\n      if (!expected.length) { return done(); }\n    });\n\n    return ins.post(new noflo.IP('data', {\n      a: 1,\n      b: {\n        c: 2,\n        d: [3, 4],\n      },\n    }));\n  }));\n});\n"},"packets/Compact":{language:"coffeescript",source:"noflo = require(\"noflo\")\n_ = require(\"underscore\")\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = \"Remove null\"\n  c.inPorts.add 'in',\n    datatype: 'all'\n  c.outPorts.add 'out',\n    datatype: 'all'\n\n  c.process (input, output) ->\n    return unless input.hasData 'in'\n    data = input.getData 'in'\n    return output.done() unless data?\n    return output.done() if data.length is 0\n    return output.done() if _.isObject(data) and _.isEmpty(data)\n    output.sendDone\n      out: data\n",tests:"noflo = require 'noflo'\n\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-packets'\n\ndescribe 'Compact component', ->\n  c = null\n  ins = null\n  out = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'packets/Compact', (err, instance) ->\n      return done err if err\n      c = instance\n      ins = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach ins\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n  afterEach ->\n    c.outPorts.out.detach out\n\n  describe 'when receiving a mixed stream of packets', ->\n    it 'should only return the \"proper\" ones', (done) ->\n      expected = [\n        '< a'\n        'DATA 1'\n        'DATA 2'\n        'DATA false'\n        '>'\n      ]\n      received = []\n\n      out.on 'begingroup', (grp) ->\n        received.push \"< #{grp}\"\n      out.on 'data', (data) ->\n        received.push \"DATA #{data}\"\n      out.on 'endgroup', ->\n        received.push '>'\n      out.on 'disconnect', ->\n        chai.expect(received).to.eql expected\n        done()\n\n      ins.beginGroup 'a'\n      ins.send []\n      ins.send 1\n      ins.send ''\n      ins.send 2\n      ins.send null\n      ins.send false\n      ins.send {}\n      ins.endGroup()\n      ins.disconnect()\n"},"packets/CountPackets":{language:"coffeescript",source:"noflo = require(\"noflo\")\n_ = require(\"underscore\")\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Count number of data IPs inside each stream'\n  c.icon = 'sort-numeric-asc'\n  c.inPorts.add 'in',\n    datatype: 'all'\n  c.outPorts.add 'out',\n    datatype: 'all'\n  c.outPorts.add 'count',\n    datatype: 'int'\n  c.counts = [0]\n  c.tearDown = (callback) ->\n    c.counts = [0]\n    do callback\n\n  c.forwardBrackets = {}\n  c.process (input, output) ->\n    return unless input.has 'in'\n    ip = input.get 'in'\n    if ip.type is 'openBracket'\n      c.counts.push 0\n      output.sendDone\n        out: ip\n        count: ip\n      return\n    if ip.type is 'closeBracket'\n      count = _.last c.counts\n      c.counts.pop()\n      output.send\n        count: count\n      output.sendDone\n        out: ip\n        count: ip\n      return\n    # Data packet, add to count\n    c.counts[c.counts.length - 1]++\n    # Forward packet\n    output.send\n      out: ip\n\n    if c.counts.length is 1\n      # Non-bracketed IP, send count\n      output.send\n        count: _.last c.counts\n      c.counts[c.counts.length - 1] = 0\n\n    output.done()\n",tests:"noflo = require 'noflo'\n\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-packets'\n\ndescribe 'CountPackets component', ->\n  c = null\n  ins = null\n  out = null\n  count = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'packets/CountPackets', (err, instance) ->\n      return done err if err\n      c = instance\n      ins = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach ins\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n    count = noflo.internalSocket.createSocket()\n    c.outPorts.count.attach count\n  afterEach ->\n    c.outPorts.out.detach out\n    c.outPorts.count.detach count\n\n  describe 'given some IPs', ->\n    it 'should forward them and return a correct number', (done) ->\n      expected = [\n        'a'\n        'b'\n        'c'\n        'd'\n      ]\n      received = []\n\n      out.on 'data', (data) ->\n        received.push data\n\n      count.on 'data', (data) ->\n        chai.expect(data).to.equal expected.length\n        chai.expect(received).to.eql expected\n        done()\n\n      ins.connect()\n      ins.beginGroup '1'\n      ins.send 'a'\n      ins.send 'b'\n      ins.send 'c'\n      ins.send 'd'\n      ins.endGroup()\n      ins.disconnect()\n\n  describe 'given some IPs in groups', ->\n    it 'should forward them and return correct number per each group', (done) ->\n      expectedOut = [\n        '< '\n        '< '\n        'DATA a'\n        'DATA b'\n        '>'\n        '< '\n        'DATA c'\n        '>'\n        'DATA d'\n        '>'\n      ]\n      receivedOut = []\n      expectedCount = [\n        '< '\n        '< '\n        'DATA 2'\n        '>'\n        '< '\n        'DATA 1'\n        '>'\n        'DATA 1'\n        '>'\n      ]\n      receivedCount = []\n\n      out.on 'begingroup', (group) ->\n        receivedOut.push \"< #{group}\"\n      out.on 'data', (data) ->\n        receivedOut.push \"DATA #{data}\"\n      out.on 'endgroup', ->\n        receivedOut.push '>'\n      count.on 'begingroup', (group) ->\n        receivedCount.push \"< #{group}\"\n      count.on 'data', (data) ->\n        receivedCount.push \"DATA #{data}\"\n      count.on 'endgroup', ->\n        receivedCount.push '>'\n      count.on 'disconnect', ->\n        setTimeout ->\n          chai.expect(receivedCount).to.eql expectedCount\n          chai.expect(receivedOut).to.eql expectedOut\n          done()\n        , 1\n\n      ins.connect()\n      ins.beginGroup ''\n      ins.beginGroup ''\n      ins.send 'a'\n      ins.send 'b'\n      ins.endGroup()\n      ins.beginGroup ''\n      ins.send 'c'\n      ins.endGroup()\n      ins.send 'd'\n      ins.endGroup()\n      ins.disconnect()\n"},"packets/Counter":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'send a number of packets received in a stream'\n  c.icon = 'sort-numeric-asc'\n\n  c.count = 0\n  c.brackets = []\n  c.tearDown = (callback) ->\n    c.count = 0\n    c.brackets = []\n    do callback\n\n  c.inPorts.add 'in',\n    datatype: 'all'\n  c.inPorts.add 'immediate',\n    datatype: 'boolean'\n    control: true\n    default: false\n  c.inPorts.add 'reset',\n    datatype: 'bang'\n  c.outPorts.add 'count',\n    datatype: 'int'\n  c.outPorts.add 'out',\n    datatype: 'all'\n\n  c.forwardBrackets = {}\n\n  c.process (input, output) ->\n    if input.hasData 'reset'\n      # When receiving bang on the reset, reset COUNT to zero\n      input.getData 'reset'\n      c.count = 0\n      return output.done()\n\n    return unless input.has 'in'\n\n    ip = input.get 'in'\n    if ip.type is 'openBracket'\n      c.brackets.push ip.data\n      return output.sendDone\n        out: ip\n    if ip.type is 'closeBracket'\n      c.brackets.pop()\n      output.send\n        out: ip\n      unless c.brackets.length\n        # Send COUNT at end of stream\n        output.send\n          count: c.count\n        c.count = 0\n      return output.done()\n\n    # When receiving data from IN port\n    c.count++\n    # Forward the data packet to OUT\n    output.send\n      out: ip\n\n    immediate = false\n    if input.hasData 'immediate'\n      immediate = input.getData 'immediate'\n    if immediate or c.brackets.length is 0\n      output.send\n        count: c.count\n      c.count = 0 if c.brackets.length is 0\n    output.done()\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-packets'\n\ndescribe 'Counter component', ->\n  c = null\n  ins = null\n  out = null\n  count = null\n  loader = null\n  before ->\n    loader = new noflo.ComponentLoader baseDir\n  beforeEach (done) ->\n    @timeout 4000\n    loader.load 'packets/Counter', (err, instance) ->\n      return done err if err\n      c = instance\n      ins = noflo.internalSocket.createSocket()\n      out = noflo.internalSocket.createSocket()\n      count = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach ins\n      c.outPorts.out.attach out\n      c.outPorts.count.attach count\n      done()\n\n  describe 'when instantiated', ->\n    it 'should have an input port', ->\n      chai.expect(c.inPorts.in).to.be.an 'object'\n    it 'should have an output port', ->\n      chai.expect(c.outPorts.out).to.be.an 'object'\n      chai.expect(c.outPorts.count).to.be.an 'object'\n    it 'should not require the out port to be connected', ->\n      c.outPorts.out.detach out\n      ins.connect()\n      ins.send 'hello'\n      chai.expect(-> ins.disconnect()).to.not.throw Error\n\n  describe 'counting', ->\n    it 'single packet should return count of 1', (done) ->\n      packets = [1]\n\n      count.on 'data', (data) ->\n        chai.expect(packets.shift()).to.deep.equal data\n      count.on 'disconnect', ->\n        chai.expect(packets.length).to.equal 0\n        done()\n\n      ins.connect()\n      ins.send 'hello'\n      ins.disconnect()\n\n    it 'single packet should be forwarded', (done) ->\n      packets = ['hello']\n\n      out.on 'data', (data) ->\n        chai.expect(packets.shift()).to.deep.equal data\n      out.on 'disconnect', ->\n        chai.expect(packets.length).to.equal 0\n        done()\n\n      ins.connect()\n      ins.send 'hello'\n      ins.disconnect()\n\n    it 'two packets should return count of 2', (done) ->\n      packets = [2]\n\n      count.on 'data', (data) ->\n        chai.expect(packets.shift()).to.deep.equal data\n      count.on 'disconnect', ->\n        chai.expect(packets.length).to.equal 0\n        done()\n\n      ins.connect()\n      ins.beginGroup 'a'\n      ins.send 'hello'\n      ins.send 'world'\n      ins.endGroup()\n      ins.disconnect()\n\n    it 'disconnecting and sending later should start new count', (done) ->\n      packets = [2, 1]\n\n      count.on 'data', (data) ->\n        chai.expect(packets.shift()).to.deep.equal data\n        done() if packets.length is 0\n\n      ins.connect()\n      ins.beginGroup 'a'\n      ins.send 'hello'\n      ins.send 'world'\n      ins.endGroup()\n      ins.disconnect()\n      ins.connect()\n      ins.beginGroup 'b'\n      ins.send 'foo'\n      ins.endGroup()\n      ins.disconnect()\n"},"packets/Defaults":{language:"coffeescript",source:"noflo = require(\"noflo\")\n_ = require(\"underscore\")\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = \"if incoming is short of the length of the default\n  packets, send the default packets.\"\n  c.inPorts.add 'in',\n    datatype: 'all'\n  c.inPorts.add 'default',\n    datatype: 'all'\n  c.outPorts.add 'out',\n    datatype: 'all'\n\n  c.defaults = []\n  c.brackets = []\n  c.tearDown = (callback) ->\n    c.defaults = []\n    c.brackets = []\n    do callback\n\n  c.forwardBrackets = {}\n  c.process (input, output) ->\n    if input.hasData 'default'\n      def = input.getData 'default'\n      c.defaults.push def\n      output.done()\n    return unless input.has 'in'\n    ip = input.get 'in'\n    if ip.type is 'openBracket'\n      c.brackets.push []\n      output.sendDone\n        out: ip\n      return\n    if ip.type is 'closeBracket'\n      packets = c.brackets.pop()\n      defaulted = c.defaults.map (def, idx) ->\n        if packets[idx]?\n          return packets[idx]\n        return def\n      for def in defaulted\n        output.send\n          out: def\n      output.sendDone\n        out: ip\n      return\n\n    unless c.brackets.length\n      # Unbracketed packet\n      data = if ip.data? then ip.data else c.defaults[0]\n      output.sendDone\n        out: data\n      return\n\n    c.brackets[c.brackets.length - 1].push ip.data\n    output.done()\n",tests:"noflo = require 'noflo'\n\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-packets'\n\ndescribe 'Defaults component', ->\n  c = null\n  defaults = null\n  ins = null\n  out = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'packets/Defaults', (err, instance) ->\n      return done err if err\n      c = instance\n      defaults = noflo.internalSocket.createSocket()\n      c.inPorts.default.attach defaults\n      ins = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach ins\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n  afterEach (done) ->\n    c.outPorts.out.detach out\n    c.tearDown done\n\n  describe 'with some defaults', ->\n    it 'should get defaults filled in in place of missing values', (done) ->\n      expected = [\n        '< 1'\n        'DATA x'\n        'DATA b'\n        'DATA c'\n        'DATA d'\n        '>'\n      ]\n      received = []\n\n      out.on 'begingroup', (grp) ->\n        received.push \"< #{grp}\"\n      out.on 'data', (data) ->\n        received.push \"DATA #{data}\"\n      out.on 'endgroup', ->\n        received.push '>'\n      out.on 'disconnect', ->\n        chai.expect(received).to.eql expected\n        done()\n\n      defaults.connect()\n      defaults.send 'a'\n      defaults.send 'b'\n      defaults.send 'c'\n      defaults.send 'd'\n      defaults.disconnect()\n\n      ins.connect()\n      ins.beginGroup 1\n      ins.send 'x'\n      ins.send null\n      ins.endGroup()\n      ins.disconnect()\n\n  describe 'with some defaults and grouped IPs', ->\n    it 'should get defaults filled in for each group level', (done) ->\n      expected = [\n        '< 1'\n        '< group'\n        'DATA x'\n        'DATA b'\n        'DATA c'\n        'DATA d'\n        '>'\n        'DATA y'\n        'DATA b'\n        'DATA c'\n        'DATA d'\n        '>'\n      ]\n      received = []\n\n      out.on 'begingroup', (grp) ->\n        received.push \"< #{grp}\"\n      out.on 'data', (data) ->\n        received.push \"DATA #{data}\"\n      out.on 'endgroup', ->\n        received.push '>'\n      out.on 'disconnect', ->\n        chai.expect(received).to.eql expected\n        done()\n\n      defaults.connect()\n      defaults.send 'a'\n      defaults.send 'b'\n      defaults.send 'c'\n      defaults.send 'd'\n      defaults.disconnect()\n\n      ins.connect()\n      ins.beginGroup '1'\n      ins.beginGroup 'group'\n      ins.send 'x'\n      ins.endGroup()\n      ins.send 'y'\n      ins.endGroup()\n      ins.disconnect()\n"},"packets/FilterByPosition":{language:"coffeescript",source:"noflo = require(\"noflo\")\n_ = require(\"underscore\")\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Filter packets based on their positions'\n  c.icon = 'filter'\n  c.inPorts.add 'in',\n    datatype: 'all'\n  c.inPorts.add 'filter',\n    datatype: 'boolean'\n  c.outPorts.add 'out',\n    datatype: 'all'\n\n  c.filters = []\n  c.tearDown = (callback) ->\n    c.filters = []\n    do callback\n\n  c.forwardBrackets = {}\n  c.process (input, output) ->\n    if input.hasData 'filter'\n      filter = input.getData 'filter'\n      c.filters.push filter\n      output.done()\n    return unless input.hasStream 'in'\n    packets = input.getStream 'in'\n    position = 0\n    for ip in packets\n      if ip.type is 'openBracket'\n        position = 0\n        output.send\n          out: ip\n        continue\n      if ip.type is 'closeBracket'\n        position = 0\n        output.send\n          out: ip\n        continue\n      unless c.filters[position]\n        # Data packet filtered out\n        position++\n        continue\n      output.send\n        out: ip\n      position++\n      continue\n    output.done()\n",tests:"noflo = require 'noflo'\n\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-packets'\n\ndescribe 'FilterByPosition component', ->\n  c = null\n  filter = null\n  ins = null\n  out = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'packets/FilterByPosition', (err, instance) ->\n      return done err if err\n      c = instance\n      filter = noflo.internalSocket.createSocket()\n      c.inPorts.filter.attach filter\n      ins = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach ins\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n  afterEach ->\n    c.outPorts.out.detach out\n\n  describe 'given a sequence of boolean filter packets', ->\n    it 'it should filter the packet stream', (done) ->\n      expected = [\n        '< 1'\n        'DATA passed'\n        'DATA passed'\n        'DATA passed'\n        '>'\n      ]\n      received = []\n\n      out.on 'begingroup', (grp) ->\n        received.push \"< #{grp}\"\n      out.on 'data', (data) ->\n        received.push \"DATA #{data}\"\n      out.on 'endgroup', ->\n        received.push '>'\n      out.on 'disconnect', ->\n        chai.expect(received).to.eql expected\n        done()\n\n      filter.connect()\n      filter.send true\n      filter.send true\n      filter.send false\n      filter.send true\n      filter.send false\n      filter.send false\n      filter.disconnect()\n\n      ins.connect()\n      ins.beginGroup 1\n      ins.send 'passed'\n      ins.send 'passed'\n      ins.send 'dropped'\n      ins.send 'passed'\n      ins.send 'dropped'\n      ins.send 'dropped'\n      ins.endGroup()\n      ins.disconnect()\n"},"packets/FilterByValue":{language:"coffeescript",source:"noflo = require(\"noflo\")\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = \"Filter packets based on their value\"\n  c.icon = 'filter'\n  c.inPorts.add 'in',\n    datatype: 'number'\n  c.inPorts.add 'filtervalue',\n    datatype: 'number'\n    control: true\n    required: true\n  c.outPorts.add 'lower',\n    datatype: 'number'\n  c.outPorts.add 'higher',\n    datatype: 'number'\n  c.outPorts.add 'equal',\n    datatype: 'number'\n\n  c.forwardBrackets =\n    in: ['lower', 'higher', 'equal']\n\n  c.process (input, output) ->\n    return unless input.hasData 'in', 'filtervalue'\n    filterValue = input.getData 'filtervalue'\n    data = input.getData 'in'\n\n    if data < filterValue\n      output.sendDone\n        lower: data\n      return\n    if data > filterValue\n      output.sendDone\n        higher: data\n      return\n    if data == filterValue\n      output.sendDone\n        equal: data\n      return\n    output.done()\n",tests:"noflo = require 'noflo'\n\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-packets'\n\ndescribe 'FilterByValue component', ->\n  c = null\n  filter = null\n  ins = null\n  lower = null\n  higher = null\n  equal = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'packets/FilterByValue', (err, instance) ->\n      return done err if err\n      c = instance\n      filter = noflo.internalSocket.createSocket()\n      c.inPorts.filtervalue.attach filter\n      ins = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach ins\n      done()\n  beforeEach ->\n    lower = noflo.internalSocket.createSocket()\n    c.outPorts.lower.attach lower\n    higher = noflo.internalSocket.createSocket()\n    c.outPorts.higher.attach higher\n    equal = noflo.internalSocket.createSocket()\n    c.outPorts.equal.attach equal\n  afterEach ->\n    c.outPorts.lower.detach lower\n    c.outPorts.higher.detach higher\n    c.outPorts.equal.detach equal\n\n  describe 'given the value to filter by', ->\n    it 'it should split the stream by value compared to filter', (done) ->\n      expected = [\n        'lower 0'\n        'equal 1'\n        'higher 2'\n        'higher 1.5'\n        'lower 0.5'\n      ]\n      received = []\n\n      lower.on 'data', (data) ->\n        received.push \"lower #{data}\"\n      higher.on 'data', (data) ->\n        received.push \"higher #{data}\"\n      equal.on 'data', (data) ->\n        received.push \"equal #{data}\"\n      lower.on 'disconnect', ->\n        chai.expect(received).to.eql expected\n        done()\n\n      filter.connect()\n      filter.send 1\n      filter.disconnect()\n\n      ins.connect()\n      ins.beginGroup 'a'\n      ins.send 0\n      ins.send 1\n      ins.send 2\n      ins.send 1.5\n      ins.send 0.5\n      ins.endGroup()\n      ins.disconnect()\n"},"packets/FilterPacket":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Filter packets with regular expression'\n  c.icon = 'filter'\n  c.inPorts.add 'in',\n    datatype: 'string'\n  c.inPorts.add 'regexp',\n    datatype: 'string'\n    control: true\n  c.outPorts.add 'out',\n    datatype: 'string'\n  c.outPorts.add 'missed',\n    datatype: 'string'\n\n  c.forwardBrackets =\n    in: ['out', 'missed']\n\n  c.process (input, output) ->\n    return unless input.hasData 'in'\n    data = input.getData 'in'\n    unless input.hasData 'regexp'\n      # No regexp provided, just send data\n      output.sendDone\n        out: data\n      return\n    regexp = input.getData 'regexp'\n    if typeof regexp is 'string'\n      regexp = new RegExp regexp\n    if regexp.exec data\n      output.sendDone\n        out: data\n      return\n    output.sendDone\n      missed: data\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-packets'\n\ndescribe 'FilterPacket component', ->\n  c = null\n  ins = null\n  regexp = null\n  out = null\n  missed = null\n\n  loader = null\n  before ->\n    loader = new noflo.ComponentLoader baseDir\n  beforeEach (done) ->\n    @timeout 4000\n    loader.load 'packets/FilterPacket', (err, instance) ->\n      return done err if err\n      c = instance\n      ins = noflo.internalSocket.createSocket()\n      regexp = noflo.internalSocket.createSocket()\n      out = noflo.internalSocket.createSocket()\n      missed = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach ins\n      c.inPorts.regexp.attach regexp\n      c.outPorts.out.attach out\n      c.outPorts.missed.attach missed\n      done()\n\n  describe 'when instantiated', ->\n    it 'should have an input port', ->\n      chai.expect(c.inPorts.in).to.be.an 'object'\n    it 'should have an output port', ->\n      chai.expect(c.outPorts.out).to.be.an 'object'\n\n  it 'test default behavior', (done) ->\n    packets = ['hello world']\n\n    out.on 'data', (data) ->\n      chai.expect(packets.shift()).to.deep.equal data\n    out.on 'disconnect', ->\n      chai.expect(packets.length).to.equal 0\n      done()\n\n    ins.connect()\n    ins.send 'hello world'\n    ins.disconnect()\n\n  it 'test accept via regexp', (done) ->\n    packets = ['grue', true]\n\n    out.on 'data', (data) ->\n      chai.expect(packets.shift()).to.deep.equal data\n    out.on 'disconnect', ->\n      chai.expect(packets.length).to.equal 0\n      done()\n\n    regexp.send '[tg]rue'\n\n    ins.connect()\n    ins.beginGroup 1\n    ins.send \"grue\"\n    ins.send false\n    ins.send \"foo\"\n    ins.send true\n    ins.endGroup()\n    ins.disconnect()\n"},"packets/FilterPackets":{language:"coffeescript",source:"noflo = require(\"noflo\")\n_ = require(\"underscore\")\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = \"Filter packets matching some RegExp strings\"\n  c.icon = 'filter'\n  c.inPorts.add 'in',\n    datatype: 'string'\n  c.inPorts.add 'regexp',\n    datatype: 'string'\n  c.outPorts.add 'out',\n    datatype: 'string'\n  c.outPorts.add 'missed',\n    datatype: 'string'\n  c.outPorts.add 'passthru',\n    datatype: 'string'\n\n  c.forwardBrackets =\n    in: ['out', 'missed', 'passthru']\n\n  c.regexps = []\n  c.tearDown = (callback) ->\n    c.regexps = []\n\n  c.process (input, output) ->\n    if input.hasData 'regexp'\n      reg = input.getData 'regexp'\n      if typeof reg is 'string'\n        reg = new RegExp reg\n      c.regexps.push reg\n      output.done()\n      return\n\n    return unless input.hasData 'in'\n    data = input.getData 'in'\n    if _.any c.regexps, ((regexp) -> data.match regexp)\n      output.sendDone\n        out: data\n        passthru: data\n      return\n    output.sendDone\n      missed: data\n      passthru: data\n",tests:"noflo = require 'noflo'\n\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-packets'\n\ndescribe 'FilterPackets component', ->\n  c = null\n  regexp = null\n  ins = null\n  out = null\n  passthru = null\n  missed = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'packets/FilterPackets', (err, instance) ->\n      return done err if err\n      c = instance\n      regexp = noflo.internalSocket.createSocket()\n      c.inPorts.regexp.attach regexp\n      ins = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach ins\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n    passthru = noflo.internalSocket.createSocket()\n    c.outPorts.passthru.attach passthru\n    missed = noflo.internalSocket.createSocket()\n    c.outPorts.missed.attach missed\n  afterEach ->\n    c.outPorts.out.detach out\n    c.outPorts.passthru.detach passthru\n    c.outPorts.missed.detach missed\n\n  describe 'given some regexp strings', ->\n    it 'should send matches to out and missed to missed', (done) ->\n      expected = [\n        'out abe'\n        'passthru abe'\n        'missed afg'\n        'passthru afg'\n        'missed dfg'\n        'passthru dfg'\n        'out dc'\n        'passthru dc'\n      ]\n      received = []\n\n      out.on 'data', (data) ->\n        received.push \"out #{data}\"\n      passthru.on 'data', (data) ->\n        received.push \"passthru #{data}\"\n      missed.on 'data', (data) ->\n        received.push \"missed #{data}\"\n      passthru.on 'disconnect', ->\n        chai.expect(received).to.eql expected\n        done()\n\n      regexp.connect()\n      regexp.send '^ab'\n      regexp.send 'c$'\n      regexp.disconnect()\n\n      ins.connect()\n      ins.beginGroup 1\n      ins.send 'abe'\n      ins.send 'afg'\n      ins.send 'dfg'\n      ins.send 'dc'\n      ins.endGroup()\n      ins.disconnect()\n"},"packets/GetScope":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.icon = 'outdent'\n  c.description = 'Get scope of the IP packet'\n  c.inPorts.add 'in',\n    datatype: 'object'\n  c.outPorts.add 'out',\n    datatype: 'object'\n  c.outPorts.add 'scope',\n    datatype: 'string'\n  c.process (input, output) ->\n    return unless input.hasData 'in'\n    data = input.getData 'in'\n    output.sendDone\n      scope: input.scope\n      out: data\n",tests:"noflo = require 'noflo'\n\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-packets'\n\ndescribe 'GetScope component', ->\n  c = null\n  ins = null\n  scope = null\n  out = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'packets/GetScope', (err, instance) ->\n      return done err if err\n      c = instance\n      ins = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach ins\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n    scope = noflo.internalSocket.createSocket()\n    c.outPorts.scope.attach scope\n  afterEach ->\n    c.outPorts.out.detach out\n    out = null\n    c.outPorts.scope.detach scope\n    scope = null\n\n  describe 'when receiving a packet', ->\n    it 'should send the scope', (done) ->\n      scopeReceived = false\n      dataReceived = false\n      scope.on 'ip', (ip) ->\n        chai.expect(ip.type).to.equal 'data'\n        chai.expect(ip.data).to.eql 3\n        scopeReceived = true\n        return unless dataReceived\n        done()\n      out.on 'ip', (ip) ->\n        chai.expect(ip.type).to.equal 'data'\n        chai.expect(ip.data).to.eql\n          foo: 'bar'\n        dataReceived = true\n        return unless scopeReceived\n        done()\n      ins.send new noflo.IP 'data',\n        foo: 'bar'\n      ,\n        scope: 3\n"},"packets/Flatten":{language:"coffeescript",source:"noflo = require(\"noflo\")\n_ = require(\"underscore\")\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = \"Flatten the IP structure but preserve all groups (i.e.\n    all groups are at the top level)\"\n  c.icon = 'list'\n\n  c.inPorts.add 'in',\n    datatype: 'all'\n  c.outPorts.add 'out',\n    datatype: 'all'\n  c.forwardBrackets = {}\n  c.lastBracket = {}\n  c.tearDown = (callback) ->\n    c.lastBracket = {}\n    do callback\n\n  c.process (input, output) ->\n    return unless input.has 'in'\n    ip = input.get 'in'\n    if ip.type is 'openBracket'\n      if c.lastBracket[input.scope]\n        output.send\n          out: new noflo.IP 'closeBracket', c.lastBracket[input.scope].data\n      output.send\n        out: ip\n      c.lastBracket[input.scope] = ip\n      return output.done()\n    if ip.type is 'closeBracket'\n      return output.done() unless c.lastBracket[input.scope]\n      output.send\n        out: ip\n      delete c.lastBracket[input.scope]\n      return output.done()\n    output.send\n      out: ip\n    return output.done()\n",tests:"noflo = require 'noflo'\n\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-packets'\n\ndescribe 'Flatten component', ->\n  c = null\n  ins = null\n  out = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'packets/Flatten', (err, instance) ->\n      return done err if err\n      c = instance\n      ins = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach ins\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n  afterEach ->\n    c.outPorts.out.detach out\n\n  describe 'given some grouped IP structure', ->\n    it 'should produce a flattened structure', (done) ->\n      expected = [\n        '< a'\n        'DATA 1'\n        '>'\n        '< b'\n        'DATA 2'\n        '>'\n        '< c'\n        'DATA 3'\n        '>'\n      ]\n      received = []\n\n      out.on 'begingroup', (group) ->\n        received.push \"< #{group}\"\n      out.on 'data', (data) ->\n        received.push \"DATA #{data}\"\n      out.on 'endgroup', ->\n        received.push '>'\n      out.on 'disconnect', ->\n        return unless received.length >= expected.length\n        chai.expect(received).to.eql expected\n        done()\n\n      ins.connect()\n      ins.beginGroup 'a'\n      ins.send 1\n      ins.endGroup()\n      ins.beginGroup 'b'\n      ins.send 2\n      ins.endGroup()\n      ins.beginGroup 'c'\n      ins.send 3\n      ins.endGroup()\n      ins.disconnect()\n\n  describe 'given nested grouped IP structure', ->\n    it 'should produce a flattened structure', (done) ->\n      expected = [\n        '< a'\n        'DATA 1'\n        '>'\n        '< b'\n        'DATA 2'\n        '>'\n        '< c'\n        'DATA 3'\n        '>'\n      ]\n      received = []\n\n      out.on 'begingroup', (group) ->\n        received.push \"< #{group}\"\n      out.on 'data', (data) ->\n        received.push \"DATA #{data}\"\n      out.on 'endgroup', ->\n        received.push '>'\n      out.on 'disconnect', ->\n        return unless received.length >= expected.length\n        chai.expect(received).to.eql expected\n        done()\n\n      ins.connect()\n      ins.beginGroup 'a'\n      ins.send 1\n      ins.beginGroup 'b'\n      ins.send 2\n      ins.beginGroup 'c'\n      ins.send 3\n      ins.endGroup()\n      ins.endGroup()\n      ins.endGroup()\n      ins.disconnect()\n"},"packets/GroupByPacket":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Surround each data packet by a bracket'\n  c.icon = 'indent'\n  c.inPorts.add 'in',\n    datatype: 'all'\n  c.outPorts.add 'out',\n    datatype: 'all'\n  c.forwardBrackets = {}\n  c.process (input, output) ->\n    return unless input.hasStream 'in'\n    packets = input.getStream 'in'\n    datas = 0\n    for ip in packets\n      if ip.type is 'openBracket'\n        datas = 0\n        output.send\n          out: ip\n        continue\n      if ip.type is 'closeBracket'\n        output.send\n          out: ip\n        continue\n      # Surround data packet with a new bracket telling position in stream\n      output.send\n        out: new noflo.IP 'openBracket', datas\n      output.send\n        out: ip\n      output.send\n        out: new noflo.IP 'closeBracket', datas\n      datas++\n    output.done()\n",tests:"noflo = require 'noflo'\n\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-packets'\n\ndescribe 'GroupByPacket component', ->\n  c = null\n  ins = null\n  out = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'packets/GroupByPacket', (err, instance) ->\n      return done err if err\n      c = instance\n      ins = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach ins\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n  afterEach ->\n    c.outPorts.out.detach out\n\n  describe 'given some IPs', ->\n    it 'should group each packet by its number', (done) ->\n      expected = [\n        '< a'\n        '< 0'\n        'DATA 1'\n        '>'\n        '< 1'\n        'DATA 2'\n        '>'\n        '< 2'\n        'DATA 3'\n        '>'\n        '>'\n      ]\n      received = []\n\n      out.on 'begingroup', (group) ->\n        received.push \"< #{group}\"\n      out.on 'data', (data) ->\n        received.push \"DATA #{data}\"\n      out.on 'endgroup', ->\n        received.push '>'\n      out.on 'disconnect', ->\n        return unless received.length >= expected.length\n        chai.expect(received).to.eql expected\n        done()\n\n      ins.connect()\n      ins.beginGroup 'a'\n      ins.send 1\n      ins.send 2\n      ins.send 3\n      ins.endGroup()\n      ins.disconnect()\n"},"packets/Map":{language:"coffeescript",source:"noflo = require 'noflo'\n\nprepareMap = (orig) ->\n  if typeof orig is 'object'\n    return orig\n  map = {}\n  for mapPart in mapParts = orig.split ','\n    mapEntry = mapPart.split ':'\n    if mapEntry[0] and  mapEntry[1]\n      map[mapEntry[0].trim()] = mapEntry[1].trim()\n  return map\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.icon = 'table'\n  c.description = 'Replace packets through a map. Data that is not in the map is\n  replace with the default.'\n  c.inPorts.add 'data',\n    datatype: 'all'\n    description: 'Data to be used as a key.'\n  c.inPorts.add 'map',\n    datatype: 'all'\n    description: 'A map with replacement values'\n    control: true\n    required: true\n  c.inPorts.add 'def',\n    datatype: 'all'\n    description: 'A default value to return if the key is not in the map.\n    If unset return the input.'\n    control: true\n  c.outPorts.add 'data',\n    datatype: 'all'\n    description: 'The content of map[data].'\n  c.forwardBrackets =\n    data: ['data']\n\n  c.process (input, output) ->\n    return unless input.hasData 'map', 'data'\n    map = prepareMap input.getData 'map'\n    data = input.getData 'data'\n    if data of map\n      output.sendDone\n        data: map[data]\n      return\n    if input.hasData 'def'\n      def = input.getData 'def'\n      output.sendDone\n        data: def\n      return\n    output.sendDone\n      data: data\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-packets'\n\ndescribe 'Map component', ->\n  c = null\n  ins = null\n  map = null\n  out = null\n  loader = null\n  before ->\n    loader = new noflo.ComponentLoader baseDir\n  beforeEach (done) ->\n    @timeout 4000\n    loader.load 'packets/Map', (err, instance) ->\n      return done err if err\n      c = instance\n      ins = noflo.internalSocket.createSocket()\n      map = noflo.internalSocket.createSocket()\n      out = noflo.internalSocket.createSocket()\n      c.inPorts.data.attach ins\n      c.inPorts.map.attach map\n      c.outPorts.data.attach out\n      done()\n\n  describe 'when instantiated', ->\n    it 'should have input ports', ->\n      chai.expect(c.inPorts.data).to.be.an 'object'\n    it 'should have input ports', ->\n      chai.expect(c.inPorts.map).to.be.an 'object'\n    it 'should have an output port', ->\n      chai.expect(c.outPorts.data).to.be.an 'object'\n\n  describe 'maps packets', ->\n    m = { true: 'wow', false: 'meh' }\n    \n    it 'to map values for known keys', (done) ->\n      output = []\n      out.on \"data\", (data) ->\n        output.push data\n      out.once \"disconnect\", ->\n        chai.expect(output).to.deep.equal [ 'wow' ]\n        done()\n      map.send { true: 'wow', false: 'meh' }\n      ins.send true\n      ins.disconnect()\n\n    it 'to inputs for unknown keys', (done) ->\n      output = []\n      out.on \"data\", (data) ->\n        output.push data\n      out.once \"disconnect\", ->\n        chai.expect(output).to.deep.equal [ 'hello' ]\n        done()\n      map.send { true: 'wow', false: 'meh' }\n      ins.send 'hello'\n      ins.disconnect()\n"},"packets/LastPacket":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Send only the last packet of a stream'\n  c.icon = 'caret-square-o-down'\n  c.inPorts.add 'in',\n    datatype: 'all'\n  c.outPorts.add 'out',\n    datatype: 'all'\n  c.forwardBrackets = {}\n  c.process (input, output) ->\n    return unless input.hasStream 'in'\n    packets = input.getStream 'in'\n    datas = packets.filter (ip) -> ip.type is 'data'\n    output.sendDone\n      out: datas.pop()\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-packets'\n\ndescribe 'LastPacket component', ->\n  c = null\n  ins = null\n  out = null\n\n  loader = null\n  before ->\n    loader = new noflo.ComponentLoader baseDir\n  beforeEach (done) ->\n    @timeout 4000\n    loader.load 'packets/LastPacket', (err, instance) ->\n      return done err if err\n      c = instance\n      ins = noflo.internalSocket.createSocket()\n      out = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach ins\n      c.outPorts.out.attach out\n      done()\n\n  describe 'when instantiated', ->\n    it 'should have an input port', ->\n      chai.expect(c.inPorts.in).to.be.an 'object'\n    it 'should have an output port', ->\n      chai.expect(c.outPorts.out).to.be.an 'object'\n\n  describe 'last packet', ->\n    it 'test last', (done) ->\n      packets = ['three']\n\n      out.on 'data', (data) ->\n        chai.expect(packets.shift()).to.deep.equal data\n      out.on 'disconnect', ->\n        chai.expect(packets.length).to.equal 0\n        done()\n\n      ins.connect()\n      ins.beginGroup 1\n      ins.send 'one'\n      ins.send 'two'\n      ins.send 'three'\n      ins.endGroup()\n      ins.disconnect()\n"},"packets/Range":{language:"coffeescript",source:"noflo = require(\"noflo\")\n_ = require(\"underscore\")\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.icon = 'filter'\n  c.description = \"only forward a specified number of packets in a\n  stream\"\n  c.inPorts.add 'in',\n    datatype: 'all'\n  c.inPorts.add 'start',\n    datatype: 'int'\n    control: true\n  c.inPorts.add 'end',\n    datatype: 'int'\n    control: true\n  c.inPorts.add 'length',\n    datatype: 'int'\n    control: true\n  c.outPorts.add 'out',\n    datatype: 'all'\n  c.forwardBrackets = {}\n\n  c.process (input, output) ->\n    return unless input.hasStream 'in'\n    packets = input.getStream 'in'\n    start = -Infinity\n    if input.hasData 'start'\n      start = parseInt input.getData 'start'\n    end = +Infinity\n    if input.hasData 'end'\n      end = parseInt input.getData 'end'\n    length = +Infinity\n    if input.hasData 'length'\n      length = parseInt input.getData 'length'\n    sent = 0\n    total = 0\n    for ip in packets\n      if ip.type in ['openBracket', 'closeBracket']\n        sent = 0\n        total = 0\n        output.send\n          out: ip\n        continue\n      total++\n      if total > start and total < end and sent < length\n        output.send\n          out: ip\n        sent++\n      continue\n    output.done()\n",tests:"noflo = require 'noflo'\n\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-packets'\n\ndescribe 'Range component', ->\n  c = null\n  start = null\n  length = null\n  end = null\n  ins = null\n  out = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'packets/Range', (err, instance) ->\n      return done err if err\n      c = instance\n      start = noflo.internalSocket.createSocket()\n      c.inPorts.start.attach start\n      length = noflo.internalSocket.createSocket()\n      c.inPorts.length.attach length\n      end = noflo.internalSocket.createSocket()\n      c.inPorts.end.attach end\n      ins = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach ins\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n  afterEach (done) ->\n    c.outPorts.out.detach out\n    out = null\n    c.shutdown done\n\n  describe 'given a starting position and a length', ->\n    it 'should take the specified packets', (done) ->\n      expected = [\n        '< a'\n        'DATA 2'\n        'DATA 3'\n        '>'\n      ]\n      received = []\n\n      out.on 'begingroup', (group) ->\n        received.push \"< #{group}\"\n      out.on 'data', (data) ->\n        data = JSON.stringify data if typeof data is 'object'\n        received.push \"DATA #{data}\"\n      out.on 'endgroup', ->\n        received.push '>'\n      out.on 'disconnect', ->\n        chai.expect(received).to.eql expected\n        done()\n\n      start.send 1\n      length.send 2\n\n      ins.connect()\n      ins.beginGroup 'a'\n      ins.send 1\n      ins.send 2\n      ins.send 3\n      ins.send 4\n      ins.send 5\n      ins.send 6\n      ins.endGroup()\n      ins.disconnect()\n\n  describe 'given a starting position and no length', ->\n    it 'should send from starting packet until the end', (done) ->\n      expected = [\n        '< b'\n        'DATA 2'\n        'DATA 3'\n        'DATA 4'\n        'DATA 5'\n        'DATA 6'\n        '>'\n      ]\n      received = []\n\n      out.on 'begingroup', (group) ->\n        received.push \"< #{group}\"\n      out.on 'data', (data) ->\n        data = JSON.stringify data if typeof data is 'object'\n        received.push \"DATA #{data}\"\n      out.on 'endgroup', ->\n        received.push '>'\n      out.on 'disconnect', ->\n        chai.expect(received).to.eql expected\n        done()\n\n      start.send 1\n\n      ins.connect()\n      ins.beginGroup 'b'\n      ins.send 1\n      ins.send 2\n      ins.send 3\n      ins.send 4\n      ins.send 5\n      ins.send 6\n      ins.endGroup()\n      ins.disconnect()\n\n  describe 'given a length but no starting position', ->\n    it 'should send the length of packets starting from first', (done) ->\n      expected = [\n        '< c'\n        'DATA 1'\n        'DATA 2'\n        'DATA 3'\n        'DATA 4'\n        '>'\n      ]\n      received = []\n\n      out.on 'begingroup', (group) ->\n        received.push \"< #{group}\"\n      out.on 'data', (data) ->\n        data = JSON.stringify data if typeof data is 'object'\n        received.push \"DATA #{data}\"\n      out.on 'endgroup', ->\n        received.push '>'\n      out.on 'disconnect', ->\n        chai.expect(received).to.eql expected\n        done()\n\n      length.send 4\n\n      ins.connect()\n      ins.beginGroup 'c'\n      ins.send 1\n      ins.send 2\n      ins.send 3\n      ins.send 4\n      ins.send 5\n      ins.send 6\n      ins.endGroup()\n      ins.disconnect()\n\n  describe 'given a starting and an ending position', ->\n    it 'should send packets between the positions', (done) ->\n      expected = [\n        '< d'\n        'DATA 2'\n        'DATA 3'\n        '>'\n      ]\n      received = []\n\n      out.on 'begingroup', (group) ->\n        received.push \"< #{group}\"\n      out.on 'data', (data) ->\n        data = JSON.stringify data if typeof data is 'object'\n        received.push \"DATA #{data}\"\n      out.on 'endgroup', ->\n        received.push '>'\n      out.on 'disconnect', ->\n        chai.expect(received).to.eql expected\n        done()\n\n      start.send 1\n      end.send 4\n\n      ins.connect()\n      ins.beginGroup 'd'\n      ins.send 1\n      ins.send 2\n      ins.send 3\n      ins.send 4\n      ins.send 5\n      ins.send 6\n      ins.endGroup()\n      ins.disconnect()\n\n  describe 'given just an ending position', ->\n    it 'should send from first until the specified position', (done) ->\n      expected = [\n        '< e'\n        'DATA 1'\n        '>'\n      ]\n      received = []\n\n      out.on 'begingroup', (group) ->\n        received.push \"< #{group}\"\n      out.on 'data', (data) ->\n        data = JSON.stringify data if typeof data is 'object'\n        received.push \"DATA #{data}\"\n      out.on 'endgroup', ->\n        received.push '>'\n      out.on 'disconnect', ->\n        chai.expect(received).to.eql expected\n        done()\n\n      end.send 2\n\n      ins.connect()\n      ins.beginGroup 'e'\n      ins.send 1\n      ins.send 2\n      ins.send 3\n      ins.send 4\n      ins.send 5\n      ins.send 6\n      ins.endGroup()\n      ins.disconnect()\n"},"packets/Replace":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.icon = 'clipboard'\n  c.description = 'Replace incoming packets with something else if they match\n  certain packets'\n  c.inPorts.add 'in',\n    datatype: 'all'\n  c.inPorts.add 'match',\n    datatype: 'all'\n  c.inPorts.add 'replace',\n    datatype: 'all'\n  c.outPorts.add 'out',\n    datatype: 'all'\n  c.matches = {}\n  c.replacements = {}\n  c.tearDown = (callback) ->\n    c.matches = {}\n    c.replacements = {}\n  c.process (input, output) ->\n    if input.hasData 'match'\n      c.matches[input.scope] = [] unless c.matches[input.scope]\n      c.matches[input.scope].push input.getData 'match'\n      return output.done()\n    if input.hasData 'replace'\n      c.replacements[input.scope] = [] unless c.replacements[input.scope]\n      c.replacements[input.scope].push input.getData 'replace'\n      return output.done()\n    return unless input.hasData 'in'\n    data = input.getData 'in'\n    if c.matches[input.scope] and c.replacements[input.scope]\n      index = c.matches[input.scope].indexOf data\n      unless index is -1\n        # Send replacement\n        data = c.replacements[input.scope][index]\n    output.sendDone\n      out: data\n",tests:"noflo = require 'noflo'\n\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-packets'\n\ndescribe 'Replace component', ->\n  c = null\n  ins = null\n  match = null\n  replace = null\n  out = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'packets/Replace', (err, instance) ->\n      return done err if err\n      c = instance\n      match = noflo.internalSocket.createSocket()\n      c.inPorts.match.attach match\n      replace = noflo.internalSocket.createSocket()\n      c.inPorts.replace.attach replace\n      ins = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach ins\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n  afterEach ->\n    c.outPorts.out.detach out\n    out = null\n\n  describe 'given a stream of packets and replacement data', ->\n    it 'should replace certain packets', (done) ->\n      expected = [\n        '< a'\n        'DATA 1'\n        'DATA 42'\n        'DATA 3'\n        'DATA 36'\n        'DATA 5'\n        '>'\n      ]\n      received = []\n\n      out.on 'begingroup', (group) ->\n        received.push \"< #{group}\"\n      out.on 'data', (data) ->\n        received.push \"DATA #{data}\"\n      out.on 'endgroup', ->\n        received.push '>'\n      out.on 'disconnect', ->\n        chai.expect(received).to.eql expected\n        done()\n\n      match.connect()\n      match.send 2\n      match.send 4\n      match.disconnect()\n      replace.connect()\n      replace.send 42\n      replace.send 36\n      replace.disconnect()\n\n      ins.connect()\n      ins.beginGroup 'a'\n      ins.send 1\n      ins.send 2\n      ins.send 3\n      ins.send 4\n      ins.send 5\n      ins.endGroup()\n      ins.disconnect()\n"},"packets/ScopeFromObject":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.icon = 'outdent'\n  c.description = 'Read the scope from received packet and set to IP scope'\n  c.inPorts.add 'in',\n    datatype: 'object'\n    scoped: true\n  c.inPorts.add 'property',\n    datatype: 'string'\n    control: true\n    default: 'scope'\n    scoped: false\n  c.outPorts.add 'out',\n    datatype: 'object'\n    scoped: true\n  c.process (input, output) ->\n    return unless input.hasData 'in'\n    return if input.attached('property').length and not input.hasData 'property'\n    property = 'scope'\n    if input.hasData 'property'\n      property = input.getData 'property'\n    data = input.getData 'in'\n    scope = data[property]\n    delete data[property]\n    output.sendDone\n      out: new noflo.IP 'data', data,\n        scope: scope\n",tests:"noflo = require 'noflo'\n\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-packets'\n\ndescribe 'ScopeFromObject component', ->\n  c = null\n  ins = null\n  out = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'packets/ScopeFromObject', (err, instance) ->\n      return done err if err\n      c = instance\n      ins = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach ins\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n  afterEach ->\n    c.outPorts.out.detach out\n    out = null\n\n  describe 'when receiving an object', ->\n    it 'should set the scope from the object', (done) ->\n      out.on 'ip', (ip) ->\n        chai.expect(ip.type).to.equal 'data'\n        chai.expect(ip.data).to.eql\n          foo: 'bar'\n        chai.expect(ip.scope).to.equal 3\n        done()\n      ins.send new noflo.IP 'data',\n        foo: 'bar'\n        scope: 3\n"},"packets/ScopeToObject":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.icon = 'indent'\n  c.description = 'Set the scope of the received packet into a property inside the payload'\n  c.inPorts.add 'in',\n    datatype: 'object'\n    scoped: true\n  c.inPorts.add 'property',\n    datatype: 'string'\n    control: true\n    default: 'scope'\n    scoped: false\n  c.outPorts.add 'out',\n    datatype: 'object'\n    scoped: false\n  c.process (input, output) ->\n    return unless input.hasData 'in'\n    return if input.attached('property').length and not input.hasData 'property'\n    property = 'scope'\n    if input.hasData 'property'\n      property = input.getData 'property'\n    data = input.getData 'in'\n    data[property] = input.scope\n    output.sendDone\n      out: new noflo.IP 'data', data\n",tests:"noflo = require 'noflo'\n\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-packets'\n\ndescribe 'ScopeToObject component', ->\n  c = null\n  ins = null\n  out = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'packets/ScopeToObject', (err, instance) ->\n      return done err if err\n      c = instance\n      ins = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach ins\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n  afterEach ->\n    c.outPorts.out.detach out\n    out = null\n\n  describe 'when receiving a scoped object', ->\n    it 'should set the scope as the object key', (done) ->\n      out.on 'ip', (ip) ->\n        chai.expect(ip.type).to.equal 'data'\n        chai.expect(ip.data).to.eql\n          foo: 'bar'\n          scope: 3\n        done()\n      ins.send new noflo.IP 'data',\n        foo: 'bar'\n      ,\n        scope: 3\n"},"packets/SetScope":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.icon = 'indent'\n  c.description = 'Set scope for the IP packet'\n  c.inPorts.add 'in',\n    datatype: 'object'\n  c.inPorts.add 'scope',\n    datatype: 'string'\n    control: true\n  c.outPorts.add 'out',\n    datatype: 'object'\n    scoped: true\n  c.process (input, output) ->\n    return unless input.hasData 'in', 'scope'\n    [data, scope] = input.getData 'in', 'scope'\n    output.sendDone\n      out: new noflo.IP 'data', data,\n        scope: scope\n",tests:"noflo = require 'noflo'\n\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-packets'\n\ndescribe 'SetScope component', ->\n  c = null\n  ins = null\n  scope = null\n  out = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'packets/SetScope', (err, instance) ->\n      return done err if err\n      c = instance\n      ins = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach ins\n      scope = noflo.internalSocket.createSocket()\n      c.inPorts.scope.attach scope\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n  afterEach ->\n    c.outPorts.out.detach out\n    out = null\n\n  describe 'when receiving a packet and a scope', ->\n    it 'should set the scope', (done) ->\n      out.on 'ip', (ip) ->\n        chai.expect(ip.type).to.equal 'data'\n        chai.expect(ip.data).to.eql\n          foo: 'bar'\n        chai.expect(ip.scope).to.equal 3\n        done()\n      ins.send\n        foo: 'bar'\n      scope.send 3\n"},"packets/SendWith":{language:"coffeescript",source:"noflo = require(\"noflo\")\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = \"Always send the specified packets with incoming packets.\"\n  c.inPorts.add 'in',\n    datatype: 'all'\n  c.inPorts.add 'with',\n    datatype: 'all'\n  c.outPorts.add 'out',\n    datatype: 'all'\n  c.with = {}\n  c.tearDown = (callback) ->\n    c.with = {}\n    do callback\n  c.forwardBrackets = {}\n  c.process (input, output) ->\n    if input.hasData 'with'\n      c.with[input.scope] = [] unless c.with[input.scope]\n      c.with[input.scope].push input.getData 'with'\n      return output.done()\n    return unless input.hasStream 'in'\n    packets = input.getStream 'in'\n    datas = packets.filter (ip) -> ip.type is 'data'\n    for ip, idx in packets\n      output.send\n        out: ip\n      continue unless ip is datas[datas.length - 1]\n      continue unless c.with[input.scope]\n      # Send 'withs' after last data IP\n      for packet in c.with[input.scope]\n        output.send\n          out: packet\n    output.done()\n",tests:"noflo = require 'noflo'\n\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-packets'\n\ndescribe 'SendWith component', ->\n  c = null\n  filter = null\n  ins = null\n  withIn = null\n  out = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'packets/SendWith', (err, instance) ->\n      return done err if err\n      c = instance\n      withIn = noflo.internalSocket.createSocket()\n      c.inPorts.with.attach withIn\n      ins = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach ins\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n  afterEach ->\n    c.outPorts.out.detach out\n    out = null\n\n  describe 'given some packets to always send with the incoming', ->\n    it 'should send both incoming and sent-with packets', (done) ->\n      expected = [\n        '< a'\n        'DATA 1'\n        'DATA 2'\n        'DATA 3'\n        'DATA 4'\n        'DATA 5'\n        'DATA 6'\n        '>'\n      ]\n      received = []\n\n      out.on 'begingroup', (group) ->\n        received.push \"< #{group}\"\n      out.on 'data', (data) ->\n        received.push \"DATA #{data}\"\n      out.on 'endgroup', ->\n        received.push '>'\n      out.on 'disconnect', ->\n        chai.expect(received).to.eql expected\n        done()\n\n      withIn.connect()\n      withIn.send 4\n      withIn.send 5\n      withIn.send 6\n      withIn.disconnect()\n\n      ins.connect()\n      ins.beginGroup 'a'\n      ins.send 1\n      ins.send 2\n      ins.send 3\n      ins.endGroup()\n      ins.disconnect()\n"},"packets/StepSequencer":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'A timestamp-value pattern sequencer'\n  c.icon = 'bar-chart'\n  c.inPorts.add 'pattern',\n    datatype: 'string'\n    description: 'Comma separated timestamp-value pairs. ' +\n                 'Timestamps are in ms.'\n  c.outPorts.add 'value',\n    datatype: 'string'\n    description: 'Current value'\n  c.forwardBrackets = {}\n\n  c.timers = {}\n  c.tearDown = (callback) ->\n    for scope, context of c.timers\n      clearTimeout context.timeout if context.timeout\n      context.deactivate()\n    c.timers = {}\n\n  c.process (input, output, context) ->\n    return unless input.hasData 'pattern'\n\n    if c.timers[input.scope]\n      if c.timers[input.scope].timeout\n        clearTimeout c.timers[input.scope].timeout\n      c.timers[input.scope].deactivate()\n\n    pattern = input.getData 'pattern'\n    if typeof pattern is 'string'\n      # TODO: trim whitespace?\n      pattern = pattern.split ','\n    return output.done() unless pattern.length > 1\n    # TODO: validate ts to grow monolithically\n    ix = 0\n    last_val = 0\n    last_ts = 0\n    sendNext = ->\n      last_ts = pattern[ix]\n      last_val = pattern[ix + 1]\n      output.send\n        value: last_val\n      ix += 2\n      if ix < pattern.length\n        context.timeout = setTimeout sendNext, pattern[ix] - last_ts\n      else\n        context.deactivate()\n    context.timeout = setTimeout sendNext, pattern[ix]\n    c.timers[input.scope] = context\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-packets'\n\ndescribe 'StepSequencer component', ->\n  c = null\n  pattern = null\n  value = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'packets/StepSequencer', (err, instance) ->\n      return done err if err\n      c = instance\n      pattern = noflo.internalSocket.createSocket()\n      c.inPorts.pattern.attach pattern\n      done()\n\n  beforeEach ->\n    value = noflo.internalSocket.createSocket()\n    c.outPorts.value.attach value\n  afterEach ->\n    c.outPorts.value.detach value\n\n  describe 'when instantiated', ->\n    it 'should have an input port', ->\n      chai.expect(c.inPorts.pattern).to.be.an 'object'\n    it 'should have an output port', ->\n      chai.expect(c.outPorts.value).to.be.an 'object'\n\n  describe 'when receiving empty pattern', ->\n    it 'does nothing', (done) ->\n      @timeout 4000\n      failed = false\n      value.once 'data', (res) ->\n        console.log res\n        done new Error 'Expected not to receive anything'\n        failed = true\n      pattern.send ''\n      setTimeout ->\n        done() unless failed\n      , 50\n\n  describe 'when receiving pattern', ->\n    it 'sends single value', (done) ->\n      value.once 'data', (res) ->\n        chai.expect(res).to.be.equal '5'\n        done()\n      pattern.send '0,5'\n    it 'sends multiple values', ->\n      @timeout 4000\n      expected = [\n        5\n        10\n        7\n      ]\n      received = []\n      value.on 'data', (res) ->\n        received.push res\n      value.on 'disconnect', ->\n        chai.expect(received).to.eql expected\n        done()\n      pattern.send '0,5,10,7'\n"},"packets/UniquePacket":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.icon = 'filter'\n  c.description = 'Send only packets that are unique'\n  c.inPorts.add 'in',\n    datatype: 'all'\n  c.inPorts.add 'clear',\n    datatype: 'bang'\n  c.outPorts.add 'out',\n    datatype: 'all'\n  c.outPorts.add 'duplicate',\n    datatype: 'all'\n  c.seen = {}\n  c.tearDown = (callback) ->\n    c.seen = {}\n    do callback\n  c.forwardBrackets =\n    in: ['out', 'duplicate']\n  c.process (input, output) ->\n    if input.hasData 'clear'\n      input.getData 'clear'\n      c.seen = {}\n      return output.done()\n    return unless input.hasData 'in'\n    data = input.getData 'in'\n    c.seen[input.scope] = [] unless c.seen[input.scope]\n    if c.seen[input.scope].indexOf(data) is -1\n      # Unique\n      output.send\n        out: data\n      c.seen[input.scope].push data\n      return output.done()\n    output.sendDone\n      duplicate: data\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-packets'\n\ndescribe 'UniquePacket component', ->\n  c = null\n  ins = null\n  out = null\n  before (done) ->\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'packets/UniquePacket', (err, instance) ->\n      return done err if err\n      c = instance\n      ins = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach ins\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n  afterEach (done) ->\n    c.outPorts.out.detach out\n    c.shutdown done\n\n  describe 'when instantiated', ->\n    it 'should have an input port', ->\n      chai.expect(c.inPorts.in).to.be.an 'object'\n    it 'should have an output port', ->\n      chai.expect(c.outPorts.out).to.be.an 'object'\n\n  describe 'unique', ->\n    it 'test all unique', (done) ->\n      packets = ['one', 'two', 'three']\n\n      out.on 'data', (data) ->\n        chai.expect(packets.shift()).to.deep.equal data\n      out.on 'disconnect', ->\n        chai.expect(packets.length).to.equal 0\n        done()\n\n      ins.connect()\n      ins.beginGroup 'a'\n      ins.send 'one'\n      ins.send 'two'\n      ins.send 'three'\n      ins.endGroup()\n      ins.disconnect()\n\n    it 'test two unique', (done) ->\n      packets = ['one', 'two']\n\n      out.on 'data', (data) ->\n        chai.expect(packets.shift()).to.deep.equal data\n      out.on 'disconnect', ->\n        chai.expect(packets.length).to.equal 0\n        done()\n\n      ins.connect()\n      ins.beginGroup 'a'\n      ins.send 'one'\n      ins.send 'one'\n      ins.send 'two'\n      ins.endGroup()\n      ins.disconnect()\n"},"packets/Unzip":{language:"coffeescript",source:"noflo = require(\"noflo\")\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = \"Send packets whose position upon receipt is even to the\n  EVEN port, otherwise the ODD port.\"\n  c.icon = 'code-fork'\n  c.inPorts.add 'in',\n    datatype: 'all'\n  c.outPorts.add 'odd',\n    datatype: 'all'\n  c.outPorts.add 'even',\n    datatype: 'all'\n  c.count = {}\n  c.tearDown = (callback) ->\n    c.count = {}\n    do callback\n  c.forwardBrackets =\n    in: ['odd', 'even']\n  c.process (input, output) ->\n    return unless input.hasData 'in'\n    data = input.getData 'in'\n    c.count[input.scope] = 0 unless c.count[input.scope]\n    c.count[input.scope]++\n    if c.count[input.scope] % 2 is 0\n      output.sendDone\n        even: data\n      return\n    output.sendDone\n      odd: data\n",tests:"noflo = require 'noflo'\n\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-packets'\n\ndescribe 'Unzip component', ->\n  c = null\n  ins = null\n  odd = null\n  even = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'packets/Unzip', (err, instance) ->\n      return done err if err\n      c = instance\n      ins = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach ins\n      done()\n  beforeEach ->\n    odd = noflo.internalSocket.createSocket()\n    c.outPorts.odd.attach odd\n    even = noflo.internalSocket.createSocket()\n    c.outPorts.even.attach even\n  afterEach ->\n    c.outPorts.odd.detach odd\n    odd = null\n    c.outPorts.even.detach even\n    even = null\n\n  describe 'given some IPs', ->\n    it 'should route them to ODD and EVEN based on packet position', (done) ->\n      expected = [\n        'odd 1'\n        'even 2'\n        'odd 3'\n        'even 4'\n      ]\n      received = []\n\n      odd.on 'data', (data) ->\n        received.push \"odd #{data}\"\n      even.on 'data', (data) ->\n        received.push \"even #{data}\"\n      even.on 'disconnect', ->\n        chai.expect(received).to.eql expected\n        done()\n\n      ins.connect()\n      ins.beginGroup 'a'\n      ins.send 1\n      ins.send 2\n      ins.send 3\n      ins.send 4\n      ins.endGroup()\n      ins.disconnect()\n\n  describe 'given some IPs with groups', ->\n    it 'should route them to ODD and EVEN ignoring groups', (done) ->\n      expected = [\n        'odd < group'\n        'odd 1'\n        'even < group'\n        'even 2'\n        'odd 3'\n        'even 4'\n        'odd >'\n        'even >'\n      ]\n      received = []\n\n      odd.on 'begingroup', (group) ->\n        received.push \"odd < #{group}\"\n      odd.on 'data', (data) ->\n        received.push \"odd #{data}\"\n      odd.on 'endgroup', ->\n        received.push 'odd >'\n      even.on 'begingroup', (group) ->\n        received.push \"even < #{group}\"\n      even.on 'data', (data) ->\n        received.push \"even #{data}\"\n      even.on 'endgroup', ->\n        received.push 'even >'\n      even.on 'disconnect', ->\n        chai.expect(received).to.eql expected\n        done()\n\n      ins.connect()\n      ins.beginGroup 'group'\n      ins.send 1\n      ins.send 2\n      ins.send 3\n      ins.send 4\n      ins.endGroup()\n      ins.disconnect()\n"},"packets/Zip":{language:"coffeescript",source:"noflo = require(\"noflo\")\n_ = require(\"underscore\")\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = \"zip through multiple IPs and output a series of zipped\n  IPs just like how _.zip() works in Underscore.js\"\n  c.icon = 'file-archive-o'\n  c.inPorts.add 'in',\n    datatype: 'array'\n  c.outPorts.add 'out',\n    datatype: 'array'\n  c.forwardBrackets = {}\n  c.process (input, output) ->\n    return unless input.hasStream 'in'\n    packets = input.getStream('in').filter((ip) ->\n      return false unless ip.type is 'data'\n      return false unless _.isArray ip.data\n      true\n    ).map (ip) -> ip.data\n    if _.isEmpty packets\n      output.sendDone\n        out: []\n      return\n    output.sendDone\n      out: _.zip.apply _, packets\n",tests:"noflo = require 'noflo'\n\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-packets'\n\ndescribe 'Zip component', ->\n  c = null\n  ins = null\n  out = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'packets/Zip', (err, instance) ->\n      return done err if err\n      c = instance\n      ins = noflo.internalSocket.createSocket()\n      c.inPorts.in.attach ins\n      done()\n  beforeEach ->\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n  afterEach ->\n    c.outPorts.out.detach out\n    out = null\n\n  describe 'given some arrays', ->\n    it 'should send them out zipped', (done) ->\n      expected = [\n        'DATA [[1,\"a\"],[2,\"b\"],[3,\"c\"]]'\n      ]\n      received = []\n\n      out.on 'begingroup', (group) ->\n        received.push \"< #{group}\"\n      out.on 'data', (data) ->\n        data = JSON.stringify data if typeof data is 'object'\n        received.push \"DATA #{data}\"\n      out.on 'endgroup', ->\n        received.push '>'\n      out.on 'disconnect', ->\n        chai.expect(received).to.eql expected\n        done()\n\n      ins.connect()\n      ins.beginGroup 'group'\n      ins.send [1, 2, 3]\n      ins.send ['a', 'b', 'c']\n      ins.endGroup()\n      ins.disconnect()\n\n  describe 'given some arrays with groups', ->\n    it 'should send them out zipped, ignoring groups', (done) ->\n      expected = [\n        'DATA [[1,\"a\"],[2,\"b\"],[3,\"c\"]]'\n      ]\n      received = []\n\n      out.on 'begingroup', (group) ->\n        received.push \"< #{group}\"\n      out.on 'data', (data) ->\n        data = JSON.stringify data if typeof data is 'object'\n        received.push \"DATA #{data}\"\n      out.on 'endgroup', ->\n        received.push '>'\n      out.on 'disconnect', ->\n        chai.expect(received).to.eql expected\n        done()\n\n      ins.connect()\n      ins.beginGroup 'group'\n      ins.beginGroup 'groupA'\n      ins.send [1, 2, 3]\n      ins.endGroup()\n      ins.beginGroup 'groupB'\n      ins.send ['a', 'b', 'c']\n      ins.endGroup()\n      ins.endGroup()\n      ins.disconnect()\n\n  describe 'given some packets that are not arrays', ->\n    it 'should send an empty array', (done) ->\n      expected = [\n        'DATA []'\n      ]\n      received = []\n\n      out.on 'begingroup', (group) ->\n        received.push \"< #{group}\"\n      out.on 'data', (data) ->\n        data = JSON.stringify data if typeof data is 'object'\n        received.push \"DATA #{data}\"\n      out.on 'endgroup', ->\n        received.push '>'\n      out.on 'disconnect', ->\n        chai.expect(received).to.eql expected\n        done()\n\n      ins.connect()\n      ins.beginGroup 'group'\n      ins.send 1\n      ins.send 'a'\n      ins.endGroup()\n      ins.disconnect()\n"},"physics/Spring":{language:"coffeescript",source:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  requestAnimFrame = process.nextTick\nelse\n  requestAnimFrame = window.requestAnimationFrame or\n    window.webkitRequestAnimationFrame or\n    window.mozRequestAnimationFrame or\n    (callback) -> setTimeout callback, 1\n\nstep = (ctx, output, callback) ->\n  # We may have been stopped from the outside\n  return unless ctx.moving\n\n  distance = ctx.massPosition - ctx.anchorPosition\n\n  # Forces applying to the spring\n  dampingForce = -ctx.friction * ctx.speed\n  springForce = -ctx.stiffness * distance\n  totalForce = springForce + dampingForce\n \n  # Count the new speed of movement\n  acceleration = totalForce / ctx.mass\n  ctx.speed += acceleration\n\n  previousPosition = ctx.massPosition\n\n  # Calculate where we've moved\n  ctx.massPosition += ctx.speed / 100\n\n  if Math.round(ctx.massPosition) isnt Math.round(previousPosition)\n    # Send the new position out\n    output.send Math.round ctx.massPosition\n\n  if Math.round(ctx.massPosition) is ctx.anchorPosition and\n  Math.abs(ctx.speed) < 0.2\n    # The spring is back at rest\n    do callback\n  else\n    # And yet it moves\n    return if ctx.massPosition is 0\n    requestAnimFrame ->\n      step ctx, output, callback\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Animates a directional spring'\n  c.inPorts.add 'in',\n    description: 'Initial position for the moving mass'\n    datatype: 'number'\n  c.inPorts.add 'anchor',\n    description: 'Position of the fixed point in the other end of the spring'\n    datatype: 'number'\n    default: 0\n    control: true\n  c.inPorts.add 'mass',\n    datatype: 'int'\n    default: 10\n    control: true\n  c.inPorts.add 'stiffness',\n    datatype: 'int'\n    default: 120\n    control: true\n  c.inPorts.add 'friction',\n    datatype: 'int'\n    default: 3\n    control: true\n  c.outPorts.add 'out',\n    datatype: 'number'\n  c.forwardBrackets = {}\n  c.scopes = {}\n  c.tearDown = (callback) ->\n    for scope, val of c.scopes\n      val.moving = false\n      val.context.deactivate()\n    c.scopes = {}\n    do callback\n  c.process (input, output, context) ->\n    return unless input.has 'in'\n    # Ensure we have the parameters expected\n    return if input.attached('anchor').length and not input.hasData 'anchor'\n    return if input.attached('mass').length and not input.hasData 'mass'\n    return if input.attached('stiffness').length and not input.hasData 'stiffness'\n    return if input.attached('friction').length and not input.hasData 'friction'\n    if c.scopes[input.scope]\n      # Kill previous spring movement\n      c.scopes[input.scope].moving = false\n      c.scopes[input.scope].context.deactivate()\n\n    c.scopes[input.scope] =\n      moving: true\n      context: context\n      massPosition: input.getData 'in'\n      anchorPosition: 0\n      mass: 10\n      stiffness: 120\n      friction: 3\n      # We start with no motion\n      speed: 0\n    # Read params\n    if input.hasData 'anchor'\n      c.scopes[input.scope].anchorPosition = input.getData 'anchor'\n    if input.hasData 'mass'\n      c.scopes[input.scope].mass = input.getData 'mass'\n    if input.hasData 'stiffness'\n      c.scopes[input.scope].stiffness = input.getData 'stiffness'\n    if input.hasData 'friction'\n      c.scopes[input.scope].friction = input.getData 'friction'\n\n    step c.scopes[input.scope], output, ->\n      return unless c.scopes[input.scope]\n      output.done()\n      delete c.scopes[input.scope]\n    return\n\n",tests:"noflo = require 'noflo'\nsocket = noflo.internalSocket\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-physics'\n\ndescribe 'Spring component', ->\n  c = null\n  ins = null\n  out = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'physics/Spring', (err, instance) ->\n      return done err if err\n      c = instance\n      ins = socket.createSocket()\n      c.inPorts.in.attach ins\n      c.start done\n  beforeEach ->\n    out = socket.createSocket()\n    c.outPorts.out.attach out\n  afterEach (done) ->\n    c.outPorts.out.detach out\n    c.shutdown done\n\n  describe 'with default anchor position', ->\n    describe 'with rest state', ->\n      it 'should not move', (done) ->\n        changes = 0\n        out.on 'data', (position) ->\n          changes++\n        ins.send 0\n        setTimeout ->\n          chai.expect(changes).to.equal 0\n          done()\n        , 4\n\n    describe 'pulled to 100', ->\n      it 'should move 24 times', (done) ->\n        changes = 0\n        lastPosition = null\n        out.on 'data', (position) ->\n          changes++\n          lastPosition = position\n          return if changes < 24\n          chai.expect(lastPosition).to.equal 0\n          chai.expect(changes).to.equal 24\n          done()\n        ins.send 100\n\n    describe 'pulled to -100', ->\n      it 'should move 24 times', (done) ->\n        changes = 0\n        lastPosition = null\n        out.on 'data', (position) ->\n          changes++\n          lastPosition = position\n          return if changes < 24\n          chai.expect(lastPosition).to.equal 0\n          chai.expect(changes).to.equal 24\n          done()\n        ins.send -100\n\n  describe 'with custom anchor position of 200', ->\n    anchor = null\n    before ->\n      anchor = socket.createSocket()\n      c.inPorts.anchor.attach anchor\n    after ->\n      c.inPorts.anchor.detach anchor\n    describe 'with rest state', ->\n      it 'should not move', (done) ->\n        anchor.send 200\n        setTimeout ->\n          changes = 0\n          out.on 'data', (position) ->\n            changes++\n          ins.send 200\n          setTimeout ->\n            chai.expect(changes).to.equal 0\n            done()\n          , 4\n        , 1\n    describe 'pulled to 300', ->\n      it 'should move 24 times', (done) ->\n        anchor.send 200\n        changes = 0\n        lastPosition = null\n        out.on 'data', (position) ->\n          changes++\n          lastPosition = position\n          return if changes < 24\n          chai.expect(lastPosition).to.equal 200\n          chai.expect(changes).to.equal 24\n          done()\n        ins.send 300\n\n    describe 'pulled to 700', ->\n      it 'should move 31 times', (done) ->\n        anchor.send 200\n        changes = 0\n        lastPosition = null\n        out.on 'data', (position) ->\n          changes++\n          lastPosition = position\n          return if changes < 31\n          chai.expect(lastPosition).to.equal 200\n          chai.expect(changes).to.equal 31\n          done()\n        ins.send 700\n"},"react/Mount":{language:"coffeescript",source:"noflo = require 'noflo'\nload = require '../lib/load'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Render a React component in the given mountpoint'\n\n  c.inPorts.add 'component',\n    datatype: 'function'\n    description: 'The React component to mount'\n  c.inPorts.add 'container',\n    datatype: 'object'\n    description: 'DOM element to use for mounting the component'\n\n  c.outPorts.add 'instance',\n    datatype: 'object'\n  c.outPorts.add 'error',\n    datatype: 'object'\n    required: false\n\n  c.process (input, output) ->\n    return unless input.hasData 'component', 'container'\n    [component, container] = input.getData 'component', 'container'\n    load.getReact (err, React) ->\n      if err\n        output.done err\n        return\n\n      try\n        instance = React.renderComponent component(), container\n      catch e\n        output.done e\n        return\n      output.sendDone\n        instance: instance\n    return\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-react'\n\ndescribe 'Mount component', ->\n  c = null\n  component = null\n  container = null\n  instance = null\n  before (done) ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n    loader.load 'react/Mount', (err, instance) ->\n      return done err if err\n      c = instance\n      component = noflo.internalSocket.createSocket()\n      container = noflo.internalSocket.createSocket()\n      c.inPorts.component.attach component\n      c.inPorts.container.attach container\n      done()\n  beforeEach ->\n    instance = noflo.internalSocket.createSocket()\n    c.outPorts.instance.attach instance\n  afterEach ->\n    c.outPorts.instance.detach instance\n\n  describe 'when instantiated', ->\n    it 'should have an input ports', ->\n      chai.expect(c.inPorts.component).to.be.an 'object'\n      chai.expect(c.inPorts.container).to.be.an 'object'\n    it 'should have an output port', ->\n      chai.expect(c.outPorts.instance).to.be.an 'object'\n  describe 'mounting a component', ->\n    it 'should be able to create an instance', (done) ->\n      @timeout 4000\n      receivedData = false\n      instance.on 'data', (data) ->\n        chai.expect(data).to.be.an 'object'\n        receivedData = true\n      instance.on 'disconnect', ->\n        chai.expect(document.querySelectorAll('#mount p').length).to.equal 1\n        chai.expect(receivedData).to.be.true\n        done()\n      container.send document.getElementById 'mount'\n      container.disconnect()\n      requirejs ['cs!fixtures/Basic'], (Basic) ->\n        component.send Basic\n        component.disconnect()\n"},"react/ListenEvents":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Listen for events emitted by React components using the emitEvent property'\n  c.inPorts.add 'instance',\n    datatype: 'object'\n    description: 'React component instance'\n  c.outPorts.add 'event',\n    datatype: 'object'\n  c.subscribed = {}\n  c.tearDown = (callback) ->\n    for scope, ctx of c.subscribed\n      ctx.deactivate()\n    c.subscribed = {}\n    do callback\n  c.process (input, output, context) ->\n    return unless input.hasData 'instance'\n    instance = input.getData 'instance'\n    instance.setProps\n      emitEvent: (events, payload, metadata) ->\n        events = [events] if typeof events is 'string'\n        for event in events\n          output.send\n            event: new noflo.IP 'openBracket', event\n        output.send\n          event: payload\n        closes = events.slice 0\n        closes.reverse()\n        for event in closes\n          output.send\n            event: new noflo.IP 'closeBracket', event\n    c.subscribed[input.scope] = context\n"},"react/SetProps":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Set properties of a React component'\n\n  # Declare inPorts.\n  c.inPorts.add 'instance',\n    datatype: 'object'\n    description: 'React component instance'\n    control: true\n  c.inPorts.add 'props',\n    datatype: 'object'\n    description: 'Properties to set'\n  c.process (input, output) ->\n    return unless input.hasData 'instance', 'props'\n    instance = input.getData 'instance'\n    unless instance.isMounted()\n      output.done()\n      return\n    props = input.getData 'props'\n    unless typeof props is 'object'\n      output.done()\n      return\n    instance.setProps props\n    output.done()\n    return\n",tests:"noflo = require 'noflo'\nunless noflo.isBrowser()\n  chai = require 'chai'\n  path = require 'path'\n  baseDir = path.resolve __dirname, '../'\nelse\n  baseDir = 'noflo-react'\n\nexpect = chai.expect unless expect\n\nrequirejs ['cs!fixtures/Basic', 'React'], ->\n\n  [Component, React] = arguments\n\n\n  describe 'SetProps', ->\n\n    c = null\n    loader = null\n\n    before ->\n      loader = new noflo.ComponentLoader baseDir\n    beforeEach (done) ->\n      @timeout 4000\n      loader.load 'react/SetProps', (err, instance) ->\n        return done err if err\n        c = instance\n        done()\n\n    describe 'inPorts', ->\n\n      it 'should contain \"instance\"', ->\n        expect(c.inPorts.instance).to.be.an 'object'\n\n      it 'should contain \"props\"', ->\n        expect(c.inPorts.props).to.be.an 'object'\n\n    describe 'data flow', ->\n\n      mountPoint = null\n      component = null\n      instance = null\n      instanceIn = null\n      propsIn = null\n\n      beforeEach ->\n        instanceIn = noflo.internalSocket.createSocket()\n        propsIn = noflo.internalSocket.createSocket()\n\n        c.inPorts.instance.attach instanceIn\n        c.inPorts.props.attach propsIn\n\n        component = new Component\n          test: false\n        mountPoint = document.getElementById 'mount'\n        instance = React.renderComponent component, mountPoint\n\n      afterEach ->\n        React.unmountComponentAtNode mountPoint\n\n      describe 'with \"props\" first and \"instance\" sencond', ->\n\n        beforeEach ->\n          instanceIn.send instance\n          instanceIn.disconnect()\n          propsIn.send test: true\n          propsIn.disconnect()\n\n        it 'should set the props', ->\n          expect(instance.props.test).to.be.true\n\n      describe 'with \"instance\" first and \"props\" sencond', ->\n\n        beforeEach ->\n          propsIn.send test: true\n          propsIn.disconnect()\n          instanceIn.send instance\n          instanceIn.disconnect()\n\n        it 'should set the props', ->\n          expect(instance.props.test).to.be.true\n\n      describe 'with invalid data on \"props\"', ->\n\n        beforeEach ->\n          instanceIn.send instance\n          instanceIn.disconnect()\n          propsIn.send 'invalid data'\n          propsIn.disconnect()\n\n        it 'should do nothing', ->\n          expect(instance.props.test).to.be.false\n\n      describe 'on an unmounted component', ->\n\n        beforeEach ->\n          instanceIn.send instance\n          instanceIn.disconnect()\n          React.unmountComponentAtNode mountPoint\n\n          propsIn.send test: true\n          propsIn.disconnect()\n\n        it 'should do nothing with the unmounted component', ->\n          expect(instance.isMounted()).to.be.false\n          expect(instance.props.test).to.be.false\n\n        it 'should apply the props to next component being send', ->\n          instance = React.renderComponent component, mountPoint\n          expect(instance.isMounted()).to.be.true\n\n          instanceIn.send instance\n          instanceIn.disconnect()\n\n          expect(instance.props.test).to.be.true\n"},"react/Unmount":{language:"coffeescript",source:"noflo = require 'noflo'\nload = require '../lib/load'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Unmount a React component from a given mountpoint'\n  c.inPorts.add 'container',\n    datatype: 'object'\n    description: 'DOM element where a React component is mounted'\n  c.outPorts.add 'unmounted',\n    datatype: 'boolean'\n    required: false\n  c.outPorts.add 'error',\n    datatype: 'object'\n    required: false\n  c.process (input, output) ->\n    return unless input.hasData 'container'\n    container = input.getData 'container'\n    load.getReact (err, React) ->\n      if err\n        output.done err\n        return\n      output.sendDone\n        unmontainer: React.unmountComponentAtNode container\n    return\n"},"routers/ControlledSequence":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.description = 'Switch output to new connection every time \"next\" is sent';\n  c.inPorts.add('in',\n    { datatype: 'all' });\n  c.inPorts.add('next',\n    { datatype: 'bang' });\n  c.outPorts.add('out', {\n    datatype: 'all',\n    addressable: true,\n  });\n  c.current = {};\n  c.tearDown = function (callback) {\n    c.current = {};\n    return callback();\n  };\n  c.forwardBrackets = {};\n  return c.process((input, output) => {\n    if (input.hasData('next')) {\n      input.getData('next');\n      if (!c.current[input.scope]) {\n        c.current[input.scope] = 0;\n      }\n      c.current[input.scope] += 1;\n      if (c.current[input.scope] >= c.outPorts.out.listAttached().length) {\n        c.current[input.scope] = 0;\n      }\n      output.done();\n      return;\n    }\n    if (!input.has('in')) { return; }\n    if (!c.current[input.scope]) {\n      c.current[input.scope] = 0;\n    }\n    const packet = input.get('in');\n    const attached = c.outPorts.out.listAttached();\n    packet.index = attached[c.current[input.scope]];\n    output.sendDone({ out: packet });\n  });\n};\n",tests:"describe('ControlledSequence component', () => {\n  let c = null;\n  let next = null;\n  let ins = null;\n  let outs = [];\n  before(function (done) {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    loader.load('routers/ControlledSequence', (err, instance) => {\n      if (err) {\n        done(err);\n        return;\n      }\n      c = instance;\n      ins = noflo.internalSocket.createSocket();\n      next = noflo.internalSocket.createSocket();\n      c.inPorts.in.attach(ins);\n      c.inPorts.next.attach(next);\n      done();\n    });\n  });\n  beforeEach(() => {\n    outs = [];\n    outs.push(noflo.internalSocket.createSocket());\n    outs.push(noflo.internalSocket.createSocket());\n    outs.push(noflo.internalSocket.createSocket());\n    outs.push(noflo.internalSocket.createSocket());\n    c.outPorts.out.attach(outs[0]);\n    c.outPorts.out.attach(outs[1]);\n    c.outPorts.out.attach(outs[2]);\n    c.outPorts.out.attach(outs[3]);\n  });\n  afterEach((done) => {\n    c.outPorts.out.detach(outs[0]);\n    c.outPorts.out.detach(outs[1]);\n    c.outPorts.out.detach(outs[2]);\n    c.outPorts.out.detach(outs[3]);\n    c.shutdown(done);\n  });\n\n  describe('sending packets', () => {\n    it('should switch connection when receiving a next', (done) => {\n      const expected = [\n        '0 < foo',\n        '0 DATA a',\n        '0 >',\n        '1 DATA b',\n      ];\n      const received = [];\n      outs.forEach((socket, idx) => {\n        socket.on('begingroup', (group) => received.push(`${idx} < ${group}`));\n        socket.on('data', (data) => {\n          received.push(`${idx} DATA ${data}`);\n          if (received.length !== expected.length) { return; }\n          chai.expect(received).to.eql(expected);\n          done();\n        });\n        socket.on('endgroup', () => {\n          received.push(`${idx} >`);\n          if (received.length !== expected.length) { return; }\n          chai.expect(received).to.eql(expected);\n          done();\n        });\n      });\n      ins.beginGroup('foo');\n      ins.send('a');\n      ins.endGroup();\n      next.send(null);\n      ins.send('b');\n    });\n    it('should switch back to first connection when running out of connections', (done) => {\n      const expected = [\n        '3 < foo',\n        '3 DATA a',\n        '3 >',\n        '0 DATA b',\n      ];\n      const received = [];\n      outs.forEach((socket, idx) => {\n        socket.on('begingroup', (group) => received.push(`${idx} < ${group}`));\n        socket.on('data', (data) => {\n          received.push(`${idx} DATA ${data}`);\n          if (received.length !== expected.length) { return; }\n          chai.expect(received).to.eql(expected);\n          done();\n        });\n        socket.on('endgroup', () => {\n          received.push(`${idx} >`);\n          if (received.length !== expected.length) { return; }\n          chai.expect(received).to.eql(expected);\n          done();\n        });\n      });\n      next.send(null);\n      next.send(null);\n      next.send(null);\n      ins.beginGroup('foo');\n      ins.send('a');\n      ins.endGroup();\n      next.send(null);\n      ins.send('b');\n    });\n  });\n});\n"},"routers/GroupRouter":{language:"javascript",source:"const noflo = require('noflo');\n\n// Re-evaluate whether there is a route match. There could only be one match at\n// most. Returns the match object.\nfunction matchRoute(breadcrumbs, routes) {\n  for (let index = 0; index < routes.length; index += 1) {\n    const route = routes[index];\n    let matched = true;\n\n    // Doesn't match if breadcrumbs is shorter than route's requirement\n    if (route.length > breadcrumbs.length) {\n      matched = false;\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    // Doesn't match if any of the breadcrumbs doesn't match that of the route\n    for (let step = 0; step < breadcrumbs.length; step += 1) {\n      const group = breadcrumbs[step];\n      if (!group.match(route[step])) {\n        matched = false;\n        break;\n      }\n    }\n\n    // Match otherwise\n    if (matched) {\n      return {\n        index,\n        route,\n        // We want the index of the breadcrumbs at which we have the match\n        level: breadcrumbs.length - 1,\n      };\n    }\n  }\n\n  // An empty object for no match\n  return {};\n}\n\nexports.getComponent = () => {\n  const component = new noflo.Component();\n  component.description = 'routes IPs based on groups, which are matched and routed but not removed when forwarding';\n  component.inPorts.add('route', {\n    datatype: 'array',\n    description: 'Array of route segments',\n  });\n  component.inPorts.add('routes', {\n    datatype: 'string',\n    description: 'Comma-separated list of route segments',\n  });\n  component.inPorts.add('reset', {\n    datatype: 'bang',\n    description: 'Remove configured routes',\n  });\n  component.inPorts.add('in', {\n    datatype: 'all',\n    description: 'Data to be routed by its groups',\n  });\n  component.outPorts.add('out', {\n    datatype: 'all',\n    addressable: true,\n  });\n  component.outPorts.add('route',\n    { datatype: 'string' });\n  component.outPorts.add('missed',\n    { datatype: 'all' });\n  component.outPorts.add('error',\n    { datatype: 'object' });\n\n  component.scopes = {};\n  const prepareScope = function (scope) {\n    if (component.scopes[scope]) {\n      return component.scopes[scope];\n    }\n    component.scopes[scope] = {\n      // Registered routes\n      routes: [],\n      // Where we are\n      breadcrumbs: [],\n      // Object describing the match\n      match: {\n        // The matching route's index in the routes array\n        index: null,\n        // A reference to the matching route for convenience\n        route: null,\n        // Where the match occurred (the \"level\" within breadcrumbs)\n        level: null,\n      },\n    };\n    return component.scopes[scope];\n  };\n  component.tearDown = function (callback) {\n    component.scopes = {};\n    return callback();\n  };\n  component.forwardBrackets = {};\n  return component.process((input, output) => {\n    let payload; let\n      scope;\n    if (input.hasData('reset')) {\n      input.getData('reset');\n      delete component.scopes[input.scope];\n      output.done();\n      return;\n    }\n    if (input.hasData('route')) {\n      scope = prepareScope(input.scope);\n      payload = input.getData('route');\n      if (Array.isArray(payload)) {\n        scope.routes.push(payload.map((segment) => new RegExp(segment)));\n        output.done();\n        return;\n      }\n      if (typeof payload === 'string') {\n        scope.routes.push([new RegExp(payload)]);\n        output.done();\n        return;\n      }\n      output.done(new Error('Route must be array of segments'));\n      return;\n    }\n    if (input.hasData('routes')) {\n      scope = prepareScope(input.scope);\n      payload = input.getData('routes');\n      if (typeof payload !== 'string') {\n        output.done(new Error('Routes list must be a string'));\n      }\n      scope.routes = payload.split(',').map((route) => route.split(':').map((segment) => new RegExp(segment)));\n      output.done();\n      return;\n    }\n    if (!input.has('in')) { return; }\n    scope = prepareScope(input.scope);\n    const packet = input.get('in');\n    switch (packet.type) {\n      case 'openBracket': {\n        // Update where we are\n        const bracketResult = { group: packet.data };\n        scope.breadcrumbs.push(bracketResult);\n\n        // Forward group if we are in a match\n        if ((scope.match.level != null) && (scope.match.level < scope.breadcrumbs.length)) {\n          packet.index = scope.match.index;\n          output.sendDone({ out: packet });\n          return;\n        }\n\n        // Try to match\n        scope.match = matchRoute(\n          scope.breadcrumbs.map((breadcrumb) => breadcrumb.group),\n          scope.routes,\n        );\n\n        // There is a match. Notify downstream if connected\n        if (scope.match.route != null) {\n          output.sendDone({ route: scope.match.route });\n          return;\n        }\n\n        // Send to missed otherwise\n        bracketResult.missed = true;\n        output.sendDone({ missed: packet });\n        return;\n      }\n      case 'closeBracket': {\n        // Update where we are\n        const bracketResult = scope.breadcrumbs.pop();\n\n        // Forward group if we are in a match\n        if (scope.match.level < scope.breadcrumbs.length) {\n          packet.index = scope.match.index;\n          output.sendDone({ out: packet });\n          return;\n        }\n\n        // *END* a match once we're at the end of a match\n        if (scope.match.level === scope.breadcrumbs.length) {\n          scope.match = {};\n          output.done();\n          return;\n        }\n\n        // Send to missed if there is no match\n        if (!bracketResult.missed) {\n          output.done();\n          return;\n        }\n        output.sendDone({ missed: packet });\n        return;\n      }\n      default: {\n        if (scope.match.route != null) {\n          packet.index = scope.match.index;\n          output.sendDone({ out: packet });\n          return;\n        }\n\n        output.sendDone({ missed: packet });\n      }\n    }\n  });\n};\n",tests:"describe('GroupRouter component', () => {\n  function receive(outs, missedOut, expected, done) {\n    const received = [];\n    outs.forEach((socket, idx) => {\n      socket.on('begingroup', (group) => received.push(`${idx} < ${group}`));\n      socket.on('data', (data) => {\n        received.push(`${idx} DATA ${data}`);\n        if (received.length !== expected.length) { return; }\n        chai.expect(received).to.eql(expected);\n        done();\n      });\n      socket.on('endgroup', (group) => {\n        received.push(`${idx} > ${group}`);\n        if (received.length !== expected.length) { return; }\n        chai.expect(received).to.eql(expected);\n        done();\n      });\n    });\n    if (missedOut) {\n      missedOut.on('begingroup', (group) => received.push(`MISSED < ${group}`));\n      missedOut.on('data', (data) => {\n        received.push(`MISSED DATA ${data}`);\n        if (received.length !== expected.length) { return; }\n        chai.expect(received).to.eql(expected);\n        done();\n      });\n      missedOut.on('endgroup', () => {\n        received.push('MISSED >');\n        if (received.length !== expected.length) { return; }\n        chai.expect(received).to.eql(expected);\n        done();\n      });\n    }\n  }\n\n  let c = null;\n  let routeIns = null;\n  let routesIns = null;\n  let resetIns = null;\n  let ins = null;\n  const outs = [];\n  let routeOut = null;\n  let missedOut = null;\n  let loader = null;\n\n  before(() => {\n    loader = new noflo.ComponentLoader(baseDir);\n  });\n  beforeEach(function (done) {\n    this.timeout(4000);\n    loader.load('routers/GroupRouter', (err, instance) => {\n      if (err) {\n        done(err);\n        return;\n      }\n      c = instance;\n      ins = noflo.internalSocket.createSocket();\n      routeIns = noflo.internalSocket.createSocket();\n      routesIns = noflo.internalSocket.createSocket();\n      resetIns = noflo.internalSocket.createSocket();\n      outs.push(noflo.internalSocket.createSocket());\n      outs.push(noflo.internalSocket.createSocket());\n      outs.push(noflo.internalSocket.createSocket());\n      outs.push(noflo.internalSocket.createSocket());\n      routeOut = noflo.internalSocket.createSocket();\n      missedOut = noflo.internalSocket.createSocket();\n\n      c.inPorts.in.attach(ins);\n      c.inPorts.route.attach(routeIns);\n      c.inPorts.routes.attach(routesIns);\n      c.inPorts.reset.attach(resetIns);\n      c.outPorts.route.attach(routeOut);\n      c.outPorts.missed.attach(missedOut);\n      outs.forEach((socket) => {\n        c.outPorts.out.attach(socket);\n      });\n      done();\n    });\n  });\n\n  describe('when instantiated', () => {\n    it('should have an input port', () => {\n      chai.expect(c.inPorts.in).to.be.an('object');\n      chai.expect(c.inPorts.route).to.be.an('object');\n      chai.expect(c.inPorts.reset).to.be.an('object');\n    });\n    it('should have an output port', () => {\n      chai.expect(c.outPorts.out).to.be.an('object');\n      chai.expect(c.outPorts.route).to.be.an('object');\n      chai.expect(c.outPorts.missed).to.be.an('object');\n    });\n  });\n\n  describe('tests', () => {\n    it('route incoming IPs based on group routes', (done) => {\n      const expected = [\n        'MISSED < a',\n        'MISSED DATA missed',\n        '0 DATA a/b',\n        'MISSED < c',\n        'MISSED DATA missed',\n        'MISSED >',\n        'MISSED >',\n        '1 < e',\n        '1 DATA d',\n        '1 > e',\n        'MISSED < a',\n        '2 DATA e',\n        'MISSED >',\n      ];\n      receive(outs, missedOut, expected, done);\n\n      // Each route contains a linear hierarchy of groups separated by slashes.\n      // `[\"a\", \"b\"]` matches only if group `b` is enclosed within group `a`.\n      // Matches are sent to the port corresponding to the order in which routes\n      // were received. So if a later-defined route is identical to an\n      // earlier-defined route, the earlier-defined route always receives the\n      // matches.\n      routeIns.connect();\n      routeIns.send(['a', 'b']);\n      routeIns.send('d');\n      routeIns.send(['a', 'e.+']);\n      routeIns.send(['a', 'g']);\n      routeIns.disconnect();\n\n      ins.connect();\n      ins.beginGroup('a');\n      ins.send('missed');\n      ins.beginGroup('b');\n      ins.send('a/b');\n      ins.endGroup('b');\n      ins.beginGroup('c');\n      ins.send('missed');\n      ins.endGroup('c');\n      ins.endGroup('a');\n      // As long as \"d\" is matched and there's no subsequent route segment, any\n      // subsequent group doesn't count in determining whether this is a match or\n      // not\n      ins.beginGroup('d');\n      ins.beginGroup('e');\n      ins.send('d');\n      ins.endGroup('e');\n      ins.endGroup('d');\n      ins.beginGroup('a');\n      ins.beginGroup('ea');\n      ins.send('e');\n      ins.endGroup('ea');\n      ins.endGroup('a');\n      ins.disconnect();\n    });\n\n    it('matched groups are stripped', (done) => {\n      const expected = [\n        'MISSED < a',\n        '0 < c',\n        '0 DATA x',\n        '0 > c',\n        'MISSED >',\n      ];\n      receive(outs, missedOut, expected, done);\n\n      routeIns.connect();\n      routeIns.send(['a', 'b']);\n      routeIns.disconnect();\n\n      ins.connect();\n      ins.beginGroup('a');\n      ins.beginGroup('b');\n      ins.beginGroup('c');\n      ins.send('x');\n      ins.endGroup('c');\n      ins.endGroup('b');\n      ins.endGroup('a');\n      ins.disconnect();\n    });\n\n    it('the matched path will also be output', (done) => {\n      routeOut.on('data', (data) => chai.expect(data).to.deep.equal([/a/, /b/]));\n      routeOut.on('disconnect', () => done());\n\n      routeIns.connect();\n      routeIns.send(['a', 'b']);\n      routeIns.disconnect();\n\n      ins.connect();\n      ins.beginGroup('a');\n      ins.beginGroup('b');\n      ins.beginGroup('c');\n      ins.send('x');\n      ins.endGroup('c');\n      ins.endGroup('b');\n      ins.endGroup('a');\n      ins.disconnect();\n    });\n\n    it('reset the routes', (done) => {\n      const expected = [\n        'MISSED < a',\n        'MISSED < b',\n        'MISSED DATA missed',\n        'MISSED >',\n        'MISSED >',\n        '0 DATA abc',\n      ];\n      receive(outs, missedOut, expected, done);\n\n      routeIns.connect();\n      routeIns.send(['a', 'b']);\n      routeIns.disconnect();\n\n      resetIns.connect();\n      resetIns.send(null);\n      resetIns.disconnect();\n\n      routeIns.connect();\n      routeIns.send(['c']);\n      routeIns.disconnect();\n\n      ins.connect();\n      ins.beginGroup('a');\n      ins.beginGroup('b');\n      ins.send('missed');\n      ins.endGroup('b');\n      ins.endGroup('a');\n      ins.beginGroup('c');\n      ins.send('abc');\n      ins.endGroup('c');\n      ins.disconnect();\n    });\n  });\n\n  // # Test for compatbility with legacy GroupRouter. Do not use these as examples.\n\n  describe('legacy test', () => {\n    it('test routing error', (done) => {\n      const expected = [\n        'MISSED < baz',\n        'MISSED DATA hello',\n        'MISSED >',\n      ];\n      receive(outs, missedOut, expected, done);\n\n      routesIns.send('foo,bar');\n      ins.connect();\n      ins.beginGroup('baz');\n      ins.send('hello');\n      ins.endGroup();\n      ins.disconnect();\n    });\n\n    it('test routing success', (done) => {\n      routesIns.send('foo,bar');\n      const expected = [\n        '1 DATA hello',\n      ];\n      receive(outs, missedOut, expected, done);\n      ins.connect();\n      ins.beginGroup('bar');\n      ins.send('hello');\n      ins.endGroup();\n      ins.disconnect();\n    });\n\n    it('test routing subgroup error', (done) => {\n      routesIns.send('foo:baz,bar:baz');\n      const expected = [\n        'MISSED < bar',\n        'MISSED DATA hello',\n        'MISSED >',\n      ];\n      receive(outs, missedOut, expected, done);\n\n      ins.connect();\n      ins.beginGroup('bar');\n      ins.send('hello');\n      ins.endGroup();\n      ins.disconnect();\n    });\n\n    it('test routing subgroup success', (done) => {\n      routesIns.send('foo:baz,bar:baz');\n      const expected = [\n        'MISSED < bar',\n        '1 DATA hello',\n        'MISSED >',\n      ];\n      receive(outs, missedOut, expected, done);\n\n      ins.connect();\n      ins.beginGroup('bar');\n      ins.beginGroup('baz');\n      ins.send('hello');\n      ins.endGroup();\n      ins.endGroup();\n      ins.disconnect();\n    });\n\n    it('test routing group wildcards', (done) => {\n      routesIns.send('bar,.*');\n      const expected = [\n        '1 DATA hello',\n      ];\n      receive(outs, missedOut, expected, done);\n\n      ins.connect();\n      ins.beginGroup('baz');\n      ins.send('hello');\n      ins.endGroup();\n      ins.disconnect();\n    });\n\n    it('test routing subgroup wildcards', (done) => {\n      routesIns.send('foo:baz,bar:.*');\n      const expected = [\n        'MISSED < bar',\n        '1 DATA hello',\n        'MISSED >',\n      ];\n      receive(outs, missedOut, expected, done);\n\n      ins.connect();\n      ins.beginGroup('bar');\n      ins.beginGroup('baz');\n      ins.send('hello');\n      ins.endGroup();\n      ins.endGroup();\n      ins.disconnect();\n    });\n\n    it('test routing primary group wildcards', (done) => {\n      routesIns.send('foo:baz,.*:baz');\n      const expected = [\n        'MISSED < bar',\n        '1 DATA hello',\n        'MISSED >',\n      ];\n      receive(outs, missedOut, expected, done);\n\n      ins.beginGroup('bar');\n      ins.beginGroup('baz');\n      ins.send('hello');\n      ins.endGroup();\n      ins.endGroup();\n      ins.disconnect();\n    });\n  });\n});\n"},"routers/KickRouter":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.description = 'Releases a stream to a specified index on prev/next/index';\n  c.inPorts.add('in',\n    { datatype: 'all' });\n  c.inPorts.add('index',\n    { datatype: 'int' });\n  c.inPorts.add('prev',\n    { datatype: 'bang' });\n  c.inPorts.add('next',\n    { datatype: 'bang' });\n  c.outPorts.add('out', {\n    datatype: 'all',\n    addressable: true,\n  });\n  c.current = {};\n  c.tearDown = function (callback) {\n    c.current = {};\n    return callback();\n  };\n  c.forwardBrackets = {};\n  return c.process((input, output) => {\n    if (!input.hasStream('in')) { return; }\n    if (!c.current[input.scope]) {\n      c.current[input.scope] = 0;\n    }\n\n    const sendToIndex = function () {\n      const stream = input.getStream('in');\n      const attached = c.outPorts.out.listAttached();\n      const idx = attached[c.current[input.scope]];\n      return (() => {\n        const result = [];\n        stream.forEach((packet) => {\n          const ip = packet;\n          ip.index = idx;\n          result.push(output.send({ out: ip }));\n        });\n        return result;\n      })();\n    };\n\n    if (input.hasData('next')) {\n      input.getData('next');\n      c.current[input.scope] += 1;\n      if (c.current[input.scope] >= c.outPorts.out.listAttached().length) {\n        c.current[input.scope] = 0;\n      }\n      sendToIndex();\n      output.done();\n      return;\n    }\n    if (input.hasData('prev')) {\n      input.getData('prev');\n      c.current[input.scope] -= 1;\n      if (c.current[input.scope] < 0) {\n        c.current[input.scope] = c.outPorts.out.listAttached().length - 1;\n      }\n      sendToIndex();\n      output.done();\n      return;\n    }\n    if (input.hasData('index')) {\n      c.current[input.scope] = parseInt(input.getData('index'), 10);\n      sendToIndex();\n      output.done();\n    }\n  });\n};\n",tests:"describe('KickRouter component', () => {\n  let c = null;\n  let next = null;\n  let prev = null;\n  let index = null;\n  let ins = null;\n  let outs = [];\n  before(function (done) {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    loader.load('routers/KickRouter', (err, instance) => {\n      if (err) {\n        done(err);\n        return;\n      }\n      c = instance;\n      ins = noflo.internalSocket.createSocket();\n      next = noflo.internalSocket.createSocket();\n      prev = noflo.internalSocket.createSocket();\n      index = noflo.internalSocket.createSocket();\n      c.inPorts.in.attach(ins);\n      c.inPorts.next.attach(next);\n      c.inPorts.prev.attach(prev);\n      c.inPorts.index.attach(index);\n      done();\n    });\n  });\n  beforeEach(() => {\n    outs = [];\n    outs.push(noflo.internalSocket.createSocket());\n    outs.push(noflo.internalSocket.createSocket());\n    outs.push(noflo.internalSocket.createSocket());\n    outs.push(noflo.internalSocket.createSocket());\n    c.outPorts.out.attach(outs[0]);\n    c.outPorts.out.attach(outs[1]);\n    c.outPorts.out.attach(outs[2]);\n    c.outPorts.out.attach(outs[3]);\n  });\n  afterEach((done) => {\n    c.outPorts.out.detach(outs[0]);\n    c.outPorts.out.detach(outs[1]);\n    c.outPorts.out.detach(outs[2]);\n    c.outPorts.out.detach(outs[3]);\n    c.shutdown(done);\n  });\n\n  describe('receiving a next', () => it('should release a stream to next index', (done) => {\n    const expected = [\n      '1 < foo',\n      '1 DATA a',\n      '1 >',\n      '2 DATA b',\n    ];\n    const received = [];\n    outs.forEach((socket, idx) => {\n      socket.on('begingroup', (group) => received.push(`${idx} < ${group}`));\n      socket.on('data', (data) => {\n        received.push(`${idx} DATA ${data}`);\n        if (received.length !== expected.length) { return; }\n        chai.expect(received).to.eql(expected);\n        done();\n      });\n      socket.on('endgroup', () => {\n        received.push(`${idx} >`);\n        if (received.length !== expected.length) { return; }\n        chai.expect(received).to.eql(expected);\n        done();\n      });\n    });\n    ins.beginGroup('foo');\n    ins.send('a');\n    ins.endGroup();\n    next.send(null);\n    ins.send('b');\n    next.send(null);\n  }));\n  describe('receiving a prev', () => it('should release a stream to previous index', (done) => {\n    const expected = [\n      '3 < foo',\n      '3 DATA a',\n      '3 >',\n      '2 DATA b',\n    ];\n    const received = [];\n    outs.forEach((socket, idx) => {\n      socket.on('begingroup', (group) => received.push(`${idx} < ${group}`));\n      socket.on('data', (data) => {\n        received.push(`${idx} DATA ${data}`);\n        if (received.length !== expected.length) { return; }\n        chai.expect(received).to.eql(expected);\n        done();\n      });\n      socket.on('endgroup', () => {\n        received.push(`${idx} >`);\n        if (received.length !== expected.length) { return; }\n        chai.expect(received).to.eql(expected);\n        done();\n      });\n    });\n    ins.beginGroup('foo');\n    ins.send('a');\n    ins.endGroup();\n    prev.send(null);\n    ins.send('b');\n    prev.send(null);\n  }));\n  describe('receiving an index', () => it('should release a stream to given index', (done) => {\n    const expected = [\n      '0 < foo',\n      '0 DATA a',\n      '0 >',\n      '2 DATA b',\n    ];\n    const received = [];\n    outs.forEach((socket, idx) => {\n      socket.on('begingroup', (group) => received.push(`${idx} < ${group}`));\n      socket.on('data', (data) => {\n        received.push(`${idx} DATA ${data}`);\n        if (received.length !== expected.length) { return; }\n        chai.expect(received).to.eql(expected);\n        done();\n      });\n      socket.on('endgroup', () => {\n        received.push(`${idx} >`);\n        if (received.length !== expected.length) { return; }\n        chai.expect(received).to.eql(expected);\n        done();\n      });\n    });\n    ins.beginGroup('foo');\n    ins.send('a');\n    ins.endGroup();\n    index.send(0);\n    ins.send('b');\n    index.send(2);\n  }));\n});\n"},"routers/PacketRegexpRouter":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n  c.description = 'Route IPs based on RegExp match on the IP content (strings only). The position of the RegExp determines which port to forward to.';\n  c.inPorts.add('in',\n    { datatype: 'string' });\n  c.inPorts.add('route', {\n    datatype: 'array',\n    control: true,\n  });\n  c.outPorts.add('out', {\n    datatype: 'string',\n    addressable: true,\n  });\n  c.outPorts.add('missed',\n    { datatype: 'all' });\n  c.outPorts.add('error',\n    { datatype: 'object' });\n  c.forwardBrackets = { in: ['out', 'missed'] };\n  return c.process((input, output) => {\n    if (!input.hasData('in', 'route')) { return; }\n    const routes = input.getData('route');\n    if (!Array.isArray(routes)) {\n      output.done(new Error('Route must be an array'));\n      return;\n    }\n    const regexps = [];\n    let errored;\n    routes.forEach((route) => {\n      if (typeof route === 'string') {\n        regexps.push(new RegExp(route));\n        return;\n      }\n      if (route instanceof RegExp) {\n        regexps.push(route);\n        return;\n      }\n      errored = new Error('Route array can only contain strings or RegExps');\n    });\n    if (errored) {\n      output.done(errored);\n      return;\n    }\n\n    const data = input.getData('in');\n    if (typeof data !== 'string') {\n      output.done(new Error('PacketRegexpRouter can only route strings'));\n      return;\n    }\n    const matchedIndexes = [];\n    for (let idx = 0; idx < regexps.length; idx += 1) {\n      const regexp = regexps[idx];\n      if (data.match(regexp)) { matchedIndexes.push(idx); }\n    }\n    if (!matchedIndexes.length) {\n      output.sendDone({ missed: data });\n      return;\n    }\n    matchedIndexes.forEach((idx) => {\n      output.send({\n        out: new noflo.IP('data', data,\n          { index: idx }),\n      });\n    });\n    output.done();\n  });\n};\n",tests:"describe('PacketRegexpRouter', () => {\n  let router = null;\n  let loader = null;\n\n  before(() => {\n    loader = new noflo.ComponentLoader(baseDir);\n  });\n  beforeEach(function (done) {\n    this.timeout(4000);\n    loader.load('routers/PacketRegexpRouter', (err, instance) => {\n      if (err) {\n        done(err);\n        return;\n      }\n      router = instance;\n      done();\n    });\n  });\n\n  describe('available ports', () => {\n    describe('inPorts', () => {\n      it('should include \"in\"', () => chai.expect(router.inPorts.in).to.be.an('object'));\n\n      it('should include \"route\"', () => chai.expect(router.inPorts.route).to.be.an('object'));\n    });\n\n    describe('outPorts', () => {\n      it('should include \"out\"', () => chai.expect(router.outPorts.out).to.be.an('object'));\n\n      it('should include \"missed\"', () => chai.expect(router.outPorts.missed).to.be.an('object'));\n    });\n  });\n\n  describe('data flow', () => {\n    describe('on the \"out\" port', () => {\n      let inIn = null;\n      let routeIn = null;\n      let outOut = null;\n      let missedOut = null;\n\n      beforeEach(() => {\n        inIn = noflo.internalSocket.createSocket();\n        routeIn = noflo.internalSocket.createSocket();\n        outOut = noflo.internalSocket.createSocket();\n        missedOut = noflo.internalSocket.createSocket();\n\n        router.inPorts.route.attach(routeIn);\n        router.inPorts.in.attach(inIn);\n        router.outPorts.out.attach(outOut);\n        router.outPorts.missed.attach(missedOut);\n      });\n\n      it('should receive matches', (done) => {\n        // Register a callback for successful routing.\n        outOut.connect();\n        outOut.on('data', (data) => {\n          chai.expect(data).to.equal('abc');\n          done();\n        });\n\n        // Configure a route.\n        routeIn.connect();\n        routeIn.send(['^abc$']);\n        routeIn.disconnect();\n\n        // Send a packet that should match\n        inIn.connect();\n        inIn.send('abc');\n        inIn.disconnect();\n      });\n\n      it('should route matches by index', (done) => {\n        // Add an additional connection to \"out\".\n        const outOut2 = noflo.internalSocket.createSocket();\n        router.outPorts.out.attach(outOut2);\n        outOut.connect();\n        outOut2.connect();\n\n        // Register a callback for successful routing.\n        outOut2.on('data', (data) => {\n          chai.expect(data).to.equal('def');\n          done();\n        });\n\n        // Configure a route.\n        routeIn.connect();\n        routeIn.send(['^abc$', '^def$']);\n        routeIn.disconnect();\n\n        // Send a packet that should match\n        inIn.connect();\n        inIn.send('def');\n        inIn.disconnect();\n      });\n\n      it('should not receive mismatches', () => {\n        // Register a callback for successful routing.\n        outOut.connect();\n        outOut.on('data', () => {\n          throw new Error('\"out\" should not receive a signal');\n        });\n\n        // Configure a route.\n        routeIn.connect();\n        routeIn.send(['^abc$']);\n        routeIn.disconnect();\n\n        // Send a packet that should match\n        inIn.connect();\n        inIn.send('cba');\n        inIn.disconnect();\n      });\n\n      it('should persist groups', (done) => {\n        // Register a callback for successful routing.\n        outOut.connect();\n        outOut.on('begingroup', (group) => {\n          chai.expect(group).to.equal('group1');\n          done();\n        });\n\n        // Configure a route.\n        routeIn.connect();\n        routeIn.send(['^abc$']);\n        routeIn.disconnect();\n\n        // Send a packet that should match\n        inIn.connect();\n        inIn.beginGroup('group1');\n        inIn.send('abc');\n        inIn.endGroup('group1');\n        inIn.disconnect();\n      });\n    });\n\n    describe('of the \"missed\" port', () => {\n      describe('on the \"out\" port', () => {});\n\n      let inIn = null;\n      let routeIn = null;\n      let outOut = null;\n      let missedOut = null;\n\n      beforeEach(() => {\n        inIn = noflo.internalSocket.createSocket();\n        routeIn = noflo.internalSocket.createSocket();\n        outOut = noflo.internalSocket.createSocket();\n        missedOut = noflo.internalSocket.createSocket();\n\n        router.inPorts.route.attach(routeIn);\n        router.inPorts.in.attach(inIn);\n        router.outPorts.out.attach(outOut);\n        router.outPorts.missed.attach(missedOut);\n      });\n\n      it('should receive missed routes', (done) => {\n        // Register a callback for successful routing.\n        missedOut.connect();\n        missedOut.on('data', (data) => {\n          chai.expect(data).to.equal('cba');\n          done();\n        });\n\n        // Configure a route.\n        routeIn.connect();\n        routeIn.send(['^abc$']);\n        routeIn.disconnect();\n\n        // Send a packet that should match\n        inIn.connect();\n        inIn.send('cba');\n        inIn.disconnect();\n      });\n\n      it('should not received matched routes', () => {\n        // Register a callback for successful routing.\n        missedOut.connect();\n        missedOut.on('data', () => {\n          throw new Error('\"out\" should not receive a signal');\n        });\n\n        // Configure a route.\n        routeIn.connect();\n        routeIn.send(['^abc$']);\n        routeIn.disconnect();\n\n        // Send a packet that should match\n        inIn.connect();\n        inIn.send('abc');\n        inIn.disconnect();\n      });\n    });\n  });\n});\n"},"routers/PacketRouter":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.description = 'Routes IPs based on position in an incoming IP stream';\n  c.inPorts.add('in', {\n    datatype: 'all',\n    addressable: true,\n  });\n  c.outPorts.add('out', {\n    datatype: 'all',\n    addressable: true,\n  });\n  c.outPorts.add('missed',\n    { datatype: 'all' });\n  c.outPorts.add('error');\n  c.forwardBrackets = {};\n  return c.process((input, output) => {\n    const indexesWithStreams = input.attached('in').filter((idx) => input.hasStream(['in', idx]));\n    if (!indexesWithStreams.length) { return; }\n    indexesWithStreams.forEach((idx) => {\n      const stream = input.getStream(['in', idx]);\n      if ((stream[0].type === 'openBracket') && (stream[0].data === null)) {\n        // Remove the surrounding brackets if they're unnamed\n        stream.shift();\n        stream.pop();\n      }\n      let position = 0;\n      const brackets = [];\n      let hadData = false;\n      return (() => {\n        const result = [];\n        stream.forEach((packet) => {\n          if (packet.type === 'openBracket') {\n            if (hadData && !brackets.length) {\n              // Start of a new substream\n              position += 1;\n            }\n            brackets.push(packet.data);\n          }\n          if (packet.type === 'closeBracket') {\n            brackets.pop();\n          }\n\n          const attached = c.outPorts.out.listAttached();\n          if (attached.indexOf(position) === -1) {\n            output.send({ missed: packet });\n            return;\n          }\n\n          const ip = packet;\n          ip.index = position;\n          output.send({ out: ip });\n\n          if (ip.type === 'data') {\n            if (hadData && brackets.length) {\n              // Was already advanced by openBracket\n              return;\n            }\n            position += 1;\n            result.push(hadData = true);\n          } else {\n            result.push(undefined);\n          }\n        });\n        return result;\n      })();\n    });\n    output.done();\n  });\n};\n",tests:"describe('PacketRouter component', () => {\n  let c = null;\n  let ins = null;\n  let outA = null;\n  let outB = null;\n  let missedOut = null;\n  let loader = null;\n\n  before(() => {\n    loader = new noflo.ComponentLoader(baseDir);\n  });\n  beforeEach(function (done) {\n    this.timeout(4000);\n    loader.load('routers/PacketRouter', (err, instance) => {\n      if (err) {\n        done(err);\n      }\n      c = instance;\n      ins = noflo.internalSocket.createSocket();\n      outA = noflo.internalSocket.createSocket();\n      outB = noflo.internalSocket.createSocket();\n      missedOut = noflo.internalSocket.createSocket();\n      c.inPorts.in.attach(ins);\n      c.outPorts.missed.attach(missedOut);\n      done();\n    });\n  });\n\n  describe('when instantiated', () => {\n    it('should have an input port', () => chai.expect(c.inPorts.in).to.be.an('object'));\n    it('should have an output port', () => {\n      chai.expect(c.outPorts.out).to.be.an('object');\n      chai.expect(c.outPorts.missed).to.be.an('object');\n    });\n  });\n\n  it('routes incoming IPs based on IP stream position', (done) => {\n    c.outPorts.out.attach(outA);\n    c.outPorts.out.attach(outB);\n\n    const expected = [\n      'a a',\n      'b b',\n      'missed c',\n      'missed d',\n    ];\n    const received = [];\n\n    outA.on('data', (data) => {\n      received.push(`a ${data}`);\n      if (received.length !== expected.length) { return; }\n      chai.expect(received).to.eql(expected);\n      done();\n    });\n\n    outB.on('data', (data) => {\n      received.push(`b ${data}`);\n      if (received.length !== expected.length) { return; }\n      chai.expect(received).to.eql(expected);\n      done();\n    });\n\n    missedOut.on('data', (data) => {\n      received.push(`missed ${data}`);\n      if (received.length !== expected.length) { return; }\n      chai.expect(received).to.eql(expected);\n      done();\n    });\n\n    ins.beginGroup();\n    ins.send('a');\n    ins.send('b');\n    ins.send('c');\n    ins.send('d');\n    ins.endGroup();\n  });\n});\n"},"routers/SplitInSequence":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.description = 'Send each packet to one outport connection in sequence';\n  c.inPorts.add('in',\n    { datatype: 'all' });\n  c.outPorts.add('out', {\n    datatype: 'all',\n    addressable: true,\n  });\n  c.current = 0;\n  c.tearDown = function (callback) {\n    c.current = 0;\n    return callback();\n  };\n  return c.process((input, output) => {\n    if (!input.hasData('in')) { return; }\n    const packet = new noflo.IP('data', input.getData('in'));\n    const attached = c.outPorts.out.listAttached();\n    packet.index = attached[c.current];\n    output.send({ out: packet });\n    c.current += 1;\n    if (c.current >= c.outPorts.out.listAttached().length) {\n      c.current = 0;\n    }\n    output.done();\n  });\n};\n",tests:"describe('SplitInSequence component', () => {\n  let c = null;\n  let ins = null;\n  let out = null;\n  let loader = null;\n\n  before(() => {\n    loader = new noflo.ComponentLoader(baseDir);\n  });\n  beforeEach(function (done) {\n    this.timeout(4000);\n    loader.load('routers/SplitInSequence', (err, instance) => {\n      if (err) {\n        done(err);\n        return;\n      }\n      c = instance;\n      ins = noflo.internalSocket.createSocket();\n      c.inPorts.in.attach(ins);\n      done();\n    });\n  });\n\n  describe('when instantiated', () => {\n    it('should have an input port', () => chai.expect(c.inPorts.in).to.be.an('object'));\n    it('should have an output port', () => chai.expect(c.outPorts.out).to.be.an('object'));\n  });\n\n  it('test sending to single outport', (done) => {\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n    const expects = [5, 1];\n    const sends = [5, 1];\n\n    out.on('data', (data) => {\n      chai.expect(data).to.equal(expects.shift());\n      if (expects.length) { return; }\n      done();\n    });\n\n    sends.forEach((val) => ins.send(val));\n    ins.disconnect();\n  });\n\n  it('test sending to three outports', (done) => {\n    const sends = [1, 2, 3, 4, 5, 6];\n    const outs = [{\n      socket: noflo.internalSocket.createSocket(),\n      expects: [1, 4],\n    },\n    {\n      socket: noflo.internalSocket.createSocket(),\n      expects: [2, 5],\n    },\n    {\n      socket: noflo.internalSocket.createSocket(),\n      expects: [3, 6],\n    },\n    ];\n\n    let disconnected = 0;\n    outs.forEach((outSocket) => {\n      c.outPorts.out.attach(outSocket.socket);\n\n      outSocket.socket.on('data', (data) => {\n        chai.expect(outSocket.expects.length).to.be.above(0);\n        chai.expect(data).to.equal(outSocket.expects.shift());\n      });\n      outSocket.socket.on('disconnect', () => {\n        disconnected += 1;\n        if (disconnected === outs.length) {\n          done();\n        }\n      });\n    });\n\n    sends.forEach((val) => ins.send(val));\n    ins.disconnect();\n  });\n});\n"},"runtime/ConnectRuntime":{language:"coffeescript",source:"noflo = require 'noflo'\nfbpClient = require 'fbp-protocol-client'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.inPorts.add 'definition',\n    datatype: 'object'\n    description: 'Runtime definition object'\n    required: true\n  c.inPorts.add 'element',\n    datatype: 'object'\n    description: 'DOM element to be set as Runtime parent element'\n    required: false\n  c.inPorts.add 'timeout',\n    datatype: 'number'\n    description: 'How long to try connecting, in milliseconds'\n    default: 1000\n    required: false\n    control: true\n  c.outPorts.add 'runtime',\n    datatype: 'object'\n    description: 'FBP Runtime instance'\n    required: false\n  c.outPorts.add 'connected',\n    datatype: 'object'\n    description: 'Connected FBP Runtime instance'\n    required: false\n  c.outPorts.add 'unavailable',\n    datatype: 'object'\n    description: 'Unavailable FBP Runtime instance'\n    required: false\n  c.outPorts.add 'error',\n    datatype: 'object'\n    description: 'Runtime connection error'\n    required: false\n  c.process (input, output) ->\n    return unless input.hasData 'definition'\n    definition = input.getData 'definition'\n    unless definition.protocol\n      output.done new Error 'Protocol definition required'\n      return\n    unless definition.address\n      output.done new Error 'Address definition required'\n      return\n\n    timeout = if input.hasData('timeout') then input.getData('timeout') else 1000\n    element = if input.hasData('element') then input.getData('element') else null\n\n    try\n      Runtime = fbpClient.getTransport definition.protocol\n    catch e\n      output.done new Error \"Protocol #{definition.protocol} is not supported\"\n      return\n\n    onError = (e) ->\n      clearTimeout timeout if timeout\n      rt.removeListener 'capabilities', onCapabilities\n      if rt and c.outPorts.unavailable.isAttached()\n        output.send\n          unavailable: rt\n        return\n      output.done e\n      return\n\n    onTimeout = ->\n      output.sendDone\n        unavailable: rt\n      rt.removeListener 'error', onError\n      rt.removeListener 'capabilities', onCapabilities\n      rt.disconnect()\n\n    onCapabilities = ->\n      clearTimeout timeout if timeout\n      rt.removeListener 'error', onError\n      output.sendDone\n        connected: rt\n\n    rt = new Runtime definition\n    rt.setParentElement element if element\n    timeout = setTimeout onTimeout, timeout\n    rt.once 'capabilities', onCapabilities\n    rt.once 'error', onError\n    output.send\n      runtime: rt\n    rt.connect()\n"},"runtime/DebugNetwork":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = () ->\n  c = new noflo.Component\n  c.description = \"Switch a network's debug mode on or off\"\n\n  c.inPorts.add 'runtime',\n    datatype: 'object'\n    description: 'FBP runtime instance'\n  c.inPorts.add 'graph',\n    datatype: 'object'\n    description: 'Graph to debug'\n  c.inPorts.add 'enable',\n    datatype: 'boolean'\n    description: 'Whether to debug the graph'\n\n  c.outPorts.add 'sent',\n    datatype: 'bang'\n    description: 'Command sent to the runtime'\n\n  c.process (input, output) ->\n    return unless input.hasData 'runtime', 'graph', 'enable'\n    [runtime, graph, enable] = input.getData 'runtime', 'graph', 'enable'\n    runtime.sendNetwork 'debug',\n      graph: graph.name or graph.properties.id\n      enable: enable\n    output.sendDone\n      sent: true\n"},"runtime/GetSource":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.icon = 'code'\n  c.inPorts.add 'name',\n    datatype: 'string'\n    description: 'Name of the component to get'\n  c.inPorts.add 'runtime',\n    datatype: 'object'\n    description: 'Runtime to communicate with'\n  c.outPorts.add 'source',\n    datatype: 'object'\n  c.outPorts.add 'error',\n    datatype: 'object'\n  c.runtime = null\n\n  c.tearDown = (callback) ->\n    do unsubscribe\n    do callback\n\n  unsubscribe: ->\n    return unless c.runtime\n    c.runtime.rt.removeListener 'component', handleMessage\n    c.runtime = null\n\n  handleMessage = (message) ->\n    return unless c.runtime\n    return unless message.command is 'source'\n    componentName = [message.payload.library, message.payload.name].join '/'\n    # Cache the component\n    c.runtime.sources[componentName] = message.payload\n\n  c.process (input, output) ->\n    if input.hasData 'runtime'\n      # New runtime connection\n      runtime = input.getData 'runtime'\n      if c.runtime\n        if c.runtime.rt is runtime\n          # No-op if this runtime is same as what we had before\n          return output.done()\n        # Unsubscribe previous\n        do unsubscribe\n      if runtime.isConnected() and not runtime.canDo 'component:getsource'\n        output.done new Error \"Runtime #{runtime.definition.id} cannot get sources\"\n        return\n      # Keep the context open\n      c.runtime =\n        rt: runtime\n        sources: {}\n      runtime.on 'component', handleMessage\n      output.done()\n      return\n    return unless input.hasData 'name'\n    # Requesting component sources\n    return unless c.runtime\n    name = input.getData 'name'\n    if c.runtime.sources[name]\n      # We already have this component cached\n      output.sendDone\n        source: c.runtime.sources[name]\n      return\n    # Request the sources from the runtime\n    c.runtime.rt.sendComponent 'getsource',\n      name: name\n    # Wait for response\n    rounds = 10\n    poll = ->\n      rounds--\n      if c.runtime.sources[name]\n        output.sendDone\n          source: c.runtime.sources[name]\n        return\n      unless rounds\n        output.done new Error \"Runtime didn't provide source for #{name} in time\"\n      setTimeout poll, 100\n    setTimeout poll, 100\n"},"runtime/ListComponents":{language:"coffeescript",source:"noflo = require 'noflo'\n\nonRuntimeConnected = null\nonRuntimeComponent = null\n\nsubscribe = (runtime, output) ->\n  requestListing = ->\n    return unless runtime.canDo 'protocol:component'\n    runtime.sendComponent 'list'\n  onRuntimeConnected = -> do requestListing\n  onRuntimeComponent = (message) ->\n    return unless message.command is 'component'\n    return if message.payload.name in ['Graph', 'ReadDocument']\n    definition =\n      name: message.payload.name\n      description: message.payload.description\n      icon: message.payload.icon\n      subgraph: message.payload.subgraph or false\n      runtime: message.payload.runtime or runtime.definition?.id\n      inports: message.payload.inPorts.slice(0).map (port) ->\n        port.name = port.id\n        delete port.id\n        return port\n      outports: message.payload.outPorts.slice(0).map (port) ->\n        port.name = port.id\n        delete port.id\n        return port\n    output.send\n      out:\n        componentDefinition: definition\n  runtime.on 'capabilities', onRuntimeConnected\n  runtime.on 'component', onRuntimeComponent\n  do requestListing if runtime.isConnected()\n\nunsubscribe = (runtime, context) ->\n  runtime.removeListener 'capabilities', onRuntimeConnected if onRuntimeConnected\n  runtime.removeListener 'component', onRuntimeComponent if onRuntimeComponent\n  onRuntimeConnected = null\n  onRuntimeComponent = null\n  context.deactivate()\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'List components available on a runtime'\n  c.inPorts.add 'runtime',\n    datatype: 'object'\n  c.outPorts.add 'out',\n    datatype: 'object'\n  c.outPorts.add 'error',\n    datatype: 'object'\n\n  c.runtime = null\n  c.tearDown = (callback) ->\n    unsubcribe c.runtime.rt, c.runtime.ctx if c.runtime\n    c.runtime = null\n    do callback\n  c.forwardBrackets = {}\n  c.process (input, output, context) ->\n    return unless input.hasData 'runtime'\n    runtime = input.getData 'runtime'\n    unsubscribe c.runtime.rt, c.runtime.ctx if c.runtime\n    c.runtime =\n      rt: runtime\n      ctx: context\n    subscribe c.runtime.rt, output\n"},"runtime/ListenNetwork":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Listen to a network on a runtime'\n  c.inPorts.add 'runtime',\n    datatype: 'object'\n    description: 'Runtime to listen from'\n  c.inPorts.add 'graph',\n    datatype: 'object'\n    description: 'Graph to listen to'\n  c.outPorts.add 'started',\n    datatype: 'object'\n  c.outPorts.add 'stopped',\n    datatype: 'object'\n  c.outPorts.add 'status',\n    datatype: 'object'\n  c.outPorts.add 'output',\n    datatype: 'object'\n  c.outPorts.add 'error',\n    datatype: 'object'\n  c.outPorts.add 'processerror',\n    datatype: 'object'\n  c.outPorts.add 'icon',\n    datatype: 'object'\n  c.outPorts.add 'packet',\n    datatype: 'object'\n\n  unsubscribe = (runtime) ->\n    return unless runtime\n    runtime.rt.removeListener 'network', runtime.listener\n    runtime.ctx.deactivate()\n\n  c.tearDown = (callback) ->\n    unsubscribe c.runtime if c.runtime\n    c.runtime = null\n    c.graph = null\n    do callback\n\n  c.forwardBrackets = {}\n  c.process (input, output, context) ->\n    if input.hasData 'graph'\n      # Updating the graph context to follow\n      c.graph = input.getData 'graph'\n      output.done()\n      return\n    if input.hasData 'runtime'\n      unsubscribe c.runtime if c.runtime\n      c.runtime =\n        rt: input.getData 'runtime'\n        ctx: context\n        listener: ({command, payload}) ->\n          if command is 'error'\n            output.send\n              error: payload\n            return\n\n          if payload.graph isnt c.graph?.name and payload.graph isnt c.graph?.properties?.id\n            # For non-errors we're not interested in events\n            # affecting other networks than the current one\n            return\n\n          if command in ['connect', 'begingroup', 'data', 'endgroup', 'disconnect']\n            # Special handling for packets\n            output.send\n              packet: new noflo.IP 'data',\n                edge: payload.id\n                src: payload.src\n                tgt: payload.tgt\n                type: command\n                group: if payload.group? then payload.group else ''\n                data: if payload.data? then payload.data else ''\n                subgraph: if payload.subgraph? then payload.subgraph else ''\n                runtime: c.runtime.rt.definition.id\n            return\n\n          return unless command in ['started', 'stopped', 'status', 'output', 'processerror', 'icon']\n          # Other supported runtime events, send to appropriate port\n          result = {}\n          result[command] = payload\n          output.send result\n          return\n\n      c.runtime.rt.on 'network', c.runtime.listener\n      return\n",tests:"noflo = require 'noflo'\nchai = require 'chai' unless chai\nBaseRuntime = require '../node_modules/fbp-protocol-client/lib/base'\npath = require 'path'\nbaseDir = path.resolve __dirname, '../'\n\ndescribe 'ListenNetwork component', ->\n  component = null\n  runtime = null\n  runtimeSocket = null\n  graphSocket = null\n  startedSocket = null\n  stoppedSocket = null\n  packetSocket = null\n  errorSocket = null\n  loader = null\n\n  before ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n  beforeEach (done) ->\n    loader.load 'runtime/ListenNetwork', (err, instance) ->\n      return done err if err\n      component = instance\n      runtime = new BaseRuntime\n        capabilities: [\n          'protocol:network'\n        ]\n      runtime.definition =\n        id: 123\n\n      runtimeSocket = noflo.internalSocket.createSocket()\n      component.inPorts.runtime.attach runtimeSocket\n\n      graphSocket = noflo.internalSocket.createSocket()\n      component.inPorts.graph.attach graphSocket\n\n      startedSocket = noflo.internalSocket.createSocket()\n      component.outPorts.started.attach startedSocket\n\n      stoppedSocket = noflo.internalSocket.createSocket()\n      component.outPorts.stopped.attach stoppedSocket\n\n      packetSocket = noflo.internalSocket.createSocket()\n      component.outPorts.packet.attach packetSocket\n\n      errorSocket = noflo.internalSocket.createSocket()\n      component.outPorts.error.attach errorSocket\n\n      done()\n\n  describe 'connection', ->\n    beforeEach ->\n      runtimeSocket.send runtime\n      graphSocket.send\n        name: 'foo'\n\n    it 'should notify error port on network errors', (done) ->\n      payload =\n        message: 'Something went wrong'\n      errorSocket.on 'data', (data) ->\n        chai.expect(data).to.eql payload\n        done()\n\n      runtime.emit 'network',\n        command: 'error'\n        payload: payload\n\n    it 'should notify started port when network starts', (done) ->\n      payload =\n        time: Date.now()\n        started: true\n        running: true\n        graph: 'foo'\n      startedSocket.on 'data', (data) ->\n        chai.expect(data).to.eql payload\n        done()\n\n      runtime.emit 'network',\n        command: 'started'\n        payload: payload\n\n    it 'shouldn\\'t notify started port when wrong network starts', (done) ->\n      payload =\n        time: Date.now()\n        started: true\n        running: true\n        graph: 'bar'\n      received = false\n      startedSocket.on 'data', (data) ->\n        received = true\n        done new Error 'Received non-expected started message'\n\n      setTimeout ->\n        chai.expect(received).to.equal false\n        done()\n      , 100\n\n      runtime.emit 'network',\n        command: 'started'\n        payload: payload\n\n    it 'should notify stopped port when network stops', (done) ->\n      payload =\n        time: Date.now()\n        started: true\n        running: false \n        graph: 'foo'\n      stoppedSocket.on 'data', (data) ->\n        chai.expect(data).to.eql payload\n        done()\n\n      runtime.emit 'network',\n        command: 'stopped'\n        payload: payload\n\n    it 'should notify packet port on network begingroups', (done) ->\n      payload =\n        id: 'Foo OUT -> IN Bar'\n        src:\n          node: 'Foo'\n          port: 'out'\n        tgt:\n          node: 'Bar'\n          port: 'in'\n        group: 'Hello'\n        graph: 'foo'\n      packetSocket.on 'data', (data) ->\n        chai.expect(data).to.eql\n          edge: payload.id\n          src: payload.src\n          tgt: payload.tgt\n          type: 'begingroup'\n          group: payload.group\n          data: ''\n          subgraph: ''\n          runtime: 123\n        done()\n\n      runtime.emit 'network',\n        command: 'begingroup'\n        payload: payload\n"},"runtime/ListenRuntime":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.inPorts.add 'runtime',\n    datatype: 'object'\n    description: 'FBP Runtime instance'\n  c.outPorts.add 'connected',\n    datatype: 'object'\n    description: 'FBP Runtime instance'\n  c.outPorts.add 'disconnected',\n    datatype: 'object'\n    description: 'Runtime connection error'\n  c.outPorts.add 'graph',\n    datatype: 'object'\n    description: 'Changes to runtime graph'\n\n  c.runtime = null\n  unsubscribe = ->\n    return unless c.runtime\n    c.runtime.rt.removeListener 'connected', c.runtime.onConnected\n    c.runtime.rt.removeListener 'disconnected', c.runtime.onDisconnected\n    c.runtime.rt.removeListener 'graph', c.runtime.onGraph\n    c.runtime.ctx.deactivate()\n    c.runtime = null\n  c.tearDown = (callback) ->\n    do unsubscribe\n    do callback\n\n  c.forwardBrackets = {}\n  c.process (input, output, context) ->\n    return unless input.hasData 'runtime'\n    c.runtime =\n      rt: input.getData 'runtime'\n      onConnected: ->\n        output.send\n          connected: c.runtime.rt\n      onDisconnected: ->\n        output.send\n          disconnected: c.runtime.rt\n      onGraph: (data) ->\n        output.send\n          graph: data\n      ctx: context\n    c.runtime.rt.on 'connected', c.runtime.onConnected\n    c.runtime.rt.on 'disconnected', c.runtime.onDisconnected\n    c.runtime.rt.on 'graph', c.runtime.onGraph\n",tests:"noflo = require 'noflo'\nchai = require 'chai' unless chai\nBaseRuntime = require '../node_modules/fbp-protocol-client/lib/base'\npath = require 'path'\nbaseDir = path.resolve __dirname, '../'\n\ndescribe 'ListenRuntime component', ->\n  component = null\n  runtime = null\n  runtimeSocket = null\n  connectedSocket = null\n  disconnectedSocket = null\n  graphSocket = null\n  loader = null\n\n  before ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n  beforeEach (done) ->\n    loader.load 'runtime/ListenRuntime', (err, instance) ->\n      return done err if err\n      component = instance\n      runtime = new BaseRuntime\n        capabilities: [\n          'protocol:runtime'\n          'protocol:graph'\n          'protocol:component'\n          'protocol:network'\n        ]\n\n      runtimeSocket = noflo.internalSocket.createSocket()\n      component.inPorts.runtime.attach runtimeSocket\n\n      connectedSocket = noflo.internalSocket.createSocket()\n      component.outPorts.connected.attach connectedSocket\n\n      disconnectedSocket = noflo.internalSocket.createSocket()\n      component.outPorts.disconnected.attach disconnectedSocket\n\n      graphSocket = noflo.internalSocket.createSocket()\n      component.outPorts.graph.attach graphSocket\n      done()\n\n  describe 'instantiation', ->\n    it 'should have a \"runtime\" inport', ->\n      chai.expect(component.inPorts.runtime).to.be.an 'object'\n\n    it 'should have a \"connected\" outport', ->\n      chai.expect(component.outPorts.connected).to.be.an 'object'\n\n    it 'should have a \"disconnected\" outport', ->\n      chai.expect(component.outPorts.disconnected).to.be.an 'object'\n\n    it 'should have a \"graph\" outport', ->\n      chai.expect(component.outPorts.graph).to.be.an 'object'\n\n  describe 'connection', ->\n    beforeEach ->\n      runtimeSocket.send runtime\n\n    it 'should notify connected port when runtime connects', (done) ->\n      connectedSocket.once 'data', (data) ->\n        chai.expect(data).to.equal runtime\n        done()\n\n      runtime.emit 'connected'\n\n    it 'should notify disconnected port when runtime disconnects', (done) ->\n      disconnectedSocket.once 'data', (data) ->\n        chai.expect(data).to.equal runtime\n        done()\n\n      runtime.emit 'disconnected'\n\n    it 'should notify graph port when receiving graph event', (done) ->\n      graphEvent =\n        command: 'addnode'\n        payload:\n          component: 'core/Merge'\n          graph: '123abc'\n          id: 'component1'\n          metadata:\n            x: 0\n            y: 0\n\n      graphSocket.once 'data', (data) ->\n        chai.expect(data).to.equal graphEvent\n        done()\n\n      runtime.emit 'graph', graphEvent\n"},"runtime/SendComponent":{language:"coffeescript",source:"noflo = require 'noflo'\n\nsendComponent = (component, runtime, callback) ->\n  unless component.code\n    return callback new Error \"No code available for component #{component.name}\"\n\n  # Check for platform-specific components\n  runtimeType = component.code.match /@runtime ([a-z\\-]+)/\n  if runtimeType\n    unless runtimeType[1] in ['all', runtime.definition.type]\n      return callback new Error \"Component type #{runtimeType} doesn't match runtime type #{runtime.definition.type}\"\n\n  unless runtime.canDo 'component:setsource'\n    return callback new Error 'Runtime doesn\\'t support setsource'\n\n  runtime.sendComponent 'source',\n    name: component.name\n    language: component.language\n    library: component.project or component.library\n    code: component.code\n    tests: component.tests\n\n  do callback\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.inPorts.add 'component',\n    datatype: 'object'\n  c.inPorts.add 'runtime',\n    datatype: 'object'\n    control: true\n  c.outPorts.add 'out',\n    datatype: 'object'\n  c.outPorts.add 'error',\n    datatype: 'object'\n\n  c.process (input, output) ->\n    return unless input.hasData 'component', 'runtime'\n    [component, runtime] = input.getData 'component', 'runtime'\n    unless runtime.canDo\n      output.done new Error 'Incorrect runtime instance'\n      return\n\n    if runtime.isConnected()\n      sendComponent component, runtime, (err) ->\n        if err\n          output.done err\n          return\n        output.sendDone\n          out: component\n      return\n\n    runtime.once 'capabilities', ->\n      sendComponent component, runtime, (err) ->\n        if err\n          output.done err\n          return\n        output.sendDone\n          out: component\n"},"runtime/SendEdges":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Send edges selected by user to runtime'\n  c.inPorts.add 'edges',\n    datatype: 'array'\n  c.inPorts.add 'runtime',\n    datatype: 'object'\n  c.inPorts.add 'graph',\n    datatype: 'object'\n  c.outPorts.add 'out',\n    datatype: 'array'\n  c.outPorts.add 'error',\n    datatype: 'object'\n\n  c.process (input, output) ->\n    return unless input.hasData 'edges', 'runtime', 'graph'\n    [edges, runtime, graph] = input.getData 'edges', 'runtime', 'graph'\n    unless runtime?.canDo\n      # Pass-through\n      output.sendDone\n        out: edges\n      return\n    unless runtime.isConnected()\n      # Pass-through since there is no connection\n      output.sendDone\n        out: edges\n      return\n    runtime.sendNetwork 'edges',\n      edges: edges.map (edge) ->\n        e =\n          src: edge.src or edge.from\n          tgt: edge.tgt or edge.to\n        return e\n      graph: graph.name or graph.properties?.id\n    output.sendDone\n      out: edges\n"},"runtime/SendGraphChanges":{language:"coffeescript",source:"noflo = require 'noflo'\n\n# @runtime all\n\nconvertEvent = (graph, event, data) ->\n  msg =\n    command: event.toLowerCase()\n    payload: {}\n  switch event\n    when 'renameNode', 'renameInport', 'renameOutport', 'renameGroup'\n      msg.payload =\n        from: data[0]\n        to: data[1]\n    when 'addEdge', 'removeEdge', 'changeEdge', 'addInitial'\n      msg.payload =\n        src: data[0].from\n        tgt: data[0].to\n        metadata: data[0].metadata\n    when 'removeInitial'\n      msg.payload =\n        tgt: data[0].to\n    when 'addInport', 'addOutport'\n      msg.payload =\n        public: data[0]\n        node: data[1].process\n        port: data[1].port\n        metadata: data[1].metadata\n    when 'removeInport', 'removeOutport'\n      msg.payload =\n        public: data[0]\n    else\n      msg.payload = data[0]\n  msg.payload.graph = graph.name or graph.properties?.id\n  return msg\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.inPorts.add 'runtime',\n    datatype: 'object'\n    description: 'FBP Runtime instance'\n  c.inPorts.add 'graph',\n    datatype: 'object'\n    description: 'Graph to listen to'\n  c.outPorts.add 'queued',\n    datatype: 'int'\n    description: 'Number of changes in queue'\n  c.outPorts.add 'sent',\n    datatype: 'bang'\n    description: 'Notification that changes have been transmitted'\n  c.outPorts.add 'error',\n    datatype: 'object'\n\n  events = [\n    'addNode'\n    'removeNode'\n    'renameNode'\n    'changeNode'\n    'addEdge'\n    'removeEdge'\n    'changeEdge'\n    'addInitial'\n    'removeInitial'\n    'addInport'\n    'removeInport'\n    'renameInport'\n    'addOutport'\n    'removeOutport'\n    'renameOutport'\n    'addGroup'\n    'removeGroup'\n    'renameGroup'\n    'changeGroup'\n  ]\n\n  c.current = null\n  unsubscribe = ->\n    return unless c.current\n    for event in events\n      c.current.graph.removeListener event, c.current[event]\n    c.current.graph.removeListener 'endTransaction', c.current.endTransaction\n    c.current.ctx.deactivate()\n    c.current = null\n  c.tearDown = (callback) ->\n    do unsubscribe\n    do callback\n\n  c.process (input, output, context) ->\n    return unless input.hasData 'runtime', 'graph'\n    [runtime, graph] = input.getData 'runtime', 'graph'\n    do unsubscribe\n\n    unless runtime.canDo 'protocol:graph'\n      output.done new Error \"Runtime #{@runtime.definition.id} cannot update graphs\"\n      return\n\n    c.current =\n      graph: graph\n      rt: runtime\n      ctx: context\n      changes: []\n\n    events.forEach (event) ->\n      # Convert fbp-graph event name to fbp-protocol command\n      c.current[event] = (args...) ->\n        return unless c.current.graph is graph\n        c.current.changes.push convertEvent graph, event, args\n        output.send\n          queued: c.current.changes.length\n      graph.on event, c.current[event]\n\n    c.current.endTransaction = ->\n      return unless c.current.graph is graph\n      while c.current.changes.length\n        change = c.current.changes.shift()\n        c.current.rt.sendGraph change.command, change.payload\n      output.send\n        queued: c.current.changes.length\n      output.send\n        sent: true\n    graph.on 'endTransaction', c.current.endTransaction\n    return\n",tests:"noflo = require 'noflo'\nchai = require 'chai' unless chai\nBaseRuntime = require '../node_modules/fbp-protocol-client/lib/base'\npath = require 'path'\nbaseDir = path.resolve __dirname, '../'\n\ndescribe 'SendGraphChanges component', ->\n  component = null\n  graph = null\n  runtime = null\n  runtimeSocket = null\n  graphSocket = null\n  queuedSocket = null\n  sentSocket = null\n  errorSocket = null\n  loader = null\n\n  before ->\n    @timeout 4000\n    loader = new noflo.ComponentLoader baseDir\n  beforeEach (done) ->\n    loader.load 'runtime/SendGraphChanges', (err, instance) ->\n      return done err if err\n      component = instance\n      runtime = new BaseRuntime\n        capabilities: [\n          'protocol:graph'\n        ]\n\n      runtimeSocket = noflo.internalSocket.createSocket()\n      component.inPorts.runtime.attach runtimeSocket\n\n      graphSocket = noflo.internalSocket.createSocket()\n      component.inPorts.graph.attach graphSocket\n\n      queuedSocket = noflo.internalSocket.createSocket()\n      component.outPorts.queued.attach queuedSocket\n\n      sentSocket = noflo.internalSocket.createSocket()\n      component.outPorts.sent.attach sentSocket\n\n      errorSocket = noflo.internalSocket.createSocket()\n      component.outPorts.error.attach errorSocket\n\n      graph = new noflo.Graph 'hello'\n\n      done()\n\n  describe 'with a runtime and a graph', ->\n    beforeEach ->\n      runtimeSocket.send runtime\n      graphSocket.send graph\n\n    it 'should queue an addNode event', (done) ->\n      errorSocket.on 'data', (data) ->\n        done data\n      queuedSocket.on 'data', (data) ->\n        chai.expect(data).to.equal 1\n        done()\n      graph.addNode 'test', 'core/Split'\n    it 'should send queued events on endTransaction', (done) ->\n      queued = [\n        1\n        2\n        3\n        0\n      ]\n      errorSocket.on 'data', (data) ->\n        done data\n      queuedSocket.on 'data', (data) ->\n        chai.expect(data).to.equal queued.shift()\n      sentSocket.on 'data', ->\n        chai.expect(queued.length).to.equal 0\n        done()\n      graph.startTransaction 'foo'\n      graph.addNode 'sender', 'core/Split'\n      graph.addNode 'receiver', 'core/Split'\n      graph.addEdge 'sender', 'out', 'receiver', 'in'\n      graph.endTransaction 'foo'\n"},"runtime/SendGraph":{language:"coffeescript",source:"noflo = require 'noflo'\nconnection = require '../src/connection'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.inPorts.add 'graph',\n    datatype: 'object'\n  c.inPorts.add 'runtime',\n    datatype: 'object'\n    control: true\n  c.outPorts.add 'out',\n    datatype: 'object'\n  c.outPorts.add 'error',\n    datatype: 'object'\n\n  c.process (input, output) ->\n    return unless input.hasData 'graph', 'runtime'\n    [graph, runtime] = input.getData 'graph', 'runtime'\n    unless runtime.canDo\n      output.done new Error 'Incorrect runtime instance'\n      return\n\n    if runtime.isConnected()\n      connection.sendGraph graph, runtime, (err) ->\n        if err\n          output.done err\n          return\n        output.sendDone\n          out: graph\n      return\n\n    runtime.once 'capabilities', ->\n      connection.sendGraph graph, runtime, (err) ->\n        if err\n          output.done err\n          return\n        output.sendDone\n          out: graph\n",tests:"noflo = require 'noflo'\nchai = require 'chai' unless chai\nSendGraph = require '../components/SendGraph.coffee'\n\ndescribe 'SendGraph component', ->\n  c = null\n  url = null\n  beforeEach ->\n    c = SendGraph.getComponent()\n    out = noflo.internalSocket.createSocket()\n    c.outPorts.out.attach out\n\n  describe 'when instantiated', ->\n    it 'should have a \"graph\" inport', ->\n      chai.expect(c.inPorts.graph).to.be.an 'object'\n    it 'should have a \"runtime\" inport', ->\n      chai.expect(c.inPorts.runtime).to.be.an 'object'\n    it 'should have a \"out\" outport', ->\n      chai.expect(c.outPorts.out).to.be.an 'object'\n    it 'should have a \"error\" outport', ->\n      chai.expect(c.outPorts.error).to.be.an 'object'\n"},"strings/Base64Encode":{language:"javascript",source:"const noflo = require('noflo');\n\nlet btoa;\nif (!noflo.isBrowser()) {\n  // eslint-disable-next-line global-require\n  btoa = require('btoa');\n} else {\n  ({\n    btoa,\n  } = window);\n}\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n  c.description = 'This component receives strings or Buffers and sends them out Base64-encoded';\n\n  c.inPorts.add('in', {\n    datatype: 'all',\n    description: 'Buffer or string to encode',\n  });\n  c.outPorts.add('out', {\n    datatype: 'string',\n    description: 'Encoded input',\n  });\n\n  c.forwardBrackets = {};\n  return c.process((input, output) => {\n    if (!input.hasStream('in')) { return; }\n    const stream = input.getStream('in');\n\n    const brackets = [];\n    let string = '';\n    stream.forEach((packet) => {\n      if (packet.type === 'openBracket') {\n        brackets.push(packet.data);\n        return;\n      }\n      if (packet.type === 'data') {\n        if (!noflo.isBrowser() && packet.data instanceof Buffer) {\n          string += packet.data.toString('utf-8');\n          return;\n        }\n        string += packet.data;\n      }\n    });\n\n    brackets.forEach((bracket) => {\n      output.send({ out: new noflo.IP('openBracket', bracket) });\n    });\n    output.send({ out: btoa(string) });\n    brackets.reverse();\n    brackets.forEach((bracket) => {\n      output.send({ out: new noflo.IP('closeBracket', bracket) });\n    });\n    output.done();\n  });\n};\n",tests:"describe('Base64Encode component', () => {\n  let c = null;\n  let ins = null;\n  let out = null;\n\n  before(function () {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('strings/Base64Encode')\n      .then((instance) => {\n        c = instance;\n        ins = noflo.internalSocket.createSocket();\n        c.inPorts.in.attach(ins);\n      });\n  });\n\n  beforeEach(() => {\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n  });\n\n  afterEach(() => {\n    c.outPorts.out.detach(out);\n    out = null;\n  });\n\n  describe('when instantiated', () => {\n    it('should have an input port', () => chai.expect(c.inPorts.in).to.be.an('object'));\n    it('should have an output port', () => chai.expect(c.outPorts.out).to.be.an('object'));\n  });\n\n  describe('encoding', () => {\n    it('test encoding a string', (done) => {\n      const packets = ['SGVsbG8sIFdvcmxkIQ=='];\n\n      out.on('data', (data) => chai.expect(packets.shift()).to.deep.equal(data));\n      out.on('disconnect', () => {\n        chai.expect(packets.length).to.equal(0);\n        done();\n      });\n\n      ins.connect();\n      ins.send('Hello, World!');\n      ins.disconnect();\n    });\n\n    it('test encoding set of strings', (done) => {\n      const packets = ['SGVsbG8sIFdvcmxkIQ=='];\n\n      out.on('data', (data) => chai.expect(packets.shift()).to.deep.equal(data));\n      out.on('disconnect', () => {\n        chai.expect(packets.length).to.equal(0);\n        done();\n      });\n\n      ins.connect();\n      ins.beginGroup('stream');\n      ins.send('Hello, ');\n      ins.send('World');\n      ins.send('!');\n      ins.endGroup();\n      ins.disconnect();\n    });\n\n    it('test encoding a buffer', (done) => {\n      if (noflo.isBrowser()) {\n        done();\n        return;\n      }\n      const packets = ['SGVsbG8sIFdvcmxkIQ=='];\n\n      out.on('data', (data) => chai.expect(packets.shift()).to.deep.equal(data));\n      out.on('disconnect', () => {\n        chai.expect(packets.length).to.equal(0);\n        done();\n      });\n\n      ins.connect();\n      ins.send(Buffer.from('Hello, World!'));\n      ins.disconnect();\n    });\n  });\n});\n"},"strings/CompileString":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n  c.description = 'Concatenate received strings with the given delimiter at the end of a stream';\n\n  c.inPorts.add('delimiter', {\n    datatype: 'string',\n    description: 'String used to concatenate input strings',\n    default: '\\n',\n    control: true,\n  });\n  c.inPorts.add('in', {\n    datatype: 'string',\n    description: 'Strings to concatenate (one per IP)',\n  });\n  c.outPorts.add('out', {\n    datatype: 'string',\n    description: 'Concatenation of input strings',\n  });\n\n  c.forwardBrackets = {};\n  return c.process((input, output) => {\n    if (!input.hasStream('in')) { return; }\n    const stream = input.getStream('in');\n\n    const brackets = [];\n    const strings = [];\n    stream.forEach((packet) => {\n      if (packet.type === 'openBracket') {\n        brackets.push(packet.data);\n        return;\n      }\n      if (packet.type === 'data') {\n        strings.push(packet.data);\n      }\n    });\n\n    const delimiter = input.has('delimiter') ? input.getData('delimiter') : '\\n';\n    brackets.forEach((bracket) => {\n      output.send({ out: new noflo.IP('openBracket', bracket) });\n    });\n    output.send({ out: strings.join(delimiter) });\n    brackets.reverse();\n    brackets.forEach((bracket) => {\n      output.send({ out: new noflo.IP('closeBracket', bracket) });\n    });\n    output.done();\n  });\n};\n",tests:"describe('CompileString component', () => {\n  let c = null;\n  let ins = null;\n  let delim = null;\n  let out = null;\n\n  before(function () {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('strings/CompileString')\n      .then((instance) => {\n        c = instance;\n        ins = noflo.internalSocket.createSocket();\n        delim = noflo.internalSocket.createSocket();\n        c.inPorts.in.attach(ins);\n        c.inPorts.delimiter.attach(delim);\n      });\n  });\n\n  beforeEach(() => {\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n  });\n  afterEach(() => {\n    c.outPorts.out.detach(out);\n    out = null;\n  });\n\n  describe('when instantiated', () => {\n    it('should have an input port', () => {\n      chai.expect(c.inPorts.in).to.be.an('object');\n      chai.expect(c.inPorts.delimiter).to.be.an('object');\n    });\n    it('should have an output port', () => chai.expect(c.outPorts.out).to.be.an('object'));\n  });\n\n  describe('compiling a string', () => {\n    it('single string should be returned as-is', (done) => {\n      const packets = ['foo'];\n\n      out.on('data', (data) => chai.expect(packets.shift()).to.deep.equal(data));\n      out.on('disconnect', () => {\n        chai.expect(packets.length).to.equal(0);\n        done();\n      });\n\n      ins.connect();\n      ins.send('foo');\n      ins.disconnect();\n    });\n\n    it('two strings should be returned together', (done) => {\n      const packets = ['foobar'];\n\n      out.on('data', (data) => chai.expect(packets.shift()).to.deep.equal(data));\n      out.on('disconnect', () => {\n        chai.expect(packets.length).to.equal(0);\n        done();\n      });\n\n      delim.send('');\n\n      ins.connect();\n      ins.beginGroup(1);\n      ins.send('foo');\n      ins.send('bar');\n      ins.endGroup();\n      ins.disconnect();\n    });\n\n    it('delimiter should be between the strings', (done) => {\n      const packets = ['foo-bar'];\n\n      out.on('data', (data) => chai.expect(packets.shift()).to.deep.equal(data));\n      out.on('disconnect', () => {\n        chai.expect(packets.length).to.equal(0);\n        done();\n      });\n\n      delim.send('-');\n\n      ins.connect();\n      ins.beginGroup(2);\n      ins.send('foo');\n      ins.send('bar');\n      ins.endGroup();\n      ins.disconnect();\n    });\n  });\n});\n"},"strings/ConvertEncoding":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n  c.description = 'Convert a string or a buffer from one encoding to another. Default from UTF-8 to Base64';\n\n  c.inPorts.add('in', {\n    datatype: 'all',\n    description: 'Buffer or string to be converted',\n  });\n  c.inPorts.add('from', {\n    datatype: 'string',\n    description: 'Input encoding',\n    default: 'utf8',\n    control: true,\n  });\n  c.inPorts.add('to', {\n    datatype: 'string',\n    description: 'Output encoding',\n    default: 'base64',\n    control: true,\n  });\n  c.outPorts.add('out', {\n    datatype: 'string',\n    description: 'Converted string',\n  });\n\n  return c.process((input, output) => {\n    if (!input.has('in')) { return; }\n\n    const from = input.has('from') ? input.getData('from') : 'utf8';\n    const to = input.has('to') ? input.getData('to') : 'base64';\n\n    const data = input.get('in');\n    if (data.type !== 'data') { return; }\n\n    let result = '';\n    if (data.data instanceof Buffer) {\n      result += data.data.toString(from);\n    } else if (typeof data.data === 'string') {\n      result += Buffer.from(data.data, from).toString();\n    }\n\n    output.sendDone({ out: Buffer.from(result).toString(to) });\n  });\n};\n",tests:"describe('ConvertEncoding component', () => {\n  let c = null;\n  let from = null;\n  let to = null;\n  let ins = null;\n  let out = null;\n  before(function () {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('strings/ConvertEncoding')\n      .then((instance) => {\n        c = instance;\n        from = noflo.internalSocket.createSocket();\n        to = noflo.internalSocket.createSocket();\n        ins = noflo.internalSocket.createSocket();\n        c.inPorts.from.attach(from);\n        c.inPorts.to.attach(to);\n        c.inPorts.in.attach(ins);\n      });\n  });\n  beforeEach(() => {\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n  });\n  afterEach(() => {\n    c.outPorts.out.detach(out);\n    out = null;\n  });\n\n  describe('converting UTF-8 to Base64', () => it('should send the expected value', (done) => {\n    const packets = ['SGVsbG8sIFdvcmxkIQ=='];\n\n    out.on('data', (data) => chai.expect(packets.shift()).to.equal(data));\n    out.on('disconnect', () => {\n      chai.expect(packets.length).to.equal(0);\n      done();\n    });\n\n    from.send('utf8');\n    to.send('base64');\n    ins.connect();\n    ins.send('Hello, World!');\n    ins.disconnect();\n  }));\n\n  describe('converting Base64 to UTF-8', () => it('should send the expected value', (done) => {\n    const packets = ['Hello, World!'];\n\n    out.on('data', (data) => chai.expect(packets.shift()).to.equal(data));\n    out.on('disconnect', () => {\n      chai.expect(packets.length).to.equal(0);\n      done();\n    });\n\n    from.send('base64');\n    to.send('utf8');\n    ins.connect();\n    ins.send('SGVsbG8sIFdvcmxkIQ==');\n    ins.disconnect();\n  }));\n});\n"},"strings/EscapeQuotes":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n  c.description = 'Escape all quotes in a string';\n\n  c.inPorts.add('in', {\n    datatype: 'string',\n    description: 'String to escape quotes from',\n  });\n  c.outPorts.add('out', {\n    datatype: 'string',\n    description: 'Escaped string',\n  });\n\n  return c.process((input, output) => {\n    const data = input.getData('in');\n    output.sendDone({ out: data.replace(/\"/g, '\\\\\"') });\n  });\n};\n",tests:"describe('EscapeQuotes component', () => {\n  let c = null;\n  let ins = null;\n  let out = null;\n  before(function () {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('strings/EscapeQuotes')\n      .then((instance) => {\n        c = instance;\n        ins = noflo.internalSocket.createSocket();\n        c.inPorts.in.attach(ins);\n      });\n  });\n  beforeEach(() => {\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n  });\n  afterEach(() => {\n    c.outPorts.out.detach(out);\n    out = null;\n  });\n\n  describe('receiving a string without quotes', () => it('should send it as-is', (done) => {\n    const packets = ['Hello World'];\n\n    out.on('data', (data) => chai.expect(packets.shift()).to.equal(data));\n    out.on('disconnect', () => {\n      chai.expect(packets.length).to.equal(0);\n      done();\n    });\n\n    ins.connect();\n    ins.send('Hello World');\n    ins.disconnect();\n  }));\n\n  describe('escaping quotes in a string', () => it('should send the expected value', (done) => {\n    const packets = ['Hello \\\\\"World\\\\\"'];\n\n    out.on('data', (data) => chai.expect(packets.shift()).to.equal(data));\n    out.on('disconnect', () => {\n      chai.expect(packets.length).to.equal(0);\n      done();\n    });\n\n    ins.connect();\n    ins.send('Hello \"World\"');\n    ins.disconnect();\n  }));\n});\n"},"strings/Filter":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n  c.description = 'filters an IP which is a string using a regex';\n\n  c.inPorts.add('in', {\n    datatype: 'string',\n    description: 'String to filter',\n  });\n  c.inPorts.add('pattern', {\n    datatype: 'string',\n    description: 'String representation of a regexp used as filter',\n    control: true,\n    required: true,\n  });\n  c.outPorts.add('out', {\n    datatype: 'string',\n    description: 'String passing the filter',\n  });\n  c.outPorts.add('missed', {\n    datatype: 'string',\n    description: 'String failing the filter',\n  });\n\n  c.forwardBrackets = { in: ['out', 'missed'] };\n\n  return c.process((input, output) => {\n    if (!input.has('in', 'pattern')) { return; }\n    let data = input.getData('in');\n    if (!data) { return; }\n\n    const regex = new RegExp(input.getData('pattern'));\n\n    if (typeof data !== 'string') {\n      data = (data).toString();\n    }\n\n    if ((regex != null) && (data.match && data.match(regex))) {\n      output.sendDone({ out: data });\n      return;\n    }\n    output.sendDone({ missed: data });\n  });\n};\n",tests:"describe('Filter component', () => {\n  let c = null;\n  let pattern = null;\n  let ins = null;\n  let out = null;\n  before(function () {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('strings/Filter')\n      .then((instance) => {\n        c = instance;\n        pattern = noflo.internalSocket.createSocket();\n        ins = noflo.internalSocket.createSocket();\n        c.inPorts.pattern.attach(pattern);\n        c.inPorts.in.attach(ins);\n      });\n  });\n  beforeEach(() => {\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n  });\n  afterEach(() => {\n    c.outPorts.out.detach(out);\n    out = null;\n  });\n\n  describe('with a given pattern', () => it('should only send unfiltered data IPs', (done) => {\n    const expected = [\n      'abc',\n      'a24c',\n    ];\n    out.on('data', (data) => {\n      chai.expect(data).to.eql(expected.shift());\n      if (expected.length) { return; }\n      done();\n    });\n    pattern.send('a.+c');\n    ins.send('abc');\n    ins.send('125c');\n    ins.send('a24c');\n    ins.disconnect();\n  }));\n});\n"},"strings/Jsonify":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n  c.description = 'JSONify all incoming, unless a raw flag is set to exclude data packets that are pure strings';\n\n  c.inPorts.add('in', {\n    datatype: 'object',\n    description: 'Object to convert into a JSON representation',\n  });\n  c.inPorts.add('raw', {\n    datatype: 'boolean',\n    description: 'Whether to send strings as is',\n    default: false,\n    control: true,\n  });\n  c.inPorts.add('pretty', {\n    datatype: 'boolean',\n    description: 'Make JSON output pretty',\n    default: false,\n    control: true,\n  });\n  c.outPorts.add('out', {\n    datatype: 'string',\n    description: 'JSON representation of the input object',\n  });\n\n  return c.process((input, output) => {\n    if (!input.has('in')) { return; }\n    const data = input.getData('in');\n    if (!data) { return; }\n\n    let raw = false;\n    if (input.has('raw')) {\n      raw = String(input.getData('raw')) === 'true';\n    }\n    let pretty = false;\n    if (input.has('pretty')) {\n      pretty = String(input.getData('pretty')) === 'true';\n    }\n\n    if (raw && (typeof data === 'string')) {\n      output.sendDone({ out: data });\n      return;\n    }\n\n    if (pretty) {\n      output.sendDone({ out: JSON.stringify(data, null, 4) });\n      return;\n    }\n\n    output.sendDone({ out: JSON.stringify(data) });\n  });\n};\n",tests:"describe('Jsonify component', () => {\n  let c = null;\n  let ins = null;\n  let raw = null;\n  let pretty = null;\n  let out = null;\n  before(function () {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('strings/Jsonify')\n      .then((instance) => {\n        c = instance;\n        ins = noflo.internalSocket.createSocket();\n        c.inPorts.in.attach(ins);\n        raw = noflo.internalSocket.createSocket();\n        c.inPorts.raw.attach(raw);\n        pretty = noflo.internalSocket.createSocket();\n        c.inPorts.pretty.attach(pretty);\n      });\n  });\n  beforeEach(() => {\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n  });\n  afterEach(() => {\n    c.outPorts.out.detach(out);\n    out = null;\n  });\n\n  describe('JSONifying an object', () => {\n    let fixture = null;\n    beforeEach(() => {\n      fixture = {\n        hello: 'World',\n        foo: [1, 2],\n      };\n    });\n\n    describe('with default settings', () => it('should send the expected JSON string', (done) => {\n      const expected = [\n        JSON.stringify(fixture),\n      ];\n      const received = [];\n\n      out.on('data', (data) => received.push(data));\n      out.on('disconnect', () => {\n        chai.expect(received).to.eql(expected);\n        done();\n      });\n\n      ins.connect();\n      ins.send(fixture);\n      ins.disconnect();\n    }));\n\n    describe('with pretty setting', () => it('should send the expected JSON string', (done) => {\n      const expected = [\n        JSON.stringify(fixture, null, 4),\n      ];\n      const received = [];\n\n      out.on('data', (data) => received.push(data));\n      out.on('disconnect', () => {\n        chai.expect(received).to.eql(expected);\n        done();\n      });\n\n      pretty.send(true);\n      ins.connect();\n      ins.send(fixture);\n      ins.disconnect();\n    }));\n  });\n\n  describe('JSONifying a string', () => {\n    let fixture = null;\n    beforeEach(() => {\n      fixture = 'Hello World!';\n    });\n\n    describe('with default settings', () => it('should send the expected JSON string', (done) => {\n      const expected = [\n        JSON.stringify(fixture),\n      ];\n      const received = [];\n\n      out.on('data', (data) => received.push(data));\n      out.on('disconnect', () => {\n        chai.expect(received).to.eql(expected);\n        done();\n      });\n\n      ins.connect();\n      ins.send(fixture);\n      ins.disconnect();\n    }));\n\n    describe('with raw setting', () => it('should send the expected JSON string', (done) => {\n      const expected = [\n        fixture,\n      ];\n      const received = [];\n\n      out.on('data', (data) => received.push(data));\n      out.on('disconnect', () => {\n        chai.expect(received).to.eql(expected);\n        done();\n      });\n\n      raw.send(true);\n      ins.connect();\n      ins.send(fixture);\n      ins.disconnect();\n    }));\n  });\n});\n"},"strings/MatchReplace":{language:"javascript",source:"const noflo = require('noflo');\nconst _ = require('underscore');\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n  c.description = 'Replace string packets using a dictionary';\n\n  c.inPorts.add('in',\n    { datatype: 'string' });\n  c.inPorts.add('match', {\n    datatype: 'object',\n    description: 'Dictionary object with key matching the input object and value being the replacement item',\n    control: true,\n    required: true,\n  });\n  c.outPorts.add('out',\n    { datatype: 'string' });\n\n  return c.process((input, output) => {\n    if (!input.has('in', 'match')) { return; }\n    const match = input.getData('match');\n    if (!match) { return; }\n    if (!_.isObject(match)) { return; }\n\n    let string = input.getData('in');\n    if (!string) { return; }\n\n    const matches = {};\n    let matchKeys = [];\n    Object.keys(match).forEach((fromMatch) => {\n      const toMatch = match[fromMatch];\n      matches[fromMatch.toString()] = toMatch.toString();\n    });\n    matchKeys = _.keys(matches);\n\n    const matchKeyIndex = matchKeys.indexOf(string.toString());\n\n    if (matchKeyIndex > -1) {\n      string = matches[matchKeys[matchKeyIndex]];\n    }\n\n    output.sendDone({ out: string });\n  });\n};\n",tests:"describe('MatchReplace component', () => {\n  let c = null;\n  let match = null;\n  let ins = null;\n  let out = null;\n  before(function () {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('strings/MatchReplace')\n      .then((instance) => {\n        c = instance;\n        match = noflo.internalSocket.createSocket();\n        ins = noflo.internalSocket.createSocket();\n        c.inPorts.match.attach(match);\n        c.inPorts.in.attach(ins);\n      });\n  });\n  beforeEach(() => {\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n  });\n  afterEach(() => {\n    c.outPorts.out.detach(out);\n    out = null;\n  });\n\n  describe('with a given rule', () => it('should provide an array containing potential matches', (done) => {\n    const expected = [\n      'b4',\n      'c5',\n    ];\n    out.on('data', (data) => {\n      chai.expect(data).to.eql(expected.shift());\n      if (expected.length) { return; }\n      done();\n    });\n    match.send({\n      a1: 'a2',\n      b3: 'b4',\n    });\n    ins.send('b3');\n    ins.send('c5');\n    ins.disconnect();\n  }));\n});\n"},"strings/LowerCaseString":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n  c.description = 'toLowerCase on all incoming IPs (assuming they are strings)';\n\n  c.inPorts.add('in', {\n    datatype: 'string',\n    description: 'Mixed-case string',\n  });\n  c.outPorts.add('out', {\n    datatype: 'string',\n    description: 'All-lowercase string',\n  });\n\n  return c.process((input, output) => {\n    const data = input.getData('in');\n    if (!data) { return; }\n\n    output.sendDone({ out: data.toLowerCase() });\n  });\n};\n",tests:"describe('LowerCaseString component', () => {\n  let c = null;\n  let ins = null;\n  let out = null;\n  before(function () {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('strings/LowerCaseString')\n      .then((instance) => {\n        c = instance;\n        ins = noflo.internalSocket.createSocket();\n        c.inPorts.in.attach(ins);\n      });\n  });\n  beforeEach(() => {\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n  });\n  afterEach(() => {\n    c.outPorts.out.detach(out);\n  });\n\n  describe('receiving a mixed-case string', () => it('should lowercase it', (done) => {\n    out.on('data', (data) => {\n      chai.expect(data).to.equal('hello, world!');\n      done();\n    });\n\n    ins.connect();\n    ins.send('Hello, World!');\n    ins.disconnect();\n  }));\n});\n"},"strings/ParseFloat":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n  c.description = 'Parse a string to a float';\n  c.inPorts.add('in', {\n    datatype: 'string',\n    description: 'String to parse as Float representation',\n  });\n  c.outPorts.add('out', {\n    datatype: 'number',\n    description: 'Parsed number',\n  });\n\n  return c.process((input, output) => {\n    const data = input.getData('in');\n    output.sendDone({ out: parseFloat(data) });\n  });\n};\n",tests:"describe('ParseFloat component', () => {\n  let c = null;\n  let ins = null;\n  let out = null;\n  before(function () {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('strings/ParseFloat')\n      .then((instance) => {\n        c = instance;\n        ins = noflo.internalSocket.createSocket();\n        c.inPorts.in.attach(ins);\n      });\n  });\n  beforeEach(() => {\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n  });\n  afterEach(() => {\n    c.outPorts.out.detach(out);\n    out = null;\n  });\n\n  describe('with 42px', () => it('should return 42', (done) => {\n    out.on('data', (data) => {\n      chai.expect(data).to.equal(42);\n      done();\n    });\n    ins.send('42px');\n    ins.disconnect();\n  }));\n  describe('with \"0.12345\"', () => it('should return 0.12345', (done) => {\n    out.on('data', (data) => {\n      chai.expect(data).to.equal(0.12345);\n      done();\n    });\n    ins.send('0.12345');\n    ins.disconnect();\n  }));\n  describe('with qgpowqpo', () => it('should return NaN', (done) => {\n    out.on('data', (data) => {\n      chai.expect(data).to.eql(NaN);\n      done();\n    });\n    ins.send('qgpowqpo');\n    ins.disconnect();\n  }));\n});\n"},"strings/ParseInt":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n  c.description = 'Parse a string to an integer';\n  c.inPorts.add('in', {\n    datatype: 'string',\n    description: 'String to parse as int representation',\n  });\n  c.inPorts.add('base', {\n    datatype: 'number',\n    description: 'Base used to parse the string representation',\n    control: true,\n    default: 10,\n  });\n  c.outPorts.add('out', {\n    datatype: 'number',\n    description: 'Parsed number',\n  });\n\n  return c.process((input, output) => {\n    if (!input.has('in')) { return; }\n    const data = input.getData('in');\n\n    const base = input.has('base') ? input.getData('base') : 10;\n\n    output.sendDone({ out: parseInt(data, base) });\n  });\n};\n",tests:"describe('ParseInt component', () => {\n  let c = null;\n  let base = null;\n  let ins = null;\n  let out = null;\n  before(function () {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('strings/ParseInt')\n      .then((instance) => {\n        c = instance;\n        base = noflo.internalSocket.createSocket();\n        ins = noflo.internalSocket.createSocket();\n        c.inPorts.base.attach(base);\n        c.inPorts.in.attach(ins);\n      });\n  });\n  beforeEach(() => {\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n  });\n  afterEach(() => {\n    c.outPorts.out.detach(out);\n    out = null;\n  });\n\n  describe('with 42px', () => it('should return 42', (done) => {\n    out.on('data', (data) => {\n      chai.expect(data).to.equal(42);\n      done();\n    });\n    ins.send('42px');\n  }));\n  describe('with \"0.12345\"', () => it('should return 0', (done) => {\n    out.on('data', (data) => {\n      chai.expect(data).to.equal(0);\n      done();\n    });\n    ins.send('0.12345');\n  }));\n  describe('with qgpowqpo', () => it('should return NaN', (done) => {\n    out.on('data', (data) => {\n      chai.expect(data).to.eql(NaN);\n      done();\n    });\n    ins.send('qgpowqpo');\n  }));\n  describe('with \"0x42\" in base 16', () => it('should return 66', (done) => {\n    out.on('data', (data) => {\n      chai.expect(data).to.eql(66);\n      done();\n    });\n    base.send(16);\n    ins.send('0x42');\n  }));\n  describe('with \"11\" in base 16', () => it('should return 17', (done) => {\n    out.on('data', (data) => {\n      chai.expect(data).to.eql(17);\n      done();\n    });\n    base.send(16);\n    ins.send('11');\n  }));\n});\n"},"strings/ParseJson":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n  c.description = 'Parse a JSON string';\n\n  c.inPorts.add('in', {\n    datatype: 'string',\n    description: 'JSON description to parse',\n  });\n  c.outPorts.add('out', {\n    datatype: 'object',\n    description: 'Parsed object',\n  });\n  c.outPorts.add('error',\n    { datatype: 'object' });\n\n  return c.process((input, output) => {\n    let result;\n    if (!input.has('in')) { return; }\n    const data = input.getData('in');\n    if (!data) { return; }\n\n    try {\n      result = JSON.parse(data);\n    } catch (e) {\n      output.sendDone(e);\n      return;\n    }\n\n    output.sendDone({ out: result });\n  });\n};\n",tests:"describe('ParseJson component', () => {\n  let c = null;\n  let ins = null;\n  let out = null;\n  let err = null;\n  before(function () {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('strings/ParseJson')\n      .then((instance) => {\n        c = instance;\n        ins = noflo.internalSocket.createSocket();\n        c.inPorts.in.attach(ins);\n      });\n  });\n  beforeEach(() => {\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n    err = noflo.internalSocket.createSocket();\n    c.outPorts.error.attach(err);\n  });\n  afterEach(() => {\n    c.outPorts.out.detach(out);\n    out = null;\n    c.outPorts.error.detach(err);\n    err = null;\n  });\n\n  describe('with valid JSON object', () => it('should parse it', (done) => {\n    const fixture = {\n      hello: 'World',\n      foo: [1, 2],\n    };\n\n    out.on('data', (data) => {\n      chai.expect(data).to.eql(fixture);\n      done();\n    });\n\n    ins.send(JSON.stringify(fixture));\n    ins.disconnect();\n  }));\n\n  describe('with invalid JSON', () => it('should produce an error', (done) => {\n    err.on('data', (data) => {\n      chai.expect(data).to.be.an('error');\n      done();\n    });\n\n    ins.send('{\"foo\":1}}');\n    ins.disconnect();\n  }));\n});\n"},"strings/Quote":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n  c.description = 'quote the incoming string IPs';\n\n  c.inPorts.add('in', {\n    datatype: 'string',\n    description: 'String to put quote around',\n  });\n  c.outPorts.add('out', {\n    datatype: 'string',\n    description: 'Quoted input string',\n  });\n\n  return c.process((input, output) => {\n    const data = input.getData('in');\n    if (!data) { return; }\n    output.sendDone({ out: `'${data}'` });\n  });\n};\n",tests:"describe('Quote component', () => {\n  let c = null;\n  let ins = null;\n  let out = null;\n  before(function () {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('strings/Quote')\n      .then((instance) => {\n        c = instance;\n        ins = noflo.internalSocket.createSocket();\n        c.inPorts.in.attach(ins);\n      });\n  });\n  beforeEach(() => {\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n  });\n  afterEach(() => c.outPorts.out.detach(out));\n\n  describe('receiving a string', () => it('should quote it', (done) => {\n    out.on('data', (data) => {\n      chai.expect(data).to.equal('\\'Hello, World!\\'');\n      done();\n    });\n\n    ins.connect();\n    ins.send('Hello, World!');\n    ins.disconnect();\n  }));\n});\n"},"strings/Replace":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n  c.description = 'Given a fixed pattern and its replacement, replace all occurrences in the incoming template.';\n\n  c.inPorts.add('in', {\n    datatype: 'string',\n    description: 'String to replace pattern in',\n  });\n  c.inPorts.add('pattern', {\n    datatype: 'string',\n    description: 'Pattern to replace',\n    control: true,\n  });\n  c.inPorts.add('replacement', {\n    datatype: 'string',\n    description: 'Replacement for the pattern',\n    control: true,\n  });\n  c.outPorts.add('out',\n    { datatype: 'string' });\n\n  return c.process((input, output) => {\n    let pattern;\n    if (!input.has('in')) { return; }\n\n    if (input.has('pattern')) {\n      pattern = new RegExp(input.getData('pattern'), 'g');\n    }\n    let replacement = '';\n    if (input.has('replacement')) {\n      replacement = input.getData('replacement').replace('\\\\\\\\n', '\\n');\n    }\n\n    const data = input.getData('in');\n    if (!data) { return; }\n    if (!pattern) {\n      output.sendDone({ out: data });\n      return;\n    }\n    output.sendDone({ out: `${data}`.replace(pattern, replacement) });\n  });\n};\n",tests:"describe('Replace component', () => {\n  let loader = null;\n  let c = null;\n  let ins = null;\n  let pattern = null;\n  let replacement = null;\n  let out = null;\n\n  before(() => {\n    loader = new noflo.ComponentLoader(baseDir);\n  });\n  beforeEach(function () {\n    this.timeout(4000);\n    return loader.load('strings/Replace')\n      .then((instance) => {\n        c = instance;\n        ins = noflo.internalSocket.createSocket();\n        pattern = noflo.internalSocket.createSocket();\n        replacement = noflo.internalSocket.createSocket();\n        c.inPorts.in.attach(ins);\n        c.inPorts.pattern.attach(pattern);\n        c.inPorts.replacement.attach(replacement);\n        out = noflo.internalSocket.createSocket();\n        c.outPorts.out.attach(out);\n      });\n  });\n  afterEach(() => {\n    c.outPorts.out.detach(out);\n    out = null;\n  });\n\n  describe('when instantiated', () => {\n    it('should have an input port', () => {\n      chai.expect(c.inPorts.in).to.be.an('object');\n      chai.expect(c.inPorts.pattern).to.be.an('object');\n      chai.expect(c.inPorts.replacement).to.be.an('object');\n    });\n    it('should have an output port', () => chai.expect(c.outPorts.out).to.be.an('object'));\n  });\n\n  describe('replacement', () => {\n    it('test no pattern no replacement', (done) => {\n      const packets = ['abc123'];\n\n      out.on('data', (data) => chai.expect(packets.shift()).to.deep.equal(data));\n      out.on('disconnect', () => {\n        chai.expect(packets.length).to.equal(0);\n        done();\n      });\n\n      ins.connect();\n      ins.send('abc123');\n      ins.disconnect();\n    });\n\n    it('test no pattern', (done) => {\n      const packets = ['abc123'];\n\n      out.on('data', (data) => chai.expect(packets.shift()).to.deep.equal(data));\n      out.on('disconnect', () => {\n        chai.expect(packets.length).to.equal(0);\n        done();\n      });\n\n      replacement.send('foo');\n\n      ins.connect();\n      ins.send('abc123');\n      ins.disconnect();\n    });\n\n    it('test simple replacement', (done) => {\n      const packets = ['xyz123'];\n\n      out.on('data', (data) => chai.expect(packets.shift()).to.deep.equal(data));\n      out.on('disconnect', () => {\n        chai.expect(packets.length).to.equal(0);\n        done();\n      });\n\n      pattern.send('abc');\n      replacement.send('xyz');\n\n      ins.connect();\n      ins.send('abc123');\n      ins.disconnect();\n    });\n\n    it('test simple replacement with slashes', (done) => {\n      const packets = ['/abc/xyz/baz'];\n\n      out.on('data', (data) => chai.expect(packets.shift()).to.deep.equal(data));\n      out.on('disconnect', () => {\n        chai.expect(packets.length).to.equal(0);\n        done();\n      });\n\n      pattern.send('/foo/bar/');\n      replacement.send('/abc/xyz/');\n\n      ins.connect();\n      ins.send('/foo/bar/baz');\n      ins.disconnect();\n    });\n\n    it('test no replacement', (done) => {\n      const packets = ['123'];\n\n      out.on('data', (data) => chai.expect(packets.shift()).to.deep.equal(data));\n      out.on('disconnect', () => {\n        chai.expect(packets.length).to.equal(0);\n        done();\n      });\n\n      pattern.send('[a-z]');\n\n      ins.connect();\n      ins.send('abc123');\n      ins.disconnect();\n    });\n\n    it('test replacement', (done) => {\n      const packets = ['xxx123'];\n\n      out.on('data', (data) => chai.expect(packets.shift()).to.deep.equal(data));\n      out.on('disconnect', () => {\n        chai.expect(packets.length).to.equal(0);\n        done();\n      });\n\n      pattern.send('[a-z]');\n      replacement.send('x');\n\n      ins.connect();\n      ins.send('abc123');\n      ins.disconnect();\n    });\n\n    it('test groups', (done) => {\n      const packets = ['g', 'xxx123'];\n\n      out.on('begingroup', (group) => chai.expect(packets.shift()).to.deep.equal(group));\n      out.on('data', (data) => chai.expect(packets.shift()).to.deep.equal(data));\n      out.on('disconnect', () => {\n        chai.expect(packets.length).to.equal(0);\n        done();\n      });\n\n      pattern.send('[a-z]');\n      replacement.send('x');\n\n      ins.connect();\n      ins.beginGroup('g');\n      ins.send('abc123');\n      ins.endGroup();\n      ins.disconnect();\n    });\n  });\n});\n"},"strings/SendString":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n  c.description = 'Send a string when receiving a packet';\n\n  c.inPorts.add('string', {\n    datatype: 'string',\n    description: 'String to send',\n    control: true,\n  });\n  c.inPorts.add('in', {\n    datatype: 'bang',\n    description: 'Send the string out',\n  });\n  c.outPorts.add('out',\n    { datatype: 'string' });\n\n  return c.process((input, output) => {\n    if (!input.has('string', 'in')) { return; }\n    input.getData('in');\n    output.sendDone({ out: input.getData('string') });\n  });\n};\n",tests:"describe('SendString component', () => {\n  let c = null;\n  let ins = null;\n  let string = null;\n  let out = null;\n  before(function () {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('strings/SendString')\n      .then((instance) => {\n        c = instance;\n        ins = noflo.internalSocket.createSocket();\n        c.inPorts.in.attach(ins);\n        string = noflo.internalSocket.createSocket();\n        c.inPorts.string.attach(string);\n      });\n  });\n  beforeEach(() => {\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n  });\n  afterEach(() => {\n    c.outPorts.out.detach(out);\n    out = null;\n  });\n\n  describe('when receiving a bang', () => it('should send the string out with banged brackets', (done) => {\n    const expected = [\n      '< a',\n      'DATA Hello There',\n      '>',\n    ];\n    const received = [];\n\n    out.on('begingroup', (group) => received.push(`< ${group}`));\n    out.on('data', (data) => received.push(`DATA ${data}`));\n    out.on('endgroup', () => received.push('>'));\n    out.on('disconnect', () => {\n      chai.expect(received).to.eql(expected);\n      done();\n    });\n\n    string.send('Hello There');\n    ins.connect();\n    ins.beginGroup('a');\n    ins.send(true);\n    ins.endGroup();\n    ins.disconnect();\n  }));\n});\n"},"strings/Sift3Distance":{language:"javascript",source:"const noflo = require('noflo');\nconst sift3 = require('sift-string');\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n  c.description = 'Compare distance between two strings using Sift3 algorithm';\n\n  c.inPorts.add('string1',\n    { datatype: 'string' });\n  c.inPorts.add('string2',\n    { datatype: 'string' });\n\n  c.outPorts.add('out',\n    { datatype: 'number' });\n\n  c.forwardBrackets = { string2: ['out'] };\n\n  return c.process((input, output) => {\n    if (!input.has('string1', 'string2')) { return; }\n    let s1 = input.get('string1');\n    while (s1.type !== 'data') {\n      s1 = input.get('string1');\n    }\n    if (s1.type !== 'data') { return; }\n\n    let s2 = input.get('string2');\n    while (s2.type !== 'data') {\n      s2 = input.get('string2');\n    }\n    if (s2.type !== 'data') { return; }\n\n    output.sendDone({ out: sift3(s1.data, s2.data) });\n  });\n};\n",tests:"describe('Sift3Distance component', () => {\n  let c = null;\n  let string1 = null;\n  let string2 = null;\n  let out = null;\n  before(function () {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('strings/Sift3Distance')\n      .then((instance) => {\n        c = instance;\n        string1 = noflo.internalSocket.createSocket();\n        string2 = noflo.internalSocket.createSocket();\n        c.inPorts.string1.attach(string1);\n        c.inPorts.string2.attach(string2);\n      });\n  });\n  beforeEach(() => {\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n  });\n  afterEach(() => {\n    c.outPorts.out.detach(out);\n    out = null;\n  });\n\n  describe.skip('with blank string 1', () => it('should return distance 0', (done) => {\n    out.on('data', (data) => {\n      chai.expect(data).to.equal(0);\n      done();\n    });\n    string1.send('');\n    string2.send('Alpha BC');\n  }));\n  describe('with equal strings', () => it('should return distance 0', (done) => {\n    out.on('data', (data) => {\n      chai.expect(data).to.equal(0);\n      done();\n    });\n    string1.send('Cloud Monkey, Hippy');\n    string2.send('Cloud Monkey, Hippy');\n  }));\n  describe('with ABC and ACC', () => it('should return distance 2', (done) => {\n    out.on('data', (data) => {\n      chai.expect(data).to.equal(2);\n      done();\n    });\n    string1.send('ABC');\n    string2.send('ACC');\n  }));\n  describe.skip('with Singapore and Singaporea', () => it('should return distance 1.5', (done) => {\n    out.on('data', (data) => {\n      chai.expect(data).to.equal(1.5);\n      done();\n    });\n    string1.send('Singapore');\n    string2.send('Singaporea');\n  }));\n});\n"},"strings/Splice":{language:"javascript",source:"const noflo = require('noflo');\nconst _ = require('underscore');\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n  c.description = 'interlaces two arrays of string into a string';\n\n  c.inPorts.add('in', {\n    datatype: 'array',\n    description: 'Array to interlace (2 consecutive IPs)',\n  });\n  c.inPorts.add('assoc', {\n    datatype: 'string',\n    control: true,\n    default: ':',\n  });\n  c.inPorts.add('delim', {\n    datatype: 'string',\n    control: true,\n    default: ',',\n  });\n  c.outPorts.add('out',\n    { datatype: 'string' });\n\n  return c.process((input, output) => {\n    if (!input.has('in')) { return; }\n\n    // Look into the buffer to see if we have two data packets\n    const port = c.inPorts.in;\n    const buf = input.scope ? port.scopedBuffer[input.scope] : port.buffer;\n    const data = buf.filter((ip) => ip.type === 'data');\n    if (data.length < 2) { return; }\n    let strings = [];\n    while (strings.length !== 2) {\n      const packet = input.get('in');\n      if (packet.type === 'data') {\n        strings.push(packet.data);\n      }\n    }\n\n    const assoc = input.has('assoc') ? input.getData('assoc') : ':';\n    const delim = input.has('delim') ? input.getData('delim') : ',';\n\n    const paired = _.zip(strings[0], strings[1]);\n    strings = _.map(paired, ((pair) => pair.join(assoc)));\n    output.sendDone({ out: strings.join(delim) });\n  });\n};\n",tests:"describe('Splice component', () => {\n  let c = null;\n  let assoc = null;\n  let delim = null;\n  let ins = null;\n  let out = null;\n  before(function () {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('strings/Splice')\n      .then((instance) => {\n        c = instance;\n        assoc = noflo.internalSocket.createSocket();\n        delim = noflo.internalSocket.createSocket();\n        ins = noflo.internalSocket.createSocket();\n        c.inPorts.assoc.attach(assoc);\n        c.inPorts.delim.attach(delim);\n        c.inPorts.in.attach(ins);\n      });\n  });\n  beforeEach(() => {\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n  });\n  afterEach(() => {\n    c.outPorts.out.detach(out);\n    out = null;\n  });\n\n  describe('interlacing two arrays of strings into a string', () => it('should return the correct string', (done) => {\n    out.on('data', (data) => {\n      chai.expect(data).to.equal('p:x,q:y,r:z');\n      done();\n    });\n\n    ins.send(['p', 'q', 'r']);\n    ins.send(['x', 'y', 'z']);\n  }));\n\n  describe('interlacing with custom associator and delimiter', () => it('should return the correct string', (done) => {\n    out.on('data', (data) => {\n      chai.expect(data).to.equal('p=x|q=y|r=z');\n      done();\n    });\n\n    assoc.send('=');\n    delim.send('|');\n\n    ins.send(['p', 'q', 'r']);\n    ins.send(['x', 'y', 'z']);\n  }));\n});\n"},"strings/SplitStr":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n  c.description = 'The SplitStr component receives a string in the in port, splits it by string specified in the delimiter port, and send each part as a separate packet to the out port';\n\n  c.inPorts.add('in', {\n    datatype: 'string',\n    description: 'String to split',\n  });\n  c.inPorts.add('delimiter', {\n    datatype: 'string',\n    description: 'Delimiter used to split',\n    control: true,\n    default: '\\n',\n  });\n  c.outPorts.add('out', {\n    datatype: 'string',\n    description: 'Split off elements from the input string (one element per IP)',\n  });\n\n  return c.process((input, output) => {\n    if (!input.hasData('in')) { return; }\n\n    let delimiter = input.has('delimiter') ? input.getData('delimiter') : '\\n';\n    const first = delimiter.substr(0, 1);\n    const last = delimiter.substr(delimiter.length - 1, 1);\n    if ((first === '/') && (last === '/') && (delimiter.length > 1)) {\n      // Handle regular expressions and not simply a slash\n      delimiter = new RegExp(delimiter.substr(1, delimiter.length - 2));\n    }\n\n    const data = input.getData('in');\n    const strings = data.split(delimiter);\n    strings.forEach((string) => {\n      output.send({ out: string });\n    });\n    output.done();\n  });\n};\n",tests:"describe('SplitStr component', () => {\n  let c = null;\n  let ins = null;\n  let delimiter = null;\n  let out = null;\n\n  before(function () {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('strings/SplitStr')\n      .then((instance) => {\n        c = instance;\n        ins = noflo.internalSocket.createSocket();\n        delimiter = noflo.internalSocket.createSocket();\n        c.inPorts.in.attach(ins);\n        c.inPorts.delimiter.attach(delimiter);\n      });\n  });\n  beforeEach(() => {\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n  });\n\n  afterEach(() => {\n    c.outPorts.out.detach(out);\n    out = null;\n  });\n\n  describe('when instantiated', () => {\n    it('should have an input port', () => {\n      chai.expect(c.inPorts.in).to.be.an('object');\n      chai.expect(c.inPorts.delimiter).to.be.an('object');\n    });\n    it('should have an output port', () => chai.expect(c.outPorts.out).to.be.an('object'));\n  });\n\n  describe('splitting a string', () => {\n    it('test split with default delimiteriter', (done) => {\n      const packets = ['abc', '123'];\n\n      out.on('data', (data) => {\n        chai.expect(packets.shift()).to.deep.equal(data);\n        if (!packets.length) {\n          done();\n        }\n      });\n\n      ins.connect();\n      ins.send('abc\\n123');\n      ins.disconnect();\n    });\n\n    it('test split with string delimiteriter', (done) => {\n      const packets = ['abc', '123'];\n\n      out.on('data', (data) => {\n        chai.expect(packets.shift()).to.deep.equal(data);\n        if (!packets.length) { done(); }\n      });\n\n      delimiter.send(',');\n\n      ins.connect();\n      ins.send('abc,123');\n      ins.disconnect();\n    });\n\n    it('test split with RegExp delimiteriter', (done) => {\n      const packets = ['abc', '123'];\n\n      out.on('data', (data) => {\n        chai.expect(packets.shift()).to.deep.equal(data);\n        if (!packets.length) { done(); }\n      });\n\n      delimiter.send('/[\\n]*[-]{3}[\\n]/');\n\n      ins.connect();\n      ins.send('abc\\n---\\n123');\n      ins.disconnect();\n    });\n  });\n});\n"},"strings/StringTemplate":{language:"javascript",source:"const noflo = require('noflo');\nconst _ = require('underscore');\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n  c.description = 'Produce a string from input data with a given template';\n\n  c.inPorts.add('template', {\n    datatype: 'string',\n    description: 'Templating string',\n    control: true,\n    required: true,\n  });\n  c.inPorts.add('in', {\n    datatype: 'object',\n    description: 'Object containing key/value set used to run the template',\n  });\n  c.outPorts.add('out',\n    { datatype: 'string' });\n\n  return c.process((input, output) => {\n    if (!input.has('in', 'template')) { return; }\n\n    const data = input.get('in');\n    if (data.type !== 'data') { return; }\n\n    const template = _.template(input.getData('template'));\n    output.sendDone({ out: template(data.data) });\n  });\n};\n",tests:"describe('StringTemplate component', () => {\n  let c = null;\n  let template = null;\n  let ins = null;\n  let out = null;\n  before(function () {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('strings/StringTemplate')\n      .then((instance) => {\n        c = instance;\n        template = noflo.internalSocket.createSocket();\n        ins = noflo.internalSocket.createSocket();\n        c.inPorts.template.attach(template);\n        c.inPorts.in.attach(ins);\n      });\n  });\n  beforeEach(() => {\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n  });\n  afterEach(() => {\n    c.outPorts.out.detach(out);\n    out = null;\n  });\n\n  describe('with a template', () => it('should return a string with the template applied', (done) => {\n    out.on('data', (data) => {\n      chai.expect(data).to.equal('Hello Foo');\n      done();\n    });\n    template.send('Hello <%= name %>');\n    ins.send({ name: 'Foo' });\n  }));\n});\n"},"strings/SubStr":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n  c.description = 'Produce a substring from a string';\n\n  c.inPorts.add('index', {\n    datatype: 'int',\n    description: 'Index of the sub part ',\n    control: true,\n  });\n  c.inPorts.add('limit', {\n    datatype: 'int',\n    description: 'Limit of the sub part',\n    control: true,\n  });\n  c.inPorts.add('in', {\n    datatype: 'string',\n    description: 'String to extract a sub part from',\n  });\n  c.outPorts.add('out',\n    { datatype: 'string' });\n\n  return c.process((input, output) => {\n    if (!input.has('in')) { return; }\n    const data = input.get('in');\n    if (data.type !== 'data') { return; }\n    const index = input.has('index') ? input.getData('index') : 0;\n    const limit = input.has('limit') ? input.getData('limit') : undefined;\n\n    output.sendDone({ out: data.data.substr(index, limit) });\n  });\n};\n",tests:"describe('SubStr component', () => {\n  let c = null;\n  let ins = null;\n  let index = null;\n  let limit = null;\n  let out = null;\n  before(function () {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('strings/SubStr')\n      .then((instance) => {\n        c = instance;\n        ins = noflo.internalSocket.createSocket();\n        c.inPorts.in.attach(ins);\n        index = noflo.internalSocket.createSocket();\n        c.inPorts.index.attach(index);\n        limit = noflo.internalSocket.createSocket();\n        c.inPorts.limit.attach(limit);\n      });\n  });\n  beforeEach(() => {\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n  });\n  afterEach(() => {\n    c.outPorts.out.detach(out);\n    out = null;\n  });\n\n  describe('producing a substring', () => {\n    it('should send string as-is by default', (done) => {\n      out.on('data', (data) => {\n        chai.expect(data).to.equal('Hello World');\n        done();\n      });\n\n      ins.send('Hello World');\n      ins.disconnect();\n    });\n\n    it('should make a substring by given index', (done) => {\n      out.on('data', (data) => {\n        chai.expect(data).to.equal('ello World');\n        done();\n      });\n\n      index.send(1);\n\n      ins.send('Hello World');\n      ins.disconnect();\n    });\n\n    it('should make a substring by given index and limit', (done) => {\n      out.on('data', (data) => {\n        chai.expect(data).to.equal('ello');\n        done();\n      });\n\n      index.send(1);\n      limit.send(4);\n\n      ins.send('Hello World');\n      ins.disconnect();\n    });\n  });\n});\n"},"strings/TemplateReplace":{language:"javascript",source:"const noflo = require('noflo');\nconst _ = require('underscore');\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n  c.description = 'The inverse of \\'Replace\\': fix the template and pass in an object of patterns and replacements.';\n\n  c.inPorts.add('in',\n    { datatype: 'object' });\n  c.inPorts.add('token',\n    { datatype: 'string' });\n  c.inPorts.add('template', {\n    datatype: 'string',\n    control: true,\n  });\n  // Default value for non-string input\n  c.inPorts.add('default', {\n    datatype: 'string',\n    control: true,\n  });\n  c.outPorts.add('out',\n    { datatype: 'string' });\n\n  return c.process((input, output) => {\n    let data; let packet; let replacement; let\n      result;\n    if (!input.has('template', 'in')) { return; }\n\n    const template = input.getData('template');\n    if (!_.isString(template)) { return; }\n\n    const defaults = input.has('default') ? input.getData('default') : '';\n\n    const inputPort = c.inPorts.in;\n    const inputBuf = input.scope ? inputPort.scopedBuffer[input.scope] : inputPort.buffer;\n    const inputData = inputBuf.filter((ip) => ip.type === 'data');\n    if (!inputData.length) { return; }\n\n    // Accept a map of replacements\n    if (_.isObject(inputData[0].data)) {\n      data = input.get('in');\n\n      result = template;\n      Object.keys(data.data).forEach((p) => {\n        let pattern = p;\n        replacement = data.data[pattern];\n        pattern = new RegExp(pattern, 'g');\n        result = result.replace(pattern, replacement);\n      });\n\n      // Send immediately\n      output.sendDone({ out: result });\n      return;\n    }\n\n    // Also accept a series of IPs\n    c.autoOrdering = false;\n    const tokenPort = c.inPorts.token;\n    const tokenBuf = input.scope ? tokenPort.scopedBuffer[input.scope] : tokenPort.buffer;\n    const tokenData = tokenBuf.filter((ip) => ip.type === 'data');\n    // There must be tokens\n    if (!tokenData.length) { return; }\n    if (inputData.length < tokenData.length) { return; }\n\n    const strings = [];\n    const tokens = [];\n    while (strings.length < tokenData.length) {\n      packet = input.get('in');\n      if (packet.type === 'data') {\n        strings.push(packet.data);\n      }\n    }\n    while (tokens.length < tokenData.length) {\n      packet = input.get('token');\n      if (packet.type === 'data') {\n        tokens.push(new RegExp(packet.data, 'g'));\n      }\n    }\n\n    result = template;\n    strings.forEach((string) => {\n      const token = tokens.shift();\n      replacement = _.isString(string) ? string : defaults;\n      result = result.replace(token, replacement);\n    });\n\n    output.sendDone({ out: result });\n  });\n};\n",tests:"describe('TemplateReplace component', () => {\n  let c = null;\n  let template = null;\n  let token = null;\n  let ins = null;\n  let out = null;\n  before(function () {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('strings/TemplateReplace')\n      .then((instance) => {\n        c = instance;\n        template = noflo.internalSocket.createSocket();\n        token = noflo.internalSocket.createSocket();\n        ins = noflo.internalSocket.createSocket();\n        c.inPorts.template.attach(template);\n        c.inPorts.token.attach(token);\n        c.inPorts.in.attach(ins);\n      });\n  });\n  beforeEach(() => {\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n  });\n  afterEach(() => {\n    c.outPorts.out.detach(out);\n    out = null;\n  });\n\n  describe('with an object containing patterns and replacements', () => it('should return a templated string', (done) => {\n    out.on('data', (data) => {\n      chai.expect(data).to.equal('I am a happy person.');\n      done();\n    });\n    template.send('I am a &adjective &noun.');\n    ins.send({\n      '&adjective': 'happy',\n      '&noun': 'person',\n    });\n    ins.disconnect();\n  }));\n\n  describe('with a series of tokens', () => it('should return a templated string', (done) => {\n    out.on('data', (data) => {\n      chai.expect(data).to.equal('I am a happy person.');\n      done();\n    });\n    template.send('I am a &adjective &noun.');\n    token.connect();\n    token.send('&adjective');\n    token.send('&noun');\n    token.disconnect();\n    ins.connect();\n    ins.send('happy');\n    ins.send('person');\n    ins.disconnect();\n  }));\n});\n"},"strings/ToString":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = function () {\n  const c = new noflo.Component();\n  c.description = 'Convert the input into a string using toString()';\n\n  c.inPorts.add('in',\n    { datatype: 'all' });\n\n  c.outPorts.add('out',\n    { datatype: 'string' });\n\n  return c.process((input, output) => {\n    const data = input.getData('in');\n    output.sendDone({ out: data.toString() });\n  });\n};\n",tests:"describe('ToString component', () => {\n  let c = null;\n  let ins = null;\n  let out = null;\n  before(function () {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('strings/ToString')\n      .then((instance) => {\n        c = instance;\n        ins = noflo.internalSocket.createSocket();\n        c.inPorts.in.attach(ins);\n      });\n  });\n  beforeEach(() => {\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n  });\n  afterEach(() => {\n    c.outPorts.out.detach(out);\n    out = null;\n  });\n\n  describe('converting an object to String', () => {\n    it('should produce default for normal object', (done) => {\n      out.on('data', (data) => {\n        chai.expect(data).to.be.a('string');\n        chai.expect(data).to.equal('[object Object]');\n        done();\n      });\n\n      ins.send({ foo: 'Bar' });\n      ins.disconnect();\n    });\n\n    it('should use custom toString method', (done) => {\n      out.on('data', (data) => {\n        chai.expect(data).to.be.a('string');\n        chai.expect(data).to.equal('I am fancy object');\n        done();\n      });\n\n      ins.send({\n        foo: 'Bar',\n        toString() {\n          return 'I am fancy object';\n        },\n      });\n      ins.disconnect();\n    });\n  });\n});\n"},"tween/Ease":{language:"javascript",source:"const noflo = require('noflo');\nconst ease = require('ease-component');\n\nconst getEasing = name => ease[name] || (n => n);\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.description = 'Easing function component that takes a normalized value between 0 and 1 and outputs eased value between from and to inputs';\n  c.icon = 'cogs';\n  c.inPorts.add('from', {\n    datatype: 'number',\n    control: true,\n  });\n  c.inPorts.add('to', {\n    datatype: 'number',\n    control: true,\n  });\n  c.inPorts.add('type', {\n    datatype: 'string',\n    values: [\n      'linear',\n      'in-quad',\n      'out-quad',\n      'in-out-quad',\n      'in-cube',\n      'out-cube',\n      'in-out-cube',\n      'in-quart',\n      'out-quart',\n      'in-out-quart',\n      'in-quint',\n      'out-quint',\n      'in-out-quint',\n      'in-sine',\n      'out-sine',\n      'in-out-sine',\n      'in-expo',\n      'out-expo',\n      'in-out-expo',\n      'in-circ',\n      'out-circ',\n      'in-out-circ',\n      'in-back',\n      'out-back',\n      'in-out-back',\n      'in-bounce',\n      'out-bounce',\n      'in-out-bounce',\n    ],\n    default: 'linear',\n    control: true,\n  });\n  c.inPorts.add('in', {\n    datatype: 'number',\n  });\n  c.outPorts.add('out', {\n    datatype: 'number',\n  });\n  c.process((input, output) => {\n    if (!input.hasData('from', 'to', 'in')) { return; }\n    if (input.attached('type').length && !input.hasData('type')) { return; }\n    const [from, to, value] = input.getData('from', 'to', 'in');\n    let type = 'linear';\n    if (input.hasData('type')) {\n      type = input.getData('type');\n    }\n    const func = getEasing(type);\n    const val = from + (func(value) * (to - from));\n    output.sendDone({ out: val });\n  });\n  return c;\n};\n",tests:"describe('Ease component', () => {\n  let c = null;\n  let from = null;\n  let to = null;\n  let type = null;\n  let ins = null;\n  let out = null;\n  before(function (done) {\n    this.timeout(4000);\n    const loader = new noflo.ComponentLoader(baseDir);\n    loader.load('tween/Ease', (err, instance) => {\n      if (err) {\n        done(err);\n        return;\n      }\n      c = instance;\n      from = noflo.internalSocket.createSocket();\n      to = noflo.internalSocket.createSocket();\n      ins = noflo.internalSocket.createSocket();\n      c.inPorts.from.attach(from);\n      c.inPorts.to.attach(to);\n      c.inPorts.in.attach(ins);\n      done();\n    });\n  });\n  beforeEach(() => {\n    out = noflo.internalSocket.createSocket();\n    c.outPorts.out.attach(out);\n  });\n  afterEach(() => c.outPorts.out.detach(out));\n\n  describe('with default linear', () => it('should get a linear response', (done) => {\n    const expected = [\n      0,\n      500,\n      1000,\n    ];\n    out.on('data', (data) => {\n      chai.expect(data).to.equal(expected.shift());\n      if (!expected.length) {\n        done();\n      }\n    });\n    from.send(0);\n    to.send(1000);\n    ins.send(0);\n    ins.send(0.5);\n    ins.send(1.0);\n  }));\n  describe('with in-cube', () => {\n    before(() => {\n      type = noflo.internalSocket.createSocket();\n      c.inPorts.type.attach(type);\n    });\n    after(() => {\n      c.inPorts.type.detach(type);\n      type = null;\n    });\n    it('should get a in-cube response', (done) => {\n      const expected = [\n        0,\n        0.5 * 0.5 * 0.5 * 1000,\n        1000,\n      ];\n      out.on('data', (data) => {\n        chai.expect(data).to.equal(expected.shift());\n        if (!expected.length) {\n          done();\n        }\n      });\n      type.send('in-cube');\n      from.send(0);\n      to.send(1000);\n      ins.send(0);\n      ins.send(0.5);\n      ins.send(1.0);\n    });\n  });\n});\n"},"tween/EaseTime":{language:"javascript",source:"const noflo = require('noflo');\n\nfunction getPosition(ctx) {\n  let pos = ctx.elapsedTime / ctx.duration;\n  if (!ctx.direction) { pos = 1.0 - pos; }\n  return pos;\n}\n\nfunction isComplete(ctx) {\n  if (ctx.repeat > 0) { return false; }\n  if (ctx.elapsedTime < ctx.duration) { return false; }\n  return true;\n}\n\nfunction advanceTimeline(ctx, callback) {\n  if (!ctx.running) {\n    callback(null);\n    return;\n  }\n\n  // Measure delta\n  const t = Date.now();\n  const delta = t - ctx.lastTime;\n  ctx.lastTime = t;\n\n  // Add to elapsedTime\n  ctx.elapsedTime += delta;\n\n  // End case\n  if (isComplete(ctx)) {\n    // fix value on bounds\n    ctx.running = false;\n    ctx.elapsedTime = ctx.duration;\n    callback(null);\n    return;\n  }\n\n  // Continue case\n  if (ctx.elapsedTime < ctx.duration) {\n    callback(getPosition(ctx));\n    return;\n  }\n\n  // Loop case\n  ctx.elapsedTime -= ctx.duration;\n  if (ctx.autoreverse) { ctx.direction = !ctx.direction; }\n  if (ctx.repeat > 0) { ctx.repeat -= 1; }\n\n  callback(getPosition(ctx));\n}\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.description = 'Converts time to normalized value between 0 and 1 for Ease';\n  c.icon = 'cogs';\n  c.inPorts.add('tick', {\n    datatype: 'bang',\n  });\n  c.inPorts.add('start', {\n    datatype: 'bang',\n  });\n  c.inPorts.add('pause', {\n    datatype: 'bang',\n  });\n  c.inPorts.add('unpause', {\n    datatype: 'bang',\n  });\n  c.inPorts.add('stop', {\n    datatype: 'bang',\n  });\n  c.inPorts.add('duration', {\n    datatype: 'number',\n    control: true,\n  });\n  c.inPorts.add('repeat', {\n    datatype: 'number',\n    control: true,\n  });\n  c.inPorts.add('reverse', {\n    datatype: 'boolean',\n    control: true,\n  });\n  c.inPorts.add('autoreverse', {\n    datatype: 'boolean',\n    control: true,\n  });\n  c.outPorts.add('started', {\n    datatype: 'bang',\n  });\n  c.outPorts.add('stopped', {\n    datatype: 'bang',\n  });\n  c.outPorts.add('paused', {\n    datatype: 'bang',\n  });\n  c.outPorts.add('unpaused', {\n    datatype: 'bang',\n  });\n  c.outPorts.add('value', {\n    datatype: 'number',\n  });\n  c.forwardBrackets = {};\n  c.scopes = {};\n  c.tearDown = (callback) => {\n    c.scopes = {};\n    callback();\n  };\n  c.process((input, output) => {\n    // Check that we have necessary options\n    if (input.attached('duration').length && !input.hasData('duration')) { return; }\n    if (input.attached('repeat').length && !input.hasData('repeat')) { return; }\n    if (input.attached('reverse').length && !input.hasData('reverse')) { return; }\n    if (input.attached('autoreverse').length && !input.hasData('autoreverse')) { return; }\n    // Handle bangs\n    if (input.hasData('start')) {\n      input.getData('start');\n      let duration = 500;\n      if (input.hasData('duration')) {\n        duration = input.getData('duration');\n      }\n      let repeat = 0;\n      if (input.hasData('repeat')) {\n        repeat = input.getData('repeat');\n      }\n      let reverse = false;\n      if (input.hasData('reverse')) {\n        reverse = input.getData('reverse');\n      }\n      let autoreverse = false;\n      if (input.hasData('autoreverse')) {\n        autoreverse = input.getData('autoreverse');\n      }\n      c.scopes[input.scope] = {\n        running: true,\n        duration,\n        repeat,\n        autoreverse,\n        lastTime: Date.now(),\n        elapsedTime: 0,\n        direction: !reverse,\n      };\n      output.send({ started: true });\n      return;\n    }\n    if (input.hasData('stop')) {\n      input.getData('stop');\n      if (c.scopes[input.scope]) {\n        delete c.scopes[input.scope];\n      }\n      output.sendDone({ stopped: true });\n      return;\n    }\n    if (input.hasData('pause')) {\n      input.getData('pause');\n      if (!(c.scopes[input.scope] != null ? c.scopes[input.scope].running : undefined)) {\n        output.done();\n        return;\n      }\n      c.scopes[input.scope].running = false;\n      output.sendDone({ paused: true });\n      return;\n    }\n    if (input.hasData('unpause')) {\n      input.getData('unpause');\n      if (!c.scopes[input.scope]) {\n        output.done();\n        return;\n      }\n      if (c.scopes[input.scope].running) {\n        output.done();\n        return;\n      }\n      c.scopes[input.scope].running = true;\n      output.sendDone({ unpaused: true });\n      return;\n    }\n    if (input.hasData('tick')) {\n      input.getData('tick');\n      if (!(c.scopes[input.scope] != null ? c.scopes[input.scope].running : undefined)) {\n        output.done();\n        return;\n      }\n      advanceTimeline(c.scopes[input.scope], (pos) => {\n        if (pos === null) {\n          output.done();\n          return;\n        }\n        output.sendDone({ value: pos });\n      });\n    }\n  });\n  return c;\n};\n",tests:"describe('EaseTime component', () => {\n  let c = null;\n  let start = null;\n  let duration = null;\n  let tick = null;\n  let stop = null;\n  let started = null;\n  let value = null;\n  let stopped = null;\n  let loader = null;\n  before(() => {\n    loader = new noflo.ComponentLoader(baseDir);\n  });\n  beforeEach(function (done) {\n    this.timeout(4000);\n    loader.load('tween/EaseTime', (err, instance) => {\n      if (err) {\n        done(err);\n        return;\n      }\n      c = instance;\n      start = noflo.internalSocket.createSocket();\n      duration = noflo.internalSocket.createSocket();\n      tick = noflo.internalSocket.createSocket();\n      stop = noflo.internalSocket.createSocket();\n      c.inPorts.start.attach(start);\n      c.inPorts.duration.attach(duration);\n      c.inPorts.tick.attach(tick);\n      c.inPorts.stop.attach(stop);\n      started = noflo.internalSocket.createSocket();\n      c.outPorts.started.attach(started);\n      value = noflo.internalSocket.createSocket();\n      c.outPorts.value.attach(value);\n      stopped = noflo.internalSocket.createSocket();\n      c.outPorts.stopped.attach(stopped);\n      done();\n    });\n  });\n  afterEach(() => {\n    c.outPorts.started.detach(started);\n    c.outPorts.value.detach(value);\n    c.outPorts.stopped.detach(stopped);\n  });\n\n  describe('start a timeline', () => it('should get started output and value = 0', (done) => {\n    const expected = [\n      ['started', true],\n      ['value', 0.0],\n    ];\n    started.on('data', (data) => {\n      const exp = expected.shift();\n      chai.expect(exp[0]).to.equal('started');\n      chai.expect(data).to.equal(exp[1]);\n      if (!expected.length) {\n        done();\n      }\n    });\n    value.on('data', (data) => {\n      const exp = expected.shift();\n      chai.expect(exp[0]).to.equal('value');\n      chai.expect(data).to.be.least(exp[1]);\n      chai.expect(data).to.be.most(0.01);\n      if (!expected.length) {\n        done();\n      }\n    });\n\n    duration.send(1000);\n    start.send(true);\n    tick.send(true);\n  }));\n});\n"},"tween/Timeline":{language:"javascript",source:"const noflo = require('noflo');\nconst debug = require('debug')('noflo-tween:timeline');\n\nfunction replaceInCommand(command, state) {\n  return command\n    .replace('__START__', state.startTime.toISOString())\n    .replace('__END__', state.endTime.toISOString())\n    .replace('__ELAPSED__', parseInt(state.elapsed, 10));\n}\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.icon = 'play';\n  c.description = 'Execute a timeline';\n  c.inPorts.add('timeline', {\n    datatype: 'object',\n    description: 'Timeline definition',\n    required: true,\n  });\n  c.inPorts.add('start', {\n    datatype: 'bang',\n    description: 'Start executing the timeline',\n  });\n  c.inPorts.add('tick', {\n    datatype: 'bang',\n    description: 'Send track commands due this time',\n  });\n  c.outPorts.add('started', {\n    datatype: 'bang',\n  });\n  c.outPorts.add('finished', {\n    datatype: 'bang',\n  });\n  c.outPorts.add('command', {\n    datatype: 'all',\n    addressable: true,\n  });\n  c.outPorts.add('error', {\n    datatype: 'object',\n  });\n  c.state = {};\n  c.tearDown = (callback) => {\n    c.state = {};\n    callback();\n  };\n  c.process((input, output, context) => {\n    if (input.hasData('timeline')) {\n      c.state.timelineDefinition = input.getData('timeline');\n      // TODO: Validate definition?\n      if (!input.hasData('start')) {\n        output.done();\n        return;\n      }\n    }\n    if (input.hasData('start') && c.state.timelineDefinition) {\n      input.getData('start');\n      if (c.state.running) {\n        output.done(new Error('Timeline is already running'));\n        return;\n      }\n      c.state.running = true;\n      c.state.startTime = new Date();\n      c.state.endTime = new Date();\n      c.state.endTime.setTime(c.state.endTime.getTime()\n        + (c.state.timelineDefinition.total_time * 1000));\n      c.state.tracks = JSON.parse(JSON.stringify(c.state.timelineDefinition)).tracks;\n      c.state.context = context;\n      output.send({\n        started: c.state.startTime,\n      });\n      return;\n    }\n    if (input.hasData('tick')) {\n      input.getData('tick');\n      if (!c.state.running) {\n        output.done(new Error('Timeline is not running'));\n        return;\n      }\n      const now = new Date();\n      const elapsed = (now.getTime() - c.state.startTime.getTime()) / 1000;\n\n      // Get commands to send at this time\n      c.state.tracks.forEach((track, idx) => {\n        const remainingCommands = {};\n        Object.keys(track.commands).forEach((slot) => {\n          const slotSeconds = parseInt(slot, 10);\n          if (slotSeconds <= elapsed) {\n            // Send this these commands\n            track.commands[slot].forEach((command) => {\n              let commandToSend = command;\n              if (typeof command === 'string') {\n                commandToSend = replaceInCommand(commandToSend, {\n                  startTime: c.state.startTime,\n                  endTime: c.state.endTime,\n                  elapsed,\n                });\n              }\n              debug(`At ${elapsed}s: send to ${idx}: '${commandToSend}'`);\n              output.send({\n                command: new noflo.IP('data', commandToSend, {\n                  index: idx,\n                }),\n              });\n            });\n            return;\n          }\n          // Keep this for the future\n          remainingCommands[slot] = track.commands[slot];\n        });\n        c.state.tracks[idx].commands = remainingCommands;\n      });\n\n      // Either finish or continue\n      if (now >= c.state.endTime) {\n        debug(`At ${elapsed}s: timeline finished`);\n        c.state.context.deactivate();\n        c.state = {\n          timelineDefinition: c.state.timelineDefinition,\n        };\n        output.sendDone({\n          finished: true,\n        });\n      } else {\n        output.done();\n      }\n    }\n  });\n  return c;\n};\n",tests:"function manipulateTimes(component, wantedSeconds) {\n  const c = component;\n  const start = new Date();\n  start.setTime(start.getTime() - (wantedSeconds * 1000));\n  const end = new Date();\n  end.setTime(start.getTime() + (c.state.timelineDefinition.total_time * 1000));\n  c.state.startTime = start;\n  c.state.endTime = end;\n}\n\ndescribe('Timeline component', () => {\n  let c;\n  let timeline;\n  let start;\n  let tick;\n  let commands;\n  let started;\n  let finished;\n  let error;\n  before((callback) => {\n    const loader = new noflo.ComponentLoader(baseDir);\n    loader.load('tween/Timeline', (err, instance) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n      c = instance;\n      timeline = noflo.internalSocket.createSocket();\n      c.inPorts.timeline.attach(timeline);\n      start = noflo.internalSocket.createSocket();\n      c.inPorts.start.attach(start);\n      tick = noflo.internalSocket.createSocket();\n      c.inPorts.tick.attach(tick);\n      callback();\n    });\n  });\n  beforeEach(() => {\n    commands = [\n      noflo.internalSocket.createSocket(),\n      noflo.internalSocket.createSocket(),\n    ];\n    commands.forEach((command, idx) => {\n      c.outPorts.command.attach(command, idx);\n    });\n    started = noflo.internalSocket.createSocket();\n    c.outPorts.started.attach(started);\n    finished = noflo.internalSocket.createSocket();\n    c.outPorts.finished.attach(finished);\n    error = noflo.internalSocket.createSocket();\n    c.outPorts.error.attach(error);\n  });\n  afterEach(() => {\n    commands.forEach((command, idx) => {\n      c.outPorts.command.detach(command, idx);\n    });\n    c.outPorts.started.detach(started);\n    c.outPorts.finished.detach(finished);\n    c.outPorts.error.detach(error);\n  });\n\n  describe('with a simple single-track animation', () => {\n    it('should be able to set the definition', () => {\n      timeline.send({\n        total_time: 3,\n        tracks: [\n          {\n            name: 'foo',\n            commands: {\n              0: ['start'],\n              1: ['one'],\n              3: ['three __ELAPSED__'],\n            },\n          },\n        ],\n      });\n      chai.expect(c.state.timelineDefinition).to.be.an('object');\n    });\n    it('should send a started packet when started', (callback) => {\n      error.once('data', callback);\n      started.on('data', () => {\n        callback();\n      });\n      start.send(true);\n    });\n    it('should send commands on first tick', (callback) => {\n      error.once('data', callback);\n      const receivedCommands = [];\n      commands.forEach((command, idx) => {\n        receivedCommands[idx] = [];\n        command.on('data', (data) => {\n          receivedCommands[idx].push(data);\n          chai.expect(receivedCommands[0]).to.eql(['start']);\n          callback();\n        });\n      });\n      tick.send(true);\n    });\n    it('should send command on one-second tick', (callback) => {\n      error.once('data', callback);\n      const receivedCommands = [];\n      commands.forEach((command, idx) => {\n        receivedCommands[idx] = [];\n        command.on('data', (data) => {\n          receivedCommands[idx].push(data);\n          chai.expect(receivedCommands[0]).to.eql(['one']);\n          callback();\n        });\n      });\n      manipulateTimes(c, 1.5);\n      tick.send(true);\n    });\n    it('should send command and finish at three-second tick', (callback) => {\n      error.once('data', callback);\n      const receivedCommands = [];\n      commands.forEach((command, idx) => {\n        receivedCommands[idx] = [];\n        command.on('data', (data) => {\n          receivedCommands[idx].push(data);\n        });\n      });\n      finished.once('data', () => {\n        chai.expect(receivedCommands[0]).to.eql(['three 3']);\n        callback();\n      });\n      manipulateTimes(c, 3);\n      tick.send(true);\n    });\n  });\n});\n"},"webaudio/AudioFile":{language:"coffeescript",source:"noflo = require 'noflo'\nArrayableHelper = require 'noflo-helper-arrayable'\n\nclass AudioFile extends noflo.Component\n  description: 'Create an audio source loading a sound file'\n  icon: 'file-audio-o'\n  constructor: ->\n    super()\n    ports =\n      file:\n        datatype: 'string'\n        description: 'URL of file to load'\n        required: true\n      play:\n        datatype: 'bang'\n        description: 'plays the file right now'\n      start:\n        datatype: 'object'\n        description: 'schedules to playback {time, offset, duration}'\n      stop:\n        datatype: 'number'\n        description: 'schedules to stop at an exact time'\n\n    ArrayableHelper @, 'audiofile', ports\n\nexports.getComponent = -> new AudioFile\n"},"webaudio/Chorus":{language:"coffeescript",source:"noflo = require 'noflo'\nArrayableHelper = require 'noflo-helper-arrayable'\n\nclass Chorus extends noflo.Component\n  description: 'Basic chorus effect (TUNA)'\n  icon: 'group'\n  constructor: ->\n    super()\n    ports =\n      audionodes:\n        datatype: 'object'\n        description: 'audio nodes (oscillators, buffer sources, ...)'\n        addressable: true\n        required: true\n      rate:\n        datatyle: 'number'\n        description: '(0.01...8+)'\n        required: true\n      feedback:\n        datatyle: 'number'\n        description: '(0...1+)'\n        required: true\n      delay:\n        datatyle: 'number'\n        description: '(0...1)'\n        required: true\n      bypass:\n        datatyle: 'number'\n        description: '(0 or 1)'\n        required: true\n\n    ArrayableHelper @, 'chorus', ports\n\nexports.getComponent = -> new Chorus\n"},"webaudio/Convolver":{language:"coffeescript",source:"noflo = require 'noflo'\nArrayableHelper = require 'noflo-helper-arrayable'\n\nclass Convolver extends noflo.Component\n  description: 'Applies impulse response data to a given audio signal'\n  icon: 'share-alt'\n  constructor: ->\n    super()\n    ports =\n      audionodes:\n        datatype: 'object'\n        description: 'audio nodes (oscillators, buffer sources, ...)'\n        addressable: true\n        required: true\n      impulse:\n        datatyle: 'string'\n        description: 'impulse response filepath'\n        required: true\n\n    ArrayableHelper @, 'convolver', ports\n\nexports.getComponent = -> new Convolver\n"},"webaudio/Gain":{language:"coffeescript",source:"noflo = require 'noflo'\nArrayableHelper = require 'noflo-helper-arrayable'\n\nclass Gain extends noflo.Component\n  description: 'Multiplies the input audio signal by the given gain value, ' +\n               'changing its amplitude.'\n  icon: 'filter'\n  constructor: ->\n    super()\n    ports =\n      audionodes:\n        datatype: 'object'\n        description: 'audio nodes (oscillators, buffer sources, ...)'\n        addressable: true\n        required: true\n      gain:\n        datatyle: 'number'\n        description: 'amount of gain to apply (0...1)'\n        required: true\n\n    ArrayableHelper @, 'gain', ports\n\nexports.getComponent = -> new Gain\n"},"webaudio/MakeTime":{language:"coffeescript",source:"noflo = require 'noflo'\nArrayableHelper = require 'noflo-helper-arrayable'\n\nclass MakeTime extends noflo.Component\n  description: 'Creates one or more time events'\n  icon: 'clock-o'\n  constructor: ->\n    super()\n    ports =\n      time:\n        datatype: 'number'\n        description: 'when in future (ms)'\n      offset:\n        datatype: 'number'\n        description: 'distance from start (ms)'\n      duration:\n        datatype: 'number'\n        description: 'how long (ms)'\n\n    ArrayableHelper @, 'time', ports\n\nexports.getComponent = -> new MakeTime\n"},"webaudio/Oscillator":{language:"coffeescript",source:"noflo = require 'noflo'\nArrayableHelper = require 'noflo-helper-arrayable'\n\nclass Oscillator extends noflo.Component\n  description: 'Create an audio source with a periodic waveform ' +\n               '(sine, square, sawtooth, triangle, custom)'\n  icon: 'volume-up'\n  constructor: ->\n    super()\n    ports =\n      waveform:\n        datatype: 'string'\n        description: 'sine, square, sawtooth, triangle, custom'\n        required: true\n      frequency:\n        datatype: 'number'\n        description: 'frequency of signal'\n        required: true\n      start:\n        datatype: 'number'\n        description: 'schedules to playback at an exact time'\n      stop:\n        datatype: 'number'\n        description: 'schedules to stop at an exact time'\n\n    ArrayableHelper @, 'oscillator', ports\n\nexports.getComponent = -> new Oscillator\n"},"webaudio/Play":{language:"coffeescript",source:"noflo = require 'noflo'\n\nclass PlayCommands\n  constructor: (scope) ->\n    @audionodes = scope.audionodes\n    @table_audionodes = scope.table_audionodes\n    @buffer_data = scope.buffer_data\n    @context = scope.context\n\n  parse: (audionodes) =>\n    @walk audionodes, 0\n\n  # Recursively walk through the AudioNodes' graph and connect them\n  walk: (audionodes, level) =>\n    for audionode in audionodes\n      created = @create audionode\n      # Connect top-level AudioNodes to destination\n      if level is 0\n        created.connect @context.destination\n      if audionode.audionodes?\n        # Has children?\n        children = audionode.audionodes\n        if children instanceof Array\n          @walk(children, level+1).connect created\n        else\n          @walk([children], level+1).connect created\n      else\n        # Is child?\n        return created\n\n  create: (audionode) =>\n    return @parseCommand audionode\n\n  # noflo-canvas legacy\n  parseCommand: (commands) =>\n    return unless @context\n    @parseThing commands\n\n  # Recursively parse things and arrays of things\n  parseThing: (thing, before, after) =>\n    if thing? and thing.type? and @[thing.type]?\n      if before?\n        before()\n      return @[thing.type](thing)\n      if after?\n        after()\n    else if thing instanceof Array\n      for item in thing\n        continue unless item?\n        @parseThing item, before, after\n\n  # Instructions (AudioNodes)\n  gain: (params) =>\n    # For now update/create is almost the same, we should improve this ASAP\n    # so we can get off this selection and to do specific things for each case\n    if params.id of @table_audionodes\n      audioNode = @table_audionodes[params.id]\n    else\n      audioNode = @context.createGain()\n      @table_audionodes[params.id] = audioNode\n    audioNode.gain.value = params.gain\n    return audioNode\n\n  oscillator: (params) =>\n    if params.id of @table_audionodes\n      audioNode = @table_audionodes[params.id]\n    else\n      audioNode = @context.createOscillator()\n      # FIXME: How to deal with start?\n      audioNode.start params.start\n      @table_audionodes[params.id] = audioNode\n    audioNode.type = params.waveform\n    audioNode.frequency.value = params.frequency\n    #audioNode.start params.start\n    return audioNode\n\n  panner: (params) =>\n    if params.id of @table_audionodes\n      audioNode = @table_audionodes[params.id]\n    else\n      audioNode = @context.createPanner()\n      @table_audionodes[params.id] = audioNode\n    # FIXME: Just 2D for now to interoperate with noflo-canvas\n    audioNode.setPosition(params.position.x, params.position.y, 0)\n    return audioNode\n\n  audiofile: (params) =>\n    if params.id of @table_audionodes\n      # update\n      # A bit different, we always create a new buffer source\n      audioNode = @context.createBufferSource()\n      @table_audionodes[params.id] = audioNode\n      # Update the buffer data\n      if @buffer_data[params.id]?\n        @updateBuffer(audioNode, params.id)\n        # Plays only on update\n        {time, offset, duration} = params.start\n        audioNode.start time, offset, duration\n    else\n      # create\n      audioNode = @context.createBufferSource()\n      @table_audionodes[params.id] = audioNode\n      # XHR downloads and loads only at node creation\n      request = new XMLHttpRequest()\n      request.open(\"GET\", params.file, true)\n      request.responseType = \"arraybuffer\"\n      request.onload = () =>\n        @context.decodeAudioData request.response, (buffer) =>\n          @buffer_data[params.id] = buffer\n          # FIXME: Should we blink the component, how to do that from here?\n          @updateBuffer(audioNode, params.id)\n      request.send()\n\n    return audioNode\n\n  updateBuffer: (audionode, id) =>\n    audionode.buffer = @buffer_data[id]\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Plays given chains and patterns'\n  c.icon = 'play'\n  c.inPorts.add 'audionodes',\n    datatype: 'object'\n    addressable: true\n\n  c.scopes = {}\n  c.tearDown = (callback) ->\n    scopes = Object.keys c.scopes\n    unless scopes.length\n      do callback\n      return\n    scope = scopes[0]\n    unless c.scopes[scope]?.context\n      # Already torn down\n      delete c.scopes[scope]\n      c.tearDown callback\n      return\n    c.scopes[scope].context.close()\n      .then ->\n        delete c.scopes[scope]\n        c.tearDown callback\n      , (err) ->\n        callback err\n    return\n\n  ensureScope = (scope) ->\n    unless c.scopes[scope]\n      # Create context and audionodes if scope doesn't exist\n      context = new AudioContext()\n      c.scopes[scope] =\n        audionodes: []\n        table_audionodes: {}\n        buffer_data: {}\n        context: context\n\n    return c.scopes[scope]\n\n  c.process (input, output) ->\n    # Ensure that we have a scope storing context and audio nodes\n    scope = ensureScope input.scope\n\n    # Check if we've received audio nodes\n    indexesWithData = input.attached('audionodes').filter (idx) ->\n      input.hasData ['audionodes', idx]\n    return unless indexesWithData.length\n\n    # Play audio nodes\n    play = new PlayCommands scope\n\n    indexesWithData.forEach (idx) ->\n      # Read audio nodes into scope\n      scope.audionodes[idx] = input.getData ['audionodes', idx]\n      # Parse each audio node\n      if scope.audionodes[idx] instanceof Array\n        play.parse scope.audionodes[idx]\n      else\n        play.parse [scope.audionodes[idx]]\n\n    output.done()\n    return\n"},"webaudio/Panner":{language:"coffeescript",source:"noflo = require 'noflo'\nArrayableHelper = require 'noflo-helper-arrayable'\n\nclass Panner extends noflo.Component\n  description: 'Changes the location of a given audio source'\n  icon: 'compass'\n  constructor: ->\n    super()\n    ports =\n      audionodes:\n        datatype: 'object'\n        description: 'audio nodes (oscillators, buffer sources, ...)'\n        addressable: true\n        required: true\n      position:\n        datatyle: 'object'\n        description: 'a 2D or 3D point'\n        required: true\n\n    ArrayableHelper @, 'panner', ports\n\nexports.getComponent = -> new Panner\n"},"websocket/Connect":{language:"coffeescript",source:"noflo = require 'noflo'\nWsClient = WebSocket\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.inPorts.add 'url',\n    datatype: 'string'\n  c.inPorts.add 'protocol',\n    datatype: 'string'\n    default: ''\n    control: true\n  c.outPorts.add 'connection',\n    datatype: 'object'\n  c.outPorts.add 'error',\n    datatype: 'object'\n  c.process (input, output) ->\n    return unless input.hasData 'url'\n    return if input.attached('protocol').length and not input.hasData 'protocol'\n    protocol = ''\n    if input.hasData 'protocol'\n      protocol = input.getData 'protocol'\n\n    url = input.getData 'url'\n    client = new WsClient url, protocol\n    client.onerror = (err) ->\n      output.done err\n    client.onopen = ->\n      output.sendDone\n        connection: client\n    return\n"},"websocket/ListenMessages":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.inPorts.add 'connection',\n    datatype: 'object'\n  c.outPorts.add 'string',\n    datatype: 'string'\n  c.outPorts.add 'binary',\n    datatype: 'buffer'\n  c.forwardBrackets = {}\n  c.autoOrdering = false\n  c.process (input, output) ->\n    return unless input.hasData 'connection'\n    connection = input.getData 'connection'\n    if noflo.isBrowser()\n      connection.addEventListener 'message', (message) ->\n        output.send\n          string: message.data\n      , false\n      connection.addEventListener 'close', (message) ->\n        output.done()\n      , false\n      return\n    connection.on 'message', (message) ->\n      if message.type is 'utf8'\n        output.send\n          string: message.utf8Data\n        return\n      if message.type is 'binary'\n        output.send\n          binary: message.binaryData\n        return\n    connection.on 'close', ->\n      output.done()\n"},"websocket/SendMessage":{language:"coffeescript",source:"noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.inPorts.add  'connection',\n    datatype: 'object'\n    control: true\n  c.inPorts.add 'string',\n    datatype: 'string'\n\n  c.process (input, output) ->\n    return unless input.hasData 'connection', 'string'\n\n    [connection, message] = input.getData 'connection', 'string'\n    if noflo.isBrowser()\n      connection.send message\n    else\n      connection.sendUTF message\n    output.done()\n"},"flow/Deny":{language:"javascript",source:"const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  c.description = 'deny certain incoming packets';\n  c.inPorts.add('in', {\n    datatype: 'all',\n    description: 'An IP to be forwarded if accepted',\n  });\n  c.inPorts.add('deny', {\n    datatype: 'all',\n    description: 'IP to be denied',\n  });\n  c.inPorts.add('reset', {\n    datatype: 'bang',\n    description: 'Reset the list denied IPs',\n  });\n  c.outPorts.add('out',\n    { datatype: 'all' });\n  c.denied = {};\n  c.tearDown = (callback) => {\n    c.denied = {};\n    callback();\n  };\n  return c.process((input, output) => {\n    if (input.hasData('deny')) {\n      const deny = input.getData('deny');\n      if (!c.denied[input.scope]) { c.denied[input.scope] = []; }\n      c.denied[input.scope].push(deny);\n      output.done();\n      return;\n    }\n    if (input.hasData('reset')) {\n      input.getData('reset');\n      c.denied = {};\n      output.done();\n      return;\n    }\n    if (!input.hasData('in')) { return; }\n    const data = input.getData('in');\n    if (c.denied[input.scope].indexOf(data) !== -1) {\n      output.done();\n      return;\n    }\n    output.sendDone({ out: data });\n  });\n};\n",tests:"describe('Deny component', () => {\n  let loader = null;\n  let deny = null;\n  let ins = null;\n  let out = null;\n\n  before(() => {\n    loader = new noflo.ComponentLoader(baseDir);\n  });\n  beforeEach(function (done) {\n    this.timeout(4000);\n    loader.load('flow/Deny', (err, instance) => {\n      if (err) {\n        done(err);\n        return;\n      }\n      ins = noflo.internalSocket.createSocket();\n      instance.inPorts.in.attach(ins);\n      deny = noflo.internalSocket.createSocket();\n      instance.inPorts.deny.attach(deny);\n      out = noflo.internalSocket.createSocket();\n      instance.outPorts.out.attach(out);\n      done();\n    });\n  });\n  describe('denying only certain numbers', () => {\n    it('should send the expected numbers out', (done) => {\n      const expected = [\n        '< foo',\n        '2',\n        '4',\n        '>',\n      ];\n      const received = [];\n      out.on('begingroup', (group) => received.push(`< ${group}`));\n      out.on('data', (data) => received.push(`${data}`));\n      out.on('endgroup', () => {\n        received.push('>');\n        if (received.length !== expected.length) { return; }\n        chai.expect(received).to.eql(expected);\n        done();\n      });\n      deny.send(1);\n      deny.send(3);\n      ins.beginGroup('foo');\n      ins.send(1);\n      ins.send(2);\n      ins.send(3);\n      ins.send(4);\n      ins.endGroup('foo');\n    });\n  });\n});\n"},"objects/MapProperty":{language:"javascript",source:"const noflo = require('noflo');\n\n// currently only accepts one map and one regex per object\nexports.getComponent = function () {\n  const c = new noflo.Component();\n\n  c.inPorts = new noflo.InPorts({\n    map: {\n      datatype: 'all',\n      description: 'Map to use to map property on object',\n    },\n    regexp: {\n      datatype: 'string',\n      description: 'Regex to use to map property on object',\n    },\n    in: {\n      datatype: 'object',\n      description: 'Object to map property on',\n      required: true,\n    },\n  });\n  c.outPorts = new noflo.OutPorts({\n    out: {\n      datatype: 'object',\n      required: true,\n    },\n  });\n\n  return c.process((input, output) => {\n    if (!input.hasData('in')) { return; }\n    if (input.attached('regexp').length > 0) { if (!input.hasData('regexp')) { return; } }\n    if (input.attached('map').length > 0) { if (!input.hasData('map')) { return; } }\n\n    const data = input.getData('in');\n\n    const regexps = {};\n    if (input.hasData('regexp')) {\n      const regexp = input.getData('regexp');\n      const regexPart = regexp.split('=');\n      // eslint-disable-next-line prefer-destructuring\n      regexps[regexPart[0]] = regexPart[1];\n    }\n\n    let map = {};\n    if (input.hasData('map')) {\n      map = input.getData('map');\n      if (typeof map !== 'object') {\n        const mapParts = map.split('=');\n        // eslint-disable-next-line prefer-destructuring\n        map[mapParts[0]] = mapParts[1];\n      }\n    }\n\n    const newData = {};\n    Object.keys(data).forEach((property) => {\n      const value = data[property];\n      let prop = property;\n      if (property in map) {\n        prop = map[property];\n      }\n\n      Object.keys(regexps).forEach((expression) => {\n        const replacement = regexps[expression];\n        const regexp = new RegExp(expression);\n        const matched = regexp.exec(prop);\n        if (!matched) { return; }\n        prop = prop.replace(regexp, replacement);\n      });\n\n      if (prop in newData) {\n        if (Array.isArray(newData[prop])) {\n          newData[prop].push(value);\n        } else {\n          newData[prop] = [newData[prop], value];\n        }\n      } else {\n        newData[prop] = value;\n      }\n    });\n\n    output.sendDone({ out: newData });\n  });\n};\n",tests:"describe('MapProperty component', () => {\n  let c = null;\n  let ins = null;\n  let map = null;\n  let out = null;\n\n  before((done) => {\n    const loader = new noflo.ComponentLoader(baseDir);\n    return loader.load('objects/MapProperty', (err, instance) => {\n      if (err) { return done(err); }\n      c = instance;\n      return done();\n    });\n  });\n\n  beforeEach((done) => {\n    ins = noflo.internalSocket.createSocket();\n    map = noflo.internalSocket.createSocket();\n    out = noflo.internalSocket.createSocket();\n    c.inPorts.in.attach(ins);\n    c.inPorts.map.attach(map);\n    c.outPorts.out.attach(out);\n    return done();\n  });\n\n  afterEach((done) => {\n    c.outPorts.out.detach(out);\n    out = null;\n    return done();\n  });\n\n  describe('when instantiated', () => {\n    it('should have input ports', () => chai.expect(c.inPorts.in).to.be.an('object'));\n    return it('should have an output port', () => chai.expect(c.outPorts.out).to.be.an('object'));\n  });\n\n  return describe('map properties', () => {\n    const o = { a: 1, b: 2, c: 3 };\n\n    it('test no map', (done) => {\n      c.inPorts.map.sockets = [];\n      const output = [];\n\n      out.on('data', (data) => output.push(data));\n\n      out.once('disconnect', () => {\n        chai.expect(output).to.deep.equal([{ a: 1, b: 2, c: 3 }]);\n        return done();\n      });\n\n      return ins.post(new noflo.IP('data', o));\n    });\n\n    it('test map to letter key', (done) => {\n      const output = [];\n      out.on('data', (data) => output.push(data));\n      out.once('disconnect', () => {\n        chai.expect(output).to.deep.equal([{ d: 1, b: 2, c: 3 }]);\n        return done();\n      });\n      map.post(new noflo.IP('data', { a: 'd' }));\n      return ins.post(new noflo.IP('data', o));\n    });\n\n    it('test map to colliding key', (done) => {\n      const output = [];\n      out.on('data', (data) => output.push(data));\n      out.once('disconnect', () => {\n        chai.expect(output).to.deep.equal([{ b: [1, 2], c: 3 }]);\n        return done();\n      });\n      map.post(new noflo.IP('data', { a: 'b' }));\n      return ins.post(new noflo.IP('data', o));\n    });\n\n    it('test map to 0 key', (done) => {\n      const output = [];\n      out.on('data', (data) => output.push(data));\n      out.once('disconnect', () => {\n        chai.expect(output).to.deep.equal([{ 0: 1, b: 2, c: 3 }]);\n        return done();\n      });\n      map.post(new noflo.IP('data', { a: 0 }));\n      return ins.post(new noflo.IP('data', o));\n    });\n\n    it('test map to null key', (done) => {\n      const output = [];\n      out.on('data', (data) => output.push(data));\n      out.once('disconnect', () => {\n        chai.expect(output).to.deep.equal([{ null: 1, b: 2, c: 3 }]);\n        return done();\n      });\n      map.post(new noflo.IP('data', { a: null }));\n      return ins.post(new noflo.IP('data', o));\n    });\n\n    it('test map to undefined key', (done) => {\n      const output = [];\n      out.on('data', (data) => output.push(data));\n      out.once('disconnect', () => {\n        chai.expect(output).to.deep.equal([{ undefined: 1, b: 2, c: 3 }]);\n        return done();\n      });\n      map.post(new noflo.IP('data', { a: undefined }));\n      return ins.post(new noflo.IP('data', o));\n    });\n\n    return it('test map to false key', (done) => {\n      const output = [];\n      out.on('data', (data) => output.push(data));\n      out.once('disconnect', () => {\n        chai.expect(output).to.deep.equal([{ false: 1, b: 2, c: 3 }]);\n        return done();\n      });\n      map.post(new noflo.IP('data', { a: false }));\n      return ins.post(new noflo.IP('data', o));\n    });\n  });\n});\n"}};t.setSource=function(e,t,n,a,i,s){r.setSource(o,e,t,n,a,i,s)},t.getSource=function(e,t,n){r.getSource(o,e,t,n)},t.getLanguages=r.getLanguages,t.register=function(e,t){e.setLibraryIcon("adapters","plug"),e.setLibraryIcon("canvas","paint-brush"),e.setLibraryIcon("canvas","paint-brush"),e.setLibraryIcon("dom","html5"),e.setLibraryIcon("flow","random"),e.setLibraryIcon("groups","tags"),e.setLibraryIcon("indexeddb","database"),e.setLibraryIcon("localstorage","database"),e.setLibraryIcon("math","plus-circle"),e.setLibraryIcon("objects","list"),e.setLibraryIcon("packets","dropbox"),e.setLibraryIcon("physics","cogs"),e.setLibraryIcon("react","empire"),e.setLibraryIcon("routers","code-fork"),e.setLibraryIcon("runtime","truck"),e.setLibraryIcon("strings","font"),e.setLibraryIcon("websocket","comments"),e.setLibraryIcon("websocket","comments"),e.registerComponent(null,"Graph",n(67921)),e.registerComponent("adapters","ObjectToPackets",n(61923)),e.registerComponent("adapters","ObjectToString",n(93196)),e.registerComponent("adapters","PacketsToArray",n(2045)),e.registerComponent("adapters","PacketsToObject",n(74137)),e.registerComponent("adapters","PairsToObject",n(59627)),e.registerComponent("adapters","PropertiesToObjects",n(48667)),e.registerComponent("ajax","CorsProxy",n(84933)),e.registerComponent("ajax","Get",n(26174)),e.registerComponent("ajax","GetJsonP",n(51444)),e.registerComponent("amd","Configure",n(55152)),e.registerComponent("amd","Require",n(31685)),e.registerComponent("assembly-utils","All",n(68639)),e.registerComponent("assembly-utils","ComparePath",n(31491)),e.registerComponent("assembly-utils","Fork",n(30618)),e.registerComponent("assembly-utils","FromAssembly",n(31460)),e.registerComponent("assembly-utils","Merge",n(81086)),e.registerComponent("assembly-utils","ToAssembly",n(96782)),e.registerComponent("canvas","ClearRect",n(32163)),e.registerComponent("canvas","ColorArrayToCss",n(95783)),e.registerComponent("canvas","Draw",n(8877)),e.registerComponent("canvas","DrawImage",n(95422)),e.registerComponent("canvas","Fill",n(82851)),e.registerComponent("canvas","FillRect",n(94911)),e.registerComponent("canvas","FillStyle",n(89046)),e.registerComponent("canvas","Group",n(30208)),e.registerComponent("canvas","LineWidth",n(75813)),e.registerComponent("canvas","MakeArc",n(92417)),e.registerComponent("canvas","MakeBezierCurve",n(64868)),e.registerComponent("canvas","MakeCircle",n(97252)),e.registerComponent("canvas","MakeColor",n(30759)),e.registerComponent("canvas","MakeGrid",n(52502)),e.registerComponent("canvas","MakeIncrement",n(41421)),e.registerComponent("canvas","MakePath",n(30018)),e.registerComponent("canvas","MakePoint",n(50048)),e.registerComponent("canvas","MakeRGBColor",n(67346)),e.registerComponent("canvas","MakeRandom",n(43745)),e.registerComponent("canvas","MakeRange",n(43269)),e.registerComponent("canvas","MakeRectangle",n(60507)),e.registerComponent("canvas","MakeRectangleAspectRatio",n(14269)),e.registerComponent("canvas","Recurse",n(73998)),e.registerComponent("canvas","Stroke",n(63063)),e.registerComponent("canvas","StrokeRect",n(42230)),e.registerComponent("canvas","StrokeStyle",n(7961)),e.registerComponent("canvas","Transform",n(1649)),e.registerComponent("canvas","PointFromObject",n(67546)),e.registerComponent("canvas","RectangleFromObject",n(77460)),e.registerComponent("canvas","CreateCanvas",n(94160)),e.registerComponent("canvas","SaveJPEG",n(70924)),e.registerComponent("canvas","SavePNG",n(90022)),e.registerComponent("canvas","CopyCanvas",n(497)),e.registerComponent("clmtrackr","TrackFace",n(42205)),e.registerComponent("clmtrackr","WireframeFace",n(76257)),e.registerComponent("core","Callback",n(88770)),e.registerComponent("core","Copy",n(94473)),e.registerComponent("core","DisconnectAfterPacket",n(43472)),e.registerComponent("core","Drop",n(54025)),e.registerComponent("core","Kick",n(61426)),e.registerComponent("core","MakeFunction",n(78326)),e.registerComponent("core","Merge",n(30291)),e.registerComponent("core","Output",n(26498)),e.registerComponent("core","ReadGlobal",n(99647)),e.registerComponent("core","Repeat",n(36167)),e.registerComponent("core","RepeatAsync",n(45150)),e.registerComponent("core","RepeatDelayed",n(24915)),e.registerComponent("core","RunInterval",n(11142)),e.registerComponent("core","RunTimeout",n(98834)),e.registerComponent("core","SendNext",n(55086)),e.registerComponent("core","Split",n(24032)),e.registerComponent("css","MoveElement",n(29676)),e.registerComponent("css","ResizeElement",n(38776)),e.registerComponent("css","RotateElement",n(74848)),e.registerComponent("css","SetBackgroundImage",n(43150)),e.registerComponent("css","SetElementTop",n(89322)),e.registerComponent("dom","AddClass",n(91858)),e.registerComponent("dom","AppendChild",n(57208)),e.registerComponent("dom","CreateElement",n(79697)),e.registerComponent("dom","CreateFragment",n(98561)),e.registerComponent("dom","GetAttribute",n(2655)),e.registerComponent("dom","GetElement",n(31231)),e.registerComponent("dom","HasClass",n(8695)),e.registerComponent("dom","Listen",n(1131)),e.registerComponent("dom","ReadHtml",n(82895)),e.registerComponent("dom","RemoveClass",n(61450)),e.registerComponent("dom","RemoveElement",n(85329)),e.registerComponent("dom","RequestAnimationFrame",n(80659)),e.registerComponent("dom","SetAttribute",n(72627)),e.registerComponent("dom","WriteHtml",n(36076)),e.registerComponent("flow","Accept",n(58050)),e.registerComponent("flow","All",n(4041)),e.registerComponent("flow","CleanDisconnect",n(45140)),e.registerComponent("flow","CleanSplit",n(93883)),e.registerComponent("flow","Collate",n(45553)),e.registerComponent("flow","CollectUntilIdle",n(74810)),e.registerComponent("flow","Concat",n(21914)),e.registerComponent("flow","CountDown",n(16209)),e.registerComponent("flow","CountedMerge",n(88772)),e.registerComponent("flow","Deny",n(61853)),e.registerComponent("flow","Fork",n(31086)),e.registerComponent("flow","Gate",n(72303)),e.registerComponent("flow","HasGroup",n(11326)),e.registerComponent("flow","Race",n(59963)),e.registerComponent("flow","Reorder",n(31232)),e.registerComponent("flow","ReverseSplit",n(1283)),e.registerComponent("flow","Stop",n(76003)),e.registerComponent("flow","Throttle",n(65951)),e.registerComponent("geometry","ConstrainedDelaunay",n(70973)),e.registerComponent("geometry","Delaunay",n(63765)),e.registerComponent("geometry","Voronoi",n(31270)),e.registerComponent("groups","CollectGroups",n(85749)),e.registerComponent("groups","CollectObject",n(504)),e.registerComponent("groups","CollectTree",n(88545)),e.registerComponent("groups","FilterByGroup",n(27859)),e.registerComponent("groups","FirstGroup",n(90278)),e.registerComponent("groups","GenerateGroup",n(27319)),e.registerComponent("groups","Group",n(5893)),e.registerComponent("groups","GroupByObjectKey",n(57045)),e.registerComponent("groups","GroupZip",n(90778)),e.registerComponent("groups","LastGroup",n(5076)),e.registerComponent("groups","MapGroup",n(5331)),e.registerComponent("groups","MergeGroups",n(2635)),e.registerComponent("groups","Objectify",n(39911)),e.registerComponent("groups","ReadGroup",n(25501)),e.registerComponent("groups","ReadGroups",n(97223)),e.registerComponent("groups","Regroup",n(4876)),e.registerComponent("groups","RemoveGroups",n(37074)),e.registerComponent("groups","SendByGroup",n(80585)),e.registerComponent("groups","ObjectifyByGroup",n(69867)),e.registerComponent("gum","GetUserMedia",n(853)),e.registerComponent("image","AdjustBrightness",n(39640)),e.registerComponent("image","AdjustContrast",n(13886)),e.registerComponent("image","AdjustSaturation",n(36593)),e.registerComponent("image","ApplyAdjustmentCurve",n(35102)),e.registerComponent("image","ApplyVignette",n(41165)),e.registerComponent("image","CalculateAspectRatio",n(67343)),e.registerComponent("image","Crop",n(43093)),e.registerComponent("image","ExtractLightness",n(39319)),e.registerComponent("image","FindFeatureFreeAreas",n(76081)),e.registerComponent("image","FindFreeRectangles",n(94017)),e.registerComponent("image","GetBorderlessBox",n(49373)),e.registerComponent("image","GetCannyEdges",n(24513)),e.registerComponent("image","GetColors",n(42787)),e.registerComponent("image","GetColorsFromCentroids",n(47148)),e.registerComponent("image","GetColorsFromRectangles",n(46705)),e.registerComponent("image","GetFeaturesYAPE",n(61649)),e.registerComponent("image","GetOrientation",n(18881)),e.registerComponent("image","GetPresetCurve",n(67971)),e.registerComponent("image","ImageToCanvas",n(93863)),e.registerComponent("image","ToFullscale",n(79709)),e.registerComponent("image","VideoToCanvas",n(14001)),e.registerComponent("image","UrlToCanvas",n(28451)),e.registerComponent("image","CreateImage",n(16754)),e.registerComponent("image","Measure",n(48971)),e.registerComponent("indexeddb","AbortTransaction",n(39221)),e.registerComponent("indexeddb","BeginTransaction",n(24269)),e.registerComponent("indexeddb","Close",n(2347)),e.registerComponent("indexeddb","CreateIndex",n(91094)),e.registerComponent("indexeddb","CreateStore",n(966)),e.registerComponent("indexeddb","Delete",n(63985)),e.registerComponent("indexeddb","DeleteDatabase",n(20998)),e.registerComponent("indexeddb","DeleteStore",n(67573)),e.registerComponent("indexeddb","Get",n(2156)),e.registerComponent("indexeddb","GetIndex",n(76538)),e.registerComponent("indexeddb","GetStore",n(68071)),e.registerComponent("indexeddb","Open",n(64848)),e.registerComponent("indexeddb","Put",n(6405)),e.registerComponent("indexeddb","Query",n(6109)),e.registerComponent("indexeddb","QueryFrom",n(56112)),e.registerComponent("indexeddb","QueryOnly",n(86996)),e.registerComponent("indexeddb","QueryTo",n(20208)),e.registerComponent("indexeddb","UpgradeRouter",n(96063)),e.registerComponent("interaction","Focus",n(46562)),e.registerComponent("interaction","ListenChange",n(40525)),e.registerComponent("interaction","ListenDrag",n(53892)),e.registerComponent("interaction","ListenEvent",n(31823)),e.registerComponent("interaction","ListenHash",n(82871)),e.registerComponent("interaction","ListenKeyboard",n(96322)),e.registerComponent("interaction","ListenKeyboardShortcuts",n(69333)),e.registerComponent("interaction","ListenMouse",n(75075)),e.registerComponent("interaction","ListenPointer",n(39109)),e.registerComponent("interaction","ListenResize",n(89324)),e.registerComponent("interaction","ListenScroll",n(409)),e.registerComponent("interaction","ListenSpeech",n(65776)),e.registerComponent("interaction","ListenTouch",n(93724)),e.registerComponent("interaction","ReadCoordinates",n(39075)),e.registerComponent("interaction","ReadGamepad",n(9597)),e.registerComponent("interaction","SetHash",n(92175)),e.registerComponent("localstorage","GetItem",n(54421)),e.registerComponent("localstorage","ListAdd",n(48292)),e.registerComponent("localstorage","ListGet",n(56673)),e.registerComponent("localstorage","ListRemove",n(78513)),e.registerComponent("localstorage","ListenRemoteChanges",n(69222)),e.registerComponent("localstorage","RemoveItem",n(3006)),e.registerComponent("localstorage","SetItem",n(83673)),e.registerComponent("math","Accumulate",n(78893)),e.registerComponent("math","Add",n(36707)),e.registerComponent("math","CalculateAngle",n(13289)),e.registerComponent("math","CalculateDistance",n(54626)),e.registerComponent("math","Ceil",n(87731)),e.registerComponent("math","Compare",n(4640)),e.registerComponent("math","CountSum",n(48294)),e.registerComponent("math","Divide",n(74622)),e.registerComponent("math","Exponentiate",n(57325)),e.registerComponent("math","Floor",n(23774)),e.registerComponent("math","MapRange",n(17940)),e.registerComponent("math","Modulo",n(80334)),e.registerComponent("math","Multiply",n(24015)),e.registerComponent("math","Random",n(49003)),e.registerComponent("math","RangedRandomInt",n(80018)),e.registerComponent("math","SendNumber",n(92732)),e.registerComponent("math","Subtract",n(65904)),e.registerComponent("objects","CallMethod",n(11953)),e.registerComponent("objects","ComparePath",n(18057)),e.registerComponent("objects","CreateDate",n(64694)),e.registerComponent("objects","CreateError",n(51251)),e.registerComponent("objects","CreateObject",n(62862)),e.registerComponent("objects","DuplicateProperty",n(37517)),e.registerComponent("objects","Extend",n(97869)),e.registerComponent("objects","ExtractProperty",n(11618)),e.registerComponent("objects","FilterProperty",n(41112)),e.registerComponent("objects","FilterPropertyValue",n(85209)),e.registerComponent("objects","FlattenObject",n(7083)),e.registerComponent("objects","GetCurrentTimestamp",n(68675)),e.registerComponent("objects","GetObjectKey",n(63947)),e.registerComponent("objects","GetObjectPath",n(66698)),e.registerComponent("objects","GetRandomMember",n(59660)),e.registerComponent("objects","InsertProperty",n(38989)),e.registerComponent("objects","Join",n(20394)),e.registerComponent("objects","Keys",n(90073)),e.registerComponent("objects","MapProperty",n(77714)),e.registerComponent("objects","MapPropertyValue",n(37946)),e.registerComponent("objects","MergeObjects",n(59775)),e.registerComponent("objects","RemoveProperty",n(70311)),e.registerComponent("objects","ReplaceKey",n(84694)),e.registerComponent("objects","SetProperty",n(19116)),e.registerComponent("objects","SetPropertyValue",n(23057)),e.registerComponent("objects","SimplifyObject",n(70801)),e.registerComponent("objects","Size",n(65288)),e.registerComponent("objects","SliceArray",n(73173)),e.registerComponent("objects","SplitArray",n(88510)),e.registerComponent("objects","SplitObject",n(16674)),e.registerComponent("objects","UniqueArray",n(93810)),e.registerComponent("objects","Values",n(75756)),e.registerComponent("packets","Compact",n(90677)),e.registerComponent("packets","CountPackets",n(91199)),e.registerComponent("packets","Counter",n(6330)),e.registerComponent("packets","Defaults",n(24945)),e.registerComponent("packets","FilterByPosition",n(86887)),e.registerComponent("packets","FilterByValue",n(89396)),e.registerComponent("packets","FilterPacket",n(17190)),e.registerComponent("packets","FilterPackets",n(26515)),e.registerComponent("packets","Flatten",n(47877)),e.registerComponent("packets","GetScope",n(21860)),e.registerComponent("packets","GroupByPacket",n(299)),e.registerComponent("packets","LastPacket",n(58511)),e.registerComponent("packets","Map",n(2151)),e.registerComponent("packets","Range",n(77048)),e.registerComponent("packets","Replace",n(98429)),e.registerComponent("packets","ScopeFromObject",n(94310)),e.registerComponent("packets","ScopeToObject",n(44808)),e.registerComponent("packets","SendWith",n(42878)),e.registerComponent("packets","SetScope",n(56200)),e.registerComponent("packets","StepSequencer",n(27975)),e.registerComponent("packets","UniquePacket",n(74125)),e.registerComponent("packets","Unzip",n(27964)),e.registerComponent("packets","Zip",n(69493)),e.registerComponent("packets","First",n(89159)),e.registerComponent("packets","MergeConnections",n(27788)),e.registerComponent("physics","Spring",n(57238)),e.registerComponent("react","ListenEvents",n(10266)),e.registerComponent("react","Mount",n(37733)),e.registerComponent("react","SetProps",n(79180)),e.registerComponent("react","Unmount",n(48755)),e.registerComponent("react","Render",n(26638)),e.registerComponent("routers","ControlledSequence",n(7534)),e.registerComponent("routers","GroupRouter",n(11503)),e.registerComponent("routers","KickRouter",n(88256)),e.registerComponent("routers","PacketRegexpRouter",n(13575)),e.registerComponent("routers","PacketRouter",n(10680)),e.registerComponent("routers","SplitInSequence",n(37062)),e.registerComponent("runtime","ConnectRuntime",n(91934)),e.registerComponent("runtime","DebugNetwork",n(78713)),e.registerComponent("runtime","GetSource",n(40402)),e.registerComponent("runtime","ListComponents",n(22854)),e.registerComponent("runtime","ListenNetwork",n(6233)),e.registerComponent("runtime","ListenRuntime",n(62193)),e.registerComponent("runtime","SendComponent",n(48896)),e.registerComponent("runtime","SendEdges",n(81971)),e.registerComponent("runtime","SendGraph",n(16322)),e.registerComponent("runtime","SendGraphChanges",n(28790)),e.registerComponent("strings","Base64Encode",n(53187)),e.registerComponent("strings","CompileString",n(11244)),e.registerComponent("strings","ConvertEncoding",n(4457)),e.registerComponent("strings","EscapeQuotes",n(20904)),e.registerComponent("strings","Filter",n(59554)),e.registerComponent("strings","Jsonify",n(87277)),e.registerComponent("strings","LowerCaseString",n(13240)),e.registerComponent("strings","MatchReplace",n(74012)),e.registerComponent("strings","ParseFloat",n(3297)),e.registerComponent("strings","ParseInt",n(90425)),e.registerComponent("strings","ParseJson",n(85687)),e.registerComponent("strings","Quote",n(13646)),e.registerComponent("strings","Replace",n(16190)),e.registerComponent("strings","SendString",n(61758)),e.registerComponent("strings","Sift3Distance",n(59332)),e.registerComponent("strings","Splice",n(31218)),e.registerComponent("strings","SplitStr",n(52964)),e.registerComponent("strings","StringTemplate",n(58842)),e.registerComponent("strings","SubStr",n(34490)),e.registerComponent("strings","TemplateReplace",n(68379)),e.registerComponent("strings","ToString",n(75916)),e.registerComponent("strings","SendJson",n(67679)),e.registerComponent("tween","Ease",n(28553)),e.registerComponent("tween","EaseTime",n(51389)),e.registerComponent("tween","Timeline",n(13759)),e.registerComponent("webaudio","AudioFile",n(48948)),e.registerComponent("webaudio","Chorus",n(47583)),e.registerComponent("webaudio","Convolver",n(65144)),e.registerComponent("webaudio","Gain",n(96604)),e.registerComponent("webaudio","MakeTime",n(65580)),e.registerComponent("webaudio","Oscillator",n(54568)),e.registerComponent("webaudio","Panner",n(54744)),e.registerComponent("webaudio","Play",n(64115)),e.registerComponent("websocket","Connect",n(70813)),e.registerComponent("websocket","ListenMessages",n(14813)),e.registerComponent("websocket","SendMessage",n(80794));const o=[];o.push(n(51763)),r.registerCustomLoaders(e,o,t)}},21518:module=>{function registerCustomLoaders(e,t,n){if(!t.length)return void n();const r=t.shift();e.registerLoader(r,(r=>{r?n(r):registerCustomLoaders(e,t,n)}))}function setSource(sources,loader,packageId,name,originalSource,language,callback){let implementation,source=originalSource;if("coffeescript"===language){if("undefined"!=typeof window&&!window.CoffeeScript)return void callback(new Error(`CoffeeScript compiler needed for ${packageId}/${name} not available`));try{source=window.CoffeeScript.compile(source,{bare:!0})}catch(e){return void callback(e)}}if(("es6"===language||"es2015"===language)&&"undefined"!=typeof window&&window.babel)try{source=window.babel.transform(source).code}catch(e){return void callback(e)}try{const withExports=`(function () { var exports = {}; ${source}; return exports; })();`;implementation=eval(withExports)}catch(e){return void callback(e)}if("function"!=typeof implementation&&(!implementation.getComponent||"function"!=typeof implementation.getComponent))return void callback(new Error(`Provided source for ${packageId}/${name} failed to create a runnable component`));const fullName=`${packageId}/${name}`;sources[fullName]={language,source:originalSource},loader.registerComponent(packageId,name,implementation,callback)}function getSource(e,t,n,r){if(!t.components[n])return void r(new Error(`Component ${n} not available`));const o=t.components[n];let a;if(-1!==n.indexOf("/")){const e=n.split("/");a={name:e[1],library:e[0]}}else a={name:n,library:""};return t.isGraph(o)?(a.code=JSON.stringify(o,null,2),a.language="json",void r(null,a)):e[n]?(a.code=e[n].source,a.language=e[n].language,a.tests=e[n].tests,void r(null,a)):"function"==typeof o?(a.code=o.toString(),a.language="javascript",void r(null,a)):"function"==typeof o.getComponent?(a.code=o.getComponent.toString(),a.language="javascript",void r(null,a)):void r(new Error(`Unable to get sources for ${n}`))}function getLanguages(){const e=["javascript","es2015"];return"undefined"!=typeof window&&window.CoffeeScript&&e.push("coffeescript"),e}module.exports={registerCustomLoaders,setSource,getSource,getLanguages}},88770:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component;return e.description="This component calls a given callback function for each\nIP it receives.  The Callback component is typically used to connect\nNoFlo with external Node.js code.",e.icon="sign-out",e.inPorts.add("in",{description:"Object passed as argument of the callback",datatype:"all"}),e.inPorts.add("callback",{description:"Callback to invoke",datatype:"function",control:!0,required:!0}),e.outPorts.add("error",{datatype:"object"}),e.process(((e,t)=>{if(!e.hasData("callback","in"))return;const[n,r]=e.getData("callback","in");if("function"==typeof n){try{n(r)}catch(e){return void t.done(e)}t.done()}else t.done(new Error("The provided callback must be a function"))}))}},94473:(e,t,n)=>{const r=n(76445),o=n(76414);t.getComponent=()=>{const e=new r.Component;return e.description="deep (i.e. recursively) copy an object",e.icon="copy",e.inPorts.add("in",{datatype:"all",description:"Packet to be copied"}),e.outPorts.add("out",{datatype:"all",description:"Copy of the original packet"}),e.process(((e,t)=>{if(!e.hasData("in"))return;const n=e.getData("in"),r=o.deepCopy(n);t.sendDone({out:r})}))}},43472:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component;e.description="Makes each data packet a stream of its own",e.icon="pause",e.forwardBrackets={},e.autoOrdering=!1,e.inPorts.add("in",{datatype:"all",description:"Packet to be forward with disconnection"}),e.outPorts.add("out",{datatype:"all"});let t={};return e.tearDown=e=>{t={},e()},e.process(((n,o)=>{e.autoOrdering=!1;const a=n.get("in");return t[n.scope]||(t[n.scope]=[]),"openBracket"===a.type?(t[n.scope].push(a.data),void o.done()):"closeBracket"===a.type?(t[n.scope].pop(),void o.done()):void("data"===a.type&&(t[n.scope].forEach((e=>{o.sendIP("out",new r.IP("openBracket",e))})),o.sendIP("out",a),t[n.scope].slice(0).reverse(),t[n.scope].forEach((e=>{o.sendIP("out",new r.IP("closeBracket",e))})),o.done()))}))}},54025:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component;return e.description="This component drops every packet it receives with no action",e.icon="trash-o",e.inPorts.add("in",{datatypes:"all",description:"Packet to be dropped"}),e.process(((e,t)=>{e.get("in").drop(),t.done()}))}},61426:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component;return e.description="This component generates a single packet and sends it to\nthe output port. Mostly usable for debugging, but can also be useful\nfor starting up networks.",e.icon="share",e.inPorts.add("in",{datatype:"bang",description:"Signal to send the data packet"}),e.inPorts.add("data",{datatype:"all",description:"Packet to be sent",control:!0,default:null}),e.outPorts.add("out",{datatype:"all"}),e.process(((e,t)=>{if(!e.hasStream("in"))return;if(e.attached("data").length&&!e.hasData("data"))return;e.getData("in");const n=e.getData("data");t.send({out:n}),t.done()}))}},78326:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component;e.description='Evaluates a function each time data hits the "in" port \nand sends the return value to "out". Within the function "x" will \nbe the variable from the in port. For example, to make a ^2 function \ninput "return x*x;" to the function port.',e.icon="code",e.inPorts.add("in",{datatype:"all",description:"Packet to be processed"}),e.inPorts.add("function",{datatype:"string",description:"Function to evaluate",control:!0}),e.outPorts.add("out",{datatype:"all"}),e.outPorts.add("function",{datatype:"function"}),e.outPorts.add("error",{datatype:"object"});const t=(e,t)=>{let n;if("function"!=typeof e){try{n=Function("x",e)}catch(e){return void t(e)}t(null,n)}else t(null,e)};return e.process(((e,n)=>{e.attached("in").length&&!e.hasData("in")||(e.hasData("function","in")?t(e.getData("function"),((t,r)=>{let o;if(t)return void n.done(t);const a=e.getData("in");try{o=r(a)}catch(e){return void n.done(e)}n.sendDone({function:r,out:o})})):e.hasData("function")&&t(e.getData("function"),((e,t)=>{e?n.done(e):n.sendDone({function:t})})))}))}},30291:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component;return e.description="This component receives data on multiple input ports and \nsends the same data out to the connected output port",e.icon="compress",e.inPorts.add("in",{datatype:"all",description:"Packet to be forwarded"}),e.outPorts.add("out",{datatype:"all"}),e.process(((e,t)=>{const n=e.get("in");return t.sendDone({out:n})}))}},26498:(e,t,n)=>{const r=n(76445),{inspect:o}=n(89539);t.getComponent=()=>{const e=new r.Component;return e.description="Sends the data items to console.log",e.icon="bug",e.inPorts.add("in",{datatype:"all",description:"Packet to be printed through console.log"}),e.inPorts.add("options",{datatype:"object",description:"Options to be passed to console.log",control:!0}),e.outPorts.add("out",{datatype:"all"}),e.process(((e,t)=>{if(!e.hasData("in"))return;if(e.attached("options").length&&!e.hasData("options"))return;let n=null;e.has("options")&&(n=e.getData("options"));const r=e.getData("in");((e,t)=>{null!=e?console.log(o(t,e.showHidden,e.depth,e.colors)):console.log(t)})(n,r),t.sendDone({out:r})}))}},99647:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component;return e.description="Returns the value of a global variable.",e.icon="usd",e.inPorts.add("name",{description:"The name of the global variable.",datatype:"string"}),e.outPorts.add("value",{description:"The value of the variable."}),e.outPorts.add("error",{description:"Any errors that occured reading the variables value.",datatype:"object"}),e.forwardBrackets={name:["value","error"]},e.process(((e,t)=>{if(!e.hasData("name"))return;const o=e.getData("name"),a=r.isBrowser()?window[o]:n.g[o];if(void 0!==a)t.sendDone({value:a});else{const e=new Error(`"${o}" is undefined on the global object.`);t.sendDone(e)}}))}},36167:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component;return e.description="Forwards packets and metadata in the same way \nit receives them",e.icon="forward",e.inPorts.add("in",{datatype:"all",description:"Packet to forward"}),e.outPorts.add("out",{datatype:"all"}),e.process(((e,t)=>{const n=e.get("in");t.sendDone({out:n})}))}},45150:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component;return e.description="Like 'Repeat', except repeat on next tick",e.icon="step-forward",e.inPorts.add("in",{datatype:"all",description:"Packet to forward"}),e.outPorts.add("out",{datatype:"all"}),e.process(((e,t)=>{const n=e.get("in");setTimeout((()=>t.sendDone({out:n})),0)}))}},24915:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component;return e.description="Forward packet after a set delay",e.icon="clock-o",e.timers=[],e.inPorts.add("in",{datatype:"all",description:"Packet to be forwarded with a delay"}),e.inPorts.add("delay",{datatype:"number",description:"How much to delay",default:500,control:!0}),e.outPorts.add("out",{datatype:"all"}),e.tearDown=t=>(e.timers.forEach((e=>clearTimeout(e))),e.timers=[],t()),e.process(((t,n)=>{if(!t.hasData("in"))return;if(t.attached("delay").length&&!t.hasData("delay"))return;let r=500;t.hasData("delay")&&(r=t.getData("delay"));const o=t.get("in"),a=setTimeout((()=>(e.timers.splice(e.timers.indexOf(a),1),n.sendDone({out:o}))),r);e.timers.push(a)}))}},11142:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component;e.description="Send a packet at the given interval",e.icon="clock-o",e.inPorts.add("interval",{datatype:"number",description:"Interval at which output packets are emitted (ms)",required:!0,control:!0}),e.inPorts.add("start",{datatype:"bang",description:"Start the emission"}),e.inPorts.add("stop",{datatype:"bang",description:"Stop the emission"}),e.outPorts.add("out",{datatype:"bang"}),e.timers={};const t=t=>{e.timers[t]&&(clearInterval(e.timers[t].interval),e.timers[t].deactivate(),e.timers[t]=null)};return e.tearDown=n=>{Object.keys(e.timers).forEach(t),e.timers={},n()},e.forwardBrackets={},e.process(((n,o,a)=>{if(n.hasData("start")){if(!n.hasData("interval"))return;const o=n.get("start");if("data"!==o.type)return;const i=parseInt(n.getData("interval"),10);return t(o.scope),a.interval=setInterval((()=>{const t=new r.IP("data",!0);return t.scope=o.scope,e.outPorts.out.sendIP(t)}),i),void(e.timers[o.scope]=a)}if(n.hasData("stop")){const e=n.get("stop");if("data"!==e.type)return;t(e.scope),o.done()}}))}},98834:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component;return e.description="Send a packet after the given time in ms",e.icon="clock-o",e.timer={},e.inPorts.add("time",{datatype:"number",description:"Time after which a packet will be sent",required:!0,control:!0}),e.inPorts.add("start",{datatype:"bang",description:"Start the timeout before sending a packet"}),e.outPorts.add("out",{datatype:"bang"}),e.forwardBrackets={start:["out"]},e.stopTimer=t=>{e.timer[t]&&(clearTimeout(e.timer[t].timeout),e.timer[t].deactivate(),delete e.timer[t])},e.tearDown=t=>{Object.keys(e.timer).forEach((t=>e.stopTimer(t))),t()},e.process(((t,n,r)=>{if(!t.hasData("time","start"))return;const o=parseInt(t.getData("time"),10);t.getData("start"),e.stopTimer(t.scope),r.timeout=setTimeout((()=>{e.timer=null,n.sendDone({out:!0})}),o),e.timer[t.scope]=r}))}},55086:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component;return e.description="Sends next packet in buffer when receiving a bang",e.icon="forward",e.inPorts.add("data",{datatype:"all"}),e.inPorts.add("in",{datatype:"bang"}),e.outPorts.add("out",{datatype:"all"}),e.outPorts.add("empty",{datatype:"bang",required:!1}),e.forwardBrackets={},e.process(((t,n)=>{if(!t.hasData("in"))return;const r=t.getData("in");if(!t.hasData("data"))return void n.sendDone({empty:!0});let o=!1;for(;t.has("data")&&(!o||"data"!==e.inPorts.data.getBuffer(r.scope)[0].type);){const e=t.get("data");n.send({out:e}),"data"===e.type&&(o=!0)}n.done()}))}},24032:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component;return e.icon="expand",e.description="This component receives data on a single input port and \nsends the same data out to all connected output ports",e.inPorts.add("in",{datatype:"all",description:"Packet to be forwarded"}),e.outPorts.add("out",{datatype:"all"}),e.process(((e,t)=>{const n=e.get("in");t.sendDone({out:n})}))}},58050:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component;return e.description="accept and forward certain incoming packets",e.inPorts.add("in",{datatype:"all",description:"An IP to be forwarded if accepted"}),e.inPorts.add("accept",{datatype:"all",description:"IP to be accepted"}),e.inPorts.add("reset",{datatype:"bang",description:"Reset the list accepted IPs"}),e.outPorts.add("out",{datatype:"all"}),e.accepts={},e.tearDown=t=>{e.accepts={},t()},e.process(((t,n)=>{if(t.hasData("accept")){const r=t.getData("accept");return e.accepts[t.scope]||(e.accepts[t.scope]=[]),e.accepts[t.scope].push(r),void n.done()}if(t.hasData("reset"))return t.getData("reset"),e.accepts={},void n.done();if(!t.hasData("in"))return;const r=t.getData("in");-1!==e.accepts[t.scope].indexOf(r)?n.sendDone({out:r}):n.done()}))}},4041:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component;return e.description="Like Promise.all, wait for result from all connected inputs and send them or an error out",e.icon="compress",e.inPorts.add("in",{datatype:"all",addressable:!0}),e.inPorts.add("error",{datatype:"object"}),e.outPorts.add("out",{datatype:"array"}),e.outPorts.add("error",{datatype:"object"}),e.pending={},e.tearDown=t=>{e.pending={},t()},e.forwardBrackets={},e.process(((t,n)=>{if(t.hasData("error")){const r=t.getData("error");return e.pending[t.scope]||(e.pending[t.scope]={results:{},resolved:!1,rejected:!1}),e.pending[t.scope].rejected||e.pending[t.scope].resolved?void n.done():(e.pending[t.scope].rejected=!0,delete e.pending[t.scope].results,void n.sendDone({error:r}))}const r=t.attached("in").filter((e=>t.hasStream(["in",e])));if(!r.length)return;if(e.pending[t.scope]||(e.pending[t.scope]={results:{},resolved:!1,rejected:!1}),e.pending[t.scope].rejected||e.pending[t.scope].resolved)return r.forEach((e=>t.getStream(["in",e]).map((e=>e.drop())))),void n.done();const{results:o}=e.pending[t.scope];r.forEach((e=>{const n=t.getStream(["in",e]).filter((e=>"data"===e.type));o[e]||(o[e]||(o[e]=[]),o[e]=o[e].concat(n))}));const a=t.attached("in");for(let e=0;e<a.length;e+=1){const t=a[e];if(!o[t]||!o[t].length)return void n.done()}e.pending[t.scope].resolved=!0;const i=t.attached("in").map((e=>o[e].map((e=>e.data))));n.sendDone({out:i}),delete e.pending[t.scope].results}))}},45140:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component;return e.description="when several streams are nested through the array in-port (i.e. a connect through one of the ports before there is a disconnect), separate the streams into distinct streams with no overlapping",e.inPorts.add("in",{datatype:"all",addressable:!0}),e.outPorts.add("out",{datatype:"all",addressable:!0}),e.forwardBrackets={},e.process(((e,t)=>{const n=e.attached("in").filter((t=>e.hasStream(["in",t])));n.length&&(n.forEach((n=>{e.getStream(["in",n]).forEach((e=>{t.send({out:{...e,index:n}})}))})),t.done())}))}},93883:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component;return e.icon="expand",e.description="Like core/Split, but only begins sending at end of a stream",e.inPorts.add("in",{datatype:"all"}),e.outPorts.add("out",{datatype:"all"}),e.forwardBrackets={},e.process(((e,t)=>{e.hasStream("in")&&(e.getStream("in").forEach((e=>{t.send({out:e})})),t.done())}))}},45553:(e,t,n)=>{const r=n(76445);function o(e,t){let n=e,r=t;return"string"==typeof n&&(n=n.toLowerCase()),"string"==typeof r&&(r=r.toLowerCase()),n===r?0:n>r?1:-1}function a(e,t,n){if(!e.length)return 0;for(let r=0;r<e.length;r+=1){const a=e[r],i=o(t.data[a],n.data[a]);if(0!==i)return i}return this.indexOf(t)<this.indexOf(n)?-1:1}t.getComponent=()=>{const e=new r.Component;return e.description="Collate two or more streams, based on a list of control field lengths",e.icon="sort-amount-asc",e.inPorts.add("ctlfields",{datatype:"string",description:"Comma-separated list of object keys to collate by",control:!0}),e.inPorts.add("in",{description:"Objects to collate",datatype:"object",addressable:!0}),e.outPorts.add("out",{description:"Objects in collated order",datatype:"object"}),e.forwardBrackets={},e.process(((e,t)=>{if(!e.hasData("ctlfields"))return;if(!e.attached("in").length)return;const n=e.attached("in").filter((t=>e.hasStream(["in",t])));if(n.length!==e.attached("in").length)return;let o=e.getData("ctlfields");"string"==typeof o&&(o=o.split(","));let i=[];n.forEach((t=>{const n=e.getStream(["in",t]).filter((e=>"data"===e.type));i=i.concat(n)}));const s=i.slice(0);i.sort(a.bind(s,o)),t.send({out:new r.IP("openBracket",null)}),function(e,t,n){let o=null;e.forEach((e=>{if(t.forEach((e=>{o||n.send({out:new r.IP("openBracket",e)})})),o)for(let a=0;a<t.length;a+=1){const i=t[a];if(e.data[i]!==o.data[i]){const e=t.slice(a),o=e.slice(0);o.reverse(),o.forEach((e=>{n.send({out:new r.IP("closeBracket",e)})})),e.forEach((e=>{n.send({out:new r.IP("openBracket",e)})}));break}}n.send({out:e}),o=e}));const a=t.slice(0);a.reverse(),a.forEach((e=>{n.send({out:new r.IP("closeBracket",e)})}))}(i,o,t),t.send({out:new r.IP("closeBracket",null)}),t.done()}))}},74810:(e,t,n)=>{const r=n(76445);function o(e){e.timeout&&(clearTimeout(e.timeout.timeout),e.timeout.ctx.deactivate())}t.getComponent=()=>{const e=new r.Component;return e.description="Collect packets and send them when input stops after a given timeout",e.inPorts.add("in",{datatype:"all",description:"IPs to collect until a timeout"}),e.inPorts.add("timeout",{datatype:"number",description:"Amount of time to hold IPs for in milliseconds",default:300,control:!0}),e.outPorts.add("out",{datatype:"all",description:"IPs collected until the timeout"}),e.timeout=null,e.tearDown=t=>(o(e),t()),e.process(((t,n,r)=>{let a;t.hasData("in")&&(t.attached("timeout").length&&!t.hasData("timeout")||(a=t.hasData("timeout")?parseInt(t.getData("timeout"),10):300,o(e),e.timeout={ctx:r,timeout:setTimeout((()=>{for(;t.hasData("in");){const e=t.getData("in");n.send({out:e})}return n.done()}),a)}))}))}},21914:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component;return e.description="Gathers data from all incoming connections and sends them together in order of connection",e.inPorts.add("in",{datatype:"all",addressable:!0}),e.outPorts.add("out",{datatype:"all"}),e.process(((e,t)=>{const n=e.attached("in").filter((t=>e.hasStream(["in",t])));n.length===e.attached("in").length&&(n.forEach((n=>{e.getStream(["in",n]).forEach((e=>{t.send({out:{...e,index:n}})}))})),t.done())}))}},16209:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component;return e.description="count down from particular number, by default 1, and send an empty IP when it hits 0",e.inPorts.add("in",{datatype:"bang",description:"IPs to decrease the count down"}),e.inPorts.add("count",{datatype:"int",description:"Count down starting number",default:1,control:!0}),e.inPorts.add("repeat",{datatype:"boolean",description:"Repeat the count down mechanism if true",default:!0,control:!0}),e.outPorts.add("out",{datatype:"bang",description:"IP emitted when the count reach 0"}),e.outPorts.add("count",{datatype:"int",description:"Number of packets received in this cycle"}),e.received=0,e.tearDown=t=>{e.received=0,t()},e.process(((t,n)=>{let o,a;t.hasData("in")&&(t.attached("count")&&!t.hasData("count")||t.attached("repeat")&&!t.hasData("repeat")||(o=t.hasData("count")?t.getData("count"):1,a=!t.hasData("repeat")||t.getData("repeat"),t.getData("in"),e.received+=1,n.send({count:e.received}),e.received===o&&(n.send({out:new r.IP("data",null)}),a&&(e.received=0)),n.done()))}))}},88772:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component;return e.description="Like 'core/Merge', but merge up to a specified number of streams.",e.inPorts.add("in",{datatype:"all",description:"IP to merge"}),e.inPorts.add("threshold",{datatype:"int",control:!0,default:1}),e.outPorts.add("out",{datatype:"all"}),e.received=0,e.tearDown=t=>(e.received=0,t()),e.forwardBrackets={},e.process(((t,n)=>{if(!t.hasStream("in"))return;if(t.attached("threshold")&&!t.hasData("threshold"))return;let r=1;t.hasData("threshold")&&(r=t.getData("threshold"));const o=t.getStream("in");e.received<r?o.forEach((e=>{n.send({out:e})})):o.forEach((e=>{e.drop()})),e.received+=1,n.done()}))}},61853:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component;return e.description="deny certain incoming packets",e.inPorts.add("in",{datatype:"all",description:"An IP to be forwarded if accepted"}),e.inPorts.add("deny",{datatype:"all",description:"IP to be denied"}),e.inPorts.add("reset",{datatype:"bang",description:"Reset the list denied IPs"}),e.outPorts.add("out",{datatype:"all"}),e.denied={},e.tearDown=t=>{e.denied={},t()},e.process(((t,n)=>{if(t.hasData("deny")){const r=t.getData("deny");return e.denied[t.scope]||(e.denied[t.scope]=[]),e.denied[t.scope].push(r),void n.done()}if(t.hasData("reset"))return t.getData("reset"),e.denied={},void n.done();if(!t.hasData("in"))return;const r=t.getData("in");-1===e.denied[t.scope].indexOf(r)?n.sendDone({out:r}):n.done()}))}},31086:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component;return e.description="Send the port number to 'PORT' to set where to direct IPs. It acts as a 'Split' by default, sending IPs to every out-port.",e.inPorts.add("in",{datatype:"all",description:"IPs to forward"}),e.inPorts.add("port",{datatype:"number",description:"Number of ports to forward IPs to"}),e.outPorts.add("out",{datatype:"all",addressable:!0}),e.indexes=[],e.tearDown=t=>(e.indexes=[],t()),e.process(((t,n)=>{if(t.hasStream("port")){const r=t.getStream("port").filter((e=>"data"===e.type));return e.indexes=[],r.forEach((t=>{const n=parseInt(t.data,10);-1===e.indexes.indexOf(n)&&e.indexes.push(n)})),void n.done()}if(!t.hasData("in"))return;const o=t.getData("in");let a;a=0===e.indexes.length?e.outPorts.out.listAttached():e.indexes.slice(0),a.forEach((e=>{n.send({out:new r.IP("data",o,{index:e})})})),n.done()}))}},72303:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component;return e.description="Forward packets only when the gate is open",e.icon="pause",e.inPorts.add("in",{datatype:"all"}),e.inPorts.add("open",{datatype:"bang",description:"Send one IP to open the gate"}),e.inPorts.add("close",{datatype:"bang",description:"Send one IP to close the gate"}),e.outPorts.add("out",{datatype:"all"}),e.isOpen=!1,e.tearDown=t=>(e.isOpen=!1,e.icon="pause",t()),e.forwardBrackets={},e.process(((t,n)=>{if(t.hasData("open"))return t.getData("open"),e.isOpen=!0,e.setIcon("play"),void n.done();if(t.hasData("close"))return t.getData("close"),e.isOpen=!1,e.setIcon("pause"),void n.done();if(!t.has("in"))return;const r=t.get("in");if(!e.isOpen)return r.drop(),void n.done();n.sendDone({out:r})}))}},11326:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component;e.description="send connection to 'yes' if its top-level group is one of the provided groups, otherwise 'no'",e.inPorts.add("in",{datatype:"all",description:"IPs to route use their groups"}),e.inPorts.add("regexp",{datatype:"string",description:"Regexps to match groups"}),e.inPorts.add("group",{datatype:"string",description:"List of groups (one group per IP)"}),e.inPorts.add("reset",{datatype:"bang",description:"Reset the list of groups and regexps"}),e.outPorts.add("yes",{datatype:"all",description:"IPs with group that match the groups or regexps provided"}),e.outPorts.add("no",{datatype:"all",description:"IPs with group that don't match the groups or regexps provided"}),e.forwardBrackets={},e.matchGroups=[],e.regexps=[];const t=()=>{e.matchGroups=[],e.regexps=[]};return e.tearDown=e=>{t(),e()},e.process(((n,r)=>{if(n.hasData("group"))return e.matchGroups.push(n.getData("group")),void r.done();if(n.hasData("regexp"))return e.regexps.push(new RegExp(n.getData("regexp"))),void r.done();if(n.hasData("reset"))return n.getData("reset"),t(),void r.done();if(!n.hasStream("in"))return;const o=n.getStream("in");if("openBracket"!==o[0].type)return o.forEach((e=>{r.send({no:e})})),void r.done();let a=!1;const i=o[0].data;if(e.matchGroups.forEach((e=>{i===e&&(a=!0)})),e.regexps.forEach((e=>{null!=i.match(e)&&(a=!0)})),!a)return o.forEach((e=>{r.send({no:e})})),void r.done();o.forEach((e=>{r.send({yes:e})})),r.done()}))}},59963:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component;return e.description="Like Promise.race, wait for result from all connected inputs and send first result or an error out",e.icon="compress",e.inPorts.add("in",{datatype:"all",addressable:!0}),e.inPorts.add("error",{datatype:"object"}),e.outPorts.add("out",{datatype:"array"}),e.outPorts.add("error",{datatype:"object"}),e.pending={},e.tearDown=t=>(e.pending={},t()),e.forwardBrackets={},e.process(((t,n)=>{if(t.hasData("error")){const r=t.getData("error");return e.pending[t.scope]||(e.pending[t.scope]={resolved:!1,rejected:!1}),e.pending[t.scope].rejected||e.pending[t.scope].resolved?void n.done():(e.pending[t.scope].rejected=!0,void n.sendDone({error:r}))}const r=t.attached("in").filter((e=>t.hasStream(["in",e])));if(!r.length)return;if(e.pending[t.scope]||(e.pending[t.scope]={resolved:!1,rejected:!1}),e.pending[t.scope].rejected||e.pending[t.scope].resolved)return r.forEach((e=>{const n=t.getStream(["in",e]);return Array.from(n).map((e=>e.drop()))})),void n.done();const o=t.getStream(["in",r[0]]).filter((e=>"data"===e.type));e.pending[t.scope].resolved=!0;const a=o.map((e=>e.data));n.sendDone({out:a})}))}},31232:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component;return e.description="Send packets in to outport indexes in reverse order when matching number of inport indexes have received data to attached outports",e.inPorts.add("in",{datatype:"all",addressable:!0}),e.outPorts.add("out",{datatype:"all",addressable:!0}),e.forwardBrackets={},e.process(((t,n)=>{const o=t.attached("in").filter((e=>t.hasStream(["in",e])));let a=e.outPorts.out.listAttached().slice(0),i=a.length;if(t.attached("in").length<a.length&&(i=t.attached("in").length,a=a.slice(0,i)),o.length<i)return;const s=[];o.forEach((e=>{s.push(t.getStream(["in",e]))})),s.reverse(),a.reverse(),a.forEach((e=>{s.length&&s.shift().forEach((t=>{n.send(new r.IP(t.type,t.data,{index:e,datatype:t.datatype,schema:t.schema,clonable:t.clonable}))}))})),n.done()}))}},1283:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component;return e.icon="expand",e.description="Like core/Split, expect the last port gets forwarded packets first",e.inPorts.add("in",{datatype:"all"}),e.outPorts.add("out",{datatype:"all",addressable:!0}),e.forwardBrackets={},e.process(((t,n)=>{if(!t.has("in"))return;const o=t.get("in"),a=e.outPorts.out.listAttached();a.reverse(),a.forEach((e=>{n.send({out:new r.IP(o.type,o.data,{index:e,datatype:o.datatype,schema:o.schema,clonable:o.clonable})})})),n.done()}))}},76003:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component;return e.description="Stop everything that's received and send out once we're told that we're ready to send.",e.icon="stop-circle",e.inPorts.add("in",{datatype:"all",description:"IPs to buffer until an IP arrives on the ready port"}),e.inPorts.add("ready",{datatype:"bang",description:"Trigger the emission of all the stored IPs"}),e.outPorts.add("out",{datatype:"all",description:"IPs forwarded from the in port"}),e.forwardBracets={},e.process(((e,t)=>{if(!e.hasData("ready","in"))return;e.getData("ready");const n=[];for(;e.has("in");)n.push(e.get("in"));n.forEach((e=>{t.send({out:e})})),t.done()}))}},65951:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component;return e.description="Throttle packets based on load and maximum accepted load",e.inPorts.add("in",{datatype:"all",description:"IPs to forward"}),e.inPorts.add("load",{datatype:"int",description:"Current load"}),e.inPorts.add("max",{datatype:"int",control:!0,description:"Maximum number to allow for load"}),e.outPorts.add("out",{datatype:"all"}),e.process(((e,t)=>{if(!e.hasData("in","load","max"))return;const[n,r]=Array.from(e.getData("load","max"));if(!(n<r))return void setTimeout((()=>t.done()),1);const o=e.getData("in");setTimeout((()=>t.sendDone({out:o})),1)}))}},67154:e=>{var t;!function(){"use strict";var n=1/1048576;function r(e,t,r,o){var a,i,s,c,u,l,d,p,h,f,g=e[t][0],m=e[t][1],v=e[r][0],y=e[r][1],b=e[o][0],w=e[o][1],_=Math.abs(m-y),x=Math.abs(y-w);if(_<n&&x<n)throw new Error("Eek! Coincident points!");return _<n?i=(c=-(b-v)/(w-y))*((a=(v+g)/2)-(l=(v+b)/2))+(p=(y+w)/2):x<n?i=(s=-(v-g)/(y-m))*((a=(b+v)/2)-(u=(g+v)/2))+(d=(m+y)/2):(a=((s=-(v-g)/(y-m))*(u=(g+v)/2)-(c=-(b-v)/(w-y))*(l=(v+b)/2)+(p=(y+w)/2)-(d=(m+y)/2))/(s-c),i=_>x?s*(a-u)+d:c*(a-l)+p),{i:t,j:r,k:o,x:a,y:i,r:(h=v-a)*h+(f=y-i)*f}}function o(e){var t,n,r,o,a,i;for(n=e.length;n;)for(o=e[--n],r=e[--n],t=n;t;)if(i=e[--t],r===(a=e[--t])&&o===i||r===i&&o===a){e.splice(n,2),e.splice(t,2);break}}t={triangulate:function(e,t){var a,i,s,c,u,l,d,p,h,f,g,m,v=e.length;if(v<3)return[];if(e=e.slice(0),t)for(a=v;a--;)e[a]=e[a][t];for(s=new Array(v),a=v;a--;)s[a]=a;for(s.sort((function(t,n){return e[n][0]-e[t][0]})),c=function(e){var t,n,r,o,a,i,s=Number.POSITIVE_INFINITY,c=Number.POSITIVE_INFINITY,u=Number.NEGATIVE_INFINITY,l=Number.NEGATIVE_INFINITY;for(t=e.length;t--;)e[t][0]<s&&(s=e[t][0]),e[t][0]>u&&(u=e[t][0]),e[t][1]<c&&(c=e[t][1]),e[t][1]>l&&(l=e[t][1]);return r=l-c,[[(a=s+.5*(n=u-s))-20*(o=Math.max(n,r)),(i=c+.5*r)-o],[a,i+20*o],[a+20*o,i-o]]}(e),e.push(c[0],c[1],c[2]),u=[r(e,v+0,v+1,v+2)],l=[],d=[],a=s.length;a--;d.length=0){for(m=s[a],i=u.length;i--;)(p=e[m][0]-u[i].x)>0&&p*p>u[i].r?(l.push(u[i]),u.splice(i,1)):p*p+(h=e[m][1]-u[i].y)*h-u[i].r>n||(d.push(u[i].i,u[i].j,u[i].j,u[i].k,u[i].k,u[i].i),u.splice(i,1));for(o(d),i=d.length;i;)g=d[--i],f=d[--i],u.push(r(e,f,g,m))}for(a=u.length;a--;)l.push(u[a]);for(u.length=0,a=l.length;a--;)l[a].i<v&&l[a].j<v&&l[a].k<v&&u.push(l[a].i,l[a].j,l[a].k);return u},contains:function(e,t){if(t[0]<e[0][0]&&t[0]<e[1][0]&&t[0]<e[2][0]||t[0]>e[0][0]&&t[0]>e[1][0]&&t[0]>e[2][0]||t[1]<e[0][1]&&t[1]<e[1][1]&&t[1]<e[2][1]||t[1]>e[0][1]&&t[1]>e[1][1]&&t[1]>e[2][1])return null;var n=e[1][0]-e[0][0],r=e[2][0]-e[0][0],o=e[1][1]-e[0][1],a=e[2][1]-e[0][1],i=n*a-r*o;if(0===i)return null;var s=(a*(t[0]-e[0][0])-r*(t[1]-e[0][1]))/i,c=(n*(t[1]-e[0][1])-o*(t[0]-e[0][0]))/i;return s<0||c<0||s+c>1?null:[s,c]}},e.exports=t}()},36696:e=>{e.exports=function e(t,n,r){function o(i,s){if(!n[i]){if(!t[i]){if(a)return a(i,!0);throw new Error("Cannot find module '"+i+"'")}var c=n[i]={exports:{}};t[i][0].call(c.exports,(function(e){return o(t[i][1][e]||e)}),c,c.exports,e,t,n,r)}return n[i].exports}for(var a=void 0,i=0;i<r.length;i++)o(r[i]);return o}({1:[function(e,t){t.exports={version:"1.3.5"}},{}],2:[function(e,t){"use strict";var n=function(e,t){this.head_=e,this.tail_=t,this.search_node_=e};n.prototype.head=function(){return this.head_},n.prototype.setHead=function(e){this.head_=e},n.prototype.tail=function(){return this.tail_},n.prototype.setTail=function(e){this.tail_=e},n.prototype.search=function(){return this.search_node_},n.prototype.setSearch=function(e){this.search_node_=e},n.prototype.findSearchNode=function(){return this.search_node_},n.prototype.locateNode=function(e){var t=this.search_node_;if(e<t.value){for(;t=t.prev;)if(e>=t.value)return this.search_node_=t,t}else for(;t=t.next;)if(e<t.value)return this.search_node_=t.prev,t.prev;return null},n.prototype.locatePoint=function(e){var t=e.x,n=this.findSearchNode(t),r=n.point.x;if(t===r){if(e!==n.point)if(e===n.prev.point)n=n.prev;else{if(e!==n.next.point)throw new Error("poly2tri Invalid AdvancingFront.locatePoint() call");n=n.next}}else if(r>t)for(;(n=n.prev)&&e!==n.point;);else for(;(n=n.next)&&e!==n.point;);return n&&(this.search_node_=n),n},t.exports=n,t.exports.Node=function(e,t){this.point=e,this.triangle=t||null,this.next=null,this.prev=null,this.value=e.x}},{}],3:[function(e,t){"use strict";t.exports=function(e,t){if(!e)throw new Error(t||"Assert Failed")}},{}],4:[function(e,t){"use strict";var n=e("./xy"),r=function(e,t){this.x=+e||0,this.y=+t||0,this._p2t_edge_list=null};r.prototype.toString=function(){return n.toStringBase(this)},r.prototype.toJSON=function(){return{x:this.x,y:this.y}},r.prototype.clone=function(){return new r(this.x,this.y)},r.prototype.set_zero=function(){return this.x=0,this.y=0,this},r.prototype.set=function(e,t){return this.x=+e||0,this.y=+t||0,this},r.prototype.negate=function(){return this.x=-this.x,this.y=-this.y,this},r.prototype.add=function(e){return this.x+=e.x,this.y+=e.y,this},r.prototype.sub=function(e){return this.x-=e.x,this.y-=e.y,this},r.prototype.mul=function(e){return this.x*=e,this.y*=e,this},r.prototype.length=function(){return Math.sqrt(this.x*this.x+this.y*this.y)},r.prototype.normalize=function(){var e=this.length();return this.x/=e,this.y/=e,e},r.prototype.equals=function(e){return this.x===e.x&&this.y===e.y},r.negate=function(e){return new r(-e.x,-e.y)},r.add=function(e,t){return new r(e.x+t.x,e.y+t.y)},r.sub=function(e,t){return new r(e.x-t.x,e.y-t.y)},r.mul=function(e,t){return new r(e*t.x,e*t.y)},r.cross=function(e,t){return"number"==typeof e?"number"==typeof t?e*t:new r(-e*t.y,e*t.x):"number"==typeof t?new r(t*e.y,-t*e.x):e.x*t.y-e.y*t.x},r.toString=n.toString,r.compare=n.compare,r.cmp=n.compare,r.equals=n.equals,r.dot=function(e,t){return e.x*t.x+e.y*t.y},t.exports=r},{"./xy":11}],5:[function(e,t){"use strict";var n=e("./xy"),r=function(e,t){this.name="PointError",this.points=t=t||[],this.message=e||"Invalid Points!";for(var r=0;r<t.length;r++)this.message+=" "+n.toString(t[r])};(r.prototype=new Error).constructor=r,t.exports=r},{"./xy":11}],6:[function(e,t,n){(function(t){"use strict";var r=t.poly2tri;n.noConflict=function(){return t.poly2tri=r,n},n.VERSION=e("../dist/version.json").version,n.PointError=e("./pointerror"),n.Point=e("./point"),n.Triangle=e("./triangle"),n.SweepContext=e("./sweepcontext");var o=e("./sweep");n.triangulate=o.triangulate,n.sweep={Triangulate:o.triangulate}}).call(this,"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"../dist/version.json":1,"./point":4,"./pointerror":5,"./sweep":7,"./sweepcontext":8,"./triangle":9}],7:[function(e,t,n){"use strict";function r(e,t){var n=e.locateNode(t),r=function(e,t,n){var r=new k(t,n.point,n.next.point);r.markNeighbor(n.triangle),e.addToMap(r);var o=new P(t);return o.next=n.next,o.prev=n,n.next.prev=o,n.next=o,c(e,r)||e.mapTriangleToNodes(r),o}(e,t,n);return t.x<=n.point.x+C&&s(e,n),function(e,t){for(var n=t.next;n.next&&!A(n.point,n.next.point,n.prev.point);)s(e,n),n=n.next;for(n=t.prev;n.prev&&!A(n.point,n.next.point,n.prev.point);)s(e,n),n=n.prev;t.next&&t.next.next&&function(e){var t=e.point.x-e.next.next.point.x,n=e.point.y-e.next.next.point.y;return _(n>=0,"unordered y"),t>=0||Math.abs(t)<n}(t)&&function(e,t){for(e.basin.left_node=E(t.point,t.next.point,t.next.next.point)===D.CCW?t.next.next:t.next,e.basin.bottom_node=e.basin.left_node;e.basin.bottom_node.next&&e.basin.bottom_node.point.y>=e.basin.bottom_node.next.point.y;)e.basin.bottom_node=e.basin.bottom_node.next;if(e.basin.bottom_node!==e.basin.left_node){for(e.basin.right_node=e.basin.bottom_node;e.basin.right_node.next&&e.basin.right_node.point.y<e.basin.right_node.next.point.y;)e.basin.right_node=e.basin.right_node.next;e.basin.right_node!==e.basin.bottom_node&&(e.basin.width=e.basin.right_node.point.x-e.basin.left_node.point.x,e.basin.left_highest=e.basin.left_node.point.y>e.basin.right_node.point.y,d(e,e.basin.bottom_node))}}(e,t)}(e,r),r}function o(e,t,n){e.edge_event.constrained_edge=t,e.edge_event.right=t.p.x>t.q.x,i(n.triangle,t.p,t.q)||(function(e,t,n){e.edge_event.right?function(e,t,n){for(;n.next.point.x<t.p.x;)E(t.q,n.next.point,t.p)===D.CCW?p(e,t,n):n=n.next}(e,t,n):function(e,t,n){for(;n.prev.point.x>t.p.x;)E(t.q,n.prev.point,t.p)===D.CW?g(e,t,n):n=n.prev}(e,t,n)}(e,t,n),a(e,t.p,t.q,n.triangle,t.q))}function a(e,t,n,r,o){if(!i(r,t,n)){var s=r.pointCCW(o),c=E(n,s,t);if(c===D.COLLINEAR)throw new x("poly2tri EdgeEvent: Collinear not supported!",[n,s,t]);var u=r.pointCW(o),l=E(n,u,t);if(l===D.COLLINEAR)throw new x("poly2tri EdgeEvent: Collinear not supported!",[n,u,t]);c===l?a(e,t,n,r=c===D.CW?r.neighborCCW(o):r.neighborCW(o),o):y(e,t,n,r,o)}}function i(e,t,n){var r=e.edgeIndex(t,n);if(-1!==r){e.markConstrainedEdgeByIndex(r);var o=e.getNeighbor(r);return o&&o.markConstrainedEdgeByPoints(t,n),!0}return!1}function s(e,t){var n=new k(t.prev.point,t.point,t.next.point);n.markNeighbor(t.prev.triangle),n.markNeighbor(t.triangle),e.addToMap(n),t.prev.next=t.next,t.next.prev=t.prev,c(e,n)||e.mapTriangleToNodes(n)}function c(e,t){for(var n=0;3>n;++n)if(!t.delaunay_edge[n]){var r=t.getNeighbor(n);if(r){var o=t.getPoint(n),a=r.oppositePoint(t,o),i=r.index(a);if(r.constrained_edge[i]||r.delaunay_edge[i]){t.constrained_edge[n]=r.constrained_edge[i];continue}if(u(o,t.pointCCW(o),t.pointCW(o),a)){t.delaunay_edge[n]=!0,r.delaunay_edge[i]=!0,l(t,o,r,a);var s=!c(e,t);return s&&e.mapTriangleToNodes(t),(s=!c(e,r))&&e.mapTriangleToNodes(r),t.delaunay_edge[n]=!1,r.delaunay_edge[i]=!1,!0}}}return!1}function u(e,t,n,r){var o=e.x-r.x,a=e.y-r.y,i=t.x-r.x,s=t.y-r.y,c=o*s-i*a;if(0>=c)return!1;var u=n.x-r.x,l=n.y-r.y,d=u*a-o*l;return!(0>=d)&&(o*o+a*a)*(i*l-u*s)+(i*i+s*s)*d+(u*u+l*l)*c>0}function l(e,t,n,r){var o,a,i,s,c,u,l,d,p,h,f,g;o=e.neighborCCW(t),a=e.neighborCW(t),i=n.neighborCCW(r),s=n.neighborCW(r),c=e.getConstrainedEdgeCCW(t),u=e.getConstrainedEdgeCW(t),l=n.getConstrainedEdgeCCW(r),d=n.getConstrainedEdgeCW(r),p=e.getDelaunayEdgeCCW(t),h=e.getDelaunayEdgeCW(t),f=n.getDelaunayEdgeCCW(r),g=n.getDelaunayEdgeCW(r),e.legalize(t,r),n.legalize(r,t),n.setDelaunayEdgeCCW(t,p),e.setDelaunayEdgeCW(t,h),e.setDelaunayEdgeCCW(r,f),n.setDelaunayEdgeCW(r,g),n.setConstrainedEdgeCCW(t,c),e.setConstrainedEdgeCW(t,u),e.setConstrainedEdgeCCW(r,l),n.setConstrainedEdgeCW(r,d),e.clearNeighbors(),n.clearNeighbors(),o&&n.markNeighbor(o),a&&e.markNeighbor(a),i&&e.markNeighbor(i),s&&n.markNeighbor(s),e.markNeighbor(n)}function d(e,t){if(!function(e,t){var n;return n=e.basin.left_highest?e.basin.left_node.point.y-t.point.y:e.basin.right_node.point.y-t.point.y,e.basin.width>n}(e,t)&&(s(e,t),t.prev!==e.basin.left_node||t.next!==e.basin.right_node)){if(t.prev===e.basin.left_node){if(E(t.point,t.next.point,t.next.next.point)===D.CW)return;t=t.next}else if(t.next===e.basin.right_node){if(E(t.point,t.prev.point,t.prev.prev.point)===D.CCW)return;t=t.prev}else t=t.prev.point.y<t.next.point.y?t.prev:t.next;d(e,t)}}function p(e,t,n){n.point.x<t.p.x&&(E(n.point,n.next.point,n.next.next.point)===D.CCW?h(e,t,n):(f(e,t,n),p(e,t,n)))}function h(e,t,n){s(e,n.next),n.next.point!==t.p&&E(t.q,n.next.point,t.p)===D.CCW&&E(n.point,n.next.point,n.next.next.point)===D.CCW&&h(e,t,n)}function f(e,t,n){E(n.next.point,n.next.next.point,n.next.next.next.point)===D.CCW?h(e,t,n.next):E(t.q,n.next.next.point,t.p)===D.CCW&&f(e,t,n.next)}function g(e,t,n){n.point.x>t.p.x&&(E(n.point,n.prev.point,n.prev.prev.point)===D.CW?v(e,t,n):(m(e,t,n),g(e,t,n)))}function m(e,t,n){E(n.prev.point,n.prev.prev.point,n.prev.prev.prev.point)===D.CW?v(e,t,n.prev):E(t.q,n.prev.prev.point,t.p)===D.CW&&m(e,t,n.prev)}function v(e,t,n){s(e,n.prev),n.prev.point!==t.p&&E(t.q,n.prev.point,t.p)===D.CW&&E(n.point,n.prev.point,n.prev.prev.point)===D.CW&&v(e,t,n)}function y(e,t,n,r,o){var i=r.neighborAcross(o);_(i,"FLIP failed due to missing triangle!");var s=i.oppositePoint(r,o);if(r.getConstrainedEdgeAcross(o)){var u=r.index(o);throw new x("poly2tri Intersecting Constraints",[o,s,r.getPoint((u+1)%3),r.getPoint((u+2)%3)])}j(o,r.pointCCW(o),r.pointCW(o),s)?(l(r,o,i,s),e.mapTriangleToNodes(r),e.mapTriangleToNodes(i),o===n&&s===t?n===e.edge_event.constrained_edge.q&&t===e.edge_event.constrained_edge.p&&(r.markConstrainedEdgeByPoints(t,n),i.markConstrainedEdgeByPoints(t,n),c(e,r),c(e,i)):y(e,t,n,r=function(e,t,n,r,o,a){var i;return t===D.CCW?(i=r.edgeIndex(o,a),r.delaunay_edge[i]=!0,c(e,r),r.clearDelaunayEdges(),n):(i=n.edgeIndex(o,a),n.delaunay_edge[i]=!0,c(e,n),n.clearDelaunayEdges(),r)}(e,E(n,s,t),r,i,o,s),o)):(w(e,t,n,r,i,b(t,n,i,s)),a(e,t,n,r,o))}function b(e,t,n,r){var o=E(t,r,e);if(o===D.CW)return n.pointCCW(r);if(o===D.CCW)return n.pointCW(r);throw new x("poly2tri [Unsupported] nextFlipPoint: opposing point on constrained edge!",[t,r,e])}function w(e,t,n,r,o,a){var i=o.neighborAcross(a);_(i,"FLIP failed due to missing triangle");var s=i.oppositePoint(o,a);j(n,r.pointCCW(n),r.pointCW(n),s)?y(e,n,s,i,s):w(e,t,n,r,i,b(t,n,i,s))}var _=e("./assert"),x=e("./pointerror"),k=e("./triangle"),P=e("./advancingfront").Node,S=e("./utils"),C=S.EPSILON,D=S.Orientation,E=S.orient2d,j=S.inScanArea,A=S.isAngleObtuse;n.triangulate=function(e){e.initTriangulation(),e.createAdvancingFront(),function(e){var t,n=e.pointCount();for(t=1;n>t;++t)for(var a=e.getPoint(t),i=r(e,a),s=a._p2t_edge_list,c=0;s&&c<s.length;++c)o(e,s[c],i)}(e),function(e){for(var t=e.front().head().next.triangle,n=e.front().head().next.point;!t.getConstrainedEdgeCW(n);)t=t.neighborCCW(n);e.meshClean(t)}(e)}},{"./advancingfront":2,"./assert":3,"./pointerror":5,"./triangle":9,"./utils":10}],8:[function(e,t){"use strict";var n=e("./pointerror"),r=e("./point"),o=e("./triangle"),a=e("./sweep"),i=e("./advancingfront"),s=i.Node,c=function(e,t){if(this.p=e,this.q=t,e.y>t.y)this.q=e,this.p=t;else if(e.y===t.y)if(e.x>t.x)this.q=e,this.p=t;else if(e.x===t.x)throw new n("poly2tri Invalid Edge constructor: repeated points!",[e]);this.q._p2t_edge_list||(this.q._p2t_edge_list=[]),this.q._p2t_edge_list.push(this)},u=function(){this.left_node=null,this.bottom_node=null,this.right_node=null,this.width=0,this.left_highest=!1};u.prototype.clear=function(){this.left_node=null,this.bottom_node=null,this.right_node=null,this.width=0,this.left_highest=!1};var l=function(){this.constrained_edge=null,this.right=!1},d=function(e,t){t=t||{},this.triangles_=[],this.map_=[],this.points_=t.cloneArrays?e.slice(0):e,this.edge_list=[],this.pmin_=this.pmax_=null,this.front_=null,this.head_=null,this.tail_=null,this.af_head_=null,this.af_middle_=null,this.af_tail_=null,this.basin=new u,this.edge_event=new l,this.initEdges(this.points_)};d.prototype.addHole=function(e){this.initEdges(e);var t,n=e.length;for(t=0;n>t;t++)this.points_.push(e[t]);return this},d.prototype.AddHole=d.prototype.addHole,d.prototype.addHoles=function(e){var t,n=e.length;for(t=0;n>t;t++)this.initEdges(e[t]);return this.points_=this.points_.concat.apply(this.points_,e),this},d.prototype.addPoint=function(e){return this.points_.push(e),this},d.prototype.AddPoint=d.prototype.addPoint,d.prototype.addPoints=function(e){return this.points_=this.points_.concat(e),this},d.prototype.triangulate=function(){return a.triangulate(this),this},d.prototype.getBoundingBox=function(){return{min:this.pmin_,max:this.pmax_}},d.prototype.getTriangles=function(){return this.triangles_},d.prototype.GetTriangles=d.prototype.getTriangles,d.prototype.front=function(){return this.front_},d.prototype.pointCount=function(){return this.points_.length},d.prototype.head=function(){return this.head_},d.prototype.setHead=function(e){this.head_=e},d.prototype.tail=function(){return this.tail_},d.prototype.setTail=function(e){this.tail_=e},d.prototype.getMap=function(){return this.map_},d.prototype.initTriangulation=function(){var e,t=this.points_[0].x,n=this.points_[0].x,o=this.points_[0].y,a=this.points_[0].y,i=this.points_.length;for(e=1;i>e;e++){var s=this.points_[e];s.x>t&&(t=s.x),s.x<n&&(n=s.x),s.y>o&&(o=s.y),s.y<a&&(a=s.y)}this.pmin_=new r(n,a),this.pmax_=new r(t,o);var c=.3*(t-n),u=.3*(o-a);this.head_=new r(t+c,a-u),this.tail_=new r(n-c,a-u),this.points_.sort(r.compare)},d.prototype.initEdges=function(e){var t,n=e.length;for(t=0;n>t;++t)this.edge_list.push(new c(e[t],e[(t+1)%n]))},d.prototype.getPoint=function(e){return this.points_[e]},d.prototype.addToMap=function(e){this.map_.push(e)},d.prototype.locateNode=function(e){return this.front_.locateNode(e.x)},d.prototype.createAdvancingFront=function(){var e,t,n,r=new o(this.points_[0],this.tail_,this.head_);this.map_.push(r),e=new s(r.getPoint(1),r),t=new s(r.getPoint(0),r),n=new s(r.getPoint(2)),this.front_=new i(e,n),e.next=t,t.next=n,t.prev=e,n.prev=t},d.prototype.removeNode=function(){},d.prototype.mapTriangleToNodes=function(e){for(var t=0;3>t;++t)if(!e.getNeighbor(t)){var n=this.front_.locatePoint(e.pointCW(e.getPoint(t)));n&&(n.triangle=e)}},d.prototype.removeFromMap=function(e){var t,n=this.map_,r=n.length;for(t=0;r>t;t++)if(n[t]===e){n.splice(t,1);break}},d.prototype.meshClean=function(e){for(var t,n,r=[e];t=r.pop();)if(!t.isInterior())for(t.setInterior(!0),this.triangles_.push(t),n=0;3>n;n++)t.constrained_edge[n]||r.push(t.getNeighbor(n))},t.exports=d},{"./advancingfront":2,"./point":4,"./pointerror":5,"./sweep":7,"./triangle":9}],9:[function(e,t){"use strict";var n=function(e,t,n){this.points_=[e,t,n],this.neighbors_=[null,null,null],this.interior_=!1,this.constrained_edge=[!1,!1,!1],this.delaunay_edge=[!1,!1,!1]},r=e("./xy").toString;n.prototype.toString=function(){return"["+r(this.points_[0])+r(this.points_[1])+r(this.points_[2])+"]"},n.prototype.getPoint=function(e){return this.points_[e]},n.prototype.GetPoint=n.prototype.getPoint,n.prototype.getPoints=function(){return this.points_},n.prototype.getNeighbor=function(e){return this.neighbors_[e]},n.prototype.containsPoint=function(e){var t=this.points_;return e===t[0]||e===t[1]||e===t[2]},n.prototype.containsEdge=function(e){return this.containsPoint(e.p)&&this.containsPoint(e.q)},n.prototype.containsPoints=function(e,t){return this.containsPoint(e)&&this.containsPoint(t)},n.prototype.isInterior=function(){return this.interior_},n.prototype.setInterior=function(e){return this.interior_=e,this},n.prototype.markNeighborPointers=function(e,t,n){var r=this.points_;if(e===r[2]&&t===r[1]||e===r[1]&&t===r[2])this.neighbors_[0]=n;else if(e===r[0]&&t===r[2]||e===r[2]&&t===r[0])this.neighbors_[1]=n;else{if(!(e===r[0]&&t===r[1]||e===r[1]&&t===r[0]))throw new Error("poly2tri Invalid Triangle.markNeighborPointers() call");this.neighbors_[2]=n}},n.prototype.markNeighbor=function(e){var t=this.points_;e.containsPoints(t[1],t[2])?(this.neighbors_[0]=e,e.markNeighborPointers(t[1],t[2],this)):e.containsPoints(t[0],t[2])?(this.neighbors_[1]=e,e.markNeighborPointers(t[0],t[2],this)):e.containsPoints(t[0],t[1])&&(this.neighbors_[2]=e,e.markNeighborPointers(t[0],t[1],this))},n.prototype.clearNeighbors=function(){this.neighbors_[0]=null,this.neighbors_[1]=null,this.neighbors_[2]=null},n.prototype.clearDelaunayEdges=function(){this.delaunay_edge[0]=!1,this.delaunay_edge[1]=!1,this.delaunay_edge[2]=!1},n.prototype.pointCW=function(e){var t=this.points_;return e===t[0]?t[2]:e===t[1]?t[0]:e===t[2]?t[1]:null},n.prototype.pointCCW=function(e){var t=this.points_;return e===t[0]?t[1]:e===t[1]?t[2]:e===t[2]?t[0]:null},n.prototype.neighborCW=function(e){return e===this.points_[0]?this.neighbors_[1]:e===this.points_[1]?this.neighbors_[2]:this.neighbors_[0]},n.prototype.neighborCCW=function(e){return e===this.points_[0]?this.neighbors_[2]:e===this.points_[1]?this.neighbors_[0]:this.neighbors_[1]},n.prototype.getConstrainedEdgeCW=function(e){return e===this.points_[0]?this.constrained_edge[1]:e===this.points_[1]?this.constrained_edge[2]:this.constrained_edge[0]},n.prototype.getConstrainedEdgeCCW=function(e){return e===this.points_[0]?this.constrained_edge[2]:e===this.points_[1]?this.constrained_edge[0]:this.constrained_edge[1]},n.prototype.getConstrainedEdgeAcross=function(e){return e===this.points_[0]?this.constrained_edge[0]:e===this.points_[1]?this.constrained_edge[1]:this.constrained_edge[2]},n.prototype.setConstrainedEdgeCW=function(e,t){e===this.points_[0]?this.constrained_edge[1]=t:e===this.points_[1]?this.constrained_edge[2]=t:this.constrained_edge[0]=t},n.prototype.setConstrainedEdgeCCW=function(e,t){e===this.points_[0]?this.constrained_edge[2]=t:e===this.points_[1]?this.constrained_edge[0]=t:this.constrained_edge[1]=t},n.prototype.getDelaunayEdgeCW=function(e){return e===this.points_[0]?this.delaunay_edge[1]:e===this.points_[1]?this.delaunay_edge[2]:this.delaunay_edge[0]},n.prototype.getDelaunayEdgeCCW=function(e){return e===this.points_[0]?this.delaunay_edge[2]:e===this.points_[1]?this.delaunay_edge[0]:this.delaunay_edge[1]},n.prototype.setDelaunayEdgeCW=function(e,t){e===this.points_[0]?this.delaunay_edge[1]=t:e===this.points_[1]?this.delaunay_edge[2]=t:this.delaunay_edge[0]=t},n.prototype.setDelaunayEdgeCCW=function(e,t){e===this.points_[0]?this.delaunay_edge[2]=t:e===this.points_[1]?this.delaunay_edge[0]=t:this.delaunay_edge[1]=t},n.prototype.neighborAcross=function(e){return e===this.points_[0]?this.neighbors_[0]:e===this.points_[1]?this.neighbors_[1]:this.neighbors_[2]},n.prototype.oppositePoint=function(e,t){var n=e.pointCW(t);return this.pointCW(n)},n.prototype.legalize=function(e,t){var n=this.points_;if(e===n[0])n[1]=n[0],n[0]=n[2],n[2]=t;else if(e===n[1])n[2]=n[1],n[1]=n[0],n[0]=t;else{if(e!==n[2])throw new Error("poly2tri Invalid Triangle.legalize() call");n[0]=n[2],n[2]=n[1],n[1]=t}},n.prototype.index=function(e){var t=this.points_;if(e===t[0])return 0;if(e===t[1])return 1;if(e===t[2])return 2;throw new Error("poly2tri Invalid Triangle.index() call")},n.prototype.edgeIndex=function(e,t){var n=this.points_;if(e===n[0]){if(t===n[1])return 2;if(t===n[2])return 1}else if(e===n[1]){if(t===n[2])return 0;if(t===n[0])return 2}else if(e===n[2]){if(t===n[0])return 1;if(t===n[1])return 0}return-1},n.prototype.markConstrainedEdgeByIndex=function(e){this.constrained_edge[e]=!0},n.prototype.markConstrainedEdgeByEdge=function(e){this.markConstrainedEdgeByPoints(e.p,e.q)},n.prototype.markConstrainedEdgeByPoints=function(e,t){var n=this.points_;t===n[0]&&e===n[1]||t===n[1]&&e===n[0]?this.constrained_edge[2]=!0:t===n[0]&&e===n[2]||t===n[2]&&e===n[0]?this.constrained_edge[1]=!0:(t===n[1]&&e===n[2]||t===n[2]&&e===n[1])&&(this.constrained_edge[0]=!0)},t.exports=n},{"./xy":11}],10:[function(e,t,n){"use strict";var r=1e-12;n.EPSILON=r;var o={CW:1,CCW:-1,COLLINEAR:0};n.Orientation=o,n.orient2d=function(e,t,n){var a=(e.x-n.x)*(t.y-n.y)-(e.y-n.y)*(t.x-n.x);return a>-r&&r>a?o.COLLINEAR:a>0?o.CCW:o.CW},n.inScanArea=function(e,t,n,o){if((e.x-t.x)*(o.y-t.y)-(o.x-t.x)*(e.y-t.y)>=-r)return!1;var a=(e.x-n.x)*(o.y-n.y)-(o.x-n.x)*(e.y-n.y);return!(r>=a)},n.isAngleObtuse=function(e,t,n){var r=t.x-e.x,o=t.y-e.y;return 0>r*(n.x-e.x)+o*(n.y-e.y)}},{}],11:[function(e,t){"use strict";function n(e){return"("+e.x+";"+e.y+")"}t.exports={toString:function(e){var t=e.toString();return"[object Object]"===t?n(e):t},toStringBase:n,compare:function(e,t){return e.y===t.y?e.x-t.x:e.y-t.y},equals:function(e,t){return e.x===t.x&&e.y===t.y}}},{}]},{},[6])(6)},41342:e=>{function t(){this.vertices=null,this.edges=null,this.cells=null,this.toRecycle=null,this.beachsectionJunkyard=[],this.circleEventJunkyard=[],this.vertexJunkyard=[],this.edgeJunkyard=[],this.cellJunkyard=[]}t.prototype.reset=function(){if(this.beachline||(this.beachline=new this.RBTree),this.beachline.root)for(var e=this.beachline.getFirst(this.beachline.root);e;)this.beachsectionJunkyard.push(e),e=e.rbNext;this.beachline.root=null,this.circleEvents||(this.circleEvents=new this.RBTree),this.circleEvents.root=this.firstCircleEvent=null,this.vertices=[],this.edges=[],this.cells=[]},t.prototype.sqrt=Math.sqrt,t.prototype.abs=Math.abs,t.prototype.ε=t.ε=1e-9,t.prototype.invε=t.invε=1/t.ε,t.prototype.equalWithEpsilon=function(e,t){return this.abs(e-t)<1e-9},t.prototype.greaterThanWithEpsilon=function(e,t){return e-t>1e-9},t.prototype.greaterThanOrEqualWithEpsilon=function(e,t){return t-e<1e-9},t.prototype.lessThanWithEpsilon=function(e,t){return t-e>1e-9},t.prototype.lessThanOrEqualWithEpsilon=function(e,t){return e-t<1e-9},t.prototype.RBTree=function(){this.root=null},t.prototype.RBTree.prototype.rbInsertSuccessor=function(e,t){var n,r,o;if(e){if(t.rbPrevious=e,t.rbNext=e.rbNext,e.rbNext&&(e.rbNext.rbPrevious=t),e.rbNext=t,e.rbRight){for(e=e.rbRight;e.rbLeft;)e=e.rbLeft;e.rbLeft=t}else e.rbRight=t;n=e}else this.root?(e=this.getFirst(this.root),t.rbPrevious=null,t.rbNext=e,e.rbPrevious=t,e.rbLeft=t,n=e):(t.rbPrevious=t.rbNext=null,this.root=t,n=null);for(t.rbLeft=t.rbRight=null,t.rbParent=n,t.rbRed=!0,e=t;n&&n.rbRed;)n===(r=n.rbParent).rbLeft?(o=r.rbRight)&&o.rbRed?(n.rbRed=o.rbRed=!1,r.rbRed=!0,e=r):(e===n.rbRight&&(this.rbRotateLeft(n),n=(e=n).rbParent),n.rbRed=!1,r.rbRed=!0,this.rbRotateRight(r)):(o=r.rbLeft)&&o.rbRed?(n.rbRed=o.rbRed=!1,r.rbRed=!0,e=r):(e===n.rbLeft&&(this.rbRotateRight(n),n=(e=n).rbParent),n.rbRed=!1,r.rbRed=!0,this.rbRotateLeft(r)),n=e.rbParent;this.root.rbRed=!1},t.prototype.RBTree.prototype.rbRemoveNode=function(e){e.rbNext&&(e.rbNext.rbPrevious=e.rbPrevious),e.rbPrevious&&(e.rbPrevious.rbNext=e.rbNext),e.rbNext=e.rbPrevious=null;var t,n,r=e.rbParent,o=e.rbLeft,a=e.rbRight;if(t=o?a?this.getFirst(a):o:a,r?r.rbLeft===e?r.rbLeft=t:r.rbRight=t:this.root=t,o&&a?(n=t.rbRed,t.rbRed=e.rbRed,t.rbLeft=o,o.rbParent=t,t!==a?(r=t.rbParent,t.rbParent=e.rbParent,e=t.rbRight,r.rbLeft=e,t.rbRight=a,a.rbParent=t):(t.rbParent=r,r=t,e=t.rbRight)):(n=e.rbRed,e=t),e&&(e.rbParent=r),!n)if(e&&e.rbRed)e.rbRed=!1;else{var i;do{if(e===this.root)break;if(e===r.rbLeft){if((i=r.rbRight).rbRed&&(i.rbRed=!1,r.rbRed=!0,this.rbRotateLeft(r),i=r.rbRight),i.rbLeft&&i.rbLeft.rbRed||i.rbRight&&i.rbRight.rbRed){i.rbRight&&i.rbRight.rbRed||(i.rbLeft.rbRed=!1,i.rbRed=!0,this.rbRotateRight(i),i=r.rbRight),i.rbRed=r.rbRed,r.rbRed=i.rbRight.rbRed=!1,this.rbRotateLeft(r),e=this.root;break}}else if((i=r.rbLeft).rbRed&&(i.rbRed=!1,r.rbRed=!0,this.rbRotateRight(r),i=r.rbLeft),i.rbLeft&&i.rbLeft.rbRed||i.rbRight&&i.rbRight.rbRed){i.rbLeft&&i.rbLeft.rbRed||(i.rbRight.rbRed=!1,i.rbRed=!0,this.rbRotateLeft(i),i=r.rbLeft),i.rbRed=r.rbRed,r.rbRed=i.rbLeft.rbRed=!1,this.rbRotateRight(r),e=this.root;break}i.rbRed=!0,e=r,r=r.rbParent}while(!e.rbRed);e&&(e.rbRed=!1)}},t.prototype.RBTree.prototype.rbRotateLeft=function(e){var t=e,n=e.rbRight,r=t.rbParent;r?r.rbLeft===t?r.rbLeft=n:r.rbRight=n:this.root=n,n.rbParent=r,t.rbParent=n,t.rbRight=n.rbLeft,t.rbRight&&(t.rbRight.rbParent=t),n.rbLeft=t},t.prototype.RBTree.prototype.rbRotateRight=function(e){var t=e,n=e.rbLeft,r=t.rbParent;r?r.rbLeft===t?r.rbLeft=n:r.rbRight=n:this.root=n,n.rbParent=r,t.rbParent=n,t.rbLeft=n.rbRight,t.rbLeft&&(t.rbLeft.rbParent=t),n.rbRight=t},t.prototype.RBTree.prototype.getFirst=function(e){for(;e.rbLeft;)e=e.rbLeft;return e},t.prototype.RBTree.prototype.getLast=function(e){for(;e.rbRight;)e=e.rbRight;return e},t.prototype.Diagram=function(e){this.site=e},t.prototype.Cell=function(e){this.site=e,this.halfedges=[],this.closeMe=!1},t.prototype.Cell.prototype.init=function(e){return this.site=e,this.halfedges=[],this.closeMe=!1,this},t.prototype.createCell=function(e){var t=this.cellJunkyard.pop();return t?t.init(e):new this.Cell(e)},t.prototype.Cell.prototype.prepareHalfedges=function(){for(var e,t=this.halfedges,n=t.length;n--;)(e=t[n].edge).vb&&e.va||t.splice(n,1);return t.sort((function(e,t){return t.angle-e.angle})),t.length},t.prototype.Cell.prototype.getNeighborIds=function(){for(var e,t=[],n=this.halfedges.length;n--;)null!==(e=this.halfedges[n].edge).lSite&&e.lSite.voronoiId!=this.site.voronoiId?t.push(e.lSite.voronoiId):null!==e.rSite&&e.rSite.voronoiId!=this.site.voronoiId&&t.push(e.rSite.voronoiId);return t},t.prototype.Cell.prototype.getBbox=function(){for(var e,t,n,r=this.halfedges,o=r.length,a=1/0,i=1/0,s=-1/0,c=-1/0;o--;)(t=(e=r[o].getStartpoint()).x)<a&&(a=t),(n=e.y)<i&&(i=n),t>s&&(s=t),n>c&&(c=n);return{x:a,y:i,width:s-a,height:c-i}},t.prototype.Cell.prototype.pointIntersection=function(e,t){for(var n,r,o,a,i=this.halfedges,s=i.length;s--;){if(r=(n=i[s]).getStartpoint(),o=n.getEndpoint(),!(a=(t-r.y)*(o.x-r.x)-(e-r.x)*(o.y-r.y)))return 0;if(a>0)return-1}return 1},t.prototype.Vertex=function(e,t){this.x=e,this.y=t},t.prototype.Edge=function(e,t){this.lSite=e,this.rSite=t,this.va=this.vb=null},t.prototype.Halfedge=function(e,t,n){if(this.site=t,this.edge=e,n)this.angle=Math.atan2(n.y-t.y,n.x-t.x);else{var r=e.va,o=e.vb;this.angle=e.lSite===t?Math.atan2(o.x-r.x,r.y-o.y):Math.atan2(r.x-o.x,o.y-r.y)}},t.prototype.createHalfedge=function(e,t,n){return new this.Halfedge(e,t,n)},t.prototype.Halfedge.prototype.getStartpoint=function(){return this.edge.lSite===this.site?this.edge.va:this.edge.vb},t.prototype.Halfedge.prototype.getEndpoint=function(){return this.edge.lSite===this.site?this.edge.vb:this.edge.va},t.prototype.createVertex=function(e,t){var n=this.vertexJunkyard.pop();return n?(n.x=e,n.y=t):n=new this.Vertex(e,t),this.vertices.push(n),n},t.prototype.createEdge=function(e,t,n,r){var o=this.edgeJunkyard.pop();return o?(o.lSite=e,o.rSite=t,o.va=o.vb=null):o=new this.Edge(e,t),this.edges.push(o),n&&this.setEdgeStartpoint(o,e,t,n),r&&this.setEdgeEndpoint(o,e,t,r),this.cells[e.voronoiId].halfedges.push(this.createHalfedge(o,e,t)),this.cells[t.voronoiId].halfedges.push(this.createHalfedge(o,t,e)),o},t.prototype.createBorderEdge=function(e,t,n){var r=this.edgeJunkyard.pop();return r?(r.lSite=e,r.rSite=null):r=new this.Edge(e,null),r.va=t,r.vb=n,this.edges.push(r),r},t.prototype.setEdgeStartpoint=function(e,t,n,r){e.va||e.vb?e.lSite===n?e.vb=r:e.va=r:(e.va=r,e.lSite=t,e.rSite=n)},t.prototype.setEdgeEndpoint=function(e,t,n,r){this.setEdgeStartpoint(e,n,t,r)},t.prototype.Beachsection=function(){},t.prototype.createBeachsection=function(e){var t=this.beachsectionJunkyard.pop();return t||(t=new this.Beachsection),t.site=e,t},t.prototype.leftBreakPoint=function(e,t){var n=e.site,r=n.x,o=n.y,a=o-t;if(!a)return r;var i=e.rbPrevious;if(!i)return-1/0;var s=(n=i.site).x,c=n.y,u=c-t;if(!u)return s;var l=s-r,d=1/a-1/u,p=l/u;return d?(-p+this.sqrt(p*p-2*d*(l*l/(-2*u)-c+u/2+o-a/2)))/d+r:(r+s)/2},t.prototype.rightBreakPoint=function(e,t){var n=e.rbNext;if(n)return this.leftBreakPoint(n,t);var r=e.site;return r.y===t?r.x:1/0},t.prototype.detachBeachsection=function(e){this.detachCircleEvent(e),this.beachline.rbRemoveNode(e),this.beachsectionJunkyard.push(e)},t.prototype.removeBeachsection=function(e){var t=e.circleEvent,n=t.x,r=t.ycenter,o=this.createVertex(n,r),a=e.rbPrevious,i=e.rbNext,s=[e],c=Math.abs;this.detachBeachsection(e);for(var u=a;u.circleEvent&&c(n-u.circleEvent.x)<1e-9&&c(r-u.circleEvent.ycenter)<1e-9;)a=u.rbPrevious,s.unshift(u),this.detachBeachsection(u),u=a;s.unshift(u),this.detachCircleEvent(u);for(var l=i;l.circleEvent&&c(n-l.circleEvent.x)<1e-9&&c(r-l.circleEvent.ycenter)<1e-9;)i=l.rbNext,s.push(l),this.detachBeachsection(l),l=i;s.push(l),this.detachCircleEvent(l);var d,p=s.length;for(d=1;d<p;d++)l=s[d],u=s[d-1],this.setEdgeStartpoint(l.edge,u.site,l.site,o);u=s[0],(l=s[p-1]).edge=this.createEdge(u.site,l.site,void 0,o),this.attachCircleEvent(u),this.attachCircleEvent(l)},t.prototype.addBeachsection=function(e){for(var t,n,r,o,a=e.x,i=e.y,s=this.beachline.root;s;)if((r=this.leftBreakPoint(s,i)-a)>1e-9)s=s.rbLeft;else{if(!((o=a-this.rightBreakPoint(s,i))>1e-9)){r>-1e-9?(t=s.rbPrevious,n=s):o>-1e-9?(t=s,n=s.rbNext):t=n=s;break}if(!s.rbRight){t=s;break}s=s.rbRight}var c=this.createBeachsection(e);if(this.beachline.rbInsertSuccessor(t,c),t||n){if(t===n)return this.detachCircleEvent(t),n=this.createBeachsection(t.site),this.beachline.rbInsertSuccessor(c,n),c.edge=n.edge=this.createEdge(t.site,c.site),this.attachCircleEvent(t),void this.attachCircleEvent(n);if(!t||n){if(t!==n){this.detachCircleEvent(t),this.detachCircleEvent(n);var u=t.site,l=u.x,d=u.y,p=e.x-l,h=e.y-d,f=n.site,g=f.x-l,m=f.y-d,v=2*(p*m-h*g),y=p*p+h*h,b=g*g+m*m,w=this.createVertex((m*y-h*b)/v+l,(p*b-g*y)/v+d);return this.setEdgeStartpoint(n.edge,u,f,w),c.edge=this.createEdge(u,e,void 0,w),n.edge=this.createEdge(e,f,void 0,w),this.attachCircleEvent(t),void this.attachCircleEvent(n)}}else c.edge=this.createEdge(t.site,c.site)}},t.prototype.CircleEvent=function(){this.arc=null,this.rbLeft=null,this.rbNext=null,this.rbParent=null,this.rbPrevious=null,this.rbRed=!1,this.rbRight=null,this.site=null,this.x=this.y=this.ycenter=0},t.prototype.attachCircleEvent=function(e){var t=e.rbPrevious,n=e.rbNext;if(t&&n){var r=t.site,o=e.site,a=n.site;if(r!==a){var i=o.x,s=o.y,c=r.x-i,u=r.y-s,l=a.x-i,d=a.y-s,p=2*(c*d-u*l);if(!(p>=-2e-12)){var h=c*c+u*u,f=l*l+d*d,g=(d*h-u*f)/p,m=(c*f-l*h)/p,v=m+s,y=this.circleEventJunkyard.pop();y||(y=new this.CircleEvent),y.arc=e,y.site=o,y.x=g+i,y.y=v+this.sqrt(g*g+m*m),y.ycenter=v,e.circleEvent=y;for(var b=null,w=this.circleEvents.root;w;)if(y.y<w.y||y.y===w.y&&y.x<=w.x){if(!w.rbLeft){b=w.rbPrevious;break}w=w.rbLeft}else{if(!w.rbRight){b=w;break}w=w.rbRight}this.circleEvents.rbInsertSuccessor(b,y),b||(this.firstCircleEvent=y)}}}},t.prototype.detachCircleEvent=function(e){var t=e.circleEvent;t&&(t.rbPrevious||(this.firstCircleEvent=t.rbNext),this.circleEvents.rbRemoveNode(t),this.circleEventJunkyard.push(t),e.circleEvent=null)},t.prototype.connectEdge=function(e,t){var n=e.vb;if(n)return!0;var r,o,a=e.va,i=t.xl,s=t.xr,c=t.yt,u=t.yb,l=e.lSite,d=e.rSite,p=l.x,h=l.y,f=d.x,g=d.y,m=(p+f)/2,v=(h+g)/2;if(this.cells[l.voronoiId].closeMe=!0,this.cells[d.voronoiId].closeMe=!0,g!==h&&(o=v-(r=(p-f)/(g-h))*m),void 0===r){if(m<i||m>=s)return!1;if(p>f){if(!a||a.y<c)a=this.createVertex(m,c);else if(a.y>=u)return!1;n=this.createVertex(m,u)}else{if(!a||a.y>u)a=this.createVertex(m,u);else if(a.y<c)return!1;n=this.createVertex(m,c)}}else if(r<-1||r>1)if(p>f){if(!a||a.y<c)a=this.createVertex((c-o)/r,c);else if(a.y>=u)return!1;n=this.createVertex((u-o)/r,u)}else{if(!a||a.y>u)a=this.createVertex((u-o)/r,u);else if(a.y<c)return!1;n=this.createVertex((c-o)/r,c)}else if(h<g){if(!a||a.x<i)a=this.createVertex(i,r*i+o);else if(a.x>=s)return!1;n=this.createVertex(s,r*s+o)}else{if(!a||a.x>s)a=this.createVertex(s,r*s+o);else if(a.x<i)return!1;n=this.createVertex(i,r*i+o)}return e.va=a,e.vb=n,!0},t.prototype.clipEdge=function(e,t){var n=e.va.x,r=e.va.y,o=0,a=1,i=e.vb.x-n,s=e.vb.y-r,c=n-t.xl;if(0===i&&c<0)return!1;var u=-c/i;if(i<0){if(u<o)return!1;u<a&&(a=u)}else if(i>0){if(u>a)return!1;u>o&&(o=u)}if(c=t.xr-n,0===i&&c<0)return!1;if(u=c/i,i<0){if(u>a)return!1;u>o&&(o=u)}else if(i>0){if(u<o)return!1;u<a&&(a=u)}if(c=r-t.yt,0===s&&c<0)return!1;if(u=-c/s,s<0){if(u<o)return!1;u<a&&(a=u)}else if(s>0){if(u>a)return!1;u>o&&(o=u)}if(c=t.yb-r,0===s&&c<0)return!1;if(u=c/s,s<0){if(u>a)return!1;u>o&&(o=u)}else if(s>0){if(u<o)return!1;u<a&&(a=u)}return o>0&&(e.va=this.createVertex(n+o*i,r+o*s)),a<1&&(e.vb=this.createVertex(n+a*i,r+a*s)),(o>0||a<1)&&(this.cells[e.lSite.voronoiId].closeMe=!0,this.cells[e.rSite.voronoiId].closeMe=!0),!0},t.prototype.clipEdges=function(e){for(var t,n=this.edges,r=n.length,o=Math.abs;r--;)t=n[r],(!this.connectEdge(t,e)||!this.clipEdge(t,e)||o(t.va.x-t.vb.x)<1e-9&&o(t.va.y-t.vb.y)<1e-9)&&(t.va=t.vb=null,n.splice(r,1))},t.prototype.closeCells=function(e){for(var t,n,r,o,a,i,s,c,u,l=e.xl,d=e.xr,p=e.yt,h=e.yb,f=this.cells,g=f.length,m=Math.abs;g--;)if((t=f[g]).prepareHalfedges()&&t.closeMe){for(o=(r=t.halfedges).length,n=0;n<o;){if(i=r[n].getEndpoint(),c=r[(n+1)%o].getStartpoint(),m(i.x-c.x)>=1e-9||m(i.y-c.y)>=1e-9)switch(!0){case this.equalWithEpsilon(i.x,l)&&this.lessThanWithEpsilon(i.y,h):if(u=this.equalWithEpsilon(c.x,l),s=this.createVertex(l,u?c.y:h),a=this.createBorderEdge(t.site,i,s),n++,r.splice(n,0,this.createHalfedge(a,t.site,null)),o++,u)break;i=s;case this.equalWithEpsilon(i.y,h)&&this.lessThanWithEpsilon(i.x,d):if(u=this.equalWithEpsilon(c.y,h),s=this.createVertex(u?c.x:d,h),a=this.createBorderEdge(t.site,i,s),n++,r.splice(n,0,this.createHalfedge(a,t.site,null)),o++,u)break;i=s;case this.equalWithEpsilon(i.x,d)&&this.greaterThanWithEpsilon(i.y,p):if(u=this.equalWithEpsilon(c.x,d),s=this.createVertex(d,u?c.y:p),a=this.createBorderEdge(t.site,i,s),n++,r.splice(n,0,this.createHalfedge(a,t.site,null)),o++,u)break;i=s;case this.equalWithEpsilon(i.y,p)&&this.greaterThanWithEpsilon(i.x,l):if(u=this.equalWithEpsilon(c.y,p),s=this.createVertex(u?c.x:l,p),a=this.createBorderEdge(t.site,i,s),n++,r.splice(n,0,this.createHalfedge(a,t.site,null)),o++,u)break;if(i=s,u=this.equalWithEpsilon(c.x,l),s=this.createVertex(l,u?c.y:h),a=this.createBorderEdge(t.site,i,s),n++,r.splice(n,0,this.createHalfedge(a,t.site,null)),o++,u)break;if(i=s,u=this.equalWithEpsilon(c.y,h),s=this.createVertex(u?c.x:d,h),a=this.createBorderEdge(t.site,i,s),n++,r.splice(n,0,this.createHalfedge(a,t.site,null)),o++,u)break;if(i=s,u=this.equalWithEpsilon(c.x,d),s=this.createVertex(d,u?c.y:p),a=this.createBorderEdge(t.site,i,s),n++,r.splice(n,0,this.createHalfedge(a,t.site,null)),o++,u)break;default:throw"Voronoi.closeCells() > this makes no sense!"}n++}t.closeMe=!1}},t.prototype.quantizeSites=function(e){for(var t,n=this.ε,r=e.length;r--;)(t=e[r]).x=Math.floor(t.x/n)*n,t.y=Math.floor(t.y/n)*n},t.prototype.recycle=function(e){if(e){if(!(e instanceof this.Diagram))throw"Voronoi.recycleDiagram() > Need a Diagram object.";this.toRecycle=e}},t.prototype.compute=function(e,t){var n=new Date;this.reset(),this.toRecycle&&(this.vertexJunkyard=this.vertexJunkyard.concat(this.toRecycle.vertices),this.edgeJunkyard=this.edgeJunkyard.concat(this.toRecycle.edges),this.cellJunkyard=this.cellJunkyard.concat(this.toRecycle.cells),this.toRecycle=null);var r=e.slice(0);r.sort((function(e,t){return t.y-e.y||t.x-e.x}));for(var o,a,i,s=r.pop(),c=0,u=this.cells;;)if(i=this.firstCircleEvent,s&&(!i||s.y<i.y||s.y===i.y&&s.x<i.x))s.x===o&&s.y===a||(u[c]=this.createCell(s),s.voronoiId=c++,this.addBeachsection(s),a=s.y,o=s.x),s=r.pop();else{if(!i)break;this.removeBeachsection(i.arc)}this.clipEdges(t),this.closeCells(t);var l=new Date,d=new this.Diagram;return d.cells=this.cells,d.edges=this.edges,d.vertices=this.vertices,d.execTime=l.getTime()-n.getTime(),this.reset(),d},e.exports=t},83221:(e,t,n)=>{var r=n(79182),o=n(27222),a=o;a.v1=r,a.v4=o,e.exports=a},92105:e=>{for(var t=[],n=0;n<256;++n)t[n]=(n+256).toString(16).substr(1);e.exports=function(e,n){var r=n||0,o=t;return[o[e[r++]],o[e[r++]],o[e[r++]],o[e[r++]],"-",o[e[r++]],o[e[r++]],"-",o[e[r++]],o[e[r++]],"-",o[e[r++]],o[e[r++]],"-",o[e[r++]],o[e[r++]],o[e[r++]],o[e[r++]],o[e[r++]],o[e[r++]]].join("")}},68839:e=>{var t="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof window.msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto);if(t){var n=new Uint8Array(16);e.exports=function(){return t(n),n}}else{var r=new Array(16);e.exports=function(){for(var e,t=0;t<16;t++)0==(3&t)&&(e=4294967296*Math.random()),r[t]=e>>>((3&t)<<3)&255;return r}}},79182:(e,t,n)=>{var r,o,a=n(68839),i=n(92105),s=0,c=0;e.exports=function(e,t,n){var u=t&&n||0,l=t||[],d=(e=e||{}).node||r,p=void 0!==e.clockseq?e.clockseq:o;if(null==d||null==p){var h=a();null==d&&(d=r=[1|h[0],h[1],h[2],h[3],h[4],h[5]]),null==p&&(p=o=16383&(h[6]<<8|h[7]))}var f=void 0!==e.msecs?e.msecs:(new Date).getTime(),g=void 0!==e.nsecs?e.nsecs:c+1,m=f-s+(g-c)/1e4;if(m<0&&void 0===e.clockseq&&(p=p+1&16383),(m<0||f>s)&&void 0===e.nsecs&&(g=0),g>=1e4)throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");s=f,c=g,o=p;var v=(1e4*(268435455&(f+=122192928e5))+g)%4294967296;l[u++]=v>>>24&255,l[u++]=v>>>16&255,l[u++]=v>>>8&255,l[u++]=255&v;var y=f/4294967296*1e4&268435455;l[u++]=y>>>8&255,l[u++]=255&y,l[u++]=y>>>24&15|16,l[u++]=y>>>16&255,l[u++]=p>>>8|128,l[u++]=255&p;for(var b=0;b<6;++b)l[u+b]=d[b];return t||i(l)}},27222:(e,t,n)=>{var r=n(68839),o=n(92105);e.exports=function(e,t,n){var a=t&&n||0;"string"==typeof e&&(t="binary"===e?new Array(16):null,e=null);var i=(e=e||{}).random||(e.rng||r)();if(i[6]=15&i[6]|64,i[8]=63&i[8]|128,t)for(var s=0;s<16;++s)t[a+s]=i[s];return t||o(i)}},853:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component;e.description="initialize camera and/or microphone",e.icon="video-camera",e.inPorts.add("start",{datatype:"bang"}),e.inPorts.add("stop",{datatype:"bang"}),e.inPorts.add("video",{datatype:"boolean",control:!0,default:!0}),e.inPorts.add("audio",{datatype:"boolean",control:!0,default:!1}),e.outPorts.add("stream",{datatype:"object"}),e.outPorts.add("url",{datatype:"string"}),e.outPorts.add("error",{datatype:"object"});let t=null,n=null;const o=()=>{t&&t.stop&&(t.stop(),t=null),n&&(n.deactivate(),n=null)};return e.tearDown=e=>{o(),e()},e.process(((e,r,a)=>{if(e.hasData("stop"))return e.getData("stop"),o(),void r.done();if(!e.hasData("start"))return;if(e.getData("start"),o(),!("undefined"!=typeof navigator&&null!==navigator?navigator.mediaDevices:void 0))return void r.done(new Error("navigator.mediaDevices not available."));if(!("undefined"!=typeof navigator&&null!==navigator?navigator.mediaDevices.getUserMedia:void 0))return void r.done(new Error("navigator.mediaDevices.getUserMedia not available."));const i=!e.hasData("video")||e.getData("video"),s=!!e.hasData("audio")&&e.getData("audio");navigator.mediaDevices.getUserMedia({video:i,audio:s}).then((e=>(t=e,n=a,null==window.URL&&(window.URL=window.webkitURL||window.msURL||window.oURL||null),window.URL.createObjectURL?r.send({url:window.URL.createObjectURL(t)}):r.send({url:t}),r.send({stream:t}))),(e=>r.done(e)))})),e}},81919:(e,t,n)=>{const r=n(76445);e.exports=function(e,t,n,o={}){const a=e;a.inPorts=new r.InPorts(n),a.outPorts=new r.OutPorts,a.outPorts.add(t,{datatype:"object"}),a.props={},a.tearDown=e=>(a.props={},e()),a.forwardBrackets={};const i=o.compute||e.compute||(e=>{let t={};return Object.keys(e).forEach((n=>{const r=e[n];null!=a.inPorts[n]&&a.inPorts[n].options.addressable?t[n]=a.expandToArray(r):t[n]=r})),t=a.expandToArray(t),t});return a.expandToArray=o.expandToArray||(e=>{let t=0,n=Object.keys(e);for(let r=0;r<n.length;r+=1){const o=n[r],a=e[o];if(null==a)return null;if(Array.isArray(a)){if(!(a.length>0))return null;t<a.length&&({length:t}=a)}}if(0===t)return e;if(t>0){const r=[];for(let o=0,a=t,i=a>=0;i?o<a:o>a;i?o+=1:o-=1){let t;e instanceof Array?t=[]:(t={},t.type=e.type,t.id=e.id),n=Object.keys(e),n.forEach((n=>{const r=e[n];Array.isArray(r)?t[n]=null!=r[o]?r[o]:r[o%r.length]:t[n]=r})),r.push(t)}return r}return null}),a.process(((r,o)=>{a.props[r.scope]||(a.props[r.scope]=(()=>{const e={type:t};return e.id=function(e=8){let t="";for(;t.length<e;)t+=Math.random().toString(36).substr(2);return t.substr(0,e)}(),Object.keys(n||{}).forEach((t=>{const r=n[t];!0!==r.addressable?null==r.value&&!1===r.required||(e[t]=r.value):e[t]=[]})),e})());const s=a.props[r.scope];Object.keys(n).forEach((t=>{let a;if(!0!==n[t].addressable)r.hasData(t)&&(a=r.getData(t),((t,n,r,o)=>{const a=t;a[n]=r;const s=i.bind(e)(a);s&&o.send(s)})(s,t,a,o));else{const n=r.attached(t).filter((e=>r.hasData([t,e])));if(!n.length)return;n.forEach((n=>{a=r.getData([t,n]),((t,n,r,o,a)=>{const s=t;s[n][o]=r;const c=i.bind(e)(s);c&&a.send(c)})(s,t,a,n,o)}))}})),o.done()}))}},28451:e=>{"use strict";e.exports=JSON.parse('{"properties":{"name":"UrlToCanvas","environment":{"type":"all"}},"inports":{"url":{"process":"img","port":"url","metadata":{"x":36,"y":144,"width":72,"height":72}},"crossorigin":{"process":"img","port":"crossorigin","metadata":{"x":36,"y":288,"width":72,"height":72}}},"outports":{"canvas":{"process":"canvas/Draw_n4cqh","port":"canvas","metadata":{"x":828,"y":180,"width":72,"height":72}},"error":{"process":"img","port":"error","metadata":{"x":828,"y":360,"width":72,"height":72}}},"groups":[],"processes":{"canvas/Draw_n4cqh":{"component":"canvas/Draw","metadata":{"label":"canvas/Draw","x":684,"y":180,"width":72,"height":72}},"drawImage":{"component":"canvas/DrawImage","metadata":{"label":"drawImage","x":504,"y":180,"width":72,"height":72}},"img":{"component":"image/CreateImage","metadata":{"label":"img","x":180,"y":216,"width":72,"height":72}},"canvas":{"component":"canvas/CreateCanvas","metadata":{"label":"canvas","x":504,"y":360,"width":72,"height":72}},"w":{"component":"objects/ExtractProperty","metadata":{"label":"w","x":324,"y":288,"width":72,"height":72}},"h":{"component":"objects/ExtractProperty","metadata":{"label":"h","x":324,"y":396,"width":72,"height":72}},"core/RepeatAsync_u0yan":{"component":"core/RepeatAsync","metadata":{"label":"core/RepeatAsync","x":504,"y":36,"width":72,"height":72}}},"connections":[{"src":{"process":"img","port":"image"},"tgt":{"process":"drawImage","port":"image"}},{"src":{"process":"w","port":"out"},"tgt":{"process":"canvas","port":"width"}},{"src":{"process":"h","port":"out"},"tgt":{"process":"canvas","port":"height"}},{"src":{"process":"img","port":"image"},"tgt":{"process":"w","port":"in"},"metadata":{"route":0}},{"src":{"process":"img","port":"image"},"tgt":{"process":"h","port":"in"},"metadata":{"route":0}},{"src":{"process":"drawImage","port":"drawimage"},"tgt":{"process":"canvas/Draw_n4cqh","port":"commands"}},{"src":{"process":"canvas","port":"canvas"},"tgt":{"process":"canvas/Draw_n4cqh","port":"canvas"}},{"src":{"process":"img","port":"image"},"tgt":{"process":"core/RepeatAsync_u0yan","port":"in"},"metadata":{"route":0}},{"src":{"process":"core/RepeatAsync_u0yan","port":"out"},"tgt":{"process":"canvas/Draw_n4cqh","port":"tick"}},{"data":"width","tgt":{"process":"w","port":"key"}},{"data":"height","tgt":{"process":"h","port":"key"}},{"data":{"x":0,"y":0},"tgt":{"process":"drawImage","port":"destpoint"}}]}')},52775:e=>{e.exports=window.overrideIndexedDB||window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB},78893:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component({description:"Accumulate numbers coming from the input port",inPorts:{in:{datatype:"number",description:"Numbers to accumulate",required:!0},reset:{datatype:"bang",description:"Reset accumulation counter"},emitreset:{datatype:"boolean",description:"Whether to emit an output upon reset",control:!0,default:!1}},outPorts:{out:{datatype:"number",required:!0}}});return e.forwardBrackets={},e.counter={},e.tearDown=t=>{e.counter={},t()},e.process(((t,n)=>{if(t.hasData("reset")){t.getData("reset"),e.counter[t.scope]=0;let r=!1;return t.hasData("emitreset")&&(r=t.getData("emitreset")),r?void n.sendDone(e.counter[t.scope]):void n.done()}if(!t.hasData("in"))return;const r=t.getData("in");e.counter[t.scope]||(e.counter[t.scope]=0),e.counter[t.scope]+=r,n.sendDone(e.counter[t.scope])}))}},36707:(e,t,n)=>{const r=n(76445);t.getComponent=()=>new r.Component({icon:"plus",inPorts:{augend:{datatype:"number",required:!0},addend:{datatype:"number",required:!0,control:!0}},outPorts:{sum:{datatype:"number"}}}).process(((e,t)=>{if(!e.hasData("augend","addend"))return;const[n,r]=e.getData("augend","addend");t.sendDone({sum:Number(n)+Number(r)})}))},13289:(e,t,n)=>{const r=n(76445);t.getComponent=()=>new r.Component({description:"Calculate the angle between two points",icon:"compass",inPorts:{origin:{datatype:"object",required:!0},destination:{datatype:"object",required:!0}},outPorts:{angle:{datatype:"int",required:!0}}}).process(((e,t)=>{if(!e.hasData("origin","destination"))return;let[n,r]=e.getData("origin","destination");const o=r.x-n.x,a=r.y-n.y;n=null,r=null;let i=180*Math.atan2(a,o)/Math.PI+90;i<0&&(i+=360),t.sendDone({angle:i})}))},54626:(e,t,n)=>{const r=n(76445);t.getComponent=()=>new r.Component({description:"Calculate the distance between two points",icon:"arrow-right",inPorts:{origin:{datatype:"object",required:!0},destination:{datatype:"object",required:!0}},outPorts:{distance:{datatype:"int",required:!0}}}).process(((e,t)=>{if(!e.hasData("origin","destination"))return;let[n,r]=e.getData("origin","destination");const o=r.x-n.x,a=r.y-n.y;n=null,r=null;const i=Math.sqrt(o**2+a**2);t.sendDone({distance:i})}))},87731:(e,t,n)=>{const r=n(76445);t.getComponent=()=>new r.Component({icon:"arrow-up",description:"Round a number up",inPorts:{in:{datatype:"number"}},outPorts:{out:{datatype:"int"}}}).process(((e,t)=>{if(!e.hasData("in"))return;const n=e.getData("in");t.sendDone(Math.ceil(n))}))},4640:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component({inPorts:{value:{datatype:"number",required:!0},comparison:{datatype:"number",required:!0},operator:{datatype:"string",control:!0,default:"=="}},outPorts:{pass:{datatype:"number"},fail:{datatype:"number"}}});return e.description="Compare two numbers",e.icon="check",e.forwardBrackets={value:["pass"],comparison:["pass"],operator:["pass"]},e.process(((e,t)=>{if(!e.hasData("value","comparison"))return;const n=e.getData("value"),r=e.getData("comparison");switch(e.getData("operator")||"=="){case"eq":case"==":if(n===r)return void t.sendDone({pass:n});break;case"ne":case"!=":if(n!==r)return void t.sendDone({pass:n});break;case"gt":case">":if(n>r)return void t.sendDone({pass:n});break;case"lt":case"<":if(n<r)return void t.sendDone({pass:n});break;case"ge":case">=":if(n>=r)return void t.sendDone({pass:n});break;case"le":case"<=":if(n<=r)return void t.sendDone({pass:n});break;default:return void t.sendDone({fail:n})}t.sendDone({fail:n})}))}},48294:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component({description:"Sum numbers coming from multiple inputs together",inPorts:{in:{datatype:"number",addressable:!0}},outPorts:{out:{datatype:"number"}}});return e.forwardBrackets={},e.process(((e,t)=>{const n=e.attached("in").filter((t=>e.hasStream(["in",t])));if(!n.length)return;const r=["in",n[0]],o=e.getStream(r).filter((e=>"data"===e.type));let a=0,i=0;o.forEach((e=>{a+=e.data,e.index===i.index?(t.send({out:e.data}),a=0):(t.send({out:a}),a=e.data),i=e})),t.done()}))}},74622:(e,t,n)=>{const r=n(76445);t.getComponent=()=>new r.Component({icon:"plus",inPorts:{dividend:{datatype:"all",required:!0},divisor:{datatype:"all",required:!0,control:!0}},outPorts:{quotient:{datatype:"all"}}}).process(((e,t)=>{if(!e.hasData("dividend","divisor"))return;const[n,r]=e.getData("dividend","divisor");t.sendDone({quotient:n/r})}))},57325:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component;return e.icon="caret-up",e.inPorts.add("base",{datatype:"number",required:!0}),e.inPorts.add("exponent",{datatype:"number",required:!0,control:!0}),e.outPorts.add("power",{datatype:"number"}),e.process(((e,t)=>{if(!e.hasData("base","exponent"))return;const[n,r]=e.getData("base","exponent");t.sendDone({power:n**r})}))}},23774:(e,t,n)=>{const r=n(76445);t.getComponent=()=>new r.Component({icon:"arrow-down",description:"Round a number down",inPorts:{in:{datatype:"number"}},outPorts:{out:{datatype:"int"}}}).process(((e,t)=>{if(!e.hasData("in"))return;const n=e.getData("in");t.sendDone(Math.floor(n))}))},17940:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component({inPorts:{in:{datatype:"number",required:!0},in_lower:{datatype:"number",description:"the lower bound of the input value",required:!0,control:!0},in_upper:{datatype:"number",description:"the uppwer bound of the input value",required:!0,control:!0},out_lower:{datatype:"number",description:"the lower bound of the output value",required:!0,control:!0},out_upper:{datatype:"number",description:"the uppwer bound of the output value",required:!0,control:!0}},outPorts:{out:{datatype:"number"}}});return e.icon="reorder",e.description="Map a number from a source range to a target reange.",e.process(((e,t)=>{if(!e.hasData("in","in_lower","in_upper","out_upper","out_lower"))return;const n=e.getData("in"),r=e.getData("in_lower"),o=e.getData("in_upper"),a=e.getData("out_upper"),i=e.getData("out_lower"),s=Math.min(r,o),c=Math.max(r,o)-s,u=Math.min(i,a),l=u+(n-s)*(Math.max(i,a)-u)/c;t.sendDone(l)}))}},80334:(e,t,n)=>{const r=n(76445);t.getComponent=()=>new r.Component({inPorts:{dividend:{datatype:"all",required:!0},divisor:{datatype:"all",required:!0,control:!0}},outPorts:{remainder:{datatype:"all"}}}).process(((e,t)=>{if(!e.hasData("dividend","divisor"))return;const[n,r]=e.getData("dividend","divisor");t.sendDone(n%r)}))},24015:(e,t,n)=>{const r=n(76445);t.getComponent=()=>new r.Component({icon:"asterisk",inPorts:{multiplicand:{datatype:"all",required:!0},multiplier:{datatype:"all",required:!0,control:!0}},outPorts:{product:{datatype:"all",required:!0}}}).process(((e,t)=>{if(!e.hasData("multiplicand","multiplier"))return;const[n,r]=e.getData("multiplicand","multiplier");t.sendDone({product:n*r})}))},49003:(e,t,n)=>{const r=n(76445);t.getComponent=()=>new r.Component({icon:"random",description:"Generate a random number between 0 and 1",inPorts:{in:{datatype:"bang"}},outPorts:{out:{datatype:"number"}}}).process(((e,t)=>{e.hasData("in")&&(e.getData("in"),t.sendDone(Math.random()))}))},80018:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component({inPorts:{in:{datatype:"bang",required:!0},lower:{datatype:"number",description:"the lower bound",control:!0},upper:{datatype:"number",description:"the uppwer bound",control:!0}},outPorts:{out:{datatype:"number",required:!0}}});return e.icon="random",e.description="Generate a random number in the given range.",e.forwardBrackets={in:["out"],lower:["out"],upper:["out"]},e.process(((e,t)=>{if(!e.hasData("in","lower","upper"))return;let n=e.getData("lower"),r=e.getData("upper");n=Math.min(n,r),r=Math.max(n,r);const o=.5+r-n,a=n+Math.random()*o;t.sendDone(Math.floor(a))}))}},92732:(e,t,n)=>{const r=n(76445);t.getComponent=()=>new r.Component({inPorts:{number:{datatype:"number",required:!0,control:!0},in:{datatype:"bang",required:!0}},outPorts:{out:{datatype:"number",required:!0}}}).process(((e,t)=>{if(!e.hasData("in","number"))return;e.getData("in");const n=e.getData("number");t.sendDone({out:n})}))},65904:(e,t,n)=>{const r=n(76445);t.getComponent=()=>new r.Component({icon:"plus",inPorts:{minuend:{datatype:"all",required:!0},subtrahend:{datatype:"all",required:!0,control:!0}},outPorts:{difference:{datatype:"all"}}}).process(((e,t)=>{if(!e.hasData("minuend","subtrahend"))return;const[n,r]=e.getData("minuend","subtrahend");t.sendDone(n-r)}))},11953:(e,t,n)=>{const r=n(76445);t.getComponent=function(){const e=new r.Component;return e.description="call a method on an object",e.icon="gear",e.inPorts=new r.InPorts({in:{datatype:"object",description:"Object on which a method will be called",required:!0},method:{datatype:"string",description:"Name of the method to call",required:!0,control:!0},arguments:{datatype:"all",description:"Arguments given to the method (one argument per IP)"}}),e.outPorts=new r.OutPorts({out:{datatype:"all",description:"Value returned by the method call",required:!0},error:{datatype:"object"}}),e.process(((e,t)=>{if(!e.hasData("method","in"))return;if(e.attached("arguments").length>0&&!e.hasData("arguments"))return;let n=[];const r=e.getStream("arguments").filter((e=>"data"===e.type&&null!=e.data)).map((e=>e.data));n=n.concat(r);const o=e.getData("in"),a=e.getData("method");o[a]?t.sendDone({out:o[a].apply(o,n)}):t.sendDone(new Error(`Method '${a}' not available`))}))}},18057:(e,t,n)=>{const r=n(76445),o=n(39832);t.getComponent=function(){const e=new r.Component;return e.description="Compare an object value extracted with a JSONPath expression",e.icon="check",e.inPorts.add("in",{datatype:"object",description:"Object to query",required:!0}),e.inPorts.add("path",{datatype:"string",description:"JSONPath expression",required:!0,control:!0}),e.inPorts.add("comparison",{datatype:"number",description:"Value to compare against",required:!0,control:!0}),e.inPorts.add("operator",{datatype:"string",description:"Comparison operator",control:!0,default:"==",values:["==","!=",">","<",">=","<="]}),e.outPorts.add("pass",{datatype:"object",description:"Object that passed the comparison"}),e.outPorts.add("fail",{datatype:"object",description:"Object that failed the comparison"}),e.outPorts.add("error",{datatype:"object"}),e.process(((e,t)=>{if(!e.hasData("in","path","comparison"))return;let n="==";if(e.attached("operator").length>0){if(!e.hasData("operator"))return;n=e.getData("operator")}const[r,a,i]=e.getData("in","path","comparison");let s;try{s=o.value(r,a)}catch(e){return void t.done(e)}let c=!1;switch(n){case"==":c=s==i;break;case"!=":c=s!=i;break;case">":c=s>i;break;case"<":c=s<i;break;case">=":c=s>=i;break;case"<=":c=s<=i;break;default:return void t.done(new Error(`Unknown operator ${n}`))}c?t.sendDone({pass:r}):t.sendDone({fail:r})}))}},64694:(e,t,n)=>{const r=n(76445);t.getComponent=function(){const e=new r.Component({description:"Create a new Date object from string",icon:"clock-o"});return e.inPorts=new r.InPorts({in:{datatype:"string",description:"A string representation of a date in RFC2822/IETF/ISO8601 format"}}),e.outPorts=new r.OutPorts({out:{datatype:"object",description:"A new Date object"}}),e.process(((e,t)=>{let n;if(!e.has("in"))return;const r=e.getData("in");n="now"===r||null===r||!0===r?new Date:new Date(r),t.sendDone({out:n})}))}},51251:(e,t,n)=>{const r=n(76445);t.getComponent=function(){const e=new r.Component({inPorts:{start:{datatype:"string"}},outPorts:{out:{datatype:"object"}}});return e.icon="bug",e.description="Create an Error object",e.forwardBrackets={start:["out"]},e.process(((e,t)=>{let n;const r=e.getData("start");"string"==typeof r?n=new Error(r):(n=new Error("Error"),n.context=r),t.sendDone({out:n})}))}},62862:(e,t,n)=>{const r=n(76445);t.getComponent=function(){const e=new r.Component({description:"Create an empty object"});return e.inPorts=new r.InPorts({start:{datatype:"bang",description:"Signal to create a new object"}}),e.outPorts=new r.OutPorts({out:{datatype:"object",description:"A new empty object"}}),e.forwardBrackets={start:["out"]},e.process(((e,t)=>{e.hasData("start")&&(e.getData("start"),t.sendDone({out:{}}))}))}},37517:(e,t,n)=>{const r=n(76445);t.getComponent=function(){const e=new r.Component;return e.inPorts=new r.InPorts({property:{datatype:"all",required:!0,control:!0,description:"property to duplicate"},separator:{datatype:"string",default:"/",control:!0,description:"separator to use to join property"},in:{datatype:"object",description:"object to duplicate property on",required:!0}}),e.outPorts=new r.OutPorts({out:{datatype:"object"}}),e.process(((e,t)=>{if(!e.hasData("property","separator","in"))return;const[n,r,o]=Array.from(e.getData("property","separator","in")),a={},i=null!=r?r:"/";if(n){if("object"==typeof n)return void t.done(new Error("Property name cannot be an object"));const e=n.split("=");e.length>2?a[e.pop()]=e:a[e[1]]=e[0]}o&&(Object.keys(a).forEach((e=>{const t=a[e];if("string"==typeof t)return void(o[e]=o[t]);const n=[];t.forEach((e=>{n.push(o[e])})),o[e]=n.join(i)})),t.sendDone(o))}))}},97869:(e,t,n)=>{const r=n(76445),o=function(e,t,n){const r=e;return Object.keys(t).forEach((e=>{const n=t[e];r[e]=n})),null!=n&&Object.keys(n).forEach((e=>{const t=n[e];r[e]=t})),r};t.getComponent=function(){const e=new r.Component({description:"Extend an incoming object to some predefined objects, optionally by a certain property"});return e.inPorts=new r.InPorts({in:{datatype:"object",description:"Object to extend",required:!0},base:{datatype:"object",description:"Objects to extend with (one object per IP)",required:!0},key:{datatype:"string",description:"Property name to extend with",default:!1,control:!0},reverse:{datatype:"boolean",description:'A string equal "true" if you want to reverse the order of extension algorithm',default:!1,control:!0}}),e.outPorts=new r.OutPorts({out:{datatype:"object",description:'The object received on port "in" extended',required:!0}}),e.process(((e,t)=>{if(!e.hasData("in"))return;if(!e.has("base"))return;if(e.attached("key").length>0&&!e.hasData("key"))return;if(e.attached("reverse").length>0&&!e.hasData("reverse"))return;let n=!1,r=e.getData("key");const a=e.getStream("base").filter((e=>"data"===e.type)).map((e=>e.data)),i=e.getData("in");void 0===r&&(r=null),n="true"===String(e.getData("reverse"));let s={};a.forEach((e=>{(null==r||null!=i[r]&&i[r]===e[r])&&(s=o(s,e))})),n?t.sendDone(o({},i,s)):t.sendDone(o(s,i))}))}},11618:(e,t,n)=>{const r=n(76445);t.getComponent=function(){const e=new r.Component({description:"Given a key, return only the value matching that key in the incoming object"});return e.inPorts=new r.InPorts({in:{datatype:"object",description:"An object to extract property from",required:!0},key:{datatype:"string",description:"Property names to extract (one property per IP)",required:!0,control:!0}}),e.outPorts=new r.OutPorts({out:{datatype:"all",description:"Values of the property extracted (each value sent as a separate IP)"}}),e.process(((e,t)=>{if(!e.has("in"))return;if(!e.hasStream("key"))return;const n=e.getStream("key").filter((e=>"data"===e.type)).map((e=>e.data));let r=e.getData("in");n.forEach((e=>{r=r[e],t.send({out:r})})),t.done()}))}},41112:(e,t,n)=>{const r=n(76445),{deepCopy:o}=n(76414);t.getComponent=function(){const e=new r.Component;return e.icon="filter",e.description="Filter out some properties by matching RegExps against the keys of incoming objects",e.inPorts=new r.InPorts({in:{datatype:"object",description:"Object to filter properties from",required:!0},key:{datatype:"string",description:"Keys to filter (one key per IP)",required:!0},recurse:{datatype:"boolean",description:'"true" to recurse on the object\'s values',control:!0,default:!1},keep:{datatype:"boolean",description:'"true" if matching properties must be kept, otherwise removed',control:!0,default:!1},accept:{datatype:"all"},regexp:{datatype:"all"}}),e.outPorts=new r.OutPorts({out:{datatype:"object"}}),e.filter=(t,n,r,o,a)=>(()=>{const i=[];return Object.keys(t).forEach((s=>{const c=t[s];let u=!1;n.forEach((e=>{const n=s.match(e);(!o&&n||o&&!n)&&(delete t[s],u=!0)})),!u&&r&&"object"==typeof c?i.push(e.filter(c,n,r,o,a)):i.push(void 0)})),i})(),e.keys={},e.process(((t,n)=>{let r,a;if(t.hasStream("key"))return e.keys[t.scope]=t.getStream("key").filter((e=>"data"===e.type&&null!=e.data)).map((e=>new RegExp(e.data,"g"))),void n.done();if(!(t.hasData("in")&&(null!=e.keys[t.scope]?e.keys[t.scope].length:void 0)>0))return;if(t.attached("recurse").length>0&&!t.hasData("recurse"))return;if(t.attached("keep").length>0&&!t.hasData("keep"))return;let i=!1;(t.has("accept")||t.has("regexp"))&&(i=!0,r=t.get("accept").data,a=t.get("regexp").data);const s=e.keys[t.scope];let c=t.getData("in");const u=t.getData("recurse");let l=t.getData("keep");if(null!=l&&"object"==typeof l&&(l=l.pop()),!i){if("object"==typeof c)return c=o(c),e.filter(c,s,u,l,t),void n.sendDone(c);n.done()}const d={};let p=!1;Object.keys(c).forEach((e=>{const t=c[e];if(-1!==r.indexOf(e))return d[e]=t,void(p=!0);a.forEach((n=>{new RegExp(n).exec(e)&&(d[e]=t,p=!0)}))})),p?n.sendDone(d):n.done()}))}},85209:(__unused_webpack_module,exports,__webpack_require__)=>{const noflo=__webpack_require__(76445);exports.getComponent=function(){const c=new noflo.Component({icon:"filter",description:"Filter out some values"});return c.inPorts=new noflo.InPorts({accept:{datatype:"all",description:"property value to accept, can be more than one per object"},regexp:{datatype:"string",description:"regex properties to accept"},in:{datatype:"object",description:"Object to filter properties from",required:!0}}),c.outPorts=new noflo.OutPorts({out:{datatype:"object",description:"Object including the filtered properties"},missed:{datatype:"object",description:"Object received as input if no key have been matched"}}),c.forwardBrackets={},c.process(((input,output)=>{let mapParts;if(!input.hasStream("in"))return;if(input.attached("accept").length>0&&!input.hasStream("accept"))return;if(input.attached("regexp").length>0&&!input.hasData("regexp"))return;const stream=input.getStream("in").filter((e=>"data"===e.type)).map((e=>e.data)),regexps={};let accepts={};if(input.has("accept")){const acceptData=input.getStream("accept").filter((e=>"data"===e.type)).map((e=>e.data));for(let index=0;index<acceptData.length;index+=1){const accept=acceptData[index];if("object"==typeof accept){accepts=accept;break}mapParts=accept.split("=");try{accepts[mapParts[0]]=eval(mapParts[1])}catch(e){if(!(e instanceof ReferenceError))return void output.sendDone(e);accepts[mapParts[0]]=mapParts[1]}}}if(input.has("regexp")){const e=input.getStream("regexp").filter((e=>"data"===e.type)).map((e=>e.data));e.length>0&&(mapParts=e[0].split("="),regexps[mapParts[0]]=mapParts[1])}stream.forEach((e=>{if(Object.keys(accepts).length>0||Object.keys(regexps).length>0){const t={};let n=!1;Object.keys(e).forEach((r=>{const o=e[r];if(accepts[r]){if(accepts[r]!==o)return;n=!0}if(regexps[r]){if(!new RegExp(regexps[r]).exec(o))return;n=!0}t[r]=o})),n?output.send({out:t}):output.send({missed:e})}else output.send({out:e})})),output.done()}))}},7083:(e,t,n)=>{const r=n(76445);function o(e){const t=[];return Object.keys(e).forEach((n=>{const r=e[n];"object"!=typeof r?t.push({flattenedKeys:[n],value:r}):o(r).forEach((e=>{e.flattenedKeys.push(n),t.push(e)}))})),t}t.getComponent=function(){const e=new r.Component;return e.inPorts=new r.InPorts({map:{datatype:"all",description:"map to use to flatten the object",control:!0},in:{datatype:"object",description:"Object to flatten",required:!0}}),e.outPorts=new r.OutPorts({out:{datatype:"array"}}),e.forwardBrackets={},e.process(((e,t)=>{if(!e.hasData("in"))return;if(e.attached("map").length>0&&!e.hasData("map"))return;let n={};if(e.hasData("map")){const t=e.getData("map");if(null!=t)if("object"==typeof t)n=t;else{const e=t.split("=");n[e[0]]=e[1]}}const a=e.getData("in");t.send(new r.IP("openBracket")),o(a).forEach((e=>{t.send(function(e,t){const n=e;return Object.keys(t).forEach((r=>{const o=t[r];n[o]=e.flattenedKeys[r]})),delete n.flattenedKeys,n}(e,n))})),t.send(new r.IP("closeBracket")),t.done()}))}},68675:(e,t,n)=>{const r=n(76445);t.getComponent=function(){const e=new r.Component;return e.icon="clock-o",e.description="Send out the current timestamp",e.inPorts=new r.InPorts({in:{datatype:"bang",description:"Causes the current timestamp to be sent out"}}),e.outPorts=new r.OutPorts({out:{datatype:"int"}}),e.process(((e,t)=>{e.hasData("in")&&(e.getData("in"),t.sendDone({out:Date.now()}))}))}},63947:(e,t,n)=>{const r=n(76445);t.getComponent=function(){const e=new r.Component;return e.icon="indent",e.inPorts=new r.InPorts({in:{datatype:"object",description:"Object to get keys from",required:!0},key:{datatype:"string",description:"Keys to extract from the object (one key per IP)",required:!0},sendgroup:{datatype:"boolean",description:"true to send keys as groups around value IPs, false otherwise",control:!0,default:!1}}),e.outPorts=new r.OutPorts({out:{datatype:"all",description:"Values extracts from the input object given the input keys (one value per IP, potentially grouped using the key names)"},object:{datatype:"object",description:"Object forwarded from input if at least one property matches the input keys"},missed:{datatype:"object",description:"Object forwarded from input if no property matches the input keys"}}),e.process(((e,t)=>{if(!e.hasData("in"))return;if(!e.hasStream("key"))return;if(e.attached("sendgroup").length>0&&!e.hasData("sendgroup"))return;const n=e.getStream("key").filter((e=>"data"===e.type)).map((e=>e.data)),o=e.getData("in");let a=e.getData("sendgroup");a="true"===a||!0===a,"object"==typeof o?null!==o?(n.forEach((e=>{void 0===o[e]&&(a&&t.send({missed:new r.IP("openBracket",e)}),t.send({missed:new r.IP("data",o)}),a&&t.send({missed:new r.IP("closeBracket",e)})),a&&t.send({out:new r.IP("openBracket",e)}),t.send({out:new r.IP("data",o[e])}),a&&t.send({out:new r.IP("closeBracket",e)})})),t.send({object:new r.IP("data",o)}),t.done()):t.sendDone(new Error("Data is NULL")):t.sendDone(new Error("Data is not an object"))}))}},66698:(e,t,n)=>{const r=n(76445),o=n(39832);t.getComponent=function(){const e=new r.Component;return e.description="Query an object with a JSONPath expression",e.icon="indent",e.inPorts.add("in",{datatype:"object",description:"Object to query",required:!0}),e.inPorts.add("path",{datatype:"string",description:"JSONPath expression",required:!0,control:!0}),e.inPorts.add("multiple",{datatype:"boolean",description:"Whether to send all matching values as an array",required:!1,control:!0,default:!1}),e.outPorts.add("out",{datatype:"all",description:"Result of the JSONPath query"}),e.outPorts.add("object",{datatype:"all",description:"The original input object"}),e.outPorts.add("error",{datatype:"object"}),e.process(((e,t)=>{if(!e.hasData("in","path"))return;let n=!1;if(e.attached("multiple").length>0){if(!e.hasData("multiple"))return;n=e.getData("multiple")}const[r,a]=e.getData("in","path");let i;const s=n?"query":"value";try{i=o[s](r,a)}catch(e){return void t.done(e)}t.sendDone({out:i,object:r})}))}},59660:(e,t,n)=>{const r=n(76445);t.getComponent=function(){const e=new r.Component;return e.description="Select a random member from an array",e.icon="list",e.inPorts.add("in",{datatype:"array",description:"Array to pick a member from"}),e.inPorts.add("random",{datatype:"number",description:"Random number to use"}),e.outPorts.add("out",{datatype:"all"}),e.outPorts.add("error",{datatype:"object"}),e.process(((e,t)=>{if(!e.hasData("in","random"))return;const[n,r]=Array.from(e.getData("in","random"));if(r<0||r>1)return void t.done(new Error("Random number has to be between 0 and 1"));const o=n[Math.min(n.length-1,Math.floor(r*n.length))];t.sendDone({out:o})}))}},38989:(e,t,n)=>{const r=n(76445);t.getComponent=function(){const e=new r.Component;return e.description="Insert a property into incoming objects.",e.inPorts=new r.InPorts({in:{datatype:"all",description:"Object to insert property into",required:!0},property:{datatype:"all",description:"Property to insert (property sent as group, value sent as IP)",required:!0}}),e.outPorts=new r.OutPorts({out:{datatype:"object",description:"Object received as input with added properties"}}),e.forwardGroups={},e.process(((e,t)=>{if(!e.hasData("in"))return;if(!e.hasStream("property"))return;const n=e.getData("in"),r=e.getStream("property");let o=null,a=null;r.forEach((e=>{"openBracket"===e.type&&(a=e.data),"data"===e.type&&(o=e.data)}));let i={};n instanceof Object&&(i=n),i[a]=o,t.sendDone({out:i})}))}},20394:(e,t,n)=>{const r=n(76445);t.getComponent=function(){const e=new r.Component;return e.description="Join all values of a passed packet together as a string with a predefined delimiter",e.inPorts=new r.InPorts({in:{datatype:"object",description:"Object to join values from",required:!0},delimiter:{datatype:"string",description:"Delimiter to join values",control:!0,default:","}}),e.outPorts=new r.OutPorts({out:{datatype:"string",description:"String conversion of all values joined with delimiter into one string",required:!0},error:{datatype:"object"}}),e.process(((e,t)=>{if(!e.hasData("in"))return;if(e.attached("delimiter").length>0&&!e.hasData("delimiter"))return;const n=e.getData("delimiter"),r=e.getData("in");if(null==r||"object"!=typeof r)t.sendDone({error:new Error(typeof r+" is not a valid object to join")});else{const e=Object.keys(r),{length:o}=e,a=Array(o);for(let t=0,n=o-1,i=n>=0;i?t<=n:t>=n;i?t+=1:t-=1)a[t]=r[e[t]];t.sendDone({out:a.join(n)})}}))}},90073:(e,t,n)=>{const r=n(76445);t.getComponent=function(){const e=new r.Component;return e.description="gets only the keys of an object and forward them as an array",e.inPorts=new r.InPorts({in:{datatype:"object",description:"Object to get keys from"}}),e.outPorts=new r.OutPorts({out:{datatype:"string",description:"Keys from the incoming object (one per IP)"}}),e.process(((e,t)=>{if(!e.hasData("in"))return;const n=e.getData("in");Object.keys(n).forEach((e=>{t.send({out:new r.IP("data",e)})})),t.done()}))}},77714:(e,t,n)=>{const r=n(76445);t.getComponent=function(){const e=new r.Component;return e.inPorts=new r.InPorts({map:{datatype:"all",description:"Map to use to map property on object"},regexp:{datatype:"string",description:"Regex to use to map property on object"},in:{datatype:"object",description:"Object to map property on",required:!0}}),e.outPorts=new r.OutPorts({out:{datatype:"object",required:!0}}),e.process(((e,t)=>{if(!e.hasData("in"))return;if(e.attached("regexp").length>0&&!e.hasData("regexp"))return;if(e.attached("map").length>0&&!e.hasData("map"))return;const n=e.getData("in"),r={};if(e.hasData("regexp")){const t=e.getData("regexp").split("=");r[t[0]]=t[1]}let o={};if(e.hasData("map")&&(o=e.getData("map"),"object"!=typeof o)){const e=o.split("=");o[e[0]]=e[1]}const a={};Object.keys(n).forEach((e=>{const t=n[e];let i=e;e in o&&(i=o[e]),Object.keys(r).forEach((e=>{const t=r[e],n=new RegExp(e);n.exec(i)&&(i=i.replace(n,t))})),i in a?Array.isArray(a[i])?a[i].push(t):a[i]=[a[i],t]:a[i]=t})),t.sendDone({out:a})}))}},37946:(e,t,n)=>{const r=n(76445);t.getComponent=function(){const e=new r.Component;return e.inPorts=new r.InPorts({map:{datatype:"all",description:"Map to use to map property value on object"},regexp:{datatype:"string",description:"Regex to use to map property value on object"},in:{datatype:"object",description:"Object to map property value on",required:!0}}),e.outPorts=new r.OutPorts({out:{datatype:"object",required:!0}}),e.process(((t,n)=>{if(!t.hasData("in"))return;if(t.attached("regexp").length>0&&!t.hasData("regexp"))return;if(t.attached("map").length>0&&!t.hasData("map"))return;const r=t.getData("in");let o={};const a={};let i={};const s={},c=t.hasData("map")?t.getData("map"):{};if("object"!=typeof c){const e=c.split("=");3===e.length?a[e[0]]={from:e[1],to:e[2]}:o[e[0]]=e[1]}else o=c;const u=t.hasData("regexp")?t.getData("regexp"):{};if("object"!=typeof u){const e=u.split("=");3===e.length&&(i[e[0]]={from:e[1],to:e[2]}),s[e[0]]=e[1]}Object.keys(r).forEach((t=>{const n=r[t];a[t]&&a[t].from===n&&(r[t]=a[t].to),o[n]&&(r[t]=o[n]),i[t]&&(i=new RegExp(i[t].from),i.exec(n)&&(r[t]=n.replace(i,e.regexp[t].to))),Object.keys(s).forEach((e=>{const o=s[e];i=new RegExp(e),i.exec(n)&&(r[t]=n.replace(i,o))}))})),n.sendDone({out:r})}))}},59775:(e,t,n)=>{const r=n(76445);function o(e,t){const n=e;return Object.keys(t).forEach((r=>{const a=t[r],i=e[r];if(null!=i)switch(toString.call(i)){case"[object Array]":n[r].push.apply(e[r],a);break;case"[object Object]":n[r]=o(i,a);break;default:n[r]=a}else n[r]=a})),n}t.getComponent=function(){const e=new r.Component;return e.description="merges all incoming objects into one",e.inPorts=new r.InPorts({in:{datatype:"object",description:"Objects to merge (one per IP)"}}),e.outPorts=new r.OutPorts({out:{datatype:"object",description:"A new object containing the merge of input objects"}}),e.forwardBrackets={},e.process(((e,t)=>{if(!e.hasStream("in"))return;const n=e.getStream("in").filter((e=>"data"===e.type)).map((e=>e.data));t.sendDone(n.reduce(o,{}))}))}},70311:(e,t,n)=>{const r=n(76445);function o(e){if(null===e||"object"!=typeof e)return e;const t=new e.constructor;return Object.keys(e).forEach((n=>{t[n]=o(e[n])})),t}t.getComponent=function(){const e=new r.Component;return e.icon="ban",e.inPorts=new r.InPorts({in:{datatype:"object",description:"Object to remove properties from",required:!0},property:{datatype:"string",description:"Properties to remove (one per IP)",required:!0}}),e.outPorts=new r.OutPorts({out:{datatype:"object",description:"Object forwarded from input"}}),e.process(((e,t)=>{let n;if(!e.hasData("in"))return;if(!e.hasStream("property"))return;const r=e.get("in"),{data:a}=r,i=e.getStream("property").filter((e=>"data"===e.type)).map((e=>e.data));n=r.clonable?o(a):a,i.forEach((e=>{delete n[e]})),t.sendDone({out:n})}))}},84694:(e,t,n)=>{const r=n(76445);t.getComponent=function(){const e=new r.Component;return e.description="given a regexp matching any key of an incoming object as a data IP, replace the key with the provided string",e.inPorts=new r.InPorts({in:{datatype:"object",description:"Object to replace a key from"},pattern:{datatype:"all",description:"pattern to use to replace key",control:!0}}),e.outPorts=new r.OutPorts({out:{datatype:"object",description:"Object forwared from input"}}),e.process(((e,t)=>{if(!e.hasData("in","pattern"))return;const n=e.getData("in"),r=e.getData("pattern");let o=null;Object.keys(n).forEach((e=>{const t=n[e];Object.keys(r).forEach((a=>{const i=r[a],s=new RegExp(a);null!=e.match(s)&&(o=e.replace(s,i),n[o]=t,delete n[e])}))})),t.sendDone({out:n})}))}},19116:(e,t,n)=>{const r=n(76445);t.getComponent=function(){const e=new r.Component;return e.inPorts=new r.InPorts({property:{datatype:"all",description:"All except for object",required:!0},in:{datatype:"object",description:"Object to set property on",required:!0}}),e.outPorts=new r.OutPorts({out:{datatype:"object",description:"Object forwared from input"}}),e.process(((e,t)=>{if(!e.hasData("in","property"))return;const n=e.getData("property"),r=e.getData("in"),o={},a=n.split("=");o[a[0]]=a[1],Object.keys(o).forEach((e=>{const t=o[e];r[e]=t})),t.sendDone(r)}))}},23057:(e,t,n)=>{const r=n(76445);t.getComponent=function(){const e=new r.Component;return e.inPorts=new r.InPorts({property:{datatype:"string",description:"Property name to set value on",required:!0},value:{datatype:"all",description:"Property value to set",required:!0},in:{datatype:"object",description:"Object to set property value on",required:!0}}),e.outPorts=new r.OutPorts({out:{datatype:"object",description:"Object forwarded from the input"}}),e.process(((e,t)=>{if(!e.hasData("property","value","in"))return;const n=e.getData("in"),r=e.getData("property"),o=e.getData("value");n[r]=o,t.sendDone({out:n})}))}},70801:(e,t,n)=>{const r=n(76445);let o;o=function(e){return Array.isArray(e)?1===e.length?e[0]:e:"object"!=typeof e?e:function(e){const t=Object.keys(e);if(1===t.length&&"$data"===t[0])return o(e.$data);const n={};return Object.keys(e).forEach((t=>{const r=e[t];n[t]=o(r)})),n}(e)},t.getComponent=function(){const e=new r.Component;return e.description="Simplify an objectgi",e.inPorts=new r.InPorts({in:{datatype:"all",description:"Object to simplify"}}),e.outPorts=new r.OutPorts({out:{datatype:"all",description:"Simplified object"}}),e.process(((e,t)=>{const n=e.getData("in");t.sendDone({out:o(n)})}))}},65288:(e,t,n)=>{const r=n(76445);t.getComponent=function(){const e=new r.Component;return e.description="gets the size of an object and sends that out as a number",e.inPorts=new r.InPorts({in:{datatype:"object",description:"Object to measure the size of"}}),e.outPorts=new r.OutPorts({out:{datatype:"int",description:"Size of the input object"}}),e.process(((e,t)=>{let n;const r=e.getData("in");n="object"==typeof r?Object.keys(r).length:r.length,t.sendDone({out:n})}))}},73173:(e,t,n)=>{const r=n(76445);t.getComponent=function(){const e=new r.Component;return e.inPorts=new r.InPorts({in:{datatype:"array",description:"Array to slice",required:!0},begin:{datatype:"number",description:"Beginning of the slicing",required:!0},end:{datatype:"number",description:"End of the slicing"}}),e.outPorts=new r.OutPorts({out:{datatype:"array",description:"Result of the slice operation",required:!0},error:{datatype:"object"}}),e.process(((e,t)=>{let n;if(!e.hasData("in","begin"))return;if(e.attached("end").length>0&&!e.hasData("end"))return;const r=e.getData("in"),o=e.getData("begin");if(null!=r?r.slice:void 0){if(e.hasData("end")){const t=e.getData("end");n=r.slice(o,t)}else n=r.slice(o);t.sendDone({out:n})}else t.done(new Error(`Data ${typeof r} cannot be sliced`))}))}},88510:(e,t,n)=>{const r=n(76445);t.getComponent=function(){const e=new r.Component;return e.description="splits a single array into multiple IPs, wrapped with the key as the group",e.inPorts=new r.InPorts({in:{datatype:"object",description:"Array to split from"}}),e.outPorts=new r.OutPorts({out:{datatype:"all",description:"Values from the split array"}}),e.process(((e,t)=>{const n=e.getData("in");if("object"==typeof n&&!Array.isArray(n))return Object.keys(n).forEach((e=>{const o=n[e];t.send(new r.IP("openBracket",e)),t.send(new r.IP("data",o)),t.send(new r.IP("closeBracket",e))})),void t.done();t.send(new r.IP("openBracket")),n.forEach((e=>{t.send({out:e})})),t.send(new r.IP("closeBracket")),t.done()}))}},16674:(e,t,n)=>{const r=n(76445);t.getComponent=function(){const e=new r.Component;return e.description="splits a single object into multiple IPs, wrapped with the key as the group",e.inPorts=new r.InPorts({in:{datatype:"object",description:"Object to split key/values from"}}),e.outPorts=new r.OutPorts({out:{datatype:"all",description:"Values from the input object (one value per IP and its key sent as group)"}}),e.process(((e,t)=>{const n=e.getData("in");Object.keys(n).forEach((e=>{const o=n[e];t.send(new r.IP("openBracket",e)),t.send(new r.IP("data",o)),t.send(new r.IP("closeBracket",e))})),t.done()}))}},93810:(e,t,n)=>{const r=n(76445);t.getComponent=function(){const e=new r.Component;return e.icon="empire",e.inPorts=new r.InPorts({in:{datatype:"array",description:"Array to get unique values from"}}),e.outPorts=new r.OutPorts({out:{datatype:"array",description:"Array containing only unique values from the input array"}}),e.process(((e,t)=>{const n=e.getData("in"),r={},o=[];n.forEach((e=>{r[e]=e})),Object.keys(r).forEach((e=>{o.push(e)})),t.sendDone(o)}))}},75756:(e,t,n)=>{const r=n(76445);t.getComponent=function(){const e=new r.Component;return e.description="gets only the values of an object and forward them as an array",e.inPorts=new r.InPorts({in:{datatype:"all",description:"Object to extract values from"}}),e.outPorts=new r.OutPorts({out:{datatype:"all",description:"Values extracted from the input object (one value per IP)"}}),e.process(((e,t)=>{const n=e.getData("in"),o=Object.keys(n),a=Array(o.length);for(let e=0;e<o.length;e+=1){const t=o[e];a[e]=n[t]}t.send(new r.IP("openBracket")),a.forEach((e=>{t.send(new r.IP("data",e))})),t.send(new r.IP("closeBracket")),t.done()}))}},7534:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component;return e.description='Switch output to new connection every time "next" is sent',e.inPorts.add("in",{datatype:"all"}),e.inPorts.add("next",{datatype:"bang"}),e.outPorts.add("out",{datatype:"all",addressable:!0}),e.current={},e.tearDown=function(t){return e.current={},t()},e.forwardBrackets={},e.process(((t,n)=>{if(t.hasData("next"))return t.getData("next"),e.current[t.scope]||(e.current[t.scope]=0),e.current[t.scope]+=1,e.current[t.scope]>=e.outPorts.out.listAttached().length&&(e.current[t.scope]=0),void n.done();if(!t.has("in"))return;e.current[t.scope]||(e.current[t.scope]=0);const r=t.get("in"),o=e.outPorts.out.listAttached();r.index=o[e.current[t.scope]],n.sendDone({out:r})}))}},11503:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component;e.description="routes IPs based on groups, which are matched and routed but not removed when forwarding",e.inPorts.add("route",{datatype:"array",description:"Array of route segments"}),e.inPorts.add("routes",{datatype:"string",description:"Comma-separated list of route segments"}),e.inPorts.add("reset",{datatype:"bang",description:"Remove configured routes"}),e.inPorts.add("in",{datatype:"all",description:"Data to be routed by its groups"}),e.outPorts.add("out",{datatype:"all",addressable:!0}),e.outPorts.add("route",{datatype:"string"}),e.outPorts.add("missed",{datatype:"all"}),e.outPorts.add("error",{datatype:"object"}),e.scopes={};const t=function(t){return e.scopes[t]||(e.scopes[t]={routes:[],breadcrumbs:[],match:{index:null,route:null,level:null}}),e.scopes[t]};return e.tearDown=function(t){return e.scopes={},t()},e.forwardBrackets={},e.process(((n,r)=>{let o,a;if(n.hasData("reset"))return n.getData("reset"),delete e.scopes[n.scope],void r.done();if(n.hasData("route"))return a=t(n.scope),o=n.getData("route"),Array.isArray(o)?(a.routes.push(o.map((e=>new RegExp(e)))),void r.done()):"string"==typeof o?(a.routes.push([new RegExp(o)]),void r.done()):void r.done(new Error("Route must be array of segments"));if(n.hasData("routes"))return a=t(n.scope),o=n.getData("routes"),"string"!=typeof o&&r.done(new Error("Routes list must be a string")),a.routes=o.split(",").map((e=>e.split(":").map((e=>new RegExp(e))))),void r.done();if(!n.has("in"))return;a=t(n.scope);const i=n.get("in");switch(i.type){case"openBracket":{const e={group:i.data};return a.breadcrumbs.push(e),null!=a.match.level&&a.match.level<a.breadcrumbs.length?(i.index=a.match.index,void r.sendDone({out:i})):(a.match=function(e,t){for(let n=0;n<t.length;n+=1){const r=t[n];let o=!0;if(r.length>e.length)o=!1;else{for(let t=0;t<e.length;t+=1)if(!e[t].match(r[t])){o=!1;break}if(o)return{index:n,route:r,level:e.length-1}}}return{}}(a.breadcrumbs.map((e=>e.group)),a.routes),null!=a.match.route?void r.sendDone({route:a.match.route}):(e.missed=!0,void r.sendDone({missed:i})))}case"closeBracket":{const e=a.breadcrumbs.pop();return a.match.level<a.breadcrumbs.length?(i.index=a.match.index,void r.sendDone({out:i})):a.match.level===a.breadcrumbs.length?(a.match={},void r.done()):e.missed?void r.sendDone({missed:i}):void r.done()}default:if(null!=a.match.route)return i.index=a.match.index,void r.sendDone({out:i});r.sendDone({missed:i})}}))}},88256:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component;return e.description="Releases a stream to a specified index on prev/next/index",e.inPorts.add("in",{datatype:"all"}),e.inPorts.add("index",{datatype:"int"}),e.inPorts.add("prev",{datatype:"bang"}),e.inPorts.add("next",{datatype:"bang"}),e.outPorts.add("out",{datatype:"all",addressable:!0}),e.current={},e.tearDown=function(t){return e.current={},t()},e.forwardBrackets={},e.process(((t,n)=>{if(!t.hasStream("in"))return;e.current[t.scope]||(e.current[t.scope]=0);const r=function(){const r=t.getStream("in"),o=e.outPorts.out.listAttached()[e.current[t.scope]];return(()=>{const e=[];return r.forEach((t=>{const r=t;r.index=o,e.push(n.send({out:r}))})),e})()};return t.hasData("next")?(t.getData("next"),e.current[t.scope]+=1,e.current[t.scope]>=e.outPorts.out.listAttached().length&&(e.current[t.scope]=0),r(),void n.done()):t.hasData("prev")?(t.getData("prev"),e.current[t.scope]-=1,e.current[t.scope]<0&&(e.current[t.scope]=e.outPorts.out.listAttached().length-1),r(),void n.done()):void(t.hasData("index")&&(e.current[t.scope]=parseInt(t.getData("index"),10),r(),n.done()))}))}},13575:(e,t,n)=>{const r=n(76445);t.getComponent=function(){const e=new r.Component;return e.description="Route IPs based on RegExp match on the IP content (strings only). The position of the RegExp determines which port to forward to.",e.inPorts.add("in",{datatype:"string"}),e.inPorts.add("route",{datatype:"array",control:!0}),e.outPorts.add("out",{datatype:"string",addressable:!0}),e.outPorts.add("missed",{datatype:"all"}),e.outPorts.add("error",{datatype:"object"}),e.forwardBrackets={in:["out","missed"]},e.process(((e,t)=>{if(!e.hasData("in","route"))return;const n=e.getData("route");if(!Array.isArray(n))return void t.done(new Error("Route must be an array"));const o=[];let a;if(n.forEach((e=>{"string"!=typeof e?e instanceof RegExp?o.push(e):a=new Error("Route array can only contain strings or RegExps"):o.push(new RegExp(e))})),a)return void t.done(a);const i=e.getData("in");if("string"!=typeof i)return void t.done(new Error("PacketRegexpRouter can only route strings"));const s=[];for(let e=0;e<o.length;e+=1){const t=o[e];i.match(t)&&s.push(e)}s.length?(s.forEach((e=>{t.send({out:new r.IP("data",i,{index:e})})})),t.done()):t.sendDone({missed:i})}))}},10680:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component;return e.description="Routes IPs based on position in an incoming IP stream",e.inPorts.add("in",{datatype:"all",addressable:!0}),e.outPorts.add("out",{datatype:"all",addressable:!0}),e.outPorts.add("missed",{datatype:"all"}),e.outPorts.add("error"),e.forwardBrackets={},e.process(((t,n)=>{const r=t.attached("in").filter((e=>t.hasStream(["in",e])));r.length&&(r.forEach((r=>{const o=t.getStream(["in",r]);"openBracket"===o[0].type&&null===o[0].data&&(o.shift(),o.pop());let a=0;const i=[];let s=!1;return(()=>{const t=[];return o.forEach((r=>{if("openBracket"===r.type&&(s&&!i.length&&(a+=1),i.push(r.data)),"closeBracket"===r.type&&i.pop(),-1===e.outPorts.out.listAttached().indexOf(a))return void n.send({missed:r});const o=r;if(o.index=a,n.send({out:o}),"data"===o.type){if(s&&i.length)return;a+=1,t.push(s=!0)}else t.push(void 0)})),t})()})),n.done())}))}},37062:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component;return e.description="Send each packet to one outport connection in sequence",e.inPorts.add("in",{datatype:"all"}),e.outPorts.add("out",{datatype:"all",addressable:!0}),e.current=0,e.tearDown=function(t){return e.current=0,t()},e.process(((t,n)=>{if(!t.hasData("in"))return;const o=new r.IP("data",t.getData("in")),a=e.outPorts.out.listAttached();o.index=a[e.current],n.send({out:o}),e.current+=1,e.current>=e.outPorts.out.listAttached().length&&(e.current=0),n.done()}))}},97116:(e,t,n)=>{t.ComponentLoader=n(51763),t.RemoteSubGraph=n(17381),t.connection=n(94044)},27848:(e,t,n)=>{"use strict";var r=n(34155);function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}t.log=function(){var e;return"object"===("undefined"==typeof console?"undefined":o(console))&&console.log&&(e=console).log.apply(e,arguments)},t.formatArgs=function(t){if(t[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+t[0]+(this.useColors?"%c ":" ")+"+"+e.exports.humanize(this.diff),this.useColors){var n="color: "+this.color;t.splice(1,0,n,"color: inherit");var r=0,o=0;t[0].replace(/%[a-zA-Z%]/g,(function(e){"%%"!==e&&(r++,"%c"===e&&(o=r))})),t.splice(o,0,n)}},t.save=function(e){try{e?t.storage.setItem("debug",e):t.storage.removeItem("debug")}catch(e){}},t.load=function(){var e;try{e=t.storage.getItem("debug")}catch(e){}return!e&&void 0!==r&&"env"in r&&(e=r.env.DEBUG),e},t.useColors=function(){return!("undefined"==typeof window||!window.process||"renderer"!==window.process.type&&!window.process.__nwjs)||("undefined"==typeof navigator||!navigator.userAgent||!navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))&&("undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/))},t.storage=function(){try{return localStorage}catch(e){}}(),t.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],e.exports=n(29127)(t),e.exports.formatters.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}}},29127:(e,t,n)=>{"use strict";e.exports=function(e){function t(e){for(var t=0,n=0;n<e.length;n++)t=(t<<5)-t+e.charCodeAt(n),t|=0;return r.colors[Math.abs(t)%r.colors.length]}function r(e){var n;function i(){if(i.enabled){for(var e=arguments.length,t=new Array(e),o=0;o<e;o++)t[o]=arguments[o];var a=i,s=Number(new Date),c=s-(n||s);a.diff=c,a.prev=n,a.curr=s,n=s,t[0]=r.coerce(t[0]),"string"!=typeof t[0]&&t.unshift("%O");var u=0;t[0]=t[0].replace(/%([a-zA-Z%])/g,(function(e,n){if("%%"===e)return e;u++;var o=r.formatters[n];if("function"==typeof o){var i=t[u];e=o.call(a,i),t.splice(u,1),u--}return e})),r.formatArgs.call(a,t);var l=a.log||r.log;l.apply(a,t)}}return i.namespace=e,i.enabled=r.enabled(e),i.useColors=r.useColors(),i.color=t(e),i.destroy=o,i.extend=a,"function"==typeof r.init&&r.init(i),r.instances.push(i),i}function o(){var e=r.instances.indexOf(this);return-1!==e&&(r.instances.splice(e,1),!0)}function a(e,t){return r(this.namespace+(void 0===t?":":t)+e)}return r.debug=r,r.default=r,r.coerce=function(e){return e instanceof Error?e.stack||e.message:e},r.disable=function(){r.enable("")},r.enable=function(e){var t;r.save(e),r.names=[],r.skips=[];var n=("string"==typeof e?e:"").split(/[\s,]+/),o=n.length;for(t=0;t<o;t++)n[t]&&("-"===(e=n[t].replace(/\*/g,".*?"))[0]?r.skips.push(new RegExp("^"+e.substr(1)+"$")):r.names.push(new RegExp("^"+e+"$")));for(t=0;t<r.instances.length;t++){var a=r.instances[t];a.enabled=r.enabled(a.namespace)}},r.enabled=function(e){if("*"===e[e.length-1])return!0;var t,n;for(t=0,n=r.skips.length;t<n;t++)if(r.skips[t].test(e))return!1;for(t=0,n=r.names.length;t<n;t++)if(r.names[t].test(e))return!0;return!1},r.humanize=n(57824),Object.keys(e).forEach((function(t){r[t]=e[t]})),r.instances=[],r.names=[],r.skips=[],r.formatters={},r.selectColor=t,r.enable(r.load()),r}},9980:(e,t)=>{"use strict";t.sendGraph=function(e,t,n,r){var o,a,i,s,c,u,l,d,p,h,f,g,m,v,y,b,w,_,x;if((null!=(m=e.properties.environment)?m.type:void 0)&&"all"!==(v=e.properties.environment.type)&&v!==t.definition.type)return n(new Error("Graph type "+e.properties.environment.type+" doesn't match runtime type "+t.definition.type));if(!t.canDo("protocol:graph"))return n(new Error("Runtime doesn't support graph protocol"));for(a=e.name||e.properties.id,t.sendGraph("clear",{id:a,name:e.name,main:r,library:e.properties.project,icon:e.properties.icon||"",description:e.properties.description||""}),i=0,l=(y=e.nodes).length;i<l;i++)h=y[i],t.sendGraph("addnode",{id:h.id,component:h.component,metadata:h.metadata,graph:a});for(c=0,d=(b=e.edges).length;c<d;c++)o=b[c],t.sendGraph("addedge",{src:{node:o.from.node,port:o.from.port},tgt:{node:o.to.node,port:o.to.port},metadata:o.metadata,graph:a});for(u=0,p=(w=e.initializers).length;u<p;u++)s=w[u],t.sendGraph("addinitial",{src:{data:s.from.data},tgt:{node:s.to.node,port:s.to.port},metadata:s.metadata,graph:a});if(e.inports)for(g in _=e.inports)f=_[g],t.sendGraph("addinport",{public:g,node:f.process,port:f.port,graph:a});if(e.outports)for(g in x=e.outports)f=x[g],t.sendGraph("addoutport",{public:g,node:f.process,port:f.port,graph:a});return n()}},45476:(e,t,n)=>{"use strict";var r,o,a,i,s=n(34155),c=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();i=function(){return!(void 0!==s&&s.execPath&&-1!==s.execPath.indexOf("node"))},r=n(17187).EventEmitter,i()||(a=n(27848)("fbp-protocol-client:platform"),o=function(e){function t(e,r){var o;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var i=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return o=n(45840).client,i.client=new o,i.connection=null,i.client.on("connectFailed",(function(e){return i.emit("error",e)})),i.client.on("connect",(function(e){return i.connection&&a("WARNING: multiple connections for one NodeWebSocketClient"),i.connection=e,e.on("error",(function(e){return i.connection=null,i.emit("error",e)})),e.on("close",(function(){return i.connection=null,i.emit("close")})),e.on("message",(function(e){return e.data=e.utf8Data,i.emit("message",e)})),i.emit("open")})),i.client.connect(e,r),i}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),c(t,[{key:"addEventListener",value:function(e,t,n,r){return this.on(e,t)}},{key:"close",value:function(){if(this.connection)return this.connection.close(),this.connection=null}},{key:"send",value:function(e){return this.connection.sendUTF(e)}}]),t}(r)),e.exports={isBrowser:i,EventEmitter:r,WebSocket:i()?window.WebSocket:o}},81132:(e,t,n)=>{n(27848)("fbp-protocol-client"),t.transports={websocket:n(50700),iframe:n(95822),opener:n(96312),webrtc:n(20711),base:n(11428)},t.connection=n(9980),t.getTransport=function(e){return t.transports[e]}},11428:(e,t,n)=>{"use strict";var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();r=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return n.definition=e,n.definition.capabilities||(n.definition.capabilities=[]),n.graph=null,n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),o(t,[{key:"setMain",value:function(e){this.graph=e}},{key:"getType",value:function(){return this.definition.protocol}},{key:"getAddress",value:function(){return this.definition.address}},{key:"canDo",value:function(e){return-1!==this.definition.capabilities.indexOf(e)}},{key:"isConnected",value:function(){return!1}},{key:"connect",value:function(){}},{key:"disconnect",value:function(){}},{key:"reconnect",value:function(){return this.disconnect(),this.connect()}},{key:"start",value:function(){if(!this.graph)throw new Error("No graph defined for execution");return this.sendNetwork("start",{graph:this.graph.name||this.graph.properties.id})}},{key:"stop",value:function(){if(!this.graph)throw new Error("No graph defined for execution");return this.sendNetwork("stop",{graph:this.graph.name||this.graph.properties.id})}},{key:"setParentElement",value:function(e){}},{key:"getElement",value:function(){}},{key:"recvMessage",value:function(e){switch(this.emit("message",e),e.protocol){case"runtime":return this.recvRuntime(e.command,e.payload);case"graph":return this.recvGraph(e.command,e.payload);case"network":return this.recvNetwork(e.command,e.payload);case"component":return this.recvComponent(e.command,e.payload);case"trace":return this.recvTrace(e.command,e.payload)}}},{key:"recvRuntime",value:function(e,t){var n,r;if("runtime"===e){for(n in t)r=t[n],this.definition[n]=r;this.emit("capabilities",t.capabilities||[])}return this.emit("runtime",{command:e,payload:t})}},{key:"recvComponent",value:function(e,t){switch(e){case"error":return this.emit("network",{command:e,payload:t});default:return this.emit("component",{command:e,payload:t})}}},{key:"recvGraph",value:function(e,t){return this.emit("graph",{command:e,payload:t})}},{key:"recvNetwork",value:function(e,t){switch(e){case"started":return this.emit("execution",{running:null==t||null==t.running||t.running,started:null==t||!t.started||t.started});case"stopped":return this.emit("execution",{running:null!=t&&null!=t.running&&t.running,started:!(null==t||!t.started)&&t.started});case"status":return this.emit("execution",{running:t.running,started:t.started});case"icon":return this.emit("icon",t);default:return this.emit("network",{command:e,payload:t})}}},{key:"recvTrace",value:function(e,t){return this.emit("trace",{command:e,payload:t})}},{key:"sendRuntime",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return t.secret=this.definition.secret,this.send("runtime",e,t)}},{key:"sendGraph",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return t.secret=this.definition.secret,this.send("graph",e,t)}},{key:"sendNetwork",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return t.secret=this.definition.secret,this.send("network",e,t)}},{key:"sendComponent",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return t.secret=this.definition.secret,this.send("component",e,t)}},{key:"sendTrace",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return t.secret=this.definition.secret,this.send("trace",e,t)}},{key:"send",value:function(e,t,n){}}]),t}(n(45476).EventEmitter),e.exports=r},95822:(e,t,n)=>{"use strict";var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=function e(t,n,r){null===t&&(t=Function.prototype);var o=Object.getOwnPropertyDescriptor(t,n);if(void 0===o){var a=Object.getPrototypeOf(t);return null===a?void 0:e(a,n,r)}if("value"in o)return o.value;var i=o.get;return void 0!==i?i.call(r):void 0},i=function(e,t){if(!(e instanceof t))throw new Error("Bound instance method accessed before binding")};r=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.updateIframe=n.updateIframe.bind(n),n.onLoaded=n.onLoaded.bind(n),n.onMessage=n.onMessage.bind(n),n.origin=window.location.origin,n.connecting=!1,n.connected=!1,n.buffer=[],n.iframe=null,n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),o(t,[{key:"getElement",value:function(){return this.iframe}},{key:"isConnected",value:function(){return this.connected}},{key:"setMain",value:function(e){if(this.graph&&this.graph.removeListener("changeProperties",this.updateIframe),!e)return a(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"setMain",this).call(this,e);e.on("changeProperties",this.updateIframe),a(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"setMain",this).call(this,e),this.updateIframe()}},{key:"setParentElement",value:function(e){return this.iframe=document.createElement("iframe"),this.iframe.setAttribute("sandbox","allow-scripts allow-same-origin allow-forms"),e.appendChild(this.iframe)}},{key:"connect",value:function(){if(!this.iframe)throw new Error("Unable to connect without a parent element");return this.iframe.addEventListener("load",this.onLoaded,!1),this.connecting=!0,this.emit("status",{online:!1,label:"connecting"}),this.iframe.setAttribute("src",this.getAddress()),this.iframe.id="preview-iframe",window.addEventListener("message",this.onMessage,!1)}},{key:"updateIframe",value:function(){var e;if(i(this,t),this.iframe&&this.graph&&(e=this.graph.properties.environment)&&e.content)return this.send("iframe","setcontent",e.content)}},{key:"disconnect",value:function(){return this.iframe&&this.iframe.removeEventListener("load",this.onLoaded,!1),this.connected=!1,window.removeEventListener("message",this.onMessage,!1),this.emit("status",{online:!1,label:"disconnected"}),this.emit("disconnected")}},{key:"onLoaded",value:function(){var e,n=this;return i(this,t),this.once("capabilities",(function(){return e&&clearTimeout(e),n.connecting=!1,n.connected=!0,n.emit("status",{online:!0,label:"connected"}),n.emit("connected"),n.updateIframe(),n.flush()})),this.postMessage("runtime","getruntime",{}),e=setTimeout((function(){return n.postMessage("runtime","getruntime",{})}),500)}},{key:"send",value:function(e,t,n){if(!this.connecting)return this.postMessage(e,t,n);this.buffer.push({protocol:e,command:t,payload:n})}},{key:"postMessage",value:function(e,t,n){var r;if(r=this.iframe.contentWindow){try{if("about:blank"===r.location.href)return;if(-1!==r.location.href.indexOf("chrome-extension://"))throw new Error("Use * for IFRAME communications in a Chrome app")}catch(o){return void r.postMessage(JSON.stringify({protocol:e,command:t,payload:n}),"*")}return r.postMessage(JSON.stringify({protocol:e,command:t,payload:n}),r.location.href)}}},{key:"onMessage",value:function(e){var n;if(i(this,t),!e.source||e.source===this.iframe.contentWindow)return n="string"==typeof e.data?JSON.parse(e.data):e.data,this.recvMessage(n)}},{key:"flush",value:function(){var e,t,n,r;for(e=0,n=(r=this.buffer).length;e<n;e++)t=r[e],this.postMessage(t.protocol,t.command,t.payload);return this.buffer=[]}}]),t}(n(11428)),e.exports=r},96312:(e,t,n)=>{"use strict";var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();r=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.onMessage=n.onMessage.bind(n),n.connecting=!1,n.connected=!1,n.buffer=[],n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),o(t,[{key:"getElement",value:function(){return null}},{key:"isConnected",value:function(){return this.connected}},{key:"setParentElement",value:function(e){}},{key:"connect",value:function(){var e=this;return this.connecting=!0,this.emit("status",{online:!1,label:"connecting"}),window.addEventListener("message",this.onMessage,!1),this.once("capabilities",(function(){return e.connecting=!1,e.connected=!0,e.emit("status",{online:!0,label:"connected"}),e.emit("connected"),e.flush()})),this.postMessage("runtime","getruntime",{}),setTimeout((function(){return e.postMessage("runtime","getruntime",{})}),500)}},{key:"updateIframe",value:function(){}},{key:"disconnect",value:function(){return this.connected=!1,window.removeEventListener("message",this.onMessage,!1),this.emit("status",{online:!1,label:"disconnected"}),this.emit("disconnected")}},{key:"send",value:function(e,t,n){if(!this.connecting)return this.postMessage(e,t,n);this.buffer.push({protocol:e,command:t,payload:n})}},{key:"postMessage",value:function(e,t,n){if(window.opener)return window.opener.postMessage(JSON.stringify({protocol:e,command:t,payload:n}),"*")}},{key:"onMessage",value:function(e){var n;if(function(e,t){if(!(e instanceof t))throw new Error("Bound instance method accessed before binding")}(this,t),!e.source||e.source===this.iframe.contentWindow)return n="string"==typeof e.data?JSON.parse(e.data):e.data,this.recvMessage(n)}},{key:"flush",value:function(){var e,t,n,r;for(e=0,n=(r=this.buffer).length;e<n;e++)t=r[e],this.postMessage(t.protocol,t.command,t.payload);return this.buffer=[]}}]),t}(n(11428)),e.exports=r},20711:(e,t,n)=>{"use strict";var r,o,a,i=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),s=function(e,t){if(!(e instanceof t))throw new Error("Bound instance method accessed before binding")};r=n(11428),a=n(27848)("fbp-protocol-client:webrtc"),o=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.handleError=n.handleError.bind(n),n.handleMessage=n.handleMessage.bind(n),n.peer=null,n.connecting=!1,n.connection=null,n.protocol="webrtc",n.buffer=[],n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),i(t,[{key:"getElement",value:function(){return null}},{key:"isConnected",value:function(){return null!==this.connection}},{key:"connect",value:function(){var e,t,n,r,o=this;if(!this.connection&&!this.connecting)return-1!==(e=this.getAddress()).indexOf("#")?(r=e.split("#")[0],t=e.split("#")[1]):(r="https://api.flowhub.io",t=e),n={room:t,debug:!0,channels:{chat:!0},signaller:r,capture:!1,constraints:!1,expectedLocalStreams:0},this.peer=RTC(n),this.peer.on("channel:opened:chat",(function(e,t){return o.connection=t,o.connection.onmessage=function(e){return a("message",e.data),o.handleMessage(e.data)},o.connecting=!1,o.sendRuntime("getruntime",{}),o.emit("status",{online:!0,label:"connected"}),o.emit("connected"),o.flush()})),this.peer.on("channel:closed:chat",(function(e,t){return t.onmessage=null,o.connection=null,o.emit("status",{online:!1,label:"disconnected"}),o.emit("disconnected")})),this.connecting=!0}},{key:"disconnect",value:function(){if(this.connection)return this.connecting=!1,this.connection.close(),this.connection=null,this.emit("disconnected")}},{key:"send",value:function(e,t,n){var r;if(r={protocol:e,command:t,payload:n},this.connecting)this.buffer.push(r);else if(this.connection)return a("send",r),this.connection.send(JSON.stringify(r))}},{key:"handleError",value:function(e){return s(this,t),this.connection=null,this.connecting=!1}},{key:"handleMessage",value:function(e){var n;return s(this,t),n=JSON.parse(e),this.recvMessage(n)}},{key:"flush",value:function(){var e,t,n,r;for(e=0,n=(r=this.buffer).length;e<n;e++)t=r[e],this.send(t.protocol,t.command,t.payload);return this.buffer=[]}}]),t}(r),e.exports=o},50700:(e,t,n)=>{"use strict";var r,o,a,i=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),s=function(e,t){if(!(e instanceof t))throw new Error("Bound instance method accessed before binding")};r=n(11428),a=n(45476),o=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.handleError=n.handleError.bind(n),n.handleMessage=n.handleMessage.bind(n),n.connecting=!1,n.connection=null,n.protocol="noflo",n.buffer=[],n.container=null,n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),i(t,[{key:"getElement",value:function(){var e,t;return this.container||(this.container=document.createElement("div"),this.container.classList.add("preview-container"),e=document.createElement("pre"),t=document.createElement("img"),this.container.appendChild(t),this.container.appendChild(e),this.on("network",(function(n){var r,o,a;if("output"===n.command)return null!=(o=n.payload).type&&"previewurl"===o.type&&(a=o.url.indexOf(!0)?"&":"?",t.src=o.url+a+"timestamp="+(new Date).getTime()),null!=o.message?(r=o.message.replace(/[\u00A0-\u99999<>\&]/gim,(function(e){return"&#"+e.charCodeAt(0)+";"})),e.innerHTML+=r+"\n",e.scrollTop=e.scrollHeight):void 0})),this.on("disconnected",(function(){return e.innerHTML=""}))),this.container}},{key:"isConnected",value:function(){return this.connection&&!1===this.connecting}},{key:"connect",value:function(){var e=this;if(!this.connection&&!this.connecting)return this.protocol?this.connection=new a.WebSocket(this.getAddress(),this.protocol):this.connection=new a.WebSocket(this.getAddress()),this.connection.addEventListener("open",(function(){return e.connecting=!1,e.sendRuntime("getruntime",{}),e.emit("status",{online:!0,label:"connected"}),e.emit("connected"),e.flush()}),!1),this.connection.addEventListener("message",this.handleMessage,!1),this.connection.addEventListener("error",this.handleError,!1),this.connection.addEventListener("close",(function(){return e.connection=null,e.emit("status",{online:!1,label:"disconnected"}),e.emit("disconnected")}),!1),this.connecting=!0}},{key:"disconnect",value:function(){if(this.connection)return this.connecting=!1,this.connection.close()}},{key:"send",value:function(e,t,n){if(this.connecting)this.buffer.push({protocol:e,command:t,payload:n});else if(this.connection)return this.connection.send(JSON.stringify({protocol:e,command:t,payload:n}))}},{key:"handleError",value:function(e){var n=this;return s(this,t),"noflo"===this.protocol?(delete this.protocol,this.connecting=!1,this.connection=null,void setTimeout((function(){return n.connect()}),1)):(this.emit("error",e),this.connection=null,this.connecting=!1)}},{key:"handleMessage",value:function(e){var n;return s(this,t),n=JSON.parse(e.data),this.recvMessage(n)}},{key:"flush",value:function(){var e,t,n,r;for(t=0,n=(r=this.buffer).length;t<n;t++)e=r[t],this.send(e.protocol,e.command,e.payload);return this.buffer=[]}}]),t}(r),e.exports=o},38961:e=>{function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=38961,e.exports=t},53187:(e,t,n)=>{const r=n(76445);let o;r.isBrowser()?({btoa:o}=window):o=n(50706),t.getComponent=function(){const e=new r.Component;return e.description="This component receives strings or Buffers and sends them out Base64-encoded",e.inPorts.add("in",{datatype:"all",description:"Buffer or string to encode"}),e.outPorts.add("out",{datatype:"string",description:"Encoded input"}),e.forwardBrackets={},e.process(((e,t)=>{if(!e.hasStream("in"))return;const n=e.getStream("in"),a=[];let i="";n.forEach((e=>{if("openBracket"!==e.type){if("data"===e.type){if(!r.isBrowser()&&e.data instanceof Buffer)return void(i+=e.data.toString("utf-8"));i+=e.data}}else a.push(e.data)})),a.forEach((e=>{t.send({out:new r.IP("openBracket",e)})})),t.send({out:o(i)}),a.reverse(),a.forEach((e=>{t.send({out:new r.IP("closeBracket",e)})})),t.done()}))}},11244:(e,t,n)=>{const r=n(76445);t.getComponent=function(){const e=new r.Component;return e.description="Concatenate received strings with the given delimiter at the end of a stream",e.inPorts.add("delimiter",{datatype:"string",description:"String used to concatenate input strings",default:"\n",control:!0}),e.inPorts.add("in",{datatype:"string",description:"Strings to concatenate (one per IP)"}),e.outPorts.add("out",{datatype:"string",description:"Concatenation of input strings"}),e.forwardBrackets={},e.process(((e,t)=>{if(!e.hasStream("in"))return;const n=e.getStream("in"),o=[],a=[];n.forEach((e=>{"openBracket"!==e.type?"data"===e.type&&a.push(e.data):o.push(e.data)}));const i=e.has("delimiter")?e.getData("delimiter"):"\n";o.forEach((e=>{t.send({out:new r.IP("openBracket",e)})})),t.send({out:a.join(i)}),o.reverse(),o.forEach((e=>{t.send({out:new r.IP("closeBracket",e)})})),t.done()}))}},4457:(e,t,n)=>{const r=n(76445);t.getComponent=function(){const e=new r.Component;return e.description="Convert a string or a buffer from one encoding to another. Default from UTF-8 to Base64",e.inPorts.add("in",{datatype:"all",description:"Buffer or string to be converted"}),e.inPorts.add("from",{datatype:"string",description:"Input encoding",default:"utf8",control:!0}),e.inPorts.add("to",{datatype:"string",description:"Output encoding",default:"base64",control:!0}),e.outPorts.add("out",{datatype:"string",description:"Converted string"}),e.process(((e,t)=>{if(!e.has("in"))return;const n=e.has("from")?e.getData("from"):"utf8",r=e.has("to")?e.getData("to"):"base64",o=e.get("in");if("data"!==o.type)return;let a="";o.data instanceof Buffer?a+=o.data.toString(n):"string"==typeof o.data&&(a+=Buffer.from(o.data,n).toString()),t.sendDone({out:Buffer.from(a).toString(r)})}))}},20904:(e,t,n)=>{const r=n(76445);t.getComponent=function(){const e=new r.Component;return e.description="Escape all quotes in a string",e.inPorts.add("in",{datatype:"string",description:"String to escape quotes from"}),e.outPorts.add("out",{datatype:"string",description:"Escaped string"}),e.process(((e,t)=>{const n=e.getData("in");t.sendDone({out:n.replace(/"/g,'\\"')})}))}},59554:(e,t,n)=>{const r=n(76445);t.getComponent=function(){const e=new r.Component;return e.description="filters an IP which is a string using a regex",e.inPorts.add("in",{datatype:"string",description:"String to filter"}),e.inPorts.add("pattern",{datatype:"string",description:"String representation of a regexp used as filter",control:!0,required:!0}),e.outPorts.add("out",{datatype:"string",description:"String passing the filter"}),e.outPorts.add("missed",{datatype:"string",description:"String failing the filter"}),e.forwardBrackets={in:["out","missed"]},e.process(((e,t)=>{if(!e.has("in","pattern"))return;let n=e.getData("in");if(!n)return;const r=new RegExp(e.getData("pattern"));"string"!=typeof n&&(n=n.toString()),null!=r&&n.match&&n.match(r)?t.sendDone({out:n}):t.sendDone({missed:n})}))}},87277:(e,t,n)=>{const r=n(76445);t.getComponent=function(){const e=new r.Component;return e.description="JSONify all incoming, unless a raw flag is set to exclude data packets that are pure strings",e.inPorts.add("in",{datatype:"object",description:"Object to convert into a JSON representation"}),e.inPorts.add("raw",{datatype:"boolean",description:"Whether to send strings as is",default:!1,control:!0}),e.inPorts.add("pretty",{datatype:"boolean",description:"Make JSON output pretty",default:!1,control:!0}),e.outPorts.add("out",{datatype:"string",description:"JSON representation of the input object"}),e.process(((e,t)=>{if(!e.has("in"))return;const n=e.getData("in");if(!n)return;let r=!1;e.has("raw")&&(r="true"===String(e.getData("raw")));let o=!1;e.has("pretty")&&(o="true"===String(e.getData("pretty"))),r&&"string"==typeof n?t.sendDone({out:n}):o?t.sendDone({out:JSON.stringify(n,null,4)}):t.sendDone({out:JSON.stringify(n)})}))}},13240:(e,t,n)=>{const r=n(76445);t.getComponent=function(){const e=new r.Component;return e.description="toLowerCase on all incoming IPs (assuming they are strings)",e.inPorts.add("in",{datatype:"string",description:"Mixed-case string"}),e.outPorts.add("out",{datatype:"string",description:"All-lowercase string"}),e.process(((e,t)=>{const n=e.getData("in");n&&t.sendDone({out:n.toLowerCase()})}))}},74012:(e,t,n)=>{const r=n(76445),o=n(56927);t.getComponent=function(){const e=new r.Component;return e.description="Replace string packets using a dictionary",e.inPorts.add("in",{datatype:"string"}),e.inPorts.add("match",{datatype:"object",description:"Dictionary object with key matching the input object and value being the replacement item",control:!0,required:!0}),e.outPorts.add("out",{datatype:"string"}),e.process(((e,t)=>{if(!e.has("in","match"))return;const n=e.getData("match");if(!n)return;if(!o.isObject(n))return;let r=e.getData("in");if(!r)return;const a={};let i=[];Object.keys(n).forEach((e=>{const t=n[e];a[e.toString()]=t.toString()})),i=o.keys(a);const s=i.indexOf(r.toString());s>-1&&(r=a[i[s]]),t.sendDone({out:r})}))}},3297:(e,t,n)=>{const r=n(76445);t.getComponent=function(){const e=new r.Component;return e.description="Parse a string to a float",e.inPorts.add("in",{datatype:"string",description:"String to parse as Float representation"}),e.outPorts.add("out",{datatype:"number",description:"Parsed number"}),e.process(((e,t)=>{const n=e.getData("in");t.sendDone({out:parseFloat(n)})}))}},90425:(e,t,n)=>{const r=n(76445);t.getComponent=function(){const e=new r.Component;return e.description="Parse a string to an integer",e.inPorts.add("in",{datatype:"string",description:"String to parse as int representation"}),e.inPorts.add("base",{datatype:"number",description:"Base used to parse the string representation",control:!0,default:10}),e.outPorts.add("out",{datatype:"number",description:"Parsed number"}),e.process(((e,t)=>{if(!e.has("in"))return;const n=e.getData("in"),r=e.has("base")?e.getData("base"):10;t.sendDone({out:parseInt(n,r)})}))}},85687:(e,t,n)=>{const r=n(76445);t.getComponent=function(){const e=new r.Component;return e.description="Parse a JSON string",e.inPorts.add("in",{datatype:"string",description:"JSON description to parse"}),e.outPorts.add("out",{datatype:"object",description:"Parsed object"}),e.outPorts.add("error",{datatype:"object"}),e.process(((e,t)=>{let n;if(!e.has("in"))return;const r=e.getData("in");if(r){try{n=JSON.parse(r)}catch(e){return void t.sendDone(e)}t.sendDone({out:n})}}))}},13646:(e,t,n)=>{const r=n(76445);t.getComponent=function(){const e=new r.Component;return e.description="quote the incoming string IPs",e.inPorts.add("in",{datatype:"string",description:"String to put quote around"}),e.outPorts.add("out",{datatype:"string",description:"Quoted input string"}),e.process(((e,t)=>{const n=e.getData("in");n&&t.sendDone({out:`'${n}'`})}))}},16190:(e,t,n)=>{const r=n(76445);t.getComponent=function(){const e=new r.Component;return e.description="Given a fixed pattern and its replacement, replace all occurrences in the incoming template.",e.inPorts.add("in",{datatype:"string",description:"String to replace pattern in"}),e.inPorts.add("pattern",{datatype:"string",description:"Pattern to replace",control:!0}),e.inPorts.add("replacement",{datatype:"string",description:"Replacement for the pattern",control:!0}),e.outPorts.add("out",{datatype:"string"}),e.process(((e,t)=>{let n;if(!e.has("in"))return;e.has("pattern")&&(n=new RegExp(e.getData("pattern"),"g"));let r="";e.has("replacement")&&(r=e.getData("replacement").replace("\\\\n","\n"));const o=e.getData("in");o&&(n?t.sendDone({out:`${o}`.replace(n,r)}):t.sendDone({out:o}))}))}},61758:(e,t,n)=>{const r=n(76445);t.getComponent=function(){const e=new r.Component;return e.description="Send a string when receiving a packet",e.inPorts.add("string",{datatype:"string",description:"String to send",control:!0}),e.inPorts.add("in",{datatype:"bang",description:"Send the string out"}),e.outPorts.add("out",{datatype:"string"}),e.process(((e,t)=>{e.has("string","in")&&(e.getData("in"),t.sendDone({out:e.getData("string")}))}))}},59332:(e,t,n)=>{const r=n(76445),o=n(48406);t.getComponent=function(){const e=new r.Component;return e.description="Compare distance between two strings using Sift3 algorithm",e.inPorts.add("string1",{datatype:"string"}),e.inPorts.add("string2",{datatype:"string"}),e.outPorts.add("out",{datatype:"number"}),e.forwardBrackets={string2:["out"]},e.process(((e,t)=>{if(!e.has("string1","string2"))return;let n=e.get("string1");for(;"data"!==n.type;)n=e.get("string1");if("data"!==n.type)return;let r=e.get("string2");for(;"data"!==r.type;)r=e.get("string2");"data"===r.type&&t.sendDone({out:o(n.data,r.data)})}))}},31218:(e,t,n)=>{const r=n(76445),o=n(56927);t.getComponent=function(){const e=new r.Component;return e.description="interlaces two arrays of string into a string",e.inPorts.add("in",{datatype:"array",description:"Array to interlace (2 consecutive IPs)"}),e.inPorts.add("assoc",{datatype:"string",control:!0,default:":"}),e.inPorts.add("delim",{datatype:"string",control:!0,default:","}),e.outPorts.add("out",{datatype:"string"}),e.process(((t,n)=>{if(!t.has("in"))return;const r=e.inPorts.in;if((t.scope?r.scopedBuffer[t.scope]:r.buffer).filter((e=>"data"===e.type)).length<2)return;let a=[];for(;2!==a.length;){const e=t.get("in");"data"===e.type&&a.push(e.data)}const i=t.has("assoc")?t.getData("assoc"):":",s=t.has("delim")?t.getData("delim"):",",c=o.zip(a[0],a[1]);a=o.map(c,(e=>e.join(i))),n.sendDone({out:a.join(s)})}))}},52964:(e,t,n)=>{const r=n(76445);t.getComponent=function(){const e=new r.Component;return e.description="The SplitStr component receives a string in the in port, splits it by string specified in the delimiter port, and send each part as a separate packet to the out port",e.inPorts.add("in",{datatype:"string",description:"String to split"}),e.inPorts.add("delimiter",{datatype:"string",description:"Delimiter used to split",control:!0,default:"\n"}),e.outPorts.add("out",{datatype:"string",description:"Split off elements from the input string (one element per IP)"}),e.process(((e,t)=>{if(!e.hasData("in"))return;let n=e.has("delimiter")?e.getData("delimiter"):"\n";const r=n.substr(0,1),o=n.substr(n.length-1,1);"/"===r&&"/"===o&&n.length>1&&(n=new RegExp(n.substr(1,n.length-2))),e.getData("in").split(n).forEach((e=>{t.send({out:e})})),t.done()}))}},58842:(e,t,n)=>{const r=n(76445),o=n(56927);t.getComponent=function(){const e=new r.Component;return e.description="Produce a string from input data with a given template",e.inPorts.add("template",{datatype:"string",description:"Templating string",control:!0,required:!0}),e.inPorts.add("in",{datatype:"object",description:"Object containing key/value set used to run the template"}),e.outPorts.add("out",{datatype:"string"}),e.process(((e,t)=>{if(!e.has("in","template"))return;const n=e.get("in");if("data"!==n.type)return;const r=o.template(e.getData("template"));t.sendDone({out:r(n.data)})}))}},34490:(e,t,n)=>{const r=n(76445);t.getComponent=function(){const e=new r.Component;return e.description="Produce a substring from a string",e.inPorts.add("index",{datatype:"int",description:"Index of the sub part ",control:!0}),e.inPorts.add("limit",{datatype:"int",description:"Limit of the sub part",control:!0}),e.inPorts.add("in",{datatype:"string",description:"String to extract a sub part from"}),e.outPorts.add("out",{datatype:"string"}),e.process(((e,t)=>{if(!e.has("in"))return;const n=e.get("in");if("data"!==n.type)return;const r=e.has("index")?e.getData("index"):0,o=e.has("limit")?e.getData("limit"):void 0;t.sendDone({out:n.data.substr(r,o)})}))}},68379:(e,t,n)=>{const r=n(76445),o=n(56927);t.getComponent=function(){const e=new r.Component;return e.description="The inverse of 'Replace': fix the template and pass in an object of patterns and replacements.",e.inPorts.add("in",{datatype:"object"}),e.inPorts.add("token",{datatype:"string"}),e.inPorts.add("template",{datatype:"string",control:!0}),e.inPorts.add("default",{datatype:"string",control:!0}),e.outPorts.add("out",{datatype:"string"}),e.process(((t,n)=>{let r,a,i,s;if(!t.has("template","in"))return;const c=t.getData("template");if(!o.isString(c))return;const u=t.has("default")?t.getData("default"):"",l=e.inPorts.in,d=(t.scope?l.scopedBuffer[t.scope]:l.buffer).filter((e=>"data"===e.type));if(!d.length)return;if(o.isObject(d[0].data))return r=t.get("in"),s=c,Object.keys(r.data).forEach((e=>{let t=e;i=r.data[t],t=new RegExp(t,"g"),s=s.replace(t,i)})),void n.sendDone({out:s});e.autoOrdering=!1;const p=e.inPorts.token,h=(t.scope?p.scopedBuffer[t.scope]:p.buffer).filter((e=>"data"===e.type));if(!h.length)return;if(d.length<h.length)return;const f=[],g=[];for(;f.length<h.length;)a=t.get("in"),"data"===a.type&&f.push(a.data);for(;g.length<h.length;)a=t.get("token"),"data"===a.type&&g.push(new RegExp(a.data,"g"));s=c,f.forEach((e=>{const t=g.shift();i=o.isString(e)?e:u,s=s.replace(t,i)})),n.sendDone({out:s})}))}},75916:(e,t,n)=>{const r=n(76445);t.getComponent=function(){const e=new r.Component;return e.description="Convert the input into a string using toString()",e.inPorts.add("in",{datatype:"all"}),e.outPorts.add("out",{datatype:"string"}),e.process(((e,t)=>{const n=e.getData("in");t.sendDone({out:n.toString()})}))}},56927:(e,t,n)=>{"use strict";n.r(t),n.d(t,{VERSION:()=>o,after:()=>qt,all:()=>Zt,allKeys:()=>me,any:()=>en,assign:()=>Re,before:()=>Rt,bind:()=>_t,bindAll:()=>Pt,chain:()=>vt,chunk:()=>Mn,clone:()=>Ne,collect:()=>Ht,compact:()=>Cn,compose:()=>Ot,constant:()=>K,contains:()=>tn,countBy:()=>fn,create:()=>Me,debounce:()=>jt,default:()=>Un,defaults:()=>Te,defer:()=>Dt,delay:()=>Ct,detect:()=>Wt,difference:()=>En,drop:()=>Pn,each:()=>Vt,escape:()=>it,every:()=>Zt,extend:()=>qe,extendOwn:()=>Re,filter:()=>Yt,find:()=>Wt,findIndex:()=>Nt,findKey:()=>Bt,findLastIndex:()=>Lt,findWhere:()=>$t,first:()=>kn,flatten:()=>Dn,foldl:()=>Qt,foldr:()=>Xt,forEach:()=>Vt,functions:()=>Ie,get:()=>ze,groupBy:()=>pn,has:()=>We,head:()=>kn,identity:()=>$e,include:()=>tn,includes:()=>tn,indexBy:()=>hn,indexOf:()=>Ut,initial:()=>xn,inject:()=>Qt,intersection:()=>On,invert:()=>Ae,invoke:()=>nn,isArguments:()=>Q,isArray:()=>V,isArrayBuffer:()=>M,isBoolean:()=>E,isDataView:()=>$,isDate:()=>q,isElement:()=>j,isEmpty:()=>ce,isEqual:()=>ge,isError:()=>T,isFinite:()=>X,isFunction:()=>F,isMap:()=>Pe,isMatch:()=>ue,isNaN:()=>Y,isNull:()=>C,isNumber:()=>O,isObject:()=>S,isRegExp:()=>R,isSet:()=>Ce,isString:()=>I,isSymbol:()=>B,isTypedArray:()=>oe,isUndefined:()=>D,isWeakMap:()=>Se,isWeakSet:()=>De,iteratee:()=>Xe,keys:()=>se,last:()=>Sn,lastIndexOf:()=>zt,map:()=>Ht,mapObject:()=>Ke,matcher:()=>Ve,matches:()=>Ve,max:()=>an,memoize:()=>St,methods:()=>Ie,min:()=>sn,mixin:()=>Ln,negate:()=>It,noop:()=>Ze,now:()=>rt,object:()=>Tn,omit:()=>_n,once:()=>Tt,pairs:()=>je,partial:()=>wt,partition:()=>gn,pick:()=>wn,pluck:()=>rn,property:()=>He,propertyOf:()=>et,random:()=>nt,range:()=>Bn,reduce:()=>Qt,reduceRight:()=>Xt,reject:()=>Kt,rest:()=>Pn,restArguments:()=>P,result:()=>ft,sample:()=>cn,select:()=>Yt,shuffle:()=>un,size:()=>yn,some:()=>en,sortBy:()=>ln,sortedIndex:()=>Ft,tail:()=>Pn,take:()=>kn,tap:()=>Le,template:()=>ht,templateSettings:()=>ct,throttle:()=>Et,times:()=>tt,toArray:()=>vn,toPath:()=>Fe,transpose:()=>qn,unescape:()=>st,union:()=>In,uniq:()=>An,unique:()=>An,uniqueId:()=>mt,unzip:()=>qn,values:()=>Ee,where:()=>on,without:()=>jn,wrap:()=>At,zip:()=>Rn});var r={};n.r(r),n.d(r,{VERSION:()=>o,after:()=>qt,all:()=>Zt,allKeys:()=>me,any:()=>en,assign:()=>Re,before:()=>Rt,bind:()=>_t,bindAll:()=>Pt,chain:()=>vt,chunk:()=>Mn,clone:()=>Ne,collect:()=>Ht,compact:()=>Cn,compose:()=>Ot,constant:()=>K,contains:()=>tn,countBy:()=>fn,create:()=>Me,debounce:()=>jt,default:()=>Fn,defaults:()=>Te,defer:()=>Dt,delay:()=>Ct,detect:()=>Wt,difference:()=>En,drop:()=>Pn,each:()=>Vt,escape:()=>it,every:()=>Zt,extend:()=>qe,extendOwn:()=>Re,filter:()=>Yt,find:()=>Wt,findIndex:()=>Nt,findKey:()=>Bt,findLastIndex:()=>Lt,findWhere:()=>$t,first:()=>kn,flatten:()=>Dn,foldl:()=>Qt,foldr:()=>Xt,forEach:()=>Vt,functions:()=>Ie,get:()=>ze,groupBy:()=>pn,has:()=>We,head:()=>kn,identity:()=>$e,include:()=>tn,includes:()=>tn,indexBy:()=>hn,indexOf:()=>Ut,initial:()=>xn,inject:()=>Qt,intersection:()=>On,invert:()=>Ae,invoke:()=>nn,isArguments:()=>Q,isArray:()=>V,isArrayBuffer:()=>M,isBoolean:()=>E,isDataView:()=>$,isDate:()=>q,isElement:()=>j,isEmpty:()=>ce,isEqual:()=>ge,isError:()=>T,isFinite:()=>X,isFunction:()=>F,isMap:()=>Pe,isMatch:()=>ue,isNaN:()=>Y,isNull:()=>C,isNumber:()=>O,isObject:()=>S,isRegExp:()=>R,isSet:()=>Ce,isString:()=>I,isSymbol:()=>B,isTypedArray:()=>oe,isUndefined:()=>D,isWeakMap:()=>Se,isWeakSet:()=>De,iteratee:()=>Xe,keys:()=>se,last:()=>Sn,lastIndexOf:()=>zt,map:()=>Ht,mapObject:()=>Ke,matcher:()=>Ve,matches:()=>Ve,max:()=>an,memoize:()=>St,methods:()=>Ie,min:()=>sn,mixin:()=>Ln,negate:()=>It,noop:()=>Ze,now:()=>rt,object:()=>Tn,omit:()=>_n,once:()=>Tt,pairs:()=>je,partial:()=>wt,partition:()=>gn,pick:()=>wn,pluck:()=>rn,property:()=>He,propertyOf:()=>et,random:()=>nt,range:()=>Bn,reduce:()=>Qt,reduceRight:()=>Xt,reject:()=>Kt,rest:()=>Pn,restArguments:()=>P,result:()=>ft,sample:()=>cn,select:()=>Yt,shuffle:()=>un,size:()=>yn,some:()=>en,sortBy:()=>ln,sortedIndex:()=>Ft,tail:()=>Pn,take:()=>kn,tap:()=>Le,template:()=>ht,templateSettings:()=>ct,throttle:()=>Et,times:()=>tt,toArray:()=>vn,toPath:()=>Fe,transpose:()=>qn,unescape:()=>st,union:()=>In,uniq:()=>An,unique:()=>An,uniqueId:()=>mt,unzip:()=>qn,values:()=>Ee,where:()=>on,without:()=>jn,wrap:()=>At,zip:()=>Rn});var o="1.12.0",a="object"==typeof self&&self.self===self&&self||"object"==typeof n.g&&n.g.global===n.g&&n.g||Function("return this")()||{},i=Array.prototype,s=Object.prototype,c="undefined"!=typeof Symbol?Symbol.prototype:null,u=i.push,l=i.slice,d=s.toString,p=s.hasOwnProperty,h="undefined"!=typeof ArrayBuffer,f="undefined"!=typeof DataView,g=Array.isArray,m=Object.keys,v=Object.create,y=h&&ArrayBuffer.isView,b=isNaN,w=isFinite,_=!{toString:null}.propertyIsEnumerable("toString"),x=["valueOf","isPrototypeOf","toString","propertyIsEnumerable","hasOwnProperty","toLocaleString"],k=Math.pow(2,53)-1;function P(e,t){return t=null==t?e.length-1:+t,function(){for(var n=Math.max(arguments.length-t,0),r=Array(n),o=0;o<n;o++)r[o]=arguments[o+t];switch(t){case 0:return e.call(this,r);case 1:return e.call(this,arguments[0],r);case 2:return e.call(this,arguments[0],arguments[1],r)}var a=Array(t+1);for(o=0;o<t;o++)a[o]=arguments[o];return a[t]=r,e.apply(this,a)}}function S(e){var t=typeof e;return"function"===t||"object"===t&&!!e}function C(e){return null===e}function D(e){return void 0===e}function E(e){return!0===e||!1===e||"[object Boolean]"===d.call(e)}function j(e){return!(!e||1!==e.nodeType)}function A(e){var t="[object "+e+"]";return function(e){return d.call(e)===t}}const I=A("String"),O=A("Number"),q=A("Date"),R=A("RegExp"),T=A("Error"),B=A("Symbol"),M=A("ArrayBuffer");var N=A("Function"),L=a.document&&a.document.childNodes;"object"!=typeof Int8Array&&"function"!=typeof L&&(N=function(e){return"function"==typeof e||!1});const F=N,G=A("Object");var U=f&&G(new DataView(new ArrayBuffer(8))),z="undefined"!=typeof Map&&G(new Map),W=A("DataView");const $=U?function(e){return null!=e&&F(e.getInt8)&&M(e.buffer)}:W,V=g||A("Array");function H(e,t){return null!=e&&p.call(e,t)}var J=A("Arguments");!function(){J(arguments)||(J=function(e){return H(e,"callee")})}();const Q=J;function X(e){return!B(e)&&w(e)&&!isNaN(parseFloat(e))}function Y(e){return O(e)&&b(e)}function K(e){return function(){return e}}function Z(e){return function(t){var n=e(t);return"number"==typeof n&&n>=0&&n<=k}}function ee(e){return function(t){return null==t?void 0:t[e]}}const te=ee("byteLength"),ne=Z(te);var re=/\[object ((I|Ui)nt(8|16|32)|Float(32|64)|Uint8Clamped|Big(I|Ui)nt64)Array\]/;const oe=h?function(e){return y?y(e)&&!$(e):ne(e)&&re.test(d.call(e))}:K(!1),ae=ee("length");function ie(e,t){t=function(e){for(var t={},n=e.length,r=0;r<n;++r)t[e[r]]=!0;return{contains:function(e){return t[e]},push:function(n){return t[n]=!0,e.push(n)}}}(t);var n=x.length,r=e.constructor,o=F(r)&&r.prototype||s,a="constructor";for(H(e,a)&&!t.contains(a)&&t.push(a);n--;)(a=x[n])in e&&e[a]!==o[a]&&!t.contains(a)&&t.push(a)}function se(e){if(!S(e))return[];if(m)return m(e);var t=[];for(var n in e)H(e,n)&&t.push(n);return _&&ie(e,t),t}function ce(e){if(null==e)return!0;var t=ae(e);return"number"==typeof t&&(V(e)||I(e)||Q(e))?0===t:0===ae(se(e))}function ue(e,t){var n=se(t),r=n.length;if(null==e)return!r;for(var o=Object(e),a=0;a<r;a++){var i=n[a];if(t[i]!==o[i]||!(i in o))return!1}return!0}function le(e){return e instanceof le?e:this instanceof le?void(this._wrapped=e):new le(e)}function de(e){return new Uint8Array(e.buffer||e,e.byteOffset||0,te(e))}le.VERSION=o,le.prototype.value=function(){return this._wrapped},le.prototype.valueOf=le.prototype.toJSON=le.prototype.value,le.prototype.toString=function(){return String(this._wrapped)};var pe="[object DataView]";function he(e,t,n,r){if(e===t)return 0!==e||1/e==1/t;if(null==e||null==t)return!1;if(e!=e)return t!=t;var o=typeof e;return("function"===o||"object"===o||"object"==typeof t)&&fe(e,t,n,r)}function fe(e,t,n,r){e instanceof le&&(e=e._wrapped),t instanceof le&&(t=t._wrapped);var o=d.call(e);if(o!==d.call(t))return!1;if(U&&"[object Object]"==o&&$(e)){if(!$(t))return!1;o=pe}switch(o){case"[object RegExp]":case"[object String]":return""+e==""+t;case"[object Number]":return+e!=+e?+t!=+t:0==+e?1/+e==1/t:+e==+t;case"[object Date]":case"[object Boolean]":return+e==+t;case"[object Symbol]":return c.valueOf.call(e)===c.valueOf.call(t);case"[object ArrayBuffer]":case pe:return fe(de(e),de(t),n,r)}var a="[object Array]"===o;if(!a&&oe(e)){if(te(e)!==te(t))return!1;if(e.buffer===t.buffer&&e.byteOffset===t.byteOffset)return!0;a=!0}if(!a){if("object"!=typeof e||"object"!=typeof t)return!1;var i=e.constructor,s=t.constructor;if(i!==s&&!(F(i)&&i instanceof i&&F(s)&&s instanceof s)&&"constructor"in e&&"constructor"in t)return!1}r=r||[];for(var u=(n=n||[]).length;u--;)if(n[u]===e)return r[u]===t;if(n.push(e),r.push(t),a){if((u=e.length)!==t.length)return!1;for(;u--;)if(!he(e[u],t[u],n,r))return!1}else{var l,p=se(e);if(u=p.length,se(t).length!==u)return!1;for(;u--;)if(!H(t,l=p[u])||!he(e[l],t[l],n,r))return!1}return n.pop(),r.pop(),!0}function ge(e,t){return he(e,t)}function me(e){if(!S(e))return[];var t=[];for(var n in e)t.push(n);return _&&ie(e,t),t}function ve(e){var t=ae(e);return function(n){if(null==n)return!1;var r=me(n);if(ae(r))return!1;for(var o=0;o<t;o++)if(!F(n[e[o]]))return!1;return e!==xe||!F(n[ye])}}var ye="forEach",be=["clear","delete"],we=["get","has","set"],_e=be.concat(ye,we),xe=be.concat(we),ke=["add"].concat(be,ye,"has");const Pe=z?ve(_e):A("Map"),Se=z?ve(xe):A("WeakMap"),Ce=z?ve(ke):A("Set"),De=A("WeakSet");function Ee(e){for(var t=se(e),n=t.length,r=Array(n),o=0;o<n;o++)r[o]=e[t[o]];return r}function je(e){for(var t=se(e),n=t.length,r=Array(n),o=0;o<n;o++)r[o]=[t[o],e[t[o]]];return r}function Ae(e){for(var t={},n=se(e),r=0,o=n.length;r<o;r++)t[e[n[r]]]=n[r];return t}function Ie(e){var t=[];for(var n in e)F(e[n])&&t.push(n);return t.sort()}function Oe(e,t){return function(n){var r=arguments.length;if(t&&(n=Object(n)),r<2||null==n)return n;for(var o=1;o<r;o++)for(var a=arguments[o],i=e(a),s=i.length,c=0;c<s;c++){var u=i[c];t&&void 0!==n[u]||(n[u]=a[u])}return n}}const qe=Oe(me),Re=Oe(se),Te=Oe(me,!0);function Be(e){if(!S(e))return{};if(v)return v(e);var t=function(){};t.prototype=e;var n=new t;return t.prototype=null,n}function Me(e,t){var n=Be(e);return t&&Re(n,t),n}function Ne(e){return S(e)?V(e)?e.slice():qe({},e):e}function Le(e,t){return t(e),e}function Fe(e){return V(e)?e:[e]}function Ge(e){return le.toPath(e)}function Ue(e,t){for(var n=t.length,r=0;r<n;r++){if(null==e)return;e=e[t[r]]}return n?e:void 0}function ze(e,t,n){var r=Ue(e,Ge(t));return D(r)?n:r}function We(e,t){for(var n=(t=Ge(t)).length,r=0;r<n;r++){var o=t[r];if(!H(e,o))return!1;e=e[o]}return!!n}function $e(e){return e}function Ve(e){return e=Re({},e),function(t){return ue(t,e)}}function He(e){return e=Ge(e),function(t){return Ue(t,e)}}function Je(e,t,n){if(void 0===t)return e;switch(null==n?3:n){case 1:return function(n){return e.call(t,n)};case 3:return function(n,r,o){return e.call(t,n,r,o)};case 4:return function(n,r,o,a){return e.call(t,n,r,o,a)}}return function(){return e.apply(t,arguments)}}function Qe(e,t,n){return null==e?$e:F(e)?Je(e,t,n):S(e)&&!V(e)?Ve(e):He(e)}function Xe(e,t){return Qe(e,t,1/0)}function Ye(e,t,n){return le.iteratee!==Xe?le.iteratee(e,t):Qe(e,t,n)}function Ke(e,t,n){t=Ye(t,n);for(var r=se(e),o=r.length,a={},i=0;i<o;i++){var s=r[i];a[s]=t(e[s],s,e)}return a}function Ze(){}function et(e){return null==e?Ze:function(t){return ze(e,t)}}function tt(e,t,n){var r=Array(Math.max(0,e));t=Je(t,n,1);for(var o=0;o<e;o++)r[o]=t(o);return r}function nt(e,t){return null==t&&(t=e,e=0),e+Math.floor(Math.random()*(t-e+1))}le.toPath=Fe,le.iteratee=Xe;const rt=Date.now||function(){return(new Date).getTime()};function ot(e){var t=function(t){return e[t]},n="(?:"+se(e).join("|")+")",r=RegExp(n),o=RegExp(n,"g");return function(e){return e=null==e?"":""+e,r.test(e)?e.replace(o,t):e}}const at={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;"},it=ot(at),st=ot(Ae(at)),ct=le.templateSettings={evaluate:/<%([\s\S]+?)%>/g,interpolate:/<%=([\s\S]+?)%>/g,escape:/<%-([\s\S]+?)%>/g};var ut=/(.)^/,lt={"'":"'","\\":"\\","\r":"r","\n":"n","\u2028":"u2028","\u2029":"u2029"},dt=/\\|'|\r|\n|\u2028|\u2029/g;function pt(e){return"\\"+lt[e]}function ht(e,t,n){!t&&n&&(t=n),t=Te({},t,le.templateSettings);var r,o=RegExp([(t.escape||ut).source,(t.interpolate||ut).source,(t.evaluate||ut).source].join("|")+"|$","g"),a=0,i="__p+='";e.replace(o,(function(t,n,r,o,s){return i+=e.slice(a,s).replace(dt,pt),a=s+t.length,n?i+="'+\n((__t=("+n+"))==null?'':_.escape(__t))+\n'":r?i+="'+\n((__t=("+r+"))==null?'':__t)+\n'":o&&(i+="';\n"+o+"\n__p+='"),t})),i+="';\n",t.variable||(i="with(obj||{}){\n"+i+"}\n"),i="var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n"+i+"return __p;\n";try{r=new Function(t.variable||"obj","_",i)}catch(e){throw e.source=i,e}var s=function(e){return r.call(this,e,le)},c=t.variable||"obj";return s.source="function("+c+"){\n"+i+"}",s}function ft(e,t,n){var r=(t=Ge(t)).length;if(!r)return F(n)?n.call(e):n;for(var o=0;o<r;o++){var a=null==e?void 0:e[t[o]];void 0===a&&(a=n,o=r),e=F(a)?a.call(e):a}return e}var gt=0;function mt(e){var t=++gt+"";return e?e+t:t}function vt(e){var t=le(e);return t._chain=!0,t}function yt(e,t,n,r,o){if(!(r instanceof t))return e.apply(n,o);var a=Be(e.prototype),i=e.apply(a,o);return S(i)?i:a}var bt=P((function(e,t){var n=bt.placeholder,r=function(){for(var o=0,a=t.length,i=Array(a),s=0;s<a;s++)i[s]=t[s]===n?arguments[o++]:t[s];for(;o<arguments.length;)i.push(arguments[o++]);return yt(e,r,this,this,i)};return r}));bt.placeholder=le;const wt=bt,_t=P((function(e,t,n){if(!F(e))throw new TypeError("Bind must be called on a function");var r=P((function(o){return yt(e,r,t,this,n.concat(o))}));return r})),xt=Z(ae);function kt(e,t,n,r){if(r=r||[],t||0===t){if(t<=0)return r.concat(e)}else t=1/0;for(var o=r.length,a=0,i=ae(e);a<i;a++){var s=e[a];if(xt(s)&&(V(s)||Q(s)))if(t>1)kt(s,t-1,n,r),o=r.length;else for(var c=0,u=s.length;c<u;)r[o++]=s[c++];else n||(r[o++]=s)}return r}const Pt=P((function(e,t){var n=(t=kt(t,!1,!1)).length;if(n<1)throw new Error("bindAll must be passed function names");for(;n--;){var r=t[n];e[r]=_t(e[r],e)}return e}));function St(e,t){var n=function(r){var o=n.cache,a=""+(t?t.apply(this,arguments):r);return H(o,a)||(o[a]=e.apply(this,arguments)),o[a]};return n.cache={},n}const Ct=P((function(e,t,n){return setTimeout((function(){return e.apply(null,n)}),t)})),Dt=wt(Ct,le,1);function Et(e,t,n){var r,o,a,i,s=0;n||(n={});var c=function(){s=!1===n.leading?0:rt(),r=null,i=e.apply(o,a),r||(o=a=null)},u=function(){var u=rt();s||!1!==n.leading||(s=u);var l=t-(u-s);return o=this,a=arguments,l<=0||l>t?(r&&(clearTimeout(r),r=null),s=u,i=e.apply(o,a),r||(o=a=null)):r||!1===n.trailing||(r=setTimeout(c,l)),i};return u.cancel=function(){clearTimeout(r),s=0,r=o=a=null},u}function jt(e,t,n){var r,o,a=function(t,n){r=null,n&&(o=e.apply(t,n))},i=P((function(i){if(r&&clearTimeout(r),n){var s=!r;r=setTimeout(a,t),s&&(o=e.apply(this,i))}else r=Ct(a,t,this,i);return o}));return i.cancel=function(){clearTimeout(r),r=null},i}function At(e,t){return wt(t,e)}function It(e){return function(){return!e.apply(this,arguments)}}function Ot(){var e=arguments,t=e.length-1;return function(){for(var n=t,r=e[t].apply(this,arguments);n--;)r=e[n].call(this,r);return r}}function qt(e,t){return function(){if(--e<1)return t.apply(this,arguments)}}function Rt(e,t){var n;return function(){return--e>0&&(n=t.apply(this,arguments)),e<=1&&(t=null),n}}const Tt=wt(Rt,2);function Bt(e,t,n){t=Ye(t,n);for(var r,o=se(e),a=0,i=o.length;a<i;a++)if(t(e[r=o[a]],r,e))return r}function Mt(e){return function(t,n,r){n=Ye(n,r);for(var o=ae(t),a=e>0?0:o-1;a>=0&&a<o;a+=e)if(n(t[a],a,t))return a;return-1}}const Nt=Mt(1),Lt=Mt(-1);function Ft(e,t,n,r){for(var o=(n=Ye(n,r,1))(t),a=0,i=ae(e);a<i;){var s=Math.floor((a+i)/2);n(e[s])<o?a=s+1:i=s}return a}function Gt(e,t,n){return function(r,o,a){var i=0,s=ae(r);if("number"==typeof a)e>0?i=a>=0?a:Math.max(a+s,i):s=a>=0?Math.min(a+1,s):a+s+1;else if(n&&a&&s)return r[a=n(r,o)]===o?a:-1;if(o!=o)return(a=t(l.call(r,i,s),Y))>=0?a+i:-1;for(a=e>0?i:s-1;a>=0&&a<s;a+=e)if(r[a]===o)return a;return-1}}const Ut=Gt(1,Nt,Ft),zt=Gt(-1,Lt);function Wt(e,t,n){var r=(xt(e)?Nt:Bt)(e,t,n);if(void 0!==r&&-1!==r)return e[r]}function $t(e,t){return Wt(e,Ve(t))}function Vt(e,t,n){var r,o;if(t=Je(t,n),xt(e))for(r=0,o=e.length;r<o;r++)t(e[r],r,e);else{var a=se(e);for(r=0,o=a.length;r<o;r++)t(e[a[r]],a[r],e)}return e}function Ht(e,t,n){t=Ye(t,n);for(var r=!xt(e)&&se(e),o=(r||e).length,a=Array(o),i=0;i<o;i++){var s=r?r[i]:i;a[i]=t(e[s],s,e)}return a}function Jt(e){var t=function(t,n,r,o){var a=!xt(t)&&se(t),i=(a||t).length,s=e>0?0:i-1;for(o||(r=t[a?a[s]:s],s+=e);s>=0&&s<i;s+=e){var c=a?a[s]:s;r=n(r,t[c],c,t)}return r};return function(e,n,r,o){var a=arguments.length>=3;return t(e,Je(n,o,4),r,a)}}const Qt=Jt(1),Xt=Jt(-1);function Yt(e,t,n){var r=[];return t=Ye(t,n),Vt(e,(function(e,n,o){t(e,n,o)&&r.push(e)})),r}function Kt(e,t,n){return Yt(e,It(Ye(t)),n)}function Zt(e,t,n){t=Ye(t,n);for(var r=!xt(e)&&se(e),o=(r||e).length,a=0;a<o;a++){var i=r?r[a]:a;if(!t(e[i],i,e))return!1}return!0}function en(e,t,n){t=Ye(t,n);for(var r=!xt(e)&&se(e),o=(r||e).length,a=0;a<o;a++){var i=r?r[a]:a;if(t(e[i],i,e))return!0}return!1}function tn(e,t,n,r){return xt(e)||(e=Ee(e)),("number"!=typeof n||r)&&(n=0),Ut(e,t,n)>=0}const nn=P((function(e,t,n){var r,o;return F(t)?o=t:(t=Ge(t),r=t.slice(0,-1),t=t[t.length-1]),Ht(e,(function(e){var a=o;if(!a){if(r&&r.length&&(e=Ue(e,r)),null==e)return;a=e[t]}return null==a?a:a.apply(e,n)}))}));function rn(e,t){return Ht(e,He(t))}function on(e,t){return Yt(e,Ve(t))}function an(e,t,n){var r,o,a=-1/0,i=-1/0;if(null==t||"number"==typeof t&&"object"!=typeof e[0]&&null!=e)for(var s=0,c=(e=xt(e)?e:Ee(e)).length;s<c;s++)null!=(r=e[s])&&r>a&&(a=r);else t=Ye(t,n),Vt(e,(function(e,n,r){((o=t(e,n,r))>i||o===-1/0&&a===-1/0)&&(a=e,i=o)}));return a}function sn(e,t,n){var r,o,a=1/0,i=1/0;if(null==t||"number"==typeof t&&"object"!=typeof e[0]&&null!=e)for(var s=0,c=(e=xt(e)?e:Ee(e)).length;s<c;s++)null!=(r=e[s])&&r<a&&(a=r);else t=Ye(t,n),Vt(e,(function(e,n,r){((o=t(e,n,r))<i||o===1/0&&a===1/0)&&(a=e,i=o)}));return a}function cn(e,t,n){if(null==t||n)return xt(e)||(e=Ee(e)),e[nt(e.length-1)];var r=xt(e)?Ne(e):Ee(e),o=ae(r);t=Math.max(Math.min(t,o),0);for(var a=o-1,i=0;i<t;i++){var s=nt(i,a),c=r[i];r[i]=r[s],r[s]=c}return r.slice(0,t)}function un(e){return cn(e,1/0)}function ln(e,t,n){var r=0;return t=Ye(t,n),rn(Ht(e,(function(e,n,o){return{value:e,index:r++,criteria:t(e,n,o)}})).sort((function(e,t){var n=e.criteria,r=t.criteria;if(n!==r){if(n>r||void 0===n)return 1;if(n<r||void 0===r)return-1}return e.index-t.index})),"value")}function dn(e,t){return function(n,r,o){var a=t?[[],[]]:{};return r=Ye(r,o),Vt(n,(function(t,o){var i=r(t,o,n);e(a,t,i)})),a}}const pn=dn((function(e,t,n){H(e,n)?e[n].push(t):e[n]=[t]})),hn=dn((function(e,t,n){e[n]=t})),fn=dn((function(e,t,n){H(e,n)?e[n]++:e[n]=1})),gn=dn((function(e,t,n){e[n?0:1].push(t)}),!0);var mn=/[^\ud800-\udfff]|[\ud800-\udbff][\udc00-\udfff]|[\ud800-\udfff]/g;function vn(e){return e?V(e)?l.call(e):I(e)?e.match(mn):xt(e)?Ht(e,$e):Ee(e):[]}function yn(e){return null==e?0:xt(e)?e.length:se(e).length}function bn(e,t,n){return t in n}const wn=P((function(e,t){var n={},r=t[0];if(null==e)return n;F(r)?(t.length>1&&(r=Je(r,t[1])),t=me(e)):(r=bn,t=kt(t,!1,!1),e=Object(e));for(var o=0,a=t.length;o<a;o++){var i=t[o],s=e[i];r(s,i,e)&&(n[i]=s)}return n})),_n=P((function(e,t){var n,r=t[0];return F(r)?(r=It(r),t.length>1&&(n=t[1])):(t=Ht(kt(t,!1,!1),String),r=function(e,n){return!tn(t,n)}),wn(e,r,n)}));function xn(e,t,n){return l.call(e,0,Math.max(0,e.length-(null==t||n?1:t)))}function kn(e,t,n){return null==e||e.length<1?null==t||n?void 0:[]:null==t||n?e[0]:xn(e,e.length-t)}function Pn(e,t,n){return l.call(e,null==t||n?1:t)}function Sn(e,t,n){return null==e||e.length<1?null==t||n?void 0:[]:null==t||n?e[e.length-1]:Pn(e,Math.max(0,e.length-t))}function Cn(e){return Yt(e,Boolean)}function Dn(e,t){return kt(e,t,!1)}const En=P((function(e,t){return t=kt(t,!0,!0),Yt(e,(function(e){return!tn(t,e)}))})),jn=P((function(e,t){return En(e,t)}));function An(e,t,n,r){E(t)||(r=n,n=t,t=!1),null!=n&&(n=Ye(n,r));for(var o=[],a=[],i=0,s=ae(e);i<s;i++){var c=e[i],u=n?n(c,i,e):c;t&&!n?(i&&a===u||o.push(c),a=u):n?tn(a,u)||(a.push(u),o.push(c)):tn(o,c)||o.push(c)}return o}const In=P((function(e){return An(kt(e,!0,!0))}));function On(e){for(var t=[],n=arguments.length,r=0,o=ae(e);r<o;r++){var a=e[r];if(!tn(t,a)){var i;for(i=1;i<n&&tn(arguments[i],a);i++);i===n&&t.push(a)}}return t}function qn(e){for(var t=e&&an(e,ae).length||0,n=Array(t),r=0;r<t;r++)n[r]=rn(e,r);return n}const Rn=P(qn);function Tn(e,t){for(var n={},r=0,o=ae(e);r<o;r++)t?n[e[r]]=t[r]:n[e[r][0]]=e[r][1];return n}function Bn(e,t,n){null==t&&(t=e||0,e=0),n||(n=t<e?-1:1);for(var r=Math.max(Math.ceil((t-e)/n),0),o=Array(r),a=0;a<r;a++,e+=n)o[a]=e;return o}function Mn(e,t){if(null==t||t<1)return[];for(var n=[],r=0,o=e.length;r<o;)n.push(l.call(e,r,r+=t));return n}function Nn(e,t){return e._chain?le(t).chain():t}function Ln(e){return Vt(Ie(e),(function(t){var n=le[t]=e[t];le.prototype[t]=function(){var e=[this._wrapped];return u.apply(e,arguments),Nn(this,n.apply(le,e))}})),le}Vt(["pop","push","reverse","shift","sort","splice","unshift"],(function(e){var t=i[e];le.prototype[e]=function(){var n=this._wrapped;return null!=n&&(t.apply(n,arguments),"shift"!==e&&"splice"!==e||0!==n.length||delete n[0]),Nn(this,n)}})),Vt(["concat","join","slice"],(function(e){var t=i[e];le.prototype[e]=function(){var e=this._wrapped;return null!=e&&(e=t.apply(e,arguments)),Nn(this,e)}}));const Fn=le;var Gn=Ln(r);Gn._=Gn;const Un=Gn},28553:(e,t,n)=>{const r=n(76445),o=n(40372);t.getComponent=()=>{const e=new r.Component;return e.description="Easing function component that takes a normalized value between 0 and 1 and outputs eased value between from and to inputs",e.icon="cogs",e.inPorts.add("from",{datatype:"number",control:!0}),e.inPorts.add("to",{datatype:"number",control:!0}),e.inPorts.add("type",{datatype:"string",values:["linear","in-quad","out-quad","in-out-quad","in-cube","out-cube","in-out-cube","in-quart","out-quart","in-out-quart","in-quint","out-quint","in-out-quint","in-sine","out-sine","in-out-sine","in-expo","out-expo","in-out-expo","in-circ","out-circ","in-out-circ","in-back","out-back","in-out-back","in-bounce","out-bounce","in-out-bounce"],default:"linear",control:!0}),e.inPorts.add("in",{datatype:"number"}),e.outPorts.add("out",{datatype:"number"}),e.process(((e,t)=>{if(!e.hasData("from","to","in"))return;if(e.attached("type").length&&!e.hasData("type"))return;const[n,r,a]=e.getData("from","to","in");let i="linear";e.hasData("type")&&(i=e.getData("type"));const s=n+(o[i]||(e=>e))(a)*(r-n);t.sendDone({out:s})})),e}},51389:(e,t,n)=>{const r=n(76445);t.getComponent=()=>{const e=new r.Component;return e.description="Converts time to normalized value between 0 and 1 for Ease",e.icon="cogs",e.inPorts.add("tick",{datatype:"bang"}),e.inPorts.add("start",{datatype:"bang"}),e.inPorts.add("pause",{datatype:"bang"}),e.inPorts.add("unpause",{datatype:"bang"}),e.inPorts.add("stop",{datatype:"bang"}),e.inPorts.add("duration",{datatype:"number",control:!0}),e.inPorts.add("repeat",{datatype:"number",control:!0}),e.inPorts.add("reverse",{datatype:"boolean",control:!0}),e.inPorts.add("autoreverse",{datatype:"boolean",control:!0}),e.outPorts.add("started",{datatype:"bang"}),e.outPorts.add("stopped",{datatype:"bang"}),e.outPorts.add("paused",{datatype:"bang"}),e.outPorts.add("unpaused",{datatype:"bang"}),e.outPorts.add("value",{datatype:"number"}),e.forwardBrackets={},e.scopes={},e.tearDown=t=>{e.scopes={},t()},e.process(((t,n)=>{if((!t.attached("duration").length||t.hasData("duration"))&&(!t.attached("repeat").length||t.hasData("repeat"))&&(!t.attached("reverse").length||t.hasData("reverse"))&&(!t.attached("autoreverse").length||t.hasData("autoreverse"))){if(t.hasData("start")){t.getData("start");let r=500;t.hasData("duration")&&(r=t.getData("duration"));let o=0;t.hasData("repeat")&&(o=t.getData("repeat"));let a=!1;t.hasData("reverse")&&(a=t.getData("reverse"));let i=!1;return t.hasData("autoreverse")&&(i=t.getData("autoreverse")),e.scopes[t.scope]={running:!0,duration:r,repeat:o,autoreverse:i,lastTime:Date.now(),elapsedTime:0,direction:!a},void n.send({started:!0})}if(t.hasData("stop"))return t.getData("stop"),e.scopes[t.scope]&&delete e.scopes[t.scope],void n.sendDone({stopped:!0});if(t.hasData("pause"))return t.getData("pause"),(null!=e.scopes[t.scope]?e.scopes[t.scope].running:void 0)?(e.scopes[t.scope].running=!1,void n.sendDone({paused:!0})):void n.done();if(t.hasData("unpause"))return t.getData("unpause"),e.scopes[t.scope]?e.scopes[t.scope].running?void n.done():(e.scopes[t.scope].running=!0,void n.sendDone({unpaused:!0})):void n.done();if(t.hasData("tick")){if(t.getData("tick"),!(null!=e.scopes[t.scope]?e.scopes[t.scope].running:void 0))return void n.done();!function(e,t){if(!e.running)return void t(null);const n=Date.now(),r=n-e.lastTime;if(e.lastTime=n,e.elapsedTime+=r,function(e){return!(e.repeat>0||e.elapsedTime<e.duration)}(e))return e.running=!1,e.elapsedTime=e.duration,void t(null);e.elapsedTime<e.duration||(e.elapsedTime-=e.duration,e.autoreverse&&(e.direction=!e.direction),e.repeat>0&&(e.repeat-=1)),t(function(e){let t=e.elapsedTime/e.duration;return e.direction||(t=1-t),t}(e))}(e.scopes[t.scope],(e=>{null!==e?n.sendDone({value:e}):n.done()}))}}})),e}},13759:(e,t,n)=>{const r=n(76445),o=n(11227)("noflo-tween:timeline");t.getComponent=()=>{const e=new r.Component;return e.icon="play",e.description="Execute a timeline",e.inPorts.add("timeline",{datatype:"object",description:"Timeline definition",required:!0}),e.inPorts.add("start",{datatype:"bang",description:"Start executing the timeline"}),e.inPorts.add("tick",{datatype:"bang",description:"Send track commands due this time"}),e.outPorts.add("started",{datatype:"bang"}),e.outPorts.add("finished",{datatype:"bang"}),e.outPorts.add("command",{datatype:"all",addressable:!0}),e.outPorts.add("error",{datatype:"object"}),e.state={},e.tearDown=t=>{e.state={},t()},e.process(((t,n,a)=>{if(!t.hasData("timeline")||(e.state.timelineDefinition=t.getData("timeline"),t.hasData("start"))){if(t.hasData("start")&&e.state.timelineDefinition)return t.getData("start"),e.state.running?void n.done(new Error("Timeline is already running")):(e.state.running=!0,e.state.startTime=new Date,e.state.endTime=new Date,e.state.endTime.setTime(e.state.endTime.getTime()+1e3*e.state.timelineDefinition.total_time),e.state.tracks=JSON.parse(JSON.stringify(e.state.timelineDefinition)).tracks,e.state.context=a,void n.send({started:e.state.startTime}));if(t.hasData("tick")){if(t.getData("tick"),!e.state.running)return void n.done(new Error("Timeline is not running"));const a=new Date,i=(a.getTime()-e.state.startTime.getTime())/1e3;e.state.tracks.forEach(((t,a)=>{const s={};Object.keys(t.commands).forEach((c=>{parseInt(c,10)<=i?t.commands[c].forEach((t=>{let s=t;"string"==typeof t&&(s=function(e,t){return e.replace("__START__",t.startTime.toISOString()).replace("__END__",t.endTime.toISOString()).replace("__ELAPSED__",parseInt(t.elapsed,10))}(s,{startTime:e.state.startTime,endTime:e.state.endTime,elapsed:i})),o(`At ${i}s: send to ${a}: '${s}'`),n.send({command:new r.IP("data",s,{index:a})})})):s[c]=t.commands[c]})),e.state.tracks[a].commands=s})),a>=e.state.endTime?(o(`At ${i}s: timeline finished`),e.state.context.deactivate(),e.state={timelineDefinition:e.state.timelineDefinition},n.sendDone({finished:!0})):n.done()}}else n.done()})),e}},26903:(e,t,n)=>{"use strict";var r=n(34155);function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}t.log=function(){var e;return"object"===("undefined"==typeof console?"undefined":o(console))&&console.log&&(e=console).log.apply(e,arguments)},t.formatArgs=function(t){if(t[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+t[0]+(this.useColors?"%c ":" ")+"+"+e.exports.humanize(this.diff),this.useColors){var n="color: "+this.color;t.splice(1,0,n,"color: inherit");var r=0,o=0;t[0].replace(/%[a-zA-Z%]/g,(function(e){"%%"!==e&&(r++,"%c"===e&&(o=r))})),t.splice(o,0,n)}},t.save=function(e){try{e?t.storage.setItem("debug",e):t.storage.removeItem("debug")}catch(e){}},t.load=function(){var e;try{e=t.storage.getItem("debug")}catch(e){}return!e&&void 0!==r&&"env"in r&&(e=r.env.DEBUG),e},t.useColors=function(){return!("undefined"==typeof window||!window.process||"renderer"!==window.process.type&&!window.process.__nwjs)||("undefined"==typeof navigator||!navigator.userAgent||!navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))&&("undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/))},t.storage=function(){try{return localStorage}catch(e){}}(),t.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],e.exports=n(91864)(t),e.exports.formatters.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}}},91864:(e,t,n)=>{"use strict";e.exports=function(e){function t(e){for(var t=0,n=0;n<e.length;n++)t=(t<<5)-t+e.charCodeAt(n),t|=0;return r.colors[Math.abs(t)%r.colors.length]}function r(e){var n;function i(){if(i.enabled){for(var e=arguments.length,t=new Array(e),o=0;o<e;o++)t[o]=arguments[o];var a=i,s=Number(new Date),c=s-(n||s);a.diff=c,a.prev=n,a.curr=s,n=s,t[0]=r.coerce(t[0]),"string"!=typeof t[0]&&t.unshift("%O");var u=0;t[0]=t[0].replace(/%([a-zA-Z%])/g,(function(e,n){if("%%"===e)return e;u++;var o=r.formatters[n];if("function"==typeof o){var i=t[u];e=o.call(a,i),t.splice(u,1),u--}return e})),r.formatArgs.call(a,t);var l=a.log||r.log;l.apply(a,t)}}return i.namespace=e,i.enabled=r.enabled(e),i.useColors=r.useColors(),i.color=t(e),i.destroy=o,i.extend=a,"function"==typeof r.init&&r.init(i),r.instances.push(i),i}function o(){var e=r.instances.indexOf(this);return-1!==e&&(r.instances.splice(e,1),!0)}function a(e,t){return r(this.namespace+(void 0===t?":":t)+e)}return r.debug=r,r.default=r,r.coerce=function(e){return e instanceof Error?e.stack||e.message:e},r.disable=function(){r.enable("")},r.enable=function(e){var t;r.save(e),r.names=[],r.skips=[];var n=("string"==typeof e?e:"").split(/[\s,]+/),o=n.length;for(t=0;t<o;t++)n[t]&&("-"===(e=n[t].replace(/\*/g,".*?"))[0]?r.skips.push(new RegExp("^"+e.substr(1)+"$")):r.names.push(new RegExp("^"+e+"$")));for(t=0;t<r.instances.length;t++){var a=r.instances[t];a.enabled=r.enabled(a.namespace)}},r.enabled=function(e){if("*"===e[e.length-1])return!0;var t,n;for(t=0,n=r.skips.length;t<n;t++)if(r.skips[t].test(e))return!1;for(t=0,n=r.names.length;t<n;t++)if(r.names[t].test(e))return!0;return!1},r.humanize=n(57824),Object.keys(e).forEach((function(t){r[t]=e[t]})),r.instances=[],r.names=[],r.skips=[],r.formatters={},r.selectColor=t,r.enable(r.load()),r}},30778:(e,t,n)=>{var r=n(52479);function o(e){var t=function(){return t.called?t.value:(t.called=!0,t.value=e.apply(this,arguments))};return t.called=!1,t}function a(e){var t=function(){if(t.called)throw new Error(t.onceError);return t.called=!0,t.value=e.apply(this,arguments)},n=e.name||"Function wrapped with `once`";return t.onceError=n+" shouldn't be called more than once",t.called=!1,t}e.exports=r(o),e.exports.strict=r(a),o.proto=o((function(){Object.defineProperty(Function.prototype,"once",{value:function(){return o(this)},configurable:!0}),Object.defineProperty(Function.prototype,"onceStrict",{value:function(){return a(this)},configurable:!0})}))},76414:(e,t,n)=>{function r(){}function o(e){return"object"==typeof e?(r.prototype=e,new r):e}var a=[];function i(e){for(var t in e)this[t]=e[t]}function s(){this.copiedObjects=[];var e=this;this.recursiveDeepCopy=function(t){return e.deepCopy(t)},this.depth=0}function c(e,t){var n=new s;return t&&(n.maxDepth=t),n.deepCopy(e)}i.prototype={constructor:i,canCopy:function(e){return!1},create:function(e){},populate:function(e,t,n){}},s.prototype={constructor:s,maxDepth:256,cacheResult:function(e,t){this.copiedObjects.push([e,t])},getCachedResult:function(e){for(var t=this.copiedObjects,n=t.length,r=0;r<n;r++)if(t[r][0]===e)return t[r][1]},deepCopy:function(e){if(null===e)return null;if("object"!=typeof e)return e;var t=this.getCachedResult(e);if(t)return t;for(var n=0;n<a.length;n++){var r=a[n];if(r.canCopy(e))return this.applyDeepCopier(r,e)}throw new Error("no DeepCopier is able to copy "+e)},applyDeepCopier:function(e,t){var n=e.create(t);if(this.cacheResult(t,n),this.depth++,this.depth>this.maxDepth)throw new Error("Exceeded max recursion depth in deep copy.");return e.populate(this.recursiveDeepCopy,t,n),this.depth--,n}},c.DeepCopier=i,c.deepCopiers=a,c.register=function(e){e instanceof i||(e=new i(e)),a.unshift(e)},c.register({canCopy:function(e){return!0},create:function(e){return e.hasOwnProperty&&e instanceof e.constructor?o(e.constructor.prototype):{}},populate:function(e,t,n){for(var r in t)t.hasOwnProperty&&t.hasOwnProperty(r)&&(n[r]=e(t[r]));return n}}),c.register({canCopy:function(e){return e instanceof Array},create:function(e){return new e.constructor},populate:function(e,t,n){for(var r=0;r<t.length;r++)n.push(e(t[r]));return n}}),c.register({canCopy:function(e){return e instanceof Date},create:function(e){return new Date(e)}});var u=n(17187).EventEmitter;c.register({canCopy:function(e){return e instanceof u},create:function(e){return e.hasOwnProperty&&e instanceof e.constructor?o(e.constructor.prototype):{}},populate:function(e,t,n){for(var r in t)t.hasOwnProperty&&!t.hasOwnProperty(r)||(n[r]=e(t[r]));return n}}),c.register({canCopy:function(e){return!1},create:function(e){return e===document?document:e.cloneNode(!1)},populate:function(e,t,n){if(t===document)return document;if(t.childNodes&&t.childNodes.length)for(var r=0;r<t.childNodes.length;r++){var o=e(t.childNodes[r]);n.appendChild(o)}}}),t.DeepCopyAlgorithm=s,t.copy=function(e){if("object"!=typeof e)return e;var t=e.valueOf();if(e!=t)return new e.constructor(t);if(e instanceof e.constructor&&e.constructor!==Object){var n=o(e.constructor.prototype);for(var r in e)e.hasOwnProperty(r)&&(n[r]=e[r])}else for(var r in n={},e)n[r]=e[r];return n},t.clone=o,t.deepCopy=c},26470:(e,t,n)=>{"use strict";var r=n(34155);function o(e){if("string"!=typeof e)throw new TypeError("Path must be a string. Received "+JSON.stringify(e))}function a(e,t){for(var n,r="",o=0,a=-1,i=0,s=0;s<=e.length;++s){if(s<e.length)n=e.charCodeAt(s);else{if(47===n)break;n=47}if(47===n){if(a===s-1||1===i);else if(a!==s-1&&2===i){if(r.length<2||2!==o||46!==r.charCodeAt(r.length-1)||46!==r.charCodeAt(r.length-2))if(r.length>2){var c=r.lastIndexOf("/");if(c!==r.length-1){-1===c?(r="",o=0):o=(r=r.slice(0,c)).length-1-r.lastIndexOf("/"),a=s,i=0;continue}}else if(2===r.length||1===r.length){r="",o=0,a=s,i=0;continue}t&&(r.length>0?r+="/..":r="..",o=2)}else r.length>0?r+="/"+e.slice(a+1,s):r=e.slice(a+1,s),o=s-a-1;a=s,i=0}else 46===n&&-1!==i?++i:i=-1}return r}var i={resolve:function(){for(var e,t="",n=!1,i=arguments.length-1;i>=-1&&!n;i--){var s;i>=0?s=arguments[i]:(void 0===e&&(e=r.cwd()),s=e),o(s),0!==s.length&&(t=s+"/"+t,n=47===s.charCodeAt(0))}return t=a(t,!n),n?t.length>0?"/"+t:"/":t.length>0?t:"."},normalize:function(e){if(o(e),0===e.length)return".";var t=47===e.charCodeAt(0),n=47===e.charCodeAt(e.length-1);return 0!==(e=a(e,!t)).length||t||(e="."),e.length>0&&n&&(e+="/"),t?"/"+e:e},isAbsolute:function(e){return o(e),e.length>0&&47===e.charCodeAt(0)},join:function(){if(0===arguments.length)return".";for(var e,t=0;t<arguments.length;++t){var n=arguments[t];o(n),n.length>0&&(void 0===e?e=n:e+="/"+n)}return void 0===e?".":i.normalize(e)},relative:function(e,t){if(o(e),o(t),e===t)return"";if((e=i.resolve(e))===(t=i.resolve(t)))return"";for(var n=1;n<e.length&&47===e.charCodeAt(n);++n);for(var r=e.length,a=r-n,s=1;s<t.length&&47===t.charCodeAt(s);++s);for(var c=t.length-s,u=a<c?a:c,l=-1,d=0;d<=u;++d){if(d===u){if(c>u){if(47===t.charCodeAt(s+d))return t.slice(s+d+1);if(0===d)return t.slice(s+d)}else a>u&&(47===e.charCodeAt(n+d)?l=d:0===d&&(l=0));break}var p=e.charCodeAt(n+d);if(p!==t.charCodeAt(s+d))break;47===p&&(l=d)}var h="";for(d=n+l+1;d<=r;++d)d!==r&&47!==e.charCodeAt(d)||(0===h.length?h+="..":h+="/..");return h.length>0?h+t.slice(s+l):(s+=l,47===t.charCodeAt(s)&&++s,t.slice(s))},_makeLong:function(e){return e},dirname:function(e){if(o(e),0===e.length)return".";for(var t=e.charCodeAt(0),n=47===t,r=-1,a=!0,i=e.length-1;i>=1;--i)if(47===(t=e.charCodeAt(i))){if(!a){r=i;break}}else a=!1;return-1===r?n?"/":".":n&&1===r?"//":e.slice(0,r)},basename:function(e,t){if(void 0!==t&&"string"!=typeof t)throw new TypeError('"ext" argument must be a string');o(e);var n,r=0,a=-1,i=!0;if(void 0!==t&&t.length>0&&t.length<=e.length){if(t.length===e.length&&t===e)return"";var s=t.length-1,c=-1;for(n=e.length-1;n>=0;--n){var u=e.charCodeAt(n);if(47===u){if(!i){r=n+1;break}}else-1===c&&(i=!1,c=n+1),s>=0&&(u===t.charCodeAt(s)?-1==--s&&(a=n):(s=-1,a=c))}return r===a?a=c:-1===a&&(a=e.length),e.slice(r,a)}for(n=e.length-1;n>=0;--n)if(47===e.charCodeAt(n)){if(!i){r=n+1;break}}else-1===a&&(i=!1,a=n+1);return-1===a?"":e.slice(r,a)},extname:function(e){o(e);for(var t=-1,n=0,r=-1,a=!0,i=0,s=e.length-1;s>=0;--s){var c=e.charCodeAt(s);if(47!==c)-1===r&&(a=!1,r=s+1),46===c?-1===t?t=s:1!==i&&(i=1):-1!==t&&(i=-1);else if(!a){n=s+1;break}}return-1===t||-1===r||0===i||1===i&&t===r-1&&t===n+1?"":e.slice(t,r)},format:function(e){if(null===e||"object"!=typeof e)throw new TypeError('The "pathObject" argument must be of type Object. Received type '+typeof e);return function(e,t){var n=t.dir||t.root,r=t.base||(t.name||"")+(t.ext||"");return n?n===t.root?n+r:n+"/"+r:r}(0,e)},parse:function(e){o(e);var t={root:"",dir:"",base:"",ext:"",name:""};if(0===e.length)return t;var n,r=e.charCodeAt(0),a=47===r;a?(t.root="/",n=1):n=0;for(var i=-1,s=0,c=-1,u=!0,l=e.length-1,d=0;l>=n;--l)if(47!==(r=e.charCodeAt(l)))-1===c&&(u=!1,c=l+1),46===r?-1===i?i=l:1!==d&&(d=1):-1!==i&&(d=-1);else if(!u){s=l+1;break}return-1===i||-1===c||0===d||1===d&&i===c-1&&i===s+1?-1!==c&&(t.base=t.name=0===s&&a?e.slice(1,c):e.slice(s,c)):(0===s&&a?(t.name=e.slice(1,i),t.base=e.slice(1,c)):(t.name=e.slice(s,i),t.base=e.slice(s,c)),t.ext=e.slice(i,c)),s>0?t.dir=e.slice(0,s-1):a&&(t.dir="/"),t},sep:"/",delimiter:":",win32:null,posix:null};i.posix=i,e.exports=i},64095:(e,t,n)=>{"use strict";var r=n(34155);function o(e){return"/"===e.charAt(0)}function a(e){var t=/^([a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/]+[^\\\/]+)?([\\\/])?([\s\S]*?)$/.exec(e),n=t[1]||"",r=Boolean(n&&":"!==n.charAt(1));return Boolean(t[2]||r)}e.exports="win32"===r.platform?a:o,e.exports.posix=o,e.exports.win32=a},34155:e=>{var t,n,r=e.exports={};function o(){throw new Error("setTimeout has not been defined")}function a(){throw new Error("clearTimeout has not been defined")}function i(e){if(t===setTimeout)return setTimeout(e,0);if((t===o||!t)&&setTimeout)return t=setTimeout,setTimeout(e,0);try{return t(e,0)}catch(n){try{return t.call(null,e,0)}catch(n){return t.call(this,e,0)}}}!function(){try{t="function"==typeof setTimeout?setTimeout:o}catch(e){t=o}try{n="function"==typeof clearTimeout?clearTimeout:a}catch(e){n=a}}();var s,c=[],u=!1,l=-1;function d(){u&&s&&(u=!1,s.length?c=s.concat(c):l=-1,c.length&&p())}function p(){if(!u){var e=i(d);u=!0;for(var t=c.length;t;){for(s=c,c=[];++l<t;)s&&s[l].run();l=-1,t=c.length}s=null,u=!1,function(e){if(n===clearTimeout)return clearTimeout(e);if((n===a||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(e);try{n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}(e)}}function h(e,t){this.fun=e,this.array=t}function f(){}r.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];c.push(new h(e,t)),1!==c.length||u||i(p)},h.prototype.run=function(){this.fun.apply(null,this.array)},r.title="browser",r.browser=!0,r.env={},r.argv=[],r.version="",r.versions={},r.on=f,r.addListener=f,r.once=f,r.off=f,r.removeListener=f,r.removeAllListeners=f,r.emit=f,r.prependListener=f,r.prependOnceListener=f,r.listeners=function(e){return[]},r.binding=function(e){throw new Error("process.binding is not supported")},r.cwd=function(){return"/"},r.chdir=function(e){throw new Error("process.chdir is not supported")},r.umask=function(){return 0}},54375:e=>{let t;e.exports="function"==typeof queueMicrotask?queueMicrotask.bind(globalThis):e=>(t||(t=Promise.resolve())).then(e).catch((e=>setTimeout((()=>{throw e}),0)))},61798:(e,t,n)=>{"use strict";var r=n(34155),o=65536,a=n(89509).Buffer,i=n.g.crypto||n.g.msCrypto;i&&i.getRandomValues?e.exports=function(e,t){if(e>4294967295)throw new RangeError("requested too many random bytes");var n=a.allocUnsafe(e);if(e>0)if(e>o)for(var s=0;s<e;s+=o)i.getRandomValues(n.slice(s,s+o));else i.getRandomValues(n);return"function"==typeof t?r.nextTick((function(){t(null,n)})):n}:e.exports=function(){throw new Error("Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11")}},94281:e=>{"use strict";var t={};function n(e,n,r){r||(r=Error);var o=function(e){var t,r;function o(t,r,o){return e.call(this,function(e,t,r){return"string"==typeof n?n:n(e,t,r)}(t,r,o))||this}return r=e,(t=o).prototype=Object.create(r.prototype),t.prototype.constructor=t,t.__proto__=r,o}(r);o.prototype.name=r.name,o.prototype.code=e,t[e]=o}function r(e,t){if(Array.isArray(e)){var n=e.length;return e=e.map((function(e){return String(e)})),n>2?"one of ".concat(t," ").concat(e.slice(0,n-1).join(", "),", or ")+e[n-1]:2===n?"one of ".concat(t," ").concat(e[0]," or ").concat(e[1]):"of ".concat(t," ").concat(e[0])}return"of ".concat(t," ").concat(String(e))}n("ERR_INVALID_OPT_VALUE",(function(e,t){return'The value "'+t+'" is invalid for option "'+e+'"'}),TypeError),n("ERR_INVALID_ARG_TYPE",(function(e,t,n){var o,a,i,s,c;if("string"==typeof t&&(a="not ",t.substr(0,a.length)===a)?(o="must not be",t=t.replace(/^not /,"")):o="must be",function(e,t,n){return(void 0===n||n>e.length)&&(n=e.length),e.substring(n-t.length,n)===t}(e," argument"))i="The ".concat(e," ").concat(o," ").concat(r(t,"type"));else{var u=("number"!=typeof c&&(c=0),c+".".length>(s=e).length||-1===s.indexOf(".",c)?"argument":"property");i='The "'.concat(e,'" ').concat(u," ").concat(o," ").concat(r(t,"type"))}return i+". Received type ".concat(typeof n)}),TypeError),n("ERR_STREAM_PUSH_AFTER_EOF","stream.push() after EOF"),n("ERR_METHOD_NOT_IMPLEMENTED",(function(e){return"The "+e+" method is not implemented"})),n("ERR_STREAM_PREMATURE_CLOSE","Premature close"),n("ERR_STREAM_DESTROYED",(function(e){return"Cannot call "+e+" after a stream was destroyed"})),n("ERR_MULTIPLE_CALLBACK","Callback called multiple times"),n("ERR_STREAM_CANNOT_PIPE","Cannot pipe, not readable"),n("ERR_STREAM_WRITE_AFTER_END","write after end"),n("ERR_STREAM_NULL_VALUES","May not write null values to stream",TypeError),n("ERR_UNKNOWN_ENCODING",(function(e){return"Unknown encoding: "+e}),TypeError),n("ERR_STREAM_UNSHIFT_AFTER_END_EVENT","stream.unshift() after end event"),e.exports.q=t},56753:(e,t,n)=>{"use strict";var r=n(34155),o=Object.keys||function(e){var t=[];for(var n in e)t.push(n);return t};e.exports=l;var a=n(79481),i=n(64229);n(35717)(l,a);for(var s=o(i.prototype),c=0;c<s.length;c++){var u=s[c];l.prototype[u]||(l.prototype[u]=i.prototype[u])}function l(e){if(!(this instanceof l))return new l(e);a.call(this,e),i.call(this,e),this.allowHalfOpen=!0,e&&(!1===e.readable&&(this.readable=!1),!1===e.writable&&(this.writable=!1),!1===e.allowHalfOpen&&(this.allowHalfOpen=!1,this.once("end",d)))}function d(){this._writableState.ended||r.nextTick(p,this)}function p(e){e.end()}Object.defineProperty(l.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),Object.defineProperty(l.prototype,"writableBuffer",{enumerable:!1,get:function(){return this._writableState&&this._writableState.getBuffer()}}),Object.defineProperty(l.prototype,"writableLength",{enumerable:!1,get:function(){return this._writableState.length}}),Object.defineProperty(l.prototype,"destroyed",{enumerable:!1,get:function(){return void 0!==this._readableState&&void 0!==this._writableState&&this._readableState.destroyed&&this._writableState.destroyed},set:function(e){void 0!==this._readableState&&void 0!==this._writableState&&(this._readableState.destroyed=e,this._writableState.destroyed=e)}})},82725:(e,t,n)=>{"use strict";e.exports=o;var r=n(74605);function o(e){if(!(this instanceof o))return new o(e);r.call(this,e)}n(35717)(o,r),o.prototype._transform=function(e,t,n){n(null,e)}},79481:(e,t,n)=>{"use strict";var r,o=n(34155);e.exports=S,S.ReadableState=P,n(17187).EventEmitter;var a,i=function(e,t){return e.listeners(t).length},s=n(22503),c=n(48764).Buffer,u=n.g.Uint8Array||function(){},l=n(14863);a=l&&l.debuglog?l.debuglog("stream"):function(){};var d,p,h,f=n(57327),g=n(61195),m=n(82457).getHighWaterMark,v=n(94281).q,y=v.ERR_INVALID_ARG_TYPE,b=v.ERR_STREAM_PUSH_AFTER_EOF,w=v.ERR_METHOD_NOT_IMPLEMENTED,_=v.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;n(35717)(S,s);var x=g.errorOrDestroy,k=["error","close","destroy","pause","resume"];function P(e,t,o){r=r||n(56753),e=e||{},"boolean"!=typeof o&&(o=t instanceof r),this.objectMode=!!e.objectMode,o&&(this.objectMode=this.objectMode||!!e.readableObjectMode),this.highWaterMark=m(this,e,"readableHighWaterMark",o),this.buffer=new f,this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.resumeScheduled=!1,this.paused=!0,this.emitClose=!1!==e.emitClose,this.autoDestroy=!!e.autoDestroy,this.destroyed=!1,this.defaultEncoding=e.defaultEncoding||"utf8",this.awaitDrain=0,this.readingMore=!1,this.decoder=null,this.encoding=null,e.encoding&&(d||(d=n(32553).s),this.decoder=new d(e.encoding),this.encoding=e.encoding)}function S(e){if(r=r||n(56753),!(this instanceof S))return new S(e);var t=this instanceof r;this._readableState=new P(e,this,t),this.readable=!0,e&&("function"==typeof e.read&&(this._read=e.read),"function"==typeof e.destroy&&(this._destroy=e.destroy)),s.call(this)}function C(e,t,n,r,o){a("readableAddChunk",t);var i,s=e._readableState;if(null===t)s.reading=!1,function(e,t){if(a("onEofChunk"),!t.ended){if(t.decoder){var n=t.decoder.end();n&&n.length&&(t.buffer.push(n),t.length+=t.objectMode?1:n.length)}t.ended=!0,t.sync?A(e):(t.needReadable=!1,t.emittedReadable||(t.emittedReadable=!0,I(e)))}}(e,s);else if(o||(i=function(e,t){var n,r;return r=t,c.isBuffer(r)||r instanceof u||"string"==typeof t||void 0===t||e.objectMode||(n=new y("chunk",["string","Buffer","Uint8Array"],t)),n}(s,t)),i)x(e,i);else if(s.objectMode||t&&t.length>0)if("string"==typeof t||s.objectMode||Object.getPrototypeOf(t)===c.prototype||(t=function(e){return c.from(e)}(t)),r)s.endEmitted?x(e,new _):D(e,s,t,!0);else if(s.ended)x(e,new b);else{if(s.destroyed)return!1;s.reading=!1,s.decoder&&!n?(t=s.decoder.write(t),s.objectMode||0!==t.length?D(e,s,t,!1):O(e,s)):D(e,s,t,!1)}else r||(s.reading=!1,O(e,s));return!s.ended&&(s.length<s.highWaterMark||0===s.length)}function D(e,t,n,r){t.flowing&&0===t.length&&!t.sync?(t.awaitDrain=0,e.emit("data",n)):(t.length+=t.objectMode?1:n.length,r?t.buffer.unshift(n):t.buffer.push(n),t.needReadable&&A(e)),O(e,t)}Object.defineProperty(S.prototype,"destroyed",{enumerable:!1,get:function(){return void 0!==this._readableState&&this._readableState.destroyed},set:function(e){this._readableState&&(this._readableState.destroyed=e)}}),S.prototype.destroy=g.destroy,S.prototype._undestroy=g.undestroy,S.prototype._destroy=function(e,t){t(e)},S.prototype.push=function(e,t){var n,r=this._readableState;return r.objectMode?n=!0:"string"==typeof e&&((t=t||r.defaultEncoding)!==r.encoding&&(e=c.from(e,t),t=""),n=!0),C(this,e,t,!1,n)},S.prototype.unshift=function(e){return C(this,e,null,!0,!1)},S.prototype.isPaused=function(){return!1===this._readableState.flowing},S.prototype.setEncoding=function(e){d||(d=n(32553).s);var t=new d(e);this._readableState.decoder=t,this._readableState.encoding=this._readableState.decoder.encoding;for(var r=this._readableState.buffer.head,o="";null!==r;)o+=t.write(r.data),r=r.next;return this._readableState.buffer.clear(),""!==o&&this._readableState.buffer.push(o),this._readableState.length=o.length,this};var E=1073741824;function j(e,t){return e<=0||0===t.length&&t.ended?0:t.objectMode?1:e!=e?t.flowing&&t.length?t.buffer.head.data.length:t.length:(e>t.highWaterMark&&(t.highWaterMark=function(e){return e>=E?e=E:(e--,e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,e|=e>>>16,e++),e}(e)),e<=t.length?e:t.ended?t.length:(t.needReadable=!0,0))}function A(e){var t=e._readableState;a("emitReadable",t.needReadable,t.emittedReadable),t.needReadable=!1,t.emittedReadable||(a("emitReadable",t.flowing),t.emittedReadable=!0,o.nextTick(I,e))}function I(e){var t=e._readableState;a("emitReadable_",t.destroyed,t.length,t.ended),t.destroyed||!t.length&&!t.ended||(e.emit("readable"),t.emittedReadable=!1),t.needReadable=!t.flowing&&!t.ended&&t.length<=t.highWaterMark,M(e)}function O(e,t){t.readingMore||(t.readingMore=!0,o.nextTick(q,e,t))}function q(e,t){for(;!t.reading&&!t.ended&&(t.length<t.highWaterMark||t.flowing&&0===t.length);){var n=t.length;if(a("maybeReadMore read 0"),e.read(0),n===t.length)break}t.readingMore=!1}function R(e){var t=e._readableState;t.readableListening=e.listenerCount("readable")>0,t.resumeScheduled&&!t.paused?t.flowing=!0:e.listenerCount("data")>0&&e.resume()}function T(e){a("readable nexttick read 0"),e.read(0)}function B(e,t){a("resume",t.reading),t.reading||e.read(0),t.resumeScheduled=!1,e.emit("resume"),M(e),t.flowing&&!t.reading&&e.read(0)}function M(e){var t=e._readableState;for(a("flow",t.flowing);t.flowing&&null!==e.read(););}function N(e,t){return 0===t.length?null:(t.objectMode?n=t.buffer.shift():!e||e>=t.length?(n=t.decoder?t.buffer.join(""):1===t.buffer.length?t.buffer.first():t.buffer.concat(t.length),t.buffer.clear()):n=t.buffer.consume(e,t.decoder),n);var n}function L(e){var t=e._readableState;a("endReadable",t.endEmitted),t.endEmitted||(t.ended=!0,o.nextTick(F,t,e))}function F(e,t){if(a("endReadableNT",e.endEmitted,e.length),!e.endEmitted&&0===e.length&&(e.endEmitted=!0,t.readable=!1,t.emit("end"),e.autoDestroy)){var n=t._writableState;(!n||n.autoDestroy&&n.finished)&&t.destroy()}}function G(e,t){for(var n=0,r=e.length;n<r;n++)if(e[n]===t)return n;return-1}S.prototype.read=function(e){a("read",e),e=parseInt(e,10);var t=this._readableState,n=e;if(0!==e&&(t.emittedReadable=!1),0===e&&t.needReadable&&((0!==t.highWaterMark?t.length>=t.highWaterMark:t.length>0)||t.ended))return a("read: emitReadable",t.length,t.ended),0===t.length&&t.ended?L(this):A(this),null;if(0===(e=j(e,t))&&t.ended)return 0===t.length&&L(this),null;var r,o=t.needReadable;return a("need readable",o),(0===t.length||t.length-e<t.highWaterMark)&&a("length less than watermark",o=!0),t.ended||t.reading?a("reading or ended",o=!1):o&&(a("do read"),t.reading=!0,t.sync=!0,0===t.length&&(t.needReadable=!0),this._read(t.highWaterMark),t.sync=!1,t.reading||(e=j(n,t))),null===(r=e>0?N(e,t):null)?(t.needReadable=t.length<=t.highWaterMark,e=0):(t.length-=e,t.awaitDrain=0),0===t.length&&(t.ended||(t.needReadable=!0),n!==e&&t.ended&&L(this)),null!==r&&this.emit("data",r),r},S.prototype._read=function(e){x(this,new w("_read()"))},S.prototype.pipe=function(e,t){var n=this,r=this._readableState;switch(r.pipesCount){case 0:r.pipes=e;break;case 1:r.pipes=[r.pipes,e];break;default:r.pipes.push(e)}r.pipesCount+=1,a("pipe count=%d opts=%j",r.pipesCount,t);var s=t&&!1===t.end||e===o.stdout||e===o.stderr?g:c;function c(){a("onend"),e.end()}r.endEmitted?o.nextTick(s):n.once("end",s),e.on("unpipe",(function t(o,i){a("onunpipe"),o===n&&i&&!1===i.hasUnpiped&&(i.hasUnpiped=!0,a("cleanup"),e.removeListener("close",h),e.removeListener("finish",f),e.removeListener("drain",u),e.removeListener("error",p),e.removeListener("unpipe",t),n.removeListener("end",c),n.removeListener("end",g),n.removeListener("data",d),l=!0,!r.awaitDrain||e._writableState&&!e._writableState.needDrain||u())}));var u=function(e){return function(){var t=e._readableState;a("pipeOnDrain",t.awaitDrain),t.awaitDrain&&t.awaitDrain--,0===t.awaitDrain&&i(e,"data")&&(t.flowing=!0,M(e))}}(n);e.on("drain",u);var l=!1;function d(t){a("ondata");var o=e.write(t);a("dest.write",o),!1===o&&((1===r.pipesCount&&r.pipes===e||r.pipesCount>1&&-1!==G(r.pipes,e))&&!l&&(a("false write response, pause",r.awaitDrain),r.awaitDrain++),n.pause())}function p(t){a("onerror",t),g(),e.removeListener("error",p),0===i(e,"error")&&x(e,t)}function h(){e.removeListener("finish",f),g()}function f(){a("onfinish"),e.removeListener("close",h),g()}function g(){a("unpipe"),n.unpipe(e)}return n.on("data",d),function(e,t,n){if("function"==typeof e.prependListener)return e.prependListener(t,n);e._events&&e._events.error?Array.isArray(e._events.error)?e._events.error.unshift(n):e._events.error=[n,e._events.error]:e.on(t,n)}(e,"error",p),e.once("close",h),e.once("finish",f),e.emit("pipe",n),r.flowing||(a("pipe resume"),n.resume()),e},S.prototype.unpipe=function(e){var t=this._readableState,n={hasUnpiped:!1};if(0===t.pipesCount)return this;if(1===t.pipesCount)return e&&e!==t.pipes||(e||(e=t.pipes),t.pipes=null,t.pipesCount=0,t.flowing=!1,e&&e.emit("unpipe",this,n)),this;if(!e){var r=t.pipes,o=t.pipesCount;t.pipes=null,t.pipesCount=0,t.flowing=!1;for(var a=0;a<o;a++)r[a].emit("unpipe",this,{hasUnpiped:!1});return this}var i=G(t.pipes,e);return-1===i||(t.pipes.splice(i,1),t.pipesCount-=1,1===t.pipesCount&&(t.pipes=t.pipes[0]),e.emit("unpipe",this,n)),this},S.prototype.on=function(e,t){var n=s.prototype.on.call(this,e,t),r=this._readableState;return"data"===e?(r.readableListening=this.listenerCount("readable")>0,!1!==r.flowing&&this.resume()):"readable"===e&&(r.endEmitted||r.readableListening||(r.readableListening=r.needReadable=!0,r.flowing=!1,r.emittedReadable=!1,a("on readable",r.length,r.reading),r.length?A(this):r.reading||o.nextTick(T,this))),n},S.prototype.addListener=S.prototype.on,S.prototype.removeListener=function(e,t){var n=s.prototype.removeListener.call(this,e,t);return"readable"===e&&o.nextTick(R,this),n},S.prototype.removeAllListeners=function(e){var t=s.prototype.removeAllListeners.apply(this,arguments);return"readable"!==e&&void 0!==e||o.nextTick(R,this),t},S.prototype.resume=function(){var e=this._readableState;return e.flowing||(a("resume"),e.flowing=!e.readableListening,function(e,t){t.resumeScheduled||(t.resumeScheduled=!0,o.nextTick(B,e,t))}(this,e)),e.paused=!1,this},S.prototype.pause=function(){return a("call pause flowing=%j",this._readableState.flowing),!1!==this._readableState.flowing&&(a("pause"),this._readableState.flowing=!1,this.emit("pause")),this._readableState.paused=!0,this},S.prototype.wrap=function(e){var t=this,n=this._readableState,r=!1;for(var o in e.on("end",(function(){if(a("wrapped end"),n.decoder&&!n.ended){var e=n.decoder.end();e&&e.length&&t.push(e)}t.push(null)})),e.on("data",(function(o){a("wrapped data"),n.decoder&&(o=n.decoder.write(o)),n.objectMode&&null==o||(n.objectMode||o&&o.length)&&(t.push(o)||(r=!0,e.pause()))})),e)void 0===this[o]&&"function"==typeof e[o]&&(this[o]=function(t){return function(){return e[t].apply(e,arguments)}}(o));for(var i=0;i<k.length;i++)e.on(k[i],this.emit.bind(this,k[i]));return this._read=function(t){a("wrapped _read",t),r&&(r=!1,e.resume())},this},"function"==typeof Symbol&&(S.prototype[Symbol.asyncIterator]=function(){return void 0===p&&(p=n(45850)),p(this)}),Object.defineProperty(S.prototype,"readableHighWaterMark",{enumerable:!1,get:function(){return this._readableState.highWaterMark}}),Object.defineProperty(S.prototype,"readableBuffer",{enumerable:!1,get:function(){return this._readableState&&this._readableState.buffer}}),Object.defineProperty(S.prototype,"readableFlowing",{enumerable:!1,get:function(){return this._readableState.flowing},set:function(e){this._readableState&&(this._readableState.flowing=e)}}),S._fromList=N,Object.defineProperty(S.prototype,"readableLength",{enumerable:!1,get:function(){return this._readableState.length}}),"function"==typeof Symbol&&(S.from=function(e,t){return void 0===h&&(h=n(15167)),h(S,e,t)})},74605:(e,t,n)=>{"use strict";e.exports=l;var r=n(94281).q,o=r.ERR_METHOD_NOT_IMPLEMENTED,a=r.ERR_MULTIPLE_CALLBACK,i=r.ERR_TRANSFORM_ALREADY_TRANSFORMING,s=r.ERR_TRANSFORM_WITH_LENGTH_0,c=n(56753);function u(e,t){var n=this._transformState;n.transforming=!1;var r=n.writecb;if(null===r)return this.emit("error",new a);n.writechunk=null,n.writecb=null,null!=t&&this.push(t),r(e);var o=this._readableState;o.reading=!1,(o.needReadable||o.length<o.highWaterMark)&&this._read(o.highWaterMark)}function l(e){if(!(this instanceof l))return new l(e);c.call(this,e),this._transformState={afterTransform:u.bind(this),needTransform:!1,transforming:!1,writecb:null,writechunk:null,writeencoding:null},this._readableState.needReadable=!0,this._readableState.sync=!1,e&&("function"==typeof e.transform&&(this._transform=e.transform),"function"==typeof e.flush&&(this._flush=e.flush)),this.on("prefinish",d)}function d(){var e=this;"function"!=typeof this._flush||this._readableState.destroyed?p(this,null,null):this._flush((function(t,n){p(e,t,n)}))}function p(e,t,n){if(t)return e.emit("error",t);if(null!=n&&e.push(n),e._writableState.length)throw new s;if(e._transformState.transforming)throw new i;return e.push(null)}n(35717)(l,c),l.prototype.push=function(e,t){return this._transformState.needTransform=!1,c.prototype.push.call(this,e,t)},l.prototype._transform=function(e,t,n){n(new o("_transform()"))},l.prototype._write=function(e,t,n){var r=this._transformState;if(r.writecb=n,r.writechunk=e,r.writeencoding=t,!r.transforming){var o=this._readableState;(r.needTransform||o.needReadable||o.length<o.highWaterMark)&&this._read(o.highWaterMark)}},l.prototype._read=function(e){var t=this._transformState;null===t.writechunk||t.transforming?t.needTransform=!0:(t.transforming=!0,this._transform(t.writechunk,t.writeencoding,t.afterTransform))},l.prototype._destroy=function(e,t){c.prototype._destroy.call(this,e,(function(e){t(e)}))}},64229:(e,t,n)=>{"use strict";var r,o=n(34155);function a(e){var t=this;this.next=null,this.entry=null,this.finish=function(){!function(e,t,n){var r=e.entry;for(e.entry=null;r;){var o=r.callback;t.pendingcb--,o(undefined),r=r.next}t.corkedRequestsFree.next=e}(t,e)}}e.exports=S,S.WritableState=P;var i,s={deprecate:n(94927)},c=n(22503),u=n(48764).Buffer,l=n.g.Uint8Array||function(){},d=n(61195),p=n(82457).getHighWaterMark,h=n(94281).q,f=h.ERR_INVALID_ARG_TYPE,g=h.ERR_METHOD_NOT_IMPLEMENTED,m=h.ERR_MULTIPLE_CALLBACK,v=h.ERR_STREAM_CANNOT_PIPE,y=h.ERR_STREAM_DESTROYED,b=h.ERR_STREAM_NULL_VALUES,w=h.ERR_STREAM_WRITE_AFTER_END,_=h.ERR_UNKNOWN_ENCODING,x=d.errorOrDestroy;function k(){}function P(e,t,i){r=r||n(56753),e=e||{},"boolean"!=typeof i&&(i=t instanceof r),this.objectMode=!!e.objectMode,i&&(this.objectMode=this.objectMode||!!e.writableObjectMode),this.highWaterMark=p(this,e,"writableHighWaterMark",i),this.finalCalled=!1,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1,this.destroyed=!1;var s=!1===e.decodeStrings;this.decodeStrings=!s,this.defaultEncoding=e.defaultEncoding||"utf8",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=function(e){!function(e,t){var n=e._writableState,r=n.sync,a=n.writecb;if("function"!=typeof a)throw new m;if(function(e){e.writing=!1,e.writecb=null,e.length-=e.writelen,e.writelen=0}(n),t)!function(e,t,n,r,a){--t.pendingcb,n?(o.nextTick(a,r),o.nextTick(I,e,t),e._writableState.errorEmitted=!0,x(e,r)):(a(r),e._writableState.errorEmitted=!0,x(e,r),I(e,t))}(e,n,r,t,a);else{var i=j(n)||e.destroyed;i||n.corked||n.bufferProcessing||!n.bufferedRequest||E(e,n),r?o.nextTick(D,e,n,i,a):D(e,n,i,a)}}(t,e)},this.writecb=null,this.writelen=0,this.bufferedRequest=null,this.lastBufferedRequest=null,this.pendingcb=0,this.prefinished=!1,this.errorEmitted=!1,this.emitClose=!1!==e.emitClose,this.autoDestroy=!!e.autoDestroy,this.bufferedRequestCount=0,this.corkedRequestsFree=new a(this)}function S(e){var t=this instanceof(r=r||n(56753));if(!t&&!i.call(S,this))return new S(e);this._writableState=new P(e,this,t),this.writable=!0,e&&("function"==typeof e.write&&(this._write=e.write),"function"==typeof e.writev&&(this._writev=e.writev),"function"==typeof e.destroy&&(this._destroy=e.destroy),"function"==typeof e.final&&(this._final=e.final)),c.call(this)}function C(e,t,n,r,o,a,i){t.writelen=r,t.writecb=i,t.writing=!0,t.sync=!0,t.destroyed?t.onwrite(new y("write")):n?e._writev(o,t.onwrite):e._write(o,a,t.onwrite),t.sync=!1}function D(e,t,n,r){n||function(e,t){0===t.length&&t.needDrain&&(t.needDrain=!1,e.emit("drain"))}(e,t),t.pendingcb--,r(),I(e,t)}function E(e,t){t.bufferProcessing=!0;var n=t.bufferedRequest;if(e._writev&&n&&n.next){var r=t.bufferedRequestCount,o=new Array(r),i=t.corkedRequestsFree;i.entry=n;for(var s=0,c=!0;n;)o[s]=n,n.isBuf||(c=!1),n=n.next,s+=1;o.allBuffers=c,C(e,t,!0,t.length,o,"",i.finish),t.pendingcb++,t.lastBufferedRequest=null,i.next?(t.corkedRequestsFree=i.next,i.next=null):t.corkedRequestsFree=new a(t),t.bufferedRequestCount=0}else{for(;n;){var u=n.chunk,l=n.encoding,d=n.callback;if(C(e,t,!1,t.objectMode?1:u.length,u,l,d),n=n.next,t.bufferedRequestCount--,t.writing)break}null===n&&(t.lastBufferedRequest=null)}t.bufferedRequest=n,t.bufferProcessing=!1}function j(e){return e.ending&&0===e.length&&null===e.bufferedRequest&&!e.finished&&!e.writing}function A(e,t){e._final((function(n){t.pendingcb--,n&&x(e,n),t.prefinished=!0,e.emit("prefinish"),I(e,t)}))}function I(e,t){var n=j(t);if(n&&(function(e,t){t.prefinished||t.finalCalled||("function"!=typeof e._final||t.destroyed?(t.prefinished=!0,e.emit("prefinish")):(t.pendingcb++,t.finalCalled=!0,o.nextTick(A,e,t)))}(e,t),0===t.pendingcb&&(t.finished=!0,e.emit("finish"),t.autoDestroy))){var r=e._readableState;(!r||r.autoDestroy&&r.endEmitted)&&e.destroy()}return n}n(35717)(S,c),P.prototype.getBuffer=function(){for(var e=this.bufferedRequest,t=[];e;)t.push(e),e=e.next;return t},function(){try{Object.defineProperty(P.prototype,"buffer",{get:s.deprecate((function(){return this.getBuffer()}),"_writableState.buffer is deprecated. Use _writableState.getBuffer instead.","DEP0003")})}catch(e){}}(),"function"==typeof Symbol&&Symbol.hasInstance&&"function"==typeof Function.prototype[Symbol.hasInstance]?(i=Function.prototype[Symbol.hasInstance],Object.defineProperty(S,Symbol.hasInstance,{value:function(e){return!!i.call(this,e)||this===S&&e&&e._writableState instanceof P}})):i=function(e){return e instanceof this},S.prototype.pipe=function(){x(this,new v)},S.prototype.write=function(e,t,n){var r,a=this._writableState,i=!1,s=!a.objectMode&&(r=e,u.isBuffer(r)||r instanceof l);return s&&!u.isBuffer(e)&&(e=function(e){return u.from(e)}(e)),"function"==typeof t&&(n=t,t=null),s?t="buffer":t||(t=a.defaultEncoding),"function"!=typeof n&&(n=k),a.ending?function(e,t){var n=new w;x(e,n),o.nextTick(t,n)}(this,n):(s||function(e,t,n,r){var a;return null===n?a=new b:"string"==typeof n||t.objectMode||(a=new f("chunk",["string","Buffer"],n)),!a||(x(e,a),o.nextTick(r,a),!1)}(this,a,e,n))&&(a.pendingcb++,i=function(e,t,n,r,o,a){if(!n){var i=function(e,t,n){return e.objectMode||!1===e.decodeStrings||"string"!=typeof t||(t=u.from(t,n)),t}(t,r,o);r!==i&&(n=!0,o="buffer",r=i)}var s=t.objectMode?1:r.length;t.length+=s;var c=t.length<t.highWaterMark;if(c||(t.needDrain=!0),t.writing||t.corked){var l=t.lastBufferedRequest;t.lastBufferedRequest={chunk:r,encoding:o,isBuf:n,callback:a,next:null},l?l.next=t.lastBufferedRequest:t.bufferedRequest=t.lastBufferedRequest,t.bufferedRequestCount+=1}else C(e,t,!1,s,r,o,a);return c}(this,a,s,e,t,n)),i},S.prototype.cork=function(){this._writableState.corked++},S.prototype.uncork=function(){var e=this._writableState;e.corked&&(e.corked--,e.writing||e.corked||e.bufferProcessing||!e.bufferedRequest||E(this,e))},S.prototype.setDefaultEncoding=function(e){if("string"==typeof e&&(e=e.toLowerCase()),!(["hex","utf8","utf-8","ascii","binary","base64","ucs2","ucs-2","utf16le","utf-16le","raw"].indexOf((e+"").toLowerCase())>-1))throw new _(e);return this._writableState.defaultEncoding=e,this},Object.defineProperty(S.prototype,"writableBuffer",{enumerable:!1,get:function(){return this._writableState&&this._writableState.getBuffer()}}),Object.defineProperty(S.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),S.prototype._write=function(e,t,n){n(new g("_write()"))},S.prototype._writev=null,S.prototype.end=function(e,t,n){var r=this._writableState;return"function"==typeof e?(n=e,e=null,t=null):"function"==typeof t&&(n=t,t=null),null!=e&&this.write(e,t),r.corked&&(r.corked=1,this.uncork()),r.ending||function(e,t,n){t.ending=!0,I(e,t),n&&(t.finished?o.nextTick(n):e.once("finish",n)),t.ended=!0,e.writable=!1}(this,r,n),this},Object.defineProperty(S.prototype,"writableLength",{enumerable:!1,get:function(){return this._writableState.length}}),Object.defineProperty(S.prototype,"destroyed",{enumerable:!1,get:function(){return void 0!==this._writableState&&this._writableState.destroyed},set:function(e){this._writableState&&(this._writableState.destroyed=e)}}),S.prototype.destroy=d.destroy,S.prototype._undestroy=d.undestroy,S.prototype._destroy=function(e,t){t(e)}},45850:(e,t,n)=>{"use strict";var r,o=n(34155);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var i=n(8610),s=Symbol("lastResolve"),c=Symbol("lastReject"),u=Symbol("error"),l=Symbol("ended"),d=Symbol("lastPromise"),p=Symbol("handlePromise"),h=Symbol("stream");function f(e,t){return{value:e,done:t}}function g(e){var t=e[s];if(null!==t){var n=e[h].read();null!==n&&(e[d]=null,e[s]=null,e[c]=null,t(f(n,!1)))}}function m(e){o.nextTick(g,e)}var v=Object.getPrototypeOf((function(){})),y=Object.setPrototypeOf((a(r={get stream(){return this[h]},next:function(){var e=this,t=this[u];if(null!==t)return Promise.reject(t);if(this[l])return Promise.resolve(f(void 0,!0));if(this[h].destroyed)return new Promise((function(t,n){o.nextTick((function(){e[u]?n(e[u]):t(f(void 0,!0))}))}));var n,r=this[d];if(r)n=new Promise(function(e,t){return function(n,r){e.then((function(){t[l]?n(f(void 0,!0)):t[p](n,r)}),r)}}(r,this));else{var a=this[h].read();if(null!==a)return Promise.resolve(f(a,!1));n=new Promise(this[p])}return this[d]=n,n}},Symbol.asyncIterator,(function(){return this})),a(r,"return",(function(){var e=this;return new Promise((function(t,n){e[h].destroy(null,(function(e){e?n(e):t(f(void 0,!0))}))}))})),r),v);e.exports=function(e){var t,n=Object.create(y,(a(t={},h,{value:e,writable:!0}),a(t,s,{value:null,writable:!0}),a(t,c,{value:null,writable:!0}),a(t,u,{value:null,writable:!0}),a(t,l,{value:e._readableState.endEmitted,writable:!0}),a(t,p,{value:function(e,t){var r=n[h].read();r?(n[d]=null,n[s]=null,n[c]=null,e(f(r,!1))):(n[s]=e,n[c]=t)},writable:!0}),t));return n[d]=null,i(e,(function(e){if(e&&"ERR_STREAM_PREMATURE_CLOSE"!==e.code){var t=n[c];return null!==t&&(n[d]=null,n[s]=null,n[c]=null,t(e)),void(n[u]=e)}var r=n[s];null!==r&&(n[d]=null,n[s]=null,n[c]=null,r(f(void 0,!0))),n[l]=!0})),e.on("readable",m.bind(null,n)),n}},57327:(e,t,n)=>{"use strict";function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=n(48764).Buffer,s=n(14863).inspect,c=s&&s.custom||"inspect";e.exports=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.head=null,this.tail=null,this.length=0}var t,n;return t=e,(n=[{key:"push",value:function(e){var t={data:e,next:null};this.length>0?this.tail.next=t:this.head=t,this.tail=t,++this.length}},{key:"unshift",value:function(e){var t={data:e,next:this.head};0===this.length&&(this.tail=t),this.head=t,++this.length}},{key:"shift",value:function(){if(0!==this.length){var e=this.head.data;return 1===this.length?this.head=this.tail=null:this.head=this.head.next,--this.length,e}}},{key:"clear",value:function(){this.head=this.tail=null,this.length=0}},{key:"join",value:function(e){if(0===this.length)return"";for(var t=this.head,n=""+t.data;t=t.next;)n+=e+t.data;return n}},{key:"concat",value:function(e){if(0===this.length)return i.alloc(0);for(var t,n,r,o=i.allocUnsafe(e>>>0),a=this.head,s=0;a;)t=a.data,n=o,r=s,i.prototype.copy.call(t,n,r),s+=a.data.length,a=a.next;return o}},{key:"consume",value:function(e,t){var n;return e<this.head.data.length?(n=this.head.data.slice(0,e),this.head.data=this.head.data.slice(e)):n=e===this.head.data.length?this.shift():t?this._getString(e):this._getBuffer(e),n}},{key:"first",value:function(){return this.head.data}},{key:"_getString",value:function(e){var t=this.head,n=1,r=t.data;for(e-=r.length;t=t.next;){var o=t.data,a=e>o.length?o.length:e;if(a===o.length?r+=o:r+=o.slice(0,e),0==(e-=a)){a===o.length?(++n,t.next?this.head=t.next:this.head=this.tail=null):(this.head=t,t.data=o.slice(a));break}++n}return this.length-=n,r}},{key:"_getBuffer",value:function(e){var t=i.allocUnsafe(e),n=this.head,r=1;for(n.data.copy(t),e-=n.data.length;n=n.next;){var o=n.data,a=e>o.length?o.length:e;if(o.copy(t,t.length-e,0,a),0==(e-=a)){a===o.length?(++r,n.next?this.head=n.next:this.head=this.tail=null):(this.head=n,n.data=o.slice(a));break}++r}return this.length-=r,t}},{key:c,value:function(e,t){return s(this,function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},t,{depth:0,customInspect:!1}))}}])&&a(t.prototype,n),e}()},61195:(e,t,n)=>{"use strict";var r=n(34155);function o(e,t){i(e,t),a(e)}function a(e){e._writableState&&!e._writableState.emitClose||e._readableState&&!e._readableState.emitClose||e.emit("close")}function i(e,t){e.emit("error",t)}e.exports={destroy:function(e,t){var n=this,s=this._readableState&&this._readableState.destroyed,c=this._writableState&&this._writableState.destroyed;return s||c?(t?t(e):e&&(this._writableState?this._writableState.errorEmitted||(this._writableState.errorEmitted=!0,r.nextTick(i,this,e)):r.nextTick(i,this,e)),this):(this._readableState&&(this._readableState.destroyed=!0),this._writableState&&(this._writableState.destroyed=!0),this._destroy(e||null,(function(e){!t&&e?n._writableState?n._writableState.errorEmitted?r.nextTick(a,n):(n._writableState.errorEmitted=!0,r.nextTick(o,n,e)):r.nextTick(o,n,e):t?(r.nextTick(a,n),t(e)):r.nextTick(a,n)})),this)},undestroy:function(){this._readableState&&(this._readableState.destroyed=!1,this._readableState.reading=!1,this._readableState.ended=!1,this._readableState.endEmitted=!1),this._writableState&&(this._writableState.destroyed=!1,this._writableState.ended=!1,this._writableState.ending=!1,this._writableState.finalCalled=!1,this._writableState.prefinished=!1,this._writableState.finished=!1,this._writableState.errorEmitted=!1)},errorOrDestroy:function(e,t){var n=e._readableState,r=e._writableState;n&&n.autoDestroy||r&&r.autoDestroy?e.destroy(t):e.emit("error",t)}}},8610:(e,t,n)=>{"use strict";var r=n(94281).q.ERR_STREAM_PREMATURE_CLOSE;function o(){}e.exports=function e(t,n,a){if("function"==typeof n)return e(t,null,n);n||(n={}),a=function(e){var t=!1;return function(){if(!t){t=!0;for(var n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];e.apply(this,r)}}}(a||o);var i=n.readable||!1!==n.readable&&t.readable,s=n.writable||!1!==n.writable&&t.writable,c=function(){t.writable||l()},u=t._writableState&&t._writableState.finished,l=function(){s=!1,u=!0,i||a.call(t)},d=t._readableState&&t._readableState.endEmitted,p=function(){i=!1,d=!0,s||a.call(t)},h=function(e){a.call(t,e)},f=function(){var e;return i&&!d?(t._readableState&&t._readableState.ended||(e=new r),a.call(t,e)):s&&!u?(t._writableState&&t._writableState.ended||(e=new r),a.call(t,e)):void 0},g=function(){t.req.on("finish",l)};return function(e){return e.setHeader&&"function"==typeof e.abort}(t)?(t.on("complete",l),t.on("abort",f),t.req?g():t.on("request",g)):s&&!t._writableState&&(t.on("end",c),t.on("close",c)),t.on("end",p),t.on("finish",l),!1!==n.error&&t.on("error",h),t.on("close",f),function(){t.removeListener("complete",l),t.removeListener("abort",f),t.removeListener("request",g),t.req&&t.req.removeListener("finish",l),t.removeListener("end",c),t.removeListener("close",c),t.removeListener("finish",l),t.removeListener("end",p),t.removeListener("error",h),t.removeListener("close",f)}}},15167:e=>{e.exports=function(){throw new Error("Readable.from is not available in the browser")}},59946:(e,t,n)=>{"use strict";var r,o=n(94281).q,a=o.ERR_MISSING_ARGS,i=o.ERR_STREAM_DESTROYED;function s(e){if(e)throw e}function c(e,t,o,a){a=function(e){var t=!1;return function(){t||(t=!0,e.apply(void 0,arguments))}}(a);var s=!1;e.on("close",(function(){s=!0})),void 0===r&&(r=n(8610)),r(e,{readable:t,writable:o},(function(e){if(e)return a(e);s=!0,a()}));var c=!1;return function(t){if(!s&&!c)return c=!0,function(e){return e.setHeader&&"function"==typeof e.abort}(e)?e.abort():"function"==typeof e.destroy?e.destroy():void a(t||new i("pipe"))}}function u(e){e()}function l(e,t){return e.pipe(t)}function d(e){return e.length?"function"!=typeof e[e.length-1]?s:e.pop():s}e.exports=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var r,o=d(t);if(Array.isArray(t[0])&&(t=t[0]),t.length<2)throw new a("streams");var i=t.map((function(e,n){var a=n<t.length-1;return c(e,a,n>0,(function(e){r||(r=e),e&&i.forEach(u),a||(i.forEach(u),o(r))}))}));return t.reduce(l)}},82457:(e,t,n)=>{"use strict";var r=n(94281).q.ERR_INVALID_OPT_VALUE;e.exports={getHighWaterMark:function(e,t,n,o){var a=function(e,t,n){return null!=e.highWaterMark?e.highWaterMark:t?e[n]:null}(t,o,n);if(null!=a){if(!isFinite(a)||Math.floor(a)!==a||a<0)throw new r(o?n:"highWaterMark",a);return Math.floor(a)}return e.objectMode?16:16384}}},22503:(e,t,n)=>{e.exports=n(17187).EventEmitter},88473:(e,t,n)=>{(t=e.exports=n(79481)).Stream=t,t.Readable=t,t.Writable=n(64229),t.Duplex=n(56753),t.Transform=n(74605),t.PassThrough=n(82725),t.finished=n(8610),t.pipeline=n(59946)},97271:function(e){(function(){function t(e){if(e=e||{},this.method=e.method||2,this.colors=e.colors||256,this.initColors=e.initColors||4096,this.initDist=e.initDist||.01,this.distIncr=e.distIncr||.005,this.hueGroups=e.hueGroups||10,this.satGroups=e.satGroups||10,this.lumGroups=e.lumGroups||10,this.minHueCols=e.minHueCols||0,this.hueStats=this.minHueCols?new n(this.hueGroups,this.minHueCols):null,this.boxSize=e.boxSize||[64,64],this.boxPxls=e.boxPxls||2,this.palLocked=!1,this.dithKern=e.dithKern||null,this.dithSerp=e.dithSerp||!1,this.dithDelta=e.dithDelta||0,this.histogram={},this.idxrgb=e.palette?e.palette.slice(0):[],this.idxi32=[],this.i32idx={},this.i32rgb={},this.useCache=!1!==e.useCache,this.cacheFreq=e.cacheFreq||10,this.reIndex=e.reIndex||0==this.idxrgb.length,this.colorDist="manhattan"==e.colorDist?u:c,this.idxrgb.length>0){var t=this;this.idxrgb.forEach((function(e,n){var r=(255<<24|e[2]<<16|e[1]<<8|e[0])>>>0;t.idxi32[n]=r,t.i32idx[r]=n,t.i32rgb[r]=e}))}}function n(e,t){this.numGroups=e,this.minCols=t,this.stats={};for(var n=-1;n<e;n++)this.stats[n]={num:0,cols:[]};this.groupsFull=0}t.prototype.sample=function(e,t){if(this.palLocked)throw"Cannot sample additional images, palette already assembled.";var n=g(e,t);switch(this.method){case 1:this.colorStats1D(n.buf32);break;case 2:this.colorStats2D(n.buf32,n.width)}},t.prototype.reduce=function(e,t,n,r){if(this.palLocked||this.buildPal(),n=n||this.dithKern,r=void 0!==r?r:this.dithSerp,t=t||1,n)var o=this.dither(e,n,r);else for(var a=g(e).buf32,i=a.length,s=(o=new Uint32Array(i),0);s<i;s++){var c=a[s];o[s]=this.nearestColor(c)}if(1==t)return new Uint8Array(o.buffer);if(2==t){var u=[];for(i=o.length,s=0;s<i;s++)c=o[s],u[s]=this.i32idx[c];return u}},t.prototype.dither=function(e,t,n){var r={FloydSteinberg:[[7/16,1,0],[3/16,-1,1],[5/16,0,1],[1/16,1,1]],FalseFloydSteinberg:[[3/8,1,0],[3/8,0,1],[2/8,1,1]],Stucki:[[8/42,1,0],[4/42,2,0],[2/42,-2,1],[4/42,-1,1],[8/42,0,1],[4/42,1,1],[2/42,2,1],[1/42,-2,2],[2/42,-1,2],[4/42,0,2],[2/42,1,2],[1/42,2,2]],Atkinson:[[1/8,1,0],[1/8,2,0],[1/8,-1,1],[1/8,0,1],[1/8,1,1],[1/8,0,2]],Jarvis:[[7/48,1,0],[5/48,2,0],[3/48,-2,1],[5/48,-1,1],[7/48,0,1],[5/48,1,1],[3/48,2,1],[1/48,-2,2],[3/48,-1,2],[5/48,0,2],[3/48,1,2],[1/48,2,2]],Burkes:[[.25,1,0],[4/32,2,0],[2/32,-2,1],[4/32,-1,1],[.25,0,1],[4/32,1,1],[2/32,2,1]],Sierra:[[5/32,1,0],[3/32,2,0],[2/32,-2,1],[4/32,-1,1],[5/32,0,1],[4/32,1,1],[2/32,2,1],[2/32,-1,2],[3/32,0,2],[2/32,1,2]],TwoSierra:[[.25,1,0],[3/16,2,0],[1/16,-2,1],[2/16,-1,1],[3/16,0,1],[2/16,1,1],[1/16,2,1]],SierraLite:[[.5,1,0],[1/4,-1,1],[1/4,0,1]]};if(!t||!r[t])throw"Unknown dithering kernel: "+t;for(var o=r[t],a=g(e),i=a.buf32,s=a.width,c=a.height,u=(i.length,n?-1:1),l=0;l<c;l++){n&&(u*=-1);for(var d=l*s,p=1==u?0:s-1,h=1==u?s:0;p!==h;p+=u){var f=d+p,m=i[f],v=255&m,y=(65280&m)>>8,b=(16711680&m)>>16,w=this.nearestColor(m),_=255&w,x=(65280&w)>>8,k=(16711680&w)>>16;if(i[f]=255<<24|k<<16|x<<8|_,!(this.dithDelta&&this.colorDist([v,y,b],[_,x,k])<this.dithDelta))for(var P=v-_,S=y-x,C=b-k,D=1==u?0:o.length-1,E=1==u?o.length:0;D!==E;D+=u){var j=o[D][1]*u,A=o[D][2],I=A*s;if(j+p>=0&&j+p<s&&A+l>=0&&A+l<c){var O=o[D][0],q=f+(I+j),R=255&i[q],T=(65280&i[q])>>8,B=(16711680&i[q])>>16,M=Math.max(0,Math.min(255,R+P*O)),N=Math.max(0,Math.min(255,T+S*O)),L=Math.max(0,Math.min(255,B+C*O));i[q]=255<<24|L<<16|N<<8|M}}}}return i},t.prototype.buildPal=function(e){if(!(this.palLocked||this.idxrgb.length>0&&this.idxrgb.length<=this.colors)){var t=this.histogram,n=function(e,t){var n=[];for(var r in e)n.push(r);return f.call(n,(function(t,n){return e[n]-e[t]}))}(t);if(0==n.length)throw"Nothing has been sampled, palette cannot be built.";switch(this.method){case 1:for(var r=this.initColors,o=t[n[r-1]],a=n.slice(0,r),i=r,s=n.length;i<s&&t[n[i]]==o;)a.push(n[i++]);this.hueStats&&this.hueStats.inject(a);break;case 2:a=n}a=a.map((function(e){return+e})),this.reducePal(a),!e&&this.reIndex&&this.sortPal(),this.useCache&&this.cacheHistogram(a),this.palLocked=!0}},t.prototype.palette=function(e,t){return this.buildPal(t),e?this.idxrgb:new Uint8Array(new Uint32Array(this.idxi32).buffer)},t.prototype.prunePal=function(e){for(var t,n=0;n<this.idxrgb.length;n++)e[n]||(t=this.idxi32[n],this.idxrgb[n]=null,this.idxi32[n]=null,delete this.i32idx[t]);if(this.reIndex){for(var r=[],o=[],a={},i=(n=0,0);n<this.idxrgb.length;n++)this.idxrgb[n]&&(t=this.idxi32[n],r[i]=this.idxrgb[n],a[t]=i,o[i]=t,i++);this.idxrgb=r,this.idxi32=o,this.i32idx=a}},t.prototype.reducePal=function(e){if(this.idxrgb.length>this.colors){for(var t,n=e.length,r={},o=0,a=!1,i=0;i<n;i++)o!=this.colors||a||(this.prunePal(r),a=!0),t=this.nearestIndex(e[i]),o<this.colors&&!r[t]&&(r[t]=!0,o++);a||(this.prunePal(r),a=!0)}else{var s=e.map((function(e){return[255&e,(65280&e)>>8,(16711680&e)>>16]})),c=n=s.length,u=this.initDist;if(c>this.colors){for(;c>this.colors;){var l=[];for(i=0;i<n;i++){var d=s[i];if(e[i],d)for(var p=i+1;p<n;p++){var h=s[p],g=e[p];if(h){var m=this.colorDist(d,h);m<u&&(l.push([p,h,g,m]),delete s[p],c--)}}}u+=c>3*this.colors?this.initDist:this.distIncr}if(c<this.colors){f.call(l,(function(e,t){return t[3]-e[3]}));for(var v=0;c<this.colors;)s[l[v][0]]=l[v][1],c++,v++}}for(n=s.length,i=0;i<n;i++)s[i]&&(this.idxrgb.push(s[i]),this.idxi32.push(e[i]),this.i32idx[e[i]]=this.idxi32.length-1,this.i32rgb[e[i]]=s[i])}},t.prototype.colorStats1D=function(e){for(var t,n=this.histogram,r=e.length,o=0;o<r;o++)(4278190080&(t=e[o]))>>24!=0&&(this.hueStats&&this.hueStats.check(t),t in n?n[t]++:n[t]=1)},t.prototype.colorStats2D=function(e,t){var n=this.boxSize[0],r=this.boxSize[1],o=n*r,a=function(e,t,n,r){for(var o=e%n,a=t%r,i=e-o,s=t-a,c=[],u=0;u<t;u+=r)for(var l=0;l<e;l+=n)c.push({x:l,y:u,w:l==i?o:n,h:u==s?a:r});return c}(t,e.length/t,n,r),i=this.histogram,s=this;a.forEach((function(n){var r,a=Math.max(Math.round(n.w*n.h/o)*s.boxPxls,2),c={};!function(e,t,n){var r=e,o=r.y*t+r.x,a=(r.y+r.h-1)*t+(r.x+r.w-1),i=0,s=t-r.w+1,c=o;do{n.call(this,c),c+=++i%r.w==0?s:1}while(c<=a)}(n,t,(function(t){(4278190080&(r=e[t]))>>24!=0&&(s.hueStats&&s.hueStats.check(r),r in i?i[r]++:r in c?++c[r]>=a&&(i[r]=c[r]):c[r]=1)}))})),this.hueStats&&this.hueStats.inject(i)},t.prototype.sortPal=function(){var e=this;this.idxi32.sort((function(t,n){var r=e.i32idx[t],o=e.i32idx[n],a=e.idxrgb[r],i=e.idxrgb[o],s=l(a[0],a[1],a[2]),c=l(i[0],i[1],i[2]),u=a[0]==a[1]&&a[1]==a[2]?-1:d(s.h,e.hueGroups),p=(i[0]==i[1]&&i[1]==i[2]?-1:d(c.h,e.hueGroups))-u;if(p)return-p;var h=+c.l.toFixed(2)-+s.l.toFixed(2);if(h)return-h;var f=+c.s.toFixed(2)-+s.s.toFixed(2);return f?-f:void 0})),this.idxi32.forEach((function(t,n){e.idxrgb[n]=e.i32rgb[t],e.i32idx[t]=n}))},t.prototype.nearestColor=function(e){var t=this.nearestIndex(e);return null===t?0:this.idxi32[t]},t.prototype.nearestIndex=function(e){if((4278190080&e)>>24==0)return null;if(this.useCache&&""+e in this.i32idx)return this.i32idx[e];for(var t,n=1e3,r=[255&e,(65280&e)>>8,(16711680&e)>>16],o=this.idxrgb.length,a=0;a<o;a++)if(this.idxrgb[a]){var i=this.colorDist(r,this.idxrgb[a]);i<n&&(n=i,t=a)}return t},t.prototype.cacheHistogram=function(e){for(var t=0,n=e[t];t<e.length&&this.histogram[n]>=this.cacheFreq;n=e[t++])this.i32idx[n]=this.nearestIndex(n)},n.prototype.check=function(e){this.groupsFull==this.numGroups+1&&(this.check=function(){});var t=255&e,n=(65280&e)>>8,r=(16711680&e)>>16,o=t==n&&n==r?-1:d(l(t,n,r).h,this.numGroups),a=this.stats[o],i=this.minCols;a.num++,a.num>i||(a.num==i&&this.groupsFull++,a.num<=i&&this.stats[o].cols.push(e))},n.prototype.inject=function(e){for(var t=-1;t<this.numGroups;t++)if(this.stats[t].num<=this.minCols)switch(p(e)){case"Array":this.stats[t].cols.forEach((function(t){-1==e.indexOf(t)&&e.push(t)}));break;case"Object":this.stats[t].cols.forEach((function(t){e[t]?e[t]++:e[t]=1}))}};var r=.2126,o=.7152,a=.0722;function i(e,t,n){return Math.sqrt(r*e*e+o*t*t+a*n*n)}var s=Math.sqrt(65025);function c(e,t){var n=t[0]-e[0],i=t[1]-e[1],c=t[2]-e[2];return Math.sqrt(r*n*n+o*i*i+a*c*c)/s}function u(e,t){var n=Math.abs(t[0]-e[0]),i=Math.abs(t[1]-e[1]),s=Math.abs(t[2]-e[2]);return(r*n+o*i+a*s)/254.99999999999997}function l(e,t,n){var r,o,a,s,c;if(e/=255,t/=255,n/=255,(r=Math.max(e,t,n))==(o=Math.min(e,t,n)))a=s=0;else{switch(c=r-o,s=(r+o)/2>.5?c/(2-r-o):c/(r+o),r){case e:a=(t-n)/c+(t<n?6:0);break;case t:a=(n-e)/c+2;break;case n:a=(e-t)/c+4}a/=6}return{h:a,s,l:i(e,t,n)}}function d(e,t){var n=1/t,r=n/2;if(e>=1-r||e<=r)return 0;for(var o=1;o<t;o++){var a=o*n;if(e>=a-r&&e<=a+r)return o}}function p(e){return Object.prototype.toString.call(e).slice(8,-1)}var h,f="xyzvwtursopqmnklhijfgdeabc"==(h="abcdefghijklmnopqrstuvwxyz").split("").sort((function(e,t){return~~(h.indexOf(t)/2.3)-~~(h.indexOf(e)/2.3)})).join("")?Array.prototype.sort:function(e){var t=p(this[0]);if("Number"==t||"String"==t){for(var n,r={},o=this.length,a=0;a<o;a++)n=this[a],r[n]||0===r[n]||(r[n]=a);return this.sort((function(t,n){return e(t,n)||r[t]-r[n]}))}return r=this.map((function(e){return e})),this.sort((function(t,n){return e(t,n)||r.indexOf(t)-r.indexOf(n)}))};function g(e,t){var n,r,o,a,i,s;switch(p(e)){case"HTMLImageElement":(n=document.createElement("canvas")).width=e.naturalWidth,n.height=e.naturalHeight,(r=n.getContext("2d")).drawImage(e,0,0);case"Canvas":case"HTMLCanvasElement":n=n||e,r=r||n.getContext("2d");case"CanvasRenderingContext2D":r=r||e,n=n||r.canvas,o=r.getImageData(0,0,n.width,n.height);case"ImageData":t=(o=o||e).width,a="CanvasPixelArray"==p(o.data)?new Uint8Array(o.data):o.data;case"Array":case"CanvasPixelArray":a=a||new Uint8Array(e);case"Uint8Array":case"Uint8ClampedArray":a=a||e,i=new Uint32Array(a.buffer);case"Uint32Array":i=i||e,a=a||new Uint8Array(i.buffer),t=t||i.length,s=i.length/t}return{can:n,ctx:r,imgd:o,buf8:a,buf32:i,width:t,height:s}}this.RgbQuant=t,e.exports&&(e.exports=t)}).call(this)},89509:(e,t,n)=>{var r=n(48764),o=r.Buffer;function a(e,t){for(var n in e)t[n]=e[n]}function i(e,t,n){return o(e,t,n)}o.from&&o.alloc&&o.allocUnsafe&&o.allocUnsafeSlow?e.exports=r:(a(r,t),t.Buffer=i),i.prototype=Object.create(o.prototype),a(o,i),i.from=function(e,t,n){if("number"==typeof e)throw new TypeError("Argument must not be a number");return o(e,t,n)},i.alloc=function(e,t,n){if("number"!=typeof e)throw new TypeError("Argument must be a number");var r=o(e);return void 0!==t?"string"==typeof n?r.fill(t,n):r.fill(t):r.fill(0),r},i.allocUnsafe=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return o(e)},i.allocUnsafeSlow=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return r.SlowBuffer(e)}},48406:e=>{e.exports=function(e,t){if(null==e||0===e.length)return null==t||0===t.length?0:t.length;if(null==t||0===t.length)return e.length;for(var n=0,r=0,o=0,a=0;n+r<e.length&&n+o<t.length;){if(e.charAt(n+r)==t.charAt(n+o))a++;else{r=0,o=0;for(var i=0;i<5;i++){if(n+i<e.length&&e.charAt(n+i)==t.charAt(n)){r=i;break}if(n+i<t.length&&e.charAt(n)==t.charAt(n+i)){o=i;break}}}n++}return(e.length+t.length)/2-a}},38853:(e,t,n)=>{const r=n(11227)("simple-peer"),o=n(5177),a=n(61798),i=n(88473),s=n(54375),c=n(32114),{Buffer:u}=n(48764),l=65536;function d(e){return e.replace(/a=ice-options:trickle\s\n/g,"")}class p extends i.Duplex{constructor(e){if(super(e=Object.assign({allowHalfOpen:!1},e)),this._id=a(4).toString("hex").slice(0,7),this._debug("new peer %o",e),this.channelName=e.initiator?e.channelName||a(20).toString("hex"):null,this.initiator=e.initiator||!1,this.channelConfig=e.channelConfig||p.channelConfig,this.channelNegotiated=this.channelConfig.negotiated,this.config=Object.assign({},p.config,e.config),this.offerOptions=e.offerOptions||{},this.answerOptions=e.answerOptions||{},this.sdpTransform=e.sdpTransform||(e=>e),this.streams=e.streams||(e.stream?[e.stream]:[]),this.trickle=void 0===e.trickle||e.trickle,this.allowHalfTrickle=void 0!==e.allowHalfTrickle&&e.allowHalfTrickle,this.iceCompleteTimeout=e.iceCompleteTimeout||5e3,this.destroyed=!1,this.destroying=!1,this._connected=!1,this.remoteAddress=void 0,this.remoteFamily=void 0,this.remotePort=void 0,this.localAddress=void 0,this.localFamily=void 0,this.localPort=void 0,this._wrtc=e.wrtc&&"object"==typeof e.wrtc?e.wrtc:o(),!this._wrtc)throw"undefined"==typeof window?c(new Error("No WebRTC support: Specify `opts.wrtc` option in this environment"),"ERR_WEBRTC_SUPPORT"):c(new Error("No WebRTC support: Not a supported browser"),"ERR_WEBRTC_SUPPORT");this._pcReady=!1,this._channelReady=!1,this._iceComplete=!1,this._iceCompleteTimer=null,this._channel=null,this._pendingCandidates=[],this._isNegotiating=!1,this._firstNegotiation=!0,this._batchedNegotiation=!1,this._queuedNegotiation=!1,this._sendersAwaitingStable=[],this._senderMap=new Map,this._closingInterval=null,this._remoteTracks=[],this._remoteStreams=[],this._chunk=null,this._cb=null,this._interval=null;try{this._pc=new this._wrtc.RTCPeerConnection(this.config)}catch(e){return void s((()=>this.destroy(c(e,"ERR_PC_CONSTRUCTOR"))))}this._isReactNativeWebrtc="number"==typeof this._pc._peerConnectionId,this._pc.oniceconnectionstatechange=()=>{this._onIceStateChange()},this._pc.onicegatheringstatechange=()=>{this._onIceStateChange()},this._pc.onconnectionstatechange=()=>{this._onConnectionStateChange()},this._pc.onsignalingstatechange=()=>{this._onSignalingStateChange()},this._pc.onicecandidate=e=>{this._onIceCandidate(e)},this.initiator||this.channelNegotiated?this._setupData({channel:this._pc.createDataChannel(this.channelName,this.channelConfig)}):this._pc.ondatachannel=e=>{this._setupData(e)},this.streams&&this.streams.forEach((e=>{this.addStream(e)})),this._pc.ontrack=e=>{this._onTrack(e)},this._debug("initial negotiation"),this._needsNegotiation(),this._onFinishBound=()=>{this._onFinish()},this.once("finish",this._onFinishBound)}get bufferSize(){return this._channel&&this._channel.bufferedAmount||0}get connected(){return this._connected&&"open"===this._channel.readyState}address(){return{port:this.localPort,family:this.localFamily,address:this.localAddress}}signal(e){if(this.destroyed)throw c(new Error("cannot signal after peer is destroyed"),"ERR_SIGNALING");if("string"==typeof e)try{e=JSON.parse(e)}catch(t){e={}}this._debug("signal()"),e.renegotiate&&this.initiator&&(this._debug("got request to renegotiate"),this._needsNegotiation()),e.transceiverRequest&&this.initiator&&(this._debug("got request for transceiver"),this.addTransceiver(e.transceiverRequest.kind,e.transceiverRequest.init)),e.candidate&&(this._pc.remoteDescription&&this._pc.remoteDescription.type?this._addIceCandidate(e.candidate):this._pendingCandidates.push(e.candidate)),e.sdp&&this._pc.setRemoteDescription(new this._wrtc.RTCSessionDescription(e)).then((()=>{this.destroyed||(this._pendingCandidates.forEach((e=>{this._addIceCandidate(e)})),this._pendingCandidates=[],"offer"===this._pc.remoteDescription.type&&this._createAnswer())})).catch((e=>{this.destroy(c(e,"ERR_SET_REMOTE_DESCRIPTION"))})),e.sdp||e.candidate||e.renegotiate||e.transceiverRequest||this.destroy(c(new Error("signal() called with invalid signal data"),"ERR_SIGNALING"))}_addIceCandidate(e){const t=new this._wrtc.RTCIceCandidate(e);this._pc.addIceCandidate(t).catch((e=>{!t.address||t.address.endsWith(".local")?("Ignoring unsupported ICE candidate.",console.warn("Ignoring unsupported ICE candidate.")):this.destroy(c(e,"ERR_ADD_ICE_CANDIDATE"))}))}send(e){this._channel.send(e)}addTransceiver(e,t){if(this._debug("addTransceiver()"),this.initiator)try{this._pc.addTransceiver(e,t),this._needsNegotiation()}catch(e){this.destroy(c(e,"ERR_ADD_TRANSCEIVER"))}else this.emit("signal",{type:"transceiverRequest",transceiverRequest:{kind:e,init:t}})}addStream(e){this._debug("addStream()"),e.getTracks().forEach((t=>{this.addTrack(t,e)}))}addTrack(e,t){this._debug("addTrack()");const n=this._senderMap.get(e)||new Map;let r=n.get(t);if(r)throw r.removed?c(new Error("Track has been removed. You should enable/disable tracks that you want to re-add."),"ERR_SENDER_REMOVED"):c(new Error("Track has already been added to that stream."),"ERR_SENDER_ALREADY_ADDED");r=this._pc.addTrack(e,t),n.set(t,r),this._senderMap.set(e,n),this._needsNegotiation()}replaceTrack(e,t,n){this._debug("replaceTrack()");const r=this._senderMap.get(e),o=r?r.get(n):null;if(!o)throw c(new Error("Cannot replace track that was never added."),"ERR_TRACK_NOT_ADDED");t&&this._senderMap.set(t,r),null!=o.replaceTrack?o.replaceTrack(t):this.destroy(c(new Error("replaceTrack is not supported in this browser"),"ERR_UNSUPPORTED_REPLACETRACK"))}removeTrack(e,t){this._debug("removeSender()");const n=this._senderMap.get(e),r=n?n.get(t):null;if(!r)throw c(new Error("Cannot remove track that was never added."),"ERR_TRACK_NOT_ADDED");try{r.removed=!0,this._pc.removeTrack(r)}catch(e){"NS_ERROR_UNEXPECTED"===e.name?this._sendersAwaitingStable.push(r):this.destroy(c(e,"ERR_REMOVE_TRACK"))}this._needsNegotiation()}removeStream(e){this._debug("removeSenders()"),e.getTracks().forEach((t=>{this.removeTrack(t,e)}))}_needsNegotiation(){this._debug("_needsNegotiation"),this._batchedNegotiation||(this._batchedNegotiation=!0,s((()=>{this._batchedNegotiation=!1,this.initiator||!this._firstNegotiation?(this._debug("starting batched negotiation"),this.negotiate()):this._debug("non-initiator initial negotiation request discarded"),this._firstNegotiation=!1})))}negotiate(){this.initiator?this._isNegotiating?(this._queuedNegotiation=!0,this._debug("already negotiating, queueing")):(this._debug("start negotiation"),setTimeout((()=>{this._createOffer()}),0)):this._isNegotiating?(this._queuedNegotiation=!0,this._debug("already negotiating, queueing")):(this._debug("requesting negotiation from initiator"),this.emit("signal",{type:"renegotiate",renegotiate:!0})),this._isNegotiating=!0}destroy(e){this._destroy(e,(()=>{}))}_destroy(e,t){this.destroyed||this.destroying||(this.destroying=!0,this._debug("destroying (error: %s)",e&&(e.message||e)),s((()=>{if(this.destroyed=!0,this.destroying=!1,this._debug("destroy (error: %s)",e&&(e.message||e)),this.readable=this.writable=!1,this._readableState.ended||this.push(null),this._writableState.finished||this.end(),this._connected=!1,this._pcReady=!1,this._channelReady=!1,this._remoteTracks=null,this._remoteStreams=null,this._senderMap=null,clearInterval(this._closingInterval),this._closingInterval=null,clearInterval(this._interval),this._interval=null,this._chunk=null,this._cb=null,this._onFinishBound&&this.removeListener("finish",this._onFinishBound),this._onFinishBound=null,this._channel){try{this._channel.close()}catch(e){}this._channel.onmessage=null,this._channel.onopen=null,this._channel.onclose=null,this._channel.onerror=null}if(this._pc){try{this._pc.close()}catch(e){}this._pc.oniceconnectionstatechange=null,this._pc.onicegatheringstatechange=null,this._pc.onsignalingstatechange=null,this._pc.onicecandidate=null,this._pc.ontrack=null,this._pc.ondatachannel=null}this._pc=null,this._channel=null,e&&this.emit("error",e),this.emit("close"),t()})))}_setupData(e){if(!e.channel)return this.destroy(c(new Error("Data channel event is missing `channel` property"),"ERR_DATA_CHANNEL"));this._channel=e.channel,this._channel.binaryType="arraybuffer","number"==typeof this._channel.bufferedAmountLowThreshold&&(this._channel.bufferedAmountLowThreshold=l),this.channelName=this._channel.label,this._channel.onmessage=e=>{this._onChannelMessage(e)},this._channel.onbufferedamountlow=()=>{this._onChannelBufferedAmountLow()},this._channel.onopen=()=>{this._onChannelOpen()},this._channel.onclose=()=>{this._onChannelClose()},this._channel.onerror=e=>{this.destroy(c(e,"ERR_DATA_CHANNEL"))};let t=!1;this._closingInterval=setInterval((()=>{this._channel&&"closing"===this._channel.readyState?(t&&this._onChannelClose(),t=!0):t=!1}),5e3)}_read(){}_write(e,t,n){if(this.destroyed)return n(c(new Error("cannot write after peer is destroyed"),"ERR_DATA_CHANNEL"));if(this._connected){try{this.send(e)}catch(e){return this.destroy(c(e,"ERR_DATA_CHANNEL"))}this._channel.bufferedAmount>l?(this._debug("start backpressure: bufferedAmount %d",this._channel.bufferedAmount),this._cb=n):n(null)}else this._debug("write before connect"),this._chunk=e,this._cb=n}_onFinish(){if(this.destroyed)return;const e=()=>{setTimeout((()=>this.destroy()),1e3)};this._connected?e():this.once("connect",e)}_startIceCompleteTimeout(){this.destroyed||this._iceCompleteTimer||(this._debug("started iceComplete timeout"),this._iceCompleteTimer=setTimeout((()=>{this._iceComplete||(this._iceComplete=!0,this._debug("iceComplete timeout completed"),this.emit("iceTimeout"),this.emit("_iceComplete"))}),this.iceCompleteTimeout))}_createOffer(){this.destroyed||this._pc.createOffer(this.offerOptions).then((e=>{if(this.destroyed)return;this.trickle||this.allowHalfTrickle||(e.sdp=d(e.sdp)),e.sdp=this.sdpTransform(e.sdp);const t=()=>{if(this.destroyed)return;const t=this._pc.localDescription||e;this._debug("signal"),this.emit("signal",{type:t.type,sdp:t.sdp})};this._pc.setLocalDescription(e).then((()=>{this._debug("createOffer success"),this.destroyed||(this.trickle||this._iceComplete?t():this.once("_iceComplete",t))})).catch((e=>{this.destroy(c(e,"ERR_SET_LOCAL_DESCRIPTION"))}))})).catch((e=>{this.destroy(c(e,"ERR_CREATE_OFFER"))}))}_requestMissingTransceivers(){this._pc.getTransceivers&&this._pc.getTransceivers().forEach((e=>{e.mid||!e.sender.track||e.requested||(e.requested=!0,this.addTransceiver(e.sender.track.kind))}))}_createAnswer(){this.destroyed||this._pc.createAnswer(this.answerOptions).then((e=>{if(this.destroyed)return;this.trickle||this.allowHalfTrickle||(e.sdp=d(e.sdp)),e.sdp=this.sdpTransform(e.sdp);const t=()=>{if(this.destroyed)return;const t=this._pc.localDescription||e;this._debug("signal"),this.emit("signal",{type:t.type,sdp:t.sdp}),this.initiator||this._requestMissingTransceivers()};this._pc.setLocalDescription(e).then((()=>{this.destroyed||(this.trickle||this._iceComplete?t():this.once("_iceComplete",t))})).catch((e=>{this.destroy(c(e,"ERR_SET_LOCAL_DESCRIPTION"))}))})).catch((e=>{this.destroy(c(e,"ERR_CREATE_ANSWER"))}))}_onConnectionStateChange(){this.destroyed||"failed"===this._pc.connectionState&&this.destroy(c(new Error("Connection failed."),"ERR_CONNECTION_FAILURE"))}_onIceStateChange(){if(this.destroyed)return;const e=this._pc.iceConnectionState,t=this._pc.iceGatheringState;this._debug("iceStateChange (connection: %s) (gathering: %s)",e,t),this.emit("iceStateChange",e,t),"connected"!==e&&"completed"!==e||(this._pcReady=!0,this._maybeReady()),"failed"===e&&this.destroy(c(new Error("Ice connection failed."),"ERR_ICE_CONNECTION_FAILURE")),"closed"===e&&this.destroy(c(new Error("Ice connection closed."),"ERR_ICE_CONNECTION_CLOSED"))}getStats(e){const t=e=>("[object Array]"===Object.prototype.toString.call(e.values)&&e.values.forEach((t=>{Object.assign(e,t)})),e);0===this._pc.getStats.length||this._isReactNativeWebrtc?this._pc.getStats().then((n=>{const r=[];n.forEach((e=>{r.push(t(e))})),e(null,r)}),(t=>e(t))):this._pc.getStats.length>0?this._pc.getStats((n=>{if(this.destroyed)return;const r=[];n.result().forEach((e=>{const n={};e.names().forEach((t=>{n[t]=e.stat(t)})),n.id=e.id,n.type=e.type,n.timestamp=e.timestamp,r.push(t(n))})),e(null,r)}),(t=>e(t))):e(null,[])}_maybeReady(){if(this._debug("maybeReady pc %s channel %s",this._pcReady,this._channelReady),this._connected||this._connecting||!this._pcReady||!this._channelReady)return;this._connecting=!0;const e=()=>{this.destroyed||this.getStats(((t,n)=>{if(this.destroyed)return;t&&(n=[]);const r={},o={},a={};let i=!1;n.forEach((e=>{"remotecandidate"!==e.type&&"remote-candidate"!==e.type||(r[e.id]=e),"localcandidate"!==e.type&&"local-candidate"!==e.type||(o[e.id]=e),"candidatepair"!==e.type&&"candidate-pair"!==e.type||(a[e.id]=e)}));const s=e=>{i=!0;let t=o[e.localCandidateId];t&&(t.ip||t.address)?(this.localAddress=t.ip||t.address,this.localPort=Number(t.port)):t&&t.ipAddress?(this.localAddress=t.ipAddress,this.localPort=Number(t.portNumber)):"string"==typeof e.googLocalAddress&&(t=e.googLocalAddress.split(":"),this.localAddress=t[0],this.localPort=Number(t[1])),this.localAddress&&(this.localFamily=this.localAddress.includes(":")?"IPv6":"IPv4");let n=r[e.remoteCandidateId];n&&(n.ip||n.address)?(this.remoteAddress=n.ip||n.address,this.remotePort=Number(n.port)):n&&n.ipAddress?(this.remoteAddress=n.ipAddress,this.remotePort=Number(n.portNumber)):"string"==typeof e.googRemoteAddress&&(n=e.googRemoteAddress.split(":"),this.remoteAddress=n[0],this.remotePort=Number(n[1])),this.remoteAddress&&(this.remoteFamily=this.remoteAddress.includes(":")?"IPv6":"IPv4"),this._debug("connect local: %s:%s remote: %s:%s",this.localAddress,this.localPort,this.remoteAddress,this.remotePort)};if(n.forEach((e=>{"transport"===e.type&&e.selectedCandidatePairId&&s(a[e.selectedCandidatePairId]),("googCandidatePair"===e.type&&"true"===e.googActiveConnection||("candidatepair"===e.type||"candidate-pair"===e.type)&&e.selected)&&s(e)})),i||Object.keys(a).length&&!Object.keys(o).length){if(this._connecting=!1,this._connected=!0,this._chunk){try{this.send(this._chunk)}catch(t){return this.destroy(c(t,"ERR_DATA_CHANNEL"))}this._chunk=null,this._debug('sent chunk from "write before connect"');const e=this._cb;this._cb=null,e(null)}"number"!=typeof this._channel.bufferedAmountLowThreshold&&(this._interval=setInterval((()=>this._onInterval()),150),this._interval.unref&&this._interval.unref()),this._debug("connect"),this.emit("connect")}else setTimeout(e,100)}))};e()}_onInterval(){!this._cb||!this._channel||this._channel.bufferedAmount>l||this._onChannelBufferedAmountLow()}_onSignalingStateChange(){this.destroyed||("stable"===this._pc.signalingState&&(this._isNegotiating=!1,this._debug("flushing sender queue",this._sendersAwaitingStable),this._sendersAwaitingStable.forEach((e=>{this._pc.removeTrack(e),this._queuedNegotiation=!0})),this._sendersAwaitingStable=[],this._queuedNegotiation?(this._debug("flushing negotiation queue"),this._queuedNegotiation=!1,this._needsNegotiation()):(this._debug("negotiated"),this.emit("negotiated"))),this._debug("signalingStateChange %s",this._pc.signalingState),this.emit("signalingStateChange",this._pc.signalingState))}_onIceCandidate(e){this.destroyed||(e.candidate&&this.trickle?this.emit("signal",{type:"candidate",candidate:{candidate:e.candidate.candidate,sdpMLineIndex:e.candidate.sdpMLineIndex,sdpMid:e.candidate.sdpMid}}):e.candidate||this._iceComplete||(this._iceComplete=!0,this.emit("_iceComplete")),e.candidate&&this._startIceCompleteTimeout())}_onChannelMessage(e){if(this.destroyed)return;let t=e.data;t instanceof ArrayBuffer&&(t=u.from(t)),this.push(t)}_onChannelBufferedAmountLow(){if(this.destroyed||!this._cb)return;this._debug("ending backpressure: bufferedAmount %d",this._channel.bufferedAmount);const e=this._cb;this._cb=null,e(null)}_onChannelOpen(){this._connected||this.destroyed||(this._debug("on channel open"),this._channelReady=!0,this._maybeReady())}_onChannelClose(){this.destroyed||(this._debug("on channel close"),this.destroy())}_onTrack(e){this.destroyed||e.streams.forEach((t=>{this._debug("on track"),this.emit("track",e.track,t),this._remoteTracks.push({track:e.track,stream:t}),this._remoteStreams.some((e=>e.id===t.id))||(this._remoteStreams.push(t),s((()=>{this._debug("on stream"),this.emit("stream",t)})))}))}_debug(){const e=[].slice.call(arguments);e[0]="["+this._id+"] "+e[0],r.apply(null,e)}}p.WEBRTC_SUPPORT=!!o(),p.config={iceServers:[{urls:["stun:stun.l.google.com:19302","stun:global.stun.twilio.com:3478"]}],sdpSemantics:"unified-plan"},p.channelConfig={},e.exports=p},32553:(e,t,n)=>{"use strict";var r=n(89509).Buffer,o=r.isEncoding||function(e){switch((e=""+e)&&e.toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":case"raw":return!0;default:return!1}};function a(e){var t;switch(this.encoding=function(e){var t=function(e){if(!e)return"utf8";for(var t;;)switch(e){case"utf8":case"utf-8":return"utf8";case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return"utf16le";case"latin1":case"binary":return"latin1";case"base64":case"ascii":case"hex":return e;default:if(t)return;e=(""+e).toLowerCase(),t=!0}}(e);if("string"!=typeof t&&(r.isEncoding===o||!o(e)))throw new Error("Unknown encoding: "+e);return t||e}(e),this.encoding){case"utf16le":this.text=c,this.end=u,t=4;break;case"utf8":this.fillLast=s,t=4;break;case"base64":this.text=l,this.end=d,t=3;break;default:return this.write=p,void(this.end=h)}this.lastNeed=0,this.lastTotal=0,this.lastChar=r.allocUnsafe(t)}function i(e){return e<=127?0:e>>5==6?2:e>>4==14?3:e>>3==30?4:e>>6==2?-1:-2}function s(e){var t=this.lastTotal-this.lastNeed,n=function(e,t,n){if(128!=(192&t[0]))return e.lastNeed=0,"�";if(e.lastNeed>1&&t.length>1){if(128!=(192&t[1]))return e.lastNeed=1,"�";if(e.lastNeed>2&&t.length>2&&128!=(192&t[2]))return e.lastNeed=2,"�"}}(this,e);return void 0!==n?n:this.lastNeed<=e.length?(e.copy(this.lastChar,t,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal)):(e.copy(this.lastChar,t,0,e.length),void(this.lastNeed-=e.length))}function c(e,t){if((e.length-t)%2==0){var n=e.toString("utf16le",t);if(n){var r=n.charCodeAt(n.length-1);if(r>=55296&&r<=56319)return this.lastNeed=2,this.lastTotal=4,this.lastChar[0]=e[e.length-2],this.lastChar[1]=e[e.length-1],n.slice(0,-1)}return n}return this.lastNeed=1,this.lastTotal=2,this.lastChar[0]=e[e.length-1],e.toString("utf16le",t,e.length-1)}function u(e){var t=e&&e.length?this.write(e):"";if(this.lastNeed){var n=this.lastTotal-this.lastNeed;return t+this.lastChar.toString("utf16le",0,n)}return t}function l(e,t){var n=(e.length-t)%3;return 0===n?e.toString("base64",t):(this.lastNeed=3-n,this.lastTotal=3,1===n?this.lastChar[0]=e[e.length-1]:(this.lastChar[0]=e[e.length-2],this.lastChar[1]=e[e.length-1]),e.toString("base64",t,e.length-n))}function d(e){var t=e&&e.length?this.write(e):"";return this.lastNeed?t+this.lastChar.toString("base64",0,3-this.lastNeed):t}function p(e){return e.toString(this.encoding)}function h(e){return e&&e.length?this.write(e):""}t.s=a,a.prototype.write=function(e){if(0===e.length)return"";var t,n;if(this.lastNeed){if(void 0===(t=this.fillLast(e)))return"";n=this.lastNeed,this.lastNeed=0}else n=0;return n<e.length?t?t+this.text(e,n):this.text(e,n):t||""},a.prototype.end=function(e){var t=e&&e.length?this.write(e):"";return this.lastNeed?t+"�":t},a.prototype.text=function(e,t){var n=function(e,t,n){var r=t.length-1;if(r<n)return 0;var o=i(t[r]);return o>=0?(o>0&&(e.lastNeed=o-1),o):--r<n||-2===o?0:(o=i(t[r]))>=0?(o>0&&(e.lastNeed=o-2),o):--r<n||-2===o?0:(o=i(t[r]))>=0?(o>0&&(2===o?o=0:e.lastNeed=o-3),o):0}(this,e,t);if(!this.lastNeed)return e.toString("utf8",t);this.lastTotal=n;var r=e.length-(n-this.lastNeed);return e.copy(this.lastChar,0,r),e.toString("utf8",t,r)},a.prototype.fillLast=function(e){if(this.lastNeed<=e.length)return e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal);e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,e.length),this.lastNeed-=e.length}},80569:function(e,t,n){var r;"undefined"!=typeof window?r=window:"undefined"!=typeof self?r=self:(console.warn("Using browser-only version of superagent in non-browser environment"),r=this);var o=n(98767),a=n(28899),i=n(54960),s=n(81097),c=n(42139);function u(){}var l=t=e.exports=function(e,n){return"function"==typeof n?new t.Request("GET",e).end(n):1==arguments.length?new t.Request("GET",e):new t.Request(e,n)};t.Request=v,l.getXHR=function(){if(!(!r.XMLHttpRequest||r.location&&"file:"==r.location.protocol&&r.ActiveXObject))return new XMLHttpRequest;try{return new ActiveXObject("Microsoft.XMLHTTP")}catch(e){}try{return new ActiveXObject("Msxml2.XMLHTTP.6.0")}catch(e){}try{return new ActiveXObject("Msxml2.XMLHTTP.3.0")}catch(e){}try{return new ActiveXObject("Msxml2.XMLHTTP")}catch(e){}throw Error("Browser-only version of superagent could not find XHR")};var d="".trim?function(e){return e.trim()}:function(e){return e.replace(/(^\s*|\s*$)/g,"")};function p(e){if(!i(e))return e;var t=[];for(var n in e)h(t,n,e[n]);return t.join("&")}function h(e,t,n){if(null!=n)if(Array.isArray(n))n.forEach((function(n){h(e,t,n)}));else if(i(n))for(var r in n)h(e,t+"["+r+"]",n[r]);else e.push(encodeURIComponent(t)+"="+encodeURIComponent(n));else null===n&&e.push(encodeURIComponent(t))}function f(e){for(var t,n,r={},o=e.split("&"),a=0,i=o.length;a<i;++a)-1==(n=(t=o[a]).indexOf("="))?r[decodeURIComponent(t)]="":r[decodeURIComponent(t.slice(0,n))]=decodeURIComponent(t.slice(n+1));return r}function g(e){return/[\/+]json\b/.test(e)}function m(e){this.req=e,this.xhr=this.req.xhr,this.text="HEAD"!=this.req.method&&(""===this.xhr.responseType||"text"===this.xhr.responseType)||void 0===this.xhr.responseType?this.xhr.responseText:null,this.statusText=this.req.xhr.statusText;var t=this.xhr.status;1223===t&&(t=204),this._setStatusProperties(t),this.header=this.headers=function(e){for(var t,n,r,o,a=e.split(/\r?\n/),i={},s=0,c=a.length;s<c;++s)-1!==(t=(n=a[s]).indexOf(":"))&&(r=n.slice(0,t).toLowerCase(),o=d(n.slice(t+1)),i[r]=o);return i}(this.xhr.getAllResponseHeaders()),this.header["content-type"]=this.xhr.getResponseHeader("content-type"),this._setHeaderProperties(this.header),null===this.text&&e._responseType?this.body=this.xhr.response:this.body="HEAD"!=this.req.method?this._parseBody(this.text?this.text:this.xhr.response):null}function v(e,t){var n=this;this._query=this._query||[],this.method=e,this.url=t,this.header={},this._header={},this.on("end",(function(){var e,t=null,r=null;try{r=new m(n)}catch(e){return(t=new Error("Parser is unable to parse the response")).parse=!0,t.original=e,n.xhr?(t.rawResponse=void 0===n.xhr.responseType?n.xhr.responseText:n.xhr.response,t.status=n.xhr.status?n.xhr.status:null,t.statusCode=t.status):(t.rawResponse=null,t.status=null),n.callback(t)}n.emit("response",r);try{n._isResponseOK(r)||(e=new Error(r.statusText||"Unsuccessful HTTP response"))}catch(t){e=t}e?(e.original=t,e.response=r,e.status=r.status,n.callback(e,r)):n.callback(null,r)}))}function y(e,t,n){var r=l("DELETE",e);return"function"==typeof t&&(n=t,t=null),t&&r.send(t),n&&r.end(n),r}l.serializeObject=p,l.parseString=f,l.types={html:"text/html",json:"application/json",xml:"text/xml",urlencoded:"application/x-www-form-urlencoded",form:"application/x-www-form-urlencoded","form-data":"application/x-www-form-urlencoded"},l.serialize={"application/x-www-form-urlencoded":p,"application/json":JSON.stringify},l.parse={"application/x-www-form-urlencoded":f,"application/json":JSON.parse},s(m.prototype),m.prototype._parseBody=function(e){var t=l.parse[this.type];return this.req._parser?this.req._parser(this,e):(!t&&g(this.type)&&(t=l.parse["application/json"]),t&&e&&(e.length||e instanceof Object)?t(e):null)},m.prototype.toError=function(){var e=this.req,t=e.method,n=e.url,r="cannot "+t+" "+n+" ("+this.status+")",o=new Error(r);return o.status=this.status,o.method=t,o.url=n,o},l.Response=m,o(v.prototype),a(v.prototype),v.prototype.type=function(e){return this.set("Content-Type",l.types[e]||e),this},v.prototype.accept=function(e){return this.set("Accept",l.types[e]||e),this},v.prototype.auth=function(e,t,n){switch("object"==typeof t&&null!==t&&(n=t),n||(n={type:"function"==typeof btoa?"basic":"auto"}),n.type){case"basic":this.set("Authorization","Basic "+btoa(e+":"+t));break;case"auto":this.username=e,this.password=t;break;case"bearer":this.set("Authorization","Bearer "+e)}return this},v.prototype.query=function(e){return"string"!=typeof e&&(e=p(e)),e&&this._query.push(e),this},v.prototype.attach=function(e,t,n){if(t){if(this._data)throw Error("superagent can't mix .send() and .attach()");this._getFormData().append(e,t,n||t.name)}return this},v.prototype._getFormData=function(){return this._formData||(this._formData=new r.FormData),this._formData},v.prototype.callback=function(e,t){if(this._maxRetries&&this._retries++<this._maxRetries&&c(e,t))return this._retry();var n=this._callback;this.clearTimeout(),e&&(this._maxRetries&&(e.retries=this._retries-1),this.emit("error",e)),n(e,t)},v.prototype.crossDomainError=function(){var e=new Error("Request has been terminated\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.");e.crossDomain=!0,e.status=this.status,e.method=this.method,e.url=this.url,this.callback(e)},v.prototype.buffer=v.prototype.ca=v.prototype.agent=function(){return console.warn("This is not supported in browser version of superagent"),this},v.prototype.pipe=v.prototype.write=function(){throw Error("Streaming is not supported in browser version of superagent")},v.prototype._isHost=function(e){return e&&"object"==typeof e&&!Array.isArray(e)&&"[object Object]"!==Object.prototype.toString.call(e)},v.prototype.end=function(e){return this._endCalled&&console.warn("Warning: .end() was called twice. This is not supported in superagent"),this._endCalled=!0,this._callback=e||u,this._finalizeQueryString(),this._end()},v.prototype._end=function(){var e=this,t=this.xhr=l.getXHR(),n=this._formData||this._data;this._setTimeouts(),t.onreadystatechange=function(){var n=t.readyState;if(n>=2&&e._responseTimeoutTimer&&clearTimeout(e._responseTimeoutTimer),4==n){var r;try{r=t.status}catch(e){r=0}if(!r){if(e.timedout||e._aborted)return;return e.crossDomainError()}e.emit("end")}};var r=function(t,n){n.total>0&&(n.percent=n.loaded/n.total*100),n.direction=t,e.emit("progress",n)};if(this.hasListeners("progress"))try{t.onprogress=r.bind(null,"download"),t.upload&&(t.upload.onprogress=r.bind(null,"upload"))}catch(e){}try{this.username&&this.password?t.open(this.method,this.url,!0,this.username,this.password):t.open(this.method,this.url,!0)}catch(e){return this.callback(e)}if(this._withCredentials&&(t.withCredentials=!0),!this._formData&&"GET"!=this.method&&"HEAD"!=this.method&&"string"!=typeof n&&!this._isHost(n)){var o=this._header["content-type"],a=this._serializer||l.serialize[o?o.split(";")[0]:""];!a&&g(o)&&(a=l.serialize["application/json"]),a&&(n=a(n))}for(var i in this.header)null!=this.header[i]&&this.header.hasOwnProperty(i)&&t.setRequestHeader(i,this.header[i]);return this._responseType&&(t.responseType=this._responseType),this.emit("request",this),t.send(void 0!==n?n:null),this},l.get=function(e,t,n){var r=l("GET",e);return"function"==typeof t&&(n=t,t=null),t&&r.query(t),n&&r.end(n),r},l.head=function(e,t,n){var r=l("HEAD",e);return"function"==typeof t&&(n=t,t=null),t&&r.query(t),n&&r.end(n),r},l.options=function(e,t,n){var r=l("OPTIONS",e);return"function"==typeof t&&(n=t,t=null),t&&r.send(t),n&&r.end(n),r},l.del=y,l.delete=y,l.patch=function(e,t,n){var r=l("PATCH",e);return"function"==typeof t&&(n=t,t=null),t&&r.send(t),n&&r.end(n),r},l.post=function(e,t,n){var r=l("POST",e);return"function"==typeof t&&(n=t,t=null),t&&r.send(t),n&&r.end(n),r},l.put=function(e,t,n){var r=l("PUT",e);return"function"==typeof t&&(n=t,t=null),t&&r.send(t),n&&r.end(n),r}},54960:e=>{"use strict";e.exports=function(e){return null!==e&&"object"==typeof e}},28899:(e,t,n)=>{"use strict";var r=n(54960);function o(e){if(e)return function(e){for(var t in o.prototype)e[t]=o.prototype[t];return e}(e)}e.exports=o,o.prototype.clearTimeout=function(){return clearTimeout(this._timer),clearTimeout(this._responseTimeoutTimer),delete this._timer,delete this._responseTimeoutTimer,this},o.prototype.parse=function(e){return this._parser=e,this},o.prototype.responseType=function(e){return this._responseType=e,this},o.prototype.serialize=function(e){return this._serializer=e,this},o.prototype.timeout=function(e){if(!e||"object"!=typeof e)return this._timeout=e,this._responseTimeout=0,this;for(var t in e)switch(t){case"deadline":this._timeout=e.deadline;break;case"response":this._responseTimeout=e.response;break;default:console.warn("Unknown timeout option",t)}return this},o.prototype.retry=function(e){return 0!==arguments.length&&!0!==e||(e=1),e<=0&&(e=0),this._maxRetries=e,this._retries=0,this},o.prototype._retry=function(){return this.clearTimeout(),this.req&&(this.req=null,this.req=this.request()),this._aborted=!1,this.timedout=!1,this._end()},o.prototype.then=function(e,t){if(!this._fullfilledPromise){var n=this;this._endCalled&&console.warn("Warning: superagent request was sent twice, because both .end() and .then() were called. Never call .end() if you use promises"),this._fullfilledPromise=new Promise((function(e,t){n.end((function(n,r){n?t(n):e(r)}))}))}return this._fullfilledPromise.then(e,t)},o.prototype.catch=function(e){return this.then(void 0,e)},o.prototype.use=function(e){return e(this),this},o.prototype.ok=function(e){if("function"!=typeof e)throw Error("Callback required");return this._okCallback=e,this},o.prototype._isResponseOK=function(e){return!!e&&(this._okCallback?this._okCallback(e):e.status>=200&&e.status<300)},o.prototype.get=function(e){return this._header[e.toLowerCase()]},o.prototype.getHeader=o.prototype.get,o.prototype.set=function(e,t){if(r(e)){for(var n in e)this.set(n,e[n]);return this}return this._header[e.toLowerCase()]=t,this.header[e]=t,this},o.prototype.unset=function(e){return delete this._header[e.toLowerCase()],delete this.header[e],this},o.prototype.field=function(e,t){if(null==e)throw new Error(".field(name, val) name can not be empty");if(this._data&&console.error(".field() can't be used if .send() is used. Please use only .send() or only .field() & .attach()"),r(e)){for(var n in e)this.field(n,e[n]);return this}if(Array.isArray(t)){for(var o in t)this.field(e,t[o]);return this}if(null==t)throw new Error(".field(name, val) val can not be empty");return"boolean"==typeof t&&(t=""+t),this._getFormData().append(e,t),this},o.prototype.abort=function(){return this._aborted||(this._aborted=!0,this.xhr&&this.xhr.abort(),this.req&&this.req.abort(),this.clearTimeout(),this.emit("abort")),this},o.prototype.withCredentials=function(e){return null==e&&(e=!0),this._withCredentials=e,this},o.prototype.redirects=function(e){return this._maxRedirects=e,this},o.prototype.maxResponseSize=function(e){if("number"!=typeof e)throw TypeError("Invalid argument");return this._maxResponseSize=e,this},o.prototype.toJSON=function(){return{method:this.method,url:this.url,data:this._data,headers:this._header}},o.prototype.send=function(e){var t=r(e),n=this._header["content-type"];if(this._formData&&console.error(".send() can't be used if .attach() or .field() is used. Please use only .send() or only .field() & .attach()"),t&&!this._data)Array.isArray(e)?this._data=[]:this._isHost(e)||(this._data={});else if(e&&this._data&&this._isHost(this._data))throw Error("Can't merge these send calls");if(t&&r(this._data))for(var o in e)this._data[o]=e[o];else"string"==typeof e?(n||this.type("form"),n=this._header["content-type"],this._data="application/x-www-form-urlencoded"==n?this._data?this._data+"&"+e:e:(this._data||"")+e):this._data=e;return!t||this._isHost(e)||n||this.type("json"),this},o.prototype.sortQuery=function(e){return this._sort=void 0===e||e,this},o.prototype._finalizeQueryString=function(){var e=this._query.join("&");if(e&&(this.url+=(this.url.indexOf("?")>=0?"&":"?")+e),this._query.length=0,this._sort){var t=this.url.indexOf("?");if(t>=0){var n=this.url.substring(t+1).split("&");"function"==typeof this._sort?n.sort(this._sort):n.sort(),this.url=this.url.substring(0,t)+"?"+n.join("&")}}},o.prototype._appendQueryString=function(){console.trace("Unsupported")},o.prototype._timeoutError=function(e,t,n){if(!this._aborted){var r=new Error(e+t+"ms exceeded");r.timeout=t,r.code="ECONNABORTED",r.errno=n,this.timedout=!0,this.abort(),this.callback(r)}},o.prototype._setTimeouts=function(){var e=this;this._timeout&&!this._timer&&(this._timer=setTimeout((function(){e._timeoutError("Timeout of ",e._timeout,"ETIME")}),this._timeout)),this._responseTimeout&&!this._responseTimeoutTimer&&(this._responseTimeoutTimer=setTimeout((function(){e._timeoutError("Response timeout of ",e._responseTimeout,"ETIMEDOUT")}),this._responseTimeout))}},81097:(e,t,n)=>{"use strict";var r=n(64506);function o(e){if(e)return function(e){for(var t in o.prototype)e[t]=o.prototype[t];return e}(e)}e.exports=o,o.prototype.get=function(e){return this.header[e.toLowerCase()]},o.prototype._setHeaderProperties=function(e){var t=e["content-type"]||"";this.type=r.type(t);var n=r.params(t);for(var o in n)this[o]=n[o];this.links={};try{e.link&&(this.links=r.parseLinks(e.link))}catch(e){}},o.prototype._setStatusProperties=function(e){var t=e/100|0;this.status=this.statusCode=e,this.statusType=t,this.info=1==t,this.ok=2==t,this.redirect=3==t,this.clientError=4==t,this.serverError=5==t,this.error=(4==t||5==t)&&this.toError(),this.accepted=202==e,this.noContent=204==e,this.badRequest=400==e,this.unauthorized=401==e,this.notAcceptable=406==e,this.forbidden=403==e,this.notFound=404==e}},42139:e=>{"use strict";var t=["ECONNRESET","ETIMEDOUT","EADDRINFO","ESOCKETTIMEDOUT"];e.exports=function(e,n){return!!(e&&e.code&&~t.indexOf(e.code)||n&&n.status&&n.status>=500||e&&"timeout"in e&&"ECONNABORTED"==e.code||e&&"crossDomain"in e)}},64506:(e,t)=>{"use strict";t.type=function(e){return e.split(/ *; */).shift()},t.params=function(e){return e.split(/ *; */).reduce((function(e,t){var n=t.split(/ *= */),r=n.shift(),o=n.shift();return r&&o&&(e[r]=o),e}),{})},t.parseLinks=function(e){return e.split(/ *, */).reduce((function(e,t){var n=t.split(/ *; */),r=n[0].slice(1,-1);return e[n[1].split(/ *= */)[1].slice(1,-1)]=r,e}),{})},t.cleanHeader=function(e,t){return delete e["content-type"],delete e["content-length"],delete e["transfer-encoding"],delete e.host,t&&delete e.cookie,e}},39453:(e,t,n)=>{var r=n(34155);let o=n(12993),a=n(26470),i=n(98510),s=n(94219),c=n(79562),u=n(81890);n(94219).tmpdir();const l=c.sync;let d=a.resolve(s.tmpdir()),p=i.O_CREAT|i.O_TRUNC|i.O_RDWR|i.O_EXCL,h=function(e){return"function"==typeof e?[void 0,e]:[new Promise((function(e,n){t=function(){var t=Array.from(arguments),o=t.shift();r.nextTick((function(){o?n(o):1===t.length?e(t[0]):e(t)}))}})),t];var t};var f=function(e,t){var n=g(e,t),o=new Date,i=[n.prefix,o.getFullYear(),o.getMonth(),o.getDate(),"-",r.pid,"-",(4294967296*Math.random()+1).toString(36),n.suffix].join("");return a.join(n.dir||d,i)},g=function(e,t){var n={prefix:null,suffix:null};if(e)switch(typeof e){case"string":n.prefix=e;break;case"object":n=e;break;default:throw new Error("Unknown affix declaration: "+n)}else n.prefix=t;return n},m=!1,v=!1,y=[],b=[];function w(e){if(!m)return!1;x(),y.push(e)}function _(e){if(!m)return!1;x(),b.push(e)}function x(){if(!m)return!1;v||(r.addListener("exit",(function(){try{k()}catch(e){throw console.warn("Fail to clean temporary files on exit : ",e),e}})),v=!0)}function k(){return!!m&&{files:function(){if(!m)return!1;for(var e,t=0;void 0!==(e=y.shift());)l(e,{maxBusyTries:6}),t++;return t}(),dirs:function(){if(!m)return!1;for(var e,t=0;void 0!==(e=b.shift());)l(e,{maxBusyTries:6}),t++;return t}()}}t.dir=d,t.track=function(t){return m=!1!==t,e.exports},t.mkdir=(e,t)=>{const n=h(t),r=n[0];t=n[1];let o=f(e,"d-");return u(o,448,(e=>{e||_(o),t(e,o)})),r},t.mkdirSync=e=>{let t=f(e,"d-");return u.sync(t,448),_(t),t},t.open=(e,t)=>{const n=h(t),r=n[0];t=n[1];const a=f(e,"f-");return o.open(a,p,384,((e,n)=>{e||w(a),t(e,{path:a,fd:n})})),r},t.openSync=e=>{const t=f(e,"f-");let n=o.openSync(t,p,384);return w(t),{path:t,fd:n}},t.path=f,t.cleanup=function(e){var t=h(e),n=t[0];return e=t[1],m?(function(e){var t=h(e),n=t[0];if(e=t[1],!m)return e(new Error("not tracking")),n;var r,o=0,a=y.length;if(!a)return e(null,o),n;for(var i=function(t){if(a){if(t)return e(t),void(a=0);o++,--a||e(null,o)}};void 0!==(r=y.shift());)c(r,{maxBusyTries:6},i)}((function(t,n){t?e(t,{files:n}):function(e){var t=h(e),n=t[0];if(e=t[1],!m)return e(new Error("not tracking")),n;var r,o=0,a=b.length;if(!a)return e(null,o),n;for(var i=function(t){if(a){if(t)return e(t,o),void(a=0);o++,--a||e(null,o)}};void 0!==(r=b.shift());)c(r,{maxBusyTries:6},i)}((function(t,r){e(t,{files:n,dirs:r})}))})),n):(e(new Error("not tracking")),n)},t.cleanupSync=k,t.createWriteStream=e=>{const t=f(e,"s-");let n=o.createWriteStream(t,{flags:p,mode:384});return w(t),n}},79562:(e,t,n)=>{var r=n(34155);e.exports=h,h.sync=y;var o=n(97680),a=n(26470),i=n(12993),s=n(12884),c=parseInt("666",8),u={nosort:!0,silent:!0},l=0,d="win32"===r.platform;function p(e){["unlink","chmod","stat","lstat","rmdir","readdir"].forEach((function(t){e[t]=e[t]||i[t],e[t+="Sync"]=e[t]||i[t]})),e.maxBusyTries=e.maxBusyTries||3,e.emfileWait=e.emfileWait||1e3,!1===e.glob&&(e.disableGlob=!0),e.disableGlob=e.disableGlob||!1,e.glob=e.glob||u}function h(e,t,n){"function"==typeof t&&(n=t,t={}),o(e,"rimraf: missing path"),o.equal(typeof e,"string","rimraf: path should be a string"),o.equal(typeof n,"function","rimraf: callback function required"),o(t,"rimraf: invalid options argument provided"),o.equal(typeof t,"object","rimraf: options should be object"),p(t);var r=0,a=null,i=0;if(t.disableGlob||!s.hasMagic(e))return c(null,[e]);function c(e,o){return e?n(e):0===(i=o.length)?n():void o.forEach((function(e){f(e,t,(function o(s){if(s){if(("EBUSY"===s.code||"ENOTEMPTY"===s.code||"EPERM"===s.code)&&r<t.maxBusyTries)return r++,setTimeout((function(){f(e,t,o)}),100*r);if("EMFILE"===s.code&&l<t.emfileWait)return setTimeout((function(){f(e,t,o)}),l++);"ENOENT"===s.code&&(s=null)}l=0,function(e){a=a||e,0==--i&&n(a)}(s)}))}))}t.lstat(e,(function(n,r){if(!n)return c(null,[e]);s(e,t.glob,c)}))}function f(e,t,n){o(e),o(t),o("function"==typeof n),t.lstat(e,(function(r,o){return r&&"ENOENT"===r.code?n(null):(r&&"EPERM"===r.code&&d&&g(e,t,r,n),o&&o.isDirectory()?v(e,t,r,n):void t.unlink(e,(function(r){if(r){if("ENOENT"===r.code)return n(null);if("EPERM"===r.code)return d?g(e,t,r,n):v(e,t,r,n);if("EISDIR"===r.code)return v(e,t,r,n)}return n(r)})))}))}function g(e,t,n,r){o(e),o(t),o("function"==typeof r),n&&o(n instanceof Error),t.chmod(e,c,(function(o){o?r("ENOENT"===o.code?null:n):t.stat(e,(function(o,a){o?r("ENOENT"===o.code?null:n):a.isDirectory()?v(e,t,n,r):t.unlink(e,r)}))}))}function m(e,t,n){o(e),o(t),n&&o(n instanceof Error);try{t.chmodSync(e,c)}catch(e){if("ENOENT"===e.code)return;throw n}try{var r=t.statSync(e)}catch(e){if("ENOENT"===e.code)return;throw n}r.isDirectory()?b(e,t,n):t.unlinkSync(e)}function v(e,t,n,r){o(e),o(t),n&&o(n instanceof Error),o("function"==typeof r),t.rmdir(e,(function(i){!i||"ENOTEMPTY"!==i.code&&"EEXIST"!==i.code&&"EPERM"!==i.code?i&&"ENOTDIR"===i.code?r(n):r(i):function(e,t,n){o(e),o(t),o("function"==typeof n),t.readdir(e,(function(r,o){if(r)return n(r);var i,s=o.length;if(0===s)return t.rmdir(e,n);o.forEach((function(r){h(a.join(e,r),t,(function(r){if(!i)return r?n(i=r):void(0==--s&&t.rmdir(e,n))}))}))}))}(e,t,r)}))}function y(e,t){var n;if(p(t=t||{}),o(e,"rimraf: missing path"),o.equal(typeof e,"string","rimraf: path should be a string"),o(t,"rimraf: missing options"),o.equal(typeof t,"object","rimraf: options should be object"),t.disableGlob||!s.hasMagic(e))n=[e];else try{t.lstatSync(e),n=[e]}catch(r){n=s.sync(e,t.glob)}if(n.length)for(var r=0;r<n.length;r++){e=n[r];try{var a=t.lstatSync(e)}catch(n){if("ENOENT"===n.code)return;"EPERM"===n.code&&d&&m(e,t,n)}try{a&&a.isDirectory()?b(e,t,null):t.unlinkSync(e)}catch(n){if("ENOENT"===n.code)return;if("EPERM"===n.code)return d?m(e,t,n):b(e,t,n);if("EISDIR"!==n.code)throw n;b(e,t,n)}}}function b(e,t,n){o(e),o(t),n&&o(n instanceof Error);try{t.rmdirSync(e)}catch(r){if("ENOENT"===r.code)return;if("ENOTDIR"===r.code)throw n;"ENOTEMPTY"!==r.code&&"EEXIST"!==r.code&&"EPERM"!==r.code||function(e,t){o(e),o(t),t.readdirSync(e).forEach((function(n){y(a.join(e,n),t)}));for(var n=d?100:1,r=0;;){var i=!0;try{var s=t.rmdirSync(e,t);return i=!1,s}finally{if(++r<n&&i)continue}}}(e,t)}}},99018:function(e,t){var n,r;void 0===(r="function"==typeof(n=function(){var e,t,n,r;Object.keys||(Object.keys=(e=Object.prototype.hasOwnProperty,t=!{toString:null}.propertyIsEnumerable("toString"),r=(n=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"]).length,function(o){if("object"!=typeof o&&"function"!=typeof o||null===o)throw new TypeError("Object.keys called on non-object");var a=[];for(var i in o)e.call(o,i)&&a.push(i);if(t)for(var s=0;s<r;s++)e.call(o,n[s])&&a.push(n[s]);return a})),Object.create||(Object.create=function(){function e(){}return function(t){if(1!==arguments.length)throw new Error("Object.create implementation only accepts one parameter.");return e.prototype=t,new e}}()),Array.isArray||(Array.isArray=function(e){return"[object Array]"===Object.prototype.toString.call(e)}),Array.prototype.indexOf||(Array.prototype.indexOf=function(e){if(null===this)throw new TypeError;var t=Object(this),n=t.length>>>0;if(0===n)return-1;var r=0;if(arguments.length>1&&((r=Number(arguments[1]))!=r?r=0:0!==r&&r!==1/0&&r!==-1/0&&(r=(r>0||-1)*Math.floor(Math.abs(r)))),r>=n)return-1;for(var o=r>=0?r:Math.max(n-Math.abs(r),0);o<n;o++)if(o in t&&t[o]===e)return o;return-1}),Object.isFrozen||(Object.isFrozen=function(e){for(var t="tv4_test_frozen_key";e.hasOwnProperty(t);)t+=Math.random();try{return e[t]=!0,delete e[t],!1}catch(e){return!0}});var o={"+":!0,"#":!0,".":!0,"/":!0,";":!0,"?":!0,"&":!0},a={"*":!0};function i(e){return encodeURI(e).replace(/%25[0-9][0-9]/g,(function(e){return"%"+e.substring(3)}))}function s(e){var t="";o[e.charAt(0)]&&(t=e.charAt(0),e=e.substring(1));var n="",r="",s=!0,c=!1,u=!1;"+"===t?s=!1:"."===t?(r=".",n="."):"/"===t?(r="/",n="/"):"#"===t?(r="#",s=!1):";"===t?(r=";",n=";",c=!0,u=!0):"?"===t?(r="?",n="&",c=!0):"&"===t&&(r="&",n="&",c=!0);for(var l=[],d=e.split(","),p=[],h={},f=0;f<d.length;f++){var g=d[f],m=null;if(-1!==g.indexOf(":")){var v=g.split(":");g=v[0],m=parseInt(v[1],10)}for(var y={};a[g.charAt(g.length-1)];)y[g.charAt(g.length-1)]=!0,g=g.substring(0,g.length-1);var b={truncate:m,name:g,suffices:y};p.push(b),h[g]=b,l.push(g)}var w=function(e){for(var t="",o=0,a=0;a<p.length;a++){var l=p[a],d=e(l.name);if(null==d||Array.isArray(d)&&0===d.length||"object"==typeof d&&0===Object.keys(d).length)o++;else if(t+=a===o?r:n||",",Array.isArray(d)){c&&(t+=l.name+"=");for(var h=0;h<d.length;h++)h>0&&(t+=l.suffices["*"]&&n||",",l.suffices["*"]&&c&&(t+=l.name+"=")),t+=s?encodeURIComponent(d[h]).replace(/!/g,"%21"):i(d[h])}else if("object"==typeof d){c&&!l.suffices["*"]&&(t+=l.name+"=");var f=!0;for(var g in d)f||(t+=l.suffices["*"]&&n||","),f=!1,t+=s?encodeURIComponent(g).replace(/!/g,"%21"):i(g),t+=l.suffices["*"]?"=":",",t+=s?encodeURIComponent(d[g]).replace(/!/g,"%21"):i(d[g])}else c&&(t+=l.name,u&&""===d||(t+="=")),null!=l.truncate&&(d=d.substring(0,l.truncate)),t+=s?encodeURIComponent(d).replace(/!/g,"%21"):i(d)}return t};return w.varNames=l,{prefix:r,substitution:w}}function c(e){if(!(this instanceof c))return new c(e);for(var t=e.split("{"),n=[t.shift()],r=[],o=[],a=[];t.length>0;){var i=t.shift(),u=i.split("}")[0],l=i.substring(u.length+1),d=s(u);o.push(d.substitution),r.push(d.prefix),n.push(l),a=a.concat(d.substitution.varNames)}this.fill=function(e){for(var t=n[0],r=0;r<o.length;r++)t+=(0,o[r])(e),t+=n[r+1];return t},this.varNames=a,this.template=e}c.prototype={toString:function(){return this.template},fillFromObject:function(e){return this.fill((function(t){return e[t]}))}};var u=function(e,t,n,r,o){if(this.missing=[],this.missingMap={},this.formatValidators=e?Object.create(e.formatValidators):{},this.schemas=e?Object.create(e.schemas):{},this.collectMultiple=t,this.errors=[],this.handleError=t?this.collectError:this.returnError,r&&(this.checkRecursive=!0,this.scanned=[],this.scannedFrozen=[],this.scannedFrozenSchemas=[],this.scannedFrozenValidationErrors=[],this.validatedSchemasKey="tv4_validation_id",this.validationErrorsKey="tv4_validation_errors_id"),o&&(this.trackUnknownProperties=!0,this.knownPropertyPaths={},this.unknownPropertyPaths={}),this.errorReporter=n||v("en"),"string"==typeof this.errorReporter)throw new Error("debug");if(this.definedKeywords={},e)for(var a in e.definedKeywords)this.definedKeywords[a]=e.definedKeywords[a].slice(0)};function l(e,t){if(e===t)return!0;if(e&&t&&"object"==typeof e&&"object"==typeof t){if(Array.isArray(e)!==Array.isArray(t))return!1;if(Array.isArray(e)){if(e.length!==t.length)return!1;for(var n=0;n<e.length;n++)if(!l(e[n],t[n]))return!1}else{var r;for(r in e)if(void 0===t[r]&&void 0!==e[r])return!1;for(r in t)if(void 0===e[r]&&void 0!==t[r])return!1;for(r in e)if(!l(e[r],t[r]))return!1}return!0}return!1}u.prototype.defineKeyword=function(e,t){this.definedKeywords[e]=this.definedKeywords[e]||[],this.definedKeywords[e].push(t)},u.prototype.createError=function(e,t,n,r,o,a,i){var s=new x(e,t,n,r,o);return s.message=this.errorReporter(s,a,i),s},u.prototype.returnError=function(e){return e},u.prototype.collectError=function(e){return e&&this.errors.push(e),null},u.prototype.prefixErrors=function(e,t,n){for(var r=e;r<this.errors.length;r++)this.errors[r]=this.errors[r].prefixWith(t,n);return this},u.prototype.banUnknownProperties=function(e,t){for(var n in this.unknownPropertyPaths){var r=this.createError(y.UNKNOWN_PROPERTY,{path:n},n,"",null,e,t),o=this.handleError(r);if(o)return o}return null},u.prototype.addFormat=function(e,t){if("object"==typeof e){for(var n in e)this.addFormat(n,e[n]);return this}this.formatValidators[e]=t},u.prototype.resolveRefs=function(e,t){if(void 0!==e.$ref){if((t=t||{})[e.$ref])return this.createError(y.CIRCULAR_REFERENCE,{urls:Object.keys(t).join(", ")},"","",null,void 0,e);t[e.$ref]=!0,e=this.getSchema(e.$ref,t)}return e},u.prototype.getSchema=function(e,t){var n;if(void 0!==this.schemas[e])return n=this.schemas[e],this.resolveRefs(n,t);var r=e,o="";if(-1!==e.indexOf("#")&&(o=e.substring(e.indexOf("#")+1),r=e.substring(0,e.indexOf("#"))),"object"==typeof this.schemas[r]){n=this.schemas[r];var a=decodeURIComponent(o);if(""===a)return this.resolveRefs(n,t);if("/"!==a.charAt(0))return;for(var i=a.split("/").slice(1),s=0;s<i.length;s++){var c=i[s].replace(/~1/g,"/").replace(/~0/g,"~");if(void 0===n[c]){n=void 0;break}n=n[c]}if(void 0!==n)return this.resolveRefs(n,t)}void 0===this.missing[r]&&(this.missing.push(r),this.missing[r]=r,this.missingMap[r]=r)},u.prototype.searchSchemas=function(e,t){if(Array.isArray(e))for(var n=0;n<e.length;n++)this.searchSchemas(e[n],t);else if(e&&"object"==typeof e)for(var r in"string"==typeof e.id&&function(e,t){if(t.substring(0,e.length)===e){var n=t.substring(e.length);if(t.length>0&&"/"===t.charAt(e.length-1)||"#"===n.charAt(0)||"?"===n.charAt(0))return!0}return!1}(t,e.id)&&void 0===this.schemas[e.id]&&(this.schemas[e.id]=e),e)if("enum"!==r)if("object"==typeof e[r])this.searchSchemas(e[r],t);else if("$ref"===r){var o=g(e[r]);o&&void 0===this.schemas[o]&&void 0===this.missingMap[o]&&(this.missingMap[o]=o)}},u.prototype.addSchema=function(e,t){if("string"!=typeof e||void 0===t){if("object"!=typeof e||"string"!=typeof e.id)return;e=(t=e).id}e===g(e)+"#"&&(e=g(e)),this.schemas[e]=t,delete this.missingMap[e],m(t,e),this.searchSchemas(t,e)},u.prototype.getSchemaMap=function(){var e={};for(var t in this.schemas)e[t]=this.schemas[t];return e},u.prototype.getSchemaUris=function(e){var t=[];for(var n in this.schemas)e&&!e.test(n)||t.push(n);return t},u.prototype.getMissingUris=function(e){var t=[];for(var n in this.missingMap)e&&!e.test(n)||t.push(n);return t},u.prototype.dropSchemas=function(){this.schemas={},this.reset()},u.prototype.reset=function(){this.missing=[],this.missingMap={},this.errors=[]},u.prototype.validateAll=function(e,t,n,r,o){var a;if(!(t=this.resolveRefs(t)))return null;if(t instanceof x)return this.errors.push(t),t;var i,s=this.errors.length,c=null,u=null;if(this.checkRecursive&&e&&"object"==typeof e){if(a=!this.scanned.length,e[this.validatedSchemasKey]){var l=e[this.validatedSchemasKey].indexOf(t);if(-1!==l)return this.errors=this.errors.concat(e[this.validationErrorsKey][l]),null}if(Object.isFrozen(e)&&-1!==(i=this.scannedFrozen.indexOf(e))){var d=this.scannedFrozenSchemas[i].indexOf(t);if(-1!==d)return this.errors=this.errors.concat(this.scannedFrozenValidationErrors[i][d]),null}if(this.scanned.push(e),Object.isFrozen(e))-1===i&&(i=this.scannedFrozen.length,this.scannedFrozen.push(e),this.scannedFrozenSchemas.push([])),c=this.scannedFrozenSchemas[i].length,this.scannedFrozenSchemas[i][c]=t,this.scannedFrozenValidationErrors[i][c]=[];else{if(!e[this.validatedSchemasKey])try{Object.defineProperty(e,this.validatedSchemasKey,{value:[],configurable:!0}),Object.defineProperty(e,this.validationErrorsKey,{value:[],configurable:!0})}catch(t){e[this.validatedSchemasKey]=[],e[this.validationErrorsKey]=[]}u=e[this.validatedSchemasKey].length,e[this.validatedSchemasKey][u]=t,e[this.validationErrorsKey][u]=[]}}var p=this.errors.length,h=this.validateBasic(e,t,o)||this.validateNumeric(e,t,o)||this.validateString(e,t,o)||this.validateArray(e,t,o)||this.validateObject(e,t,o)||this.validateCombinations(e,t,o)||this.validateHypermedia(e,t,o)||this.validateFormat(e,t,o)||this.validateDefinedKeywords(e,t,o)||null;if(a){for(;this.scanned.length;)delete this.scanned.pop()[this.validatedSchemasKey];this.scannedFrozen=[],this.scannedFrozenSchemas=[]}if(h||p!==this.errors.length)for(;n&&n.length||r&&r.length;){var f=n&&n.length?""+n.pop():null,g=r&&r.length?""+r.pop():null;h&&(h=h.prefixWith(f,g)),this.prefixErrors(p,f,g)}return null!==c?this.scannedFrozenValidationErrors[i][c]=this.errors.slice(s):null!==u&&(e[this.validationErrorsKey][u]=this.errors.slice(s)),this.handleError(h)},u.prototype.validateFormat=function(e,t){if("string"!=typeof t.format||!this.formatValidators[t.format])return null;var n=this.formatValidators[t.format].call(null,e,t);return"string"==typeof n||"number"==typeof n?this.createError(y.FORMAT_CUSTOM,{message:n},"","/format",null,e,t):n&&"object"==typeof n?this.createError(y.FORMAT_CUSTOM,{message:n.message||"?"},n.dataPath||"",n.schemaPath||"/format",null,e,t):null},u.prototype.validateDefinedKeywords=function(e,t,n){for(var r in this.definedKeywords)if(void 0!==t[r])for(var o=this.definedKeywords[r],a=0;a<o.length;a++){var i=(0,o[a])(e,t[r],t,n);if("string"==typeof i||"number"==typeof i)return this.createError(y.KEYWORD_CUSTOM,{key:r,message:i},"","",null,e,t).prefixWith(null,r);if(i&&"object"==typeof i){var s=i.code;if("string"==typeof s){if(!y[s])throw new Error("Undefined error code (use defineError): "+s);s=y[s]}else"number"!=typeof s&&(s=y.KEYWORD_CUSTOM);var c="object"==typeof i.message?i.message:{key:r,message:i.message||"?"},u=i.schemaPath||"/"+r.replace(/~/g,"~0").replace(/\//g,"~1");return this.createError(s,c,i.dataPath||null,u,null,e,t)}}return null},u.prototype.validateBasic=function(e,t,n){var r;return(r=this.validateType(e,t,n))||(r=this.validateEnum(e,t,n))?r.prefixWith(null,"type"):null},u.prototype.validateType=function(e,t){if(void 0===t.type)return null;var n=typeof e;null===e?n="null":Array.isArray(e)&&(n="array");var r=t.type;Array.isArray(r)||(r=[r]);for(var o=0;o<r.length;o++){var a=r[o];if(a===n||"integer"===a&&"number"===n&&e%1==0)return null}return this.createError(y.INVALID_TYPE,{type:n,expected:r.join("/")},"","",null,e,t)},u.prototype.validateEnum=function(e,t){if(void 0===t.enum)return null;for(var n=0;n<t.enum.length;n++)if(l(e,t.enum[n]))return null;return this.createError(y.ENUM_MISMATCH,{value:"undefined"!=typeof JSON?JSON.stringify(e):e},"","",null,e,t)},u.prototype.validateNumeric=function(e,t,n){return this.validateMultipleOf(e,t,n)||this.validateMinMax(e,t,n)||this.validateNaN(e,t,n)||null};var d=Math.pow(2,-51),p=1-d;function h(e){var t=String(e).replace(/^\s+|\s+$/g,"").match(/^([^:\/?#]+:)?(\/\/(?:[^:@]*(?::[^:@]*)?@)?(([^:\/?#]*)(?::(\d*))?))?([^?#]*)(\?[^#]*)?(#[\s\S]*)?/);return t?{href:t[0]||"",protocol:t[1]||"",authority:t[2]||"",host:t[3]||"",hostname:t[4]||"",port:t[5]||"",pathname:t[6]||"",search:t[7]||"",hash:t[8]||""}:null}function f(e,t){return t=h(t||""),e=h(e||""),t&&e?(t.protocol||e.protocol)+(t.protocol||t.authority?t.authority:e.authority)+(n=t.protocol||t.authority||"/"===t.pathname.charAt(0)?t.pathname:t.pathname?(e.authority&&!e.pathname?"/":"")+e.pathname.slice(0,e.pathname.lastIndexOf("/")+1)+t.pathname:e.pathname,r=[],n.replace(/^(\.\.?(\/|$))+/,"").replace(/\/(\.(\/|$))+/g,"/").replace(/\/\.\.$/,"/../").replace(/\/?[^\/]*/g,(function(e){"/.."===e?r.pop():r.push(e)})),r.join("").replace(/^\//,"/"===n.charAt(0)?"/":""))+(t.protocol||t.authority||t.pathname?t.search:t.search||e.search)+t.hash:null;var n,r}function g(e){return e.split("#")[0]}function m(e,t){if(e&&"object"==typeof e)if(void 0===t?t=e.id:"string"==typeof e.id&&(t=f(t,e.id),e.id=t),Array.isArray(e))for(var n=0;n<e.length;n++)m(e[n],t);else for(var r in"string"==typeof e.$ref&&(e.$ref=f(t,e.$ref)),e)"enum"!==r&&m(e[r],t)}function v(e){var t=k[e=e||"en"];return function(e){var n=t[e.code]||_[e.code];if("string"!=typeof n)return"Unknown error code "+e.code+": "+JSON.stringify(e.messageParams);var r=e.params;return n.replace(/\{([^{}]*)\}/g,(function(e,t){var n=r[t];return"string"==typeof n||"number"==typeof n?n:e}))}}u.prototype.validateMultipleOf=function(e,t){var n=t.multipleOf||t.divisibleBy;if(void 0===n)return null;if("number"==typeof e){var r=e/n%1;if(r>=d&&r<p)return this.createError(y.NUMBER_MULTIPLE_OF,{value:e,multipleOf:n},"","",null,e,t)}return null},u.prototype.validateMinMax=function(e,t){if("number"!=typeof e)return null;if(void 0!==t.minimum){if(e<t.minimum)return this.createError(y.NUMBER_MINIMUM,{value:e,minimum:t.minimum},"","/minimum",null,e,t);if(t.exclusiveMinimum&&e===t.minimum)return this.createError(y.NUMBER_MINIMUM_EXCLUSIVE,{value:e,minimum:t.minimum},"","/exclusiveMinimum",null,e,t)}if(void 0!==t.maximum){if(e>t.maximum)return this.createError(y.NUMBER_MAXIMUM,{value:e,maximum:t.maximum},"","/maximum",null,e,t);if(t.exclusiveMaximum&&e===t.maximum)return this.createError(y.NUMBER_MAXIMUM_EXCLUSIVE,{value:e,maximum:t.maximum},"","/exclusiveMaximum",null,e,t)}return null},u.prototype.validateNaN=function(e,t){return"number"!=typeof e?null:!0===isNaN(e)||e===1/0||e===-1/0?this.createError(y.NUMBER_NOT_A_NUMBER,{value:e},"","/type",null,e,t):null},u.prototype.validateString=function(e,t,n){return this.validateStringLength(e,t,n)||this.validateStringPattern(e,t,n)||null},u.prototype.validateStringLength=function(e,t){return"string"!=typeof e?null:void 0!==t.minLength&&e.length<t.minLength?this.createError(y.STRING_LENGTH_SHORT,{length:e.length,minimum:t.minLength},"","/minLength",null,e,t):void 0!==t.maxLength&&e.length>t.maxLength?this.createError(y.STRING_LENGTH_LONG,{length:e.length,maximum:t.maxLength},"","/maxLength",null,e,t):null},u.prototype.validateStringPattern=function(e,t){if("string"!=typeof e||"string"!=typeof t.pattern&&!(t.pattern instanceof RegExp))return null;var n;if(t.pattern instanceof RegExp)n=t.pattern;else{var r,o="",a=t.pattern.match(/^\/(.+)\/([img]*)$/);a?(r=a[1],o=a[2]):r=t.pattern,n=new RegExp(r,o)}return n.test(e)?null:this.createError(y.STRING_PATTERN,{pattern:t.pattern},"","/pattern",null,e,t)},u.prototype.validateArray=function(e,t,n){return Array.isArray(e)&&(this.validateArrayLength(e,t,n)||this.validateArrayUniqueItems(e,t,n)||this.validateArrayItems(e,t,n))||null},u.prototype.validateArrayLength=function(e,t){var n;return void 0!==t.minItems&&e.length<t.minItems&&(n=this.createError(y.ARRAY_LENGTH_SHORT,{length:e.length,minimum:t.minItems},"","/minItems",null,e,t),this.handleError(n))||void 0!==t.maxItems&&e.length>t.maxItems&&(n=this.createError(y.ARRAY_LENGTH_LONG,{length:e.length,maximum:t.maxItems},"","/maxItems",null,e,t),this.handleError(n))?n:null},u.prototype.validateArrayUniqueItems=function(e,t){if(t.uniqueItems)for(var n=0;n<e.length;n++)for(var r=n+1;r<e.length;r++)if(l(e[n],e[r])){var o=this.createError(y.ARRAY_UNIQUE,{match1:n,match2:r},"","/uniqueItems",null,e,t);if(this.handleError(o))return o}return null},u.prototype.validateArrayItems=function(e,t,n){if(void 0===t.items)return null;var r,o;if(Array.isArray(t.items)){for(o=0;o<e.length;o++)if(o<t.items.length){if(r=this.validateAll(e[o],t.items[o],[o],["items",o],n+"/"+o))return r}else if(void 0!==t.additionalItems)if("boolean"==typeof t.additionalItems){if(!t.additionalItems&&(r=this.createError(y.ARRAY_ADDITIONAL_ITEMS,{},"/"+o,"/additionalItems",null,e,t),this.handleError(r)))return r}else if(r=this.validateAll(e[o],t.additionalItems,[o],["additionalItems"],n+"/"+o))return r}else for(o=0;o<e.length;o++)if(r=this.validateAll(e[o],t.items,[o],["items"],n+"/"+o))return r;return null},u.prototype.validateObject=function(e,t,n){return"object"!=typeof e||null===e||Array.isArray(e)?null:this.validateObjectMinMaxProperties(e,t,n)||this.validateObjectRequiredProperties(e,t,n)||this.validateObjectProperties(e,t,n)||this.validateObjectDependencies(e,t,n)||null},u.prototype.validateObjectMinMaxProperties=function(e,t){var n,r=Object.keys(e);return void 0!==t.minProperties&&r.length<t.minProperties&&(n=this.createError(y.OBJECT_PROPERTIES_MINIMUM,{propertyCount:r.length,minimum:t.minProperties},"","/minProperties",null,e,t),this.handleError(n))||void 0!==t.maxProperties&&r.length>t.maxProperties&&(n=this.createError(y.OBJECT_PROPERTIES_MAXIMUM,{propertyCount:r.length,maximum:t.maxProperties},"","/maxProperties",null,e,t),this.handleError(n))?n:null},u.prototype.validateObjectRequiredProperties=function(e,t){if(void 0!==t.required)for(var n=0;n<t.required.length;n++){var r=t.required[n];if(void 0===e[r]){var o=this.createError(y.OBJECT_REQUIRED,{key:r},"","/required/"+n,null,e,t);if(this.handleError(o))return o}}return null},u.prototype.validateObjectProperties=function(e,t,n){var r;for(var o in e){var a=n+"/"+o.replace(/~/g,"~0").replace(/\//g,"~1"),i=!1;if(void 0!==t.properties&&void 0!==t.properties[o]&&(i=!0,r=this.validateAll(e[o],t.properties[o],[o],["properties",o],a)))return r;if(void 0!==t.patternProperties)for(var s in t.patternProperties)if(new RegExp(s).test(o)&&(i=!0,r=this.validateAll(e[o],t.patternProperties[s],[o],["patternProperties",s],a)))return r;if(i)this.trackUnknownProperties&&(this.knownPropertyPaths[a]=!0,delete this.unknownPropertyPaths[a]);else if(void 0!==t.additionalProperties){if(this.trackUnknownProperties&&(this.knownPropertyPaths[a]=!0,delete this.unknownPropertyPaths[a]),"boolean"==typeof t.additionalProperties){if(!t.additionalProperties&&(r=this.createError(y.OBJECT_ADDITIONAL_PROPERTIES,{key:o},"","/additionalProperties",null,e,t).prefixWith(o,null),this.handleError(r)))return r}else if(r=this.validateAll(e[o],t.additionalProperties,[o],["additionalProperties"],a))return r}else this.trackUnknownProperties&&!this.knownPropertyPaths[a]&&(this.unknownPropertyPaths[a]=!0)}return null},u.prototype.validateObjectDependencies=function(e,t,n){var r;if(void 0!==t.dependencies)for(var o in t.dependencies)if(void 0!==e[o]){var a=t.dependencies[o];if("string"==typeof a){if(void 0===e[a]&&(r=this.createError(y.OBJECT_DEPENDENCY_KEY,{key:o,missing:a},"","",null,e,t).prefixWith(null,o).prefixWith(null,"dependencies"),this.handleError(r)))return r}else if(Array.isArray(a))for(var i=0;i<a.length;i++){var s=a[i];if(void 0===e[s]&&(r=this.createError(y.OBJECT_DEPENDENCY_KEY,{key:o,missing:s},"","/"+i,null,e,t).prefixWith(null,o).prefixWith(null,"dependencies"),this.handleError(r)))return r}else if(r=this.validateAll(e,a,[],["dependencies",o],n))return r}return null},u.prototype.validateCombinations=function(e,t,n){return this.validateAllOf(e,t,n)||this.validateAnyOf(e,t,n)||this.validateOneOf(e,t,n)||this.validateNot(e,t,n)||null},u.prototype.validateAllOf=function(e,t,n){if(void 0===t.allOf)return null;for(var r,o=0;o<t.allOf.length;o++){var a=t.allOf[o];if(r=this.validateAll(e,a,[],["allOf",o],n))return r}return null},u.prototype.validateAnyOf=function(e,t,n){if(void 0===t.anyOf)return null;var r,o,a=[],i=this.errors.length;this.trackUnknownProperties&&(r=this.unknownPropertyPaths,o=this.knownPropertyPaths);for(var s=!0,c=0;c<t.anyOf.length;c++){this.trackUnknownProperties&&(this.unknownPropertyPaths={},this.knownPropertyPaths={});var u=t.anyOf[c],l=this.errors.length,d=this.validateAll(e,u,[],["anyOf",c],n);if(null===d&&l===this.errors.length){if(this.errors=this.errors.slice(0,i),this.trackUnknownProperties){for(var p in this.knownPropertyPaths)o[p]=!0,delete r[p];for(var h in this.unknownPropertyPaths)o[h]||(r[h]=!0);s=!1;continue}return null}d&&a.push(d.prefixWith(null,""+c).prefixWith(null,"anyOf"))}return this.trackUnknownProperties&&(this.unknownPropertyPaths=r,this.knownPropertyPaths=o),s?(a=a.concat(this.errors.slice(i)),this.errors=this.errors.slice(0,i),this.createError(y.ANY_OF_MISSING,{},"","/anyOf",a,e,t)):void 0},u.prototype.validateOneOf=function(e,t,n){if(void 0===t.oneOf)return null;var r,o,a=null,i=[],s=this.errors.length;this.trackUnknownProperties&&(r=this.unknownPropertyPaths,o=this.knownPropertyPaths);for(var c=0;c<t.oneOf.length;c++){this.trackUnknownProperties&&(this.unknownPropertyPaths={},this.knownPropertyPaths={});var u=t.oneOf[c],l=this.errors.length,d=this.validateAll(e,u,[],["oneOf",c],n);if(null===d&&l===this.errors.length){if(null!==a)return this.errors=this.errors.slice(0,s),this.createError(y.ONE_OF_MULTIPLE,{index1:a,index2:c},"","/oneOf",null,e,t);if(a=c,this.trackUnknownProperties){for(var p in this.knownPropertyPaths)o[p]=!0,delete r[p];for(var h in this.unknownPropertyPaths)o[h]||(r[h]=!0)}}else d&&i.push(d)}return this.trackUnknownProperties&&(this.unknownPropertyPaths=r,this.knownPropertyPaths=o),null===a?(i=i.concat(this.errors.slice(s)),this.errors=this.errors.slice(0,s),this.createError(y.ONE_OF_MISSING,{},"","/oneOf",i,e,t)):(this.errors=this.errors.slice(0,s),null)},u.prototype.validateNot=function(e,t,n){if(void 0===t.not)return null;var r,o,a=this.errors.length;this.trackUnknownProperties&&(r=this.unknownPropertyPaths,o=this.knownPropertyPaths,this.unknownPropertyPaths={},this.knownPropertyPaths={});var i=this.validateAll(e,t.not,null,null,n),s=this.errors.slice(a);return this.errors=this.errors.slice(0,a),this.trackUnknownProperties&&(this.unknownPropertyPaths=r,this.knownPropertyPaths=o),null===i&&0===s.length?this.createError(y.NOT_PASSED,{},"","/not",null,e,t):null},u.prototype.validateHypermedia=function(e,t,n){if(!t.links)return null;for(var r,o=0;o<t.links.length;o++){var a=t.links[o];if("describedby"===a.rel){for(var i=new c(a.href),s=!0,u=0;u<i.varNames.length;u++)if(!(i.varNames[u]in e)){s=!1;break}if(s){var l={$ref:i.fillFromObject(e)};if(r=this.validateAll(e,l,[],["links",o],n))return r}}}};var y={INVALID_TYPE:0,ENUM_MISMATCH:1,ANY_OF_MISSING:10,ONE_OF_MISSING:11,ONE_OF_MULTIPLE:12,NOT_PASSED:13,NUMBER_MULTIPLE_OF:100,NUMBER_MINIMUM:101,NUMBER_MINIMUM_EXCLUSIVE:102,NUMBER_MAXIMUM:103,NUMBER_MAXIMUM_EXCLUSIVE:104,NUMBER_NOT_A_NUMBER:105,STRING_LENGTH_SHORT:200,STRING_LENGTH_LONG:201,STRING_PATTERN:202,OBJECT_PROPERTIES_MINIMUM:300,OBJECT_PROPERTIES_MAXIMUM:301,OBJECT_REQUIRED:302,OBJECT_ADDITIONAL_PROPERTIES:303,OBJECT_DEPENDENCY_KEY:304,ARRAY_LENGTH_SHORT:400,ARRAY_LENGTH_LONG:401,ARRAY_UNIQUE:402,ARRAY_ADDITIONAL_ITEMS:403,FORMAT_CUSTOM:500,KEYWORD_CUSTOM:501,CIRCULAR_REFERENCE:600,UNKNOWN_PROPERTY:1e3},b={};for(var w in y)b[y[w]]=w;var _={INVALID_TYPE:"Invalid type: {type} (expected {expected})",ENUM_MISMATCH:"No enum match for: {value}",ANY_OF_MISSING:'Data does not match any schemas from "anyOf"',ONE_OF_MISSING:'Data does not match any schemas from "oneOf"',ONE_OF_MULTIPLE:'Data is valid against more than one schema from "oneOf": indices {index1} and {index2}',NOT_PASSED:'Data matches schema from "not"',NUMBER_MULTIPLE_OF:"Value {value} is not a multiple of {multipleOf}",NUMBER_MINIMUM:"Value {value} is less than minimum {minimum}",NUMBER_MINIMUM_EXCLUSIVE:"Value {value} is equal to exclusive minimum {minimum}",NUMBER_MAXIMUM:"Value {value} is greater than maximum {maximum}",NUMBER_MAXIMUM_EXCLUSIVE:"Value {value} is equal to exclusive maximum {maximum}",NUMBER_NOT_A_NUMBER:"Value {value} is not a valid number",STRING_LENGTH_SHORT:"String is too short ({length} chars), minimum {minimum}",STRING_LENGTH_LONG:"String is too long ({length} chars), maximum {maximum}",STRING_PATTERN:"String does not match pattern: {pattern}",OBJECT_PROPERTIES_MINIMUM:"Too few properties defined ({propertyCount}), minimum {minimum}",OBJECT_PROPERTIES_MAXIMUM:"Too many properties defined ({propertyCount}), maximum {maximum}",OBJECT_REQUIRED:"Missing required property: {key}",OBJECT_ADDITIONAL_PROPERTIES:"Additional properties not allowed",OBJECT_DEPENDENCY_KEY:"Dependency failed - key must exist: {missing} (due to key: {key})",ARRAY_LENGTH_SHORT:"Array is too short ({length}), minimum {minimum}",ARRAY_LENGTH_LONG:"Array is too long ({length}), maximum {maximum}",ARRAY_UNIQUE:"Array items are not unique (indices {match1} and {match2})",ARRAY_ADDITIONAL_ITEMS:"Additional items not allowed",FORMAT_CUSTOM:"Format validation failed ({message})",KEYWORD_CUSTOM:"Keyword failed: {key} ({message})",CIRCULAR_REFERENCE:"Circular $refs: {urls}",UNKNOWN_PROPERTY:"Unknown property (not in schema)"};function x(e,t,n,r,o){if(Error.call(this),void 0===e)throw new Error("No error code supplied: "+r);this.message="",this.params=t,this.code=e,this.dataPath=n||"",this.schemaPath=r||"",this.subErrors=o||null;var a=new Error(this.message);if(this.stack=a.stack||a.stacktrace,!this.stack)try{throw a}catch(a){this.stack=a.stack||a.stacktrace}}x.prototype=Object.create(Error.prototype),x.prototype.constructor=x,x.prototype.name="ValidationError",x.prototype.prefixWith=function(e,t){if(null!==e&&(e=e.replace(/~/g,"~0").replace(/\//g,"~1"),this.dataPath="/"+e+this.dataPath),null!==t&&(t=t.replace(/~/g,"~0").replace(/\//g,"~1"),this.schemaPath="/"+t+this.schemaPath),null!==this.subErrors)for(var n=0;n<this.subErrors.length;n++)this.subErrors[n].prefixWith(e,t);return this};var k={};var P=function e(t){var n,r,o=new u,a={setErrorReporter:function(e){return"string"==typeof e?this.language(e):(r=e,!0)},addFormat:function(){o.addFormat.apply(o,arguments)},language:function(e){return e?(k[e]||(e=e.split("-")[0]),!!k[e]&&(n=e,e)):n},addLanguage:function(e,t){var n;for(n in y)t[n]&&!t[y[n]]&&(t[y[n]]=t[n]);var r=e.split("-")[0];if(k[r])for(n in k[e]=Object.create(k[r]),t)void 0===k[r][n]&&(k[r][n]=t[n]),k[e][n]=t[n];else k[e]=t,k[r]=t;return this},freshApi:function(t){var n=e();return t&&n.language(t),n},validate:function(e,t,a,i){var s=v(n),c=new u(o,!1,r?function(e,t,n){return r(e,t,n)||s(e,t,n)}:s,a,i);"string"==typeof t&&(t={$ref:t}),c.addSchema("",t);var l=c.validateAll(e,t,null,null,"");return!l&&i&&(l=c.banUnknownProperties(e,t)),this.error=l,this.missing=c.missing,this.valid=null===l,this.valid},validateResult:function(){var e={toString:function(){return this.valid?"valid":this.error.message}};return this.validate.apply(e,arguments),e},validateMultiple:function(e,t,a,i){var s=v(n),c=new u(o,!0,r?function(e,t,n){return r(e,t,n)||s(e,t,n)}:s,a,i);"string"==typeof t&&(t={$ref:t}),c.addSchema("",t),c.validateAll(e,t,null,null,""),i&&c.banUnknownProperties(e,t);var l={toString:function(){return this.valid?"valid":this.error.message}};return l.errors=c.errors,l.missing=c.missing,l.valid=0===l.errors.length,l},addSchema:function(){return o.addSchema.apply(o,arguments)},getSchema:function(){return o.getSchema.apply(o,arguments)},getSchemaMap:function(){return o.getSchemaMap.apply(o,arguments)},getSchemaUris:function(){return o.getSchemaUris.apply(o,arguments)},getMissingUris:function(){return o.getMissingUris.apply(o,arguments)},dropSchemas:function(){o.dropSchemas.apply(o,arguments)},defineKeyword:function(){o.defineKeyword.apply(o,arguments)},defineError:function(e,t,n){if("string"!=typeof e||!/^[A-Z]+(_[A-Z]+)*$/.test(e))throw new Error("Code name must be a string in UPPER_CASE_WITH_UNDERSCORES");if("number"!=typeof t||t%1!=0||t<1e4)throw new Error("Code number must be an integer > 10000");if(void 0!==y[e])throw new Error("Error already defined: "+e+" as "+y[e]);if(void 0!==b[t])throw new Error("Error code already used: "+b[t]+" as "+t);for(var r in y[e]=t,b[t]=e,_[e]=_[t]=n,k){var o=k[r];o[e]&&(o[t]=o[t]||o[e])}},reset:function(){o.reset(),this.error=null,this.missing=[],this.valid=!0},missing:[],error:null,valid:!0,normSchema:m,resolveUrl:f,getDocumentUri:g,errorCodes:y};return a.language(t||"en"),a}();return P.addLanguage("en-gb",_),P.tv4=P,P})?n.apply(t,[]):n)||(e.exports=r)},13469:function(e,t){var n;(function(){var r=this,o=r._,a=Array.prototype,i=Object.prototype,s=Function.prototype,c=a.push,u=a.slice,l=i.toString,d=i.hasOwnProperty,p=Array.isArray,h=Object.keys,f=s.bind,g=Object.create,m=function(){},v=function(e){return e instanceof v?e:this instanceof v?void(this._wrapped=e):new v(e)};e.exports&&(t=e.exports=v),t._=v,v.VERSION="1.8.3";var y=function(e,t,n){if(void 0===t)return e;switch(null==n?3:n){case 1:return function(n){return e.call(t,n)};case 2:return function(n,r){return e.call(t,n,r)};case 3:return function(n,r,o){return e.call(t,n,r,o)};case 4:return function(n,r,o,a){return e.call(t,n,r,o,a)}}return function(){return e.apply(t,arguments)}},b=function(e,t,n){return null==e?v.identity:v.isFunction(e)?y(e,t,n):v.isObject(e)?v.matcher(e):v.property(e)};v.iteratee=function(e,t){return b(e,t,1/0)};var w=function(e,t){return function(n){var r=arguments.length;if(r<2||null==n)return n;for(var o=1;o<r;o++)for(var a=arguments[o],i=e(a),s=i.length,c=0;c<s;c++){var u=i[c];t&&void 0!==n[u]||(n[u]=a[u])}return n}},_=function(e){if(!v.isObject(e))return{};if(g)return g(e);m.prototype=e;var t=new m;return m.prototype=null,t},x=function(e){return function(t){return null==t?void 0:t[e]}},k=Math.pow(2,53)-1,P=x("length"),S=function(e){var t=P(e);return"number"==typeof t&&t>=0&&t<=k};function C(e){function t(t,n,r,o,a,i){for(;a>=0&&a<i;a+=e){var s=o?o[a]:a;r=n(r,t[s],s,t)}return r}return function(n,r,o,a){r=y(r,a,4);var i=!S(n)&&v.keys(n),s=(i||n).length,c=e>0?0:s-1;return arguments.length<3&&(o=n[i?i[c]:c],c+=e),t(n,r,o,i,c,s)}}v.each=v.forEach=function(e,t,n){var r,o;if(t=y(t,n),S(e))for(r=0,o=e.length;r<o;r++)t(e[r],r,e);else{var a=v.keys(e);for(r=0,o=a.length;r<o;r++)t(e[a[r]],a[r],e)}return e},v.map=v.collect=function(e,t,n){t=b(t,n);for(var r=!S(e)&&v.keys(e),o=(r||e).length,a=Array(o),i=0;i<o;i++){var s=r?r[i]:i;a[i]=t(e[s],s,e)}return a},v.reduce=v.foldl=v.inject=C(1),v.reduceRight=v.foldr=C(-1),v.find=v.detect=function(e,t,n){var r;if(void 0!==(r=S(e)?v.findIndex(e,t,n):v.findKey(e,t,n))&&-1!==r)return e[r]},v.filter=v.select=function(e,t,n){var r=[];return t=b(t,n),v.each(e,(function(e,n,o){t(e,n,o)&&r.push(e)})),r},v.reject=function(e,t,n){return v.filter(e,v.negate(b(t)),n)},v.every=v.all=function(e,t,n){t=b(t,n);for(var r=!S(e)&&v.keys(e),o=(r||e).length,a=0;a<o;a++){var i=r?r[a]:a;if(!t(e[i],i,e))return!1}return!0},v.some=v.any=function(e,t,n){t=b(t,n);for(var r=!S(e)&&v.keys(e),o=(r||e).length,a=0;a<o;a++){var i=r?r[a]:a;if(t(e[i],i,e))return!0}return!1},v.contains=v.includes=v.include=function(e,t,n,r){return S(e)||(e=v.values(e)),("number"!=typeof n||r)&&(n=0),v.indexOf(e,t,n)>=0},v.invoke=function(e,t){var n=u.call(arguments,2),r=v.isFunction(t);return v.map(e,(function(e){var o=r?t:e[t];return null==o?o:o.apply(e,n)}))},v.pluck=function(e,t){return v.map(e,v.property(t))},v.where=function(e,t){return v.filter(e,v.matcher(t))},v.findWhere=function(e,t){return v.find(e,v.matcher(t))},v.max=function(e,t,n){var r,o,a=-1/0,i=-1/0;if(null==t&&null!=e)for(var s=0,c=(e=S(e)?e:v.values(e)).length;s<c;s++)(r=e[s])>a&&(a=r);else t=b(t,n),v.each(e,(function(e,n,r){((o=t(e,n,r))>i||o===-1/0&&a===-1/0)&&(a=e,i=o)}));return a},v.min=function(e,t,n){var r,o,a=1/0,i=1/0;if(null==t&&null!=e)for(var s=0,c=(e=S(e)?e:v.values(e)).length;s<c;s++)(r=e[s])<a&&(a=r);else t=b(t,n),v.each(e,(function(e,n,r){((o=t(e,n,r))<i||o===1/0&&a===1/0)&&(a=e,i=o)}));return a},v.shuffle=function(e){for(var t,n=S(e)?e:v.values(e),r=n.length,o=Array(r),a=0;a<r;a++)(t=v.random(0,a))!==a&&(o[a]=o[t]),o[t]=n[a];return o},v.sample=function(e,t,n){return null==t||n?(S(e)||(e=v.values(e)),e[v.random(e.length-1)]):v.shuffle(e).slice(0,Math.max(0,t))},v.sortBy=function(e,t,n){return t=b(t,n),v.pluck(v.map(e,(function(e,n,r){return{value:e,index:n,criteria:t(e,n,r)}})).sort((function(e,t){var n=e.criteria,r=t.criteria;if(n!==r){if(n>r||void 0===n)return 1;if(n<r||void 0===r)return-1}return e.index-t.index})),"value")};var D=function(e){return function(t,n,r){var o={};return n=b(n,r),v.each(t,(function(r,a){var i=n(r,a,t);e(o,r,i)})),o}};v.groupBy=D((function(e,t,n){v.has(e,n)?e[n].push(t):e[n]=[t]})),v.indexBy=D((function(e,t,n){e[n]=t})),v.countBy=D((function(e,t,n){v.has(e,n)?e[n]++:e[n]=1})),v.toArray=function(e){return e?v.isArray(e)?u.call(e):S(e)?v.map(e,v.identity):v.values(e):[]},v.size=function(e){return null==e?0:S(e)?e.length:v.keys(e).length},v.partition=function(e,t,n){t=b(t,n);var r=[],o=[];return v.each(e,(function(e,n,a){(t(e,n,a)?r:o).push(e)})),[r,o]},v.first=v.head=v.take=function(e,t,n){if(null!=e)return null==t||n?e[0]:v.initial(e,e.length-t)},v.initial=function(e,t,n){return u.call(e,0,Math.max(0,e.length-(null==t||n?1:t)))},v.last=function(e,t,n){if(null!=e)return null==t||n?e[e.length-1]:v.rest(e,Math.max(0,e.length-t))},v.rest=v.tail=v.drop=function(e,t,n){return u.call(e,null==t||n?1:t)},v.compact=function(e){return v.filter(e,v.identity)};var E=function(e,t,n,r){for(var o=[],a=0,i=r||0,s=P(e);i<s;i++){var c=e[i];if(S(c)&&(v.isArray(c)||v.isArguments(c))){t||(c=E(c,t,n));var u=0,l=c.length;for(o.length+=l;u<l;)o[a++]=c[u++]}else n||(o[a++]=c)}return o};function j(e){return function(t,n,r){n=b(n,r);for(var o=P(t),a=e>0?0:o-1;a>=0&&a<o;a+=e)if(n(t[a],a,t))return a;return-1}}function A(e,t,n){return function(r,o,a){var i=0,s=P(r);if("number"==typeof a)e>0?i=a>=0?a:Math.max(a+s,i):s=a>=0?Math.min(a+1,s):a+s+1;else if(n&&a&&s)return r[a=n(r,o)]===o?a:-1;if(o!=o)return(a=t(u.call(r,i,s),v.isNaN))>=0?a+i:-1;for(a=e>0?i:s-1;a>=0&&a<s;a+=e)if(r[a]===o)return a;return-1}}v.flatten=function(e,t){return E(e,t,!1)},v.without=function(e){return v.difference(e,u.call(arguments,1))},v.uniq=v.unique=function(e,t,n,r){v.isBoolean(t)||(r=n,n=t,t=!1),null!=n&&(n=b(n,r));for(var o=[],a=[],i=0,s=P(e);i<s;i++){var c=e[i],u=n?n(c,i,e):c;t?(i&&a===u||o.push(c),a=u):n?v.contains(a,u)||(a.push(u),o.push(c)):v.contains(o,c)||o.push(c)}return o},v.union=function(){return v.uniq(E(arguments,!0,!0))},v.intersection=function(e){for(var t=[],n=arguments.length,r=0,o=P(e);r<o;r++){var a=e[r];if(!v.contains(t,a)){for(var i=1;i<n&&v.contains(arguments[i],a);i++);i===n&&t.push(a)}}return t},v.difference=function(e){var t=E(arguments,!0,!0,1);return v.filter(e,(function(e){return!v.contains(t,e)}))},v.zip=function(){return v.unzip(arguments)},v.unzip=function(e){for(var t=e&&v.max(e,P).length||0,n=Array(t),r=0;r<t;r++)n[r]=v.pluck(e,r);return n},v.object=function(e,t){for(var n={},r=0,o=P(e);r<o;r++)t?n[e[r]]=t[r]:n[e[r][0]]=e[r][1];return n},v.findIndex=j(1),v.findLastIndex=j(-1),v.sortedIndex=function(e,t,n,r){for(var o=(n=b(n,r,1))(t),a=0,i=P(e);a<i;){var s=Math.floor((a+i)/2);n(e[s])<o?a=s+1:i=s}return a},v.indexOf=A(1,v.findIndex,v.sortedIndex),v.lastIndexOf=A(-1,v.findLastIndex),v.range=function(e,t,n){null==t&&(t=e||0,e=0),n=n||1;for(var r=Math.max(Math.ceil((t-e)/n),0),o=Array(r),a=0;a<r;a++,e+=n)o[a]=e;return o};var I=function(e,t,n,r,o){if(!(r instanceof t))return e.apply(n,o);var a=_(e.prototype),i=e.apply(a,o);return v.isObject(i)?i:a};v.bind=function(e,t){if(f&&e.bind===f)return f.apply(e,u.call(arguments,1));if(!v.isFunction(e))throw new TypeError("Bind must be called on a function");var n=u.call(arguments,2),r=function(){return I(e,r,t,this,n.concat(u.call(arguments)))};return r},v.partial=function(e){var t=u.call(arguments,1),n=function(){for(var r=0,o=t.length,a=Array(o),i=0;i<o;i++)a[i]=t[i]===v?arguments[r++]:t[i];for(;r<arguments.length;)a.push(arguments[r++]);return I(e,n,this,this,a)};return n},v.bindAll=function(e){var t,n,r=arguments.length;if(r<=1)throw new Error("bindAll must be passed function names");for(t=1;t<r;t++)e[n=arguments[t]]=v.bind(e[n],e);return e},v.memoize=function(e,t){var n=function(r){var o=n.cache,a=""+(t?t.apply(this,arguments):r);return v.has(o,a)||(o[a]=e.apply(this,arguments)),o[a]};return n.cache={},n},v.delay=function(e,t){var n=u.call(arguments,2);return setTimeout((function(){return e.apply(null,n)}),t)},v.defer=v.partial(v.delay,v,1),v.throttle=function(e,t,n){var r,o,a,i=null,s=0;n||(n={});var c=function(){s=!1===n.leading?0:v.now(),i=null,a=e.apply(r,o),i||(r=o=null)};return function(){var u=v.now();s||!1!==n.leading||(s=u);var l=t-(u-s);return r=this,o=arguments,l<=0||l>t?(i&&(clearTimeout(i),i=null),s=u,a=e.apply(r,o),i||(r=o=null)):i||!1===n.trailing||(i=setTimeout(c,l)),a}},v.debounce=function(e,t,n){var r,o,a,i,s,c=function(){var u=v.now()-i;u<t&&u>=0?r=setTimeout(c,t-u):(r=null,n||(s=e.apply(a,o),r||(a=o=null)))};return function(){a=this,o=arguments,i=v.now();var u=n&&!r;return r||(r=setTimeout(c,t)),u&&(s=e.apply(a,o),a=o=null),s}},v.wrap=function(e,t){return v.partial(t,e)},v.negate=function(e){return function(){return!e.apply(this,arguments)}},v.compose=function(){var e=arguments,t=e.length-1;return function(){for(var n=t,r=e[t].apply(this,arguments);n--;)r=e[n].call(this,r);return r}},v.after=function(e,t){return function(){if(--e<1)return t.apply(this,arguments)}},v.before=function(e,t){var n;return function(){return--e>0&&(n=t.apply(this,arguments)),e<=1&&(t=null),n}},v.once=v.partial(v.before,2);var O=!{toString:null}.propertyIsEnumerable("toString"),q=["valueOf","isPrototypeOf","toString","propertyIsEnumerable","hasOwnProperty","toLocaleString"];function R(e,t){var n=q.length,r=e.constructor,o=v.isFunction(r)&&r.prototype||i,a="constructor";for(v.has(e,a)&&!v.contains(t,a)&&t.push(a);n--;)(a=q[n])in e&&e[a]!==o[a]&&!v.contains(t,a)&&t.push(a)}v.keys=function(e){if(!v.isObject(e))return[];if(h)return h(e);var t=[];for(var n in e)v.has(e,n)&&t.push(n);return O&&R(e,t),t},v.allKeys=function(e){if(!v.isObject(e))return[];var t=[];for(var n in e)t.push(n);return O&&R(e,t),t},v.values=function(e){for(var t=v.keys(e),n=t.length,r=Array(n),o=0;o<n;o++)r[o]=e[t[o]];return r},v.mapObject=function(e,t,n){t=b(t,n);for(var r,o=v.keys(e),a=o.length,i={},s=0;s<a;s++)i[r=o[s]]=t(e[r],r,e);return i},v.pairs=function(e){for(var t=v.keys(e),n=t.length,r=Array(n),o=0;o<n;o++)r[o]=[t[o],e[t[o]]];return r},v.invert=function(e){for(var t={},n=v.keys(e),r=0,o=n.length;r<o;r++)t[e[n[r]]]=n[r];return t},v.functions=v.methods=function(e){var t=[];for(var n in e)v.isFunction(e[n])&&t.push(n);return t.sort()},v.extend=w(v.allKeys),v.extendOwn=v.assign=w(v.keys),v.findKey=function(e,t,n){t=b(t,n);for(var r,o=v.keys(e),a=0,i=o.length;a<i;a++)if(t(e[r=o[a]],r,e))return r},v.pick=function(e,t,n){var r,o,a={},i=e;if(null==i)return a;v.isFunction(t)?(o=v.allKeys(i),r=y(t,n)):(o=E(arguments,!1,!1,1),r=function(e,t,n){return t in n},i=Object(i));for(var s=0,c=o.length;s<c;s++){var u=o[s],l=i[u];r(l,u,i)&&(a[u]=l)}return a},v.omit=function(e,t,n){if(v.isFunction(t))t=v.negate(t);else{var r=v.map(E(arguments,!1,!1,1),String);t=function(e,t){return!v.contains(r,t)}}return v.pick(e,t,n)},v.defaults=w(v.allKeys,!0),v.create=function(e,t){var n=_(e);return t&&v.extendOwn(n,t),n},v.clone=function(e){return v.isObject(e)?v.isArray(e)?e.slice():v.extend({},e):e},v.tap=function(e,t){return t(e),e},v.isMatch=function(e,t){var n=v.keys(t),r=n.length;if(null==e)return!r;for(var o=Object(e),a=0;a<r;a++){var i=n[a];if(t[i]!==o[i]||!(i in o))return!1}return!0};var T=function(e,t,n,r){if(e===t)return 0!==e||1/e==1/t;if(null==e||null==t)return e===t;e instanceof v&&(e=e._wrapped),t instanceof v&&(t=t._wrapped);var o=l.call(e);if(o!==l.call(t))return!1;switch(o){case"[object RegExp]":case"[object String]":return""+e==""+t;case"[object Number]":return+e!=+e?+t!=+t:0==+e?1/+e==1/t:+e==+t;case"[object Date]":case"[object Boolean]":return+e==+t}var a="[object Array]"===o;if(!a){if("object"!=typeof e||"object"!=typeof t)return!1;var i=e.constructor,s=t.constructor;if(i!==s&&!(v.isFunction(i)&&i instanceof i&&v.isFunction(s)&&s instanceof s)&&"constructor"in e&&"constructor"in t)return!1}r=r||[];for(var c=(n=n||[]).length;c--;)if(n[c]===e)return r[c]===t;if(n.push(e),r.push(t),a){if((c=e.length)!==t.length)return!1;for(;c--;)if(!T(e[c],t[c],n,r))return!1}else{var u,d=v.keys(e);if(c=d.length,v.keys(t).length!==c)return!1;for(;c--;)if(u=d[c],!v.has(t,u)||!T(e[u],t[u],n,r))return!1}return n.pop(),r.pop(),!0};v.isEqual=function(e,t){return T(e,t)},v.isEmpty=function(e){return null==e||(S(e)&&(v.isArray(e)||v.isString(e)||v.isArguments(e))?0===e.length:0===v.keys(e).length)},v.isElement=function(e){return!(!e||1!==e.nodeType)},v.isArray=p||function(e){return"[object Array]"===l.call(e)},v.isObject=function(e){var t=typeof e;return"function"===t||"object"===t&&!!e},v.each(["Arguments","Function","String","Number","Date","RegExp","Error"],(function(e){v["is"+e]=function(t){return l.call(t)==="[object "+e+"]"}})),v.isArguments(arguments)||(v.isArguments=function(e){return v.has(e,"callee")}),"object"!=typeof Int8Array&&(v.isFunction=function(e){return"function"==typeof e||!1}),v.isFinite=function(e){return isFinite(e)&&!isNaN(parseFloat(e))},v.isNaN=function(e){return v.isNumber(e)&&e!==+e},v.isBoolean=function(e){return!0===e||!1===e||"[object Boolean]"===l.call(e)},v.isNull=function(e){return null===e},v.isUndefined=function(e){return void 0===e},v.has=function(e,t){return null!=e&&d.call(e,t)},v.noConflict=function(){return r._=o,this},v.identity=function(e){return e},v.constant=function(e){return function(){return e}},v.noop=function(){},v.property=x,v.propertyOf=function(e){return null==e?function(){}:function(t){return e[t]}},v.matcher=v.matches=function(e){return e=v.extendOwn({},e),function(t){return v.isMatch(t,e)}},v.times=function(e,t,n){var r=Array(Math.max(0,e));t=y(t,n,1);for(var o=0;o<e;o++)r[o]=t(o);return r},v.random=function(e,t){return null==t&&(t=e,e=0),e+Math.floor(Math.random()*(t-e+1))},v.now=Date.now||function(){return(new Date).getTime()};var B={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;"},M=v.invert(B),N=function(e){var t=function(t){return e[t]},n="(?:"+v.keys(e).join("|")+")",r=RegExp(n),o=RegExp(n,"g");return function(e){return e=null==e?"":""+e,r.test(e)?e.replace(o,t):e}};v.escape=N(B),v.unescape=N(M),v.result=function(e,t,n){var r=null==e?void 0:e[t];return void 0===r&&(r=n),v.isFunction(r)?r.call(e):r};var L=0;v.uniqueId=function(e){var t=++L+"";return e?e+t:t},v.templateSettings={evaluate:/<%([\s\S]+?)%>/g,interpolate:/<%=([\s\S]+?)%>/g,escape:/<%-([\s\S]+?)%>/g};var F=/(.)^/,G={"'":"'","\\":"\\","\r":"r","\n":"n","\u2028":"u2028","\u2029":"u2029"},U=/\\|'|\r|\n|\u2028|\u2029/g,z=function(e){return"\\"+G[e]};v.template=function(e,t,n){!t&&n&&(t=n),t=v.defaults({},t,v.templateSettings);var r=RegExp([(t.escape||F).source,(t.interpolate||F).source,(t.evaluate||F).source].join("|")+"|$","g"),o=0,a="__p+='";e.replace(r,(function(t,n,r,i,s){return a+=e.slice(o,s).replace(U,z),o=s+t.length,n?a+="'+\n((__t=("+n+"))==null?'':_.escape(__t))+\n'":r?a+="'+\n((__t=("+r+"))==null?'':__t)+\n'":i&&(a+="';\n"+i+"\n__p+='"),t})),a+="';\n",t.variable||(a="with(obj||{}){\n"+a+"}\n"),a="var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n"+a+"return __p;\n";try{var i=new Function(t.variable||"obj","_",a)}catch(e){throw e.source=a,e}var s=function(e){return i.call(this,e,v)},c=t.variable||"obj";return s.source="function("+c+"){\n"+a+"}",s},v.chain=function(e){var t=v(e);return t._chain=!0,t};var W=function(e,t){return e._chain?v(t).chain():t};v.mixin=function(e){v.each(v.functions(e),(function(t){var n=v[t]=e[t];v.prototype[t]=function(){var e=[this._wrapped];return c.apply(e,arguments),W(this,n.apply(v,e))}}))},v.mixin(v),v.each(["pop","push","reverse","shift","sort","splice","unshift"],(function(e){var t=a[e];v.prototype[e]=function(){var n=this._wrapped;return t.apply(n,arguments),"shift"!==e&&"splice"!==e||0!==n.length||delete n[0],W(this,n)}})),v.each(["concat","join","slice"],(function(e){var t=a[e];v.prototype[e]=function(){return W(this,t.apply(this._wrapped,arguments))}})),v.prototype.value=function(){return this._wrapped},v.prototype.valueOf=v.prototype.toJSON=v.prototype.value,v.prototype.toString=function(){return""+this._wrapped},void 0===(n=function(){return v}.apply(t,[]))||(e.exports=n)}).call(this)},2251:function(e,t,n){var r,o;!function(a,i){"use strict";e.exports?e.exports=i():void 0===(o="function"==typeof(r=i)?r.call(t,n,t,e):r)||(e.exports=o)}(0,(function(e){"use strict";var t=e&&e.IPv6;return{best:function(e){var t,n,r=e.toLowerCase().split(":"),o=r.length,a=8;for(""===r[0]&&""===r[1]&&""===r[2]?(r.shift(),r.shift()):""===r[0]&&""===r[1]?r.shift():""===r[o-1]&&""===r[o-2]&&r.pop(),-1!==r[(o=r.length)-1].indexOf(".")&&(a=7),t=0;t<o&&""!==r[t];t++);if(t<a)for(r.splice(t,1,"0000");r.length<a;)r.splice(t,0,"0000");for(var i=0;i<a;i++){n=r[i].split("");for(var s=0;s<3&&"0"===n[0]&&n.length>1;s++)n.splice(0,1);r[i]=n.join("")}var c=-1,u=0,l=0,d=-1,p=!1;for(i=0;i<a;i++)p?"0"===r[i]?l+=1:(p=!1,l>u&&(c=d,u=l)):"0"===r[i]&&(p=!0,d=i,l=1);l>u&&(c=d,u=l),u>1&&r.splice(c,u,""),o=r.length;var h="";for(""===r[0]&&(h=":"),i=0;i<o&&(h+=r[i],i!==o-1);i++)h+=":";return""===r[o-1]&&(h+=":"),h},noConflict:function(){return e.IPv6===this&&(e.IPv6=t),this}}}))},76106:function(e,t,n){var r,o;!function(a,i){"use strict";e.exports?e.exports=i():void 0===(o="function"==typeof(r=i)?r.call(t,n,t,e):r)||(e.exports=o)}(0,(function(e){"use strict";var t=e&&e.SecondLevelDomains,n={list:{ac:" com gov mil net org ",ae:" ac co gov mil name net org pro sch ",af:" com edu gov net org ",al:" com edu gov mil net org ",ao:" co ed gv it og pb ",ar:" com edu gob gov int mil net org tur ",at:" ac co gv or ",au:" asn com csiro edu gov id net org ",ba:" co com edu gov mil net org rs unbi unmo unsa untz unze ",bb:" biz co com edu gov info net org store tv ",bh:" biz cc com edu gov info net org ",bn:" com edu gov net org ",bo:" com edu gob gov int mil net org tv ",br:" adm adv agr am arq art ato b bio blog bmd cim cng cnt com coop ecn edu eng esp etc eti far flog fm fnd fot fst g12 ggf gov imb ind inf jor jus lel mat med mil mus net nom not ntr odo org ppg pro psc psi qsl rec slg srv tmp trd tur tv vet vlog wiki zlg ",bs:" com edu gov net org ",bz:" du et om ov rg ",ca:" ab bc mb nb nf nl ns nt nu on pe qc sk yk ",ck:" biz co edu gen gov info net org ",cn:" ac ah bj com cq edu fj gd gov gs gx gz ha hb he hi hl hn jl js jx ln mil net nm nx org qh sc sd sh sn sx tj tw xj xz yn zj ",co:" com edu gov mil net nom org ",cr:" ac c co ed fi go or sa ",cy:" ac biz com ekloges gov ltd name net org parliament press pro tm ",do:" art com edu gob gov mil net org sld web ",dz:" art asso com edu gov net org pol ",ec:" com edu fin gov info med mil net org pro ",eg:" com edu eun gov mil name net org sci ",er:" com edu gov ind mil net org rochest w ",es:" com edu gob nom org ",et:" biz com edu gov info name net org ",fj:" ac biz com info mil name net org pro ",fk:" ac co gov net nom org ",fr:" asso com f gouv nom prd presse tm ",gg:" co net org ",gh:" com edu gov mil org ",gn:" ac com gov net org ",gr:" com edu gov mil net org ",gt:" com edu gob ind mil net org ",gu:" com edu gov net org ",hk:" com edu gov idv net org ",hu:" 2000 agrar bolt casino city co erotica erotika film forum games hotel info ingatlan jogasz konyvelo lakas media news org priv reklam sex shop sport suli szex tm tozsde utazas video ",id:" ac co go mil net or sch web ",il:" ac co gov idf k12 muni net org ",in:" ac co edu ernet firm gen gov i ind mil net nic org res ",iq:" com edu gov i mil net org ",ir:" ac co dnssec gov i id net org sch ",it:" edu gov ",je:" co net org ",jo:" com edu gov mil name net org sch ",jp:" ac ad co ed go gr lg ne or ",ke:" ac co go info me mobi ne or sc ",kh:" com edu gov mil net org per ",ki:" biz com de edu gov info mob net org tel ",km:" asso com coop edu gouv k medecin mil nom notaires pharmaciens presse tm veterinaire ",kn:" edu gov net org ",kr:" ac busan chungbuk chungnam co daegu daejeon es gangwon go gwangju gyeongbuk gyeonggi gyeongnam hs incheon jeju jeonbuk jeonnam k kg mil ms ne or pe re sc seoul ulsan ",kw:" com edu gov net org ",ky:" com edu gov net org ",kz:" com edu gov mil net org ",lb:" com edu gov net org ",lk:" assn com edu gov grp hotel int ltd net ngo org sch soc web ",lr:" com edu gov net org ",lv:" asn com conf edu gov id mil net org ",ly:" com edu gov id med net org plc sch ",ma:" ac co gov m net org press ",mc:" asso tm ",me:" ac co edu gov its net org priv ",mg:" com edu gov mil nom org prd tm ",mk:" com edu gov inf name net org pro ",ml:" com edu gov net org presse ",mn:" edu gov org ",mo:" com edu gov net org ",mt:" com edu gov net org ",mv:" aero biz com coop edu gov info int mil museum name net org pro ",mw:" ac co com coop edu gov int museum net org ",mx:" com edu gob net org ",my:" com edu gov mil name net org sch ",nf:" arts com firm info net other per rec store web ",ng:" biz com edu gov mil mobi name net org sch ",ni:" ac co com edu gob mil net nom org ",np:" com edu gov mil net org ",nr:" biz com edu gov info net org ",om:" ac biz co com edu gov med mil museum net org pro sch ",pe:" com edu gob mil net nom org sld ",ph:" com edu gov i mil net ngo org ",pk:" biz com edu fam gob gok gon gop gos gov net org web ",pl:" art bialystok biz com edu gda gdansk gorzow gov info katowice krakow lodz lublin mil net ngo olsztyn org poznan pwr radom slupsk szczecin torun warszawa waw wroc wroclaw zgora ",pr:" ac biz com edu est gov info isla name net org pro prof ",ps:" com edu gov net org plo sec ",pw:" belau co ed go ne or ",ro:" arts com firm info nom nt org rec store tm www ",rs:" ac co edu gov in org ",sb:" com edu gov net org ",sc:" com edu gov net org ",sh:" co com edu gov net nom org ",sl:" com edu gov net org ",st:" co com consulado edu embaixada gov mil net org principe saotome store ",sv:" com edu gob org red ",sz:" ac co org ",tr:" av bbs bel biz com dr edu gen gov info k12 name net org pol tel tsk tv web ",tt:" aero biz cat co com coop edu gov info int jobs mil mobi museum name net org pro tel travel ",tw:" club com ebiz edu game gov idv mil net org ",mu:" ac co com gov net or org ",mz:" ac co edu gov org ",na:" co com ",nz:" ac co cri geek gen govt health iwi maori mil net org parliament school ",pa:" abo ac com edu gob ing med net nom org sld ",pt:" com edu gov int net nome org publ ",py:" com edu gov mil net org ",qa:" com edu gov mil net org ",re:" asso com nom ",ru:" ac adygeya altai amur arkhangelsk astrakhan bashkiria belgorod bir bryansk buryatia cbg chel chelyabinsk chita chukotka chuvashia com dagestan e-burg edu gov grozny int irkutsk ivanovo izhevsk jar joshkar-ola kalmykia kaluga kamchatka karelia kazan kchr kemerovo khabarovsk khakassia khv kirov koenig komi kostroma kranoyarsk kuban kurgan kursk lipetsk magadan mari mari-el marine mil mordovia mosreg msk murmansk nalchik net nnov nov novosibirsk nsk omsk orenburg org oryol penza perm pp pskov ptz rnd ryazan sakhalin samara saratov simbirsk smolensk spb stavropol stv surgut tambov tatarstan tom tomsk tsaritsyn tsk tula tuva tver tyumen udm udmurtia ulan-ude vladikavkaz vladimir vladivostok volgograd vologda voronezh vrn vyatka yakutia yamal yekaterinburg yuzhno-sakhalinsk ",rw:" ac co com edu gouv gov int mil net ",sa:" com edu gov med net org pub sch ",sd:" com edu gov info med net org tv ",se:" a ac b bd c d e f g h i k l m n o org p parti pp press r s t tm u w x y z ",sg:" com edu gov idn net org per ",sn:" art com edu gouv org perso univ ",sy:" com edu gov mil net news org ",th:" ac co go in mi net or ",tj:" ac biz co com edu go gov info int mil name net nic org test web ",tn:" agrinet com defense edunet ens fin gov ind info intl mincom nat net org perso rnrt rns rnu tourism ",tz:" ac co go ne or ",ua:" biz cherkassy chernigov chernovtsy ck cn co com crimea cv dn dnepropetrovsk donetsk dp edu gov if in ivano-frankivsk kh kharkov kherson khmelnitskiy kiev kirovograd km kr ks kv lg lugansk lutsk lviv me mk net nikolaev od odessa org pl poltava pp rovno rv sebastopol sumy te ternopil uzhgorod vinnica vn zaporizhzhe zhitomir zp zt ",ug:" ac co go ne or org sc ",uk:" ac bl british-library co cym gov govt icnet jet lea ltd me mil mod national-library-scotland nel net nhs nic nls org orgn parliament plc police sch scot soc ",us:" dni fed isa kids nsn ",uy:" com edu gub mil net org ",ve:" co com edu gob info mil net org web ",vi:" co com k12 net org ",vn:" ac biz com edu gov health info int name net org pro ",ye:" co com gov ltd me net org plc ",yu:" ac co edu gov org ",za:" ac agric alt bourse city co cybernet db edu gov grondar iaccess imt inca landesign law mil net ngo nis nom olivetti org pix school tm web ",zm:" ac co com edu gov net org sch ",com:"ar br cn de eu gb gr hu jpn kr no qc ru sa se uk us uy za ",net:"gb jp se uk ",org:"ae",de:"com "},has:function(e){var t=e.lastIndexOf(".");if(t<=0||t>=e.length-1)return!1;var r=e.lastIndexOf(".",t-1);if(r<=0||r>=t-1)return!1;var o=n.list[e.slice(t+1)];return!!o&&o.indexOf(" "+e.slice(r+1,t)+" ")>=0},is:function(e){var t=e.lastIndexOf(".");if(t<=0||t>=e.length-1)return!1;if(e.lastIndexOf(".",t-1)>=0)return!1;var r=n.list[e.slice(t+1)];return!!r&&r.indexOf(" "+e.slice(0,t)+" ")>=0},get:function(e){var t=e.lastIndexOf(".");if(t<=0||t>=e.length-1)return null;var r=e.lastIndexOf(".",t-1);if(r<=0||r>=t-1)return null;var o=n.list[e.slice(t+1)];return o?o.indexOf(" "+e.slice(r+1,t)+" ")<0?null:e.slice(r+1):null},noConflict:function(){return e.SecondLevelDomains===this&&(e.SecondLevelDomains=t),this}};return n}))},54998:function(e,t,n){var r,o,a;!function(i,s){"use strict";e.exports?e.exports=s(n(33132),n(2251),n(76106)):(o=[n(33132),n(2251),n(76106)],void 0===(a="function"==typeof(r=s)?r.apply(t,o):r)||(e.exports=a))}(0,(function(e,t,n,r){"use strict";var o=r&&r.URI;function a(e,t){var n=arguments.length>=1,r=arguments.length>=2;if(!(this instanceof a))return n?r?new a(e,t):new a(e):new a;if(void 0===e){if(n)throw new TypeError("undefined is not a valid argument for URI");e="undefined"!=typeof location?location.href+"":""}if(null===e&&n)throw new TypeError("null is not a valid argument for URI");return this.href(e),void 0!==t?this.absoluteTo(t):this}a.version="1.19.5";var i=a.prototype,s=Object.prototype.hasOwnProperty;function c(e){return e.replace(/([.*+?^=!:${}()|[\]\/\\])/g,"\\$1")}function u(e){return void 0===e?"Undefined":String(Object.prototype.toString.call(e)).slice(8,-1)}function l(e){return"Array"===u(e)}function d(e,t){var n,r,o={};if("RegExp"===u(t))o=null;else if(l(t))for(n=0,r=t.length;n<r;n++)o[t[n]]=!0;else o[t]=!0;for(n=0,r=e.length;n<r;n++)(o&&void 0!==o[e[n]]||!o&&t.test(e[n]))&&(e.splice(n,1),r--,n--);return e}function p(e,t){var n,r;if(l(t)){for(n=0,r=t.length;n<r;n++)if(!p(e,t[n]))return!1;return!0}var o=u(t);for(n=0,r=e.length;n<r;n++)if("RegExp"===o){if("string"==typeof e[n]&&e[n].match(t))return!0}else if(e[n]===t)return!0;return!1}function h(e,t){if(!l(e)||!l(t))return!1;if(e.length!==t.length)return!1;e.sort(),t.sort();for(var n=0,r=e.length;n<r;n++)if(e[n]!==t[n])return!1;return!0}function f(e){return e.replace(/^\/+|\/+$/g,"")}function g(e){return escape(e)}function m(e){return encodeURIComponent(e).replace(/[!'()*]/g,g).replace(/\*/g,"%2A")}a._parts=function(){return{protocol:null,username:null,password:null,hostname:null,urn:null,port:null,path:null,query:null,fragment:null,preventInvalidHostname:a.preventInvalidHostname,duplicateQueryParameters:a.duplicateQueryParameters,escapeQuerySpace:a.escapeQuerySpace}},a.preventInvalidHostname=!1,a.duplicateQueryParameters=!1,a.escapeQuerySpace=!0,a.protocol_expression=/^[a-z][a-z0-9.+-]*$/i,a.idn_expression=/[^a-z0-9\._-]/i,a.punycode_expression=/(xn--)/i,a.ip4_expression=/^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/,a.ip6_expression=/^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$/,a.find_uri_expression=/\b((?:[a-z][\w-]+:(?:\/{1,3}|[a-z0-9%])|www\d{0,3}[.]|[a-z0-9.\-]+[.][a-z]{2,4}\/)(?:[^\s()<>]+|\(([^\s()<>]+|(\([^\s()<>]+\)))*\))+(?:\(([^\s()<>]+|(\([^\s()<>]+\)))*\)|[^\s`!()\[\]{};:'".,<>?«»“”‘’]))/gi,a.findUri={start:/\b(?:([a-z][a-z0-9.+-]*:\/\/)|www\.)/gi,end:/[\s\r\n]|$/,trim:/[`!()\[\]{};:'".,<>?«»“”„‘’]+$/,parens:/(\([^\)]*\)|\[[^\]]*\]|\{[^}]*\}|<[^>]*>)/g},a.defaultPorts={http:"80",https:"443",ftp:"21",gopher:"70",ws:"80",wss:"443"},a.hostProtocols=["http","https"],a.invalid_hostname_characters=/[^a-zA-Z0-9\.\-:_]/,a.domAttributes={a:"href",blockquote:"cite",link:"href",base:"href",script:"src",form:"action",img:"src",area:"href",iframe:"src",embed:"src",source:"src",track:"src",input:"src",audio:"src",video:"src"},a.getDomAttribute=function(e){if(e&&e.nodeName){var t=e.nodeName.toLowerCase();if("input"!==t||"image"===e.type)return a.domAttributes[t]}},a.encode=m,a.decode=decodeURIComponent,a.iso8859=function(){a.encode=escape,a.decode=unescape},a.unicode=function(){a.encode=m,a.decode=decodeURIComponent},a.characters={pathname:{encode:{expression:/%(24|26|2B|2C|3B|3D|3A|40)/gi,map:{"%24":"$","%26":"&","%2B":"+","%2C":",","%3B":";","%3D":"=","%3A":":","%40":"@"}},decode:{expression:/[\/\?#]/g,map:{"/":"%2F","?":"%3F","#":"%23"}}},reserved:{encode:{expression:/%(21|23|24|26|27|28|29|2A|2B|2C|2F|3A|3B|3D|3F|40|5B|5D)/gi,map:{"%3A":":","%2F":"/","%3F":"?","%23":"#","%5B":"[","%5D":"]","%40":"@","%21":"!","%24":"$","%26":"&","%27":"'","%28":"(","%29":")","%2A":"*","%2B":"+","%2C":",","%3B":";","%3D":"="}}},urnpath:{encode:{expression:/%(21|24|27|28|29|2A|2B|2C|3B|3D|40)/gi,map:{"%21":"!","%24":"$","%27":"'","%28":"(","%29":")","%2A":"*","%2B":"+","%2C":",","%3B":";","%3D":"=","%40":"@"}},decode:{expression:/[\/\?#:]/g,map:{"/":"%2F","?":"%3F","#":"%23",":":"%3A"}}}},a.encodeQuery=function(e,t){var n=a.encode(e+"");return void 0===t&&(t=a.escapeQuerySpace),t?n.replace(/%20/g,"+"):n},a.decodeQuery=function(e,t){e+="",void 0===t&&(t=a.escapeQuerySpace);try{return a.decode(t?e.replace(/\+/g,"%20"):e)}catch(t){return e}};var v,y={encode:"encode",decode:"decode"},b=function(e,t){return function(n){try{return a[t](n+"").replace(a.characters[e][t].expression,(function(n){return a.characters[e][t].map[n]}))}catch(e){return n}}};for(v in y)a[v+"PathSegment"]=b("pathname",y[v]),a[v+"UrnPathSegment"]=b("urnpath",y[v]);var w=function(e,t,n){return function(r){var o;o=n?function(e){return a[t](a[n](e))}:a[t];for(var i=(r+"").split(e),s=0,c=i.length;s<c;s++)i[s]=o(i[s]);return i.join(e)}};function _(e){return function(t,n){return void 0===t?this._parts[e]||"":(this._parts[e]=t||null,this.build(!n),this)}}function x(e,t){return function(n,r){return void 0===n?this._parts[e]||"":(null!==n&&(n+="").charAt(0)===t&&(n=n.substring(1)),this._parts[e]=n,this.build(!r),this)}}a.decodePath=w("/","decodePathSegment"),a.decodeUrnPath=w(":","decodeUrnPathSegment"),a.recodePath=w("/","encodePathSegment","decode"),a.recodeUrnPath=w(":","encodeUrnPathSegment","decode"),a.encodeReserved=b("reserved","encode"),a.parse=function(e,t){var n;return t||(t={preventInvalidHostname:a.preventInvalidHostname}),(n=e.indexOf("#"))>-1&&(t.fragment=e.substring(n+1)||null,e=e.substring(0,n)),(n=e.indexOf("?"))>-1&&(t.query=e.substring(n+1)||null,e=e.substring(0,n)),"//"===e.substring(0,2)?(t.protocol=null,e=e.substring(2),e=a.parseAuthority(e,t)):(n=e.indexOf(":"))>-1&&(t.protocol=e.substring(0,n)||null,t.protocol&&!t.protocol.match(a.protocol_expression)?t.protocol=void 0:"//"===e.substring(n+1,n+3)?(e=e.substring(n+3),e=a.parseAuthority(e,t)):(e=e.substring(n+1),t.urn=!0)),t.path=e,t},a.parseHost=function(e,t){e||(e="");var n,r,o=(e=e.replace(/\\/g,"/")).indexOf("/");if(-1===o&&(o=e.length),"["===e.charAt(0))n=e.indexOf("]"),t.hostname=e.substring(1,n)||null,t.port=e.substring(n+2,o)||null,"/"===t.port&&(t.port=null);else{var i=e.indexOf(":"),s=e.indexOf("/"),c=e.indexOf(":",i+1);-1!==c&&(-1===s||c<s)?(t.hostname=e.substring(0,o)||null,t.port=null):(r=e.substring(0,o).split(":"),t.hostname=r[0]||null,t.port=r[1]||null)}return t.hostname&&"/"!==e.substring(o).charAt(0)&&(o++,e="/"+e),t.preventInvalidHostname&&a.ensureValidHostname(t.hostname,t.protocol),t.port&&a.ensureValidPort(t.port),e.substring(o)||"/"},a.parseAuthority=function(e,t){return e=a.parseUserinfo(e,t),a.parseHost(e,t)},a.parseUserinfo=function(e,t){var n=e;-1!==e.indexOf("\\")&&(e=e.replace(/\\/g,"/"));var r,o=e.indexOf("/"),i=e.lastIndexOf("@",o>-1?o:e.length-1);return i>-1&&(-1===o||i<o)?(r=e.substring(0,i).split(":"),t.username=r[0]?a.decode(r[0]):null,r.shift(),t.password=r[0]?a.decode(r.join(":")):null,e=n.substring(i+1)):(t.username=null,t.password=null),e},a.parseQuery=function(e,t){if(!e)return{};if(!(e=e.replace(/&+/g,"&").replace(/^\?*&*|&+$/g,"")))return{};for(var n,r,o,i={},c=e.split("&"),u=c.length,l=0;l<u;l++)n=c[l].split("="),r=a.decodeQuery(n.shift(),t),o=n.length?a.decodeQuery(n.join("="),t):null,s.call(i,r)?("string"!=typeof i[r]&&null!==i[r]||(i[r]=[i[r]]),i[r].push(o)):i[r]=o;return i},a.build=function(e){var t="",n=!1;return e.protocol&&(t+=e.protocol+":"),e.urn||!t&&!e.hostname||(t+="//",n=!0),t+=a.buildAuthority(e)||"","string"==typeof e.path&&("/"!==e.path.charAt(0)&&n&&(t+="/"),t+=e.path),"string"==typeof e.query&&e.query&&(t+="?"+e.query),"string"==typeof e.fragment&&e.fragment&&(t+="#"+e.fragment),t},a.buildHost=function(e){var t="";return e.hostname?(a.ip6_expression.test(e.hostname)?t+="["+e.hostname+"]":t+=e.hostname,e.port&&(t+=":"+e.port),t):""},a.buildAuthority=function(e){return a.buildUserinfo(e)+a.buildHost(e)},a.buildUserinfo=function(e){var t="";return e.username&&(t+=a.encode(e.username)),e.password&&(t+=":"+a.encode(e.password)),t&&(t+="@"),t},a.buildQuery=function(e,t,n){var r,o,i,c,u="";for(o in e)if(s.call(e,o))if(l(e[o]))for(r={},i=0,c=e[o].length;i<c;i++)void 0!==e[o][i]&&void 0===r[e[o][i]+""]&&(u+="&"+a.buildQueryParameter(o,e[o][i],n),!0!==t&&(r[e[o][i]+""]=!0));else void 0!==e[o]&&(u+="&"+a.buildQueryParameter(o,e[o],n));return u.substring(1)},a.buildQueryParameter=function(e,t,n){return a.encodeQuery(e,n)+(null!==t?"="+a.encodeQuery(t,n):"")},a.addQuery=function(e,t,n){if("object"==typeof t)for(var r in t)s.call(t,r)&&a.addQuery(e,r,t[r]);else{if("string"!=typeof t)throw new TypeError("URI.addQuery() accepts an object, string as the name parameter");if(void 0===e[t])return void(e[t]=n);"string"==typeof e[t]&&(e[t]=[e[t]]),l(n)||(n=[n]),e[t]=(e[t]||[]).concat(n)}},a.setQuery=function(e,t,n){if("object"==typeof t)for(var r in t)s.call(t,r)&&a.setQuery(e,r,t[r]);else{if("string"!=typeof t)throw new TypeError("URI.setQuery() accepts an object, string as the name parameter");e[t]=void 0===n?null:n}},a.removeQuery=function(e,t,n){var r,o,i;if(l(t))for(r=0,o=t.length;r<o;r++)e[t[r]]=void 0;else if("RegExp"===u(t))for(i in e)t.test(i)&&(e[i]=void 0);else if("object"==typeof t)for(i in t)s.call(t,i)&&a.removeQuery(e,i,t[i]);else{if("string"!=typeof t)throw new TypeError("URI.removeQuery() accepts an object, string, RegExp as the first parameter");void 0!==n?"RegExp"===u(n)?!l(e[t])&&n.test(e[t])?e[t]=void 0:e[t]=d(e[t],n):e[t]!==String(n)||l(n)&&1!==n.length?l(e[t])&&(e[t]=d(e[t],n)):e[t]=void 0:e[t]=void 0}},a.hasQuery=function(e,t,n,r){switch(u(t)){case"String":break;case"RegExp":for(var o in e)if(s.call(e,o)&&t.test(o)&&(void 0===n||a.hasQuery(e,o,n)))return!0;return!1;case"Object":for(var i in t)if(s.call(t,i)&&!a.hasQuery(e,i,t[i]))return!1;return!0;default:throw new TypeError("URI.hasQuery() accepts a string, regular expression or object as the name parameter")}switch(u(n)){case"Undefined":return t in e;case"Boolean":return n===Boolean(l(e[t])?e[t].length:e[t]);case"Function":return!!n(e[t],t,e);case"Array":return!!l(e[t])&&(r?p:h)(e[t],n);case"RegExp":return l(e[t])?!!r&&p(e[t],n):Boolean(e[t]&&e[t].match(n));case"Number":n=String(n);case"String":return l(e[t])?!!r&&p(e[t],n):e[t]===n;default:throw new TypeError("URI.hasQuery() accepts undefined, boolean, string, number, RegExp, Function as the value parameter")}},a.joinPaths=function(){for(var e=[],t=[],n=0,r=0;r<arguments.length;r++){var o=new a(arguments[r]);e.push(o);for(var i=o.segment(),s=0;s<i.length;s++)"string"==typeof i[s]&&t.push(i[s]),i[s]&&n++}if(!t.length||!n)return new a("");var c=new a("").segment(t);return""!==e[0].path()&&"/"!==e[0].path().slice(0,1)||c.path("/"+c.path()),c.normalize()},a.commonPath=function(e,t){var n,r=Math.min(e.length,t.length);for(n=0;n<r;n++)if(e.charAt(n)!==t.charAt(n)){n--;break}return n<1?e.charAt(0)===t.charAt(0)&&"/"===e.charAt(0)?"/":"":("/"===e.charAt(n)&&"/"===t.charAt(n)||(n=e.substring(0,n).lastIndexOf("/")),e.substring(0,n+1))},a.withinString=function(e,t,n){n||(n={});var r=n.start||a.findUri.start,o=n.end||a.findUri.end,i=n.trim||a.findUri.trim,s=n.parens||a.findUri.parens,c=/[a-z0-9-]=["']?$/i;for(r.lastIndex=0;;){var u=r.exec(e);if(!u)break;var l=u.index;if(n.ignoreHtml){var d=e.slice(Math.max(l-3,0),l);if(d&&c.test(d))continue}for(var p=l+e.slice(l).search(o),h=e.slice(l,p),f=-1;;){var g=s.exec(h);if(!g)break;var m=g.index+g[0].length;f=Math.max(f,m)}if(!((h=f>-1?h.slice(0,f)+h.slice(f).replace(i,""):h.replace(i,"")).length<=u[0].length||n.ignore&&n.ignore.test(h))){var v=t(h,l,p=l+h.length,e);void 0!==v?(v=String(v),e=e.slice(0,l)+v+e.slice(p),r.lastIndex=l+v.length):r.lastIndex=p}}return r.lastIndex=0,e},a.ensureValidHostname=function(t,n){var r=!!t,o=!1;if(!!n&&(o=p(a.hostProtocols,n)),o&&!r)throw new TypeError("Hostname cannot be empty, if protocol is "+n);if(t&&t.match(a.invalid_hostname_characters)){if(!e)throw new TypeError('Hostname "'+t+'" contains characters other than [A-Z0-9.-:_] and Punycode.js is not available');if(e.toASCII(t).match(a.invalid_hostname_characters))throw new TypeError('Hostname "'+t+'" contains characters other than [A-Z0-9.-:_]')}},a.ensureValidPort=function(e){if(e){var t=Number(e);if(!(/^[0-9]+$/.test(t)&&t>0&&t<65536))throw new TypeError('Port "'+e+'" is not a valid port')}},a.noConflict=function(e){if(e){var t={URI:this.noConflict()};return r.URITemplate&&"function"==typeof r.URITemplate.noConflict&&(t.URITemplate=r.URITemplate.noConflict()),r.IPv6&&"function"==typeof r.IPv6.noConflict&&(t.IPv6=r.IPv6.noConflict()),r.SecondLevelDomains&&"function"==typeof r.SecondLevelDomains.noConflict&&(t.SecondLevelDomains=r.SecondLevelDomains.noConflict()),t}return r.URI===this&&(r.URI=o),this},i.build=function(e){return!0===e?this._deferred_build=!0:(void 0===e||this._deferred_build)&&(this._string=a.build(this._parts),this._deferred_build=!1),this},i.clone=function(){return new a(this)},i.valueOf=i.toString=function(){return this.build(!1)._string},i.protocol=_("protocol"),i.username=_("username"),i.password=_("password"),i.hostname=_("hostname"),i.port=_("port"),i.query=x("query","?"),i.fragment=x("fragment","#"),i.search=function(e,t){var n=this.query(e,t);return"string"==typeof n&&n.length?"?"+n:n},i.hash=function(e,t){var n=this.fragment(e,t);return"string"==typeof n&&n.length?"#"+n:n},i.pathname=function(e,t){if(void 0===e||!0===e){var n=this._parts.path||(this._parts.hostname?"/":"");return e?(this._parts.urn?a.decodeUrnPath:a.decodePath)(n):n}return this._parts.urn?this._parts.path=e?a.recodeUrnPath(e):"":this._parts.path=e?a.recodePath(e):"/",this.build(!t),this},i.path=i.pathname,i.href=function(e,t){var n;if(void 0===e)return this.toString();this._string="",this._parts=a._parts();var r=e instanceof a,o="object"==typeof e&&(e.hostname||e.path||e.pathname);if(e.nodeName&&(e=e[a.getDomAttribute(e)]||"",o=!1),!r&&o&&void 0!==e.pathname&&(e=e.toString()),"string"==typeof e||e instanceof String)this._parts=a.parse(String(e),this._parts);else{if(!r&&!o)throw new TypeError("invalid input");var i=r?e._parts:e;for(n in i)"query"!==n&&s.call(this._parts,n)&&(this._parts[n]=i[n]);i.query&&this.query(i.query,!1)}return this.build(!t),this},i.is=function(e){var t=!1,r=!1,o=!1,i=!1,s=!1,c=!1,u=!1,l=!this._parts.urn;switch(this._parts.hostname&&(l=!1,r=a.ip4_expression.test(this._parts.hostname),o=a.ip6_expression.test(this._parts.hostname),s=(i=!(t=r||o))&&n&&n.has(this._parts.hostname),c=i&&a.idn_expression.test(this._parts.hostname),u=i&&a.punycode_expression.test(this._parts.hostname)),e.toLowerCase()){case"relative":return l;case"absolute":return!l;case"domain":case"name":return i;case"sld":return s;case"ip":return t;case"ip4":case"ipv4":case"inet4":return r;case"ip6":case"ipv6":case"inet6":return o;case"idn":return c;case"url":return!this._parts.urn;case"urn":return!!this._parts.urn;case"punycode":return u}return null};var k=i.protocol,P=i.port,S=i.hostname;i.protocol=function(e,t){if(e&&!(e=e.replace(/:(\/\/)?$/,"")).match(a.protocol_expression))throw new TypeError('Protocol "'+e+"\" contains characters other than [A-Z0-9.+-] or doesn't start with [A-Z]");return k.call(this,e,t)},i.scheme=i.protocol,i.port=function(e,t){return this._parts.urn?void 0===e?"":this:(void 0!==e&&(0===e&&(e=null),e&&(":"===(e+="").charAt(0)&&(e=e.substring(1)),a.ensureValidPort(e))),P.call(this,e,t))},i.hostname=function(e,t){if(this._parts.urn)return void 0===e?"":this;if(void 0!==e){var n={preventInvalidHostname:this._parts.preventInvalidHostname};if("/"!==a.parseHost(e,n))throw new TypeError('Hostname "'+e+'" contains characters other than [A-Z0-9.-]');e=n.hostname,this._parts.preventInvalidHostname&&a.ensureValidHostname(e,this._parts.protocol)}return S.call(this,e,t)},i.origin=function(e,t){if(this._parts.urn)return void 0===e?"":this;if(void 0===e){var n=this.protocol();return this.authority()?(n?n+"://":"")+this.authority():""}var r=a(e);return this.protocol(r.protocol()).authority(r.authority()).build(!t),this},i.host=function(e,t){if(this._parts.urn)return void 0===e?"":this;if(void 0===e)return this._parts.hostname?a.buildHost(this._parts):"";if("/"!==a.parseHost(e,this._parts))throw new TypeError('Hostname "'+e+'" contains characters other than [A-Z0-9.-]');return this.build(!t),this},i.authority=function(e,t){if(this._parts.urn)return void 0===e?"":this;if(void 0===e)return this._parts.hostname?a.buildAuthority(this._parts):"";if("/"!==a.parseAuthority(e,this._parts))throw new TypeError('Hostname "'+e+'" contains characters other than [A-Z0-9.-]');return this.build(!t),this},i.userinfo=function(e,t){if(this._parts.urn)return void 0===e?"":this;if(void 0===e){var n=a.buildUserinfo(this._parts);return n?n.substring(0,n.length-1):n}return"@"!==e[e.length-1]&&(e+="@"),a.parseUserinfo(e,this._parts),this.build(!t),this},i.resource=function(e,t){var n;return void 0===e?this.path()+this.search()+this.hash():(n=a.parse(e),this._parts.path=n.path,this._parts.query=n.query,this._parts.fragment=n.fragment,this.build(!t),this)},i.subdomain=function(e,t){if(this._parts.urn)return void 0===e?"":this;if(void 0===e){if(!this._parts.hostname||this.is("IP"))return"";var n=this._parts.hostname.length-this.domain().length-1;return this._parts.hostname.substring(0,n)||""}var r=this._parts.hostname.length-this.domain().length,o=this._parts.hostname.substring(0,r),i=new RegExp("^"+c(o));if(e&&"."!==e.charAt(e.length-1)&&(e+="."),-1!==e.indexOf(":"))throw new TypeError("Domains cannot contain colons");return e&&a.ensureValidHostname(e,this._parts.protocol),this._parts.hostname=this._parts.hostname.replace(i,e),this.build(!t),this},i.domain=function(e,t){if(this._parts.urn)return void 0===e?"":this;if("boolean"==typeof e&&(t=e,e=void 0),void 0===e){if(!this._parts.hostname||this.is("IP"))return"";var n=this._parts.hostname.match(/\./g);if(n&&n.length<2)return this._parts.hostname;var r=this._parts.hostname.length-this.tld(t).length-1;return r=this._parts.hostname.lastIndexOf(".",r-1)+1,this._parts.hostname.substring(r)||""}if(!e)throw new TypeError("cannot set domain empty");if(-1!==e.indexOf(":"))throw new TypeError("Domains cannot contain colons");if(a.ensureValidHostname(e,this._parts.protocol),!this._parts.hostname||this.is("IP"))this._parts.hostname=e;else{var o=new RegExp(c(this.domain())+"$");this._parts.hostname=this._parts.hostname.replace(o,e)}return this.build(!t),this},i.tld=function(e,t){if(this._parts.urn)return void 0===e?"":this;if("boolean"==typeof e&&(t=e,e=void 0),void 0===e){if(!this._parts.hostname||this.is("IP"))return"";var r=this._parts.hostname.lastIndexOf("."),o=this._parts.hostname.substring(r+1);return!0!==t&&n&&n.list[o.toLowerCase()]&&n.get(this._parts.hostname)||o}var a;if(!e)throw new TypeError("cannot set TLD empty");if(e.match(/[^a-zA-Z0-9-]/)){if(!n||!n.is(e))throw new TypeError('TLD "'+e+'" contains characters other than [A-Z0-9]');a=new RegExp(c(this.tld())+"$"),this._parts.hostname=this._parts.hostname.replace(a,e)}else{if(!this._parts.hostname||this.is("IP"))throw new ReferenceError("cannot set TLD on non-domain host");a=new RegExp(c(this.tld())+"$"),this._parts.hostname=this._parts.hostname.replace(a,e)}return this.build(!t),this},i.directory=function(e,t){if(this._parts.urn)return void 0===e?"":this;if(void 0===e||!0===e){if(!this._parts.path&&!this._parts.hostname)return"";if("/"===this._parts.path)return"/";var n=this._parts.path.length-this.filename().length-1,r=this._parts.path.substring(0,n)||(this._parts.hostname?"/":"");return e?a.decodePath(r):r}var o=this._parts.path.length-this.filename().length,i=this._parts.path.substring(0,o),s=new RegExp("^"+c(i));return this.is("relative")||(e||(e="/"),"/"!==e.charAt(0)&&(e="/"+e)),e&&"/"!==e.charAt(e.length-1)&&(e+="/"),e=a.recodePath(e),this._parts.path=this._parts.path.replace(s,e),this.build(!t),this},i.filename=function(e,t){if(this._parts.urn)return void 0===e?"":this;if("string"!=typeof e){if(!this._parts.path||"/"===this._parts.path)return"";var n=this._parts.path.lastIndexOf("/"),r=this._parts.path.substring(n+1);return e?a.decodePathSegment(r):r}var o=!1;"/"===e.charAt(0)&&(e=e.substring(1)),e.match(/\.?\//)&&(o=!0);var i=new RegExp(c(this.filename())+"$");return e=a.recodePath(e),this._parts.path=this._parts.path.replace(i,e),o?this.normalizePath(t):this.build(!t),this},i.suffix=function(e,t){if(this._parts.urn)return void 0===e?"":this;if(void 0===e||!0===e){if(!this._parts.path||"/"===this._parts.path)return"";var n,r,o=this.filename(),i=o.lastIndexOf(".");return-1===i?"":(n=o.substring(i+1),r=/^[a-z0-9%]+$/i.test(n)?n:"",e?a.decodePathSegment(r):r)}"."===e.charAt(0)&&(e=e.substring(1));var s,u=this.suffix();if(u)s=e?new RegExp(c(u)+"$"):new RegExp(c("."+u)+"$");else{if(!e)return this;this._parts.path+="."+a.recodePath(e)}return s&&(e=a.recodePath(e),this._parts.path=this._parts.path.replace(s,e)),this.build(!t),this},i.segment=function(e,t,n){var r=this._parts.urn?":":"/",o=this.path(),a="/"===o.substring(0,1),i=o.split(r);if(void 0!==e&&"number"!=typeof e&&(n=t,t=e,e=void 0),void 0!==e&&"number"!=typeof e)throw new Error('Bad segment "'+e+'", must be 0-based integer');if(a&&i.shift(),e<0&&(e=Math.max(i.length+e,0)),void 0===t)return void 0===e?i:i[e];if(null===e||void 0===i[e])if(l(t)){i=[];for(var s=0,c=t.length;s<c;s++)(t[s].length||i.length&&i[i.length-1].length)&&(i.length&&!i[i.length-1].length&&i.pop(),i.push(f(t[s])))}else(t||"string"==typeof t)&&(t=f(t),""===i[i.length-1]?i[i.length-1]=t:i.push(t));else t?i[e]=f(t):i.splice(e,1);return a&&i.unshift(""),this.path(i.join(r),n)},i.segmentCoded=function(e,t,n){var r,o,i;if("number"!=typeof e&&(n=t,t=e,e=void 0),void 0===t){if(l(r=this.segment(e,t,n)))for(o=0,i=r.length;o<i;o++)r[o]=a.decode(r[o]);else r=void 0!==r?a.decode(r):void 0;return r}if(l(t))for(o=0,i=t.length;o<i;o++)t[o]=a.encode(t[o]);else t="string"==typeof t||t instanceof String?a.encode(t):t;return this.segment(e,t,n)};var C=i.query;return i.query=function(e,t){if(!0===e)return a.parseQuery(this._parts.query,this._parts.escapeQuerySpace);if("function"==typeof e){var n=a.parseQuery(this._parts.query,this._parts.escapeQuerySpace),r=e.call(this,n);return this._parts.query=a.buildQuery(r||n,this._parts.duplicateQueryParameters,this._parts.escapeQuerySpace),this.build(!t),this}return void 0!==e&&"string"!=typeof e?(this._parts.query=a.buildQuery(e,this._parts.duplicateQueryParameters,this._parts.escapeQuerySpace),this.build(!t),this):C.call(this,e,t)},i.setQuery=function(e,t,n){var r=a.parseQuery(this._parts.query,this._parts.escapeQuerySpace);if("string"==typeof e||e instanceof String)r[e]=void 0!==t?t:null;else{if("object"!=typeof e)throw new TypeError("URI.addQuery() accepts an object, string as the name parameter");for(var o in e)s.call(e,o)&&(r[o]=e[o])}return this._parts.query=a.buildQuery(r,this._parts.duplicateQueryParameters,this._parts.escapeQuerySpace),"string"!=typeof e&&(n=t),this.build(!n),this},i.addQuery=function(e,t,n){var r=a.parseQuery(this._parts.query,this._parts.escapeQuerySpace);return a.addQuery(r,e,void 0===t?null:t),this._parts.query=a.buildQuery(r,this._parts.duplicateQueryParameters,this._parts.escapeQuerySpace),"string"!=typeof e&&(n=t),this.build(!n),this},i.removeQuery=function(e,t,n){var r=a.parseQuery(this._parts.query,this._parts.escapeQuerySpace);return a.removeQuery(r,e,t),this._parts.query=a.buildQuery(r,this._parts.duplicateQueryParameters,this._parts.escapeQuerySpace),"string"!=typeof e&&(n=t),this.build(!n),this},i.hasQuery=function(e,t,n){var r=a.parseQuery(this._parts.query,this._parts.escapeQuerySpace);return a.hasQuery(r,e,t,n)},i.setSearch=i.setQuery,i.addSearch=i.addQuery,i.removeSearch=i.removeQuery,i.hasSearch=i.hasQuery,i.normalize=function(){return this._parts.urn?this.normalizeProtocol(!1).normalizePath(!1).normalizeQuery(!1).normalizeFragment(!1).build():this.normalizeProtocol(!1).normalizeHostname(!1).normalizePort(!1).normalizePath(!1).normalizeQuery(!1).normalizeFragment(!1).build()},i.normalizeProtocol=function(e){return"string"==typeof this._parts.protocol&&(this._parts.protocol=this._parts.protocol.toLowerCase(),this.build(!e)),this},i.normalizeHostname=function(n){return this._parts.hostname&&(this.is("IDN")&&e?this._parts.hostname=e.toASCII(this._parts.hostname):this.is("IPv6")&&t&&(this._parts.hostname=t.best(this._parts.hostname)),this._parts.hostname=this._parts.hostname.toLowerCase(),this.build(!n)),this},i.normalizePort=function(e){return"string"==typeof this._parts.protocol&&this._parts.port===a.defaultPorts[this._parts.protocol]&&(this._parts.port=null,this.build(!e)),this},i.normalizePath=function(e){var t,n=this._parts.path;if(!n)return this;if(this._parts.urn)return this._parts.path=a.recodeUrnPath(this._parts.path),this.build(!e),this;if("/"===this._parts.path)return this;var r,o,i="";for("/"!==(n=a.recodePath(n)).charAt(0)&&(t=!0,n="/"+n),"/.."!==n.slice(-3)&&"/."!==n.slice(-2)||(n+="/"),n=n.replace(/(\/(\.\/)+)|(\/\.$)/g,"/").replace(/\/{2,}/g,"/"),t&&(i=n.substring(1).match(/^(\.\.\/)+/)||"")&&(i=i[0]);-1!==(r=n.search(/\/\.\.(\/|$)/));)0!==r?(-1===(o=n.substring(0,r).lastIndexOf("/"))&&(o=r),n=n.substring(0,o)+n.substring(r+3)):n=n.substring(3);return t&&this.is("relative")&&(n=i+n.substring(1)),this._parts.path=n,this.build(!e),this},i.normalizePathname=i.normalizePath,i.normalizeQuery=function(e){return"string"==typeof this._parts.query&&(this._parts.query.length?this.query(a.parseQuery(this._parts.query,this._parts.escapeQuerySpace)):this._parts.query=null,this.build(!e)),this},i.normalizeFragment=function(e){return this._parts.fragment||(this._parts.fragment=null,this.build(!e)),this},i.normalizeSearch=i.normalizeQuery,i.normalizeHash=i.normalizeFragment,i.iso8859=function(){var e=a.encode,t=a.decode;a.encode=escape,a.decode=decodeURIComponent;try{this.normalize()}finally{a.encode=e,a.decode=t}return this},i.unicode=function(){var e=a.encode,t=a.decode;a.encode=m,a.decode=unescape;try{this.normalize()}finally{a.encode=e,a.decode=t}return this},i.readable=function(){var t=this.clone();t.username("").password("").normalize();var n="";if(t._parts.protocol&&(n+=t._parts.protocol+"://"),t._parts.hostname&&(t.is("punycode")&&e?(n+=e.toUnicode(t._parts.hostname),t._parts.port&&(n+=":"+t._parts.port)):n+=t.host()),t._parts.hostname&&t._parts.path&&"/"!==t._parts.path.charAt(0)&&(n+="/"),n+=t.path(!0),t._parts.query){for(var r="",o=0,i=t._parts.query.split("&"),s=i.length;o<s;o++){var c=(i[o]||"").split("=");r+="&"+a.decodeQuery(c[0],this._parts.escapeQuerySpace).replace(/&/g,"%26"),void 0!==c[1]&&(r+="="+a.decodeQuery(c[1],this._parts.escapeQuerySpace).replace(/&/g,"%26"))}n+="?"+r.substring(1)}return n+a.decodeQuery(t.hash(),!0)},i.absoluteTo=function(e){var t,n,r,o=this.clone(),i=["protocol","username","password","hostname","port"];if(this._parts.urn)throw new Error("URNs do not have any generally defined hierarchical components");if(e instanceof a||(e=new a(e)),o._parts.protocol)return o;if(o._parts.protocol=e._parts.protocol,this._parts.hostname)return o;for(n=0;r=i[n];n++)o._parts[r]=e._parts[r];return o._parts.path?(".."===o._parts.path.substring(-2)&&(o._parts.path+="/"),"/"!==o.path().charAt(0)&&(t=(t=e.directory())||(0===e.path().indexOf("/")?"/":""),o._parts.path=(t?t+"/":"")+o._parts.path,o.normalizePath())):(o._parts.path=e._parts.path,o._parts.query||(o._parts.query=e._parts.query)),o.build(),o},i.relativeTo=function(e){var t,n,r,o,i,s=this.clone().normalize();if(s._parts.urn)throw new Error("URNs do not have any generally defined hierarchical components");if(e=new a(e).normalize(),t=s._parts,n=e._parts,o=s.path(),i=e.path(),"/"!==o.charAt(0))throw new Error("URI is already relative");if("/"!==i.charAt(0))throw new Error("Cannot calculate a URI relative to another relative URI");if(t.protocol===n.protocol&&(t.protocol=null),t.username!==n.username||t.password!==n.password)return s.build();if(null!==t.protocol||null!==t.username||null!==t.password)return s.build();if(t.hostname!==n.hostname||t.port!==n.port)return s.build();if(t.hostname=null,t.port=null,o===i)return t.path="",s.build();if(!(r=a.commonPath(o,i)))return s.build();var c=n.path.substring(r.length).replace(/[^\/]*$/,"").replace(/.*?\//g,"../");return t.path=c+t.path.substring(r.length)||"./",s.build()},i.equals=function(e){var t,n,r,o,i,c=this.clone(),u=new a(e),d={};if(c.normalize(),u.normalize(),c.toString()===u.toString())return!0;if(r=c.query(),o=u.query(),c.query(""),u.query(""),c.toString()!==u.toString())return!1;if(r.length!==o.length)return!1;for(i in t=a.parseQuery(r,this._parts.escapeQuerySpace),n=a.parseQuery(o,this._parts.escapeQuerySpace),t)if(s.call(t,i)){if(l(t[i])){if(!h(t[i],n[i]))return!1}else if(t[i]!==n[i])return!1;d[i]=!0}for(i in n)if(s.call(n,i)&&!d[i])return!1;return!0},i.preventInvalidHostname=function(e){return this._parts.preventInvalidHostname=!!e,this},i.duplicateQueryParameters=function(e){return this._parts.duplicateQueryParameters=!!e,this},i.escapeQuerySpace=function(e){return this._parts.escapeQuerySpace=!!e,this},a}))},33132:function(e,t,n){var r;e=n.nmd(e),function(o){t&&t.nodeType,e&&e.nodeType;var a="object"==typeof n.g&&n.g;a.global!==a&&a.window!==a&&a.self;var i,s=2147483647,c=36,u=/^xn--/,l=/[^\x20-\x7E]/,d=/[\x2E\u3002\uFF0E\uFF61]/g,p={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},h=Math.floor,f=String.fromCharCode;function g(e){throw new RangeError(p[e])}function m(e,t){for(var n=e.length,r=[];n--;)r[n]=t(e[n]);return r}function v(e,t){var n=e.split("@"),r="";return n.length>1&&(r=n[0]+"@",e=n[1]),r+m((e=e.replace(d,".")).split("."),t).join(".")}function y(e){for(var t,n,r=[],o=0,a=e.length;o<a;)(t=e.charCodeAt(o++))>=55296&&t<=56319&&o<a?56320==(64512&(n=e.charCodeAt(o++)))?r.push(((1023&t)<<10)+(1023&n)+65536):(r.push(t),o--):r.push(t);return r}function b(e){return m(e,(function(e){var t="";return e>65535&&(t+=f((e-=65536)>>>10&1023|55296),e=56320|1023&e),t+f(e)})).join("")}function w(e,t){return e+22+75*(e<26)-((0!=t)<<5)}function _(e,t,n){var r=0;for(e=n?h(e/700):e>>1,e+=h(e/t);e>455;r+=c)e=h(e/35);return h(r+36*e/(e+38))}function x(e){var t,n,r,o,a,i,u,l,d,p,f,m=[],v=e.length,y=0,w=128,x=72;for((n=e.lastIndexOf("-"))<0&&(n=0),r=0;r<n;++r)e.charCodeAt(r)>=128&&g("not-basic"),m.push(e.charCodeAt(r));for(o=n>0?n+1:0;o<v;){for(a=y,i=1,u=c;o>=v&&g("invalid-input"),((l=(f=e.charCodeAt(o++))-48<10?f-22:f-65<26?f-65:f-97<26?f-97:c)>=c||l>h((s-y)/i))&&g("overflow"),y+=l*i,!(l<(d=u<=x?1:u>=x+26?26:u-x));u+=c)i>h(s/(p=c-d))&&g("overflow"),i*=p;x=_(y-a,t=m.length+1,0==a),h(y/t)>s-w&&g("overflow"),w+=h(y/t),y%=t,m.splice(y++,0,w)}return b(m)}function k(e){var t,n,r,o,a,i,u,l,d,p,m,v,b,x,k,P=[];for(v=(e=y(e)).length,t=128,n=0,a=72,i=0;i<v;++i)(m=e[i])<128&&P.push(f(m));for(r=o=P.length,o&&P.push("-");r<v;){for(u=s,i=0;i<v;++i)(m=e[i])>=t&&m<u&&(u=m);for(u-t>h((s-n)/(b=r+1))&&g("overflow"),n+=(u-t)*b,t=u,i=0;i<v;++i)if((m=e[i])<t&&++n>s&&g("overflow"),m==t){for(l=n,d=c;!(l<(p=d<=a?1:d>=a+26?26:d-a));d+=c)k=l-p,x=c-p,P.push(f(w(p+k%x,0))),l=h(k/x);P.push(f(w(l,0))),a=_(n,b,r==o),n=0,++r}++n,++t}return P.join("")}i={version:"1.3.2",ucs2:{decode:y,encode:b},decode:x,encode:k,toASCII:function(e){return v(e,(function(e){return l.test(e)?"xn--"+k(e):e}))},toUnicode:function(e){return v(e,(function(e){return u.test(e)?x(e.slice(4).toLowerCase()):e}))}},void 0===(r=function(){return i}.call(t,n,t,e))||(e.exports=r)}()},94927:(e,t,n)=>{function r(e){try{if(!n.g.localStorage)return!1}catch(e){return!1}var t=n.g.localStorage[e];return null!=t&&"true"===String(t).toLowerCase()}e.exports=function(e,t){if(r("noDeprecation"))return e;var n=!1;return function(){if(!n){if(r("throwDeprecation"))throw new Error(t);r("traceDeprecation")?console.trace(t):console.warn(t),n=!0}return e.apply(this,arguments)}}},20384:e=>{e.exports=function(e){return e&&"object"==typeof e&&"function"==typeof e.copy&&"function"==typeof e.fill&&"function"==typeof e.readUInt8}},55955:(e,t,n)=>{"use strict";var r=n(82584),o=n(48662),a=n(86430),i=n(85692);function s(e){return e.call.bind(e)}var c="undefined"!=typeof BigInt,u="undefined"!=typeof Symbol,l=s(Object.prototype.toString),d=s(Number.prototype.valueOf),p=s(String.prototype.valueOf),h=s(Boolean.prototype.valueOf);if(c)var f=s(BigInt.prototype.valueOf);if(u)var g=s(Symbol.prototype.valueOf);function m(e,t){if("object"!=typeof e)return!1;try{return t(e),!0}catch(e){return!1}}function v(e){return"[object Map]"===l(e)}function y(e){return"[object Set]"===l(e)}function b(e){return"[object WeakMap]"===l(e)}function w(e){return"[object WeakSet]"===l(e)}function _(e){return"[object ArrayBuffer]"===l(e)}function x(e){return"undefined"!=typeof ArrayBuffer&&(_.working?_(e):e instanceof ArrayBuffer)}function k(e){return"[object DataView]"===l(e)}function P(e){return"undefined"!=typeof DataView&&(k.working?k(e):e instanceof DataView)}function S(e){return"[object SharedArrayBuffer]"===l(e)}function C(e){return"undefined"!=typeof SharedArrayBuffer&&(S.working?S(e):e instanceof SharedArrayBuffer)}function D(e){return m(e,d)}function E(e){return m(e,p)}function j(e){return m(e,h)}function A(e){return c&&m(e,f)}function I(e){return u&&m(e,g)}t.isArgumentsObject=r,t.isGeneratorFunction=o,t.isTypedArray=i,t.isPromise=function(e){return"undefined"!=typeof Promise&&e instanceof Promise||null!==e&&"object"==typeof e&&"function"==typeof e.then&&"function"==typeof e.catch},t.isArrayBufferView=function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):i(e)||P(e)},t.isUint8Array=function(e){return"Uint8Array"===a(e)},t.isUint8ClampedArray=function(e){return"Uint8ClampedArray"===a(e)},t.isUint16Array=function(e){return"Uint16Array"===a(e)},t.isUint32Array=function(e){return"Uint32Array"===a(e)},t.isInt8Array=function(e){return"Int8Array"===a(e)},t.isInt16Array=function(e){return"Int16Array"===a(e)},t.isInt32Array=function(e){return"Int32Array"===a(e)},t.isFloat32Array=function(e){return"Float32Array"===a(e)},t.isFloat64Array=function(e){return"Float64Array"===a(e)},t.isBigInt64Array=function(e){return"BigInt64Array"===a(e)},t.isBigUint64Array=function(e){return"BigUint64Array"===a(e)},v.working="undefined"!=typeof Map&&v(new Map),t.isMap=function(e){return"undefined"!=typeof Map&&(v.working?v(e):e instanceof Map)},y.working="undefined"!=typeof Set&&y(new Set),t.isSet=function(e){return"undefined"!=typeof Set&&(y.working?y(e):e instanceof Set)},b.working="undefined"!=typeof WeakMap&&b(new WeakMap),t.isWeakMap=function(e){return"undefined"!=typeof WeakMap&&(b.working?b(e):e instanceof WeakMap)},w.working="undefined"!=typeof WeakSet&&w(new WeakSet),t.isWeakSet=function(e){return w(e)},_.working="undefined"!=typeof ArrayBuffer&&_(new ArrayBuffer),t.isArrayBuffer=x,k.working="undefined"!=typeof ArrayBuffer&&"undefined"!=typeof DataView&&k(new DataView(new ArrayBuffer(1),0,1)),t.isDataView=P,S.working="undefined"!=typeof SharedArrayBuffer&&S(new SharedArrayBuffer),t.isSharedArrayBuffer=C,t.isAsyncFunction=function(e){return"[object AsyncFunction]"===l(e)},t.isMapIterator=function(e){return"[object Map Iterator]"===l(e)},t.isSetIterator=function(e){return"[object Set Iterator]"===l(e)},t.isGeneratorObject=function(e){return"[object Generator]"===l(e)},t.isWebAssemblyCompiledModule=function(e){return"[object WebAssembly.Module]"===l(e)},t.isNumberObject=D,t.isStringObject=E,t.isBooleanObject=j,t.isBigIntObject=A,t.isSymbolObject=I,t.isBoxedPrimitive=function(e){return D(e)||E(e)||j(e)||A(e)||I(e)},t.isAnyArrayBuffer=function(e){return"undefined"!=typeof Uint8Array&&(x(e)||C(e))},["isProxy","isExternal","isModuleNamespaceObject"].forEach((function(e){Object.defineProperty(t,e,{enumerable:!1,value:function(){throw new Error(e+" is not supported in userland")}})}))},89539:(e,t,n)=>{var r=n(34155),o=Object.getOwnPropertyDescriptors||function(e){for(var t=Object.keys(e),n={},r=0;r<t.length;r++)n[t[r]]=Object.getOwnPropertyDescriptor(e,t[r]);return n},a=/%[sdj%]/g;t.format=function(e){if(!b(e)){for(var t=[],n=0;n<arguments.length;n++)t.push(u(arguments[n]));return t.join(" ")}n=1;for(var r=arguments,o=r.length,i=String(e).replace(a,(function(e){if("%%"===e)return"%";if(n>=o)return e;switch(e){case"%s":return String(r[n++]);case"%d":return Number(r[n++]);case"%j":try{return JSON.stringify(r[n++])}catch(e){return"[Circular]"}default:return e}})),s=r[n];n<o;s=r[++n])v(s)||!x(s)?i+=" "+s:i+=" "+u(s);return i},t.deprecate=function(e,n){if(void 0!==r&&!0===r.noDeprecation)return e;if(void 0===r)return function(){return t.deprecate(e,n).apply(this,arguments)};var o=!1;return function(){if(!o){if(r.throwDeprecation)throw new Error(n);r.traceDeprecation?console.trace(n):console.error(n),o=!0}return e.apply(this,arguments)}};var i={},s=/^$/;if(r.env.NODE_DEBUG){var c=r.env.NODE_DEBUG;c=c.replace(/[|\\{}()[\]^$+?.]/g,"\\$&").replace(/\*/g,".*").replace(/,/g,"$|^").toUpperCase(),s=new RegExp("^"+c+"$","i")}function u(e,n){var r={seen:[],stylize:d};return arguments.length>=3&&(r.depth=arguments[2]),arguments.length>=4&&(r.colors=arguments[3]),m(n)?r.showHidden=n:n&&t._extend(r,n),w(r.showHidden)&&(r.showHidden=!1),w(r.depth)&&(r.depth=2),w(r.colors)&&(r.colors=!1),w(r.customInspect)&&(r.customInspect=!0),r.colors&&(r.stylize=l),p(r,e,r.depth)}function l(e,t){var n=u.styles[t];return n?"["+u.colors[n][0]+"m"+e+"["+u.colors[n][1]+"m":e}function d(e,t){return e}function p(e,n,r){if(e.customInspect&&n&&S(n.inspect)&&n.inspect!==t.inspect&&(!n.constructor||n.constructor.prototype!==n)){var o=n.inspect(r,e);return b(o)||(o=p(e,o,r)),o}var a=function(e,t){if(w(t))return e.stylize("undefined","undefined");if(b(t)){var n="'"+JSON.stringify(t).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return e.stylize(n,"string")}return y(t)?e.stylize(""+t,"number"):m(t)?e.stylize(""+t,"boolean"):v(t)?e.stylize("null","null"):void 0}(e,n);if(a)return a;var i=Object.keys(n),s=function(e){var t={};return e.forEach((function(e,n){t[e]=!0})),t}(i);if(e.showHidden&&(i=Object.getOwnPropertyNames(n)),P(n)&&(i.indexOf("message")>=0||i.indexOf("description")>=0))return h(n);if(0===i.length){if(S(n)){var c=n.name?": "+n.name:"";return e.stylize("[Function"+c+"]","special")}if(_(n))return e.stylize(RegExp.prototype.toString.call(n),"regexp");if(k(n))return e.stylize(Date.prototype.toString.call(n),"date");if(P(n))return h(n)}var u,l="",d=!1,x=["{","}"];return g(n)&&(d=!0,x=["[","]"]),S(n)&&(l=" [Function"+(n.name?": "+n.name:"")+"]"),_(n)&&(l=" "+RegExp.prototype.toString.call(n)),k(n)&&(l=" "+Date.prototype.toUTCString.call(n)),P(n)&&(l=" "+h(n)),0!==i.length||d&&0!=n.length?r<0?_(n)?e.stylize(RegExp.prototype.toString.call(n),"regexp"):e.stylize("[Object]","special"):(e.seen.push(n),u=d?function(e,t,n,r,o){for(var a=[],i=0,s=t.length;i<s;++i)A(t,String(i))?a.push(f(e,t,n,r,String(i),!0)):a.push("");return o.forEach((function(o){o.match(/^\d+$/)||a.push(f(e,t,n,r,o,!0))})),a}(e,n,r,s,i):i.map((function(t){return f(e,n,r,s,t,d)})),e.seen.pop(),function(e,t,n){return e.reduce((function(e,t){return t.indexOf("\n"),e+t.replace(/\u001b\[\d\d?m/g,"").length+1}),0)>60?n[0]+(""===t?"":t+"\n ")+" "+e.join(",\n  ")+" "+n[1]:n[0]+t+" "+e.join(", ")+" "+n[1]}(u,l,x)):x[0]+l+x[1]}function h(e){return"["+Error.prototype.toString.call(e)+"]"}function f(e,t,n,r,o,a){var i,s,c;if((c=Object.getOwnPropertyDescriptor(t,o)||{value:t[o]}).get?s=c.set?e.stylize("[Getter/Setter]","special"):e.stylize("[Getter]","special"):c.set&&(s=e.stylize("[Setter]","special")),A(r,o)||(i="["+o+"]"),s||(e.seen.indexOf(c.value)<0?(s=v(n)?p(e,c.value,null):p(e,c.value,n-1)).indexOf("\n")>-1&&(s=a?s.split("\n").map((function(e){return"  "+e})).join("\n").substr(2):"\n"+s.split("\n").map((function(e){return"   "+e})).join("\n")):s=e.stylize("[Circular]","special")),w(i)){if(a&&o.match(/^\d+$/))return s;(i=JSON.stringify(""+o)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(i=i.substr(1,i.length-2),i=e.stylize(i,"name")):(i=i.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),i=e.stylize(i,"string"))}return i+": "+s}function g(e){return Array.isArray(e)}function m(e){return"boolean"==typeof e}function v(e){return null===e}function y(e){return"number"==typeof e}function b(e){return"string"==typeof e}function w(e){return void 0===e}function _(e){return x(e)&&"[object RegExp]"===C(e)}function x(e){return"object"==typeof e&&null!==e}function k(e){return x(e)&&"[object Date]"===C(e)}function P(e){return x(e)&&("[object Error]"===C(e)||e instanceof Error)}function S(e){return"function"==typeof e}function C(e){return Object.prototype.toString.call(e)}function D(e){return e<10?"0"+e.toString(10):e.toString(10)}t.debuglog=function(e){if(e=e.toUpperCase(),!i[e])if(s.test(e)){var n=r.pid;i[e]=function(){var r=t.format.apply(t,arguments);console.error("%s %d: %s",e,n,r)}}else i[e]=function(){};return i[e]},t.inspect=u,u.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},u.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",regexp:"red"},t.types=n(55955),t.isArray=g,t.isBoolean=m,t.isNull=v,t.isNullOrUndefined=function(e){return null==e},t.isNumber=y,t.isString=b,t.isSymbol=function(e){return"symbol"==typeof e},t.isUndefined=w,t.isRegExp=_,t.types.isRegExp=_,t.isObject=x,t.isDate=k,t.types.isDate=k,t.isError=P,t.types.isNativeError=P,t.isFunction=S,t.isPrimitive=function(e){return null===e||"boolean"==typeof e||"number"==typeof e||"string"==typeof e||"symbol"==typeof e||void 0===e},t.isBuffer=n(20384);var E=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];function j(){var e=new Date,t=[D(e.getHours()),D(e.getMinutes()),D(e.getSeconds())].join(":");return[e.getDate(),E[e.getMonth()],t].join(" ")}function A(e,t){return Object.prototype.hasOwnProperty.call(e,t)}t.log=function(){console.log("%s - %s",j(),t.format.apply(t,arguments))},t.inherits=n(35717),t._extend=function(e,t){if(!t||!x(t))return e;for(var n=Object.keys(t),r=n.length;r--;)e[n[r]]=t[n[r]];return e};var I="undefined"!=typeof Symbol?Symbol("util.promisify.custom"):void 0;function O(e,t){if(!e){var n=new Error("Promise was rejected with a falsy value");n.reason=e,e=n}return t(e)}t.promisify=function(e){if("function"!=typeof e)throw new TypeError('The "original" argument must be of type Function');if(I&&e[I]){var t;if("function"!=typeof(t=e[I]))throw new TypeError('The "util.promisify.custom" argument must be of type Function');return Object.defineProperty(t,I,{value:t,enumerable:!1,writable:!1,configurable:!0}),t}function t(){for(var t,n,r=new Promise((function(e,r){t=e,n=r})),o=[],a=0;a<arguments.length;a++)o.push(arguments[a]);o.push((function(e,r){e?n(e):t(r)}));try{e.apply(this,o)}catch(e){n(e)}return r}return Object.setPrototypeOf(t,Object.getPrototypeOf(e)),I&&Object.defineProperty(t,I,{value:t,enumerable:!1,writable:!1,configurable:!0}),Object.defineProperties(t,o(e))},t.promisify.custom=I,t.callbackify=function(e){if("function"!=typeof e)throw new TypeError('The "original" argument must be of type Function');function t(){for(var t=[],n=0;n<arguments.length;n++)t.push(arguments[n]);var o=t.pop();if("function"!=typeof o)throw new TypeError("The last argument must be of type Function");var a=this,i=function(){return o.apply(a,arguments)};e.apply(this,t).then((function(e){r.nextTick(i.bind(null,null,e))}),(function(e){r.nextTick(O.bind(null,e,i))}))}return Object.setPrototypeOf(t,Object.getPrototypeOf(e)),Object.defineProperties(t,o(e)),t}},21614:(e,t,n)=>{"use strict";var r;n.r(t),n.d(t,{NIL:()=>A,parse:()=>m,stringify:()=>l,v1:()=>g,v3:()=>S,v4:()=>C,v5:()=>j,validate:()=>s,version:()=>I});var o=new Uint8Array(16);function a(){if(!r&&!(r="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return r(o)}const i=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i,s=function(e){return"string"==typeof e&&i.test(e)};for(var c=[],u=0;u<256;++u)c.push((u+256).toString(16).substr(1));const l=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=(c[e[t+0]]+c[e[t+1]]+c[e[t+2]]+c[e[t+3]]+"-"+c[e[t+4]]+c[e[t+5]]+"-"+c[e[t+6]]+c[e[t+7]]+"-"+c[e[t+8]]+c[e[t+9]]+"-"+c[e[t+10]]+c[e[t+11]]+c[e[t+12]]+c[e[t+13]]+c[e[t+14]]+c[e[t+15]]).toLowerCase();if(!s(n))throw TypeError("Stringified UUID is invalid");return n};var d,p,h=0,f=0;const g=function(e,t,n){var r=t&&n||0,o=t||new Array(16),i=(e=e||{}).node||d,s=void 0!==e.clockseq?e.clockseq:p;if(null==i||null==s){var c=e.random||(e.rng||a)();null==i&&(i=d=[1|c[0],c[1],c[2],c[3],c[4],c[5]]),null==s&&(s=p=16383&(c[6]<<8|c[7]))}var u=void 0!==e.msecs?e.msecs:Date.now(),g=void 0!==e.nsecs?e.nsecs:f+1,m=u-h+(g-f)/1e4;if(m<0&&void 0===e.clockseq&&(s=s+1&16383),(m<0||u>h)&&void 0===e.nsecs&&(g=0),g>=1e4)throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");h=u,f=g,p=s;var v=(1e4*(268435455&(u+=122192928e5))+g)%4294967296;o[r++]=v>>>24&255,o[r++]=v>>>16&255,o[r++]=v>>>8&255,o[r++]=255&v;var y=u/4294967296*1e4&268435455;o[r++]=y>>>8&255,o[r++]=255&y,o[r++]=y>>>24&15|16,o[r++]=y>>>16&255,o[r++]=s>>>8|128,o[r++]=255&s;for(var b=0;b<6;++b)o[r+b]=i[b];return t||l(o)},m=function(e){if(!s(e))throw TypeError("Invalid UUID");var t,n=new Uint8Array(16);return n[0]=(t=parseInt(e.slice(0,8),16))>>>24,n[1]=t>>>16&255,n[2]=t>>>8&255,n[3]=255&t,n[4]=(t=parseInt(e.slice(9,13),16))>>>8,n[5]=255&t,n[6]=(t=parseInt(e.slice(14,18),16))>>>8,n[7]=255&t,n[8]=(t=parseInt(e.slice(19,23),16))>>>8,n[9]=255&t,n[10]=(t=parseInt(e.slice(24,36),16))/1099511627776&255,n[11]=t/4294967296&255,n[12]=t>>>24&255,n[13]=t>>>16&255,n[14]=t>>>8&255,n[15]=255&t,n};function v(e,t,n){function r(e,r,o,a){if("string"==typeof e&&(e=function(e){e=unescape(encodeURIComponent(e));for(var t=[],n=0;n<e.length;++n)t.push(e.charCodeAt(n));return t}(e)),"string"==typeof r&&(r=m(r)),16!==r.length)throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)");var i=new Uint8Array(16+e.length);if(i.set(r),i.set(e,r.length),(i=n(i))[6]=15&i[6]|t,i[8]=63&i[8]|128,o){a=a||0;for(var s=0;s<16;++s)o[a+s]=i[s];return o}return l(i)}try{r.name=e}catch(e){}return r.DNS="6ba7b810-9dad-11d1-80b4-00c04fd430c8",r.URL="6ba7b811-9dad-11d1-80b4-00c04fd430c8",r}function y(e){return 14+(e+64>>>9<<4)+1}function b(e,t){var n=(65535&e)+(65535&t);return(e>>16)+(t>>16)+(n>>16)<<16|65535&n}function w(e,t,n,r,o,a){return b((i=b(b(t,e),b(r,a)))<<(s=o)|i>>>32-s,n);var i,s}function _(e,t,n,r,o,a,i){return w(t&n|~t&r,e,t,o,a,i)}function x(e,t,n,r,o,a,i){return w(t&r|n&~r,e,t,o,a,i)}function k(e,t,n,r,o,a,i){return w(t^n^r,e,t,o,a,i)}function P(e,t,n,r,o,a,i){return w(n^(t|~r),e,t,o,a,i)}const S=v("v3",48,(function(e){if("string"==typeof e){var t=unescape(encodeURIComponent(e));e=new Uint8Array(t.length);for(var n=0;n<t.length;++n)e[n]=t.charCodeAt(n)}return function(e){for(var t=[],n=32*e.length,r="0123456789abcdef",o=0;o<n;o+=8){var a=e[o>>5]>>>o%32&255,i=parseInt(r.charAt(a>>>4&15)+r.charAt(15&a),16);t.push(i)}return t}(function(e,t){e[t>>5]|=128<<t%32,e[y(t)-1]=t;for(var n=1732584193,r=-271733879,o=-1732584194,a=271733878,i=0;i<e.length;i+=16){var s=n,c=r,u=o,l=a;n=_(n,r,o,a,e[i],7,-680876936),a=_(a,n,r,o,e[i+1],12,-389564586),o=_(o,a,n,r,e[i+2],17,606105819),r=_(r,o,a,n,e[i+3],22,-1044525330),n=_(n,r,o,a,e[i+4],7,-176418897),a=_(a,n,r,o,e[i+5],12,1200080426),o=_(o,a,n,r,e[i+6],17,-1473231341),r=_(r,o,a,n,e[i+7],22,-45705983),n=_(n,r,o,a,e[i+8],7,1770035416),a=_(a,n,r,o,e[i+9],12,-1958414417),o=_(o,a,n,r,e[i+10],17,-42063),r=_(r,o,a,n,e[i+11],22,-1990404162),n=_(n,r,o,a,e[i+12],7,1804603682),a=_(a,n,r,o,e[i+13],12,-40341101),o=_(o,a,n,r,e[i+14],17,-1502002290),n=x(n,r=_(r,o,a,n,e[i+15],22,1236535329),o,a,e[i+1],5,-165796510),a=x(a,n,r,o,e[i+6],9,-1069501632),o=x(o,a,n,r,e[i+11],14,643717713),r=x(r,o,a,n,e[i],20,-373897302),n=x(n,r,o,a,e[i+5],5,-701558691),a=x(a,n,r,o,e[i+10],9,38016083),o=x(o,a,n,r,e[i+15],14,-660478335),r=x(r,o,a,n,e[i+4],20,-405537848),n=x(n,r,o,a,e[i+9],5,568446438),a=x(a,n,r,o,e[i+14],9,-1019803690),o=x(o,a,n,r,e[i+3],14,-187363961),r=x(r,o,a,n,e[i+8],20,1163531501),n=x(n,r,o,a,e[i+13],5,-1444681467),a=x(a,n,r,o,e[i+2],9,-51403784),o=x(o,a,n,r,e[i+7],14,1735328473),n=k(n,r=x(r,o,a,n,e[i+12],20,-1926607734),o,a,e[i+5],4,-378558),a=k(a,n,r,o,e[i+8],11,-2022574463),o=k(o,a,n,r,e[i+11],16,1839030562),r=k(r,o,a,n,e[i+14],23,-35309556),n=k(n,r,o,a,e[i+1],4,-1530992060),a=k(a,n,r,o,e[i+4],11,1272893353),o=k(o,a,n,r,e[i+7],16,-155497632),r=k(r,o,a,n,e[i+10],23,-1094730640),n=k(n,r,o,a,e[i+13],4,681279174),a=k(a,n,r,o,e[i],11,-358537222),o=k(o,a,n,r,e[i+3],16,-722521979),r=k(r,o,a,n,e[i+6],23,76029189),n=k(n,r,o,a,e[i+9],4,-640364487),a=k(a,n,r,o,e[i+12],11,-421815835),o=k(o,a,n,r,e[i+15],16,530742520),n=P(n,r=k(r,o,a,n,e[i+2],23,-995338651),o,a,e[i],6,-198630844),a=P(a,n,r,o,e[i+7],10,1126891415),o=P(o,a,n,r,e[i+14],15,-1416354905),r=P(r,o,a,n,e[i+5],21,-57434055),n=P(n,r,o,a,e[i+12],6,1700485571),a=P(a,n,r,o,e[i+3],10,-1894986606),o=P(o,a,n,r,e[i+10],15,-1051523),r=P(r,o,a,n,e[i+1],21,-2054922799),n=P(n,r,o,a,e[i+8],6,1873313359),a=P(a,n,r,o,e[i+15],10,-30611744),o=P(o,a,n,r,e[i+6],15,-1560198380),r=P(r,o,a,n,e[i+13],21,1309151649),n=P(n,r,o,a,e[i+4],6,-145523070),a=P(a,n,r,o,e[i+11],10,-1120210379),o=P(o,a,n,r,e[i+2],15,718787259),r=P(r,o,a,n,e[i+9],21,-343485551),n=b(n,s),r=b(r,c),o=b(o,u),a=b(a,l)}return[n,r,o,a]}(function(e){if(0===e.length)return[];for(var t=8*e.length,n=new Uint32Array(y(t)),r=0;r<t;r+=8)n[r>>5]|=(255&e[r/8])<<r%32;return n}(e),8*e.length))})),C=function(e,t,n){var r=(e=e||{}).random||(e.rng||a)();if(r[6]=15&r[6]|64,r[8]=63&r[8]|128,t){n=n||0;for(var o=0;o<16;++o)t[n+o]=r[o];return t}return l(r)};function D(e,t,n,r){switch(e){case 0:return t&n^~t&r;case 1:return t^n^r;case 2:return t&n^t&r^n&r;case 3:return t^n^r}}function E(e,t){return e<<t|e>>>32-t}const j=v("v5",80,(function(e){var t=[1518500249,1859775393,2400959708,3395469782],n=[1732584193,4023233417,2562383102,271733878,3285377520];if("string"==typeof e){var r=unescape(encodeURIComponent(e));e=[];for(var o=0;o<r.length;++o)e.push(r.charCodeAt(o))}else Array.isArray(e)||(e=Array.prototype.slice.call(e));e.push(128);for(var a=e.length/4+2,i=Math.ceil(a/16),s=new Array(i),c=0;c<i;++c){for(var u=new Uint32Array(16),l=0;l<16;++l)u[l]=e[64*c+4*l]<<24|e[64*c+4*l+1]<<16|e[64*c+4*l+2]<<8|e[64*c+4*l+3];s[c]=u}s[i-1][14]=8*(e.length-1)/Math.pow(2,32),s[i-1][14]=Math.floor(s[i-1][14]),s[i-1][15]=8*(e.length-1)&4294967295;for(var d=0;d<i;++d){for(var p=new Uint32Array(80),h=0;h<16;++h)p[h]=s[d][h];for(var f=16;f<80;++f)p[f]=E(p[f-3]^p[f-8]^p[f-14]^p[f-16],1);for(var g=n[0],m=n[1],v=n[2],y=n[3],b=n[4],w=0;w<80;++w){var _=Math.floor(w/20),x=E(g,5)+D(_,m,v,y)+b+t[_]+p[w]>>>0;b=y,y=v,v=E(m,30)>>>0,m=g,g=x}n[0]=n[0]+g>>>0,n[1]=n[1]+m>>>0,n[2]=n[2]+v>>>0,n[3]=n[3]+y>>>0,n[4]=n[4]+b>>>0}return[n[0]>>24&255,n[0]>>16&255,n[0]>>8&255,255&n[0],n[1]>>24&255,n[1]>>16&255,n[1]>>8&255,255&n[1],n[2]>>24&255,n[2]>>16&255,n[2]>>8&255,255&n[2],n[3]>>24&255,n[3]>>16&255,n[3]>>8&255,255&n[3],n[4]>>24&255,n[4]>>16&255,n[4]>>8&255,255&n[4]]})),A="00000000-0000-0000-0000-000000000000",I=function(e){if(!s(e))throw TypeError("Invalid UUID");return parseInt(e.substr(14,1),16)}},45840:(e,t,n)=>{var r;try{r=n(284)}catch(e){}finally{if(r||"undefined"==typeof window||(r=window),!r)throw new Error("Could not determine global this")}var o=r.WebSocket||r.MozWebSocket,a=n(79387);function i(e,t){return t?new o(e,t):new o(e)}o&&["CONNECTING","OPEN","CLOSING","CLOSED"].forEach((function(e){Object.defineProperty(i,e,{get:function(){return o[e]}})})),e.exports={w3cwebsocket:o?i:null,version:a}},79387:(e,t,n)=>{e.exports=n(12847).version},12847:e=>{"use strict";e.exports={version:"1.0.33"}},86430:(e,t,n)=>{"use strict";var r=n(49804),o=n(16314),a=n(21924),i=a("Object.prototype.toString"),s=n(41405)()&&"symbol"==typeof Symbol.toStringTag,c=o(),u=a("String.prototype.slice"),l={},d=n(94079),p=Object.getPrototypeOf;s&&d&&p&&r(c,(function(e){if("function"==typeof n.g[e]){var t=new n.g[e];if(!(Symbol.toStringTag in t))throw new EvalError("this engine has support for Symbol.toStringTag, but "+e+" does not have the property! Please report this.");var r=p(t),o=d(r,Symbol.toStringTag);if(!o){var a=p(r);o=d(a,Symbol.toStringTag)}l[e]=o.get}}));var h=n(85692);e.exports=function(e){return!!h(e)&&(s?function(e){var t=!1;return r(l,(function(n,r){if(!t)try{var o=n.call(e);o===r&&(t=o)}catch(e){}})),t}(e):u(i(e),8,-1))}},52479:e=>{e.exports=function e(t,n){if(t&&n)return e(t)(n);if("function"!=typeof t)throw new TypeError("need wrapper function");return Object.keys(t).forEach((function(e){r[e]=t[e]})),r;function r(){for(var e=new Array(arguments.length),n=0;n<e.length;n++)e[n]=arguments[n];var r=t.apply(this,e),o=e[e.length-1];return"function"==typeof r&&r!==o&&Object.keys(o).forEach((function(e){r[e]=o[e]})),r}}},29326:(e,t)=>{"use strict";t.MediaStream=window.MediaStream,t.MediaStreamTrack=window.MediaStreamTrack,t.RTCDataChannel=window.RTCDataChannel,t.RTCDataChannelEvent=window.RTCDataChannelEvent,t.RTCDtlsTransport=window.RTCDtlsTransport,t.RTCIceCandidate=window.RTCIceCandidate,t.RTCIceTransport=window.RTCIceTransport,t.RTCPeerConnection=window.RTCPeerConnection,t.RTCPeerConnectionIceEvent=window.RTCPeerConnectionIceEvent,t.RTCRtpReceiver=window.RTCRtpReceiver,t.RTCRtpSender=window.RTCRtpSender,t.RTCRtpTransceiver=window.RTCRtpTransceiver,t.RTCSctpTransport=window.RTCSctpTransport,t.RTCSessionDescription=window.RTCSessionDescription,t.getUserMedia=window.getUserMedia,t.mediaDevices=navigator.mediaDevices},65338:e=>{"use strict";e.exports=require("canvas")},97680:()=>{},98510:()=>{},12993:()=>{},94219:()=>{},14863:()=>{}},__webpack_module_cache__={};function __webpack_require__(e){if(__webpack_module_cache__[e])return __webpack_module_cache__[e].exports;var t=__webpack_module_cache__[e]={id:e,loaded:!1,exports:{}};return __webpack_modules__[e].call(t.exports,t,t.exports,__webpack_require__),t.loaded=!0,t.exports}__webpack_require__.d=(e,t)=>{for(var n in t)__webpack_require__.o(t,n)&&!__webpack_require__.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},__webpack_require__.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{const e=__webpack_require__(31405),t={noflo:__webpack_require__(76445),"noflo-assembly":__webpack_require__(16618),"noflo-runtime":__webpack_require__(97116),"fbp-protocol-client":__webpack_require__(38916)};window.require=e=>{if(t[e])return t[e];throw new Error(`Module '${e}' not available`)};const n={baseDir:"browser",defaultPermissions:["protocol:graph","protocol:component","protocol:network","protocol:runtime","component:getsource","component:setsource"]},r=function(e){e=e.replace(/[\[]/,"\\[").replace(/[\]]/,"\\]");const t=new RegExp("[\\?&]"+e+"=([^&#]*)").exec(location.search);return null===t?"":decodeURIComponent(t[1].replace(/\+/g," "))}("fbp_protocol")||"opener";if("opener"==r){const t=`https://app.flowhub.io#runtime/endpoint?${encodeURIComponent("protocol=opener&address="+window.location.href)}`,r=document.getElementById("flowhub_debug_url");r&&(r.className="debug",r.href=t,e.opener(n,r))}else"iframe"==r&&e.iframe(n);"serviceWorker"in navigator&&navigator.serviceWorker.register("service-worker.js")})()})();
//# sourceMappingURL=everything.js.map